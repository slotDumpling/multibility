{"version":3,"file":"static/js/98.7ad0be7a.chunk.js","mappings":"8HAEA,KAAeA,EAAAA,EAAAA,GAAqB,CAClCC,UAAW,kD,qUCcPC,EAAwB,CAC5BC,KAAM,OACNC,MAAO,QACPC,KAAM,SAGFC,EAAa,SAACC,EAAWC,GAC7B,MAAO,CAAE,UAAWD,EAAI,KAAM,UAAWC,EAAI,KAC9C,EACKC,EAAa,SAACC,EAAsCC,GACxD,IAAMC,EAA0C,CAAC,EAKjD,OAJAC,OAAOC,QAAQJ,GAAKK,SAAQ,YAAmB,IAAD,eAAhBC,EAAgB,KAAXC,EAAW,KACxCN,IAAMM,GAASN,GACnBC,EAAO,KAAOI,GAAOC,CACtB,IACML,CACR,EAEYM,EAIR,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WACxB,GAAwCC,EAAAA,EAAAA,UAA4B,CAAC,GAArE,eAAOC,EAAP,KAAqBC,EAArB,KAEQjB,EAASc,EAATd,EAAGC,EAAMa,EAANb,EACX,OACE,iBACEiB,UAAU,2BACV,eAAcL,EACdM,MAAOpB,EAAWC,EAAGC,GAHvB,WAKE,SAAC,IAAD,CACEmB,QAAQ,QACRC,UAAU,SACVC,iBAAiB,YACjBC,kBAAmB,SAACC,GAAD,OAAOA,EAAEC,aAAT,EACnBC,sBAAoB,EACpBC,SACE,SAACC,EAAA,GAAD,CACEC,eAAgB,SAACC,GAAa,IAAD,EAC3Bb,GAAgB,SAACc,GAAD,eAAC,UAAeA,GAASD,EAAzB,IAChB,UAAAlB,EAAQoB,eAAR,SAAiBC,YAAYH,EAC9B,EACDI,SAAUlB,IAZhB,UAgBE,SAAC,KAAD,QAAQmB,MAAM,SAACC,EAAA,EAAD,KAA0BzC,OAE1C,SAAC,KAAD,QACEwC,MAAM,SAACE,EAAA,EAAD,IACNC,QAAS,kCAAM1B,EAAQoB,eAAd,aAAM,EAAiBO,mBAAvB,GACL5C,KAEN,SAAC,KAAD,QACE6C,QAAM,EACNL,MAAM,SAACM,EAAA,EAAD,IACNH,QAAS,kCAAM1B,EAAQoB,eAAd,aAAM,EAAiBU,gBAAvB,GACL/C,MAIX,EAEYgD,EAIR,SAAC,GAAwC,IAAD,MAArCC,EAAqC,EAArCA,UAAWhC,EAA0B,EAA1BA,QAASiC,EAAiB,EAAjBA,WAClBC,EAA+CF,EAA/CE,KAAMC,EAAyCH,EAAzCG,SAAUC,EAA+BJ,EAA/BI,QAASrB,EAAsBiB,EAAtBjB,QAASsB,EAAaL,EAAbK,SAClCC,EAAqCN,EAArCM,WAAYC,EAAyBP,EAAzBO,WAAYC,EAAaR,EAAbQ,SAEhC,EAAiBN,EAAKO,cAAcN,GAA5B/C,EAAR,EAAQA,EAAGC,EAAX,EAAWA,EACX,EAAgC2C,EAAUU,OAAlCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,WACjB,EAAyBV,EAAKO,cAAcE,GAAjCE,EAAX,EAAQzD,EAAU0D,EAAlB,EAAezD,EACf,EAA2B6C,EAAKO,cAAcG,GAAnCG,EAAX,EAAQ3D,EAAW4D,EAAnB,EAAgB3D,EACV4D,EAAiBH,EAAK,GAEtBI,EAAQlB,EAAUmB,WAAWC,QAAQhE,EAC3C,EAA0B4C,EAAUqB,eAA5BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAETC,EAAU,WAAIpB,GAAWI,SAAf,QAA2B,IAErCiB,EAAK,oBAAGzB,EAAU0B,iBAAb,aAAG,EAAqBC,OAAM,UAA9B,QAAuCC,EAAAA,GAAAA,GAC5CC,GACJ,SAAC,IAAD,CACE9C,SACE,SAAC,KAAD,CACE0C,MAAOA,EACPK,SAAU,SAACC,GAAD,uBACR/D,EAAQoB,eADA,aACR,EAAiB4C,iBAAgB,SAAC7C,GAChCA,EAAKuC,UAAY,IAAIO,EAAAA,MAAMF,EAC5B,GAHO,IAOdvD,QAAQ,QACR0D,aAAc,CAAEZ,MAAO,KACvB7C,UAAU,SACVE,kBAAmB,SAACC,GAAD,OAAOA,EAAEC,aAAT,EAdrB,UAgBE,SAAC,KAAD,kBACM9B,GADN,IAEEwC,MACE,SAAC4C,EAAA,EAAD,CACEnF,KAAK,cACLsB,UAAU,kBACVC,MAAO,CAAEkD,MAAAA,UAOnB,GAA6BW,EAAe7B,GAApC8B,GAAR,GAAQA,SAAUC,GAAlB,GAAkBA,OACZC,GAAe,CACnBhC,WAAY+B,GAAS,OAAS,SAC9BE,UAAWH,GAAW,SAAW,UAG7BI,IACJ,SAAC,IAAD,CACEnE,UAAU,cACVoE,eAAe,YACf5E,MAAOwC,EACPqC,SAAU,SAACC,GAAO,IAAD,EACf,UAAA5E,EAAQoB,eAAR,SAAiB4C,iBAAgB,SAAC7C,GAChCA,EAAKmB,WAAasC,CACnB,GACF,EACD1F,KAAK,QACL2F,UAAU,EACVC,SAAS,EACTnE,kBAAmB,SAACC,GAAD,OAAOA,EAAEC,cAAcA,aAAvB,EACnBkE,yBAA0B,IAC1BC,QAAS,CACP,CAAElF,MAAO,oBAAqBmF,KAAM,SACpC,CAAEnF,MAAO,2BAA4BmF,KAAM,SAC3C,CAAEnF,MAAO,iBAAkBmF,KAAM,WACjC,CAAEnF,MAAO,2BAA4BmF,KAAM,YAC3CC,KAAI,gBAAGpF,EAAH,EAAGA,MAAOmF,EAAV,EAAUA,KAAV,MAAsB,CAC1BnF,MAAAA,EACAqF,OACE,iBAAM5E,MAAO,CAAE+B,WAAYxC,EAAOyC,WAAY,UAA9C,SACG0C,IAJD,MAWJG,IAASC,EAAAA,EAAAA,UAEb,iBAAM,IAAOC,EAAiBhD,EAAYkB,EAA1C,GACA,CAAClB,EAAYkB,IAGf,OACE,iBACElD,UAAU,YACVC,OAAK,0CACAjB,EAAW,CAAE4D,MAAAA,EAAOO,MAAAA,KACpBnE,EAAW,CAAE+C,SAAAA,GAAY,QACzB/C,EAAW,CAAEgE,MAAAA,EAAOC,OAAAA,GAAU,OAC9BjE,EAAW,CAAE8F,OAAAA,IAAU,OACvBjG,EAAWC,EAAGC,IAPrB,WAUE,gBACEiB,UAAU,mBACV,cAAaS,EACbR,OAAK,QAAIiC,SAAAA,EAAUF,WAAAA,EAAYkB,WAAAA,GAAee,IAHhD,UAKE,qBACEgB,WAAYxE,EACZyE,YAAY,OACZ1F,MAAOiB,EACP4D,SAAU,SAAC/D,GAAO,IAAD,EACf,UAAAZ,EAAQoB,eAAR,SAAiB4C,iBAAgB,SAAC7C,GAChCA,EAAKJ,QAAUH,EAAE6E,OAAO3F,KACzB,GACF,EACD,YAAWmC,OAGf,iBACE3B,UAAU,4BACV,cAAa2C,EACb1C,OAAK,UACC0C,EAAiB9D,EAAW4D,EAAKC,GAAO7D,EAAW0D,EAAIC,IAJ/D,WAOE,iBAAKxC,UAAU,MAAf,UACGmE,GACAZ,MAEH,iBAAKvD,UAAU,MAAf,WACE,SAAC,KAAD,gBACEoB,QAAS,WAAO,IAAD,EACb,UAAA1B,EAAQoB,eAAR,SAAiB4C,iBAAgB,SAAC7C,GAChCA,EAAKoB,WAAamD,EAAWvE,EAAKoB,WACnC,GACF,GACGxD,GANN,IAOEC,KAAMsF,GAAS,OAAS,OACxB/C,MAAM,SAACoE,EAAA,EAAD,QAER,SAAC,KAAD,gBACEjE,QAAS,WAAO,IAAD,EACb,UAAA1B,EAAQoB,eAAR,SAAiB4C,iBAAgB,SAAC7C,GAChCA,EAAKoB,WAAaqD,EAAazE,EAAKoB,WACrC,GACF,GACGxD,GANN,IAOEC,KAAMqF,GAAW,OAAS,OAC1B9C,MAAM,SAACsE,EAAA,EAAD,QAER,SAAC,KAAD,kBACM9G,GADN,IAEEwC,MAAM,SAAC4C,EAAA,EAAD,CAAUnF,KAAK,wBACrB0C,QAAS,WAAO,IAAD,EACb,UAAA1B,EAAQoB,eAAR,SAAiB4C,iBAAgB,SAAC7C,GAChC,IAAQwB,EAAYxB,EAAKuB,OAAjBC,QACRxB,EAAK+B,MAAM,GAAKP,EACjB,GACF,MAEH,SAAC,KAAD,kBACM5D,GADN,IAEEwC,MAAM,SAAC4C,EAAA,EAAD,CAAUnF,KAAK,sBACrB0C,QAAS,WAAO,IAAD,EACb,UAAA1B,EAAQoB,eAAR,SAAiB4C,iBAAgB,SAAC7C,GAChC,IAAQwB,EAAYxB,EAAKuB,OAAjBC,QACRxB,EAAK+B,MAAM,IAAKP,EACjB,GACF,aAMZ,EAEKyB,EAAiB,SAACI,GAItB,MAAO,CAAEH,SAFQ,UAAUyB,KAD3BtB,GAAwB,IAGLF,OADJ,QAAQwB,KAAKtB,GAE7B,EAEKoB,EAAe,SAACpB,GACpB,MAA6BJ,EAAeI,GAE5C,OAFA,EAAQH,SAEW,GAAK,YAFxB,EAAkBC,OACQ,OAAS,SAEpC,EAEKoB,EAAa,SAAClB,GAClB,MAA6BJ,EAAeI,GAE5C,OAFA,EAAQH,SACsB,UAAY,KAD1C,EAAkBC,OAEY,SAAW,OAC1C,EAEKgB,EAAmB,SAAChD,EAAoBkB,GAC5C,IAAMuC,EAAMC,SAASC,cAAc,OACnCF,EAAIG,UAAY,IAChBxG,OAAOyG,OAAOJ,EAAIxF,MAAO,CAAEiC,SAAU,QAASF,WAAAA,EAAYkB,WAAAA,IAC1DwC,SAASI,KAAKC,YAAYN,GAE1B,IAAMO,EAAON,SAASC,cAAc,QACpCK,EAAK/F,MAAMgG,QAAU,eACrBR,EAAIM,YAAYC,GAEhB,IAAME,EAAKT,EAAIU,wBAETC,GADKJ,EAAKG,wBACEpH,EAAImH,EAAGnH,GAAKmH,EAAGjD,OAEjC,OADAyC,SAASI,KAAKO,YAAYZ,GACnBa,KAAKC,KAAK,EAAGD,KAAKE,IAAIJ,EAAO,GACrC,E,qFClRKK,EAAsB,SAACC,EAAa9H,GACxC,IAAM+H,EAAQ,IAAIC,IACZC,EAAOjI,EAAO,EACpB,GAA4BkI,EAAAA,EAAAA,GAAoBlI,EAAMA,GAA9CmI,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QACVC,EAAQ,IAAIC,MAElB,OADAD,EAAMP,IAAMA,EACL,SAACS,GACNA,EAAiC,GAAzBb,KAAKc,MAAMD,EAAQ,IAC3B,IAAME,EAASV,EAAMW,IAAIH,GACzB,GAAIE,EAAQ,OAAOA,EACnBL,EAAQO,UAAUV,EAAMA,GACxBG,EAAQQ,OAAQL,EAAQb,KAAKmB,GAAM,KACnCT,EAAQU,UAAUT,GAAQJ,GAAOA,GACjC,IAAMc,EAAOZ,EAAOa,YAIpB,OAHAZ,EAAQa,WAAWhB,GAAOA,EAAMjI,EAAMA,GACtCoI,EAAQc,iBACRnB,EAAMoB,IAAIZ,EAAOQ,GACVA,CACR,CACF,EAEKK,EAAoBvB,E,6iGAAiC,IACrDwB,EAAoBxB,E,yzFAAiC,IAE9CyB,EAAkB,SAACf,GAC9B,IAAMgB,EAASH,EAAkBb,GAC3BiB,EAASH,EAAkBd,GACjC,MAAM,yBAAN,OAAgCgB,EAAhC,oBAAkDC,EAAlD,mBACD,ECrCM,SAASC,EACdC,GAEA,IAAMC,GAAUC,EAAAA,EAAAA,SAAO,GACjBC,EAAe,SAACnI,GAAD,OACnBA,EAAEoI,YAAcH,EAAQzH,QAA4B,UAAlBR,EAAEqI,YADjB,EAQfC,EAAe,SAACtI,GAAD,OALA,SAACA,GAAD,OAClBiI,EAAQzH,SAbN,SAAuBR,GAC5B,IAAMuI,EAAQvI,EAAEwI,QAAQ,GACxB,MAA4B,YAAhB,OAALD,QAAK,IAALA,OAAA,EAAAA,EAAOE,UACf,CAWGC,CAAc1I,IACbgI,GAAoC,IAArBhI,EAAEwI,QAAQG,MAHP,CAMnBC,CAAa5I,IAAMA,EAAE6I,iBADF,EAGrB,MAAO,CACLC,qBAAsBX,EACtBY,qBAAsBZ,EACtBa,oBAAqBV,EACrBW,mBAAoBX,EAEvB,CAEM,IAAMY,EAA0D,CACrEC,mBAAoB,SAACnJ,GACF,IAAbA,EAAEoJ,QAAcpJ,EAAE6I,iBACvB,EACDQ,cAAe,SAACrJ,GAAD,OAAOA,EAAEsJ,gBAAT,GCvCV,IAcDC,EAAe,SAACzH,GACpB,IAAQC,EAAyBD,EAAzBC,QAASyH,EAAgB1H,EAAhB0H,YACjB,MAAO,CACLxD,KAAKyD,MAAM1H,EAAQvD,EAAI,KACvBwH,KAAK0D,KAAKF,EAAYhL,EAAI,KAC1BwH,KAAKyD,MAAM1H,EAAQtD,EAAI,KACvBuH,KAAK0D,KAAKF,EAAY/K,EAAI,KAE7B,EACYkL,EAAc,SACzBC,EACAC,EACAC,GAIA,IAFA,IAAMhI,GAAS,OAACgI,QAAD,IAACA,EAAAA,EAAYD,GAAME,aAClC,EAAiCR,EAAazH,GAA9C,eAAOkI,EAAP,KAAaC,EAAb,KAAmBC,EAAnB,KAAyBC,EAAzB,KACS3L,EAAIwL,EAAMxL,GAAKyL,EAAMzL,GAAK,EACjC,IAAK,IAAIC,EAAIyL,EAAMzL,GAAK0L,EAAM1L,GAAK,EAAG,CAAC,IAAD,QACpCqL,IAAQ,UAAIF,EAAKpL,UAAT,iBAAI,EAAUC,UAAd,OAAI,EAAc2L,OAAON,IACjC,UAAAF,EAAKpL,UAAL,mBAAUC,UAAV,SAAc4L,IAAIR,EACnB,CAEJ,EACYS,EAAe,SAC1BV,EACA9H,GAIA,IAFA,IAAMyI,EAAU,IAAIC,IACpB,EAAiCjB,EAAazH,GAA9C,eAAOkI,EAAP,KAAaC,EAAb,KAAmBC,EAAnB,KAAyBC,EAAzB,KACS3L,EAAIwL,EAAMxL,GAAKyL,EAAMzL,GAAK,EACjC,IAAK,IAAIC,EAAIyL,EAAMzL,GAAK0L,EAAM1L,GAAK,EAAG,CAAC,IAAD,IACpC,UAAAmL,EAAKpL,UAAL,mBAAUC,UAAV,SAAcO,SAAQ,SAAC6K,GAAD,OAAUU,EAAQF,IAAIR,EAAtB,GACvB,CAEH,OAAOY,MAAMC,KAAKH,EACnB,ECFYI,EAAS,IAAIC,EAAAA,MAAM,EAAG,GAE7BC,EAAUC,EAAAA,YACd,WAWEC,GACI,IAVFC,EAUC,EAVDA,UACAC,EASC,EATDA,YASC,IARDlH,SAAAA,OAQC,MARU,WAAQ,EAQlB,MAPDrD,SAAAA,OAOC,MAPUwK,EAAAA,GAOV,MANDC,SAAAA,OAMC,SALDC,EAKC,EALDA,OAKC,IAJDC,iBAAAA,OAIC,MAJkB,WAAQ,EAI1B,MAHDC,eAAAA,OAGC,MAHgB,WAAQ,EAGxB,EACK5I,EAAkBsI,EAAlBtI,MAAOC,EAAWqI,EAAXrI,OACT4I,GAAW9G,EAAAA,EAAAA,UAAQ,kBAAM,IAAI+G,EAAAA,KAAK9I,EAAOC,EAAtB,GAA+B,CAACD,EAAOC,IACxD8I,EAAqC/K,EAArC+K,KAAMC,EAA+BhL,EAA/BgL,OAAQC,EAAuBjL,EAAvBiL,MAAOC,EAAgBlL,EAAhBkL,YAEvBC,GAAW3D,EAAAA,EAAAA,QAA0B,MACrC4D,GAAQ5D,EAAAA,EAAAA,QAAO,IAAI6D,IAAAA,aACzB,GAA0BxM,EAAAA,EAAAA,UAAuB,IAAjD,eAAOyM,EAAP,KAAcC,EAAd,KACA,GAAkC1M,EAAAA,EAAAA,UAAuB,IAAzD,eAAO2M,EAAP,KAAkBC,EAAlB,KACA,EAAwBC,IAAxB,eAAOC,GAAP,KAAaC,GAAb,KACA,GAAwCF,IAAxC,iBAAOG,GAAP,MAAqBC,GAArB,MAEAnB,GAAmBoB,EAAAA,EAAAA,GAASpB,GAC5BC,GAAiBmB,EAAAA,EAAAA,GAASnB,GAC1B,IAAMoB,GAAiB,WACrB,GAAKL,GAAL,CACA,IAAMM,EAAKN,GAAKvK,OAAO8K,aACftL,EAASwK,EAAMtL,QAAfc,KACR+J,GAAiB,EAAM/J,EAAKO,cAAc8K,GAHzB,CAIlB,GAEDE,EAAAA,EAAAA,kBAAgB,WAAO,IAAD,EACdC,EAAMjB,EAASrL,QACfuM,EAAMjB,EAAMtL,QAClB,GAAKsM,EASL,OAPAC,EAAIC,MAAMF,GACVC,EAAIE,SAASC,WAAa,GAC1BH,EAAIE,SAASE,aA5CG,GA6ChB,CAAC,EAAG,EAAG,GAAGnO,SAAQ,kBAAO,IAAIoO,EAAAA,OAAQ/N,SAAU,CAA7B,IAClB,UAAA0N,EAAIM,QAAQC,OAAO,UAAnB,SAAuBC,WACvB,IAAIR,EAAIS,KAED,WAAO,IAAD,EACX,UAAAT,EAAIzL,YAAJ,SAAUmM,UACVC,EAAAA,EAAAA,GAAcZ,GACdC,EAAIU,SACJV,EAAIY,OACL,CACF,GAAE,KAEHC,EAAAA,EAAAA,YAAU,WACR9B,EAAMtL,QAAQ+M,WACd,IAAQD,EAAWxB,EAAMtL,QAAQ6M,QAAzBC,OACFO,EAAQC,GAAWR,EAAQ/B,GAEjC,OAAO,kBAAMsC,EAAM7O,SAAQ,SAAC+O,GAAD,OAAOA,EAAEN,QAAT,GAApB,CACR,GAAE,CAAClC,IAEJ,QAAsByC,EAAAA,EAAAA,GAAQnC,GAAvBoC,IAAP,gBACMnI,GAAQmI,GAAcvL,EACtBwL,IAAahG,EAAAA,EAAAA,QAAO,IAAI0C,EAAAA,MAAMW,GAAU4C,OAAO,IACrD,IAAkC5O,EAAAA,EAAAA,UAAS,GAA3C,iBAAO6O,GAAP,MAAkBC,GAAlB,MACMC,IAAYpG,EAAAA,EAAAA,QAAO,IAEzB0F,EAAAA,EAAAA,YAAU,WACR,GAAK9H,GAAL,CACA,IAAMiH,EAAMjB,EAAMtL,QAClBuM,EAAIzL,KAAKiN,SAAWhD,EAASiD,SAAS1I,IACtCiH,EAAIzL,KAAKmN,KAAO3I,GAAQwI,GAAU9N,QAClCuM,EAAIzL,KAAKoN,OAASR,GAAW1N,QAC7BuM,EAAIM,QAAQC,OAAOtO,SAAQ,SAAC2P,GAAD,OAAQA,EAAEtP,SAAU,CAApB,IAC3B0N,EAAIzL,KAAKsN,QANS,CAOnB,GAAE,CAAC9I,GAAOyF,IAEX,OAAkCa,IAAlC,iBAAOyC,GAAP,MAAkBC,GAAlB,OACAlB,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACd,GAAKxC,EAAL,CACAU,EAAMtL,QAAQ+M,WACd,IAAMwB,EAAS,IAAIC,EAAAA,OAAO5D,GAC1B,UAAA2D,EAAO1B,QAAQC,OAAO,UAAtB,SAA0B2B,SAASF,GACnCA,EAAOG,aACPH,EAAOI,OAAS,WACdJ,EAAOzN,KAAKsN,SACZG,EAAOK,UAAU,IAAIC,EAAAA,UAAU9D,IAC/BwD,EAAOO,cACR,EACDR,GAAaC,EAVM,CAWpB,GAAE,CAAC3D,EAAQG,EAAUuD,KAEtB,IAAMS,IAAgB9K,EAAAA,EAAAA,UACpB,kBAAM+K,EAAAA,GAAAA,YAAAA,MAAAA,EAAAA,GAAS,CAAaxE,GAAb,eAA4BC,GAAe,KAA1D,GACA,CAACD,EAAWC,IAGR5J,IAAa6G,EAAAA,EAAAA,SAAO,GAEpBuH,IAAevH,EAAAA,EAAAA,QAAO,GACtBwH,IAAcxH,EAAAA,EAAAA,SAAO,GACrByH,GAAW,kBAAOD,GAAYlP,QAAUa,GAAWb,OAAxC,EACb2K,GAAUwE,MAEd/B,EAAAA,EAAAA,YAAU,WACR,IAASgC,GAAT,OAAe9D,EAAMtL,QAAQ6M,QAAQC,OAArC,MACA,GAAKsC,EAAL,CACA,IAAMC,EAAS,WACb/D,EAAMtL,QAAQ+M,WACd,IAAMuC,EAA0B,GAC1BC,EAA8B,GAGpCH,EAAGI,eAAe,GAElBT,GAAcvQ,SAAQ,SAACiR,GACrB,IAAMC,EAAOlF,EAAUmF,UAAUF,EAAOG,KAClCvG,EAAOwG,GAAYJ,EAAQL,GAC7BM,GAAQrG,GAAMiG,EAAUQ,KAAKzG,GAC7BA,GAAMkG,EAAcO,KAAKzG,EAC9B,IACDoC,EAAS6D,GACT3D,EAAa4D,GAEbQ,KACAb,GAAYlP,SAAU,EACtBgQ,GAAWhQ,QAAQxB,SAAQ,SAACmE,GAAD,OAAOA,EAAEsK,QAAT,IAC3B+C,GAAWhQ,QAAU,GAErB,IAAMiQ,EAAmBC,YAAYC,MACrC7E,EAAMtL,QAAQc,KAAKsN,SACnBgC,uBAAsB,WACpB,IACMC,EADkBH,YAAYC,MACKF,EACzCpP,GAAWb,QAAUqQ,EAAiB,EACvC,GACF,EAGD,GAAKnB,GAAYlP,QAIjB,OAFAiP,GAAajP,QAAUsQ,OAAOC,WAAWlB,EAAQ,KAE1C,kBAAMiB,OAAOE,aAAavB,GAAajP,QAAvC,EAJ+BqP,GAjCvB,CAsChB,GAAE,CAACN,GAAevE,IAEnB,IAAMiG,IAAS/I,EAAAA,EAAAA,UACf,IAAgC3I,EAAAA,EAAAA,WAAS,GAAzC,iBAAO2R,GAAP,MAAiBC,GAAjB,MACMC,GAAqB,WAAT3F,GAAqByF,GAAW,WAAazF,EAC/D,IAAkClM,EAAAA,EAAAA,UAAmB,IAArD,iBAAO8R,GAAP,MAAkBC,GAAlB,MACMC,IAAc9M,EAAAA,EAAAA,UAAQ,WAC1B,IAAM+M,EAAQ,IAAIhH,IAAI6G,IACtB,OAAOnF,EAAUuF,QAAO,SAAC5H,GAAD,OAAU2H,EAAME,IAAI7H,EAAKxF,KAAzB,GACzB,GAAE,CAAC6H,EAAWmF,KAETM,IAAclF,EAAAA,EAAAA,IAAS,WAC3B0E,IAAY,GACZ7E,QAAQsF,GACRpF,QAAgBoF,GAChBN,GAAa,IACbjG,GAAiB,EAClB,KAEDuC,EAAAA,EAAAA,YAAU,WACR,GAAa,WAATnC,EAAmB,OAAOkG,EAC/B,GAAE,CAAClG,EAAMkG,MACV/D,EAAAA,EAAAA,YAAU,kBAAM+D,EAAN,GAAmB,CAAChG,EAAOgG,MAGrC/D,EAAAA,EAAAA,YAAU,WAAO,IAAD,IACRxP,EAAI,oBAAG4M,EAAU6G,cAAb,aAAG,EAAkBzT,YAArB,QAA6B,GACnC,cAAc8G,KAAK9G,IAAOuT,IAC/B,GAAE,CAAC3G,EAAW2G,MAEf/D,EAAAA,EAAAA,YAAU,WAER,GADAvC,GAAiB,GACbjK,GAAUZ,QAAS,CACrB,IAAMsR,EAAU,IAAIC,MAAM3Q,GAAUZ,QAAS,CAAC,GAC9C8K,EAAewG,EAASzQ,GAAWb,QACpC,CACF,GAAE,CAACyN,GAAa5C,EAAkBC,IAEnC,IAAM0G,IAAc9J,EAAAA,EAAAA,UACd+J,IAAa/J,EAAAA,EAAAA,SAAO,IAE1B0F,EAAAA,EAAAA,YAAU,WAAYqE,GAAWzR,SAAU,CAAjC,GAAyC,CAAC+O,KAEpD,IAoBM2C,GAAmB,WACvBpG,EAAMtL,QAAQ+M,WACd,IAASqC,GAAT,OAAe9D,EAAMtL,QAAQ6M,QAAQC,OAArC,MACM6E,EAAKH,GAAYxR,QAClBoP,GAAOuC,IACZvC,EAAGvQ,SAAU,EACb8S,EAAG9S,SAAU,EACd,EAEK+S,IAAelK,EAAAA,EAAAA,WAErB0F,EAAAA,EAAAA,YACE,kBAAM,WAAO,IAAD,EACV,UAAAwE,GAAa5R,eAAb,SAAsBiN,SACtB2E,GAAa5R,aAAUoR,CACxB,CAHD,GAIA,CAAC3D,MAEHpB,EAAAA,EAAAA,kBACE,kBAAM,WAAO,IAAD,KACVa,EAAAA,EAAAA,GAAa,UAACsE,GAAYxR,eAAb,aAAC,EAAqBiG,SACnCiH,EAAAA,EAAAA,GAAa,UAAC0E,GAAa5R,eAAd,aAAC,EAAsBiG,OACrC,CAHD,GAIA,IAEF,IAAM4L,GAAkB,WAAO,IAAD,IAC5B,GAAKhR,GAAWb,UAEsB,KAAlC,UAAA4R,GAAa5R,eAAb,eAAsBnB,SAA1B,CACAyM,EAAMtL,QAAQ+M,WACd,IAAQjM,EAASwK,EAAMtL,QAAfc,KAEFyN,EAAM,UAAIqD,GAAa5R,eAAjB,QAAI4R,GAAa5R,QAAY,IAAIwO,EAAAA,OAC3C1N,EAAKiN,SAASC,SAAS8D,mBAEzBvD,EAAO3H,UAAU9F,EAAKiR,QAAS5H,GAC/BoE,EAAOK,UAAU9N,EAAKQ,QACtBiN,EAAO1P,SAAU,EACjB0P,EAAOyD,QAAkD,EACzD,IAAS5C,GAAT,OAAe9D,EAAMtL,QAAQ6M,QAAQC,OAArC,MACAsC,IAAOA,EAAGvQ,SAAU,EAZ8B,CAanD,EACKkR,GAAoB,WAAO,IAAD,EAG9B,GAFAzE,EAAMtL,QAAQ+M,WAEV,UAACzB,EAAMtL,eAAP,OAAC,EAAe6M,QAApB,CACA,IAASuC,GAAT,OAAe9D,EAAMtL,QAAQ6M,QAAQC,OAArC,MACMmF,EAAKL,GAAa5R,QAClB2R,EAAKH,GAAYxR,QAClBoP,GAAO6C,IACZA,EAAGpT,SAAU,GAEO,KAAd,OAAF8S,QAAE,IAAFA,OAAA,EAAAA,EAAI9S,WAAkBuQ,EAAGvQ,SAAU,GAPJ,CAQpC,EAEKqT,GAAW,SAAC1S,GAChBqS,KACA/F,GAAQqG,GAAYjS,EAAUV,EAAE4S,MAAOvR,GAAWb,SACnD,EACKqS,GAAY,SAAC7S,GACjBsM,GAAQqG,GAAYjS,EAAUV,EAAE4S,QAChChC,sBAAsByB,GACvB,EACKS,GAAiB,SAAC9S,GAEtBsM,GAAQyG,GAAU/S,EAAE4S,QACpBhC,sBAAsByB,GACvB,EAEKW,IAAmB9K,EAAAA,EAAAA,SAAO,GAC1B+K,GAAa,CACjBC,KADiB,SACZlT,GACH2P,KACA+C,GAAS1S,EACV,EACDmT,MAAOT,GACPU,OAAQzH,EAAQkH,GAAYC,GAC5B5B,SAPiB,SAORlR,GAEP,GADAgT,GAAiBxS,SAAU,EACtB6L,GAAL,CACA,IAAKV,EAAO,CAAC,IAAD,EAEN0H,EAAM,UACRhH,GAAKiH,QAAQtT,EAAE4S,MAAO,CAAEW,UAAU,WAD1B,eAERhH,SAFQ,IAERA,QAFQ,EAERA,GAAc+G,QAAQtT,EAAE4S,MAAO,CAAEW,UAAU,EAAMrC,UAAU,IAE7D,GADAD,GAAOzQ,QAAU6S,EACbA,EAAQ,MACb,CAGIhH,GAAKmH,SAASxT,EAAE4S,SACnBjB,KACAnF,QAAgBoF,GAChBjG,EAAQkH,GAAU7S,GAAK8S,GAAe9S,GAdvB,CAgBlB,EACDyT,KAAM,KACNC,KA3BiB,SA2BZ1T,GACH2P,KACA0C,KACA/F,GAAQyG,GAAU/S,EAAE4S,MAAOlS,GAC5B,EACDiT,QAAS,MACTvC,IAEIwC,GAAW,SAAC5T,GAEhB8Q,OAAOE,aAAavB,GAAajP,SAC7B,OAAJ6L,SAAI,IAAJA,IAAAA,GAAMhC,IAAIrK,EAAE4S,OACR,OAAJvG,SAAI,IAAJA,IAAAA,GAAMwH,QACP,EACKC,GAAa,SAAC9T,GAA0C,IAArBkR,IAAoB,yDAC3D,GAAK7E,GAAL,CACA,MAAiBrM,EAAE4S,MAAXpU,EAAR,EAAQA,EAAGC,EAAX,EAAWA,EACX,UAAuB4N,GAAKkH,SAA5B,GAASQ,EAAT,KAAaC,EAAb,KAAiBC,EAAjB,KACKF,GAAOC,GAAOC,IACnBF,EAAGnB,MAAMpU,EAAIA,EACbwV,EAAGpB,MAAQ5S,EAAE4S,MACbqB,EAAGrB,MAAMnU,EAAIA,EACTyS,IAAU7E,GAAK6E,UAAW,GAPb,CAQlB,EACKgD,GAAe,SAACC,GACpB5C,GAAYvS,SAAQ,SAAC6K,GAAD,OAAUA,EAAK5C,UAAUkN,EAAzB,IAChB,OAAJ9H,SAAI,IAAJA,IAAAA,GAAMpF,UAAUkN,GACJ,OAAZ5H,SAAY,IAAZA,IAAAA,GAActF,UAAUkN,EACzB,EAEKC,GAAa,CACjBlB,KAAMU,GACNT,MAAOS,GACPR,OAAQzH,EAAQiI,GAAWE,GAC3B5C,SAJiB,SAIRlR,GACP,IAAMqT,EAASpC,GAAOzQ,QACtB,GAAK6L,GAGL,GAFAhB,GAAiB,GACjB2H,GAAiBxS,SAAU,EAC3B,OAAI6S,QAAJ,IAAIA,GAAAA,EAAQgB,QAAS,CACnB,IAAMA,EAAUhB,EAAOgB,QAEvB,GADiBA,EAAQnD,SACX,CAEZ,IAAQxC,EAAWrC,GAAKvK,OAAhB4M,OACF4F,EAAOD,EAAQzB,MAAM2B,SAAS7F,GAC9B8F,EAAOxU,EAAE4S,MAAM2B,SAAS7F,GAC9B+F,GAAU7M,EAAgB4M,EAAK3N,QAC/B,IAAMA,EAAQ2N,EAAK3N,MAAQyN,EAAKzN,MAChCwF,GAAKnF,OAAOL,EAAO6H,GACP,OAAZnC,SAAY,IAAZA,IAAAA,GAAcrF,OAAOL,EAAO6H,GAC5B6C,GAAYvS,SAAQ,SAAC6K,GAAD,cAAUA,QAAV,IAAUA,OAAV,EAAUA,EAAM3C,OAAOL,EAAO6H,EAA9B,GACrB,KAAM,CAAC,IAAD,EAECgG,EAAQL,EAAQzB,MAChB+B,EAAQN,EAAQO,KAAKA,KAAKhC,MAC1BiC,EAAWH,EAAMH,SAASI,GAE1BrS,EADatC,EAAE4S,MAAM2B,SAASI,GAAOtH,QAAQwH,GAC1BrW,EAAIqW,EAASrW,EACtC,GAAI8D,EAAQ,EAAG,OASf,GAPA+J,GAAK/J,MAAMA,EAAOqS,GAClBpD,GAAYvS,SAAQ,SAAC6K,GACnBA,EAAKvH,MAAMA,EAAOqS,GAClB9K,EAAKiL,aAAexS,CACrB,KAGIiK,GAAc,OACnBA,GAAajK,MAAMA,EAAOqS,GAC1B,IAAMI,EAAM,UAAGxI,GAAagH,SAAS,UAAzB,aAAG,EAA0BX,MACzC,IAAKmC,EAAQ,OACbxI,GAAajK,MAAM,IAAMiK,GAAa5D,OAAQoM,EAC/C,CACF,MACCb,GAAalU,EAAEmU,MAElB,EACDV,KAAM,KACNC,KAjDiB,SAiDZ1T,GAEH8Q,OAAOE,aAAavB,GAAajP,SACjCsT,GAAW9T,GAAG,EACf,EACD2T,QAAS,MACTvC,KAEFxD,EAAAA,EAAAA,YAAU,WACR9B,EAAMtL,QAAQwU,KAAKC,YAAcrJ,CAClC,GAAE,CAACA,IACJ,IAAMsJ,IAAShN,EAAAA,EAAAA,QAAO,IAAIsC,KACpBV,IAAW5B,EAAAA,EAAAA,QAAO,IAAI5B,KAEpB6O,GAA8BzU,EAA9ByU,aAAcC,GAAgB1U,EAAhB0U,YAChBC,IAAW5Q,EAAAA,EAAAA,UAAQ,WACvB,MAAK,mBAAmBS,KAAKuG,GDjcN,SAC3BO,EACAtJ,EACAC,GAEA,IAAM2S,EAAOtP,KAAK0D,KAAKhH,EAAQ,KACzB6S,EAAOvP,KAAK0D,KAAK/G,EAAS,KAC1BiH,EAAOa,MAAMC,KAAK,CAAE/B,OAAQ2M,IAAQ,kBACxC7K,MAAMC,KAAK,CAAE/B,OAAQ4M,IAAQ,kBAAM,IAAI/K,GAAV,GADW,IAI1C,OADAwB,EAAMhN,SAAQ,SAAC6K,GAAD,OAAUF,EAAYC,EAAMC,EAA5B,IACPD,CACR,CC2bY4L,CAJLL,KACW,UAAT1J,IAAqB2J,IAAyB,WAAT3J,GACnCS,EACAF,EACsBtJ,EAAOC,GANQ,EAO5C,GAAE,CAACqJ,EAAOtJ,EAAOC,EAAQ8I,EAAMS,EAAWiJ,GAAcC,KAEnDK,GAAiB,SAACzV,GACtB,IAAM0V,EAAQ5J,EAAMtL,QAAQ6M,QAAQC,OAAO,GAC3C,GAAkB,UAAd8D,IAA0BsE,EAA9B,CACA,IAAMC,EAAK/J,EAELgK,EAAY,CAAEC,MAAO9J,IAAAA,KAAYkE,QAAQ,EAAM6F,UAAWH,EAAK,GAC/D7T,EAAS,IAAIuN,EAAAA,UAAUrP,EAAE4S,MAAM2B,SAASoB,GAAK,IAAInK,EAAAA,KAAKmK,EAAIA,IAEhErL,EAAa+K,GAAUvT,GAAQ9C,SAAQ,SAAC6K,GAAU,IAAD,EAC3CqL,GAAO1U,QAAQkR,IAAI7H,EAAKxF,OACvBwF,EAAKkM,SACV,UAAAlM,EAAKmM,WAAWhW,EAAE4S,MAAOgD,UAAzB,SAAqC5W,SAAQ,YAAe,IAAZ6K,EAAW,EAAXA,KAC9C,GAAMA,aAAgBkC,IAAAA,KAAtB,CAEA,IADA,IAAIkK,EAA0BpM,EACvBoM,EAAQF,SAAWL,GAClBO,EAAQF,kBAAkBhK,IAAAA,UAChCkK,EAAUA,EAAQF,OAEpB,IAAQ1R,EAAS4R,EAAT5R,KAER,GAAI+Q,GAAa,CACf,IAAMc,GAAUP,EAAK9L,EAAKiL,aAAe,EACnCqB,EAAS,IAAIC,EAAAA,KAAAA,OAAY,CAC7B1H,OAAQ1O,EAAE4S,MACVsD,OAAAA,EACAG,QAAQ,IAGJC,EAAMzM,EAAK0K,SAAS4B,EAAQ,CAAEI,OAAO,IAC3C1M,EAAK2M,YAAYF,GACbL,IAAYpM,IACdF,EAAY0L,GAAUiB,EAAKzM,GAC3BoM,EAAUK,GAEZxM,GAAStJ,QAAQiH,IAAIpD,EAAM4R,EAC5B,MACCA,EAAQzD,QAAU,GAClByD,EAAQQ,OAAQ,EAChBvB,GAAO1U,QAAQ6J,IAAIhG,EA1BoB,CA4B1C,IACF,GAvC0C,CAwC5C,EAEKmM,IAAatI,EAAAA,EAAAA,QAAqB,IAClCwO,GAAW,CACfxD,KADe,WAEb,IAAK7G,IAAQA,GAAKkH,SAAS5K,QAAU,EAE9B6H,GAAWhQ,QAAQmI,QAAQ4H,SAFlC,CAKAlE,GAAKsK,WACDtV,GAAWb,SAASgQ,GAAWhQ,QAAQ8P,KAAKjE,GAAKuK,SACrD,IAAMC,EAAWxK,GAAKyK,aACtB/S,GAAS,SAACxD,GAAD,OAAUiP,EAAAA,GAAAA,UAAoBjP,EAAMsW,EAApC,IACTvK,QAAQsF,EALP,CAMF,EACDuB,MAbe,WAgBb,GAFA5C,KACAjE,QAAQsF,GACJlR,EAAS0U,YAAa,CACxB,IAAM2B,EAAQtM,MAAMC,KAAKZ,GAAStJ,SAClCsJ,GAAStJ,QAAQmN,QACjB,IAAMqJ,EAAwBD,EAAMzS,KAAI,YAAkB,IAAD,eAAf8L,EAAe,KAAVvG,EAAU,KACjDoN,EAAQC,GAAUrN,GAExB,OADAoN,EAAMjY,SAAQ,SAACmY,GAAD,OAAQA,EAAE9S,KAAO,EAAjB,IACP,CAAC+L,EAAK6G,EAAM3S,KAAI,SAAC6S,GAAD,OAAOA,EAAEL,YAAT,IACxB,IACD,IAAKE,EAAUrO,OAAQ,OACvB5E,GAAS,SAACxD,GAAD,OAAUiP,EAAAA,GAAAA,aAAuBjP,EAAMyW,EAAvC,GACV,KAAM,CACL,IAAMI,EAAa3M,MAAMC,KAAKwK,GAAO1U,SAErC,GADA0U,GAAO1U,QAAQmN,SACVyJ,EAAWzO,OAAQ,OACxB5E,GAAS,SAACxD,GAAD,OAAUiP,EAAAA,GAAAA,aAAuBjP,EAAM6W,EAAvC,GACV,CACF,EACDhE,OAjCe,WAmCb,GADA7C,KACKlE,GAAL,CACA,GAAIrG,KAAKqR,IAAIhL,GAAKiL,MAAQ,IAAO,OAAOhL,QAAQsF,GAEhD,IAAI2F,EACJ,GAAI5L,EAAO,CACTU,GAAKmL,YACLnL,GAAKsK,WACAtV,GAAWb,SAASiX,GAASpL,IAClC,IAAM0K,EAAQzM,EAAa+K,GAAUhJ,GAAKvK,QAC1CyV,EAAYG,GAAWX,EAAO1K,GAC/B,KAAM,CACL,IAAM0K,EAAQzM,EAAa+K,GAAUhJ,GAAKvK,QAC1CyV,EAAYG,GAAWX,EAAO1K,IAC9B,IAAMsL,EAAO,IAAIvB,EAAAA,KACTwB,EAAcvL,GAAKvK,OAAnB8V,UACRD,EAAKtN,IAAIuN,EAAWA,EAAUrD,SAAS,IAAI3J,EAAAA,MAAM,EAAG,OACpD+M,EAAKE,YAAY3G,UAAW,EAC5B1E,GAAgBmL,EACjB,CACDxG,IAAY,GACZG,GAAaiG,GACb7K,IArBiB,CAsBlB,EACDwE,SA1De,SA0DNlR,GACP8X,GAAqB9X,GAChBqM,IAAS2G,GAAiBxS,UAC/BkM,KACAqL,KACD,EACDtE,KAhEe,SAgEVzT,GACH,GAAIoB,GAAUZ,QAEZ,OADAwX,KACOC,GAAiBjY,GAE1B,IAAS4P,GAAT,OAAe9D,EAAMtL,QAAQ6M,QAAQC,OAArC,MACA,GAAKsC,EAAL,CAEA,IAAM/F,EAAOqO,GAAetI,EAAI5P,EAAE4S,OAC5BuF,EACJtO,IAASuO,GAAWvO,IAASsL,IACzBtL,EACAwO,GAAUrY,EAAE4S,OAClBuF,EAAEG,cAAgB,OAClBlX,GAAUZ,QAAU2X,EACpBI,GAAa/X,QAAU2X,EAAErB,aAGrBzV,GAAWb,UAAS2X,EAAE9Y,SAAU,GACpCuR,uBAAsB,WACpByB,KACA8F,EAAE9Y,SAAU,CACb,IAEDiM,EAAe6M,EAAG9W,GAAWb,QAlBd,CAmBhB,EACDkT,KA1Fe,WA2Fb,IAAKrH,IAAQrG,KAAKqR,IAAIhL,GAAKiL,MAAQ,EAGjC,OADK9G,GAAWhQ,QAAQmI,QAAQ4H,KACzBjE,QAAQsF,GAEbvQ,GAAWb,SAASgQ,GAAWhQ,QAAQ8P,KAAKjE,GAAKuK,SAErD,IAAMC,EAAWxK,GAAKyK,aACtB/S,GAAS,SAACxD,GAAD,OAAUiP,EAAAA,GAAAA,UAAoBjP,EAAMsW,EAApC,IACTvK,QAAQsF,EACT,EACD+B,QAtGe,SAsGP3T,GACN,IAAQwY,EAAa9X,EAAb8X,SACR,GAAKA,EAAL,CACA,IAAMzJ,EAAS,IAAIC,EAAAA,OAAOwJ,GAC1BzJ,EAAOxN,SAAWvB,EAAE4S,MACpB7D,EAAOI,OAAS,WACd,IAAMsJ,EAAW1J,EAAO+H,aACxB/S,GAAS,SAACxD,GAAD,OAAUiP,EAAAA,GAAAA,UAAoBjP,EAAMkY,EAApC,IACT1J,EAAOtB,QACR,CAPoB,CAQtB,GACD2D,IAEF,IAA4B7R,EAAAA,EAAAA,UAAS,QAArC,iBAAOmZ,GAAP,MAAejE,GAAf,OACA7G,EAAAA,EAAAA,YAAU,WACJ,uBAAuB1I,KAAKkM,IAC9BqD,GAAU,aACa,aAAdrD,GAETqD,GAAU9I,EAAQ,YAAc,eACvB,iBAAiBzG,KAAKkM,IAC/BqD,GH7mBuB,SAAC/T,EAAoBoF,GAClD,IAAQ6S,EAAiCjY,EAAjCiY,UAAW/M,EAAsBlL,EAAtBkL,YACbtN,EAAOwH,GAAkB,UADUpF,EAAT+K,KACSG,EAAc+M,GACvD,GAAIra,EAAO,EAAG,MAAO,YACrB,IAAMiI,EAAOjI,EAAO,EACdsa,EAAgB,EAAPta,EAETua,EAAS,SAACva,GAAD,sGAC4EA,EAD5E,qBAC6FA,EAD7F,8DAGTwa,EAAQD,EAAOva,GACfya,EAAQF,EAAOD,GAErB,MAAM,0BAAN,OAAiCE,EAAjC,sBAAoDC,EAApD,iBAAkExS,EAAlE,YAA0EA,EAA1E,cACD,CG+lBiByS,CAAgBtY,EAAUoF,GAAQsI,KACrB,YAAdgD,IACTqD,GAAU/T,EAAS8X,SAAW,YAAc,cAE/C,GAAE,CAACpH,GAAWzF,EAAOjL,EAAUoF,GAAOsI,KAEvC,IAAM0J,GAAuB,SAAC9X,GAAyB,IAAD,EACpD,GAAKqM,GAAL,CACA,IAAMgH,EAAM,UACVhH,GAAKiH,QAAQtT,EAAE4S,MAAO,CAAEW,UAAU,WADxB,eAEVhH,SAFU,IAEVA,QAFU,EAEVA,GAAc+G,QAAQtT,EAAE4S,MAAO,CAAEW,UAAU,EAAMrC,UAAU,IAC7D,UAAImC,QAAJ,IAAIA,GAAAA,EAAQgB,QAAS,CACnB,GAAIhB,EAAOgB,QAAQnD,SAAU,CAC3B,IAAMxC,EAASrC,GAAKvK,OAAO4M,OAC3B,IAAKA,EAAQ,OACb,IAAM8F,EAAOnB,EAAOgB,QAAQzB,MAAM2B,SAAS7F,GAC3C,OAAO+F,GAAU7M,EAAgB4M,EAAK3N,OACvC,CACD,IAAM6N,EAAQrB,EAAOgB,QAAQzB,MACvB+B,EAAQtB,EAAOgB,QAAQO,KAAKA,KAAKhC,MACjCiC,EAAWH,EAAMH,SAASI,GACxBnW,EAASqW,EAATrW,EAAGC,EAAMoW,EAANpW,EACX,OAAOgW,GAAUjW,EAAIC,EAAI,EAAI,cAAgB,cAC9C,CACD,GAAI4N,GAAKmH,SAASxT,EAAE4S,OAAQ,OAAO6B,GAAU,QAC7CA,GAAU,YAlBO,CAmBlB,EAEK2D,GAAa,SAACvO,GAClB,OAAOmB,EAAUiO,eAAevH,IAAI7H,EAAKxF,KAC1C,EAEK4T,GAAmB,SAACjY,GACxB,GAAIoB,GAAUZ,QAAS,OAAOiU,GAAU,QACxC,IAAMiB,EAAQ5J,EAAMtL,QAAQ6M,QAAQC,OAAO,GAC3C,GAAKoI,EAAL,CACA,IAAM7L,EAAOqO,GAAexC,EAAO1V,EAAE4S,OACjC/I,IAASuO,GAAWvO,IAASsL,IAAeV,GAAU,QACrDA,GAAU,YAHG,CAInB,EAEKyE,IAAa,QACjBhI,SAAU4G,GACVrE,KAAMwE,IACH,CAAE7E,OAAQ,KAAMF,KAAM,KAAMC,MAAO,KAAMO,KAAM,KAAMC,QAAS,OACjEvC,IAEI+H,GAAgB,SAACnZ,GACrB,GAAkB,aAAdoR,GAAJ,CACA,IAAM+C,EAAQ,CACZiF,GAAI,IAAIxO,EAAAA,MAAM,GAAI,IAClByO,KAAM,IAAIzO,EAAAA,MAAM,EAAG,IACnB0O,KAAM,IAAI1O,EAAAA,OAAO,GAAI,GACrB2O,MAAO,IAAI3O,EAAAA,MAAM,GAAI,IACrB5K,EAAEf,KACCkV,IACLnU,EAAEsJ,iBACF6K,GAASD,GAAaC,GACtB9I,GAAiB,GAVmB,CAWrC,EAEKmO,IAAc,QAClBtI,SADkB,SACTlR,GACH,uBAAuBkF,KAAKlF,EAAEf,MAAMiC,KACpC,yBAAyBgE,KAAKlF,EAAEf,MAAM8Y,KACtC,SAAS7S,KAAKlF,EAAEf,MAAM0S,IAC3B,EACD8B,KANkB,SAMbzT,GACC,SAASkF,KAAKlF,EAAEf,MAAM+Y,IAC3B,GACE,CAAE5E,OAAQ,KAAMF,KAAM,KAAMC,MAAO,KAAMO,KAAM,KAAMC,QAAS,OACjEvC,KAEFxD,EAAAA,EAAAA,YAAU,WACR,IAAIzC,EAAJ,CAGA,IAAMoC,EAAW,SAAKkM,GACpB,OAAO,SAACzZ,GAEN,GADA8L,EAAMtL,QAAQ+M,WACVkM,EAAS,OAAOA,EAAQzZ,EAC7B,CACF,EACD,EAAuB8L,EAAMtL,QAArBc,EAAR,EAAQA,KAAM0T,EAAd,EAAcA,KACd1T,EAAKoY,YAAcnM,EAAS0F,IAC5B3R,EAAKqY,YAAcpM,EAAS6G,IAC5B9S,EAAKsY,UAAYrM,EAASmJ,IAC1BpV,EAAKuY,YAActM,EAAS2L,IAC5BlE,EAAK2E,YAAcpM,EAASkI,IAC5BT,EAAK8E,UAAYvM,EAAS4L,IAC1BnE,EAAK+E,QAAUxM,EAASiM,GAhBJ,CAiBrB,IAED,IAAMzB,GAAiB,WACrB,GAAI,OAACxG,SAAD,IAACA,IAAAA,GAAa5I,OAAlB,CACA,IAAMqR,EAAwBzI,GAAYjN,KAAI,SAAC6S,GAC7C,IAAQ9S,EAAS8S,EAAT9S,KAER,OADA8S,EAAE9S,KAAO,GACF,CAACA,EAAM8S,EAAEL,aACjB,IACD/S,GAAS,SAACxD,GAAD,OAAUiP,EAAAA,GAAAA,cAAwBjP,EAAMyZ,EAAxC,GANuB,CAOjC,EAEK9Y,GAAiB,WACrByQ,KACKN,GAAU1I,QACf5E,GAAS,SAACxD,GAAD,OAAUiP,EAAAA,GAAAA,aAAuBjP,EAAM8Q,GAAvC,GACV,EAEK5Q,GAAc,SAACH,GACnBwL,EAAMtL,QAAQ+M,WACd0M,GAAiB1I,GAAajR,GAC9ByX,IACD,EAEKhX,GAAoB,WAExB,GADA+K,EAAMtL,QAAQ+M,WACTlB,IAASkF,GAAY5I,OAA1B,CACA,IAAMrK,EAAO+N,GAAKvK,OAAOxD,KACjBoE,EAAkBpE,EAAlBoE,MAAOC,EAAWrE,EAAXqE,OACTuX,EAAS,IAAItP,EAAAA,MAAMlI,EAAOC,GAAQwL,OAAO,IACzCgM,EAAS5I,GAAYjN,KAAI,SAACuF,GAAD,OAAUA,EAAK+M,OAAf,IAC/BuD,EAAOnb,SAAQ,SAAC6K,GAAD,OAAUA,EAAK5C,UAAUiT,EAAzB,IACf7N,GAAKpF,UAAUiT,GACH,OAAZ3N,SAAY,IAAZA,IAAAA,GAActF,UAAUiT,GAExBC,EAAOnb,SAAQ,SAACmY,GAAD,OAAQA,EAAE9S,KAAO,EAAjB,IACf,IAAM+V,EAAeD,EAAO7V,KAAI,SAACuF,GAAD,OAAUA,EAAKiN,YAAf,IAChC/S,GAAS,SAACxD,GAAD,OACPiP,EAAAA,GAAAA,cAAwBjP,EAAM6Z,EAAc9I,GADrC,IAGT5E,IAdwC,CAezC,EAEKtL,IAAY8G,EAAAA,EAAAA,UACZqQ,IAAerQ,EAAAA,EAAAA,QAAO,IACtBmS,IAAa5N,EAAAA,EAAAA,IAAS,WAAO,IAAD,EAEF,GAD9B8D,KACI,UAACnP,GAAUZ,eAAX,OAAC,EAAmB6D,QACtB,UAAAjD,GAAUZ,eAAV,SAAmBiN,UAErBrM,GAAUZ,aAAUoR,EACpBtG,OAAesG,EAAWvQ,GAAWb,QACtC,IAEKwX,IAAavL,EAAAA,EAAAA,IAAS,WAC1B,IAAM0L,EAAI/W,GAAUZ,QACpB,GAAK2X,IACLkC,KACIlC,EAAErB,eAAiByB,GAAa/X,SAApC,CACA,IAAQL,EAAkBgY,EAAlBhY,QAASkE,EAAS8T,EAAT9T,KAGjB,GAFA8T,EAAE9T,KAAO,GAEJlE,EAAL,CAKA,IAAM0W,EAAWsB,EAAErB,aAMjB/S,EALGM,EAKM,SAAC9D,GAAD,OAAUiP,EAAAA,GAAAA,cAAwBjP,EAAM,CAAC,CAAC8D,EAAMwS,IAAhD,EAHA,SAACtW,GAAD,OAAUiP,EAAAA,GAAAA,UAAoBjP,EAAMsW,EAApC,EAJV,MAFKxS,GAAMN,GAAS,SAACxD,GAAD,OAAUiP,EAAAA,GAAAA,aAAuBjP,EAAM,CAAC8D,GAAxC,GAN8B,CAiBpD,IACKjB,GAAkB,SAACkX,GACvB,IAAMC,EAAKnZ,GAAUZ,QAChB+Z,IACLzO,EAAMtL,QAAQ+M,WACd+M,EAAGC,GACHjP,EAAe,IAAIyG,MAAMwI,EAAI,CAAC,GAAIlZ,GAAWb,SAC9C,GAEDoN,EAAAA,EAAAA,YAAU,WACR,GAAa,SAATnC,EAAiB,OAAOuM,EAC7B,GAAE,CAACvM,EAAMuM,MAEVwC,EAAAA,EAAAA,qBAAoBzP,GAAK,iBAAO,CAC9B7J,eAAAA,GACAH,kBAAAA,GACAN,YAAAA,GACA2C,gBAAAA,GAJuB,KF1vB3BwK,EAAAA,EAAAA,YAAU,WACR,IAAM6L,EAAU,SAACzZ,GAAD,OAAcA,EAAEsJ,gBAAhB,EAIhB,OAHAlE,SAASqV,iBAAiB,eAAgBhB,GAC1CrU,SAASqV,iBAAiB,gBAAiBhB,GAC3CrU,SAASqV,iBAAiB,aAAchB,GACjC,WACLrU,SAASsV,oBAAoB,eAAgBjB,GAC7CrU,SAASsV,oBAAoB,gBAAiBjB,GAC9CrU,SAASsV,oBAAoB,aAAcjB,EAC5C,CACF,GAAE,IEyvBD,IAAMkB,GAAoB,WACxBtP,GAAiB,GACjBgP,KAnkBqB,WACrB,GAAKhZ,GAAWb,QAAhB,CACA,cAAiBsL,EAAMtL,QAAQ6M,QAAQC,OAAvC,GAAOsN,EAAP,KAAWhL,EAAX,KACA,GAAKgL,GAAOhL,EAAZ,CACAA,EAAGvQ,SAAU,EAETwP,IAAWe,EAAGiL,YAAY,EAAGhM,IAEjC,IAAMiM,EAAM,GAAKxI,iBACXyI,EAAc9M,GAAcvL,EAASoY,EACvC/L,EAASiD,GAAYxR,QACpBuO,GAAWkD,GAAWzR,UACzBuO,EAASiD,GAAYxR,QAAUoP,EAAGoL,UAAU,CAAEjM,OAAAA,EAAQgM,WAAAA,IACtD9I,GAAWzR,SAAU,GAEvBuO,EAAO1P,SAAU,EAEjBuQ,EAAGvQ,SAAU,EACJ,OAATwP,SAAS,IAATA,IAAAA,GAAWoM,MAAML,EAfK,CAFS,CAkBhC,CAijBCM,GACA3K,IACD,GACD4K,EAAAA,EAAAA,WACE,YAAqD,IAAlDC,EAAiD,EAAjDA,KAAe9Y,GAAkC,SAA3CkC,OAA2C,MAA1B6W,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACrCzP,EAAMtL,QAAQ+M,WACd,IAGIiO,EAAYC,EAHRna,EAASwK,EAAMtL,QAAfc,KACFoa,EAAa,IAAI3P,IAAAA,OAAYwP,GAGnC,GAAIF,IAAUD,EAAM,CAClB,MAAiB9Z,EAAKiR,QAAQ1M,wBAAtBrH,EAAR,EAAQA,EAAGC,EAAX,EAAWA,EACXgd,EAAQ,IAAI7Q,EAAAA,MAAMpM,EAAGC,GACrB+c,EAAaE,EAAWnH,SAASkH,GACjCd,IACD,KAAM,CAAC,IAAD,UACiBS,EADjB,GACJI,EADI,KACQC,EADR,IAEN,CAED,IAAME,EAAcD,EAAWnH,SAASkH,GAClCG,EAActa,EAAKua,cAAcF,GAGjCzB,EADSyB,EAAYpH,SAASiH,GACdrN,OAAO7M,EAAKmN,MAClCnN,EAAK2F,UAAUiT,GAEf,IAAI4B,EAASxZ,EAAQgM,GAAU9N,QAI/B,GAHA8N,GAAU9N,QAAU8B,EACpBwJ,EAAMtL,QAAQyM,SAASE,cAAgB2O,GAEnCR,EAQF,OADAha,EAAKgB,MAAMwZ,EAAQF,GACZ,CAACD,EAAaF,GAPrBM,GAAUza,EAAMwa,EAAQvQ,EAAUqQ,GAC/BI,MAAK,kBAAMC,GAAc3a,EAAMiK,EAA1B,IACLyQ,MAAK,kBAAM9J,IAAN,IACL8J,MAAK,kBAAO9N,GAAW1N,QAAUc,EAAKoN,MAAjC,IACRL,GAAa/L,EAKhB,GACD,CACE4Z,YAAa,CAAEhW,IAAK,EAAGD,IAAK,GAC5BkW,WAAY,GACZtX,OAAQgH,KAIZuQ,EAAAA,EAAAA,WACE,YAA6C,IAA1CC,EAAyC,EAAzCA,MAAOlI,EAAkC,EAAlCA,MAAOmI,EAA2B,EAA3BA,QAASjB,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAC/B,GAA0B,IAAtBhN,GAAU9N,UAAiB8b,EAA/B,CACAD,EAAM/S,iBAEF+R,GAAOV,KAEX,IAAQrZ,EAASwK,EAAMtL,QAAfc,KACFib,EAAS,IAAIxQ,IAAAA,OAAYoI,GACzB+F,EAASvP,EAAO4J,SAASgI,GAAQpO,OAAO7M,EAAKmN,MACxC+N,EAActC,EAAjB1b,EAAUie,EAAOvC,EAAVzb,EACTie,EAAeC,GAAgBrb,EAAMiK,GAC3C,EAAyBjK,EAAKoN,OAAO6F,SAASmI,GAAnCE,EAAX,EAAQpe,EAAUqe,EAAlB,EAAepe,EACTqe,EAAW,IAAI/Q,IAAAA,OACnByQ,EAAKI,EAAK,EAAI5W,KAAK+W,IAAI/W,KAAKgX,EAAG,GAAMhX,KAAKqR,IAAIuF,IAAO,EACrDH,EAAKI,EAAK,EAAI7W,KAAK+W,IAAI/W,KAAKgX,EAAG,GAAMhX,KAAKqR,IAAIwF,IAAO,GAEvDvb,EAAK2F,UAAUiT,EAAO/L,OAAO2O,IAEzBxB,GACFW,GAAc3a,EAAMiK,GACjByQ,KAAK9J,IACL8J,MAAK,kBAAO9N,GAAW1N,QAAUc,EAAKoN,MAAjC,GApBoC,CAsB/C,GACD,CACE7J,OAAQgH,EACRoR,aAAc,CAAEC,SAAS,KAI7B,IAAMC,GAAepV,EAAgB2D,GACrC,OACE,wCACEhM,UAAU,eACVC,MAAO,CAAE+Y,OAAAA,IACT,gBAAevN,GACXgS,IACAjU,GALN,cAOE,mBAAQ6B,IAAKc,EAAUnM,UAAU,kBAGtC,IAGHmL,EAAQuS,YAAc,OAGtB,SAAShR,IACP,IAAMiR,GAAQ9d,EAAAA,EAAAA,YACPsK,GAAP,OAAewT,EAAf,MAKA,OAJAC,EAAAA,EAAAA,eAAczT,IAGdgD,EAAAA,EAAAA,kBAAgB,kBAAM,WAAM,OAAKhD,QAAL,IAAKA,GAAAA,EAAM4D,QAAjB,CAAN,GAAiC,CAAC5D,IAC3CwT,CACR,CAED,IAAMhN,GAAe,WACnB,IAAMkN,EAAW,IAAIC,QAKrB,OAAO,SAACvN,EAAgByF,GAAwB,IAAD,EAEzC7L,EADIgN,EAAkB5G,EAAlB4G,SAAUzG,EAAQH,EAARG,IAGZ/J,EAAK,UAAGkX,EAASvW,IAAI0O,UAAhB,QAA0B,IAAIpP,IACzCiX,EAAS9V,IAAIiO,EAAOrP,GACpB,IAAMU,EAASV,EAAMW,IAAIoJ,GAEzB,IAAU,OAANrJ,QAAM,IAANA,OAAA,EAAAA,EAAQkJ,UAAWA,EACrByF,EAAMzG,SAASlI,EAAO8C,MACtBA,EAAO9C,EAAO8C,SACT,CAAC,IAAD,EACL,IACEA,EAAO6L,EAAM+H,WAAW5G,EAIzB,CAHC,MAAO7W,GAEP,YADA0d,QAAQC,MAAM3d,EAEf,CACG,QAAJ,EAAA6J,SAAA,QAAAA,EAAS,IAAIkC,IAAAA,OACblC,EAAKxF,KAAO+L,EACZ/J,EAAMoB,IAAI2I,EAAK,CAAEvG,KAAAA,EAAMoG,OAAAA,GACxB,CAGD,OAFApG,EAAK2I,QAAU,EACf3I,EAAK4M,OAAQ,EACN5M,CACR,CACF,CAhCoB,GAkCfiE,GAAa,SAACR,EAAuB/B,GACzC,cAAqB+B,EAArB,GAAOsN,EAAP,KAAWhL,EAAX,KAAegO,EAAf,KACA,IAAKhD,IAAOhL,IAAOgO,EAAI,MAAO,GAC9B,IAAMC,EAAS,IAAIzH,EAAAA,KAAAA,UAAezL,EAAQY,GACpCuS,EAAQD,EAAOjH,QACfmH,EAAQF,EAAOjH,QAOrB,OANAiH,EAAO/a,UAAY,IAAIO,EAAAA,MAAM,QAC7BuX,EAAG3L,SAAS4O,GACZjO,EAAGX,SAAS6O,GACZF,EAAG3O,SAAS8O,GACZnO,EAAGoO,SAAU,EACbJ,EAAGI,SAAU,EACN,CAACH,EAAQC,EAAOC,EACxB,EAEKhL,GAAY,SAACH,EAAoBlS,GACrC,IAAMgT,EAAO,IAAI0C,EAAAA,KAAAA,UAAexD,EAAO,IAAIpH,EAAAA,KAAK,EAAG,IACnD,IAAK9K,EAAU,OAAOgT,EACtB,IAAM7Q,EAAQ,IAAIQ,EAAAA,MAAM3C,EAASmC,OASjC,OARInC,EAASud,WACXpb,EAAMqb,MAAQ,GACdxK,EAAK5Q,UAAYD,EACjB6Q,EAAKyK,UAAY,aAEjBzK,EAAKoB,YAAcpU,EAASiY,UAC5BjF,EAAK0K,YAAcvb,GAEd6Q,CACR,EAEKf,GAAc,SAACjS,EAAoBkS,GAAsC,IAAlByL,EAAiB,wDACtE5S,EAAmD/K,EAAnD+K,KAAMkN,EAA6CjY,EAA7CiY,UAAW/M,EAAkClL,EAAlCkL,YAAa/I,EAAqBnC,EAArBmC,MAAOob,EAAcvd,EAAdud,UACrC5R,EAAO,IAAI+J,EAAAA,KACjB/J,EAAKhC,IAAIuI,GACI,UAATnH,IACF5I,EAAQ,OACR8V,EAAY/M,GAED,WAATH,IACF5I,EAAQ,UACR8V,EAAY,GAEd,IAAMyF,EAAc,IAAI/a,EAAAA,MAAMR,GAU9B,OATc,SAAT4I,GAAmBwS,GAAwB,UAATxS,IAAqB4S,KAC1DD,EAAYF,MAAQ,GACpB7R,EAAK8R,UAAY,YAEnB9R,EAAK+R,YAAcA,EACnB/R,EAAKyI,YAAc6D,EACnBtM,EAAKiS,WAAa,QAClBjS,EAAKkS,UAAY,QACjBlS,EAAKoK,OAAQ,EACNpK,CACR,EAEKoL,GAAW,SAAC5N,GAChBA,EAAK2U,WAAa,EAClB3U,EAAK4U,UAAY,CAAC,GAAI,IACtB5U,EAAK6U,QAAU,kBAAO7U,EAAK2U,YAAc,CAA1B,CAChB,EAEKzC,GAAY,SAChBza,EACAwa,EACAvQ,EACAoT,GAJgB,OAMhB,IAAIC,SAAc,SAACC,GACjB,GAAe,IAAX/C,EAAc,OAAO+C,IACzB,MAAyBvd,EAAKoN,OAAnBoQ,EAAX,EAAQtgB,EAAUugB,EAAlB,EAAetgB,EACPiE,EAAkB6I,EAAlB7I,MAAOC,EAAW4I,EAAX5I,OAGXmZ,EAAS,IACX6C,EAAU,IAAI5S,IAAAA,QACV+P,EAAS,EAAKpZ,EAAQoc,IAAOhD,EAAS,IACtCA,EAAS,EAAKnZ,EAASoc,IAAOjD,EAAS,KAI7C,IAAIkD,EAAW,GACflD,EAAS9V,KAAK+W,IAAIjB,EAAQ,EAAIkD,IAER,SAAhBC,IACJ3d,EAAKgB,MAAMwZ,EAAQ6C,KACbK,EAAW,EAAGpO,sBAAsBqO,GACrCrO,uBAAsB,kBAAMiO,GAAN,GAC5B,CACDI,EACD,GA5Be,EA8BZtC,GAAkB,SAACrb,EAAkBiK,GACzC,MAAiBjK,EAAKoN,OAAdlQ,EAAR,EAAQA,EAAGC,EAAX,EAAWA,EACLygB,EAAU1T,EAAAA,KAAAA,IAASlK,EAAKhD,KAAMiN,GAAU4C,OAAO,GACtCgR,EAAuBD,EAA9Bxc,MAAqB0c,EAASF,EAAjBvc,OACrB,EAAsC4I,EAASgJ,SAAS2K,GAAzCG,EAAf,EAAQ3c,MAAqB4c,EAA7B,EAAqB3c,OAEf4c,EAAU/gB,EAAI2gB,EAAOA,EAAO3gB,EAAI6gB,EAAOA,EAAO7gB,EAC9CghB,EAAU/gB,EAAI2gB,EAAOA,EAAO3gB,EAAI6gB,EAAOA,EAAO7gB,EACpD,OAAO,IAAImM,EAAAA,MAAM2U,EAASC,EAC3B,EAEKvD,GAAgB,SAAC3a,EAAkBiK,GAAnB,OACpB,IAAIqT,SAAc,SAACC,GACjB,IAAMnC,EAAeC,GAAgBrb,EAAMiK,GAC3C,GAAIjK,EAAKoN,OAAO+Q,OAAO/C,GAAe,OAAOmC,IAC7C,IAAIG,EAAW,IACM,SAAfU,IACJ,IAAMvL,EAAQ7S,EAAKoN,OAAO6F,SAASmI,GACnCpb,EAAK2F,UAAUkN,EAAMhG,OAAO6Q,MACtBA,EAAW,EAAGpO,sBAAsB8O,GACrC9O,uBAAsB,kBAAMiO,GAAN,GAC5B,CACDa,EACD,GAZmB,EAchBhI,GAAa,SAACX,EAAqBQ,GACvC,IAAMoI,EAAW,SAACxI,GAChB,QAAkC,IAA9BI,EAAUhE,SAAS5K,SAAgBwO,EAAEwI,SAASpI,EAAUzV,WAGpDqV,EAAE5C,SAASgD,EAAW,CAAElB,QAAQ,EAAOE,OAAO,IAASqJ,QAAQzI,EACxE,EACD,OAAOJ,EACJtF,QAAO,SAAC5H,GACP,IAAKA,EAAKxF,KAAM,OAAO,EACvB,IAAKwF,EAAK/H,OAAO+d,WAAWtI,EAAUzV,QAAS,OAAO,EACtD,GAAI+H,aAAgBkC,IAAAA,KAClB,OAAO4T,EAAS9V,GAEhB,IAAQpI,EAAaoI,EAAbpI,SACRoI,EAAKpI,SAAW,EAChB,IAAMqe,EAAW,IAAI1J,EAAAA,KAAAA,UAAevM,EAAK/H,QAKzC,OAJAge,EAAS5O,UAAW,EACpB4O,EAASre,SAAWA,EACpBoI,EAAKpI,SAAWA,EAChBqe,EAASrS,SACFkS,EAASG,IAAavI,EAAUoI,SAAS9V,EAAK/H,OAExD,IACAwC,KAAI,qBAAGD,IAAH,GACR,EAEK4V,GAAmB,SAAClD,EAAqBzW,GAC7C,IAAQqY,EAAgCrY,EAAhCqY,UAAW9V,EAAqBvC,EAArBuC,MAAOob,EAAc3d,EAAd2d,UAC1BlH,EAAM/X,SAAQ,SAAC6K,GACb,GAAIA,aAAgBkC,IAAAA,WAAmBlJ,EAAO,CAC5C,IAAMkd,EAAW,IAAI1c,EAAAA,MAAMR,GAC3BgH,EAAK/G,UAAYid,CAClB,CAED,GAAMlW,aAAgBkC,IAAAA,KAAtB,CAEA,GAAIlJ,EAAO,CACT,IAAMkd,EAAW,IAAI1c,EAAAA,MAAMR,GACJ,aAAnBgH,EAAKsU,YAA0B4B,EAAS7B,MAAQ,IACpDrU,EAAKuU,YAAc2B,CACpB,CAEGpH,IAAW9O,EAAKiL,YAAc6D,GAE7B9O,EAAKuU,kBAA6BxM,IAAdqM,IACzBpU,EAAKuU,YAAYF,MAAQD,EAAY,GAAM,EAC3CpU,EAAKsU,UAAYF,EAAY,WAAa,SAZD,CAa1C,GACF,EAEK/F,GAAiB,SAACxC,EAAoB9C,GAC1C,IAAMS,EAASqC,EAAMpC,QAAQV,EAAO,CAAEiD,MAAO9J,IAAAA,UAAiBiU,MAAM,IACpE,IAAU,OAAN3M,QAAM,IAANA,OAAA,EAAAA,EAAQxJ,gBAAgBkC,IAAAA,UAAiB,cAAOsH,QAAP,IAAOA,OAAP,EAAOA,EAAQxJ,IAC7D,EAEKwO,GAAY,SAACzF,GACjB,OAAO,IAAI7G,IAAAA,WAAgB,CACzB6G,MAAOA,EAAMvI,IAAI,IAAIO,EAAAA,MAAM,EAAG,KAC9BzK,QAAS,GACTyB,SAAU,GACVF,WAAY,qBAEf,EAEKwV,GAAY,SAAZA,EAAa+I,GACjB,OAAIA,aAAclU,IAAAA,KACTkU,EAAGC,UAAY,GAAK,CAACD,GAE1BA,aAAclU,IAAAA,aACTkU,EAAGE,SAAS7b,IAAI4S,GAAWkJ,OAE7B,EACR,E,gDCjnCYC,GAAb,mMACSC,MAAe,CACpBC,UAAU,GAFd,mDASE,SAAyB5C,EAAc6C,GACrC9C,QAAQC,MAAM,kBAAmBA,EAAO6C,EACzC,GAXH,oBAaE,WACE,OAAIC,KAAKH,MAAMC,UACN,iCAGFE,KAAKC,MAAMP,QACnB,IAnBH,uCAKE,SAAuCQ,GACrC,MAAO,CAAEJ,UAAU,EACpB,KAPH,GAAmCK,EAAAA,WCS7BC,GAYD,SAAC,GAYC,IAXLC,EAWI,EAXJA,UACA9V,EAUI,EAVJA,UACA+V,EASI,EATJA,aACAC,EAQI,EARJA,YACAC,EAOI,EAPJA,SAOI,IANJC,OAAAA,OAMI,MANK,GAML,MALJC,QAAAA,OAKI,SAJJC,EAII,EAJJA,aAII,IAHJC,QAAAA,OAGI,aAFJC,QAAAA,OAEI,OAFM9W,EAAAA,EAAAA,MAEN,MADJ+W,WAAAA,OACI,SACEC,EAAYJ,IAAgBK,EAAAA,EAAAA,OAAM,EAAG,IAAK,IAChD,GAA8BC,EAAAA,EAAAA,IAAU,CAAEF,UAAAA,EAAWG,KAAMJ,IAA3D,eAAOxW,EAAP,KAAY1L,EAAZ,KAAqBuiB,EAArB,MACAhU,EAAAA,EAAAA,YAAU,WACR,GAAKwT,EACL,OAAKQ,GAAUviB,OACf+hB,EAAaQ,EAAMC,mBADYT,EAAa,EAE7C,GAAE,CAAC/hB,EAASuiB,EAAOR,IAEpB,OAA8B7hB,EAAAA,EAAAA,YAA9B,eAAOuiB,EAAP,KAAgBC,EAAhB,KAEMC,GAAYC,EAAAA,EAAAA,cAChBC,EAAAA,EAAAA,OAAI,uBAAC,8FACEjB,GAAaC,EADf,iEAEgC,uDAFhC,uBAEKiB,EAFL,EAEKA,iBAFL,KAGHJ,EAHG,SAGcI,EAAiBjB,EAAQD,GAHvC,+EAKL,CAACA,EAAUC,IAGPkB,EAAO/iB,GAAWgiB,GACxBzT,EAAAA,EAAAA,YAAU,YACHuT,GAAWiB,GAAMJ,GACvB,GAAE,CAACI,EAAMjB,EAASa,IAEnB,IAAM/W,GAAcxG,EAAAA,EAAAA,UAClB,yBAAMsc,QAAN,IAAMA,OAAN,EAAMA,EAAcsB,UAAUf,GAASgB,SAASC,SAAhD,GACA,CAACxB,EAAcO,IAGXkB,EAAcC,QAAQX,IAAYb,GAClCyB,EAAWN,GAAQI,EAGnB1c,EADoBkF,EAAlBrI,OAAkBqI,EAAVtI,MAGhB,OACE,iBAAKqI,IAAKA,EAAKrL,UAAU,eAAe,eAAcyhB,EAAtD,WACE,gBAAKzhB,UAAU,cAAcijB,QAAO,kBAAqB,IAAR7c,KAChD4c,IACC,SAACE,GAAD,CACE5X,UAAWA,EACXC,YAAaA,EACb+V,YAAaA,EACb5V,OAAQ0W,GAAWhB,EACnBK,QAASA,MAKlB,EACDN,GAAezD,YAAc,cACtB,IAEDwF,GAMD,SAAC,GAAsE,IAApE5X,EAAmE,EAAnEA,UAAWgW,EAAwD,EAAxDA,YAAa/V,EAA2C,EAA3CA,YAA2C,IAA9BkW,QAAAA,OAA8B,SAAb/V,EAAa,EAAbA,OACtD1K,GAAWmiB,EAAAA,EAAAA,MACXzjB,GAAU8I,EAAAA,EAAAA,QAAoB,MACpC,GAAoC3I,EAAAA,EAAAA,WAAS,GAA7C,eAAOujB,EAAP,KAAmBC,EAAnB,KACA,GAAoCxjB,EAAAA,EAAAA,UAAsBoL,GAA1D,eAAOrL,EAAP,KAAmB0jB,EAAnB,KACA,GAAkCzjB,EAAAA,EAAAA,YAAlC,eAAO6B,EAAP,KAAkB6hB,EAAlB,KACA,GAAoC1jB,EAAAA,EAAAA,WAAS,GAA7C,eAAO8B,EAAP,KAAmB6hB,EAAnB,KAEMC,GAAe1W,EAAAA,EAAAA,IACnB,SAAC2W,GACC,GAAKpC,EAAL,CACA,IAAMqC,EAAQD,aAAe5T,EAAAA,UAAY4T,EAAMA,EAAIpY,GAC/CqY,IAAUrY,GACdgW,EAAYqC,EAHY,CAIzB,IAgBH,OAAOlC,GACL,SAAC,EAAAmC,KAAD,CACEtY,UAAWA,EACXC,YAAaA,EACbG,OAAQA,EACRD,UAAQ,KAGV,UAACkV,GAAD,YACE,SAAC,EAAAiD,KAAD,CACEtY,UAAWA,EACXC,YAAaA,EACblH,SAAUof,EACV/X,OAAQA,EACR1K,SAAUA,EACVqK,IAAK3L,EACLkM,eAxBiB,SACrBlK,EACAid,GAEA4E,EAAa7hB,GACb8hB,EAAc7E,EACf,EAmBKhT,iBA9BmB,SAACkY,EAAiBjkB,GACzC0jB,GAAc,SAAC7L,GAAD,cAAO7X,QAAP,IAAOA,EAAAA,EAAc6X,CAArB,IACd4L,EAAcQ,EACf,KA6BG,SAACpkB,EAAD,CACEC,QAASA,EACTC,QAASyjB,EACTxjB,WAAYA,IAEb8B,IACC,SAACD,EAAD,CACE/B,QAASA,EACTgC,UAAWA,EACXC,WAAYA,MAKrB,ECpKD,GD6F2ByJ,EAAAA,KAAW+V,G,oTEnEzB2C,EAAmB,CAAC,GAAI,GAAI,GAAI,IAChCtY,EAAsC,CACjDO,KAAM,OACNC,QAAQ,EACRiN,UAAW,GACX/M,YAAa,GACb/I,MAAO,UACPob,WAAW,EACXtS,OAAO,EACPyJ,aAAa,EACbD,cAAc,EACdsO,UAAWD,EACXhL,SAAU,IAGGkL,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,KAAAA,MAAf,yGACuBC,IAAAA,QAA8B,aADrD,UACMjjB,EADN,8BAGIA,EAAWwK,EAHf,SAIUyY,IAAAA,QAAoB,YAAajjB,GAJ3C,gCAMSA,GANT,kEASekjB,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,KAAAA,MAAf,WAA4BljB,GAA5B,sFACQijB,IAAAA,QAAoB,YAAajjB,GADzC,kEAIA,IAAMmjB,EAAkB/Y,EAAAA,cAAoB,CAC1CpK,SAAUwK,EACV7K,eAAiB,WAAQ,IAGpB,SAASwiB,IACd,IAAQniB,GAAaojB,EAAAA,EAAAA,YAAWD,GAAxBnjB,SAER,OADA4c,EAAAA,EAAAA,eAAc5c,GACPA,CACR,CAEM,SAASqjB,IAEd,OAD2BD,EAAAA,EAAAA,YAAWD,GAA9BxjB,cAET,CAEM,IAAM2jB,EAA0C,SAAC,GAAkB,IAAhB7D,EAAe,EAAfA,SACxD,GAAgC5gB,EAAAA,EAAAA,UAAS2L,GAAzC,eAAOxK,EAAP,KAAiBujB,EAAjB,MACArW,EAAAA,EAAAA,YAAU,YA7CL,WAcQ8V,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAgCXA,GAAc1H,KAAKiI,EACpB,GAAE,IAEH,IAAM5jB,EAAiB,SAACC,GACtB2jB,GAAY,SAAC1jB,GACX,IAAM2jB,GAAO,kBAAQ3jB,GAASD,GAE9B,OAvCN,SASesjB,GAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CA6BTA,CAAaM,GACNA,CACR,GACF,EAEOxY,EAAWhL,EAAXgL,OAWR,OAVAkC,EAAAA,EAAAA,YAAU,WACR,IAAMuW,EAAY,SAACnkB,GACHA,EAAEoI,WAA+B,QAAlBpI,EAAEqI,aAChBqD,GACf0Y,GAAc,kBAAM/jB,EAAe,CAAEqL,QAAQ,GAA/B,GACf,EAED,OADAtG,SAASqV,iBAAiB,YAAa0J,GAChC,kBAAM/e,SAASsV,oBAAoB,YAAayJ,EAAhD,CACR,GAAE,CAACzY,KAGF,SAACmY,EAAgBQ,SAAjB,CAA0BnlB,MAAO,CAAEwB,SAAAA,EAAUL,eAAAA,GAA7C,SACG8f,GAGN,EAEKiE,GAAgBlC,EAAAA,EAAAA,MAAI,yCAAC,WAAO5H,GAAP,mFACnBgK,EAAO,WACXC,EAAAA,GAAAA,QAAgB,iBAChBZ,IAAAA,QAAoB,mBAAmB,EACxC,EAJwB,SAKfA,IAAAA,QAAoB,mBALL,mEAMzBY,EAAAA,GAAAA,KAAa,CACXpkB,SACE,wDAEE,SAAC,IAAD,CACE9B,MAAM,QACNC,KAAK,QACLqC,MAAM,SAAC6jB,EAAA,EAAD,IACN1jB,QAAS,WACPwZ,IACAgK,GACD,EAPH,0BAWA,SAAC,IAAD,CACEhmB,KAAK,QACLF,KAAK,OACLC,MAAM,SACNsC,MAAM,SAAC8jB,EAAA,EAAD,CAAe9kB,MAAO,CAAEkD,MAAO,UACrC/B,QAASwjB,OAIfrlB,IAAK,gBACLS,UAAW,aACXglB,SAAU,IAhCa,2CAAD,sD,qCCxGnB,SAASle,EAAoB9D,EAAeC,GACjD,IAAM8D,EAASrB,SAASC,cAAc,UAChCqB,EAAUD,EAAOke,WAAW,MAClC,IAAKje,EACH,MAAM,IAAIke,MAAM,oCAIlB,OAFAne,EAAO/D,MAAQA,EACf+D,EAAO9D,OAASA,EACT,CAAE8D,OAAAA,EAAQC,QAAAA,EAClB,CAEM,SAASgH,EAAcjH,GAC5B,GAAKA,EAAL,CACAA,EAAO/D,MAAQ,EACf+D,EAAO9D,OAAS,EAChB,IAAMkiB,EAAMpe,EAAOke,WAAW,MAC3B,OAAHE,QAAG,IAAHA,GAAAA,EAAKtd,UAAU,EAAG,EAAG,EAAG,EAJL,CAKpB,C,wUCNYnH,EAGR,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,eAAgBK,EAAe,EAAfA,SACdud,EAAqBvd,EAArBud,UAAWpb,EAAUnC,EAAVmC,MACnB,GAAkCtD,EAAAA,EAAAA,WAAS,GAA3C,eAAOulB,EAAP,KAAkBC,EAAlB,KAEA,OACE,iBAAKrlB,UAAU,YAAY,YAAWolB,EAAW,UAAS7G,EAA1D,WACE,iBAAKve,UAAU,aAAf,WACE,SAACslB,EAAD,CACE3kB,eAAgBA,EAChBK,SAAUA,EACVqkB,aAAcA,KAEhB,SAACE,EAAD,CAAiBC,QAASjH,EAAW5d,eAAgBA,QAEvD,SAAC8kB,EAAD,CACEtiB,MAAOA,GAAS,GAChBK,SAAU,SAACC,GAAD,OAAO9C,EAAe,CAAEwC,MAAOM,GAA/B,MAIjB,EAEY6hB,EAKR,SAAC,GAKC,IAAD,IAJJ3kB,EAII,EAJJA,eACAK,EAGI,EAHJA,SAGI,IAFJqkB,aAAAA,OAEI,MAFW,WAAQ,EAEnB,MADJK,MAAAA,OACI,MADI,YACJ,EACEC,EAAY3kB,EAAS0kB,GACrB3B,EAAS,UAAG/iB,EAAS+iB,iBAAZ,QAAyBD,EAAAA,GAClC3gB,EAAkB,cAAVuiB,GAAA,UAAwB1kB,EAASmC,aAAjC,QAAmD,OAE3DyiB,GAAS7gB,EAAAA,EAAAA,UACb,kBAAMgf,EAAU8B,QAAV,OAAkBF,QAAlB,IAAkBA,EAAAA,GAAc,EAAtC,GACA,CAACA,EAAW5B,IAGd,GAA8BlkB,EAAAA,EAAAA,WAASimB,EAAAA,EAAAA,IAAK,EAAC,GAAO,GAAO,GAAO,KAAlE,eAAOC,EAAP,KAAgBC,EAAhB,MACA9X,EAAAA,EAAAA,YAAU,WACJ6X,EAAQE,UAAS,GAAOZ,GAAa,GACpCA,GAAa,EACnB,GAAE,CAACU,EAASV,IAGb,OAAqBxlB,EAAAA,EAAAA,WAAS,WAAO,IAAD,EAC5BqmB,EAAUxgB,SAASygB,cAAc,qBAGvC,OAFQ,iBAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAS/f,wBAAwBnD,aAApC,QAA6C,GAC1C0C,SAASI,KAAKK,wBAAwBnD,KAElD,IALMojB,GAAP,eAOMC,EAAgB,SAACrjB,GAAD,MACnB,CACC,cAAc,QAAd,OAAuB,IAAMsjB,EAAAA,GAA7B,gBAA0CtjB,EAA1C,cAAqDojB,EAArD,KAFkB,EAKhB1hB,EAAO,CACX,CAAElF,OAAQ,EAAGqF,MAAO,OADT,eAERkf,EAAUnf,KAAI,SAAC5B,EAAOujB,GAAR,MAAmB,CAClC/mB,MAAO+mB,EACP1hB,OACE,SAAC,IAAD,CACE2hB,KAAMT,EAAQze,IAAIif,GAClBE,aAAc,SAACniB,GAAD,OAAO0hB,GAAW,SAACnlB,GAAD,OAAUA,EAAKkH,IAAIwe,EAAOjiB,EAA1B,GAAlB,EACdpE,QAAS0lB,IAAWW,EAAQ,CAAC,SAAW,GACxCpmB,UAAU,SACVK,sBAAoB,EACpBC,SACE,SAAC,IAAD,CACE+F,IAAK,EACLD,IAAK,IACLvG,UAAU,cACV0mB,aAAc1jB,EACd2jB,cAAe,SAACC,GACd,GAAI7C,EAAUkC,SAASW,GAErB,OADAZ,GAAW,SAACnlB,GAAD,OAAUA,EAAKkH,IAAIwe,GAAO,EAA1B,IACJ5lB,GAAe,UAAG+kB,EAAQkB,IAEnC,IAAMC,EAAQ9C,EAAU+C,QACxBD,EAAMN,GAASK,EACfjmB,GAAe,QAAEojB,UAAW8C,GAAQnB,EAAQkB,GAC7C,IApBP,UAwBE,gBAAK5mB,UAAU,iBAAiBC,MAAOomB,EAAcrjB,GAArD,UACE,SAAC,IAAD,CAAYhD,UAAW,gBAAkB0lB,EAAOviB,MAAOA,QA5B9C,MAmCnB,OACE,SAAC,IAAD,CACEnD,UAAU,YACVR,MAAOomB,EACPlhB,QAASA,EACTL,SAAU,SAAC0iB,GAAD,aAAOpmB,GAAe,UAAG+kB,EAAJ,UAAY3B,GAAWgD,UAAvB,QAA6B,IAAlD,GAGf,EAEKxB,EAGD,SAAC,GAAyC,IAAD,IAAtCC,QAAAA,OAAsC,SAArB7kB,EAAqB,EAArBA,eACvB,OACE,mBAAOX,UAAU,aAAjB,WACE,kBACEtB,KAAK,WACLiG,KAAK,YACL6gB,QAASA,EACTnhB,SAAU,SAAC/D,GAAD,OAAOK,EAAe,CAAE4d,UAAWje,EAAE6E,OAAOqgB,SAA5C,KAEZ,gBAAKxlB,UAAU,YAAf,UACE,SAAC6D,EAAA,EAAD,CAAUnF,KAAK,uBAItB,EAEY+mB,EAGR,SAAC,GAAD,IAAGjiB,EAAH,EAAGA,SAAUL,EAAb,EAAaA,MAAb,OACH,gBAAKnD,UAAU,eAAf,SACGsD,EAAAA,GAAAA,KAAc,SAACG,GAAD,OACb,8BACE,kBACE+hB,QAASriB,IAAUM,EACnB/E,KAAK,QACLiG,KAAK,QACLN,SAAU,SAAC/D,GAAD,OAAOA,EAAE6E,OAAOqgB,SAAWhiB,EAASC,EAApC,KAEZ,gBACE,aAAYA,EACZzD,UAAU,SACVC,MAAO,CAAE+mB,gBAAiBvjB,EAAGwjB,YAAaxjB,OAVlCA,EADC,KAFd,C","sources":["component/IconFont.tsx","pages/reader/tools/DrawTools.tsx","component/Draw/cursor/cursor.ts","component/Draw/touch.ts","component/Draw/grid.tsx","component/Draw/Draw.tsx","lib/ErrorBoundary.tsx","component/PageWrapper/PageWrapper.tsx","component/PageWrapper/index.tsx","lib/draw/DrawCtrl.tsx","lib/draw/canvas.ts","pages/reader/tools/PenPanel.tsx"],"sourcesContent":["import { createFromIconfontCN } from \"@ant-design/icons\";\n\nexport default createFromIconfontCN({\n  scriptUrl: \"//at.alicdn.com/t/c/font_3181679_61bmx4utsp.js\",\n});\n","import { CSSProperties, FC, RefObject, useMemo, useState } from \"react\";\nimport {\n  CopyOutlined,\n  BoldOutlined,\n  DeleteOutlined,\n  BgColorsOutlined,\n  ItalicOutlined,\n} from \"@ant-design/icons\";\nimport { Button, ButtonProps, Popover, Select } from \"antd\";\nimport { DrawCtrl } from \"lib/draw/DrawCtrl\";\nimport { ColorSelect, PenPanel } from \"./PenPanel\";\nimport { allColors } from \"lib/color\";\nimport { DrawRefType } from \"component/Draw\";\nimport { Color } from \"paper/dist/paper-core\";\nimport IconFont from \"component/IconFont\";\nimport \"./draw-tools.sass\";\n\nconst btnProps: ButtonProps = {\n  type: \"text\",\n  shape: \"round\",\n  size: \"small\",\n};\n\nconst getPosVars = (x: number, y: number) => {\n  return { \"--pos-x\": x + \"px\", \"--pos-y\": y + \"px\" } as CSSProperties;\n};\nconst getObjVars = (obj: Record<string, string | number>, unit?: string) => {\n  const result: Record<string, string | number> = {};\n  Object.entries(obj).forEach(([key, value]) => {\n    if (unit) value += unit;\n    result[\"--\" + key] = value;\n  });\n  return result as CSSProperties;\n};\n\nexport const SelectTool: FC<{\n  drawRef: RefObject<DrawRefType>;\n  visible: boolean;\n  clickPoint: paper.Point;\n}> = ({ drawRef, visible, clickPoint }) => {\n  const [currDrawCtrl, setCurrDrawCtrl] = useState<Partial<DrawCtrl>>({});\n\n  const { x, y } = clickPoint;\n  return (\n    <div\n      className=\"select-tool tool-options\"\n      data-visible={visible}\n      style={getPosVars(x, y)}\n    >\n      <Popover\n        trigger=\"click\"\n        placement=\"bottom\"\n        overlayClassName=\"style-pop\"\n        getPopupContainer={(e) => e.parentElement!}\n        destroyTooltipOnHide\n        content={\n          <PenPanel\n            updateDrawCtrl={(updated) => {\n              setCurrDrawCtrl((prev) => ({ ...prev, ...updated }));\n              drawRef.current?.mutateStyle(updated);\n            }}\n            drawCtrl={currDrawCtrl}\n          />\n        }\n      >\n        <Button icon={<BgColorsOutlined />} {...btnProps} />\n      </Popover>\n      <Button\n        icon={<CopyOutlined />}\n        onClick={() => drawRef.current?.duplicateSelected()}\n        {...btnProps}\n      />\n      <Button\n        danger\n        icon={<DeleteOutlined />}\n        onClick={() => drawRef.current?.deleteSelected()}\n        {...btnProps}\n      />\n    </div>\n  );\n};\n\nexport const TextTool: FC<{\n  pointText: paper.PointText;\n  drawRef: RefObject<DrawRefType>;\n  renderSlow: boolean;\n}> = ({ pointText, drawRef, renderSlow }) => {\n  const { view, position, leading, content, rotation } = pointText;\n  const { fontFamily, fontWeight, fontSize } = pointText;\n\n  const { x, y } = view.projectToView(position);\n  const { topLeft, bottomLeft } = pointText.bounds;\n  const { x: bx, y: by } = view.projectToView(topLeft);\n  const { x: bbx, y: bby } = view.projectToView(bottomLeft);\n  const optionAtBottom = by < 90;\n\n  const scale = pointText.viewMatrix.scaling.x;\n  const { width, height } = pointText.internalBounds;\n\n  const lineHeight = +leading / +fontSize ?? 1.2;\n\n  const color = pointText.fillColor?.toCSS(true) ?? allColors[0]!;\n  const fontColorBtn = (\n    <Popover\n      content={\n        <ColorSelect\n          color={color}\n          setColor={(c) =>\n            drawRef.current?.mutatePointText((prev) => {\n              prev.fillColor = new Color(c);\n            })\n          }\n        />\n      }\n      trigger=\"click\"\n      overlayStyle={{ width: 200 }}\n      placement=\"bottom\"\n      getPopupContainer={(e) => e.parentElement!}\n    >\n      <Button\n        {...btnProps}\n        icon={\n          <IconFont\n            type=\"icon-circle\"\n            className=\"text-color-icon\"\n            style={{ color }}\n          />\n        }\n      />\n    </Popover>\n  );\n\n  const { isItalic, isBold } = parseFontStyle(fontWeight);\n  const fontStyleCSS = {\n    fontWeight: isBold ? \"bold\" : \"normal\",\n    fontStyle: isItalic ? \"italic\" : \"normal\",\n  };\n\n  const fontFamilySelect = (\n    <Select\n      className=\"font-select\"\n      popupClassName=\"font-drop\"\n      value={fontFamily}\n      onChange={(v) => {\n        drawRef.current?.mutatePointText((prev) => {\n          prev.fontFamily = v;\n        });\n      }}\n      size=\"small\"\n      bordered={false}\n      virtual={false}\n      getPopupContainer={(e) => e.parentElement.parentElement!}\n      dropdownMatchSelectWidth={100}\n      options={[\n        { value: \"Arial, sans-serif\", name: \"Arial\" },\n        { value: \"'Times New Roman', serif\", name: \"Times\" },\n        { value: \"Georgia, serif\", name: \"Georgia\" },\n        { value: \"'Courier New', monospace\", name: \"Courier\" },\n      ].map(({ value, name }) => ({\n        value,\n        label: (\n          <span style={{ fontFamily: value, fontWeight: \"normal\" }}>\n            {name}\n          </span>\n        ),\n      }))}\n    />\n  );\n\n  const offset = useMemo(\n    // paperjs sets all baseline ratio to 0.75.\n    () => 0.75 - getBaselineRatio(fontFamily, lineHeight),\n    [fontFamily, lineHeight]\n  );\n\n  return (\n    <div\n      className=\"text-tool\"\n      style={{\n        ...getObjVars({ scale, color }),\n        ...getObjVars({ rotation }, \"deg\"),\n        ...getObjVars({ width, height }, \"px\"),\n        ...getObjVars({ offset }, \"em\"),\n        ...getPosVars(x, y),\n      }}\n    >\n      <div\n        className=\"textarea-wrapper\"\n        data-empty={!content}\n        style={{ fontSize, fontFamily, lineHeight, ...fontStyleCSS }}\n      >\n        <textarea\n          autoFocus={!content}\n          placeholder=\"Text\"\n          value={content}\n          onChange={(e) => {\n            drawRef.current?.mutatePointText((prev) => {\n              prev.content = e.target.value;\n            });\n          }}\n          data-slow={renderSlow}\n        />\n      </div>\n      <div\n        className=\"tool-options text-options\"\n        data-bottom={optionAtBottom}\n        style={{\n          ...(optionAtBottom ? getPosVars(bbx, bby) : getPosVars(bx, by)),\n        }}\n      >\n        <div className=\"row\">\n          {fontFamilySelect}\n          {fontColorBtn}\n        </div>\n        <div className=\"row\">\n          <Button\n            onClick={() => {\n              drawRef.current?.mutatePointText((prev) => {\n                prev.fontWeight = toggleBold(prev.fontWeight);\n              });\n            }}\n            {...btnProps}\n            type={isBold ? \"link\" : \"text\"}\n            icon={<BoldOutlined />}\n          />\n          <Button\n            onClick={() => {\n              drawRef.current?.mutatePointText((prev) => {\n                prev.fontWeight = toggleItalic(prev.fontWeight);\n              });\n            }}\n            {...btnProps}\n            type={isItalic ? \"link\" : \"text\"}\n            icon={<ItalicOutlined />}\n          />\n          <Button\n            {...btnProps}\n            icon={<IconFont type=\"icon-font_size_down\" />}\n            onClick={() => {\n              drawRef.current?.mutatePointText((prev) => {\n                const { topLeft } = prev.bounds;\n                prev.scale(0.9, topLeft);\n              });\n            }}\n          />\n          <Button\n            {...btnProps}\n            icon={<IconFont type=\"icon-font_size_up\" />}\n            onClick={() => {\n              drawRef.current?.mutatePointText((prev) => {\n                const { topLeft } = prev.bounds;\n                prev.scale(1.1, topLeft);\n              });\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst parseFontStyle = (fontStyle: string | number) => {\n  fontStyle = fontStyle + \"\";\n  const isItalic = /italic/g.test(fontStyle);\n  const isBold = /bold/g.test(fontStyle);\n  return { isItalic, isBold };\n};\n\nconst toggleItalic = (fontStyle: string | number) => {\n  const { isItalic, isBold } = parseFontStyle(fontStyle);\n  const boldText = isBold ? \"bold\" : \"normal\";\n  return (isItalic ? \"\" : \"italic \") + boldText;\n};\n\nconst toggleBold = (fontStyle: string | number) => {\n  const { isItalic, isBold } = parseFontStyle(fontStyle);\n  const italicText = isItalic ? \"italic \" : \"\";\n  return italicText + (isBold ? \"normal\" : \"bold\");\n};\n\nconst getBaselineRatio = (fontFamily: string, lineHeight: number) => {\n  const div = document.createElement(\"div\");\n  div.innerText = \"p\";\n  Object.assign(div.style, { fontSize: \"100px\", fontFamily, lineHeight });\n  document.body.appendChild(div);\n\n  const span = document.createElement(\"span\");\n  span.style.display = \"inline-block\";\n  div.appendChild(span);\n\n  const r0 = div.getBoundingClientRect();\n  const r1 = span.getBoundingClientRect();\n  const ratio = (r1.y - r0.y) / r0.height;\n  document.body.removeChild(div);\n  return Math.max(-1, Math.min(ratio, 1));\n};\n","import { createVirtualCanvas } from \"lib/draw/canvas\";\nimport { DrawCtrl } from \"lib/draw/DrawCtrl\";\nimport rotateImg2x from \"./rotate2x.png\";\nimport rotateImg1x from \"./rotate1x.png\";\n\nexport const getCircleCursor = (drawCtrl: DrawCtrl, ratio: number) => {\n  const { lineWidth, eraserWidth, mode } = drawCtrl;\n  const size = ratio * (mode === \"erase\" ? eraserWidth : lineWidth);\n  if (size < 5) return \"crosshair\";\n  const half = size / 2;\n  const double = size * 2;\n\n  const getSvg = (size: number) =>\n    `data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"%23DDD7\" width=\"${size}\" height=\"${size}\" viewBox=\"0 0 10 10\"><circle cx=\"5\" cy=\"5\" r=\"5\"/></svg>`;\n\n  const img1x = getSvg(size);\n  const img2x = getSvg(double);\n\n  return `-webkit-image-set(url('${img1x}')1x, url('${img2x}')2x) ${half} ${half}, crosshair`;\n};\n\nconst rotateCursorFactory = (src: string, size: number) => {\n  const cache = new Map<number, string>();\n  const half = size / 2;\n  const { canvas, context } = createVirtualCanvas(size, size);\n  const image = new Image();\n  image.src = src;\n  return (angle: number) => {\n    angle = Math.round(angle / 10) * 10;\n    const cached = cache.get(angle);\n    if (cached) return cached;\n    context.translate(half, half);\n    context.rotate((angle * Math.PI) / 180);\n    context.drawImage(image, -half, -half);\n    const data = canvas.toDataURL();\n    context.clearRect(-half, -half, size, size);\n    context.resetTransform();\n    cache.set(angle, data);\n    return data;\n  };\n};\n\nconst getRotateCursor1x = rotateCursorFactory(rotateImg1x, 32);\nconst getRotateCursor2x = rotateCursorFactory(rotateImg2x, 64);\n\nexport const getRotateCurcor = (angle: number) => {\n  const data1x = getRotateCursor1x(angle);\n  const data2x = getRotateCursor2x(angle);\n  return `-webkit-image-set(url(${data1x})1x, url(${data2x})2x) 16 16, auto`;\n};\n","import { PointerEvent, TouchEvent, useEffect, useRef } from \"react\";\n\ntype iOSTouch = Touch & {\n  force?: number;\n  touchType?: \"stylus\" | \"direct\";\n};\n\nexport function isApplePencil(e: TouchEvent) {\n  const touch = e.touches[0] as iOSTouch;\n  return touch?.touchType === \"stylus\";\n}\n\nexport function usePreventTouch(\n  allowFinger: boolean\n): React.HTMLAttributes<HTMLDivElement> {\n  const isTouch = useRef(false);\n  const checkPoniter = (e: PointerEvent) =>\n    e.isPrimary && (isTouch.current = e.pointerType === \"touch\");\n\n  const isEventValid = (e: TouchEvent) =>\n    !isTouch.current ||\n    isApplePencil(e) ||\n    (allowFinger && e.touches.length === 1);\n\n  const preventTouch = (e: TouchEvent) =>\n    isEventValid(e) || e.stopPropagation();\n\n  return {\n    onPointerDownCapture: checkPoniter,\n    onPointerMoveCapture: checkPoniter,\n    onTouchStartCapture: preventTouch,\n    onTouchMoveCapture: preventTouch,\n  };\n}\n\nexport const rightClickHandler: React.HTMLAttributes<HTMLDivElement> = {\n  onMouseDownCapture: (e) => {\n    if (e.button !== 0) e.stopPropagation();\n  },\n  onContextMenu: (e) => e.preventDefault(),\n};\n\nexport function usePreventGesture() {\n  useEffect(() => {\n    const handler = (e: Event) => e.preventDefault();\n    document.addEventListener(\"gesturestart\", handler);\n    document.addEventListener(\"gesturechange\", handler);\n    document.addEventListener(\"gestureend\", handler);\n    return () => {\n      document.removeEventListener(\"gesturestart\", handler);\n      document.removeEventListener(\"gesturechange\", handler);\n      document.removeEventListener(\"gestureend\", handler);\n    };\n  }, []);\n}\n","export const gernerateGrid = (\n  group: paper.Item[],\n  width: number,\n  height: number\n) => {\n  const wnum = Math.ceil(width / 100);\n  const hnum = Math.ceil(height / 100);\n  const grid = Array.from({ length: wnum }, () =>\n    Array.from({ length: hnum }, () => new Set<paper.Item>())\n  );\n  group.forEach((item) => setGridItem(grid, item));\n  return grid;\n};\n\nconst getGridRange = (bounds: paper.Rectangle) => {\n  const { topLeft, bottomRight } = bounds;\n  return [\n    Math.floor(topLeft.x / 100),\n    Math.ceil(bottomRight.x / 100),\n    Math.floor(topLeft.y / 100),\n    Math.ceil(bottomRight.y / 100),\n  ] as [number, number, number, number];\n};\nexport const setGridItem = (\n  grid: Set<paper.Item>[][],\n  item: paper.Item,\n  replaced?: paper.Item\n) => {\n  const bounds = (replaced ?? item).strokeBounds;\n  const [xmin, xmax, ymin, ymax] = getGridRange(bounds);\n  for (let x = xmin; x <= xmax; x += 1) {\n    for (let y = ymin; y <= ymax; y += 1) {\n      replaced && grid[x]?.[y]?.delete(replaced);\n      grid[x]?.[y]?.add(item);\n    }\n  }\n};\nexport const getGridItems = (\n  grid: Set<paper.Item>[][],\n  bounds: paper.Rectangle\n) => {\n  const itemSet = new Set<paper.Item>();\n  const [xmin, xmax, ymin, ymax] = getGridRange(bounds);\n  for (let x = xmin; x <= xmax; x += 1) {\n    for (let y = ymin; y <= ymax; y += 1) {\n      grid[x]?.[y]?.forEach((item) => itemSet.add(item));\n    }\n  }\n  return Array.from(itemSet);\n};\n","import React, {\n  useRef,\n  useMemo,\n  useState,\n  useEffect,\n  useDebugValue,\n  useImperativeHandle,\n  useLayoutEffect,\n} from \"react\";\nimport paper, {\n  Path,\n  Size,\n  Point,\n  Color,\n  Raster,\n  Layer,\n  Rectangle,\n} from \"paper/dist/paper-core\";\nimport { usePinch, useWheel } from \"@use-gesture/react\";\nimport useSize from \"@react-hook/size\";\nimport { useMemoizedFn as useEvent } from \"ahooks\";\nimport { DrawState, Mutation, Splitter, Stroke } from \"lib/draw/DrawState\";\nimport { defaultDrawCtrl, DrawCtrl } from \"lib/draw/DrawCtrl\";\nimport { releaseCanvas } from \"lib/draw/canvas\";\nimport { getCircleCursor, getRotateCurcor } from \"./cursor\";\nimport { usePreventTouch, usePreventGesture, rightClickHandler } from \"./touch\";\nimport { Setter } from \"lib/hooks\";\nimport { setGridItem, getGridItems, gernerateGrid } from \"./grid\";\n\nexport interface DrawRefType {\n  deleteSelected: () => void;\n  duplicateSelected: () => void;\n  mutateStyle: (updated: Partial<DrawCtrl>) => void;\n  mutatePointText: (cb: (prev: paper.PointText) => void) => void;\n}\ninterface DrawPropType {\n  drawState: DrawState;\n  otherStates?: DrawState[];\n  onChange?: Setter<DrawState>;\n  toggleSelectTool?: (active: boolean, clickPoint?: paper.Point) => void;\n  toggleTextTool?: (pt: paper.PointText | undefined, slow: boolean) => void;\n  drawCtrl?: DrawCtrl;\n  readonly?: boolean;\n  imgSrc?: string;\n}\n\nconst HIT_TOLERANCE = 20;\nexport const P_ZERO = new Point(0, 0);\n\nconst DrawRaw = React.forwardRef<DrawRefType, DrawPropType>(\n  (\n    {\n      drawState,\n      otherStates,\n      onChange = () => {},\n      drawCtrl = defaultDrawCtrl,\n      readonly = false,\n      imgSrc,\n      toggleSelectTool = () => {},\n      toggleTextTool = () => {},\n    },\n    ref\n  ) => {\n    const { width, height } = drawState;\n    const projSize = useMemo(() => new Size(width, height), [width, height]);\n    const { mode, finger, lasso, eraserWidth } = drawCtrl;\n\n    const canvasEl = useRef<HTMLCanvasElement>(null);\n    const scope = useRef(new paper.PaperScope());\n    const [group, setGroup] = useState<paper.Item[]>([]);\n    const [teamGroup, setTeamGroup] = useState<paper.Item[]>([]);\n    const [path, setPath] = usePaperItem<paper.Path>();\n    const [rotateHandle, setRotateHandle] = usePaperItem<paper.Path>();\n\n    toggleSelectTool = useEvent(toggleSelectTool);\n    toggleTextTool = useEvent(toggleTextTool);\n    const showSelectTool = () => {\n      if (!path) return;\n      const bc = path.bounds.bottomCenter;\n      const { view } = scope.current;\n      toggleSelectTool(true, view.projectToView(bc));\n    };\n\n    useLayoutEffect(() => {\n      const cvs = canvasEl.current;\n      const scp = scope.current;\n      if (!cvs) return;\n\n      scp.setup(cvs);\n      scp.settings.handleSize = 10;\n      scp.settings.hitTolerance = HIT_TOLERANCE;\n      [0, 1, 2].forEach(() => (new Layer().visible = false));\n      scp.project.layers[2]?.activate();\n      new scp.Tool();\n\n      return () => {\n        scp.view?.remove();\n        releaseCanvas(cvs);\n        scp.remove();\n        scp.clear();\n      };\n    }, []);\n\n    useEffect(() => {\n      scope.current.activate();\n      const { layers } = scope.current.project;\n      const rects = paintRects(layers, projSize);\n\n      return () => rects.forEach((r) => r.remove());\n    }, [projSize]);\n\n    const [canvasWidth] = useSize(canvasEl);\n    const ratio = canvasWidth / width;\n    const currCenter = useRef(new Point(projSize).divide(2));\n    const [currScale, setCurrScale] = useState(1);\n    const prevScale = useRef(1);\n\n    useEffect(() => {\n      if (!ratio) return;\n      const scp = scope.current;\n      scp.view.viewSize = projSize.multiply(ratio);\n      scp.view.zoom = ratio * prevScale.current;\n      scp.view.center = currCenter.current;\n      scp.project.layers.forEach((l) => (l.visible = true));\n      scp.view.update();\n    }, [ratio, projSize]);\n\n    const [imgRaster, setImgRaster] = usePaperItem();\n    useEffect(() => {\n      if (!imgSrc) return;\n      scope.current.activate();\n      const raster = new Raster(imgSrc);\n      raster.project.layers[0]?.addChild(raster);\n      raster.sendToBack();\n      raster.onLoad = () => {\n        raster.view.update();\n        raster.fitBounds(new Rectangle(projSize));\n        raster.bringToFront();\n      };\n      setImgRaster(raster);\n    }, [imgSrc, projSize, setImgRaster]);\n\n    const mergedStrokes = useMemo(\n      () => DrawState.mergeStates(drawState, ...(otherStates || [])),\n      [drawState, otherStates]\n    );\n\n    const renderSlow = useRef(false);\n\n    const deferTimerID = useRef(0);\n    const deferRender = useRef(false);\n    const setDefer = () => (deferRender.current = renderSlow.current);\n    if (readonly) setDefer();\n\n    useEffect(() => {\n      const [, l1] = scope.current.project.layers;\n      if (!l1) return;\n      const render = () => {\n        scope.current.activate();\n        const tempGroup: paper.Item[] = [];\n        const tempTeamGroup: paper.Item[] = [];\n\n        // clean-up layer_1 except the clip mask.\n        l1.removeChildren(1);\n\n        mergedStrokes.forEach((stroke) => {\n          const self = drawState.hasStroke(stroke.uid);\n          const item = paintStroke(stroke, l1);\n          if (self && item) tempGroup.push(item);\n          if (item) tempTeamGroup.push(item);\n        });\n        setGroup(tempGroup);\n        setTeamGroup(tempTeamGroup);\n\n        unrasterizeCanvas();\n        deferRender.current = false;\n        pathClones.current.forEach((c) => c.remove());\n        pathClones.current = [];\n\n        const timeBeforeUpdate = performance.now();\n        scope.current.view.update();\n        requestAnimationFrame(() => {\n          const timeAfterUpdate = performance.now();\n          const updateDuration = timeAfterUpdate - timeBeforeUpdate;\n          renderSlow.current = updateDuration > 16;\n        });\n      };\n\n      // render immediately\n      if (!deferRender.current) return void render();\n      // defer render for 1000ms\n      deferTimerID.current = window.setTimeout(render, 1000);\n      // clean-up previous render timer.\n      return () => window.clearTimeout(deferTimerID.current);\n    }, [mergedStrokes, drawState]);\n\n    const hitRef = useRef<paper.HitResult>();\n    const [selected, setSelected] = useState(false);\n    const paperMode = mode === \"select\" && selected ? \"selected\" : mode;\n    const [chosenIDs, setChosenIDs] = useState<string[]>([]);\n    const chosenItems = useMemo(() => {\n      const IDSet = new Set(chosenIDs);\n      return teamGroup.filter((item) => IDSet.has(item.name));\n    }, [teamGroup, chosenIDs]);\n\n    const resetSelect = useEvent(() => {\n      setSelected(false);\n      setPath(undefined);\n      setRotateHandle(undefined);\n      setChosenIDs([]);\n      toggleSelectTool(false);\n    });\n\n    useEffect(() => {\n      if (mode === \"select\") return resetSelect;\n    }, [mode, resetSelect]);\n    useEffect(() => resetSelect, [lasso, resetSelect]);\n\n    // reset selection after redo/undo\n    useEffect(() => {\n      const type = drawState.lastOp?.type ?? \"\";\n      if (/^redo|undo$/.test(type)) resetSelect();\n    }, [drawState, resetSelect]);\n\n    useEffect(() => {\n      toggleSelectTool(false);\n      if (pointText.current) {\n        const ptProxy = new Proxy(pointText.current, {});\n        toggleTextTool(ptProxy, renderSlow.current);\n      }\n    }, [canvasWidth, toggleSelectTool, toggleTextTool]);\n\n    const layerRaster = useRef<paper.Raster>();\n    const lrReusable = useRef(false);\n    // layer raster is no longer reusable after state changes.\n    useEffect(() => void (lrReusable.current = false), [mergedStrokes]);\n\n    const rasterizeLayer = () => {\n      if (!renderSlow.current) return;\n      const [l0, l1] = scope.current.project.layers;\n      if (!l0 || !l1) return;\n      l1.visible = true;\n      // move pdf image above clip mask before rasterizing.\n      if (imgRaster) l1.insertChild(1, imgRaster);\n\n      const dpi = 72 * devicePixelRatio;\n      const resolution = (canvasWidth / width) * dpi;\n      let raster = layerRaster.current;\n      if (!raster || !lrReusable.current) {\n        raster = layerRaster.current = l1.rasterize({ raster, resolution });\n        lrReusable.current = true;\n      }\n      raster.visible = true;\n\n      l1.visible = false;\n      imgRaster?.addTo(l0);\n    };\n    const unrasterizeLayer = () => {\n      scope.current.activate();\n      const [, l1] = scope.current.project.layers;\n      const lr = layerRaster.current;\n      if (!l1 || !lr) return;\n      l1.visible = true;\n      lr.visible = false;\n    };\n\n    const canvasRaster = useRef<paper.Raster>();\n    // raster changes with the size of canvas element\n    useEffect(\n      () => () => {\n        canvasRaster.current?.remove();\n        canvasRaster.current = undefined;\n      },\n      [canvasWidth]\n    );\n    useLayoutEffect(\n      () => () => {\n        releaseCanvas(layerRaster.current?.canvas);\n        releaseCanvas(canvasRaster.current?.canvas);\n      },\n      []\n    );\n    const rasterizeCanvas = () => {\n      if (!renderSlow.current) return;\n      // rasterize the canvas only once\n      if (canvasRaster.current?.visible === true) return;\n      scope.current.activate();\n      const { view } = scope.current;\n      // create a raster of the canvas element's size only once.\n      const raster = (canvasRaster.current ??= new Raster(\n        view.viewSize.multiply(devicePixelRatio)\n      ));\n      raster.drawImage(view.element, P_ZERO);\n      raster.fitBounds(view.bounds);\n      raster.visible = true;\n      raster.opacity = process.env.NODE_ENV === \"production\" ? 1 : 0.5;\n      const [, l1] = scope.current.project.layers;\n      l1 && (l1.visible = false);\n    };\n    const unrasterizeCanvas = () => {\n      scope.current.activate();\n      // if the paper scope were removed.\n      if (!scope.current?.project) return;\n      const [, l1] = scope.current.project.layers;\n      const cr = canvasRaster.current;\n      const lr = layerRaster.current;\n      if (!l1 || !cr) return;\n      cr.visible = false;\n      // keep layer_1 hidden unless all 2 raster is hidden.\n      if (lr?.visible !== true) l1.visible = true;\n    };\n\n    const downPath = (e: paper.MouseEvent) => {\n      rasterizeCanvas();\n      setPath(startStroke(drawCtrl, e.point, renderSlow.current));\n    };\n    const downLasso = (e: paper.MouseEvent) => {\n      setPath(startStroke(drawCtrl, e.point));\n      requestAnimationFrame(rasterizeCanvas);\n    };\n    const downSelectRect = (e: paper.MouseEvent) => {\n      // reset rect path before rasterizing;\n      setPath(startRect(e.point));\n      requestAnimationFrame(rasterizeCanvas);\n    };\n\n    const selectionDragged = useRef(false);\n    const handleDown = {\n      draw(e: paper.MouseEvent) {\n        setDefer();\n        downPath(e);\n      },\n      erase: downPath,\n      select: lasso ? downLasso : downSelectRect,\n      selected(e: paper.MouseEvent) {\n        selectionDragged.current = false;\n        if (!path) return;\n        if (!lasso) {\n          // check if the point hit the segment point.\n          let hitRes =\n            path.hitTest(e.point, { segments: true }) ??\n            rotateHandle?.hitTest(e.point, { segments: true, selected: true });\n          hitRef.current = hitRes;\n          if (hitRes) return;\n        }\n\n        // if click outside, reset the selection.\n        if (!path.contains(e.point)) {\n          resetSelect();\n          setRotateHandle(undefined);\n          lasso ? downLasso(e) : downSelectRect(e);\n        }\n      },\n      text: null,\n      rect(e: paper.MouseEvent) {\n        setDefer();\n        rasterizeCanvas();\n        setPath(startRect(e.point, drawCtrl));\n      },\n      picture: null,\n    }[paperMode];\n\n    const dragPath = (e: paper.MouseEvent) => {\n      // cancel previous render timer.\n      window.clearTimeout(deferTimerID.current);\n      path?.add(e.point);\n      path?.smooth();\n    };\n    const resizeRect = (e: paper.MouseEvent, selected = true) => {\n      if (!path) return;\n      const { x, y } = e.point;\n      const [, s1, s2, s3] = path.segments;\n      if (!s1 || !s2 || !s3) return;\n      s1.point.x = x;\n      s2.point = e.point;\n      s3.point.y = y;\n      if (selected) path.selected = true;\n    };\n    const moveSelected = (delta: paper.Point) => {\n      chosenItems.forEach((item) => item.translate(delta));\n      path?.translate(delta);\n      rotateHandle?.translate(delta);\n    };\n\n    const handleDrag = {\n      draw: dragPath,\n      erase: dragPath,\n      select: lasso ? dragPath : resizeRect,\n      selected(e: paper.MouseEvent) {\n        const hitRes = hitRef.current;\n        if (!path) return;\n        toggleSelectTool(false);\n        selectionDragged.current = true;\n        if (hitRes?.segment) {\n          const segment = hitRes.segment;\n          const rotating = segment.selected;\n          if (rotating) {\n            // rotate select items\n            const { center } = path.bounds;\n            const axis = segment.point.subtract(center);\n            const line = e.point.subtract(center);\n            setCursor(getRotateCurcor(line.angle));\n            const angle = line.angle - axis.angle;\n            path.rotate(angle, center);\n            rotateHandle?.rotate(angle, center);\n            chosenItems.forEach((item) => item?.rotate(angle, center));\n          } else {\n            // resize selected items\n            const moveP = segment.point;\n            const baseP = segment.next.next.point;\n            const diagonal = moveP.subtract(baseP);\n            const projection = e.point.subtract(baseP).project(diagonal);\n            const scale = projection.x / diagonal.x;\n            if (scale < 0) return;\n\n            path.scale(scale, baseP);\n            chosenItems.forEach((item) => {\n              item.scale(scale, baseP);\n              item.strokeWidth *= scale;\n            });\n\n            // reposition the rotate handle.\n            if (!rotateHandle) return;\n            rotateHandle.scale(scale, baseP);\n            const rBaseP = rotateHandle.segments[0]?.point;\n            if (!rBaseP) return;\n            rotateHandle.scale(100 / rotateHandle.length, rBaseP);\n          }\n        } else {\n          moveSelected(e.delta);\n        }\n      },\n      text: null,\n      rect(e: paper.MouseEvent) {\n        // cancel previous render timer.\n        window.clearTimeout(deferTimerID.current);\n        resizeRect(e, false);\n      },\n      picture: null,\n    }[paperMode];\n\n    useEffect(() => {\n      scope.current.tool.maxDistance = eraserWidth;\n    }, [eraserWidth]);\n    const erased = useRef(new Set<string>());\n    const replaced = useRef(new Map<string, paper.Item>());\n\n    const { globalEraser, pixelEraser } = drawCtrl;\n    const itemGrid = useMemo(() => {\n      if (!/^(erase|select)$/.test(mode)) return [];\n      const items =\n        globalEraser &&\n        ((mode === \"erase\" && !pixelEraser) || mode === \"select\")\n          ? teamGroup\n          : group;\n      return gernerateGrid(items, width, height);\n    }, [group, width, height, mode, teamGroup, globalEraser, pixelEraser]);\n\n    const handleToolDrag = (e: paper.ToolEvent) => {\n      const layer = scope.current.project.layers[1];\n      if (paperMode !== \"erase\" || !layer) return;\n      const ew = eraserWidth;\n\n      const hitOption = { class: paper.Path, stroke: true, tolerance: ew / 2 };\n      const bounds = new Rectangle(e.point.subtract(ew), new Size(ew, ew));\n\n      getGridItems(itemGrid, bounds).forEach((item) => {\n        if (erased.current.has(item.name)) return;\n        if (!item.parent) return;\n        item.hitTestAll(e.point, hitOption)?.forEach(({ item }) => {\n          if (!(item instanceof paper.Path)) return;\n          let topItem: paper.PathItem = item;\n          while (topItem.parent !== layer) {\n            if (!(topItem.parent instanceof paper.PathItem)) break;\n            topItem = topItem.parent;\n          }\n          const { name } = topItem;\n\n          if (pixelEraser) {\n            const radius = (ew + item.strokeWidth) / 2;\n            const circle = new Path.Circle({\n              center: e.point,\n              radius,\n              insert: false,\n            });\n\n            const sub = item.subtract(circle, { trace: false });\n            item.replaceWith(sub);\n            if (topItem === item) {\n              setGridItem(itemGrid, sub, item);\n              topItem = sub;\n            }\n            replaced.current.set(name, topItem);\n          } else {\n            topItem.opacity = 0.5;\n            topItem.guide = true;\n            erased.current.add(name);\n          }\n        });\n      });\n    };\n\n    const pathClones = useRef<paper.Path[]>([]);\n    const handleUp = {\n      draw() {\n        if (!path || path.segments.length <= 1) {\n          // if canvas is clicked without any path in queue.\n          if (!pathClones.current.length) unrasterizeCanvas();\n          return;\n        }\n        path.simplify();\n        if (renderSlow.current) pathClones.current.push(path.clone());\n        const pathData = path.exportJSON();\n        onChange((prev) => DrawState.addStroke(prev, pathData));\n        setPath(undefined);\n      },\n      erase() {\n        unrasterizeCanvas();\n        setPath(undefined);\n        if (drawCtrl.pixelEraser) {\n          const items = Array.from(replaced.current);\n          replaced.current.clear();\n          const splitters: Splitter[] = items.map(([uid, item]) => {\n            const paths = flattenCP(item);\n            paths.forEach((p) => (p.name = \"\"));\n            return [uid, paths.map((p) => p.exportJSON())];\n          });\n          if (!splitters.length) return;\n          onChange((prev) => DrawState.splitStrokes(prev, splitters));\n        } else {\n          const erasedList = Array.from(erased.current);\n          erased.current.clear();\n          if (!erasedList.length) return;\n          onChange((prev) => DrawState.eraseStrokes(prev, erasedList));\n        }\n      },\n      select() {\n        unrasterizeCanvas();\n        if (!path) return;\n        if (Math.abs(path.area) < 1_000) return setPath(undefined);\n\n        let selection: string[];\n        if (lasso) {\n          path.closePath();\n          path.simplify();\n          if (!renderSlow.current) moveDash(path);\n          const items = getGridItems(itemGrid, path.bounds);\n          selection = checkLasso(items, path);\n        } else {\n          const items = getGridItems(itemGrid, path.bounds);\n          selection = checkLasso(items, path);\n          const link = new Path();\n          const { topCenter } = path.bounds;\n          link.add(topCenter, topCenter.subtract(new Point(0, 100)));\n          link.lastSegment.selected = true;\n          setRotateHandle(link);\n        }\n        setSelected(true);\n        setChosenIDs(selection);\n        showSelectTool();\n      },\n      selected(e: paper.MouseEvent) {\n        handleSelectedCursor(e);\n        if (!path || !selectionDragged.current) return;\n        showSelectTool();\n        updateMutation();\n      },\n      text(e: paper.MouseEvent) {\n        if (pointText.current) {\n          submitText();\n          return handleTextCursor(e);\n        }\n        const [, l1] = scope.current.project.layers;\n        if (!l1) return;\n\n        const item = getClickedText(l1, e.point);\n        const t =\n          item && (isSelfItem(item) || globalEraser)\n            ? item\n            : startText(e.point);\n        t.justification = \"left\";\n        pointText.current = t;\n        prevTextData.current = t.exportJSON();\n\n        // hide pointText before rasterizing;\n        if (renderSlow.current) t.visible = false;\n        requestAnimationFrame(() => {\n          rasterizeCanvas();\n          t.visible = true;\n        });\n\n        toggleTextTool(t, renderSlow.current);\n      },\n      rect() {\n        if (!path || Math.abs(path.area) < 1) {\n          // if canvas is clicked without any path in queue.\n          if (!pathClones.current.length) unrasterizeCanvas();\n          return setPath(undefined);\n        }\n        if (renderSlow.current) pathClones.current.push(path.clone());\n\n        const pathData = path.exportJSON();\n        onChange((prev) => DrawState.addStroke(prev, pathData));\n        setPath(undefined);\n      },\n      picture(e: paper.MouseEvent) {\n        const { imageSrc } = drawCtrl;\n        if (!imageSrc) return;\n        const raster = new Raster(imageSrc);\n        raster.position = e.point;\n        raster.onLoad = () => {\n          const itemData = raster.exportJSON();\n          onChange((prev) => DrawState.addStroke(prev, itemData));\n          raster.remove();\n        };\n      },\n    }[paperMode];\n\n    const [cursor, setCursor] = useState(\"auto\");\n    useEffect(() => {\n      if (/^(text|select|rect)$/.test(paperMode)) {\n        setCursor(\"crosshair\");\n      } else if (paperMode === \"selected\") {\n        // set resize cursor for the bottom-right rect selection\n        setCursor(lasso ? \"crosshair\" : \"nwse-resize\");\n      } else if (/^(draw|erase)$/.test(paperMode)) {\n        setCursor(getCircleCursor(drawCtrl, ratio * currScale));\n      } else if (paperMode === \"picture\") {\n        setCursor(drawCtrl.imageSrc ? \"crosshair\" : \"not-allowed\");\n      }\n    }, [paperMode, lasso, drawCtrl, ratio, currScale]);\n\n    const handleSelectedCursor = (e: paper.MouseEvent) => {\n      if (!path) return;\n      const hitRes =\n        path.hitTest(e.point, { segments: true }) ??\n        rotateHandle?.hitTest(e.point, { segments: true, selected: true });\n      if (hitRes?.segment) {\n        if (hitRes.segment.selected) {\n          const center = path.bounds.center;\n          if (!center) return;\n          const line = hitRes.segment.point.subtract(center);\n          return setCursor(getRotateCurcor(line.angle));\n        }\n        const moveP = hitRes.segment.point;\n        const baseP = hitRes.segment.next.next.point;\n        const diagonal = moveP.subtract(baseP);\n        const { x, y } = diagonal;\n        return setCursor(x * y < 0 ? \"nesw-resize\" : \"nwse-resize\");\n      }\n      if (path.contains(e.point)) return setCursor(\"move\");\n      setCursor(\"crosshair\");\n    };\n\n    const isSelfItem = (item: paper.Item) => {\n      return drawState.getStrokeMap().has(item.name);\n    };\n\n    const handleTextCursor = (e: paper.MouseEvent) => {\n      if (pointText.current) return setCursor(\"auto\");\n      const layer = scope.current.project.layers[1];\n      if (!layer) return;\n      const item = getClickedText(layer, e.point);\n      if (item && (isSelfItem(item) || globalEraser)) setCursor(\"text\");\n      else setCursor(\"crosshair\");\n    };\n\n    const handleMove = {\n      selected: handleSelectedCursor,\n      text: handleTextCursor,\n      ...{ select: null, draw: null, erase: null, rect: null, picture: null },\n    }[paperMode];\n\n    const handleKeyDown = (e: paper.KeyEvent) => {\n      if (paperMode !== \"selected\") return;\n      const delta = {\n        up: new Point(0, -10),\n        down: new Point(0, 10),\n        left: new Point(-10, 0),\n        right: new Point(10, 0),\n      }[e.key];\n      if (!delta) return;\n      e.preventDefault();\n      delta && moveSelected(delta);\n      toggleSelectTool(false);\n    };\n\n    const handleKeyUp = {\n      selected(e: paper.KeyEvent) {\n        if (/^(delete|backspace)$/.test(e.key)) deleteSelected();\n        if (/^(up|down|left|right)$/.test(e.key)) updateMutation();\n        if (/escape/.test(e.key)) resetSelect();\n      },\n      text(e: paper.KeyEvent) {\n        if (/escape/.test(e.key)) submitText();\n      },\n      ...{ select: null, draw: null, erase: null, rect: null, picture: null },\n    }[paperMode];\n\n    useEffect(() => {\n      if (readonly) return;\n\n      type Handler<E> = ((e: E) => boolean | void) | null;\n      const activate = <E,>(handler: Handler<E>): Handler<E> => {\n        return (e) => {\n          scope.current.activate();\n          if (handler) return handler(e);\n        };\n      };\n      const { view, tool } = scope.current;\n      view.onMouseDown = activate(handleDown);\n      view.onMouseDrag = activate(handleDrag);\n      view.onMouseUp = activate(handleUp);\n      view.onMouseMove = activate(handleMove);\n      tool.onMouseDrag = activate(handleToolDrag);\n      tool.onKeyDown = activate(handleKeyDown);\n      tool.onKeyUp = activate(handleKeyUp);\n    });\n\n    const updateMutation = () => {\n      if (!chosenItems?.length) return;\n      const mutations: Mutation[] = chosenItems.map((p) => {\n        const { name } = p;\n        p.name = \"\";\n        return [name, p.exportJSON()];\n      });\n      onChange((prev) => DrawState.mutateStrokes(prev, mutations));\n    };\n\n    const deleteSelected = () => {\n      resetSelect();\n      if (!chosenIDs.length) return;\n      onChange((prev) => DrawState.eraseStrokes(prev, chosenIDs));\n    };\n\n    const mutateStyle = (updated: Partial<DrawCtrl>) => {\n      scope.current.activate();\n      updateGroupStyle(chosenItems, updated);\n      updateMutation();\n    };\n\n    const duplicateSelected = () => {\n      scope.current.activate();\n      if (!path || !chosenItems.length) return;\n      const size = path.bounds.size;\n      const { width, height } = size;\n      const transP = new Point(width, height).divide(10);\n      const copies = chosenItems.map((item) => item.clone());\n      copies.forEach((item) => item.translate(transP));\n      path.translate(transP);\n      rotateHandle?.translate(transP);\n\n      copies.forEach((p) => (p.name = \"\"));\n      const pathDataList = copies.map((item) => item.exportJSON());\n      onChange((prev) =>\n        DrawState.addStrokeList(prev, pathDataList, setChosenIDs)\n      );\n      showSelectTool();\n    };\n\n    const pointText = useRef<paper.PointText>();\n    const prevTextData = useRef(\"\");\n    const cancelText = useEvent(() => {\n      unrasterizeCanvas();\n      if (!pointText.current?.name) {\n        pointText.current?.remove();\n      }\n      pointText.current = undefined;\n      toggleTextTool(undefined, renderSlow.current);\n    });\n\n    const submitText = useEvent(() => {\n      const t = pointText.current;\n      if (!t) return;\n      cancelText();\n      if (t.exportJSON() === prevTextData.current) return;\n      const { content, name } = t;\n      t.name = \"\";\n      // if text content empty\n      if (!content) {\n        // erase existing text item\n        if (name) onChange((prev) => DrawState.eraseStrokes(prev, [name]));\n        return;\n      }\n      const pathData = t.exportJSON();\n      if (!name) {\n        // add new text item\n        onChange((prev) => DrawState.addStroke(prev, pathData));\n      } else {\n        // mutate existing text item\n        onChange((prev) => DrawState.mutateStrokes(prev, [[name, pathData]]));\n      }\n    });\n    const mutatePointText = (cb: (prev: paper.PointText) => void) => {\n      const pt = pointText.current;\n      if (!pt) return;\n      scope.current.activate();\n      cb(pt);\n      toggleTextTool(new Proxy(pt, {}), renderSlow.current);\n    };\n\n    useEffect(() => {\n      if (mode === \"text\") return submitText;\n    }, [mode, submitText]);\n\n    useImperativeHandle(ref, () => ({\n      deleteSelected,\n      duplicateSelected,\n      mutateStyle,\n      mutatePointText,\n    }));\n\n    usePreventGesture();\n\n    const beforeViewDragged = () => {\n      toggleSelectTool(false);\n      cancelText();\n      rasterizeLayer();\n      unrasterizeCanvas();\n    };\n    usePinch(\n      ({ memo, offset: [scale], first, last, origin }) => {\n        scope.current.activate();\n        const { view } = scope.current;\n        const originRawP = new paper.Point(origin);\n\n        let lastOrigin, elPos: paper.Point;\n        if (first || !memo) {\n          const { x, y } = view.element.getBoundingClientRect();\n          elPos = new Point(x, y);\n          lastOrigin = originRawP.subtract(elPos);\n          beforeViewDragged();\n        } else {\n          [lastOrigin, elPos] = memo;\n        }\n\n        const originViewP = originRawP.subtract(elPos);\n        const originPorjP = view.viewToProject(originViewP);\n\n        const deltaP = originViewP.subtract(lastOrigin);\n        const transP = deltaP.divide(view.zoom);\n        view.translate(transP);\n\n        let dScale = scale / prevScale.current;\n        prevScale.current = scale;\n        scope.current.settings.hitTolerance /= dScale;\n\n        if (last) {\n          scaleView(view, dScale, projSize, originPorjP)\n            .then(() => putCenterBack(view, projSize))\n            .then(() => unrasterizeLayer())\n            .then(() => (currCenter.current = view.center));\n          setCurrScale(scale);\n        } else {\n          view.scale(dScale, originPorjP);\n          return [originViewP, elPos];\n        }\n      },\n      {\n        scaleBounds: { min: 1, max: 5 },\n        rubberband: 0.5,\n        target: canvasEl,\n      }\n    );\n\n    useWheel(\n      ({ event, delta, ctrlKey, first, last }) => {\n        if (prevScale.current === 1 || ctrlKey) return;\n        event.preventDefault();\n\n        if (first) beforeViewDragged();\n\n        const { view } = scope.current;\n        const deltaP = new paper.Point(delta);\n        const transP = P_ZERO.subtract(deltaP).divide(view.zoom);\n        const { x: tx, y: ty } = transP;\n        const targetCenter = getTargetCenter(view, projSize);\n        const { x: dx, y: dy } = view.center.subtract(targetCenter);\n        const divisorP = new paper.Point(\n          tx * dx < 0 ? Math.pow(Math.E, 0.1 * Math.abs(dx)) : 1,\n          ty * dy < 0 ? Math.pow(Math.E, 0.1 * Math.abs(dy)) : 1\n        );\n        view.translate(transP.divide(divisorP));\n\n        if (last) {\n          putCenterBack(view, projSize)\n            .then(unrasterizeLayer)\n            .then(() => (currCenter.current = view.center));\n        }\n      },\n      {\n        target: canvasEl,\n        eventOptions: { passive: false },\n      }\n    );\n\n    const touchHandler = usePreventTouch(finger);\n    return (\n      <div\n        className=\"draw-wrapper\"\n        style={{ cursor }}\n        data-readonly={readonly}\n        {...touchHandler}\n        {...rightClickHandler}\n      >\n        <canvas ref={canvasEl} className=\"draw-canvas\" />\n      </div>\n    );\n  }\n);\n\nDrawRaw.displayName = \"Draw\";\nexport const Draw = React.memo(DrawRaw);\n\nfunction usePaperItem<T extends paper.Item>() {\n  const tuple = useState<T>();\n  const [item] = tuple;\n  useDebugValue(item);\n  // the paper view is removed in useLayoutEffect clean-up func\n  // items with onFrame must be removed before view.\n  useLayoutEffect(() => () => void item?.remove(), [item]);\n  return tuple;\n}\n\nconst paintStroke = (() => {\n  const cacheMap = new WeakMap<\n    paper.Layer,\n    Map<string, { stroke: Stroke; item: paper.Item }>\n  >();\n\n  return (stroke: Stroke, layer: paper.Layer) => {\n    const { pathData, uid } = stroke;\n    let item: paper.Item;\n\n    const cache = cacheMap.get(layer) ?? new Map();\n    cacheMap.set(layer, cache);\n    const cached = cache.get(uid);\n\n    if (cached?.stroke === stroke) {\n      layer.addChild(cached.item);\n      item = cached.item;\n    } else {\n      try {\n        item = layer.importJSON(pathData);\n      } catch (e) {\n        console.error(e);\n        return;\n      }\n      item ??= new paper.Item();\n      item.name = uid;\n      cache.set(uid, { item, stroke });\n    }\n    item.opacity = 1;\n    item.guide = false;\n    return item;\n  };\n})();\n\nconst paintRects = (layers: paper.Layer[], projSize: paper.Size) => {\n  const [l0, l1, l2] = layers;\n  if (!l0 || !l1 || !l2) return [];\n  const bgRect = new Path.Rectangle(P_ZERO, projSize);\n  const clip1 = bgRect.clone();\n  const clip2 = bgRect.clone();\n  bgRect.fillColor = new Color(\"#fff\");\n  l0.addChild(bgRect);\n  l1.addChild(clip1);\n  l2.addChild(clip2);\n  l1.clipped = true;\n  l2.clipped = true;\n  return [bgRect, clip1, clip2];\n};\n\nconst startRect = (point: paper.Point, drawCtrl?: DrawCtrl) => {\n  const rect = new Path.Rectangle(point, new Size(0, 0));\n  if (!drawCtrl) return rect;\n  const color = new Color(drawCtrl.color);\n  if (drawCtrl.highlight) {\n    color.alpha = 0.5;\n    rect.fillColor = color;\n    rect.blendMode = \"multiply\";\n  } else {\n    rect.strokeWidth = drawCtrl.lineWidth;\n    rect.strokeColor = color;\n  }\n  return rect;\n};\n\nconst startStroke = (drawCtrl: DrawCtrl, point: paper.Point, slow = false) => {\n  let { mode, lineWidth, eraserWidth, color, highlight } = drawCtrl;\n  const path = new Path();\n  path.add(point);\n  if (mode === \"erase\") {\n    color = \"#ccc\";\n    lineWidth = eraserWidth;\n  }\n  if (mode === \"select\") {\n    color = \"#009dec\";\n    lineWidth = 5;\n  }\n  const strokeColor = new Color(color);\n  if ((mode === \"draw\" && highlight) || (mode === \"erase\" && !slow)) {\n    strokeColor.alpha = 0.5;\n    path.blendMode = \"multiply\";\n  }\n  path.strokeColor = strokeColor;\n  path.strokeWidth = lineWidth;\n  path.strokeJoin = \"round\";\n  path.strokeCap = \"round\";\n  path.guide = true;\n  return path;\n};\n\nconst moveDash = (item: paper.Item) => {\n  item.dashOffset = 0;\n  item.dashArray = [30, 20];\n  item.onFrame = () => (item.dashOffset += 3);\n};\n\nconst scaleView = (\n  view: paper.View,\n  dScale: number,\n  projSize: paper.Size,\n  originP: paper.Point\n) =>\n  new Promise<void>((resolve) => {\n    if (dScale === 1) return resolve();\n    const { x: cx, y: cy } = view.center;\n    const { width, height } = projSize;\n\n    // if view is scaled from small to large, reset origin.\n    if (dScale > 1) {\n      originP = new paper.Point(\n        ((dScale / 2) * width - cx) / (dScale - 1),\n        ((dScale / 2) * height - cy) / (dScale - 1)\n      );\n    }\n\n    let aniCount = 10;\n    dScale = Math.pow(dScale, 1 / aniCount);\n\n    const scaleOneFrame = () => {\n      view.scale(dScale, originP);\n      if (--aniCount > 0) requestAnimationFrame(scaleOneFrame);\n      else requestAnimationFrame(() => resolve());\n    };\n    scaleOneFrame();\n  });\n\nconst getTargetCenter = (view: paper.View, projSize: paper.Size) => {\n  const { x, y } = view.center;\n  const minSize = Size.min(view.size, projSize).divide(2);\n  const { width: minX, height: minY } = minSize;\n  const { width: maxX, height: maxY } = projSize.subtract(minSize);\n\n  const targetX = x < minX ? minX : x > maxX ? maxX : x;\n  const targetY = y < minY ? minY : y > maxY ? maxY : y;\n  return new Point(targetX, targetY);\n};\n\nconst putCenterBack = (view: paper.View, projSize: paper.Size) =>\n  new Promise<void>((resolve) => {\n    const targetCenter = getTargetCenter(view, projSize);\n    if (view.center.equals(targetCenter)) return resolve();\n    let aniCount = 10;\n    const moveOneFrame = () => {\n      const delta = view.center.subtract(targetCenter);\n      view.translate(delta.divide(aniCount));\n      if (--aniCount > 0) requestAnimationFrame(moveOneFrame);\n      else requestAnimationFrame(() => resolve());\n    };\n    moveOneFrame();\n  });\n\nconst checkLasso = (items: paper.Item[], selection: paper.Path) => {\n  const isInside = (p: paper.Path) => {\n    if (selection.segments.length === 4 && p.isInside(selection.bounds)) {\n      return true;\n    }\n    return !p.subtract(selection, { insert: false, trace: false }).compare(p);\n  };\n  return items\n    .filter((item) => {\n      if (!item.name) return false;\n      if (!item.bounds.intersects(selection.bounds)) return false;\n      if (item instanceof paper.Path) {\n        return isInside(item);\n      } else {\n        const { rotation } = item;\n        item.rotation = 0;\n        const checkedP = new Path.Rectangle(item.bounds);\n        checkedP.selected = true;\n        checkedP.rotation = rotation;\n        item.rotation = rotation;\n        checkedP.remove();\n        return isInside(checkedP) || selection.isInside(item.bounds);\n      }\n    })\n    .map(({ name }) => name);\n};\n\nconst updateGroupStyle = (items: paper.Item[], updated: Partial<DrawCtrl>) => {\n  const { lineWidth, color, highlight } = updated;\n  items.forEach((item) => {\n    if (item instanceof paper.PointText && color) {\n      const newColor = new Color(color);\n      item.fillColor = newColor;\n    }\n\n    if (!(item instanceof paper.Path)) return;\n\n    if (color) {\n      const newColor = new Color(color);\n      if (item.blendMode === \"multiply\") newColor.alpha = 0.5;\n      item.strokeColor = newColor;\n    }\n\n    if (lineWidth) item.strokeWidth = lineWidth;\n\n    if (!item.strokeColor || highlight === undefined) return;\n    item.strokeColor.alpha = highlight ? 0.5 : 1;\n    item.blendMode = highlight ? \"multiply\" : \"normal\";\n  });\n};\n\nconst getClickedText = (layer: paper.Layer, point: paper.Point) => {\n  const hitRes = layer.hitTest(point, { class: paper.PointText, fill: true });\n  if (hitRes?.item instanceof paper.PointText) return hitRes?.item;\n};\n\nconst startText = (point: paper.Point) => {\n  return new paper.PointText({\n    point: point.add(new Point(0, 50)),\n    content: \"\",\n    fontSize: 50,\n    fontFamily: \"Arial, sans-serif\",\n  });\n};\n\nconst flattenCP = (cp: paper.Item): paper.Path[] => {\n  if (cp instanceof paper.Path) {\n    return cp.isEmpty() ? [] : [cp];\n  }\n  if (cp instanceof paper.CompoundPath) {\n    return cp.children.map(flattenCP).flat();\n  }\n  return [];\n};\n","import { Component, ErrorInfo, ReactNode } from \"react\";\n\ninterface Props {\n  children?: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n}\n\nexport class ErrorBoundary extends Component<Props, State> {\n  public state: State = {\n    hasError: false,\n  };\n\n  public static getDerivedStateFromError(_: Error): State {\n    return { hasError: true };\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error(\"Uncaught error:\", error, errorInfo);\n  }\n\n  public render() {\n    if (this.state.hasError) {\n      return <p>Error</p>;\n    }\n\n    return this.props.children;\n  }\n}\n","import React, {\n  FC,\n  useRef,\n  useMemo,\n  useState,\n  useEffect,\n  useCallback,\n} from \"react\";\nimport { useDrawCtrl } from \"lib/draw/DrawCtrl\";\nimport { useMemoizedFn as useEvent } from \"ahooks\";\n\nimport { Draw, DrawRefType, DrawState } from \"draft-pad\";\nimport { SelectTool, TextTool } from \"pages/reader/tools/DrawTools\";\nimport { once, range } from \"lodash\";\nimport { useInView } from \"react-intersection-observer\";\nimport { Map, Set } from \"immutable\";\nimport { P_ZERO } from \"component/Draw/Draw\";\nimport { ErrorBoundary } from \"lib/ErrorBoundary\";\n\nconst PageWrapperRaw: FC<{\n  drawState: DrawState;\n  teamStateMap?: Map<string, DrawState>;\n  thumbnail?: string;\n  pdfIndex?: number;\n  noteID?: string;\n  updateState?: (ds: DrawState) => void;\n  onViewChange?: (ratio: number) => void;\n  preview?: boolean;\n  preload?: boolean;\n  ignores?: Set<string>;\n  skipInView?: boolean;\n}> = ({\n  thumbnail,\n  drawState,\n  teamStateMap,\n  updateState,\n  pdfIndex,\n  noteID = \"\",\n  preview = false,\n  onViewChange,\n  preload = false,\n  ignores = Set<string>(),\n  skipInView = false,\n}) => {\n  const threshold = onViewChange && range(0, 1.2, 0.2);\n  const [ref, visible, entry] = useInView({ threshold, skip: skipInView });\n  useEffect(() => {\n    if (!onViewChange) return;\n    if (!entry || !visible) return onViewChange(0);\n    onViewChange(entry.intersectionRatio);\n  }, [visible, entry, onViewChange]);\n\n  const [fullImg, setFullImg] = useState<string>();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const loadImage = useCallback(\n    once(async () => {\n      if (!pdfIndex || !noteID) return;\n      const { getNotePageImage } = await import(\"lib/note/pdfImage\");\n      setFullImg(await getNotePageImage(noteID, pdfIndex));\n    }),\n    [pdfIndex, noteID]\n  );\n\n  const show = visible || preload;\n  useEffect(() => {\n    if (!preview && show) loadImage();\n  }, [show, preview, loadImage]);\n\n  const otherStates = useMemo(\n    () => teamStateMap?.deleteAll(ignores).toList().toArray(),\n    [teamStateMap, ignores]\n  );\n\n  const imageLoaded = Boolean(fullImg || !pdfIndex);\n  const drawShow = show && imageLoaded;\n\n  const { height, width } = drawState;\n  const ratio = height / width;\n\n  return (\n    <div ref={ref} className=\"page-wrapper\" data-preview={preview}>\n      <svg className=\"size-holder\" viewBox={`0 0 100 ${ratio * 100}`} />\n      {drawShow && (\n        <DrawWrapper\n          drawState={drawState}\n          otherStates={otherStates}\n          updateState={updateState}\n          imgSrc={fullImg || thumbnail}\n          preview={preview}\n        />\n      )}\n    </div>\n  );\n};\nPageWrapperRaw.displayName = \"PageWrapper\";\nexport const PageWrapper = React.memo(PageWrapperRaw);\n\nconst DrawWrapper: FC<{\n  drawState: DrawState;\n  otherStates?: DrawState[];\n  updateState?: (ds: DrawState) => void;\n  preview?: boolean;\n  imgSrc?: string;\n}> = ({ drawState, updateState, otherStates, preview = false, imgSrc }) => {\n  const drawCtrl = useDrawCtrl();\n  const drawRef = useRef<DrawRefType>(null);\n  const [selectShow, setSelectShow] = useState(false);\n  const [clickPoint, setClickPoint] = useState<paper.Point>(P_ZERO);\n  const [pointText, setPointText] = useState<paper.PointText>();\n  const [renderSlow, setRenderSlow] = useState(false);\n\n  const handleChange = useEvent(\n    (arg: ((s: DrawState) => DrawState) | DrawState) => {\n      if (!updateState) return;\n      const newDS = arg instanceof DrawState ? arg : arg(drawState);\n      if (newDS === drawState) return;\n      updateState(newDS);\n    }\n  );\n\n  const toggleSelectTool = (active: boolean, clickPoint?: paper.Point) => {\n    setClickPoint((p) => clickPoint ?? p);\n    setSelectShow(active);\n  };\n\n  const toggleTextTool = (\n    pointText: paper.PointText | undefined,\n    slow: boolean\n  ) => {\n    setPointText(pointText);\n    setRenderSlow(slow);\n  };\n\n  return preview ? (\n    <Draw\n      drawState={drawState}\n      otherStates={otherStates}\n      imgSrc={imgSrc}\n      readonly\n    />\n  ) : (\n    <ErrorBoundary>\n      <Draw\n        drawState={drawState}\n        otherStates={otherStates}\n        onChange={handleChange}\n        imgSrc={imgSrc}\n        drawCtrl={drawCtrl}\n        ref={drawRef}\n        toggleTextTool={toggleTextTool}\n        toggleSelectTool={toggleSelectTool}\n      />\n      <SelectTool\n        drawRef={drawRef}\n        visible={selectShow}\n        clickPoint={clickPoint}\n      />\n      {pointText && (\n        <TextTool\n          drawRef={drawRef}\n          pointText={pointText}\n          renderSlow={renderSlow}\n        />\n      )}\n    </ErrorBoundary>\n  );\n};\n","import { PageWrapper } from \"./PageWrapper\";\nimport \"./page-wrapper.sass\";\nexport default PageWrapper;\n","import React, {\n  FC,\n  PropsWithChildren,\n  useContext,\n  useDebugValue,\n  useEffect,\n  useState,\n} from \"react\";\nimport { Button, message } from \"antd\";\nimport { EditOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport localforage from \"localforage\";\nimport { once } from \"lodash\";\nimport \"./draw-ctrl.sass\";\n\nexport interface DrawCtrl {\n  mode: \"draw\" | \"erase\" | \"select\" | \"text\" | \"rect\" | \"picture\";\n  finger: boolean;\n  lineWidth: number;\n  eraserWidth: number;\n  color: string;\n  highlight: boolean;\n  lasso: boolean;\n  pixelEraser: boolean;\n  globalEraser: boolean;\n  widthList: number[];\n  imageSrc: string;\n}\n\nexport const defaultWidthList = [10, 20, 30, 50];\nexport const defaultDrawCtrl: Readonly<DrawCtrl> = {\n  mode: \"draw\",\n  finger: true,\n  lineWidth: 10,\n  eraserWidth: 10,\n  color: \"#000000\",\n  highlight: false,\n  lasso: false,\n  pixelEraser: false,\n  globalEraser: false,\n  widthList: defaultWidthList,\n  imageSrc: \"\",\n};\n\nasync function getDrawCtrl() {\n  let drawCtrl = await localforage.getItem<DrawCtrl>(\"DRAW_CTRL\");\n  if (!drawCtrl) {\n    drawCtrl = defaultDrawCtrl;\n    await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\n  }\n  return drawCtrl;\n}\n\nasync function saveDrawCtrl(drawCtrl: DrawCtrl) {\n  await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\n}\n\nconst DrawCtrlContext = React.createContext({\n  drawCtrl: defaultDrawCtrl,\n  updateDrawCtrl: (() => {}) as (updated: Partial<DrawCtrl>) => void,\n});\n\nexport function useDrawCtrl() {\n  const { drawCtrl } = useContext(DrawCtrlContext);\n  useDebugValue(drawCtrl);\n  return drawCtrl;\n}\n\nexport function useUpdateDrawCtrl() {\n  const { updateDrawCtrl } = useContext(DrawCtrlContext);\n  return updateDrawCtrl;\n}\n\nexport const DrawCtrlProvider: FC<PropsWithChildren> = ({ children }) => {\n  const [drawCtrl, setDrawCtrl] = useState(defaultDrawCtrl);\n  useEffect(() => {\n    getDrawCtrl().then(setDrawCtrl);\n  }, []);\n\n  const updateDrawCtrl = (updated: Partial<DrawCtrl>) => {\n    setDrawCtrl((prev) => {\n      const newCtrl = { ...prev, ...updated };\n      saveDrawCtrl(newCtrl);\n      return newCtrl;\n    });\n  };\n\n  const { finger } = drawCtrl;\n  useEffect(() => {\n    const detectPen = (e: PointerEvent) => {\n      const isPen = e.isPrimary && e.pointerType === \"pen\";\n      if (!isPen || !finger) return;\n      showPencilMsg(() => updateDrawCtrl({ finger: false }));\n    };\n    document.addEventListener(\"pointerup\", detectPen);\n    return () => document.removeEventListener(\"pointerup\", detectPen);\n  }, [finger]);\n\n  return (\n    <DrawCtrlContext.Provider value={{ drawCtrl, updateDrawCtrl }}>\n      {children}\n    </DrawCtrlContext.Provider>\n  );\n};\n\nconst showPencilMsg = once(async (cb: () => void) => {\n  const hide = () => {\n    message.destroy(\"DETECT_PENCIL\");\n    localforage.setItem(\"SKIP_PENCIL_MSG\", true);\n  };\n  if (await localforage.getItem(\"SKIP_PENCIL_MSG\")) return;\n  message.info({\n    content: (\n      <>\n        Your device supports\n        <Button\n          shape=\"round\"\n          size=\"small\"\n          icon={<EditOutlined />}\n          onClick={() => {\n            cb();\n            hide();\n          }}\n        >\n          Pencil only\n        </Button>\n        <Button\n          size=\"small\"\n          type=\"text\"\n          shape=\"circle\"\n          icon={<CloseOutlined style={{ color: \"#999\" }} />}\n          onClick={hide}\n        />\n      </>\n    ),\n    key: \"DETECT_PENCIL\",\n    className: \"pencil-msg\",\n    duration: 0,\n  });\n});\n","export function createVirtualCanvas(width: number, height: number) {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  if (!context) {\n    throw new Error(\"can't get virtual canvas context\");\n  }\n  canvas.width = width;\n  canvas.height = height;\n  return { canvas, context };\n}\n\nexport function releaseCanvas(canvas?: HTMLCanvasElement) {\n  if (!canvas) return;\n  canvas.width = 1;\n  canvas.height = 1;\n  const ctx = canvas.getContext(\"2d\");\n  ctx?.clearRect(0, 0, 1, 1);\n}\n","import { CSSProperties, FC, useEffect, useMemo, useState } from \"react\";\nimport { defaultWidthList, DrawCtrl } from \"lib/draw/DrawCtrl\";\nimport { ColorCirle } from \"component/ColorCircle\";\nimport { WIDTH } from \"lib/draw/DrawState\";\nimport { Popover, Segmented, Slider } from \"antd\";\nimport { allColors } from \"lib/color\";\nimport { Setter } from \"lib/hooks\";\nimport IconFont from \"component/IconFont\";\nimport { List } from \"immutable\";\nimport \"./pen-panel.sass\";\n\nexport const PenPanel: FC<{\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\n  drawCtrl: Partial<DrawCtrl>;\n}> = ({ updateDrawCtrl, drawCtrl }) => {\n  const { highlight, color } = drawCtrl;\n  const [panelBlur, setPanelBlur] = useState(false);\n\n  return (\n    <div className=\"pen-panel\" data-blur={panelBlur} data-hi={highlight}>\n      <div className=\"pen-status\">\n        <WidthSelect\n          updateDrawCtrl={updateDrawCtrl}\n          drawCtrl={drawCtrl}\n          setPanelBlur={setPanelBlur}\n        />\n        <HighlightSwitch checked={highlight} updateDrawCtrl={updateDrawCtrl} />\n      </div>\n      <ColorSelect\n        color={color || \"\"}\n        setColor={(c) => updateDrawCtrl({ color: c })}\n      />\n    </div>\n  );\n};\n\nexport const WidthSelect: FC<{\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\n  drawCtrl: Partial<DrawCtrl>;\n  setPanelBlur?: Setter<boolean>;\n  field?: \"lineWidth\" | \"eraserWidth\";\n}> = ({\n  updateDrawCtrl,\n  drawCtrl,\n  setPanelBlur = () => {},\n  field = \"lineWidth\",\n}) => {\n  const currWidth = drawCtrl[field];\n  const widthList = drawCtrl.widthList ?? defaultWidthList;\n  const color = field === \"lineWidth\" ? drawCtrl.color ?? \"#aaa\" : \"#aaa\";\n\n  const chosen = useMemo(\n    () => widthList.indexOf(currWidth ?? -1),\n    [currWidth, widthList]\n  );\n\n  const [popShow, setPopShow] = useState(List([false, false, false, false]));\n  useEffect(() => {\n    if (popShow.includes(true)) setPanelBlur(true);\n    else setPanelBlur(false);\n  }, [popShow, setPanelBlur]);\n\n  // temp: ugly Implementation\n  const [widthRatio] = useState(() => {\n    const section = document.querySelector(\"section.note-page\");\n    const sw = section?.getBoundingClientRect().width ?? 0;\n    const bw = document.body.getBoundingClientRect().width;\n    return sw / bw;\n  });\n\n  const realSizeStyle = (width: number) =>\n    ({\n      \"--real-size\": `calc(${100 / WIDTH}vw * ${width} * ${widthRatio})`,\n    } as CSSProperties);\n\n  const options = [\n    { value: -1, label: null },\n    ...widthList.map((width, index) => ({\n      value: index,\n      label: (\n        <Popover\n          open={popShow.get(index)}\n          onOpenChange={(v) => setPopShow((prev) => prev.set(index, v))}\n          trigger={chosen === index ? [\"click\"] : []}\n          placement=\"bottom\"\n          destroyTooltipOnHide\n          content={\n            <Slider\n              min={5}\n              max={100}\n              className=\"ctrl-slider\"\n              defaultValue={width}\n              onAfterChange={(w) => {\n                if (widthList.includes(w)) {\n                  setPopShow((prev) => prev.set(index, false));\n                  return updateDrawCtrl({ [field]: w });\n                }\n                const newWL = widthList.slice();\n                newWL[index] = w;\n                updateDrawCtrl({ widthList: newWL, [field]: w });\n              }}\n            />\n          }\n        >\n          <div className=\"circle-wrapper\" style={realSizeStyle(width)}>\n            <ColorCirle className={\"width-circle \" + field} color={color} />\n          </div>\n        </Popover>\n      ),\n    })),\n  ];\n\n  return (\n    <Segmented\n      className=\"width-seg\"\n      value={chosen}\n      options={options}\n      onChange={(i) => updateDrawCtrl({ [field]: widthList[+i] ?? 10 })}\n    />\n  );\n};\n\nconst HighlightSwitch: FC<{\n  checked?: boolean;\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\n}> = ({ checked = false, updateDrawCtrl }) => {\n  return (\n    <label className=\"hi-wrapper\">\n      <input\n        type=\"checkbox\"\n        name=\"highlight\"\n        checked={checked}\n        onChange={(e) => updateDrawCtrl({ highlight: e.target.checked })}\n      />\n      <div className=\"hi-switch\">\n        <IconFont type=\"icon-Highlight\" />\n      </div>\n    </label>\n  );\n};\n\nexport const ColorSelect: FC<{\n  color: string;\n  setColor: (color: string) => void;\n}> = ({ setColor, color }) => (\n  <div className=\"color-select\">\n    {allColors.map((c) => (\n      <label key={c}>\n        <input\n          checked={color === c}\n          type=\"radio\"\n          name=\"color\"\n          onChange={(e) => e.target.checked && setColor(c)}\n        />\n        <div\n          data-color={c}\n          className=\"circle\"\n          style={{ backgroundColor: c, borderColor: c }}\n        />\n      </label>\n    ))}\n  </div>\n);\n"],"names":["createFromIconfontCN","scriptUrl","btnProps","type","shape","size","getPosVars","x","y","getObjVars","obj","unit","result","Object","entries","forEach","key","value","SelectTool","drawRef","visible","clickPoint","useState","currDrawCtrl","setCurrDrawCtrl","className","style","trigger","placement","overlayClassName","getPopupContainer","e","parentElement","destroyTooltipOnHide","content","PenPanel","updateDrawCtrl","updated","prev","current","mutateStyle","drawCtrl","icon","BgColorsOutlined","CopyOutlined","onClick","duplicateSelected","danger","DeleteOutlined","deleteSelected","TextTool","pointText","renderSlow","view","position","leading","rotation","fontFamily","fontWeight","fontSize","projectToView","bounds","topLeft","bottomLeft","bx","by","bbx","bby","optionAtBottom","scale","viewMatrix","scaling","internalBounds","width","height","lineHeight","color","fillColor","toCSS","allColors","fontColorBtn","setColor","c","mutatePointText","Color","overlayStyle","IconFont","parseFontStyle","isItalic","isBold","fontStyleCSS","fontStyle","fontFamilySelect","popupClassName","onChange","v","bordered","virtual","dropdownMatchSelectWidth","options","name","map","label","offset","useMemo","getBaselineRatio","autoFocus","placeholder","target","toggleBold","BoldOutlined","toggleItalic","ItalicOutlined","test","div","document","createElement","innerText","assign","body","appendChild","span","display","r0","getBoundingClientRect","ratio","removeChild","Math","max","min","rotateCursorFactory","src","cache","Map","half","createVirtualCanvas","canvas","context","image","Image","angle","round","cached","get","translate","rotate","PI","drawImage","data","toDataURL","clearRect","resetTransform","set","getRotateCursor1x","getRotateCursor2x","getRotateCurcor","data1x","data2x","usePreventTouch","allowFinger","isTouch","useRef","checkPoniter","isPrimary","pointerType","preventTouch","touch","touches","touchType","isApplePencil","length","isEventValid","stopPropagation","onPointerDownCapture","onPointerMoveCapture","onTouchStartCapture","onTouchMoveCapture","rightClickHandler","onMouseDownCapture","button","onContextMenu","preventDefault","getGridRange","bottomRight","floor","ceil","setGridItem","grid","item","replaced","strokeBounds","xmin","xmax","ymin","ymax","delete","add","getGridItems","itemSet","Set","Array","from","P_ZERO","Point","DrawRaw","React","ref","drawState","otherStates","defaultDrawCtrl","readonly","imgSrc","toggleSelectTool","toggleTextTool","projSize","Size","mode","finger","lasso","eraserWidth","canvasEl","scope","paper","group","setGroup","teamGroup","setTeamGroup","usePaperItem","path","setPath","rotateHandle","setRotateHandle","useEvent","showSelectTool","bc","bottomCenter","useLayoutEffect","cvs","scp","setup","settings","handleSize","hitTolerance","Layer","project","layers","activate","Tool","remove","releaseCanvas","clear","useEffect","rects","paintRects","r","useSize","canvasWidth","currCenter","divide","currScale","setCurrScale","prevScale","viewSize","multiply","zoom","center","l","update","imgRaster","setImgRaster","raster","Raster","addChild","sendToBack","onLoad","fitBounds","Rectangle","bringToFront","mergedStrokes","DrawState","deferTimerID","deferRender","setDefer","l1","render","tempGroup","tempTeamGroup","removeChildren","stroke","self","hasStroke","uid","paintStroke","push","unrasterizeCanvas","pathClones","timeBeforeUpdate","performance","now","requestAnimationFrame","updateDuration","window","setTimeout","clearTimeout","hitRef","selected","setSelected","paperMode","chosenIDs","setChosenIDs","chosenItems","IDSet","filter","has","resetSelect","undefined","lastOp","ptProxy","Proxy","layerRaster","lrReusable","unrasterizeLayer","lr","canvasRaster","rasterizeCanvas","devicePixelRatio","element","opacity","cr","downPath","startStroke","point","downLasso","downSelectRect","startRect","selectionDragged","handleDown","draw","erase","select","hitRes","hitTest","segments","contains","text","rect","picture","dragPath","smooth","resizeRect","s1","s2","s3","moveSelected","delta","handleDrag","segment","axis","subtract","line","setCursor","moveP","baseP","next","diagonal","strokeWidth","rBaseP","tool","maxDistance","erased","globalEraser","pixelEraser","itemGrid","wnum","hnum","gernerateGrid","handleToolDrag","layer","ew","hitOption","class","tolerance","parent","hitTestAll","topItem","radius","circle","Path","insert","sub","trace","replaceWith","guide","handleUp","simplify","clone","pathData","exportJSON","items","splitters","paths","flattenCP","p","erasedList","abs","area","selection","closePath","moveDash","checkLasso","link","topCenter","lastSegment","handleSelectedCursor","updateMutation","submitText","handleTextCursor","getClickedText","t","isSelfItem","startText","justification","prevTextData","imageSrc","itemData","cursor","lineWidth","double","getSvg","img1x","img2x","getCircleCursor","getStrokeMap","handleMove","handleKeyDown","up","down","left","right","handleKeyUp","handler","onMouseDown","onMouseDrag","onMouseUp","onMouseMove","onKeyDown","onKeyUp","mutations","updateGroupStyle","transP","copies","pathDataList","cancelText","cb","pt","useImperativeHandle","addEventListener","removeEventListener","beforeViewDragged","l0","insertChild","dpi","resolution","rasterize","addTo","rasterizeLayer","usePinch","memo","first","last","origin","lastOrigin","elPos","originRawP","originViewP","originPorjP","viewToProject","dScale","scaleView","then","putCenterBack","scaleBounds","rubberband","useWheel","event","ctrlKey","deltaP","tx","ty","targetCenter","getTargetCenter","dx","dy","divisorP","pow","E","eventOptions","passive","touchHandler","displayName","tuple","useDebugValue","cacheMap","WeakMap","importJSON","console","error","l2","bgRect","clip1","clip2","clipped","highlight","alpha","blendMode","strokeColor","slow","strokeJoin","strokeCap","dashOffset","dashArray","onFrame","originP","Promise","resolve","cx","cy","aniCount","scaleOneFrame","minSize","minX","minY","maxX","maxY","targetX","targetY","equals","moveOneFrame","isInside","compare","intersects","checkedP","newColor","fill","cp","isEmpty","children","flat","ErrorBoundary","state","hasError","errorInfo","this","props","_","Component","PageWrapperRaw","thumbnail","teamStateMap","updateState","pdfIndex","noteID","preview","onViewChange","preload","ignores","skipInView","threshold","range","useInView","skip","entry","intersectionRatio","fullImg","setFullImg","loadImage","useCallback","once","getNotePageImage","show","deleteAll","toList","toArray","imageLoaded","Boolean","drawShow","viewBox","DrawWrapper","useDrawCtrl","selectShow","setSelectShow","setClickPoint","setPointText","setRenderSlow","handleChange","arg","newDS","Draw","active","defaultWidthList","widthList","getDrawCtrl","localforage","saveDrawCtrl","DrawCtrlContext","useContext","useUpdateDrawCtrl","DrawCtrlProvider","setDrawCtrl","newCtrl","detectPen","showPencilMsg","Provider","hide","message","EditOutlined","CloseOutlined","duration","getContext","Error","ctx","panelBlur","setPanelBlur","WidthSelect","HighlightSwitch","checked","ColorSelect","field","currWidth","chosen","indexOf","List","popShow","setPopShow","includes","section","querySelector","widthRatio","realSizeStyle","WIDTH","index","open","onOpenChange","defaultValue","onAfterChange","w","newWL","slice","i","backgroundColor","borderColor"],"sourceRoot":""}