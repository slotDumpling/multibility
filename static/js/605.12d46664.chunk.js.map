{"version":3,"file":"static/js/605.12d46664.chunk.js","mappings":"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","sources":["lib/draw/StateSet.ts","pages/reader/lib/scroll.ts","pages/reader/lib/array.ts","component/UserAvatar.tsx","pages/reader/tools/AddButton.tsx","pages/reader/PageNav/PageNav.tsx","pages/reader/Header/Left.tsx","pages/reader/Header/Middle.tsx","pages/reader/Header/Right.tsx","pages/reader/Header/index.tsx","pages/reader/Info/InfoNav.tsx","lib/keyboard.ts","pages/reader/Reader.tsx","pages/reader/Team.tsx","lib/network/io.ts","pages/reader/tools/Messages.tsx"],"sourcesContent":["import { DrawState, Operation } from \"draft-pad/dist/lib\";\nimport { List, Map, Record } from \"immutable\";\nimport { NotePage } from \"lib/note/note\";\nimport { WIDTH } from \"./DrawConst\";\n\ninterface StateSetRecordType {\n  states: Map<string, DrawState>;\n  editStack: List<string>;\n  undoStack: List<string>;\n}\n\nconst defaultRecord: Readonly<StateSetRecordType> = {\n  states: Map(),\n  editStack: List(),\n  undoStack: List(),\n};\n\ntype StateSetRecord = Record<StateSetRecordType>;\nconst defaultFactory = Record(defaultRecord);\n\nexport type SetOperation = Operation & { pageID: string };\n\nexport class StateSet {\n  constructor(\n    private immutable: StateSetRecord,\n    public lastOp?: SetOperation\n  ) {}\n\n  static createFromPages(pageRec: globalThis.Record<string, NotePage>) {\n    return new StateSet(\n      defaultFactory().set(\n        \"states\",\n        Map(pageRec).map(({ state, ratio }) =>\n          DrawState.loadFromFlat(state, ratio, WIDTH)\n        )\n      )\n    );\n  }\n\n  getImmutable() {\n    return this.immutable;\n  }\n\n  getStates() {\n    return this.getImmutable().get(\"states\");\n  }\n\n  getOneState(pageID: string) {\n    return this.getStates().get(pageID);\n  }\n\n  getEditStack() {\n    return this.getImmutable().get(\"editStack\");\n  }\n\n  getUndoStack() {\n    return this.getImmutable().get(\"undoStack\");\n  }\n\n  setState(pageID: string, drawState: DrawState) {\n    const prevDS = this.getOneState(pageID);\n    if (!prevDS || prevDS === drawState) return this;\n    let currRecord = this.getImmutable()\n      .update(\"states\", (s) => s.set(pageID, drawState))\n      .update(\"editStack\", (l) => l.push(pageID))\n      .delete(\"undoStack\");\n\n    const { lastOp } = drawState;\n    const lastSetOp = lastOp && { ...lastOp, pageID };\n\n    return new StateSet(currRecord, lastSetOp);\n  }\n\n  // sync with mutation.\n  syncStrokeTime(pageID: string, uid: string, timestamp: number) {\n    const prevDS = this.getOneState(pageID);\n    prevDS && DrawState.syncStrokeTime(prevDS, uid, timestamp);\n    return this;\n  }\n\n  addState(pageID: string, notePage: NotePage) {\n    const { state, ratio } = notePage;\n    const newDS = DrawState.loadFromFlat(state, ratio, WIDTH);\n    const currRecord = this.getImmutable().update(\"states\", (s) =>\n      s.set(pageID, newDS)\n    );\n    return new StateSet(currRecord);\n  }\n\n  deleteState(pageID: string) {\n    return new StateSet(\n      this.getImmutable().update(\"states\", (s) => s.delete(pageID))\n    );\n  }\n\n  isUndoable() {\n    return this.getEditStack().size > 0;\n  }\n\n  isRedoable() {\n    return this.getUndoStack().size > 0;\n  }\n\n  undo() {\n    if (!this.isUndoable()) return this;\n    const lastUid = this.getEditStack().last();\n    const prevDS = lastUid && this.getOneState(lastUid);\n    if (!prevDS) return this;\n\n    const newDS = DrawState.undo(prevDS);\n    const { lastOp } = newDS;\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\n\n    return new StateSet(\n      this.getImmutable()\n        .update(\"editStack\", (s) => s.pop())\n        .update(\"undoStack\", (s) => s.push(lastUid))\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\n      lastSetOp\n    );\n  }\n\n  redo() {\n    if (!this.isRedoable()) return this;\n    const lastUid = this.getUndoStack().last();\n    const prevDS = lastUid && this.getOneState(lastUid);\n    if (!prevDS) return this;\n\n    const newDS = DrawState.redo(prevDS);\n    const { lastOp } = newDS;\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\n\n    return new StateSet(\n      this.getImmutable()\n        .update(\"undoStack\", (s) => s.pop())\n        .update(\"editStack\", (s) => s.push(lastUid))\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\n      lastSetOp\n    );\n  }\n}\n","import {\n  useRef,\n  useMemo,\n  useState,\n  useEffect,\n  useDebugValue,\n  useLayoutEffect,\n  useDeferredValue,\n} from \"react\";\nimport localforage from \"localforage\";\nimport { Map } from \"immutable\";\nimport { debounce } from \"lodash\";\nimport { useMemoizedFn as useEvent } from \"ahooks\";\n\nconst scrollForage = localforage.createInstance({ name: \"scroll\" });\nconst persistScroll = debounce((noteID: string, currPageID: string) => {\n  scrollForage.setItem(noteID, currPageID);\n}, 2000);\n\nexport function useScrollPage(\n  noteID: string,\n  pageOrder = [] as string[],\n  deps = [] as any[]\n) {\n  const [refMap, setRefMap] = useState(Map<string, HTMLElement>());\n  const scrolled = useRef(false);\n  const [prevPageID, setPrevPageID] = useState(\"\");\n  useEffect(() => {\n    (async () => {\n      const stored = await scrollForage.getItem<string>(noteID);\n      if (!stored) return (scrolled.current = true);\n      setPrevPageID(stored);\n    })();\n  }, [noteID]);\n\n  useLayoutEffect(() => {\n    const section = refMap.get(prevPageID);\n    if (scrolled.current || !section) return;\n    section.scrollIntoView();\n    scrolled.current = true;\n  }, [prevPageID, refMap]);\n\n  const [inviewRatios, setInviewRatios] = useState(Map<string, number>());\n  const deferredRatios = useDeferredValue(inviewRatios);\n  const deferredOrder = useDeferredValue(pageOrder);\n  const currPageID = useMemo(\n    () => largestKey(deferredRatios, deferredOrder),\n    [deferredRatios, deferredOrder]\n  );\n\n  useEffect(() => {\n    if (scrolled.current) persistScroll(noteID, currPageID);\n  }, [noteID, currPageID]);\n\n  const calcScrollY = useEvent(() => {\n    const section = refMap.get(currPageID);\n    const header = section?.parentElement?.parentElement?.firstElementChild;\n    if (!header) return 0;\n    const { top } = section.getBoundingClientRect();\n    const { height } = header.getBoundingClientRect();\n    return -top + height;\n  });\n  const scrollY = useMemo(calcScrollY, [pageOrder, calcScrollY, ...deps]);\n\n  const scrollToCurr = useEvent(() => {\n    const section = refMap.get(currPageID);\n    if (!section) return;\n    section.scrollIntoView();\n    window.scrollBy(0, scrollY);\n  });\n  useLayoutEffect(scrollToCurr, [pageOrder, scrollToCurr, ...deps]);\n\n  const sectionRef = useEvent((pageID: string) => (el: HTMLElement | null) => {\n    if (!el) return;\n    setRefMap((prev) => prev.set(pageID, el));\n  });\n\n  const taskID = useRef(0);\n  const [scrolling, setScrolling] = useState(false);\n  const scrollPage = (pageID: string) => {\n    const section = refMap.get(pageID);\n    if (!section) return;\n    const handleScroll = () => {\n      window.clearTimeout(taskID.current);\n      taskID.current = window.setTimeout(() => {\n        setScrolling(false);\n        document.removeEventListener(\"scroll\", handleScroll);\n      }, 50);\n    };\n    document.addEventListener(\"scroll\", handleScroll);\n    section.scrollIntoView({ behavior: \"smooth\" });\n    setScrolling(true);\n  };\n\n  useDebugValue(currPageID);\n  return { scrollPage, setInviewRatios, sectionRef, currPageID, scrolling };\n}\n\nconst largestKey = (map: Map<string, number>, order: string[]) => {\n  let result = \"\";\n  let maxRatio = 0;\n  for (let key of order) {\n    const ratio = map.get(key);\n    if (!ratio) continue;\n    if (ratio === 1) return key;\n    if (ratio > maxRatio) {\n      result = key;\n      maxRatio = ratio;\n    }\n  }\n  return result;\n};\n","export function exchange<T>(list: T[], fromIndex: number, toIndex: number) {\n  const result = list.slice();\n  const [removed] = result.splice(fromIndex, 1);\n  if (!removed) return list;\n  result.splice(toIndex, 0, removed);\n  return result;\n}\n\nexport function insertAfter<T>(list: T[], prevItem: T, newItem: T) {\n  const prevIndex = list.indexOf(prevItem);\n  const curr = list.slice();\n  if (prevIndex === -1) return curr;\n  curr.splice(prevIndex + 1, 0, newItem);\n  return curr;\n}\n","import { Avatar } from \"antd\";\nimport { AvatarSize } from \"antd/lib/avatar/SizeContext\";\nimport { FC, useMemo } from \"react\";\nimport { getHashedColor } from \"lib/color\";\nimport { UserInfo } from \"lib/user\";\n\nexport const UserAvatar: FC<{\n  userInfo: UserInfo;\n  size?: AvatarSize;\n  onClick?: () => void;\n  chosen?: boolean;\n  className?: string;\n}> = ({\n  userInfo,\n  size = \"default\",\n  onClick = () => {},\n  chosen = false,\n  className,\n}) => {\n  const color = useMemo(() => getHashedColor(userInfo.userID), [userInfo]);\n  if (!userInfo) return null;\n  const { userName } = userInfo;\n\n  return (\n    <Avatar\n      className={className}\n      data-chosen={chosen}\n      size={size}\n      style={{ backgroundColor: color }}\n    >\n      <div className=\"avatar-wrapper\" onClick={onClick}>\n        {userName?.slice(0, 3)}\n      </div>\n    </Avatar>\n  );\n};\n","import { FC } from \"react\";\nimport { Button } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nexport const AddPageButton: FC<{ addFinalPage: () => void }> = ({\n  addFinalPage,\n}) => {\n  return (\n    <Button type=\"dashed\" icon={<PlusOutlined />} block onClick={addFinalPage}>\n      New page\n    </Button>\n  );\n};\n","import React, {\n  FC,\n  useRef,\n  useMemo,\n  useState,\n  useContext,\n  useLayoutEffect,\n} from \"react\";\nimport {\n  MoreOutlined,\n  PlusOutlined,\n  CopyOutlined,\n  CaretUpOutlined,\n  DeleteOutlined,\n} from \"@ant-design/icons\";\nimport {\n  Draggable,\n  Droppable,\n  DropResult,\n  DragDropContext,\n} from \"react-beautiful-dnd\";\nimport {\n  Avatar,\n  Button,\n  Menu,\n  Pagination,\n  Popover,\n  Select,\n  Switch,\n  Tabs,\n} from \"antd\";\nimport {\n  Setter,\n  useActiveKey,\n  useAsideOpen,\n  ActiveKeyProvider,\n} from \"lib/hooks\";\nimport { ReaderMethods, ReaderStates } from \"../Reader\";\nimport PageWrapper from \"component/PageWrapper\";\nimport { UserAvatar } from \"component/UserAvatar\";\nimport { exchange } from \"../lib/array\";\nimport IconFont from \"component/IconFont\";\nimport classNames from \"classnames\";\nimport { TeamCtx } from \"../Team\";\nimport { useMemoizedFn as useEvent } from \"ahooks\";\nimport { useSwipeable } from \"react-swipeable\";\nimport { NotePage } from \"lib/note/note\";\nimport { TeamState } from \"lib/draw/TeamState\";\nimport { AddPageButton } from \"../tools/AddButton\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { useForceLight } from \"lib/Dark\";\nimport { useDrawCtrl, useUpdateDrawCtrl } from \"lib/draw/DrawCtrl\";\nimport { useMediaQuery } from \"react-responsive\";\n\ntype PreviewProps = ReaderMethods & ReaderStates;\nexport const PageNav: FC<PreviewProps> = (props) => {\n  const [left, setLeft] = useState(false);\n  const [asideOpen] = useAsideOpen();\n\n  const opposite = (\n    <Draggable draggableId=\"OPPOSITE\" index={left ? 1 : 0} isDragDisabled>\n      {({ innerRef }) => <div className=\"opposite\" ref={innerRef} />}\n    </Draggable>\n  );\n\n  return (\n    <CSSTransition in={asideOpen} timeout={300} unmountOnExit>\n      <ActiveKeyProvider initKey=\"ALL\">\n        <DragDropContext\n          onDragEnd={({ destination }) => {\n            if (destination?.index === 0) setLeft(true);\n            if (destination?.index === 1) setLeft(false);\n          }}\n        >\n          <Droppable droppableId=\"preview-drop\" direction=\"horizontal\">\n            {(\n              { droppableProps, innerRef, placeholder },\n              { isDraggingOver }\n            ) => (\n              <aside\n                className=\"preview-drop\"\n                data-left={left}\n                ref={innerRef}\n                data-dragged={isDraggingOver}\n                {...droppableProps}\n              >\n                {opposite}\n                <PreviewCard left={left} {...props} />\n                {placeholder}\n              </aside>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </ActiveKeyProvider>\n    </CSSTransition>\n  );\n};\n\nconst PreviewCard: FC<{ left: boolean } & PreviewProps> = ({\n  left,\n  ...props\n}) => {\n  const [activeKey] = useActiveKey();\n  const [, setAsideOpen] = useAsideOpen();\n\n  const title = {\n    ALL: \"All Pages\",\n    MARKED: \"Bookmarks\",\n    WRITTEN: \"Notes\",\n  }[activeKey];\n\n  const { ref: swipeRef, ...swipeHandler } = useSwipeable({\n    onSwipedLeft() {\n      if (left) setAsideOpen(false);\n    },\n    onSwipedRight() {\n      if (!left) setAsideOpen(false);\n    },\n    swipeDuration: 200,\n  });\n\n  return (\n    <Draggable draggableId={\"CARD\"} index={left ? 0 : 1}>\n      {(\n        { innerRef, draggableProps, dragHandleProps },\n        { isDragging, isDropAnimating }\n      ) => (\n        <div\n          className=\"preview-card\"\n          ref={(e) => {\n            innerRef(e);\n            swipeRef(e);\n          }}\n          data-animating={isDropAnimating}\n          {...draggableProps}\n          {...swipeHandler}\n        >\n          <div className=\"drag-handle\" {...dragHandleProps} />\n          <h3>{title}</h3>\n          <PreviewTabs />\n          <PageList cardDragged={isDragging} {...props} />\n          <PreviewFooter {...props} />\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nconst PageList: FC<PreviewProps & { cardDragged: boolean }> = React.memo(\n  ({ cardDragged, ...props }) => {\n    const refRec = useRef<Record<string, HTMLElement>>({});\n    const [activeKey] = useActiveKey();\n    const [asideOpen] = useAsideOpen();\n    const { pageOrder, currPageID } = props;\n    const { saveReorder, addFinalPage } = props;\n\n    const onDragEnd = ({ source, destination }: DropResult) => {\n      if (!destination || !pageOrder) return;\n      const { index: fromIndex } = source;\n      const { index: toIndex } = destination;\n      const pageID = pageOrder[fromIndex];\n      if (fromIndex === toIndex || !pageID) return;\n      const newOrder = exchange(pageOrder, fromIndex, toIndex);\n      saveReorder(newOrder, true);\n    };\n\n    const initScroll = useEvent(() => {\n      refRec.current[currPageID]?.scrollIntoView();\n    });\n    useLayoutEffect(() => {\n      if (asideOpen) initScroll();\n    }, [asideOpen, activeKey, initScroll]);\n\n    return (\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"preview-list\" isDropDisabled={cardDragged}>\n          {({ droppableProps, innerRef, placeholder }) => (\n            <div className=\"page-list\" ref={innerRef} {...droppableProps}>\n              {pageOrder.map((uid, index) => (\n                <PagePreview\n                  key={uid}\n                  uid={uid}\n                  pageIndex={index}\n                  refRec={refRec.current}\n                  cardDragged={cardDragged}\n                  {...props}\n                />\n              ))}\n              {placeholder}\n              {activeKey === \"ALL\" && (\n                <AddPageButton addFinalPage={addFinalPage} />\n              )}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n);\nPageList.displayName = \"PageList\";\n\nconst PagePreview: FC<\n  {\n    uid: string;\n    pageIndex: number;\n    refRec: Record<string, HTMLElement>;\n    cardDragged: boolean;\n  } & PreviewProps\n> = ({ uid, pageIndex, refRec, cardDragged, ...props }) => {\n  const { stateSet, pageRec, currPageID, scrollPage } = props;\n  const { teamState, ignores } = useContext(TeamCtx);\n  const [activeKey] = useActiveKey();\n  const [chosen, setChosen] = useState(\"\");\n\n  const page = pageRec.get(uid);\n  const drawState = stateSet.getOneState(uid);\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\n\n  const marked = useRef(false);\n  if (activeKey === \"MARKED\") {\n    marked.current = page?.marked || marked.current;\n  } else {\n    marked.current = false;\n  }\n\n  const userIDs = useMemo(\n    () => TeamState.getValidUsers(teamStateMap, ignores),\n    [teamStateMap, ignores]\n  );\n\n  if (!page || !drawState) return null;\n\n  if (\n    activeKey === \"WRITTEN\" &&\n    drawState.isEmpty() &&\n    TeamState.isEmpty(teamStateMap)\n  ) {\n    return null;\n  }\n  if (activeKey === \"MARKED\" && !marked.current) return null;\n  const curr = currPageID === uid;\n\n  return (\n    <Draggable\n      draggableId={uid}\n      index={pageIndex}\n      isDragDisabled={activeKey !== \"ALL\" || cardDragged}\n    >\n      {(\n        { innerRef, draggableProps, dragHandleProps },\n        { isDragging, isDropAnimating }\n      ) => (\n        <div\n          ref={(e) => {\n            innerRef(e);\n            if (e) refRec[uid] = e;\n          }}\n          className=\"page\"\n          data-curr={curr}\n          data-dragged={isDragging}\n          data-animating={isDropAnimating}\n          onClick={() => scrollPage(uid)}\n          {...draggableProps}\n          {...dragHandleProps}\n        >\n          <PageWrapper\n            drawState={teamStateMap?.get(chosen) || drawState}\n            teamStateMap={chosen ? undefined : teamStateMap}\n            thumbnail={page.image}\n            ignores={ignores}\n            preview\n            skipInView={isDragging || cardDragged}\n          />\n          <PreviewTools\n            uid={uid}\n            index={pageIndex}\n            chosen={chosen}\n            setChosen={setChosen}\n            page={page}\n            userIDs={userIDs}\n            {...props}\n          />\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nconst PreviewTools: FC<\n  {\n    uid: string;\n    index: number;\n    chosen: string;\n    setChosen: Setter<string>;\n    page: NotePage;\n    userIDs: string[];\n  } & ReaderMethods\n> = React.memo(({ uid, index, chosen, setChosen, page, userIDs, ...props }) => {\n  const { switchPageMarked } = props;\n  return (\n    <div className=\"tools\" onClick={(e) => e.stopPropagation()}>\n      <div\n        className=\"bookmark\"\n        data-marked={page.marked}\n        onClick={() => switchPageMarked(uid)}\n      />\n      <div className=\"index\">{index + 1}</div>\n      <PreviewOption uid={uid} {...props} />\n      <TeamAvatars userIDs={userIDs} chosen={chosen} setChosen={setChosen} />\n    </div>\n  );\n});\nPreviewTools.displayName = \"PreviewTools\";\n\nconst TeamAvatars: FC<{\n  userIDs: string[];\n  chosen: string;\n  setChosen: Setter<string>;\n}> = ({ userIDs, chosen, setChosen }) => {\n  const { userRec } = useContext(TeamCtx);\n  return (\n    <Avatar.Group\n      maxCount={2}\n      size=\"default\"\n      className={classNames(\"team-group\", { chosen })}\n      maxPopoverPlacement=\"bottom\"\n    >\n      {userIDs.map((userID) => {\n        const userInfo = userRec[userID];\n        if (!userInfo) return null;\n        return (\n          <UserAvatar\n            key={userID}\n            size=\"default\"\n            userInfo={userInfo}\n            className=\"preview-avatar\"\n            chosen={chosen === userID}\n            onClick={() => setChosen((prev) => (prev === userID ? \"\" : userID))}\n          />\n        );\n      })}\n    </Avatar.Group>\n  );\n};\n\nconst PreviewOption: FC<{ uid: string } & ReaderMethods> = ({\n  uid,\n  addPage,\n  deletePage,\n}) => {\n  const menu = (\n    <Menu\n      items={[\n        {\n          key: \"ADD\",\n          icon: <PlusOutlined />,\n          label: \"Add page\",\n          onClick: () => addPage(uid),\n        },\n        {\n          key: \"COPY\",\n          icon: <CopyOutlined />,\n          label: \"Duplicate\",\n          onClick: () => addPage(uid, true),\n        },\n        {\n          key: \"DELETE\",\n          icon: <DeleteOutlined />,\n          label: \"Delete\",\n          danger: true,\n          onClick: () => deletePage(uid),\n        },\n      ]}\n    />\n  );\n  return (\n    <Popover\n      content={menu}\n      trigger=\"click\"\n      placement=\"left\"\n      destroyTooltipOnHide\n      getPopupContainer={(e) => e.parentElement?.parentElement?.parentElement!}\n    >\n      <div className=\"option\">\n        <MoreOutlined />\n      </div>\n    </Popover>\n  );\n};\n\nconst PreviewTabs: FC = React.memo(() => {\n  const [activeKey, setActiveKey] = useActiveKey();\n  return (\n    <Tabs\n      className=\"tabs\"\n      activeKey={activeKey}\n      onChange={setActiveKey}\n      tabBarGutter={0}\n      size=\"small\"\n      centered\n      items={[\n        { key: \"ALL\", label: <IconFont type=\"icon-uf_paper\" /> },\n        { key: \"MARKED\", label: <IconFont type=\"icon-bookmark2\" /> },\n        { key: \"WRITTEN\", label: <IconFont type=\"icon-write\" /> },\n      ]}\n    ></Tabs>\n  );\n});\nPreviewTabs.displayName = \"PreviewTabs\";\n\nconst PreviewFooter: FC<PreviewProps> = ({\n  currPageID,\n  pageOrder,\n  scrollPage,\n  size,\n  setSize,\n}) => {\n  const pageIndex = useMemo(\n    () => (pageOrder.indexOf(currPageID) ?? 0) + 1,\n    [currPageID, pageOrder]\n  );\n\n  const jumpMenu = pageOrder && (\n    <Pagination\n      pageSize={1}\n      total={pageOrder.length}\n      simple\n      current={pageIndex}\n      onChange={(index) => {\n        const pageID = pageOrder[index - 1];\n        pageID && scrollPage(pageID);\n      }}\n    />\n  );\n\n  return (\n    <footer>\n      <Popover\n        content={jumpMenu}\n        trigger=\"click\"\n        getPopupContainer={(e) => e.parentElement!}\n        destroyTooltipOnHide\n      >\n        <Button type=\"text\" size=\"small\">\n          {pageIndex} / {pageOrder.length}\n        </Button>\n      </Popover>\n      <FooterOptions />\n      <Select\n        className=\"size-select\"\n        popupClassName=\"size-drop\"\n        size=\"small\"\n        bordered={false}\n        showArrow={false}\n        dropdownMatchSelectWidth={80}\n        options={[40, 60, 80, 100].map((value) => ({\n          value,\n          label: value + \"%\",\n        }))}\n        value={size}\n        onChange={setSize}\n        placement=\"topRight\"\n        getPopupContainer={(e) => e.parentElement!}\n      />\n    </footer>\n  );\n};\n\nconst FooterOptions = () => {\n  const { finger } = useDrawCtrl();\n  const updateDrawCtrl = useUpdateDrawCtrl();\n  const [forceLight, setForceLight] = useForceLight();\n  const isLight = useMediaQuery({ query: \"(prefers-color-scheme: light)\" });\n\n  const options = (\n    <>\n      <div className=\"footer-option\">\n        <span>Pencil only</span>\n        <Switch\n          size=\"small\"\n          checked={!finger}\n          onChange={(v) => updateDrawCtrl({ finger: !v })}\n        />\n      </div>\n      <div className=\"footer-option\">\n        <span>Light mode</span>\n        <Switch\n          size=\"small\"\n          checked={forceLight || isLight}\n          disabled={isLight}\n          onChange={setForceLight}\n        />\n      </div>\n    </>\n  );\n\n  return (\n    <Popover\n      getPopupContainer={(e) => e.parentElement!}\n      trigger=\"click\"\n      content={options}\n      placement=\"topRight\"\n    >\n      <Button\n        className=\"option-btn\"\n        size=\"small\"\n        type=\"text\"\n        shape=\"circle\"\n        icon={<CaretUpOutlined style={{ opacity: 0.5 }} />}\n      />\n    </Popover>\n  );\n};\n","import { FC } from \"react\";\nimport { Button } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport { HomeFilled, SaveOutlined } from \"@ant-design/icons\";\n\nexport const HeaderLeft: FC<{\n  saved: boolean;\n  instantSave: () => Promise<void> | undefined;\n}> = ({ saved, instantSave }) => {\n  const nav = useNavigate();\n  return (\n    <div className=\"left\">\n      <Button\n        type=\"text\"\n        onClick={async () => {\n          await instantSave();\n          nav(\"/\");\n        }}\n        icon={<HomeFilled style={{ opacity: 0.8 }} />}\n      />\n      <Button\n        type=\"text\"\n        className=\"save\"\n        onClick={instantSave}\n        disabled={saved}\n        icon={<SaveOutlined />}\n      />\n    </div>\n  );\n};\n","import { FC, ReactNode, useState } from \"react\";\nimport { Button, ButtonProps, Input, Popover, Segmented } from \"antd\";\nimport {\n  UndoOutlined,\n  RedoOutlined,\n  LinkOutlined,\n  BorderOutlined,\n  GatewayOutlined,\n  PictureOutlined,\n  HighlightTwoTone,\n  HighlightOutlined,\n  PlusCircleOutlined,\n} from \"@ant-design/icons\";\nimport IconFont from \"component/IconFont\";\nimport { PenPanel, WidthSelect } from \"../tools/PenPanel\";\nimport { DrawCtrl } from \"draft-pad/dist/lib\";\nimport { useDrawCtrl, useUpdateDrawCtrl } from \"lib/draw/DrawCtrl\";\n\nconst btnProps: ButtonProps = { type: \"text\" };\n\nexport const HeaderMiddle: FC<{\n  handleUndo: () => void;\n  handleRedo: () => void;\n  undoable: boolean;\n  redoable: boolean;\n}> = ({ handleUndo, handleRedo, undoable, redoable }) => (\n  <div className=\"middle\">\n    <Button\n      {...btnProps}\n      icon={<UndoOutlined />}\n      onClick={handleUndo}\n      disabled={!undoable}\n    />\n    <Button\n      className=\"redo-btn\"\n      {...btnProps}\n      icon={<RedoOutlined />}\n      onClick={handleRedo}\n      disabled={!redoable}\n    />\n    <PenButton />\n    <EraserButton />\n    <SelectButton />\n    <AddButton />\n  </div>\n);\n\nconst PenButton = () => {\n  const drawCtrl = useDrawCtrl();\n  const { mode, color } = drawCtrl;\n  const updateDrawCtrl = useUpdateDrawCtrl();\n\n  return mode === \"draw\" ? (\n    <Popover\n      content={<PenPanel updateDrawCtrl={updateDrawCtrl} drawCtrl={drawCtrl} />}\n      trigger=\"click\"\n      placement=\"bottom\"\n      getPopupContainer={(e) => e.parentElement!}\n      destroyTooltipOnHide\n    >\n      <Button\n        type=\"link\"\n        icon={<HighlightTwoTone twoToneColor={color} className=\"pen-icon\" />}\n        data-active={mode === \"draw\"}\n      />\n    </Popover>\n  ) : (\n    <Button\n      {...btnProps}\n      onClick={() => updateDrawCtrl({ mode: \"draw\" })}\n      icon={<HighlightOutlined />}\n    />\n  );\n};\n\nconst EraserButton = () => {\n  const drawCtrl = useDrawCtrl();\n  const { mode, pixelEraser } = drawCtrl;\n  const updateDrawCtrl = useUpdateDrawCtrl();\n\n  const pixelSeg = (\n    <Segmented\n      block\n      size=\"small\"\n      className=\"pixel-seg\"\n      options={[\"Pixel\", \"Object\"]}\n      value={pixelEraser ? \"Pixel\" : \"Object\"}\n      onChange={(value) => {\n        if (value === \"Pixel\") updateDrawCtrl({ pixelEraser: true });\n        else updateDrawCtrl({ pixelEraser: false });\n      }}\n    />\n  );\n\n  return mode === \"erase\" ? (\n    <Popover\n      content={\n        <div className=\"erase-panel\">\n          {pixelSeg}\n          <WidthSelect\n            drawCtrl={drawCtrl}\n            updateDrawCtrl={updateDrawCtrl}\n            field=\"eraserWidth\"\n          />\n        </div>\n      }\n      trigger=\"click\"\n      placement=\"bottom\"\n      getPopupContainer={(e) => e.parentElement!}\n      destroyTooltipOnHide\n    >\n      <Button\n        type=\"link\"\n        icon={<IconFont type=\"icon-eraser\" />}\n        data-active={mode === \"erase\"}\n      />\n    </Popover>\n  ) : (\n    <Button\n      {...btnProps}\n      onClick={() => updateDrawCtrl({ mode: \"erase\" })}\n      icon={<IconFont type=\"icon-eraser\" />}\n    />\n  );\n};\n\nconst SelectButton = () => {\n  const { lasso, mode } = useDrawCtrl();\n  const updateDrawCtrl = useUpdateDrawCtrl();\n\n  const icon = lasso ? <IconFont type=\"icon-lasso1\" /> : <GatewayOutlined />;\n\n  return mode === \"select\" ? (\n    <Button\n      type=\"link\"\n      icon={icon}\n      onClick={() => updateDrawCtrl({ lasso: !lasso })}\n      data-active={mode === \"select\"}\n    />\n  ) : (\n    <Button\n      {...btnProps}\n      icon={icon}\n      onClick={() => updateDrawCtrl({ mode: \"select\" })}\n    />\n  );\n};\n\nconst AddButton: FC = () => {\n  const drawCtrl = useDrawCtrl();\n  const updateDrawCtrl = useUpdateDrawCtrl();\n  const { mode, imageSrc } = drawCtrl;\n\n  const getButton = (modeName: DrawCtrl[\"mode\"], icon: ReactNode) => (\n    <Button\n      key={modeName}\n      type={mode === modeName ? \"link\" : \"text\"}\n      onClick={() => updateDrawCtrl({ mode: modeName })}\n      icon={icon}\n      data-active={mode === modeName}\n    />\n  );\n\n  const buttons: Record<string, ReactNode> = {\n    text: getButton(\"text\", <IconFont type=\"icon-text1\" />),\n    picture: getButton(\"picture\", <PictureOutlined />),\n    rect: getButton(\"rect\", <BorderOutlined />),\n  };\n\n  const [showImage, setShowImage] = useState(false);\n\n  const optionPanels: Record<string, ReactNode> = {\n    text: <div className=\"text-option\">Tap anywhere to insert text.</div>,\n    picture: (\n      <div className=\"picture-option\">\n        <Input\n          value={imageSrc}\n          onChange={(e) => updateDrawCtrl({ imageSrc: e.target.value })}\n          prefix={<LinkOutlined />}\n          placeholder=\"Image URL\"\n          allowClear\n        />\n        {\n          <img\n            src={imageSrc}\n            alt=\"inserted\"\n            data-show={showImage}\n            onLoad={() => setShowImage(true)}\n            onError={() => setShowImage(false)}\n          />\n        }\n      </div>\n    ),\n    rect: <PenPanel {...{ drawCtrl, updateDrawCtrl }} />,\n  };\n\n  const content = (\n    <div className=\"add-pop\">\n      <div className=\"button-row\">{Object.values(buttons)}</div>\n      {/^(text|picture|rect)$/.test(mode) && (\n        <div className=\"option-panel\">{optionPanels[mode]}</div>\n      )}\n    </div>\n  );\n  return (\n    <Popover\n      content={content}\n      trigger=\"click\"\n      placement=\"bottomRight\"\n      getPopupContainer={(e) => e.parentElement!}\n    >\n      {buttons[mode] ?? <Button type=\"text\" icon={<PlusCircleOutlined />} />}\n    </Popover>\n  );\n};\n","import {\n  FC,\n  useMemo,\n  useState,\n  useEffect,\n  useContext,\n  PropsWithChildren,\n  ReactNode,\n} from \"react\";\nimport {\n  Badge,\n  Alert,\n  Modal,\n  Button,\n  Divider,\n  message,\n  Popover,\n  Tooltip,\n  Switch,\n  Select,\n} from \"antd\";\nimport Search from \"antd/lib/input/Search\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { PasscodeInput } from \"antd-mobile\";\nimport { TeamCtx } from \"../Team\";\nimport { getUserID, getUserName, saveUserName, UserInfo } from \"lib/user\";\nimport {\n  EyeOutlined,\n  FormOutlined,\n  TeamOutlined,\n  LinkOutlined,\n  UserOutlined,\n  CheckOutlined,\n  ReloadOutlined,\n  GlobalOutlined,\n  ShareAltOutlined,\n  BranchesOutlined,\n  CheckCircleFilled,\n  DisconnectOutlined,\n  EyeInvisibleOutlined,\n  UsergroupAddOutlined,\n  QuestionCircleOutlined,\n} from \"@ant-design/icons\";\nimport { editNoteData } from \"lib/note/archive\";\nimport { UserAvatar } from \"component/UserAvatar\";\nimport { putNote } from \"lib/network/http\";\nimport copy from \"clipboard-copy\";\nimport { useAsideOpen } from \"lib/hooks\";\nimport { sortBy } from \"lodash\";\nimport IconFont from \"component/IconFont\";\nimport { useDrawCtrl, useUpdateDrawCtrl } from \"lib/draw/DrawCtrl\";\n\nexport const HeaderRight: FC<{\n  instantSave: () => Promise<void> | undefined;\n}> = ({ instantSave }) => {\n  const { teamOn } = useContext(TeamCtx);\n  return (\n    <div className=\"right\">\n      {teamOn ? <RoomInfo /> : <JoinRoom instantSave={instantSave} />}\n      <PageNavButton />\n    </div>\n  );\n};\n\nconst PageNavButton = () => {\n  const [asideOpen, setAsideOpen] = useAsideOpen();\n  return (\n    <Button\n      type={asideOpen ? \"link\" : \"text\"}\n      icon={<IconFont type=\"icon-cards\" />}\n      onClick={() => setAsideOpen((prev) => !prev)}\n    />\n  );\n};\n\nconst UserCard: FC<{ userInfo: UserInfo }> = ({ userInfo }) => {\n  const [renaming, setRenaming] = useState(false);\n  const { ignores, setIgnores, resetIO } = useContext(TeamCtx);\n  useEffect(() => setRenaming(false), [userInfo]);\n  if (!userInfo) return null;\n\n  const { userName, online, userID } = userInfo;\n  const self = userID === getUserID();\n  const ignored = ignores.has(userID) && !self;\n\n  const switchIgnore = () => {\n    setIgnores((prev) => {\n      if (prev.has(userID)) return prev.delete(userID);\n      return prev.add(userID);\n    });\n  };\n\n  const submitRename = (value: string) => {\n    const name = value.trim();\n    if (!name || name === userName) return setRenaming(false);\n    saveUserName(name);\n    resetIO();\n  };\n\n  return (\n    <div className=\"user-item\" data-online={online}>\n      <UserAvatar userInfo={userInfo} size=\"small\" className=\"room-avatar\" />\n      {renaming || <span className=\"user-name\">{userName}</span>}\n      {renaming && (\n        <Search\n          autoFocus\n          className=\"rename-input\"\n          defaultValue={userName}\n          onSearch={submitRename}\n          enterButton={<Button icon={<CheckOutlined />} />}\n        />\n      )}\n      {self ? (\n        renaming || (\n          <Button\n            type=\"text\"\n            icon={<FormOutlined />}\n            onClick={() => setRenaming(true)}\n          />\n        )\n      ) : (\n        <Button\n          type=\"text\"\n          icon={ignored ? <EyeInvisibleOutlined /> : <EyeOutlined />}\n          onClick={switchIgnore}\n        />\n      )}\n    </div>\n  );\n};\n\nconst ShareButton: FC = () => {\n  const [copied, setCopied] = useState(false);\n  const link = window.location.href;\n  const share = async () => {\n    try {\n      await copy(`${document.title}\\n${link}`);\n      setCopied(true);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  return (\n    <Button\n      icon={copied ? <CheckCircleFilled /> : <LinkOutlined />}\n      type={copied ? \"primary\" : \"default\"}\n      className=\"share-btn\"\n      onClick={share}\n      block\n    >\n      {copied ? \"Copied\" : \"Copy link\"}\n    </Button>\n  );\n};\n\nconst TeamInfoMenu: FC<\n  PropsWithChildren<{ title: string; icon: ReactNode }>\n> = ({ children, title, icon }) => {\n  return (\n    <div className=\"team-info-menu\">\n      <div className=\"team-info-title\">\n        {icon}\n        <span>{title}</span>\n      </div>\n      {children}\n      <Divider />\n    </div>\n  );\n};\n\nconst ShareMenu: FC = () => {\n  const { code } = useContext(TeamCtx);\n  return (\n    <TeamInfoMenu icon={<ShareAltOutlined />} title=\"Share\">\n      <PasscodeInput\n        className=\"code-display\"\n        value={String(code)}\n        length={4}\n        plain\n      />\n      <ShareButton />\n    </TeamInfoMenu>\n  );\n};\n\nconst CollaborateMenu: FC = () => {\n  const drawCtrl = useDrawCtrl();\n  const { globalEraser } = drawCtrl;\n  const updateDrawCtrl = useUpdateDrawCtrl();\n\n  return (\n    <TeamInfoMenu icon={<BranchesOutlined />} title=\"Collaborate\">\n      <div className=\"global-switch\">\n        <span>\n          Global\n          <Tooltip className=\"hint\" title=\"Turn on to edit others' strokes.\">\n            <QuestionCircleOutlined />\n          </Tooltip>\n        </span>\n        <Switch\n          size=\"small\"\n          checked={globalEraser}\n          onChange={(v) => updateDrawCtrl({ globalEraser: v })}\n        />\n      </div>\n    </TeamInfoMenu>\n  );\n};\n\nconst RoomInfo: FC = () => {\n  const { userRec, connected, loadInfo, loadState, resetIO } =\n    useContext(TeamCtx);\n\n  const userList = useMemo(() => {\n    const selfID = getUserID();\n    const { [selfID]: selfInfo, ...otherUsers } = userRec;\n    if (!selfInfo) return [];\n    const values = Object.values(otherUsers);\n    return [selfInfo, ...sortBy(values, \"online\").reverse()];\n  }, [userRec]);\n\n  const onlineNum = useMemo(\n    () => userList.filter(({ online }) => online).length,\n    [userList]\n  );\n\n  const teamPop = (\n    <div className=\"team-popover\">\n      {connected || (\n        <Alert\n          className=\"disconn-alert\"\n          message=\"Network failed.\"\n          icon={<DisconnectOutlined />}\n          type=\"error\"\n          showIcon\n          banner\n        />\n      )}\n      <ShareMenu />\n      <CollaborateMenu />\n      <TeamInfoMenu icon={<TeamOutlined />} title=\"Members\">\n        <div className=\"user-list\">\n          {userList.map((u) => (\n            <UserCard key={u.userID} userInfo={u} />\n          ))}\n        </div>\n      </TeamInfoMenu>\n    </div>\n  );\n\n  const [reloading, setReloading] = useState(false);\n  const title = (\n    <div className=\"team-title\">\n      <span>Team info</span>\n      <Button\n        shape=\"circle\"\n        type=\"text\"\n        size=\"small\"\n        loading={reloading}\n        icon={<ReloadOutlined />}\n        onClick={async () => {\n          setReloading(true);\n          await loadInfo();\n          await loadState();\n          setReloading(false);\n          resetIO();\n        }}\n      />\n    </div>\n  );\n\n  return (\n    <Popover\n      content={teamPop}\n      trigger=\"click\"\n      placement=\"bottomRight\"\n      title={title}\n      getPopupContainer={(e) => e.parentElement!}\n      destroyTooltipOnHide\n    >\n      <Button\n        type=\"text\"\n        icon={\n          <Badge\n            status={connected ? \"success\" : \"error\"}\n            count={connected ? onlineNum : \"!\"}\n            size=\"small\"\n          >\n            <TeamOutlined />\n          </Badge>\n        }\n      />\n    </Popover>\n  );\n};\n\nconst JoinRoom: FC<{\n  instantSave: () => Promise<void> | undefined;\n}> = ({ instantSave }) => {\n  const noteID = useParams().noteID ?? \"\";\n  const nav = useNavigate();\n\n  const createRoom = async () => {\n    await instantSave();\n    const res = await putNote(noteID);\n    if (!res) return message.error(\"Can't create room.\");\n    await editNoteData(noteID, { team: true });\n    nav(\"/team/\" + noteID);\n  };\n\n  const content = (\n    <div className=\"share-modal-content\">\n      <Alert\n        className=\"share-alert\"\n        type=\"warning\"\n        message=\"This will make your note public.\"\n      />\n      <p className=\"share-list-item\">\n        <span className=\"user-info\">\n          <GlobalOutlined />\n          Anyone with the link\n        </span>\n        <Select\n          defaultValue=\"EDIT\"\n          options={[{ value: \"EDIT\", label: \"Edit\" }]}\n        />\n      </p>\n      <p className=\"share-list-item\">\n        <span className=\"user-info\">\n          <UserOutlined />\n          {getUserName()} (You)\n        </span>\n        <span>Owner</span>\n      </p>\n    </div>\n  );\n\n  const showModal = () => {\n    Modal.confirm({\n      title: \"Enable team editing\",\n      content,\n      icon: <TeamOutlined style={{ color: \"#555\" }} />,\n      onOk: createRoom,\n    });\n  };\n\n  return (\n    <Button type=\"text\" icon={<UsergroupAddOutlined />} onClick={showModal} />\n  );\n};\n","import { FC } from \"react\";\nimport { HeaderLeft } from \"./Left\";\nimport { HeaderMiddle } from \"./Middle\";\nimport { HeaderRight } from \"./Right\";\nimport \"./header.sass\";\n\nexport const Header: FC<{\n  saved: boolean;\n  handleUndo: () => void;\n  handleRedo: () => void;\n  undoable: boolean;\n  redoable: boolean;\n  instantSave: () => Promise<void> | undefined;\n}> = ({ saved, instantSave, ...undoProps }) => (\n  <header>\n    <HeaderLeft saved={saved} instantSave={instantSave} />\n    <HeaderMiddle {...undoProps} />\n    <HeaderRight instantSave={instantSave} />\n  </header>\n);\n","import { FC, useMemo, useState } from \"react\";\nimport { Input } from \"antd\";\nimport { NoteInfo } from \"lib/note/note\";\nimport dayjs from \"dayjs\";\nimport calender from \"dayjs/plugin/calendar\";\ndayjs.extend(calender);\n\nexport const InfoNav: FC<{\n  noteInfo: NoteInfo;\n  renameNote: (name: string) => void;\n}> = ({ noteInfo, renameNote }) => {\n  const [inputShow, setInputShow] = useState(false);\n  const [name, setName] = useState(noteInfo.name);\n\n  const [createDateShow, setCreateDateShow] = useState(false);\n  const { lastTime: lt, createTime: ct } = noteInfo;\n  const lastDate = useMemo(() => dayjs(lt).calendar(), [lt]);\n  const createDate = useMemo(() => dayjs(ct).calendar(), [ct]);\n\n  return (\n    <nav>\n      <div className=\"info\">\n        {inputShow ? (\n          <Input\n            className=\"title\"\n            size=\"large\"\n            bordered={false}\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            autoFocus\n            onBlur={() => {\n              renameNote(name);\n              setInputShow(false);\n            }}\n          />\n        ) : (\n          <p className=\"title\" onClick={() => setInputShow(true)}>\n            {name}\n          </p>\n        )}\n        <span className=\"time\" onClick={() => setCreateDateShow((p) => !p)}>\n          {createDateShow ? createDate : lastDate}\n          <span className=\"label\">\n            {createDateShow ? \"Created\" : \"Last Edited\"}\n          </span>\n        </span>\n      </div>\n    </nav>\n  );\n};\n","import { useHotkeys } from \"react-hotkeys-hook\";\n\nconst isMac = /Mac/i.test(navigator.userAgent);\n\nexport function useRedoUndo(onUndo: () => void, onRedo: () => void) {\n  const undoKey = isMac ? \"meta+z\" : \"ctrl+z\";\n  const redoKey = isMac ? \"meta+shift+z\" : \"ctrl+shift+z\";\n\n  useHotkeys(undoKey, (e) => {\n    e.preventDefault();\n    onUndo();\n  });\n\n  useHotkeys(redoKey, (e) => {\n    e.preventDefault();\n    onRedo();\n  });\n}\n","import {\n  FC,\n  useMemo,\n  useState,\n  useEffect,\n  useContext,\n  useCallback,\n} from \"react\";\nimport { NoteInfo, NotePage, createPage, defaultNotePage } from \"lib/note/note\";\nimport { DrawCtrlProvider, useDrawCtrl } from \"lib/draw/DrawCtrl\";\nimport { NewPageInfo, pushAck, ReorderInfo } from \"lib/network/io\";\nimport { DarkModeProvider } from \"lib/Dark\";\nimport { useMemoizedFn as useEvent } from \"ahooks\";\nimport { SetOperation, StateSet } from \"lib/draw/StateSet\";\nimport { loadNote, editNoteData } from \"lib/note/archive\";\nimport { showPageDelMsg, showReopenMsg } from \"./tools/Messages\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport PageWrapper from \"component/PageWrapper\";\nimport { DrawState } from \"draft-pad/dist/lib\";\nimport { useScrollPage } from \"./lib/scroll\";\nimport { debounce, last } from \"lodash\";\nimport { insertAfter } from \"./lib/array\";\nimport { PageNav } from \"./PageNav\";\nimport { AsideOpenProvider, Setter } from \"lib/hooks\";\nimport { AddPageButton } from \"./tools/AddButton\";\nimport { Header } from \"./Header\";\nimport { TeamCtx } from \"./Team\";\nimport { Map } from \"immutable\";\nimport { message } from \"antd\";\nimport { InfoNav } from \"./Info\";\nimport { useRedoUndo } from \"lib/keyboard\";\nimport \"./reader.sass\";\n\nexport interface ReaderStates {\n  noteID: string;\n  currPageID: string;\n  stateSet: StateSet;\n  pageRec: Map<string, NotePage>;\n  pageOrder: string[];\n  size: number;\n}\n\nexport interface ReaderMethods {\n  scrollPage: (pageID: string) => void;\n  switchPageMarked: (pageID: string) => void;\n  addPage: (prevPageID: string, copy?: boolean) => void;\n  addFinalPage: () => void;\n  deletePage: (pageID: string) => void;\n  saveReorder: (order: string[], push: boolean) => Promise<void>;\n  setSize: Setter<number>;\n}\n\nexport default function Reader() {\n  return (\n    <AsideOpenProvider>\n      <DarkModeProvider>\n        <DrawCtrlProvider>\n          <ReaderContent />\n        </DrawCtrlProvider>\n      </DarkModeProvider>\n    </AsideOpenProvider>\n  );\n}\n\nconst ReaderContent: FC = () => {\n  const noteID = useParams().noteID ?? \"\";\n  const nav = useNavigate();\n\n  const [pageRec, setPageRec] = useState<Map<string, NotePage>>();\n  const [noteInfo, setNoteInfo] = useState<NoteInfo>();\n  const [stateSet, setStateSet] = useState<StateSet>();\n  const [pageOrder, setPageOrder] = useState<string[]>();\n  const [saved, setSaved] = useState(true);\n\n  const { io, addTeamStatePage, checkOpID } = useContext(TeamCtx);\n\n  useEffect(() => {\n    (async () => {\n      const storedNote = await loadNote(noteID);\n      if (!storedNote) {\n        message.error(\"Note not found\");\n        return nav(\"/\");\n      }\n      const { pageRec, pdf, pageOrder, ...noteInfo } = storedNote;\n      setPageRec(Map(pageRec));\n      setPageOrder(pageOrder);\n      setNoteInfo(noteInfo);\n      setStateSet(StateSet.createFromPages(pageRec));\n    })();\n  }, [nav, noteID]);\n\n  useEffect(() => {\n    if (!noteInfo) return;\n    document.title = noteInfo.name + \" - Multibility\";\n  }, [noteInfo]);\n\n  useEffect(() => {\n    document.body.classList.add(\"reader\");\n    return () => document.body.classList.remove(\"reader\");\n  }, []);\n\n  const saver = useEvent(async (withState = false) => {\n    let currPageRec = pageRec;\n    if (withState) {\n      stateSet?.getStates().forEach((ds, pageID) => {\n        currPageRec = currPageRec?.update(pageID, defaultNotePage, (page) => ({\n          ...page,\n          state: DrawState.flaten(ds),\n        }));\n      });\n      setPageRec(currPageRec);\n    }\n    const pr = currPageRec?.toObject();\n    await editNoteData(noteID, { pageRec: pr });\n    setSaved(true);\n  });\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debouncedSave = useCallback(debounce(saver, 5000), [saver]);\n  const instantSave = debouncedSave.flush;\n\n  const savePageRec = (pageID: string, cb: (prev: NotePage) => NotePage) => {\n    setPageRec((prev) => prev?.update(pageID, defaultNotePage, cb));\n    setSaved(false);\n    debouncedSave();\n  };\n\n  const saveReorder = async (pageOrder: string[], push = false) => {\n    setPageOrder(pageOrder);\n    await editNoteData(noteID, { pageOrder });\n    await instantSave();\n    push && pushReorder(pageOrder);\n  };\n\n  const pushReorder = (pageOrder: string[]) =>\n    io?.emit(\"reorder\", { pageOrder });\n\n  const handleReorder = useEvent(\n    ({ deleted, pageOrder, prevOrder }: ReorderInfo) => {\n      saveReorder(pageOrder);\n      if (!deleted) return;\n      showPageDelMsg(() => saveReorder(prevOrder, true));\n    }\n  );\n\n  const handleNewPage = useEvent(\n    ({ pageOrder, pageID, newPage }: NewPageInfo) => {\n      saveReorder(pageOrder);\n      savePageRec(pageID, () => newPage);\n      setStateSet((prev) => prev?.addState(pageID, newPage));\n    }\n  );\n\n  useEffect(() => {\n    io?.on(\"reorder\", handleReorder);\n    io?.on(\"newPage\", handleNewPage);\n    return () => void io?.removeAllListeners();\n  }, [io, handleReorder, handleNewPage]);\n\n  const pushOperation = (operation: SetOperation) => {\n    const handleSync = (t: number) => {\n      if (operation.type !== \"add\") return;\n      const { pageID, stroke } = operation;\n      const { uid } = stroke;\n      setStateSet((prev) => prev?.syncStrokeTime(pageID, uid, t));\n    };\n\n    io?.emit(\n      \"push\",\n      { operation },\n      ({ timestamp, prevID, currID }: pushAck) => {\n        handleSync(timestamp);\n        checkOpID(prevID, currID);\n      }\n    );\n  };\n\n  const pushNewPage = (\n    pageOrder: string[],\n    pageID: string,\n    newPage: NotePage\n  ) => {\n    const { image, marked, ...newTeamPage } = newPage;\n    io?.emit(\"newPage\", { pageOrder, pageID, newPage: newTeamPage });\n    addTeamStatePage(pageID, newPage);\n  };\n\n  const updateStateSet = (cb: (prevSS: StateSet) => StateSet) => {\n    if (!stateSet) return;\n    const newSS = cb(stateSet);\n    if (newSS === stateSet) return;\n    setStateSet(newSS);\n    setSaved(false);\n    debouncedSave(true);\n    const lastOp = newSS.lastOp;\n    lastOp && pushOperation(lastOp);\n  };\n\n  const switchPageMarked = (pageID: string) =>\n    savePageRec(pageID, (prev) => ({ ...prev, marked: !prev.marked }));\n\n  const addPage = (prevPageID: string, copy = false) => {\n    if (!pageOrder) return;\n    const prevPage = copy ? pageRec?.get(prevPageID) : undefined;\n    const [pageID, newPage] = createPage(prevPage);\n    const newOrder = insertAfter(pageOrder, prevPageID, pageID);\n    pushNewPage(newOrder, pageID, newPage);\n    saveReorder(newOrder);\n    savePageRec(pageID, () => newPage);\n    setStateSet((prev) => prev?.addState(pageID, newPage));\n  };\n\n  const addFinalPage = () => {\n    const lastPageID = last(pageOrder);\n    lastPageID && addPage(lastPageID);\n  };\n\n  const deletePage = (pageID: string) => {\n    const newOrder = pageOrder?.filter((id) => id !== pageID);\n    newOrder?.length && saveReorder(newOrder, true);\n  };\n\n  const [size, setSize] = useState(100);\n  const isFull = size === 100;\n  const pd = (100 - size) / 2 + \"%\";\n  const mainStyle = { paddingLeft: pd, paddingRight: pd };\n\n  const { setInviewRatios, scrollPage, sectionRef, currPageID, scrolling } =\n    useScrollPage(noteID, pageOrder, [size]);\n\n  const { finger } = useDrawCtrl();\n\n  useEffect(() => {\n    if (!window.BroadcastChannel) return;\n    const bc = new BroadcastChannel(\"open note\");\n    bc.postMessage(noteID);\n    bc.onmessage = (e) => {\n      if (e.data !== noteID) return;\n      debouncedSave.cancel();\n      showReopenMsg(() => nav(\"/\"));\n    };\n    return () => bc.close();\n  }, [nav, noteID, debouncedSave]);\n\n  useEffect(() => {\n    const handleUnload = (e: BeforeUnloadEvent) => {\n      if (saved) return;\n      e.preventDefault();\n      return (e.returnValue = \"\");\n    };\n    window.addEventListener(\"beforeunload\", handleUnload);\n    return () => window.removeEventListener(\"beforeunload\", handleUnload);\n  }, [saved]);\n\n  const renameNote = async (name: string) => {\n    if (name === noteInfo?.name) return;\n    await editNoteData(noteID, { name });\n    const storedNote = await loadNote(noteID);\n    if (!storedNote) return;\n    const { pageRec, pdf, pageOrder, ...info } = storedNote;\n    setNoteInfo(info);\n  };\n\n  const handleUndo = () => updateStateSet((prev) => prev.undo());\n  const handleRedo = () => updateStateSet((prev) => prev.redo());\n  useRedoUndo(handleUndo, handleRedo);\n\n  if (!stateSet || !pageOrder || !pageRec || !noteInfo) return null;\n  const readerStates: ReaderStates = {\n    noteID,\n    pageRec,\n    pageOrder,\n    stateSet,\n    currPageID,\n    size,\n  };\n  const readerMethods: ReaderMethods = {\n    scrollPage,\n    switchPageMarked,\n    addFinalPage,\n    addPage,\n    deletePage,\n    saveReorder,\n    setSize,\n  };\n\n  return (\n    <div className=\"reader container\">\n      <Header\n        saved={saved}\n        instantSave={instantSave}\n        handleUndo={handleUndo}\n        handleRedo={handleRedo}\n        undoable={stateSet.isUndoable()}\n        redoable={stateSet.isRedoable()}\n      />\n      <InfoNav noteInfo={noteInfo} renameNote={renameNote} />\n      <main data-finger={finger} data-full={isFull} style={mainStyle}>\n        {pageOrder.map((uid) => (\n          <section key={uid} className=\"note-page\" ref={sectionRef(uid)}>\n            <PageContainer\n              uid={uid}\n              updateStateSet={updateStateSet}\n              setInviewRatios={setInviewRatios}\n              scrolling={scrolling}\n              {...readerStates}\n            />\n          </section>\n        ))}\n        <footer>\n          <AddPageButton addFinalPage={addFinalPage} />\n        </footer>\n      </main>\n      <PageNav {...readerStates} {...readerMethods} />\n    </div>\n  );\n};\n\nconst PageContainer: FC<\n  {\n    uid: string;\n    updateStateSet: (cb: (prevSS: StateSet) => StateSet) => void;\n    setInviewRatios: Setter<Map<string, number>>;\n    scrolling: boolean;\n  } & ReaderStates\n> = ({\n  uid,\n  updateStateSet,\n  setInviewRatios,\n  scrolling,\n  pageRec,\n  stateSet,\n  currPageID,\n  pageOrder,\n  noteID,\n}) => {\n  const { teamState, ignores } = useContext(TeamCtx);\n\n  const page = pageRec.get(uid);\n  const drawState = stateSet.getOneState(uid);\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\n  const updateState = useEvent((ds: DrawState) => {\n    updateStateSet((prev) => prev.setState(uid, ds));\n  });\n\n  const onViewChange = useEvent((ratio: number) => {\n    if (!ratio) return setInviewRatios((prev) => prev.delete(uid));\n    setInviewRatios((prev) => prev.set(uid, ratio));\n  });\n\n  const preload = useMemo(() => {\n    if (!pageOrder) return false;\n    const currIndex = pageOrder.indexOf(currPageID);\n    const selfIndex = pageOrder.indexOf(uid);\n    return Math.abs(selfIndex - currIndex) <= 1;\n  }, [currPageID, uid, pageOrder]);\n\n  if (!page || !drawState) return null;\n  return (\n    <PageWrapper\n      drawState={drawState}\n      teamStateMap={teamStateMap}\n      updateState={updateState}\n      pdfIndex={page.pdfIndex}\n      noteID={noteID}\n      ignores={ignores}\n      onViewChange={onViewChange}\n      preload={preload}\n      skipInView={scrolling}\n    />\n  );\n};\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { useMemoizedFn as useEvent } from \"ahooks\";\nimport {\n  getTeamNoteState,\n  loadTeamNoteInfo,\n  updatePages,\n} from \"lib/network/http\";\nimport { IoFactory, NewPageInfo } from \"lib/network/io\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { showJoinMsg, showLeaveMsg } from \"./tools/Messages\";\nimport { TeamState } from \"lib/draw/TeamState\";\nimport { getUserID, UserInfo } from \"lib/user\";\nimport { NotePage } from \"lib/note/note\";\nimport { Socket } from \"socket.io-client\";\nimport { Setter } from \"lib/hooks\";\nimport { Loading } from \"component/Loading\";\nimport { message } from \"antd\";\nimport { Set } from \"immutable\";\nimport Reader from \"./Reader\";\nimport { DebouncedFunc, throttle } from \"lodash\";\nimport bytes from \"bytes\";\n\nexport const TeamCtx = React.createContext({\n  io: undefined as Socket | undefined,\n  code: 0,\n  teamOn: false,\n  connected: false,\n  ignores: Set<string>(),\n  userRec: {} as Record<string, UserInfo>,\n  teamState: undefined as TeamState | undefined,\n  resetIO: () => {},\n  loadInfo: async () => false,\n  loadState: (() => {}) as DebouncedFunc<() => Promise<boolean>>,\n  setIgnores: (() => {}) as Setter<Set<string>>,\n  addTeamStatePage: (pageID: string, newPage: NotePage) => {},\n  checkOpID: (prevID: string, currID: string) => {},\n});\n\nexport default function Team() {\n  const noteID = useParams().noteID ?? \"\";\n  const [teamState, setTeamState] = useState<TeamState>();\n  const [code, setCode] = useState(-2);\n  const [userRec, setUserRec] = useState<Record<string, UserInfo>>({});\n  const [ignores, setIgnores] = useState(Set<string>());\n  const [io, setIO] = useState<Socket>();\n  const [loaded, setLoaded] = useState(false);\n  const [connected, setConnected] = useState(false);\n  const nav = useNavigate();\n  const [loadingText, setLoadingText] = useState(\"\");\n\n  const loadInfo = useEvent(async () => {\n    setLoadingText(\"Loading note info...\");\n    const info = await loadTeamNoteInfo(noteID, (len) => {\n      setLoadingText(\"Downloading PDF: \" + bytes(len));\n    });\n    if (!info) {\n      message.error(\"Failed loading the team note info\");\n      return false;\n    }\n    setCode(info.code);\n    return true;\n  });\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const loadState = useCallback(\n    throttle(async (cb?: (len: number) => void) => {\n      setLoadingText(\"Loading team note...\");\n      const teamNote = await getTeamNoteState(noteID, (len) => {\n        if (len < 1024) return;\n        setLoadingText(\"Loading team note: \" + bytes(len));\n        cb?.(len);\n      });\n      if (!teamNote) {\n        message.error(\"Failed loading the team note state\");\n        return false;\n      }\n      setTeamState(TeamState.createFromTeamPages(teamNote));\n      return true;\n    }, 10_000),\n    [noteID]\n  );\n  const reloadState = () => {\n    const key = \"SYNC\";\n    const hide = message.loading({ content: \"Syncing...\", key });\n    loadState((len) => {\n      const content = \"Syncing: \" + bytes(len);\n      message.loading({ content, key, duration: 0 });\n    })?.then(hide);\n  };\n\n  const resetIO = useEvent(() => setIO(IoFactory(noteID)));\n  const updateSelfState = useEvent(() => void updatePages(noteID));\n\n  const opID = useRef(\"\");\n  const checkOpID = useEvent((prevID: string, currID: string) => {\n    const lost = prevID && opID.current && prevID !== opID.current;\n    opID.current = currID;\n    if (lost) reloadState();\n  });\n  const resetOpID = useEvent((currID: string) => {\n    const lost = opID.current && opID.current !== currID;\n    opID.current = currID;\n    if (lost) reloadState();\n  });\n\n  useEffect(() => {\n    const roomInit = async () => {\n      const infoLoaded = await loadInfo();\n      const stateLoaded = await loadState();\n      if (!infoLoaded || !stateLoaded) return nav(\"/\");\n      setLoaded(true);\n      resetIO();\n      updateSelfState();\n    };\n    roomInit();\n    return updateSelfState;\n  }, [loadInfo, loadState, nav, resetIO, updateSelfState]);\n\n  useEffect(() => {\n    if (!io) return;\n    io.on(\"push\", ({ operation, userID, prevID, currID }) => {\n      setTeamState((prev) => prev?.pushOperation(operation, userID));\n      checkOpID(prevID, currID);\n    });\n\n    io.on(\"join\", ({ joined, members }) => {\n      const { userID, userName } = joined;\n      setUserRec(members);\n      if (userID === getUserID()) return;\n      showJoinMsg(userID, userName);\n    });\n\n    io.on(\"leave\", ({ leaved, members }) => {\n      const { userID, userName } = leaved;\n      setUserRec(members);\n      if (userID === getUserID()) return io.emit(\"join\");\n      showLeaveMsg(userID, userName);\n    });\n\n    io.on(\"newPage\", (info: NewPageInfo) => {\n      const { pageID, newPage } = info;\n      setTeamState((prev) => prev?.addPage(pageID, newPage));\n    });\n\n    io.on(\"reset\", ({ userID, pageRec }) => {\n      if (userID === getUserID()) return;\n      setTeamState((prev) => prev?.resetUser(userID, pageRec));\n    });\n\n    io.on(\"connect_error\", console.error);\n    io.on(\"disconnect\", () => setConnected(false));\n    io.on(\"connect\", () => setConnected(true));\n    io.on(\"connected\", ({ currID }) => resetOpID(currID));\n\n    return () => {\n      io.removeAllListeners();\n      io.close();\n    };\n  }, [io, checkOpID, resetOpID]);\n\n  const addTeamStatePage = (pageID: string, newPage: NotePage) => {\n    setTeamState((prev) => prev?.addPage(pageID, newPage));\n  };\n\n  return (\n    <Loading loading={!loaded} text={loadingText}>\n      <TeamCtx.Provider\n        value={{\n          io,\n          code,\n          teamOn: true,\n          ignores,\n          userRec,\n          connected,\n          teamState,\n          resetIO,\n          loadInfo,\n          loadState,\n          setIgnores,\n          addTeamStatePage,\n          checkOpID,\n        }}\n      >\n        <Reader />\n      </TeamCtx.Provider>\n    </Loading>\n  );\n}\n","import { io } from \"socket.io-client\";\nimport { NotePage } from \"lib/note/note\";\nimport { getUserID, getUserName } from \"lib/user\";\nimport { BASE_URL } from \"./http\";\n\nexport const IoFactory = (noteID: string) =>\n  io(BASE_URL, {\n    query: {\n      userID: getUserID(),\n      userName: getUserName(),\n      noteID,\n    },\n  });\n\nexport interface ReorderInfo {\n  pageOrder: string[];\n  prevOrder: string[];\n  deleted: boolean;\n}\n\nexport interface NewPageInfo {\n  pageOrder: string[];\n  pageID: string;\n  newPage: NotePage;\n}\n\nexport interface pushAck {\n  timestamp: number;\n  prevID: string;\n  currID: string;\n}\n","import { Button, message, Modal } from \"antd\";\nimport { LoginOutlined, LogoutOutlined, HomeFilled } from \"@ant-design/icons\";\n\nexport const showPageDelMsg = (onUndo: () => void) => {\n  message.warning({\n    content: (\n      <>\n        One page was deleted.\n        <Button\n          size=\"small\"\n          type=\"link\"\n          onClick={() => {\n            message.destroy(\"DELETE\");\n            onUndo();\n          }}\n        >\n          Undo\n        </Button>\n      </>\n    ),\n    key: \"DELETE\",\n    duration: 10,\n  });\n};\n\nexport const showJoinMsg = (userID: string, userName: string) => {\n  message.success({\n    content: `${userName} joined the room`,\n    icon: <LoginOutlined />,\n    key: userID,\n  });\n};\n\nexport const showLeaveMsg = (userID: string, userName: string) => {\n  message.warning({\n    content: `${userName} left the room`,\n    icon: <LogoutOutlined />,\n    key: userID,\n  });\n};\n\nexport const showReopenMsg = (onOk: () => void) => {\n  Modal.error({\n    title: \"This note is opened in another tab.\",\n    okText: \"Back\",\n    okButtonProps: { icon: <HomeFilled /> },\n    onOk,\n  });\n};\n"],"names":["defaultRecord","states","Map","editStack","List","undoStack","defaultFactory","Record","StateSet","immutable","lastOp","this","getImmutable","get","pageID","getStates","drawState","prevDS","getOneState","currRecord","update","s","set","l","push","delete","uid","timestamp","DrawState","notePage","state","ratio","newDS","WIDTH","getEditStack","size","getUndoStack","isUndoable","lastUid","last","lastSetOp","pop","isRedoable","pageRec","map","scrollForage","localforage","name","persistScroll","debounce","noteID","currPageID","setItem","largestKey","order","result","maxRatio","key","insertAfter","list","prevItem","newItem","prevIndex","indexOf","curr","slice","splice","UserAvatar","userInfo","onClick","chosen","className","color","useMemo","getHashedColor","userID","userName","style","backgroundColor","AddPageButton","addFinalPage","type","icon","PlusOutlined","block","PageNav","props","useState","left","setLeft","useAsideOpen","asideOpen","opposite","draggableId","index","isDragDisabled","innerRef","ref","CSSTransition","in","timeout","unmountOnExit","initKey","onDragEnd","destination","droppableId","direction","droppableProps","placeholder","isDraggingOver","PreviewCard","useActiveKey","activeKey","setAsideOpen","title","ALL","MARKED","WRITTEN","useSwipeable","onSwipedLeft","onSwipedRight","swipeDuration","swipeRef","swipeHandler","draggableProps","dragHandleProps","isDragging","isDropAnimating","e","PreviewTabs","PageList","cardDragged","PreviewFooter","React","refRec","useRef","pageOrder","saveReorder","initScroll","useEvent","current","scrollIntoView","useLayoutEffect","source","fromIndex","toIndex","newOrder","removed","exchange","isDropDisabled","PagePreview","pageIndex","displayName","stateSet","scrollPage","useContext","TeamCtx","teamState","ignores","setChosen","page","teamStateMap","getOnePageStateMap","marked","userIDs","TeamState","isEmpty","PageWrapper","undefined","thumbnail","image","preview","skipInView","PreviewTools","switchPageMarked","stopPropagation","PreviewOption","TeamAvatars","userRec","maxCount","classNames","maxPopoverPlacement","prev","addPage","deletePage","menu","items","label","CopyOutlined","DeleteOutlined","danger","content","trigger","placement","destroyTooltipOnHide","getPopupContainer","parentElement","MoreOutlined","setActiveKey","onChange","tabBarGutter","centered","IconFont","setSize","jumpMenu","pageSize","total","length","simple","FooterOptions","popupClassName","bordered","showArrow","dropdownMatchSelectWidth","options","value","finger","useDrawCtrl","updateDrawCtrl","useUpdateDrawCtrl","useForceLight","forceLight","setForceLight","isLight","useMediaQuery","query","checked","v","disabled","shape","CaretUpOutlined","opacity","HeaderLeft","saved","instantSave","nav","useNavigate","HomeFilled","SaveOutlined","btnProps","HeaderMiddle","handleUndo","handleRedo","undoable","redoable","UndoOutlined","RedoOutlined","PenButton","EraserButton","SelectButton","AddButton","drawCtrl","mode","PenPanel","HighlightTwoTone","twoToneColor","HighlightOutlined","pixelEraser","pixelSeg","field","lasso","GatewayOutlined","imageSrc","getButton","modeName","buttons","text","picture","PictureOutlined","rect","BorderOutlined","showImage","setShowImage","optionPanels","target","prefix","LinkOutlined","allowClear","src","alt","onLoad","onError","Object","values","test","PlusCircleOutlined","HeaderRight","teamOn","RoomInfo","JoinRoom","PageNavButton","UserCard","renaming","setRenaming","setIgnores","resetIO","useEffect","online","self","getUserID","ignored","has","Search","autoFocus","defaultValue","onSearch","trim","saveUserName","enterButton","CheckOutlined","FormOutlined","EyeInvisibleOutlined","EyeOutlined","add","ShareButton","copied","setCopied","link","window","location","href","share","copy","document","console","log","CheckCircleFilled","TeamInfoMenu","children","ShareMenu","code","ShareAltOutlined","String","plain","CollaborateMenu","globalEraser","BranchesOutlined","QuestionCircleOutlined","connected","loadInfo","loadState","userList","selfID","selfInfo","otherUsers","sortBy","reverse","onlineNum","filter","teamPop","message","DisconnectOutlined","showIcon","banner","TeamOutlined","u","reloading","setReloading","loading","ReloadOutlined","status","count","useParams","createRoom","putNote","editNoteData","team","GlobalOutlined","UserOutlined","getUserName","UsergroupAddOutlined","Modal","onOk","Header","undoProps","dayjs","calender","InfoNav","noteInfo","renameNote","inputShow","setInputShow","setName","createDateShow","setCreateDateShow","lt","lastTime","ct","createTime","lastDate","calendar","createDate","onBlur","p","isMac","navigator","userAgent","Reader","Dark","DrawCtrl","ReaderContent","setPageRec","setNoteInfo","setStateSet","setPageOrder","setSaved","io","addTeamStatePage","checkOpID","loadNote","storedNote","pdf","createFromPages","body","classList","remove","saver","withState","currPageRec","forEach","ds","defaultNotePage","pr","toObject","debouncedSave","useCallback","flush","savePageRec","cb","pushReorder","emit","handleReorder","deleted","prevOrder","showPageDelMsg","handleNewPage","newPage","addState","on","removeAllListeners","pushOperation","operation","prevID","currID","t","stroke","syncStrokeTime","handleSync","pushNewPage","newTeamPage","updateStateSet","newSS","prevPageID","prevPage","createPage","lastPageID","isFull","pd","mainStyle","paddingLeft","paddingRight","deps","refMap","setRefMap","scrolled","setPrevPageID","getItem","stored","section","inviewRatios","setInviewRatios","deferredRatios","useDeferredValue","deferredOrder","calcScrollY","header","firstElementChild","getBoundingClientRect","top","height","scrollY","scrollToCurr","scrollBy","sectionRef","el","taskID","scrolling","setScrolling","addEventListener","handleScroll","clearTimeout","setTimeout","removeEventListener","behavior","useDebugValue","useScrollPage","BroadcastChannel","bc","postMessage","onmessage","data","cancel","showReopenMsg","close","handleUnload","preventDefault","returnValue","info","undo","redo","onUndo","onRedo","undoKey","redoKey","useHotkeys","useRedoUndo","readerStates","readerMethods","id","PageContainer","updateState","setState","onViewChange","preload","currIndex","selfIndex","Math","abs","pdfIndex","Set","Team","setTeamState","setCode","setUserRec","setIO","loaded","setLoaded","setConnected","loadingText","setLoadingText","loadTeamNoteInfo","len","bytes","throttle","getTeamNoteState","teamNote","reloadState","hide","duration","then","BASE_URL","IoFactory","updateSelfState","updatePages","opID","lost","resetOpID","roomInit","infoLoaded","stateLoaded","joined","members","showJoinMsg","leaved","showLeaveMsg","resetUser","error","Loading","Provider","okText","okButtonProps"],"sourceRoot":""}