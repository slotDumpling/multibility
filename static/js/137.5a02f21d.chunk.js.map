{"version":3,"file":"static/js/137.5a02f21d.chunk.js","mappings":"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","sources":["lib/note/imgCache.ts","component/SwipeDelete/SwipeDelete.tsx","pages/menu/Aside/SideMenu.tsx","pages/menu/Header/Others.tsx","pages/menu/Header/Nav.tsx","pages/menu/Header/ListTools.tsx","pages/menu/NoteList/NoteList.tsx","lib/note/intro.ts","pages/menu/Menu.tsx"],"sourcesContent":["import localforage from \"localforage\";\n\nconst IMAGE_CACHE_MAX = 10;\nconst imageForage = localforage.createInstance({ name: \"imageForage\" });\nexport const getImageCache = async (noteID: string, index: number) => {\n  let cacheList = (await imageForage.getItem<string[]>(\"LIST\")) ?? [];\n  const key = `${noteID}_${index}`;\n  if (!cacheList.includes(key)) return;\n  cacheList = [key, ...cacheList.filter((id) => id !== key)];\n  await imageForage.setItem(\"LIST\", cacheList);\n  return await imageForage.getItem<string>(key);\n};\n\nexport const setImageCache = async (noteID: string, index: number, data: string) => {\n  let cacheList = (await imageForage.getItem<string[]>(\"LIST\")) ?? [];\n  const key = `${noteID}_${index}`;\n  cacheList = [key, ...cacheList.filter((id) => id !== key)];\n  if (cacheList.length > IMAGE_CACHE_MAX) {\n    cacheList = cacheList.slice(0, IMAGE_CACHE_MAX);\n  }\n  await imageForage.setItem(\"LIST\", cacheList);\n  await imageForage.setItem(key, data);\n  removeUnusedCache();\n};\n\nconst removeUnusedCache = async () => {\n  const cacheList = (await imageForage.getItem<string[]>(\"LIST\")) ?? [];\n  const set = new Set(cacheList);\n  const allKeys = await imageForage.keys();\n  for (let key of allKeys) {\n    if (key === \"LIST\") continue;\n    if (!set.has(key)) await imageForage.removeItem(key);\n  }\n};\n\nexport const clearImageCache = () => imageForage.clear();\n","import {\n  FC,\n  useRef,\n  useState,\n  useEffect,\n  useContext,\n  createContext,\n  PropsWithChildren,\n} from \"react\";\nimport { Setter, useTransitionEnd } from \"lib/hooks\";\nimport { useSwipeable } from \"react-swipeable\";\nimport classNames from \"classnames\";\nimport { v4 as getUid } from \"uuid\";\n\nconst SwipeCtx = createContext<[string, Setter<string>]>([\"\", () => {}]);\n\nexport const SwipeDeleteProvider: FC<PropsWithChildren> = ({ children }) => {\n  const tuple = useState(\"\");\n  return <SwipeCtx.Provider value={tuple}>{children}</SwipeCtx.Provider>;\n};\n\nexport const SwipeDelete: FC<\n  PropsWithChildren<{\n    onDelete: () => void;\n    disable?: boolean;\n    className?: string;\n  }>\n> = ({ children, onDelete, disable = false, className, ...data }) => {\n  const [uid] = useState(getUid);\n\n  const [nowSwiped, setNowSwiped] = useContext(SwipeCtx);\n  const [swiped, setSwiped] = useState(false);\n  const deleting = swiped && (!nowSwiped || nowSwiped === uid);\n  const [deleted, setDeleted] = useState(false);\n\n  const [height, setHeight] = useState<number>();\n  const wrapper = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (nowSwiped !== uid) setSwiped(false);\n  }, [nowSwiped, uid]);\n\n  const showDelete = () => {\n    setSwiped(true);\n    setNowSwiped(uid);\n    setHeight(wrapper.current?.clientHeight);\n  };\n\n  const hideDelete = () => {\n    setSwiped(false);\n    setNowSwiped(\"\");\n    setHeight(undefined);\n  };\n\n  const swipeHandler = useSwipeable({\n    onSwipedLeft: showDelete,\n    onSwipedRight: hideDelete,\n    preventScrollOnSwipe: true,\n    trackTouch: !disable,\n  });\n\n  useEffect(() => {\n    if (!disable) return;\n    setHeight(undefined);\n    setNowSwiped(\"\");\n    setSwiped(false);\n  }, [disable, setNowSwiped]);\n\n  const [transDidEnd, handler] = useTransitionEnd({\n    propertyName: \"height\",\n    active: deleted,\n  });\n  const handleClick = async () => {\n    setDeleted(true);\n    await transDidEnd;\n    onDelete();\n    setNowSwiped(\"\");\n  };\n\n  return (\n    <div\n      className={classNames(\"swipe-wrapper\", className)}\n      data-deleted={deleted}\n      data-deleting={deleting}\n      {...swipeHandler}\n      style={{ height }}\n      onTransitionEnd={handler}\n      {...data}\n    >\n      <div className=\"content\" ref={wrapper}>\n        {children}\n      </div>\n      <div className=\"button\" onClick={handleClick} style={{ height }}>\n        Delete\n      </div>\n    </div>\n  );\n};\n","import { FC, useEffect, useState } from \"react\";\nimport {\n  MenuOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  GithubOutlined,\n  SettingOutlined,\n  ContainerOutlined,\n} from \"@ant-design/icons\";\nimport { Button, Input, Popconfirm, Select } from \"antd\";\nimport { deleteTag, editTag, NoteTag, addNewTag } from \"lib/note/archive\";\nimport { colors, getColorPalette, getRandomColor } from \"lib/color\";\nimport { Setter, useAsideOpen } from \"lib/hooks\";\nimport { SwipeDelete, SwipeDeleteProvider } from \"component/SwipeDelete\";\nimport { ColorCirle } from \"component/ColorCircle\";\nimport { MenuProps } from \"../Menu\";\nimport IconFont from \"component/IconFont\";\n\nconst TagInput: FC<{\n  tagName: string;\n  setTagName: Setter<string>;\n  tagColor: string;\n  setTagColor: Setter<string>;\n}> = ({ tagName, setTagName, tagColor, setTagColor }) => {\n  const colorSelector = (\n    <Select\n      value={tagColor}\n      onSelect={setTagColor}\n      listHeight={150}\n      virtual={false}\n      dropdownClassName=\"tag-color-drop\"\n    >\n      {colors.map((c) => (\n        <Select.Option value={c} key={c}>\n          <ColorCirle className=\"tag-circle\" color={c} />\n        </Select.Option>\n      ))}\n    </Select>\n  );\n\n  return (\n    <Input\n      placeholder=\"Tag name...\"\n      className=\"tag-name-input\"\n      addonBefore={colorSelector}\n      value={tagName}\n      onChange={(e) => setTagName(e.target.value)}\n    />\n  );\n};\n\nconst TagItem: FC<{ noteTag: NoteTag } & MenuProps> = ({\n  noteTag,\n  currTagID,\n  setAllTags,\n  setCurrTagID,\n}) => {\n  const { uid, color, name, notes } = noteTag;\n  const [tagName, setTagName] = useState(name);\n  const [tagColor, setTagColor] = useState(color);\n  const [tagEditing, setTagEditing] = useState(false);\n  const curr = currTagID === uid;\n  useEffect(() => setTagEditing(false), [curr]);\n\n  async function removeTag() {\n    const tags = await deleteTag(uid);\n    setCurrTagID(\"DEFAULT\");\n    setAllTags(tags);\n  }\n\n  const cancelEditing = () => {\n    setTagName(name);\n    setTagColor(color);\n    setTagEditing(false);\n  };\n\n  const finishEditing = async () => {\n    const newTag: NoteTag = {\n      ...noteTag,\n      name: tagName,\n      color: tagColor,\n    };\n\n    const newAllTags = await editTag(newTag);\n    setAllTags(newAllTags);\n    setTagEditing(false);\n  };\n\n  const displayPanel = (\n    <>\n      <ColorCirle className=\"tag-circle\" color={tagColor} />\n      <span className=\"tag-name\">{tagName}</span>\n      {curr ? (\n        <Button\n          size=\"small\"\n          type=\"text\"\n          onClick={() => setTagEditing(true)}\n          icon={<SettingOutlined />}\n        />\n      ) : (\n        <span className=\"tag-num\">{notes.length}</span>\n      )}\n    </>\n  );\n\n  const editingPanel = (\n    <>\n      <TagInput\n        tagName={tagName}\n        setTagName={setTagName}\n        tagColor={tagColor}\n        setTagColor={setTagColor}\n      />\n      <div className=\"buttons\">\n        <Popconfirm\n          title=\"This tag will be deleted.\"\n          onConfirm={removeTag}\n          placement=\"left\"\n          cancelText=\"Cancel\"\n          icon={<DeleteOutlined />}\n          okText=\"Delete\"\n          okType=\"danger\"\n          okButtonProps={{ type: \"primary\" }}\n        >\n          <Button danger>Delete</Button>\n        </Popconfirm>\n        <Button onClick={cancelEditing}>Cancel</Button>\n        <Button type=\"primary\" disabled={!tagName} onClick={finishEditing}>\n          OK\n        </Button>\n      </div>\n    </>\n  );\n\n  return (\n    <SwipeDelete\n      className=\"tag-wrapper\"\n      onDelete={removeTag}\n      disable={tagEditing}\n    >\n      <div\n        className=\"tag-item\"\n        data-curr={curr}\n        data-editing={tagEditing}\n        onClick={() => setCurrTagID(uid)}\n        style={getColorPalette(color)}\n      >\n        {tagEditing ? editingPanel : displayPanel}\n      </div>\n    </SwipeDelete>\n  );\n};\n\nconst NewTagItem: FC<{ setAdding: Setter<boolean> } & MenuProps> = ({\n  setAdding,\n  setAllTags,\n}) => {\n  const [tagName, setTagName] = useState(\"\");\n  const [tagColor, setTagColor] = useState(getRandomColor());\n\n  const addTag = () => {\n    const name = tagName.trim();\n    if (!name) return;\n    addNewTag(name, tagColor).then(setAllTags);\n    setAdding(false);\n  };\n\n  return (\n    <div className=\"tag-wrapper\">\n      <div className=\"tag-item\" data-editing>\n        <TagInput\n          tagName={tagName}\n          setTagName={setTagName}\n          tagColor={tagColor}\n          setTagColor={setTagColor}\n        />\n        <div className=\"buttons\">\n          <Button onClick={() => setAdding(false)}>Cancel</Button>\n          <Button type=\"primary\" disabled={!tagName} onClick={addTag}>\n            OK\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const SideMenu: FC<MenuProps> = (props) => {\n  const { allTags, currTagID, allNotes, setCurrTagID } = props;\n  const [adding, setAdding] = useState(false);\n  const [asideOpen, setAsideOpen] = useAsideOpen();\n\n  const allNoteTag = (\n    <div className=\"tag-wrapper\">\n      <div\n        className=\"tag-item\"\n        data-curr={currTagID === \"DEFAULT\"}\n        onClick={() => setCurrTagID(\"DEFAULT\")}\n      >\n        <ContainerOutlined className=\"all-note-icon\" />\n        <span className=\"tag-name\">All Notes</span>\n        <span className=\"tag-num\">{Object.keys(allNotes).length}</span>\n      </div>\n    </div>\n  );\n\n  const header = (\n    <header>\n      <Button\n        className=\"aside-btn\"\n        type=\"text\"\n        icon={<MenuOutlined />}\n        onClick={() => setAsideOpen(false)}\n      />\n      <h2 className=\"logo\">Multibility</h2>\n      <Button\n        className=\"new-tag-btn\"\n        type=\"text\"\n        icon={<PlusOutlined />}\n        onClick={() => setAdding(true)}\n        disabled={adding}\n      />\n    </header>\n  );\n\n  const footer = (\n    <footer>\n      <Button\n        icon={<GithubOutlined />}\n        href=\"https://github.com/slotDumpling/multibility\"\n        shape=\"round\"\n        size=\"small\"\n      >\n        GitHub\n      </Button>\n      <Button\n        icon={<IconFont type=\"icon-npm\" />}\n        href=\"https://www.npmjs.com/package/draft-pad\"\n        shape=\"round\"\n        size=\"small\"\n      >\n        draft-pad\n      </Button>\n    </footer>\n  );\n\n  return (\n    <aside data-open={asideOpen} onClick={() => setAsideOpen(false)}>\n      <div className=\"side-menu\" onClick={(e) => e.stopPropagation()}>\n        {header}\n        <div className=\"tag-list\">\n          {allNoteTag}\n          <SwipeDeleteProvider>\n            {Object.values(allTags).map((tag) => (\n              <TagItem key={tag.uid} noteTag={tag} {...props} />\n            ))}\n          </SwipeDeleteProvider>\n          {adding && <NewTagItem setAdding={setAdding} {...props} />}\n        </div>\n        {footer}\n      </div>\n    </aside>\n  );\n};\n","import React, { useState, FC, useEffect } from \"react\";\nimport {\n  Menu,\n  Input,\n  Button,\n  message,\n  Popover,\n  Progress,\n  Popconfirm,\n} from \"antd\";\nimport {\n  UserOutlined,\n  ClearOutlined,\n  InboxOutlined,\n  FilePdfOutlined,\n  SettingOutlined,\n  CaretDownOutlined,\n  ArrowLeftOutlined,\n} from \"@ant-design/icons\";\nimport { CSSTransitionProps } from \"react-transition-group/CSSTransition\";\nimport { ActiveKeyProvider, useActiveKey } from \"lib/hooks\";\nimport { getUserName, saveUserName } from \"lib/user\";\nimport { clearImageCache } from \"lib/note/imgCache\";\nimport { createNewNote } from \"lib/note/archive\";\nimport { CSSTransition } from \"react-transition-group\";\nimport localforage from \"localforage\";\nimport { MenuProps } from \"../Menu\";\nimport \"./others.sass\";\n\nconst SeconaryMenu: FC<\n  {\n    title: string;\n    keyName: string;\n  } & CSSTransitionProps\n> = ({ children, title, keyName, ...cssTransProps }) => {\n  const [active, setActive] = useActiveKey();\n  return (\n    <CSSTransition in={active === keyName} {...cssTransProps}>\n      <div className=\"secondary\">\n        <>\n          <nav>\n            <Button\n              type=\"text\"\n              shape=\"circle\"\n              onClick={() => setActive(\"MENU\")}\n              icon={<ArrowLeftOutlined />}\n            />\n            <h3>{title}</h3>\n          </nav>\n          {children}\n        </>\n      </div>\n    </CSSTransition>\n  );\n};\n\nconst UploadPdfPage: FC<MenuProps> = ({\n  currTagID,\n  setAllTags,\n  setAllNotes,\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [percent, setPercent] = useState(0);\n\n  async function handleFile(file: File) {\n    if (file.type !== \"application/pdf\") return;\n    setLoading(true);\n    const { LoadPDF } = await import(\"lib/note/pdfImage\");\n    const note = await LoadPDF(file, setPercent);\n    note.tagID = currTagID;\n    const { tags, allNotes } = await createNewNote(note);\n    setAllTags(tags);\n    setAllNotes(allNotes);\n    setLoading(false);\n    message.success(\"PDF Loaded\");\n    return false;\n  }\n\n  return (\n    <label>\n      <div className=\"pdf-upload\">\n        <div className=\"icon-wrapper\">\n          {loading ? (\n            <Progress width={48} type=\"circle\" percent={percent} />\n          ) : (\n            <InboxOutlined className=\"inbox-icon\" />\n          )}\n        </div>\n        <p className=\"hint\">Click to import a pdf file.</p>\n      </div>\n      <input\n        type=\"file\"\n        multiple={false}\n        accept=\".pdf\"\n        onChange={({ target: { files } }) => {\n          const file = files && files[0];\n          if (!file) return;\n          handleFile(file);\n        }}\n      />\n    </label>\n  );\n};\n\nconst ProfilePage = () => {\n  const [, setActive] = useActiveKey();\n  const userName = getUserName();\n  const [name, setName] = useState(userName);\n  const handleEnter = () => {\n    if (!name) return;\n    saveUserName(name);\n    setActive(\"MENU\");\n  };\n  return (\n    <div className=\"profile-page\">\n      <Input\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n        prefix={<UserOutlined />}\n        allowClear\n      />\n      <Button\n        disabled={userName === name || !name}\n        onClick={handleEnter}\n        type=\"primary\"\n        block\n      >\n        OK\n      </Button>\n    </div>\n  );\n};\n\nconst SettingsPage: FC = () => {\n  const clearAll = async () => {\n    await localforage.clear();\n    await clearImageCache();\n    localStorage.clear();\n    window.location.reload();\n  };\n\n  return (\n    <div className=\"setting-menu\">\n      <Popconfirm\n        title=\"Everything will be deleted.\"\n        onConfirm={clearAll}\n        icon={<ClearOutlined />}\n        okText=\"Delete\"\n        okType=\"danger\"\n        okButtonProps={{ type: \"primary\" }}\n        cancelText=\"Cancel\"\n        placement=\"bottom\"\n      >\n        <Button icon={<ClearOutlined />} danger block>\n          Clear all\n        </Button>\n      </Popconfirm>\n    </div>\n  );\n};\n\nconst menuItems = [\n  {\n    key: \"PDF\",\n    label: \"Import PDF\",\n    icon: <FilePdfOutlined />,\n  },\n  {\n    key: \"PROFILE\",\n    label: \"My profile\",\n    icon: <UserOutlined />,\n  },\n  {\n    key: \"SETTINGS\",\n    label: \"Settings\",\n    icon: <SettingOutlined />,\n  },\n];\n\nconst PrimaryMenu = () => {\n  const [, setActive] = useActiveKey();\n  return (\n    <div className=\"primary-menu\">\n      <Menu onClick={({ key }) => setActive(key)} items={menuItems} />\n    </div>\n  );\n};\n\nconst OthersPage: FC<MenuProps> = (props) => {\n  const [height, setHeight] = useState(0);\n  const [active, setActive] = useActiveKey();\n\n  const calcHeight = (el: HTMLElement) => {\n    setHeight(el.clientHeight);\n  };\n\n  const cssTransProps = {\n    timeout: 300,\n    onEnter: calcHeight,\n    unmountOnExit: true,\n  };\n\n  useEffect(() => setActive(\"MENU\"), [setActive]);\n\n  const components: Record<string, React.ReactNode> = {\n    PDF: <UploadPdfPage {...props} />,\n    PROFILE: <ProfilePage />,\n    SETTINGS: <SettingsPage />,\n  };\n\n  return (\n    <section className=\"others-menu\" style={{ height }}>\n      <CSSTransition in={active === \"MENU\"} {...cssTransProps}>\n        <PrimaryMenu />\n      </CSSTransition>\n      {menuItems.map(({ key, label }) => (\n        <SeconaryMenu key={key} keyName={key} title={label} {...cssTransProps}>\n          {components[key]}\n        </SeconaryMenu>\n      ))}\n    </section>\n  );\n};\n\nexport const OthersMenu: FC<MenuProps> = (props) => {\n  return (\n    <Popover\n      placement=\"bottomRight\"\n      trigger=\"click\"\n      content={\n        <ActiveKeyProvider initKey=\"\">\n          <OthersPage {...props} />\n        </ActiveKeyProvider>\n      }\n      zIndex={900}\n    >\n      <Button className=\"small\" type=\"text\" icon={<CaretDownOutlined />} />\n      <Button className=\"large\" shape=\"circle\" icon={<CaretDownOutlined />} />\n    </Popover>\n  );\n};\n","import { Button, Popover } from \"antd\";\nimport {\n  MenuOutlined,\n  FormOutlined,\n  TeamOutlined,\n  LoadingOutlined,\n} from \"@ant-design/icons\";\nimport { FC, useState } from \"react\";\nimport { createEmptyNote } from \"lib/note/note\";\nimport { createNewNote } from \"lib/note/archive\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getNoteID } from \"lib/network/http\";\nimport { PasscodeInput } from \"antd-mobile\";\nimport { OthersMenu } from \"./Others\";\nimport { useAsideOpen } from \"lib/hooks\";\nimport { MenuProps } from \"../Menu\";\n\nexport const NoteNav: FC<MenuProps> = (props) => {\n  return (\n    <nav>\n      <Left {...props} />\n      <Right {...props} />\n    </nav>\n  );\n};\n\nconst Left: FC<MenuProps> = ({ allTags, currTagID }) => {\n  const [, setAsideOpen] = useAsideOpen();\n\n  const title = allTags[currTagID]?.name ?? \"All notes\";\n  return (\n    <div className=\"nav-left\">\n      <Button\n        className=\"aside-btn small\"\n        type=\"text\"\n        icon={<MenuOutlined />}\n        onClick={() => setAsideOpen(true)}\n      />\n      <h2>\n        <b>{title}</b>\n      </h2>\n    </div>\n  );\n};\n\nconst Right: FC<MenuProps> = (props) => {\n  return (\n    <div className=\"nav-right\">\n      <NewNoteButton {...props} />\n      <JoinTeamButton />\n      <OthersMenu {...props} />\n    </div>\n  );\n};\n\nconst NewNoteButton: FC<MenuProps> = ({\n  currTagID,\n  setAllTags,\n  setAllNotes,\n}) => {\n  async function addNewNote() {\n    const note = createEmptyNote();\n    note.tagID = currTagID;\n    const { tags, allNotes } = await createNewNote(note);\n    setAllTags(tags);\n    setAllNotes(allNotes);\n  }\n\n  return (\n    <>\n      <Button\n        className=\"new-note large\"\n        type=\"primary\"\n        shape=\"round\"\n        onClick={addNewNote}\n        icon={<FormOutlined />}\n      >\n        New\n      </Button>\n      <Button\n        className=\"new-note small\"\n        type=\"link\"\n        onClick={addNewNote}\n        icon={<FormOutlined />}\n      />\n    </>\n  );\n};\n\nconst JoinTeamButton = () => {\n  const [roomCode, setRoomCode] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [wrong, setWrong] = useState(false);\n\n  const nav = useNavigate();\n  async function handleSubmit(code: string) {\n    setLoading(true);\n    const noteID = await getNoteID(code);\n    setLoading(false);\n    if (noteID) return nav(`/team/${noteID}`);\n    setRoomCode(\"\");\n    setWrong(true);\n  }\n\n  const title = (\n    <div className=\"join-team-title\">\n      <span>Join a team note</span>\n      <span>{loading && <LoadingOutlined />}</span>\n    </div>\n  );\n\n  return (\n    <Popover\n      placement=\"bottomRight\"\n      trigger=\"click\"\n      title={title}\n      destroyTooltipOnHide\n      onOpenChange={() => setWrong(false)}\n      content={\n        <PasscodeInput\n          plain\n          length={4}\n          error={wrong}\n          value={roomCode}\n          onChange={(v) => {\n            setWrong(false);\n            setRoomCode(v);\n          }}\n          onFill={handleSubmit}\n        />\n      }\n    >\n      <Button className=\"team-btn large\" shape=\"round\" icon={<TeamOutlined />}>\n        Team\n      </Button>\n      <Button className=\"team-btn small\" type=\"text\" icon={<TeamOutlined />} />\n    </Popover>\n  );\n};\n","import {\n  Button,\n  ButtonProps,\n  Dropdown,\n  Input,\n  Menu,\n  Popconfirm,\n  MenuProps as AntdMenuProps,\n} from \"antd\";\nimport { FC } from \"react\";\nimport {\n  SwapOutlined,\n  TagsOutlined,\n  FileOutlined,\n  DeleteOutlined,\n  SearchOutlined,\n  SelectOutlined,\n  FileTextOutlined,\n  ArrowLeftOutlined,\n  SortAscendingOutlined,\n} from \"@ant-design/icons\";\nimport { Setter } from \"lib/hooks\";\nimport { ColorCirle } from \"component/ColorCircle\";\nimport { deleteNote, moveNoteTag, NoteTag } from \"lib/note/archive\";\nimport { Set } from \"immutable\";\nimport { MenuProps } from \"../Menu\";\nimport { NoteInfo } from \"lib/note/note\";\n\nexport const ListTools: FC<\n  {\n    sortType: string;\n    setSortType: Setter<string>;\n    editing: boolean;\n    setEditing: Setter<boolean>;\n    searchText: string;\n    setSearchText: Setter<string>;\n    selectedNotes: Set<string>;\n  } & MenuProps\n> = ({\n  sortType,\n  setSortType,\n  editing,\n  setEditing,\n  searchText,\n  setSearchText,\n  selectedNotes,\n  setAllNotes,\n  setAllTags,\n  allTags,\n}) => {\n  const menu: AntdMenuProps = {\n    items: [\n      {\n        type: \"group\",\n        children: [\n          { icon: <FileOutlined />, key: \"CREATE\", label: \"Date created\" },\n          { icon: <FileTextOutlined />, key: \"LAST\", label: \"Date modified\" },\n          {\n            icon: <SortAscendingOutlined />,\n            key: \"NAME\",\n            label: \"Name\",\n          },\n        ],\n        label: \"Sort by\",\n        className: \"sort-drop\",\n      },\n    ],\n    onClick({ key }) {\n      setSortType(key);\n    },\n    selectedKeys: [sortType],\n  };\n\n  const btnProps: ButtonProps = { type: \"text\", shape: \"circle\" };\n  const sortButton = (\n    <Dropdown menu={menu} trigger={[\"click\"]} placement=\"bottomRight\">\n      <Button\n        className=\"sort-btn\"\n        icon={<SwapOutlined rotate={90} />}\n        {...btnProps}\n      />\n    </Dropdown>\n  );\n  const disabled = selectedNotes.size === 0;\n\n  const deleteNotes = async () => {\n    let tags: Record<string, NoteTag> | undefined;\n    let allNotes: Record<string, NoteInfo> | undefined;\n    for (let uid of selectedNotes.toArray()) {\n      const res = await deleteNote(uid);\n      tags = res.tags;\n      allNotes = res.allNotes;\n    }\n    tags && setAllTags(tags);\n    allNotes && setAllNotes(allNotes);\n  };\n\n  const moveNotes = async (tagID: string) => {\n    let tags: Record<string, NoteTag> | undefined;\n    let allNotes: Record<string, NoteInfo> | undefined;\n    for (let noteID of selectedNotes.toArray()) {\n      const res = await moveNoteTag(noteID, tagID);\n      tags = res.tags;\n      allNotes = res.allNotes;\n    }\n    tags && setAllTags(tags);\n    allNotes && setAllNotes(allNotes);\n  };\n\n  const deleteButton = (\n    <Popconfirm\n      title=\"Notes will be deleted.\"\n      onConfirm={deleteNotes}\n      icon={<DeleteOutlined />}\n      placement=\"bottom\"\n      cancelText=\"Cancel\"\n      disabled={disabled}\n      okText=\"Delete\"\n      okType=\"danger\"\n      okButtonProps={{ type: \"primary\" }}\n    >\n      <Button\n        className=\"del-btn\"\n        shape=\"round\"\n        type=\"text\"\n        disabled={disabled}\n        danger={!disabled}\n        icon={<DeleteOutlined />}\n      >\n        Delete\n      </Button>\n    </Popconfirm>\n  );\n\n  const ColorLabel: FC<{\n    color: string;\n    name: string;\n  }> = ({ color, name }) => (\n    <div className=\"tag-select\">\n      <ColorCirle color={color} className=\"tag-circle\" />\n      <span className=\"name\">{name}</span>\n    </div>\n  );\n\n  const overlay = (\n    <Menu\n      onClick={({ key }) => moveNotes(key)}\n      items={[\n        {\n          key: \"DEFAULT\",\n          label: <ColorLabel color=\"#eee\" name=\"No tag\" />,\n        },\n        ...Object.values(allTags).map((t) => ({\n          key: t.uid,\n          label: <ColorLabel color={t.color} name={t.name} />,\n        })),\n      ]}\n    />\n  );\n\n  const tagButton = (\n    <Dropdown\n      overlayClassName=\"tag-drop\"\n      disabled={disabled}\n      overlay={overlay}\n      trigger={[\"click\"]}\n      placement=\"bottom\"\n    >\n      <Button\n        shape=\"round\"\n        type=\"text\"\n        className=\"tag-btn\"\n        icon={<TagsOutlined />}\n        style={{ transition: \"none\" }}\n      >\n        Tag\n      </Button>\n    </Dropdown>\n  );\n\n  return (\n    <div className=\"list-tools\" data-editing={editing}>\n      {editing ? (\n        <>\n          <Button\n            onClick={() => setEditing(false)}\n            icon={<ArrowLeftOutlined />}\n            {...btnProps}\n          />\n          {tagButton}\n          {deleteButton}\n        </>\n      ) : (\n        <>\n          <Button\n            onClick={() => setEditing(true)}\n            icon={<SelectOutlined />}\n            {...btnProps}\n          />\n          <Input\n            value={searchText}\n            onChange={(e) => setSearchText(e.target.value)}\n            className=\"search-input\"\n            prefix={<SearchOutlined />}\n            bordered={false}\n            allowClear\n          />\n          {sortButton}\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { FC, useMemo, useState, useEffect, Suspense } from \"react\";\nimport { deleteNote, editNoteData, loadNote } from \"lib/note/archive\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport {\n  CloudTwoTone,\n  CheckCircleFilled,\n  LoadingOutlined,\n} from \"@ant-design/icons\";\nimport { SwipeDelete, SwipeDeleteProvider } from \"component/SwipeDelete\";\nimport { Note, NoteInfo, TeamPageRec } from \"lib/note/note\";\nimport { DrawState } from \"draft-pad/dist/lib\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Setter } from \"lib/hooks\";\nimport { List, Set } from \"immutable\";\nimport { Input } from \"antd\";\nimport { loadCachedTeamState } from \"lib/network/http\";\nimport { TeamState } from \"lib/draw/TeamState\";\nimport { getColorPalette } from \"lib/color\";\nimport { NoteNav, ListTools } from \"../Header\";\nimport dayjs from \"dayjs\";\nimport calender from \"dayjs/plugin/calendar\";\nimport { MenuProps } from \"../Menu\";\nimport { WIDTH } from \"lib/draw/DrawConst\";\ndayjs.extend(calender);\n\nexport const NoteList: FC<MenuProps> = (props) => {\n  const [editing, setEditing] = useState(false);\n  const [sortType, setSortType] = useState(\"LAST\");\n  const [searchText, setSearchText] = useState(\"\");\n  const [selectedNotes, setSelectNotes] = useState(Set<string>());\n\n  const { setAllTags, setAllNotes } = props;\n  const removeNote = async (uid: string) => {\n    const { tags, allNotes } = await deleteNote(uid);\n    setAllNotes(allNotes);\n    setAllTags(tags);\n  };\n\n  const { currTagID, allNotes, allTags } = props;\n  const noteList = useMemo(\n    () =>\n      List(\n        (allTags[currTagID]?.notes ?? Object.keys(allNotes))\n          .map((uid) => allNotes[uid])\n          .filter((n): n is NoteInfo => n !== undefined)\n      ),\n    [allNotes, allTags, currTagID]\n  );\n\n  const sortedList = useMemo(() => {\n    const comparator = (t0: number, t1: number) => t1 - t0;\n    switch (sortType) {\n      case \"CREATE\":\n        return noteList.sortBy((n) => n.createTime, comparator);\n      case \"LAST\":\n        return noteList.sortBy((n) => n.lastTime, comparator);\n      case \"NAME\":\n        return noteList.sortBy((n) => n.name.toUpperCase());\n      default:\n        return noteList;\n    }\n  }, [noteList, sortType]);\n\n  const filterdList = useMemo(\n    () =>\n      sortedList.filter((n) =>\n        n.name.toUpperCase().includes(searchText.trim().toUpperCase())\n      ),\n    [searchText, sortedList]\n  );\n\n  useEffect(() => {\n    setSearchText(\"\");\n    setSelectNotes(Set());\n  }, [noteList, editing]);\n\n  const [componentInit, setComponentInit] = useState(true);\n  useEffect(() => {\n    const timer = setTimeout(() => setComponentInit(false), 500);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <div className=\"note-list\">\n      <header>\n        <NoteNav {...props} />\n        <ListTools\n          sortType={sortType}\n          setSortType={setSortType}\n          editing={editing}\n          setEditing={setEditing}\n          searchText={searchText}\n          setSearchText={setSearchText}\n          selectedNotes={selectedNotes}\n          {...props}\n        />\n      </header>\n      <SwipeDeleteProvider>\n        <TransitionGroup component={null}>\n          {filterdList.map((noteInfo, index) => {\n            const { uid } = noteInfo;\n            const selected = selectedNotes.has(uid);\n            const nextUid = filterdList.get(index + 1)?.uid;\n            const last = (nextUid && selectedNotes.has(nextUid)) !== selected;\n            return (\n              <CSSTransition key={uid} timeout={300}>\n                {(state) => (\n                  <SwipeDelete\n                    className=\"note-wrapper\"\n                    onDelete={() => removeNote(uid)}\n                    disable={editing}\n                    data-last={last}\n                    data-selected={selected}\n                    data-init={componentInit}\n                  >\n                    <NoteItem\n                      timgShow={/^(entered|exiting)$/.test(state)}\n                      noteInfo={noteInfo}\n                      selected={selected}\n                      editing={editing}\n                      setSelectNotes={setSelectNotes}\n                      {...props}\n                    />\n                  </SwipeDelete>\n                )}\n              </CSSTransition>\n            );\n          })}\n        </TransitionGroup>\n      </SwipeDeleteProvider>\n    </div>\n  );\n};\n\nconst NoteItem: FC<\n  {\n    noteInfo: NoteInfo;\n    selected: boolean;\n    editing: boolean;\n    setSelectNotes: Setter<Set<string>>;\n    timgShow: boolean;\n  } & MenuProps\n> = ({\n  noteInfo,\n  selected,\n  editing,\n  setSelectNotes,\n  setAllNotes,\n  allTags,\n  currTagID,\n  timgShow,\n}) => {\n  const { team, uid, name, lastTime, tagID } = noteInfo;\n  const date = useMemo(() => dayjs(lastTime).calendar(), [lastTime]);\n  const href = `${team ? \"team\" : \"reader\"}/${uid}`;\n\n  const [noteName, setNoteName] = useState(name);\n  const nav = useNavigate();\n\n  const saveNoteName = () => {\n    const newName = noteName.trim();\n    if (!newName || newName === name) return setNoteName(name);\n    editNoteData(uid, { name: newName });\n    setAllNotes((prev) => ({ ...prev, [uid]: { ...noteInfo, name: newName } }));\n  };\n\n  const handleClick = () => {\n    if (!editing) return nav(href);\n    setSelectNotes((prev) => {\n      if (prev.has(uid)) return prev.delete(uid);\n      return prev.add(uid);\n    });\n  };\n\n  const tag = allTags[tagID];\n\n  return (\n    <div className=\"note-item\" data-selected={selected} onClick={handleClick}>\n      <div className=\"left\">\n        {timgShow && <NoteTimg uid={uid} />}\n        {team && <CloudTwoTone className=\"cloud-icon\" />}\n        <CheckCircleFilled className=\"checked-icon\" />\n      </div>\n      <div className=\"content\">\n        {editing && !selected ? (\n          <Input\n            className=\"name-input\"\n            value={noteName}\n            onChange={(e) => setNoteName(e.target.value)}\n            onClick={(e) => e.stopPropagation()}\n            onBlur={saveNoteName}\n          />\n        ) : (\n          <p className=\"name\">{name}</p>\n        )}\n        <p className=\"info\">\n          <span className=\"date\">{date}</span>\n          {tag && currTagID === \"DEFAULT\" && (\n            <span className=\"tag\" style={getColorPalette(tag.color)}>\n              {tag.name}\n            </span>\n          )}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nconst PageWrapper = React.lazy(() => import(\"component/PageWrapper\"));\n\nconst NoteTimg: FC<{ uid: string }> = ({ uid }) => {\n  const [note, setNote] = useState<Note>();\n  const [teamNote, setTeamNote] = useState<TeamPageRec>();\n  useEffect(() => {\n    loadNote(uid).then(setNote);\n    loadCachedTeamState(uid).then(setTeamNote);\n  }, [uid]);\n\n  const firstID = note?.pageOrder[0] ?? \"\";\n  const firstPage = note?.pageRec[firstID];\n\n  const drawState = useMemo(() => {\n    if (!firstPage) return;\n    const { state, ratio } = firstPage;\n    return DrawState.loadFromFlat(state, ratio, WIDTH);\n  }, [firstPage]);\n  const teamStateMap = useMemo(() => {\n    if (!teamNote || !firstID) return;\n    return TeamState.createFromTeamPages(teamNote).getOnePageStateMap(firstID);\n  }, [teamNote, firstID]);\n\n  if (!firstPage || !drawState) return null;\n  const { ratio, image } = firstPage;\n  return (\n    <div className=\"timg-wrapper\" data-landscape={ratio < 1}>\n      <Suspense fallback={<LoadingOutlined style={{ opacity: 0.5 }} />}>\n        <PageWrapper\n          drawState={drawState}\n          teamStateMap={teamStateMap}\n          thumbnail={image}\n          preview\n        />\n      </Suspense>\n    </div>\n  );\n};\n","import { createNewNote } from \"./archive\";\nimport { createEmptyNote } from \"./note\";\n\nexport async function createIntroNote() {\n  const key = \"INTRO_CREATED\";\n  if (localStorage.getItem(key)) return;\n\n  const note = createEmptyNote();\n  note.name = \"Welcome to Multibility!\";\n\n  const firstPageRec = Object.values(note.pageRec)[0];\n  if (!firstPageRec) return;\n  const { default: state } = await import(\"./introState.json\");\n  firstPageRec.state = JSON.parse(state);\n  localStorage.setItem(key, \"CREATED\");\n  return await createNewNote(note);\n}\n","import { useEffect, useState } from \"react\";\nimport { getAllNotes, getAllTags, NoteTag } from \"lib/note/archive\";\nimport { NoteInfo } from \"lib/note/note\";\nimport { AsideOpenProvider, Setter } from \"lib/hooks\";\nimport { SideMenu } from \"./Aside\";\nimport { NoteList } from \"./NoteList\";\nimport { createIntroNote } from \"lib/note/intro\";\n\nexport interface MenuProps {\n  currTagID: string;\n  allNotes: Record<string, NoteInfo>;\n  allTags: Record<string, NoteTag>;\n  setAllNotes: Setter<Record<string, NoteInfo>>;\n  setAllTags: Setter<Record<string, NoteTag>>;\n  setCurrTagID: Setter<string>;\n}\n\nexport default function MainMenu() {\n  const [allNotes, setAllNotes] = useState<Record<string, NoteInfo>>({});\n  const [allTags, setAllTags] = useState<Record<string, NoteTag>>({});\n  const [currTagID, setCurrTagID] = useState(\"DEFAULT\");\n\n  useEffect(() => {\n    getAllNotes().then(setAllNotes);\n    getAllTags().then(setAllTags);\n    document.title = \"Multibility\";\n  }, []);\n\n  useEffect(() => {\n    createIntroNote().then((res) => {\n      if (!res) return;\n      const { tags, allNotes } = res;\n      setAllTags(tags);\n      setAllNotes(allNotes);\n    });\n  }, []);\n\n  const menuProps: MenuProps = {\n    allNotes,\n    allTags,\n    setAllNotes,\n    setAllTags,\n    currTagID,\n    setCurrTagID,\n  };\n\n  return (\n    <div className=\"main-menu container\">\n      <AsideOpenProvider>\n        <SideMenu {...menuProps} />\n        <NoteList {...menuProps} />\n      </AsideOpenProvider>\n    </div>\n  );\n}\n"],"names":["imageForage","localforage","name","getImageCache","noteID","index","getItem","cacheList","key","includes","filter","id","setItem","setImageCache","data","length","slice","removeUnusedCache","set","Set","keys","allKeys","has","removeItem","clearImageCache","clear","SwipeCtx","createContext","SwipeDeleteProvider","children","tuple","useState","Provider","value","SwipeDelete","onDelete","disable","className","getUid","uid","useContext","nowSwiped","setNowSwiped","swiped","setSwiped","deleting","deleted","setDeleted","height","setHeight","wrapper","useRef","useEffect","swipeHandler","useSwipeable","onSwipedLeft","current","clientHeight","onSwipedRight","undefined","preventScrollOnSwipe","trackTouch","useTransitionEnd","propertyName","active","transDidEnd","handler","handleClick","classNames","style","onTransitionEnd","ref","onClick","TagInput","tagName","setTagName","tagColor","setTagColor","colorSelector","onSelect","listHeight","virtual","dropdownClassName","colors","c","color","placeholder","addonBefore","onChange","e","target","TagItem","noteTag","currTagID","setAllTags","setCurrTagID","notes","tagEditing","setTagEditing","curr","removeTag","deleteTag","tags","finishEditing","newTag","editTag","newAllTags","displayPanel","size","type","icon","SettingOutlined","editingPanel","title","onConfirm","placement","cancelText","DeleteOutlined","okText","okType","okButtonProps","danger","disabled","getColorPalette","NewTagItem","setAdding","getRandomColor","trim","addNewTag","then","SideMenu","props","allTags","allNotes","adding","useAsideOpen","asideOpen","setAsideOpen","allNoteTag","ContainerOutlined","Object","header","MenuOutlined","PlusOutlined","footer","GithubOutlined","href","shape","IconFont","stopPropagation","values","map","tag","SeconaryMenu","keyName","cssTransProps","useActiveKey","setActive","CSSTransition","in","ArrowLeftOutlined","UploadPdfPage","setAllNotes","loading","setLoading","percent","setPercent","file","LoadPDF","note","tagID","createNewNote","message","width","InboxOutlined","multiple","accept","files","handleFile","ProfilePage","userName","getUserName","setName","prefix","UserOutlined","allowClear","saveUserName","block","SettingsPage","clearAll","localStorage","window","location","reload","ClearOutlined","menuItems","label","FilePdfOutlined","PrimaryMenu","items","OthersPage","timeout","onEnter","el","unmountOnExit","components","PDF","PROFILE","SETTINGS","OthersMenu","trigger","content","initKey","zIndex","CaretDownOutlined","NoteNav","Left","Right","NewNoteButton","JoinTeamButton","addNewNote","createEmptyNote","FormOutlined","roomCode","setRoomCode","wrong","setWrong","nav","useNavigate","code","getNoteID","LoadingOutlined","destroyTooltipOnHide","onOpenChange","plain","error","v","onFill","TeamOutlined","ListTools","sortType","setSortType","editing","setEditing","searchText","setSearchText","selectedNotes","menu","FileOutlined","FileTextOutlined","SortAscendingOutlined","selectedKeys","btnProps","sortButton","SwapOutlined","rotate","deleteNotes","toArray","deleteNote","res","moveNotes","moveNoteTag","deleteButton","ColorLabel","overlay","t","tagButton","overlayClassName","TagsOutlined","transition","SelectOutlined","SearchOutlined","bordered","dayjs","calender","NoteList","setSelectNotes","removeNote","noteList","useMemo","List","n","sortedList","comparator","t0","t1","sortBy","createTime","lastTime","toUpperCase","filterdList","componentInit","setComponentInit","timer","setTimeout","clearTimeout","TransitionGroup","component","noteInfo","selected","nextUid","get","last","state","NoteItem","timgShow","test","team","date","calendar","noteName","setNoteName","prev","delete","add","NoteTimg","CloudTwoTone","CheckCircleFilled","onBlur","newName","editNoteData","PageWrapper","React","setNote","teamNote","setTeamNote","loadNote","loadCachedTeamState","firstID","pageOrder","firstPage","pageRec","drawState","ratio","DrawState","WIDTH","teamStateMap","TeamState","getOnePageStateMap","image","Suspense","fallback","opacity","thumbnail","preview","firstPageRec","default","JSON","parse","MainMenu","getAllNotes","getAllTags","document","createIntroNote","menuProps"],"sourceRoot":""}