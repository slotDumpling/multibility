{"version":3,"file":"static/css/560.c718771d.chunk.css","mappings":"AACE,mBACE,iBACA,4BACE,SCFN,cCME,QAG2C,CAF3C,MAEqD,CDPrD,gBCQA,kBALA,OAI+B,CAL/B,KDFA,CACA,kCACE,oBAEF,iCAKE,sBACA,OAJA,kBAKA,KAAI,CANJ,mBAGA,oBAGA,CEZJ,WAEE,aADA,gBAEA,kBACA,yBAEE,6FADA,kBACA,CACF,iBDFA,QCG2B,CDgB3B,WAlBA,MCE8B,CDC9B,kBALA,OCIwB,CDLxB,KCKqB,CAEnB,0BADA,iBACA,CAEA,yCACE,kEACF,iCACE,mBACJ,uBAGE,aACA,8BAFA,mBADA,WAGA,CACA,kCACE,kBAEN,YACE,cAEA,aACA,iCACE,aACA,oDACE,sBACA,6HACA,kCAHF,oDAII,uBACN,uBDdA,mBCoBE,iCAFA,kBAIA,oCAjBc,CAkBd,eDzBF,aCqBE,gBAHA,YDjBF,uBCsBE,yCAJA,UAMA,CAGF,+BACE,aACF,qCACE,UACF,2BD9BA,mBAFA,aCoCE,YDnCF,uBCiCE,eACA,YACA,CACA,yCAEE,wBADA,sBACA,CAEN,aACE,YACA,sCDzDA,YC0DmC,CDvCnC,WAlBA,WAGA,kBALA,WC2D4B,CD5D5B,SC4D0C,CAE5C,cAGE,gBAFA,aAEA,WADA,oCAEA,mBACA,gCACE,aACA,gDAGE,uCAFA,gBAEA,CACJ,sBAKE,kBADA,mBAHA,eAEA,YAGA,mBAJA,UAIA,CACA,4CACE,0BAEN,kCACE,kDACE,uBCxFJ,cFgCE,qBADuB,CE3BvB,oCCHY,CDEZ,kGCYS,CDVT,aAHA,WAGA,CFuBA,sCE5BF,cFmCI,4FADA,mCACA,EE5BJ,aAKE,mBAFA,6CAFA,kBAGA,2CAEA,qCAJK,CAIL,6BAJK,CAML,yBADA,4KCHW,CDMX,iCAEE,UADA,sFAEA,kBACA,4CACE,aAEN,WACE,4CAA+C,CAC/C,8CAAiD,CACjD,6BAKE,0BAHA,kBADA,kBAEA,iBAGA,sHAFA,uBAEA,CACA,oCF7BF,QAkB4C,CAC5C,WAlBA,MAiBsD,CEclD,2BACA,mBF7BJ,kBALA,OAmBgC,CApBhC,KAoBqB,CEajB,UAEA,CACF,iDACE,oBACF,qDACE,iCAEF,sCAeE,gBAHA,YAFA,yBADA,kBAFA,mBADA,oBAHA,kCAKA,oBANA,cAYA,aAHA,UAEA,YARA,wHADA,4DAYA,0CAfA,8BAeA,CACA,sDACE,mBAEN,yBAEE,mBADA,sBAGA,oCADA,kBAEA,iBACA,wEACA,8BACE,aACF,6BACE,gBACF,sCACE,kBACF,2CACE,oEAEN,iBAGE,sBACA,kBAFA,aADA,WAGA,CAEF,WAEE,mBADA,SACA,CEzFF,cAEE,gBADA,iBACA,CACA,8BAEE,cADA,iBACA,CJ8CF,kCIzCE,gFACE,kHACF,wFAEE,oIJRJ,QAkB4C,CAC5C,WAlBA,MAiBsD,CITlD,oBJLJ,kBALA,OAmBgC,CApBhC,KIWI","sources":["lib/draw/draw-ctrl.sass","component/Draw/draw.sass","sass/_mixins.sass","pages/reader/tools/pen-panel.sass","pages/reader/tools/draw-tools.sass","sass/_var.sass","component/PageWrapper/page-wrapper.sass"],"sourcesContent":[".pencil-msg\n  button\n    margin-left: 0.5em\n    .anticon\n      margin: 0\n","@import ../../sass/_mixins\n\n.draw-wrapper\n  @include absolute\n  overflow: hidden\n  &[data-readonly=true]\n    pointer-events: none\n\n  canvas.draw-canvas\n    touch-action: pan-y\n    position: absolute\n    // override paperjs size\n    width: 100% !important\n    height: 100% !important\n    left: 0\n    top: 0\n","@mixin text-overflow\n  overflow: hidden\n  text-overflow: ellipsis\n  white-space: nowrap\n\n@mixin inset($top: 0, $right: 0, $bottom: 0, $left: 0)\n  top: $top\n  right: $right\n  bottom: $bottom\n  left: $left\n\n@mixin absolute($top: 0, $right: 0, $bottom: 0, $left: 0)\n  position: absolute\n  @include inset($top, $right, $bottom, $left)\n\n@mixin absolute-center\n  position: absolute\n  top: 50%\n  left: 50%\n  transform: translate(-50%, -50%)\n\n@mixin flex-center\n  display: flex\n  justify-content: center\n  align-items: center\n\n@mixin pseudo-el($top: 0, $right: 0, $bottom: 0, $left: 0)\n  content: \"\"\n  @include absolute($top, $right, $bottom, $left)\n\n@mixin for-safari\n  @supports (-webkit-touch-callout: none)\n    @content\n\n@mixin back-blur($color: #fff)\n  background-color: $color\n  @include for-safari\n    background-color: transparentize($color, 0.2)\n    backdrop-filter: blur(20px) saturate(180%)\n\n@mixin for-phone\n  @media (max-width: 640px)\n    @content\n\n@mixin for-desktop\n  @media (min-width: 640px)\n    @content\n\n@mixin for-light\n  @media (prefers-color-scheme: light)\n    @content\n\n@mixin for-dark\n  @media (prefers-color-scheme: dark)\n    @content\n\n@mixin y-scroll\n  overflow: hidden auto\n  overscroll-behavior: contain\n","@import ../../../sass/_mixins\n@import ../../../sass/_var\n\n.pen-panel\n  min-width: 200px\n  margin: 4px 0\n  position: relative\n  .color-select\n    will-change: filter\n    transition: filter $speed\n  &::after\n    @include pseudo-el(0, 0, 0, 0)\n    visibility: hidden\n    transition: visibility $speed\n  &[data-blur=\"true\"]\n    .color-select\n      filter: blur(5px) opacity(0.5)\n    &::after\n      visibility: visible\n  .pen-status\n    padding: 5px\n    margin-bottom: 10px\n    display: flex\n    justify-content: space-between\n    .width-seg\n      margin-right: 20px\n\n.hi-wrapper\n  display: block\n  $border-shadow: 0 0 0 2px rgba(0, 0, 0, 0.04)\n  margin: 2px 0\n  input[type=\"checkbox\"]\n    display: none\n    &:checked + .hi-switch\n      background-color: #fff\n      box-shadow: $border-shadow, $shadow-1\n      @media (prefers-color-scheme: dark)\n        background-color: #ddd\n  .hi-switch\n    @include flex-center\n    height: 100%\n    width: 40px\n    border-radius: 5px\n    font-size: 1.2em\n    background-color: rgba(0, 0, 0, 0.04)\n    transition: background $speed, box-shadow $speed\n    box-shadow: $border-shadow\n    cursor: pointer\n\n.width-seg\n  .ant-segmented-item\n    display: flex\n  .ant-segmented-item-label\n    padding: 0\n  .circle-wrapper\n    @include flex-center\n    min-width: 30px\n    padding: 10px\n    height: 100%\n    .width-circle\n      width: var(--real-size)\n      height: var(--real-size)\n\n.ctrl-slider\n  width: 200px\n  .ant-slider-handle::after\n    @include pseudo-el(-20px, -20px, -20px, -20px)\n\n.color-select\n  display: grid\n  grid-template-columns: repeat(4, 1fr)\n  gap: 10px 0\n  place-items: center\n  input[type=\"radio\"]\n    display: none\n    &:checked + .circle\n      border-width: 6px\n      // checked circle ring\n      background-color: #0000 !important\n  .circle\n    cursor: pointer\n    width: 30px\n    height: 30px\n    border-radius: 15px\n    border: 15px solid\n    transition: all 0.2s\n    &[data-color=\"#000000\"]\n      box-shadow: 0 0 0 1px #ddd\n\n@media (prefers-color-scheme: dark)\n  .ant-segmented-item-selected, .ant-segmented-thumb\n    background-color: #ddd\n","@import ../../../sass/_mixins\n@import ../../../sass/_var\n\n.tool-options\n  @include back-blur\n  padding: 5px\n  box-shadow: $shadow-1\n  border: $dark-border\n  display: flex\n\n.select-tool\n  position: absolute\n  $tf: translate(-50%, 20%)\n  left: min(max(70px, var(--pos-x)), calc(100% - 70px))\n  top: min(max(0px, var(--pos-y)), calc(100% - 50px))\n  border-radius: 50px\n  transform: $tf\n  transition-property: transform, opacity, visibility\n  transition-duration: $fast-speed\n\n  &[data-visible=false]\n    transform: $tf scale(0)\n    opacity: 0\n    visibility: hidden\n    .style-pop\n      display: none\n\n.text-tool\n  --real-width: calc(var(--width) * var(--scale))\n  --real-height: calc(var(--height) * var(--scale))\n  .textarea-wrapper\n    position: absolute\n    left: var(--pos-x)\n    top: var(--pos-y)\n    width: var(--real-width)\n    height: var(--real-height)\n    transform: translate(-50%, -50%) rotate(var(--rotation))\n    &::before\n      @include pseudo-el\n      z-index: -1\n      outline: 2px dashed $blue-color\n      outline-offset: 5px\n    &:focus-within::before\n      outline-style: solid\n    &[data-empty=true]::before\n      min-width: calc(4ch * var(--scale))\n\n    textarea\n      width: calc(var(--width) + 1em)\n      min-width: 4ch\n      height: calc(var(--height) + 0.2em)\n      transform-origin: top left\n      transform: scale(var(--scale)) translateY(var(--offset))\n      font-weight: inherit\n      font-style: inherit\n      line-height: inherit\n      color: #0000\n      caret-color: var(--color)\n      padding: 0\n      border: none\n      resize: none\n      outline: none\n      background: none\n      user-select: auto\n      &[data-slow=true]\n        color: var(--color)\n\n  .text-options\n    flex-direction: column\n    border-radius: 10px\n    position: absolute\n    left: min(calc(100% - 180px), var(--pos-x))\n    top: var(--pos-y)\n    transform: translate(-7px, -120%)\n    > .row\n      display: flex\n    > * + *\n      margin-top: 10px\n    .font-select\n      margin-right: auto\n    &[data-bottom=true]\n      transform: translate(-7px, 20%)\n\n.font-color-drop\n  width: 200px\n  padding: 10px\n  background-color: white\n  border-radius: 5px\n\n.font-drop\n  padding: 0\n  border-radius: 10px\n","$blue-color: #1890ff\n$blue-color-light: #BFDBFE\n\n$default-border: 1px solid #eee\n$dark-border: 1px solid #dddd\n$light-border: 1px solid #eee8\n\n$header-low-height: 55px\n$header-high-height: 100px\n\n$safe-bottom: env(safe-area-inset-bottom, 0)\n$safe-left: env(safe-area-inset-left, 0)\n$safe-right: env(safe-area-inset-right, 0)\n\n$fast-speed: 150ms\n$speed: 300ms\n$slow-speed: 500ms\n\n$shadow-1: 0 2px 8px -2px rgb(0 0 0 / 5%), 0 1px 4px -1px rgb(0 0 0 / 7%), 0 0 1px 0 rgb(0 0 0 / 8%)\n$shadow-2-down: 0 3px 6px -4px rgb(0 0 0 / 12%), 0 6px 16px 0 rgb(0 0 0 / 8%), 0 9px 28px 8px rgb(0 0 0 / 5%)\n","@import ../../sass/_mixins\n\n.page-wrapper\n  position: relative\n  overflow: hidden\n  > svg.size-holder\n    visibility: hidden\n    display: block\n\n// use pseudo element with backdrop filter for main canvas in dark mode.\n@include for-dark\n  body:not([data-force-light=true]) .page-wrapper\n    &[data-preview=true] .draw-canvas\n      filter: invert(100%) hue-rotate(180deg) contrast(90%)\n    &[data-preview=false] .draw-wrapper::after\n      @include pseudo-el\n      backdrop-filter: invert(100%) hue-rotate(180deg) contrast(90%)\n      pointer-events: none\n"],"names":[],"sourceRoot":""}