{"version":3,"file":"static/js/426.422dd730.chunk.js","mappings":"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","sources":["component/ColorCircle/ColorCircle.tsx","lib/color.ts","lib/draw/TeamState.ts","lib/hooks.tsx","lib/network/http.ts","lib/note/imgCache.ts","lib/user.ts","component/SwipeDelete/SwipeDelete.tsx","pages/menu/Aside/SideMenu.tsx","pages/menu/Header/Others.tsx","pages/menu/Header/Nav.tsx","pages/menu/Header/ListTools.tsx","pages/menu/NoteList/NoteList.tsx","pages/menu/Menu.tsx"],"sourcesContent":["import classNames from \"classnames\";\nimport { FC } from \"react\";\n\nexport const ColorCirle: FC<{ color: string; className?: string }> = ({\n  color,\n  className,\n}) => {\n  const style = { backgroundColor: color };\n  return (\n    <div className={classNames(\"color-circle\", className)} style={style} />\n  );\n};\n","import { CSSProperties } from \"react\";\nimport hash from \"string-hash\";\nexport const colors = [\n  \"#f97316\",\n  \"#eab308\",\n  \"#84cc16\",\n  \"#22c55e\",\n  \"#10b981\",\n  \"#14b8a6\",\n  \"#06b6d4\",\n  \"#0ea5e9\",\n  \"#3b82f6\",\n  \"#6366f1\",\n  \"#8b5cf6\",\n  \"#a855f7\",\n  \"#d946ef\",\n  \"#ec4899\",\n  \"#f43f5e\",\n  \"#ef4444\",\n];\n\nexport const grayColors = [\"#000000\", \"#9ca3af\", \"#64748b\", \"#78716c\"];\nexport const allColors = [...grayColors, ...colors];\n\nexport const getRandomColor = () => {\n  const index = Math.floor(Math.random() * colors.length);\n  return colors[index]!;\n};\n\nexport const getHashedColor = (str: string) => {\n  const index = hash(str) % colors.length;\n  return colors[index];\n};\n\nconst colorPalette: Record<string, { light: string; dark: string }> = {\n  \"#f97316\": { light: \"#FFEDD5\", dark: \"#9A3412\" },\n  \"#eab308\": { light: \"#FEF9C3\", dark: \"#854D0E\" },\n  \"#84cc16\": { light: \"#ECFCCB\", dark: \"#3F6212\" },\n  \"#22c55e\": { light: \"#DCFCE7\", dark: \"#166534\" },\n  \"#10b981\": { light: \"#D1FAE5\", dark: \"#065F46\" },\n  \"#14b8a6\": { light: \"#CCFBF1\", dark: \"#115E59\" },\n  \"#06b6d4\": { light: \"#CFFAFE\", dark: \"#155E75\" },\n  \"#0ea5e9\": { light: \"#E0F2FE\", dark: \"#075985\" },\n  \"#3b82f6\": { light: \"#DBEAFE\", dark: \"#1E40AF\" },\n  \"#6366f1\": { light: \"#E0E7FF\", dark: \"#3730A3\" },\n  \"#8b5cf6\": { light: \"#EDE9FE\", dark: \"#5B21B6\" },\n  \"#a855f7\": { light: \"#F3E8FF\", dark: \"#6B21A8\" },\n  \"#d946ef\": { light: \"#FAE8FF\", dark: \"#86198F\" },\n  \"#ec4899\": { light: \"#FCE7F3\", dark: \"#9D174D\" },\n  \"#f43f5e\": { light: \"#FFE4E6\", dark: \"#9F1239\" },\n  \"#ef4444\": { light: \"#FEE2E2\", dark: \"#991B1B\" },\n};\n\nexport const getColorPalette = (color: string) => {\n  const palette = colorPalette[color] ?? { light: \"#E5E7EB\", dark: \"#374151\" };\n  return {\n    \"--light-color\": palette.light,\n    \"--dark-color\": palette.dark,\n  } as CSSProperties;\n};\n","import { NotePage, TeamPageInfo, TeamPageRec } from \"lib/note/note\";\nimport { DrawState } from \"./DrawState\";\nimport { SetOperation } from \"./StateSet\";\nimport { Map, Record, Set } from \"immutable\";\n\ninterface TeamStateRecordType {\n  pageStates: Map<string, Map<string, DrawState>>;\n  pageInfos: Map<string, TeamPageInfo>;\n}\n\nconst defaultRecord: Readonly<TeamStateRecordType> = {\n  pageStates: Map(),\n  pageInfos: Map(),\n};\n\ntype TeamStateRecord = Record<TeamStateRecordType>;\nconst defaultFactory = Record(defaultRecord);\n\nexport class TeamState {\n  constructor(private immutable: TeamStateRecord) {}\n\n  getImmutable() {\n    return this.immutable;\n  }\n\n  getPageStates() {\n    return this.getImmutable().get(\"pageStates\");\n  }\n\n  getPageInfos() {\n    return this.getImmutable().get(\"pageInfos\");\n  }\n\n  getOneState(pageID: string, userID: string) {\n    return this.getPageStates().get(pageID)?.get(userID);\n  }\n\n  getOnePageStateMap(pageID: string) {\n    return this.getPageStates().get(pageID);\n  }\n\n  getPageRatio(pageID: string) {\n    return this.getPageInfos().get(pageID)?.ratio;\n  }\n\n  includesPage(pageID: string) {\n    return this.getPageStates().has(pageID);\n  }\n\n  setState(pageID: string, userID: string, drawState: DrawState) {\n    const pageMap = this.getPageStates().get(pageID);\n    if (!pageMap) return this;\n    return new TeamState(\n      this.getImmutable().update(\"pageStates\", (m) =>\n        m.set(pageID, pageMap.set(userID, drawState))\n      )\n    );\n  }\n\n  static createFromTeamPages(teamPages: TeamPageRec) {\n    let record = defaultFactory();\n    Object.entries(teamPages).forEach(([pageID, teamPage]) => {\n      const { states, ratio } = teamPage;\n      const pageMap = Map(\n        Object.entries(states).map(([userID, flatState]) => [\n          userID,\n          DrawState.loadFromFlat(flatState, ratio),\n        ])\n      );\n      record = record\n        .update(\"pageStates\", (m) => m.set(pageID, pageMap))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }));\n    });\n    return new TeamState(record);\n  }\n\n  addPage(pageID: string, notePage: NotePage) {\n    const { ratio } = notePage;\n    return new TeamState(\n      this.getImmutable()\n        .update(\"pageStates\", (m) => m.set(pageID, Map()))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }))\n    );\n  }\n\n  pushOperation(setOp: SetOperation, userID: string) {\n    const { pageID, ...op } = setOp;\n    const ratio = this.getPageRatio(pageID);\n    if (!this.includesPage(pageID) || !ratio) return this;\n    const prevDs =\n      this.getOneState(pageID, userID) || DrawState.createEmpty(ratio);\n\n    const ds = DrawState.pushOperation(prevDs, op);\n    return this.setState(pageID, userID, ds);\n  }\n\n  resetUser(userID: string, pageRec: globalThis.Record<string, NotePage>) {\n    let newTS: TeamState = this;\n    for (let [pageID, { state, ratio }] of Object.entries(pageRec)) {\n      const prevDS = newTS.getOneState(pageID, userID);\n      if (!prevDS) continue;\n      newTS = newTS.setState(\n        pageID,\n        userID,\n        DrawState.loadFromFlat(state, ratio)\n      );\n    }\n    return newTS;\n  }\n\n  static getValidUsers(\n    teamStateMap?: Map<string, DrawState>,\n    ignores = Set<string>()\n  ) {\n    if (!teamStateMap) return [];\n    return Array.from(\n      teamStateMap\n        .filter((ds) => !ds.isEmpty())\n        .deleteAll(ignores)\n        .keys()\n    );\n  }\n  static isEmpty(teamStateMap?: Map<string, DrawState>) {\n    return !teamStateMap || teamStateMap.every((ds) => ds.isEmpty());\n  }\n}\n","import React, {\n  createContext,\n  Dispatch,\n  FC,\n  PropsWithChildren,\n  SetStateAction,\n  TransitionEventHandler,\n  useContext,\n  useDebugValue,\n  useRef,\n  useState,\n} from \"react\";\n\nexport type Setter<T> = Dispatch<SetStateAction<T>>;\n\nexport function useTransitionEnd({\n  propertyName,\n  active = true,\n}: {\n  propertyName: string;\n  active?: boolean;\n}): [Promise<void>, TransitionEventHandler] {\n  const resRef = useRef(() => {});\n  const [promise] = useState(\n    () => new Promise<void>((res) => (resRef.current = res))\n  );\n  return [\n    promise,\n    (e) => {\n      if (e.propertyName === propertyName && active) resRef.current();\n    },\n  ];\n}\n\nconst ActiveKeyCtx = createContext<[string, Setter<string>]>([\"\", () => {}]);\nexport function useActiveKey() {\n  const tuple = useContext(ActiveKeyCtx);\n  useDebugValue(tuple[0]);\n  return tuple;\n}\n\nexport const ActiveKeyProvider: FC<PropsWithChildren<{ initKey: string }>> = ({\n  children,\n  initKey,\n}) => {\n  const tuple = useState(initKey);\n  return (\n    <ActiveKeyCtx.Provider value={tuple}>{children}</ActiveKeyCtx.Provider>\n  );\n};\n\nconst AsideOpenCtx = createContext<[boolean, Setter<boolean>]>([\n  false,\n  () => {},\n]);\nexport function useAsideOpen() {\n  const tuple = useContext(AsideOpenCtx);\n  useDebugValue(tuple[0]);\n  return tuple;\n}\n\nexport const AsideOpenProvider: FC<PropsWithChildren> = ({ children }) => {\n  const tuple = useState(false);\n  return (\n    <AsideOpenCtx.Provider value={tuple}>{children}</AsideOpenCtx.Provider>\n  );\n};\n","import axios from \"axios\";\nimport {\n  removePageTimg,\n  TeamNoteInfo,\n  TeamPageInfo,\n  TeamPageRec,\n} from \"lib/note/note\";\nimport { loadNote, saveTeamNote, updateTeamNote } from \"lib/note/archive\";\nimport { getUserID } from \"lib/user\";\nimport localforage from \"localforage\";\nimport md5 from \"md5\";\n\nexport const BASE_URL = process.env.REACT_APP_PUBLIC_SERVER_URL ?? \"\";\n// export const BASE_URL = process.env.REACT_APP_LOCAL_SERVER_URL ?? \"\";\naxios.defaults.baseURL = BASE_URL;\n\nexport async function getNoteID(roomCode: string) {\n  try {\n    const { data } = await axios.get(`code/${roomCode}`);\n    if (data.statusCode !== 200) return null;\n    return data.noteID as string;\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n}\n\ninterface InfoRes {\n  statusCode: number;\n  code: number;\n  noteInfo: TeamNoteInfo;\n  pageInfos: Record<string, TeamPageInfo>;\n}\n\nexport async function getTeamNoteInfo(noteID: string) {\n  try {\n    const { data } = await axios.get(`info/${noteID}`);\n    const { statusCode, ...res } = data as InfoRes;\n    if (statusCode !== 200) return null;\n    return res;\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n}\n\nexport async function loadTeamNoteInfo(\n  noteID: string,\n  cb?: (len: number) => void\n) {\n  try {\n    const infoRes = await getTeamNoteInfo(noteID);\n    if (!infoRes) return null;\n    const { noteInfo, pageInfos } = infoRes;\n\n    if (await updateTeamNote(noteID, noteInfo, pageInfos)) return infoRes;\n\n    if (noteInfo.withImg) {\n      const { data } = await axios({\n        method: \"GET\",\n        url: noteID,\n        responseType: \"blob\",\n        onDownloadProgress({ loaded }: ProgressEvent) {\n          cb?.(loaded);\n        },\n      });\n      const file = new Blob([data], { type: \"application/pdf\" });\n      await saveTeamNote(noteID, noteInfo, pageInfos, file);\n    } else {\n      await saveTeamNote(noteID, noteInfo, pageInfos);\n    }\n    return infoRes;\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n}\n\nexport async function putNote(noteID: string) {\n  const note = await loadNote(noteID);\n  if (!note) return false;\n  const { uid, name, withImg, pdf, pageOrder, pageRec } = note;\n  removePageTimg(pageRec);\n\n  try {\n    const { data } = await axios.put(`create/${noteID}`, {\n      userID: getUserID(),\n      pageRec,\n      noteInfo: { uid, name, withImg, pageOrder },\n    });\n\n    if (pdf) {\n      const formData = new FormData();\n      const ab = await pdf.arrayBuffer();\n      const file = new Blob([ab]);\n      formData.append(\"file\", file, noteID);\n      await axios({\n        method: \"POST\",\n        url: \"upload\",\n        data: formData,\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      });\n    }\n\n    if (data.statusCode !== 201) return false;\n    return true;\n  } catch (e) {\n    console.error(e);\n    return false;\n  }\n}\n\nconst hashForage = localforage.createInstance({ name: \"updateHash\" });\nexport async function updatePages(noteID: string) {\n  const note = await loadNote(noteID);\n  if (!note) return null;\n  const { uid, name, withImg, pageOrder, pageRec } = note;\n  removePageTimg(pageRec);\n  const noteInfo = { uid, name, withImg, pageOrder };\n\n  const hash = md5(JSON.stringify([pageRec, noteInfo]));\n  const lastHash = await hashForage.getItem<string>(noteID);\n  if (hash === lastHash) return true;\n\n  try {\n    const body = { userID: getUserID(), pageRec, noteInfo };\n    const { data } = await axios.put(`update/${noteID}`, body);\n    if (data.statusCode !== 201) return false;\n    await hashForage.setItem(noteID, hash);\n    return true;\n  } catch (e) {\n    console.error(e);\n    return false;\n  }\n}\n\nconst teamForage = localforage.createInstance({ name: \"teamState\" });\nexport async function getTeamNoteState(\n  noteID: string,\n  cb?: (len: number) => void\n) {\n  const cachedState = await loadCachedTeamState(noteID);\n  const hash = cachedState && md5(JSON.stringify(cachedState));\n\n  try {\n    const { data } = await axios.get(`state/${noteID}`, {\n      params: { userID: getUserID(), hash },\n      onDownloadProgress({ loaded }: ProgressEvent) {\n        cb?.(loaded);\n      },\n    });\n    const { statusCode, modified, teamPages } = data;\n    if (statusCode === 200 && modified) {\n      await teamForage.setItem(noteID, teamPages);\n      return teamPages as TeamPageRec;\n    }\n    return cachedState;\n  } catch (e) {\n    console.error(e);\n    return cachedState;\n  }\n}\n\nexport async function loadCachedTeamState(noteID: string) {\n  return (await teamForage.getItem<TeamPageRec>(noteID)) ?? undefined;\n}\n","import localforage from \"localforage\";\n\nconst IMAGE_CACHE_MAX = 10;\nconst imageForage = localforage.createInstance({ name: \"imageForage\" });\nexport const getImageCache = async (noteID: string, index: number) => {\n  let cacheList = (await imageForage.getItem<string[]>(\"LIST\")) ?? [];\n  const key = `${noteID}_${index}`;\n  if (!cacheList.includes(key)) return;\n  cacheList = [key, ...cacheList.filter((id) => id !== key)];\n  await imageForage.setItem(\"LIST\", cacheList);\n  return await imageForage.getItem<string>(key);\n};\n\nexport const setImageCache = async (noteID: string, index: number, data: string) => {\n  let cacheList = (await imageForage.getItem<string[]>(\"LIST\")) ?? [];\n  const key = `${noteID}_${index}`;\n  cacheList = [key, ...cacheList.filter((id) => id !== key)];\n  if (cacheList.length > IMAGE_CACHE_MAX) {\n    cacheList = cacheList.slice(0, IMAGE_CACHE_MAX);\n  }\n  await imageForage.setItem(\"LIST\", cacheList);\n  await imageForage.setItem(key, data);\n  removeUnusedCache();\n};\n\nconst removeUnusedCache = async () => {\n  const cacheList = (await imageForage.getItem<string[]>(\"LIST\")) ?? [];\n  const set = new Set(cacheList);\n  const allKeys = await imageForage.keys();\n  for (let key of allKeys) {\n    if (key === \"LIST\") continue;\n    if (!set.has(key)) await imageForage.removeItem(key);\n  }\n};\n\nexport const clearImageCache = () => imageForage.clear();\n","import { v4 as getUid } from \"uuid\";\n\nexport interface UserInfo {\n  userID: string;\n  userName: string;\n  online: boolean;\n}\n\nexport const getUserID = (() => {\n  let cached: string;\n  return () => {\n    if (cached) return cached;\n    let userID = localStorage.getItem(\"USER_ID\");\n    if (!userID) {\n      userID = getUid();\n      localStorage.setItem(\"USER_ID\", userID);\n    }\n    cached = userID;\n    return userID;\n  };\n})();\n\nexport const getUserName = () => {\n  let name = localStorage.getItem(\"USER_NAME\");\n  if (!name) {\n    name = getUid().slice(0, 8);\n    localStorage.setItem(\"USER_NAME\", name);\n  }\n  return name;\n};\n\nexport const saveUserName = (name: string) => {\n  name = name.trim();\n  if (!name) return false;\n  else localStorage.setItem(\"USER_NAME\", name);\n  return true;\n};\n","import {\n  FC,\n  useRef,\n  useState,\n  useEffect,\n  useContext,\n  createContext,\n  PropsWithChildren,\n} from \"react\";\nimport { Setter, useTransitionEnd } from \"lib/hooks\";\nimport { useSwipeable } from \"react-swipeable\";\nimport classNames from \"classnames\";\nimport { v4 as getUid } from \"uuid\";\n\nconst SwipeCtx = createContext<[string, Setter<string>]>([\"\", () => {}]);\n\nexport const SwipeDeleteProvider: FC<PropsWithChildren> = ({ children }) => {\n  const tuple = useState(\"\");\n  return <SwipeCtx.Provider value={tuple}>{children}</SwipeCtx.Provider>;\n};\n\nexport const SwipeDelete: FC<\n  PropsWithChildren<{\n    onDelete: () => void;\n    disable?: boolean;\n    className?: string;\n  }>\n> = ({ children, onDelete, disable = false, className, ...data }) => {\n  const [uid] = useState(getUid);\n\n  const [nowSwiped, setNowSwiped] = useContext(SwipeCtx);\n  const [swiped, setSwiped] = useState(false);\n  const deleting = swiped && (!nowSwiped || nowSwiped === uid);\n  const [deleted, setDeleted] = useState(false);\n\n  const [height, setHeight] = useState<number>();\n  const wrapper = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (nowSwiped !== uid) setSwiped(false);\n  }, [nowSwiped, uid]);\n\n  const showDelete = () => {\n    setSwiped(true);\n    setNowSwiped(uid);\n    setHeight(wrapper.current?.clientHeight);\n  };\n\n  const hideDelete = () => {\n    setSwiped(false);\n    setNowSwiped(\"\");\n    setHeight(undefined);\n  };\n\n  const swipeHandler = useSwipeable({\n    onSwipedLeft: showDelete,\n    onSwipedRight: hideDelete,\n    preventScrollOnSwipe: true,\n    trackTouch: !disable,\n  });\n\n  useEffect(() => {\n    if (!disable) return;\n    setHeight(undefined);\n    setNowSwiped(\"\");\n    setSwiped(false);\n  }, [disable, setNowSwiped]);\n\n  const [transDidEnd, handler] = useTransitionEnd({\n    propertyName: \"height\",\n    active: deleted,\n  });\n  const handleClick = async () => {\n    setDeleted(true);\n    await transDidEnd;\n    onDelete();\n    setNowSwiped(\"\");\n  };\n\n  return (\n    <div\n      className={classNames(\"swipe-wrapper\", className)}\n      data-deleted={deleted}\n      data-deleting={deleting}\n      {...swipeHandler}\n      style={{ height }}\n      onTransitionEnd={handler}\n      {...data}\n    >\n      <div className=\"content\" ref={wrapper}>\n        {children}\n      </div>\n      <div className=\"button\" onClick={handleClick} style={{ height }}>\n        Delete\n      </div>\n    </div>\n  );\n};\n","import { FC, useEffect, useState } from \"react\";\nimport {\n  MenuOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  SettingOutlined,\n  ContainerOutlined,\n} from \"@ant-design/icons\";\nimport { Button, Input, Popconfirm, Select } from \"antd\";\nimport { deleteTag, editTag, NoteTag, addNewTag } from \"lib/note/archive\";\nimport { colors, getColorPalette, getRandomColor } from \"lib/color\";\nimport { Setter, useAsideOpen } from \"lib/hooks\";\nimport { SwipeDelete, SwipeDeleteProvider } from \"component/SwipeDelete\";\nimport { ColorCirle } from \"component/ColorCircle\";\nimport { MenuProps } from \"../Menu\";\n\nconst TagInput: FC<{\n  tagName: string;\n  setTagName: Setter<string>;\n  tagColor: string;\n  setTagColor: Setter<string>;\n}> = ({ tagName, setTagName, tagColor, setTagColor }) => {\n  const colorSelector = (\n    <Select\n      value={tagColor}\n      onSelect={setTagColor}\n      listHeight={150}\n      virtual={false}\n      dropdownClassName=\"tag-color-drop\"\n    >\n      {colors.map((c) => (\n        <Select.Option value={c} key={c}>\n          <ColorCirle className=\"tag-circle\" color={c} />\n        </Select.Option>\n      ))}\n    </Select>\n  );\n\n  return (\n    <Input\n      placeholder=\"Tag name...\"\n      className=\"tag-name-input\"\n      addonBefore={colorSelector}\n      value={tagName}\n      onChange={(e) => setTagName(e.target.value)}\n    />\n  );\n};\n\nconst TagItem: FC<{ noteTag: NoteTag } & MenuProps> = ({\n  noteTag,\n  currTagID,\n  setAllTags,\n  setCurrTagID,\n}) => {\n  const { uid, color, name, notes } = noteTag;\n  const [tagName, setTagName] = useState(name);\n  const [tagColor, setTagColor] = useState(color);\n  const [tagEditing, setTagEditing] = useState(false);\n  const curr = currTagID === uid;\n  useEffect(() => setTagEditing(false), [curr]);\n\n  async function removeTag() {\n    const tags = await deleteTag(uid);\n    setCurrTagID(\"DEFAULT\");\n    setAllTags(tags);\n  }\n\n  const cancelEditing = () => {\n    setTagName(name);\n    setTagColor(color);\n    setTagEditing(false);\n  };\n\n  const finishEditing = async () => {\n    const newTag: NoteTag = {\n      ...noteTag,\n      name: tagName,\n      color: tagColor,\n    };\n\n    const newAllTags = await editTag(newTag);\n    setAllTags(newAllTags);\n    setTagEditing(false);\n  };\n\n  const displayPanel = (\n    <>\n      <ColorCirle className=\"tag-circle\" color={tagColor} />\n      <span className=\"tag-name\">{tagName}</span>\n      {curr ? (\n        <Button\n          size=\"small\"\n          type=\"text\"\n          onClick={() => setTagEditing(true)}\n          icon={<SettingOutlined />}\n        />\n      ) : (\n        <span className=\"tag-num\">{notes.length}</span>\n      )}\n    </>\n  );\n\n  const editingPanel = (\n    <>\n      <TagInput\n        tagName={tagName}\n        setTagName={setTagName}\n        tagColor={tagColor}\n        setTagColor={setTagColor}\n      />\n      <div className=\"buttons\">\n        <Popconfirm\n          title=\"This tag will be deleted.\"\n          onConfirm={removeTag}\n          placement=\"left\"\n          cancelText=\"Cancel\"\n          icon={<DeleteOutlined />}\n          okText=\"Delete\"\n          okType=\"danger\"\n          okButtonProps={{ type: \"primary\" }}\n        >\n          <Button danger>Delete</Button>\n        </Popconfirm>\n        <Button onClick={cancelEditing}>Cancel</Button>\n        <Button type=\"primary\" disabled={!tagName} onClick={finishEditing}>\n          OK\n        </Button>\n      </div>\n    </>\n  );\n\n  return (\n    <SwipeDelete\n      className=\"tag-wrapper\"\n      onDelete={removeTag}\n      disable={tagEditing}\n    >\n      <div\n        className=\"tag-item\"\n        data-curr={curr}\n        data-editing={tagEditing}\n        onClick={() => setCurrTagID(uid)}\n        style={getColorPalette(color)}\n      >\n        {tagEditing ? editingPanel : displayPanel}\n      </div>\n    </SwipeDelete>\n  );\n};\n\nconst NewTagItem: FC<{ setAdding: Setter<boolean> } & MenuProps> = ({\n  setAdding,\n  setAllTags,\n}) => {\n  const [tagName, setTagName] = useState(\"\");\n  const [tagColor, setTagColor] = useState(getRandomColor());\n\n  const addTag = () => {\n    const name = tagName.trim();\n    if (!name) return;\n    addNewTag(name, tagColor).then(setAllTags);\n    setAdding(false);\n  };\n\n  return (\n    <div className=\"tag-wrapper\">\n      <div className=\"tag-item\" data-editing>\n        <TagInput\n          tagName={tagName}\n          setTagName={setTagName}\n          tagColor={tagColor}\n          setTagColor={setTagColor}\n        />\n        <div className=\"buttons\">\n          <Button onClick={() => setAdding(false)}>Cancel</Button>\n          <Button type=\"primary\" disabled={!tagName} onClick={addTag}>\n            OK\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const SideMenu: FC<MenuProps> = (props) => {\n  const { allTags, currTagID, allNotes, setCurrTagID } = props;\n  const [adding, setAdding] = useState(false);\n  const [asideOpen, setAsideOpen] = useAsideOpen();\n\n  const allNoteTag = (\n    <div className=\"tag-wrapper\">\n      <div\n        className=\"tag-item\"\n        data-curr={currTagID === \"DEFAULT\"}\n        onClick={() => setCurrTagID(\"DEFAULT\")}\n      >\n        <ContainerOutlined className=\"all-note-icon\" />\n        <span className=\"tag-name\">All Notes</span>\n        <span className=\"tag-num\">{Object.keys(allNotes).length}</span>\n      </div>\n    </div>\n  );\n\n  const header = (\n    <header>\n      <Button\n        className=\"aside-btn\"\n        type=\"text\"\n        icon={<MenuOutlined />}\n        onClick={() => setAsideOpen(false)}\n      />\n      <h2 className=\"logo\">Multibility</h2>\n      <Button\n        className=\"new-tag-btn\"\n        type=\"text\"\n        icon={<PlusOutlined />}\n        onClick={() => setAdding(true)}\n        disabled={adding}\n      />\n    </header>\n  );\n\n  return (\n    <aside data-open={asideOpen} onClick={() => setAsideOpen(false)}>\n      <div className=\"side-menu\" onClick={(e) => e.stopPropagation()}>\n        {header}\n        <div className=\"tag-list\">\n          {allNoteTag}\n          <SwipeDeleteProvider>\n            {Object.values(allTags).map((tag) => (\n              <TagItem key={tag.uid} noteTag={tag} {...props} />\n            ))}\n          </SwipeDeleteProvider>\n          {adding && <NewTagItem setAdding={setAdding} {...props} />}\n        </div>\n      </div>\n    </aside>\n  );\n};\n","import React, { useState, FC, useEffect } from \"react\";\nimport {\n  Menu,\n  Input,\n  Button,\n  message,\n  Popover,\n  Progress,\n  Popconfirm,\n} from \"antd\";\nimport {\n  UserOutlined,\n  ClearOutlined,\n  InboxOutlined,\n  FilePdfOutlined,\n  SettingOutlined,\n  CaretDownOutlined,\n  ArrowLeftOutlined,\n} from \"@ant-design/icons\";\nimport { CSSTransitionProps } from \"react-transition-group/CSSTransition\";\nimport { ActiveKeyProvider, useActiveKey } from \"lib/hooks\";\nimport { getUserName, saveUserName } from \"lib/user\";\nimport { clearImageCache } from \"lib/note/imgCache\";\nimport { createNewNote } from \"lib/note/archive\";\nimport { CSSTransition } from \"react-transition-group\";\nimport localforage from \"localforage\";\nimport { MenuProps } from \"../Menu\";\nimport \"./others.sass\";\n\nconst SeconaryMenu: FC<\n  {\n    title: string;\n    keyName: string;\n  } & CSSTransitionProps\n> = ({ children, title, keyName, ...cssTransProps }) => {\n  const [active, setActive] = useActiveKey();\n  return (\n    <CSSTransition in={active === keyName} {...cssTransProps}>\n      <div className=\"secondary\">\n        <>\n          <nav>\n            <Button\n              type=\"text\"\n              shape=\"circle\"\n              onClick={() => setActive(\"MENU\")}\n              icon={<ArrowLeftOutlined />}\n            />\n            <h3>{title}</h3>\n          </nav>\n          {children}\n        </>\n      </div>\n    </CSSTransition>\n  );\n};\n\nconst UploadPdfPage: FC<MenuProps> = ({\n  currTagID,\n  setAllTags,\n  setAllNotes,\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [percent, setPercent] = useState(0);\n\n  async function handleFile(file: File) {\n    if (file.type !== \"application/pdf\") return;\n    setLoading(true);\n    const { LoadPDF } = await import(\"lib/note/pdfImage\");\n    const note = await LoadPDF(file, setPercent);\n    note.tagID = currTagID;\n    const { tags, allNotes } = await createNewNote(note);\n    setAllTags(tags);\n    setAllNotes(allNotes);\n    setLoading(false);\n    message.success(\"PDF Loaded\");\n    return false;\n  }\n\n  return (\n    <label>\n      <div className=\"pdf-upload\">\n        <div className=\"icon-wrapper\">\n          {loading ? (\n            <Progress width={48} type=\"circle\" percent={percent} />\n          ) : (\n            <InboxOutlined className=\"inbox-icon\" />\n          )}\n        </div>\n        <p className=\"hint\">Click to import a pdf file.</p>\n      </div>\n      <input\n        type=\"file\"\n        multiple={false}\n        accept=\".pdf\"\n        onChange={({ target: { files } }) => {\n          const file = files && files[0];\n          if (!file) return;\n          handleFile(file);\n        }}\n      />\n    </label>\n  );\n};\n\nconst ProfilePage = () => {\n  const [, setActive] = useActiveKey();\n  const userName = getUserName();\n  const [name, setName] = useState(userName);\n  const handleEnter = () => {\n    if (!name) return;\n    saveUserName(name);\n    setActive(\"MENU\");\n  };\n  return (\n    <div className=\"profile-page\">\n      <Input\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n        prefix={<UserOutlined />}\n        allowClear\n      />\n      <Button\n        disabled={userName === name || !name}\n        onClick={handleEnter}\n        type=\"primary\"\n        block\n      >\n        OK\n      </Button>\n    </div>\n  );\n};\n\nconst SettingsPage: FC = () => {\n  const clearAll = async () => {\n    await localforage.clear();\n    await clearImageCache();\n    localStorage.clear();\n    window.location.reload();\n  };\n\n  return (\n    <div className=\"setting-menu\">\n      <Popconfirm\n        title=\"Everything will be deleted.\"\n        onConfirm={clearAll}\n        icon={<ClearOutlined />}\n        okText=\"Delete\"\n        okType=\"danger\"\n        okButtonProps={{ type: \"primary\" }}\n        cancelText=\"Cancel\"\n        placement=\"bottom\"\n      >\n        <Button icon={<ClearOutlined />} danger block>\n          Clear all\n        </Button>\n      </Popconfirm>\n    </div>\n  );\n};\n\nconst menuItems = [\n  {\n    key: \"PDF\",\n    label: \"Import PDF\",\n    icon: <FilePdfOutlined />,\n  },\n  {\n    key: \"PROFILE\",\n    label: \"My profile\",\n    icon: <UserOutlined />,\n  },\n  {\n    key: \"SETTINGS\",\n    label: \"Settings\",\n    icon: <SettingOutlined />,\n  },\n];\n\nconst PrimaryMenu = () => {\n  const [, setActive] = useActiveKey();\n  return (\n    <div className=\"primary-menu\">\n      <Menu onClick={({ key }) => setActive(key)} items={menuItems} />\n    </div>\n  );\n};\n\nconst OthersPage: FC<MenuProps> = (props) => {\n  const [height, setHeight] = useState(0);\n  const [active, setActive] = useActiveKey();\n\n  const calcHeight = (el: HTMLElement) => {\n    setHeight(el.clientHeight);\n  };\n\n  const cssTransProps = {\n    timeout: 300,\n    onEnter: calcHeight,\n    unmountOnExit: true,\n  };\n\n  useEffect(() => setActive(\"MENU\"), [setActive]);\n\n  const components: Record<string, React.ReactNode> = {\n    PDF: <UploadPdfPage {...props} />,\n    PROFILE: <ProfilePage />,\n    SETTINGS: <SettingsPage />,\n  };\n\n  return (\n    <section className=\"others-menu\" style={{ height }}>\n      <CSSTransition in={active === \"MENU\"} {...cssTransProps}>\n        <PrimaryMenu />\n      </CSSTransition>\n      {menuItems.map(({ key, label }) => (\n        <SeconaryMenu key={key} keyName={key} title={label} {...cssTransProps}>\n          {components[key]}\n        </SeconaryMenu>\n      ))}\n    </section>\n  );\n};\n\nexport const OthersMenu: FC<MenuProps> = (props) => {\n  return (\n    <Popover\n      placement=\"bottomRight\"\n      trigger=\"click\"\n      content={\n        <ActiveKeyProvider initKey=\"\">\n          <OthersPage {...props} />\n        </ActiveKeyProvider>\n      }\n      zIndex={900}\n    >\n      <Button className=\"small\" type=\"text\" icon={<CaretDownOutlined />} />\n      <Button className=\"large\" shape=\"circle\" icon={<CaretDownOutlined />} />\n    </Popover>\n  );\n};\n","import { Button, Popover } from \"antd\";\nimport { MenuOutlined, FormOutlined, TeamOutlined } from \"@ant-design/icons\";\nimport { FC, useState } from \"react\";\nimport { createEmptyNote } from \"lib/note/note\";\nimport { createNewNote } from \"lib/note/archive\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getNoteID } from \"lib/network/http\";\nimport { PasscodeInput } from \"antd-mobile\";\nimport { OthersMenu } from \"./Others\";\nimport { useAsideOpen } from \"lib/hooks\";\nimport { MenuProps } from \"../Menu\";\n\nexport const NoteNav: FC<MenuProps> = (props) => {\n  return (\n    <nav>\n      <Left {...props} />\n      <Right {...props} />\n    </nav>\n  );\n};\n\nconst Left: FC<MenuProps> = ({ allTags, currTagID }) => {\n  const [, setAsideOpen] = useAsideOpen();\n\n  const title = allTags[currTagID]?.name ?? \"All notes\";\n  return (\n    <div className=\"nav-left\">\n      <Button\n        className=\"aside-btn small\"\n        type=\"text\"\n        icon={<MenuOutlined />}\n        onClick={() => setAsideOpen(true)}\n      />\n      <h2>\n        <b>{title}</b>\n      </h2>\n    </div>\n  );\n};\n\nconst Right: FC<MenuProps> = (props) => {\n  return (\n    <div className=\"nav-right\">\n      <NewNoteButton {...props} />\n      <JoinTeamButton />\n      <OthersMenu {...props} />\n    </div>\n  );\n};\n\nconst NewNoteButton: FC<MenuProps> = ({\n  currTagID,\n  setAllTags,\n  setAllNotes,\n}) => {\n  async function addNewNote() {\n    const note = createEmptyNote();\n    note.tagID = currTagID;\n    const { tags, allNotes } = await createNewNote(note);\n    setAllTags(tags);\n    setAllNotes(allNotes);\n  }\n\n  return (\n    <>\n      <Button\n        className=\"new-note large\"\n        type=\"primary\"\n        shape=\"round\"\n        onClick={addNewNote}\n        icon={<FormOutlined />}\n      >\n        New\n      </Button>\n      <Button\n        className=\"new-note small\"\n        type=\"link\"\n        onClick={addNewNote}\n        icon={<FormOutlined />}\n      />\n    </>\n  );\n};\n\nconst JoinTeamButton = () => {\n  const [roomCode, setRoomCode] = useState(\"\");\n  const [wrong, setWrong] = useState(false);\n\n  const nav = useNavigate();\n  async function handleSubmit(code: string) {\n    const noteID = await getNoteID(code);\n    if (noteID) return nav(`/team/${noteID}`);\n    setRoomCode(\"\");\n    setWrong(true);\n  }\n\n  return (\n    <Popover\n      placement=\"bottomRight\"\n      trigger=\"click\"\n      title=\"Join a team note\"\n      destroyTooltipOnHide\n      onOpenChange={() => setWrong(false)}\n      content={\n        <PasscodeInput\n          plain\n          length={4}\n          error={wrong}\n          value={roomCode}\n          onChange={(v) => {\n            setWrong(false);\n            setRoomCode(v);\n          }}\n          onFill={handleSubmit}\n        />\n      }\n    >\n      <Button className=\"team-btn large\" shape=\"round\" icon={<TeamOutlined />}>\n        Team\n      </Button>\n      <Button className=\"team-btn small\" type=\"text\" icon={<TeamOutlined />} />\n    </Popover>\n  );\n};\n","import {\n  Button,\n  ButtonProps,\n  Dropdown,\n  Input,\n  Menu,\n  Popconfirm,\n  MenuProps as AntdMenuProps,\n} from \"antd\";\nimport { FC } from \"react\";\nimport {\n  SwapOutlined,\n  TagsOutlined,\n  FileOutlined,\n  DeleteOutlined,\n  SearchOutlined,\n  SelectOutlined,\n  FileTextOutlined,\n  ArrowLeftOutlined,\n  SortAscendingOutlined,\n} from \"@ant-design/icons\";\nimport { Setter } from \"lib/hooks\";\nimport { ColorCirle } from \"component/ColorCircle\";\nimport { deleteNote, moveNoteTag, NoteTag } from \"lib/note/archive\";\nimport { Set } from \"immutable\";\nimport { MenuProps } from \"../Menu\";\nimport { NoteInfo } from \"lib/note/note\";\n\nexport const ListTools: FC<\n  {\n    sortType: string;\n    setSortType: Setter<string>;\n    editing: boolean;\n    setEditing: Setter<boolean>;\n    searchText: string;\n    setSearchText: Setter<string>;\n    selectedNotes: Set<string>;\n  } & MenuProps\n> = ({\n  sortType,\n  setSortType,\n  editing,\n  setEditing,\n  searchText,\n  setSearchText,\n  selectedNotes,\n  setAllNotes,\n  setAllTags,\n  allTags,\n}) => {\n  const menu: AntdMenuProps = {\n    items: [\n      {\n        type: \"group\",\n        children: [\n          { icon: <FileOutlined />, key: \"CREATE\", label: \"Date created\" },\n          { icon: <FileTextOutlined />, key: \"LAST\", label: \"Date modified\" },\n          {\n            icon: <SortAscendingOutlined />,\n            key: \"NAME\",\n            label: \"Name\",\n          },\n        ],\n        label: \"Sort by\",\n        className: \"sort-drop\",\n      },\n    ],\n    onClick({ key }) {\n      setSortType(key);\n    },\n    selectedKeys: [sortType],\n  };\n\n  const btnProps: ButtonProps = { type: \"text\", shape: \"circle\" };\n  const sortButton = (\n    <Dropdown menu={menu} trigger={[\"click\"]} placement=\"bottomRight\">\n      <Button\n        className=\"sort-btn\"\n        icon={<SwapOutlined rotate={90} />}\n        {...btnProps}\n      />\n    </Dropdown>\n  );\n  const disabled = selectedNotes.size === 0;\n\n  const deleteNotes = async () => {\n    let tags: Record<string, NoteTag> | undefined;\n    let allNotes: Record<string, NoteInfo> | undefined;\n    for (let uid of selectedNotes.toArray()) {\n      const res = await deleteNote(uid);\n      tags = res.tags;\n      allNotes = res.allNotes;\n    }\n    tags && setAllTags(tags);\n    allNotes && setAllNotes(allNotes);\n  };\n\n  const moveNotes = async (tagID: string) => {\n    let tags: Record<string, NoteTag> | undefined;\n    let allNotes: Record<string, NoteInfo> | undefined;\n    for (let noteID of selectedNotes.toArray()) {\n      const res = await moveNoteTag(noteID, tagID);\n      tags = res.tags;\n      allNotes = res.allNotes;\n    }\n    tags && setAllTags(tags);\n    allNotes && setAllNotes(allNotes);\n  };\n\n  const deleteButton = (\n    <Popconfirm\n      title=\"Notes will be deleted.\"\n      onConfirm={deleteNotes}\n      icon={<DeleteOutlined />}\n      placement=\"bottom\"\n      cancelText=\"Cancel\"\n      disabled={disabled}\n      okText=\"Delete\"\n      okType=\"danger\"\n      okButtonProps={{ type: \"primary\" }}\n    >\n      <Button\n        className=\"del-btn\"\n        shape=\"round\"\n        type=\"text\"\n        disabled={disabled}\n        danger={!disabled}\n        icon={<DeleteOutlined />}\n      >\n        Delete\n      </Button>\n    </Popconfirm>\n  );\n\n  const ColorLabel: FC<{\n    color: string;\n    name: string;\n  }> = ({ color, name }) => (\n    <div className=\"tag-select\">\n      <ColorCirle color={color} className=\"tag-circle\" />\n      <span className=\"name\">{name}</span>\n    </div>\n  );\n\n  const overlay = (\n    <Menu\n      onClick={({ key }) => moveNotes(key)}\n      items={[\n        {\n          key: \"DEFAULT\",\n          label: <ColorLabel color=\"#eee\" name=\"No tag\" />,\n        },\n        ...Object.values(allTags).map((t) => ({\n          key: t.uid,\n          label: <ColorLabel color={t.color} name={t.name} />,\n        })),\n      ]}\n    />\n  );\n\n  const tagButton = (\n    <Dropdown\n      overlayClassName=\"tag-drop\"\n      disabled={disabled}\n      overlay={overlay}\n      trigger={[\"click\"]}\n      placement=\"bottom\"\n    >\n      <Button\n        shape=\"round\"\n        type=\"text\"\n        className=\"tag-btn\"\n        icon={<TagsOutlined />}\n        style={{ transition: \"none\" }}\n      >\n        Tag\n      </Button>\n    </Dropdown>\n  );\n\n  return (\n    <div className=\"list-tools\" data-editing={editing}>\n      {editing ? (\n        <>\n          <Button\n            onClick={() => setEditing(false)}\n            icon={<ArrowLeftOutlined />}\n            {...btnProps}\n          />\n          {tagButton}\n          {deleteButton}\n        </>\n      ) : (\n        <>\n          <Button\n            onClick={() => setEditing(true)}\n            icon={<SelectOutlined />}\n            {...btnProps}\n          />\n          <Input\n            value={searchText}\n            onChange={(e) => setSearchText(e.target.value)}\n            className=\"search-input\"\n            prefix={<SearchOutlined />}\n            bordered={false}\n            allowClear\n          />\n          {sortButton}\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { FC, useMemo, useState, useEffect, Suspense } from \"react\";\nimport { deleteNote, editNoteData, loadNote } from \"lib/note/archive\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { CloudTwoTone, CheckCircleFilled } from \"@ant-design/icons\";\nimport { SwipeDelete, SwipeDeleteProvider } from \"component/SwipeDelete\";\nimport { Note, NoteInfo, TeamPageRec } from \"lib/note/note\";\nimport { DrawState } from \"lib/draw/DrawState\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Setter } from \"lib/hooks\";\nimport { List, Set } from \"immutable\";\nimport { Input } from \"antd\";\nimport { loadCachedTeamState } from \"lib/network/http\";\nimport { TeamState } from \"lib/draw/TeamState\";\nimport { getColorPalette } from \"lib/color\";\nimport { NoteNav, ListTools } from \"../Header\";\nimport dayjs from \"dayjs\";\nimport calender from \"dayjs/plugin/calendar\";\nimport { MenuProps } from \"../Menu\";\ndayjs.extend(calender);\n\nexport const NoteList: FC<MenuProps> = (props) => {\n  const [editing, setEditing] = useState(false);\n  const [sortType, setSortType] = useState(\"LAST\");\n  const [searchText, setSearchText] = useState(\"\");\n  const [selectedNotes, setSelectNotes] = useState(Set<string>());\n\n  const { setAllTags, setAllNotes } = props;\n  const removeNote = async (uid: string) => {\n    const { tags, allNotes } = await deleteNote(uid);\n    setAllNotes(allNotes);\n    setAllTags(tags);\n  };\n\n  const { currTagID, allNotes, allTags } = props;\n  const noteList = useMemo(\n    () =>\n      List(\n        (allTags[currTagID]?.notes ?? Object.keys(allNotes))\n          .map((uid) => allNotes[uid])\n          .filter((n): n is NoteInfo => n !== undefined)\n      ),\n    [allNotes, allTags, currTagID]\n  );\n\n  const sortedList = useMemo(() => {\n    const comparator = (t0: number, t1: number) => t1 - t0;\n    switch (sortType) {\n      case \"CREATE\":\n        return noteList.sortBy((n) => n.createTime, comparator);\n      case \"LAST\":\n        return noteList.sortBy((n) => n.lastTime, comparator);\n      case \"NAME\":\n        return noteList.sortBy((n) => n.name.toUpperCase());\n      default:\n        return noteList;\n    }\n  }, [noteList, sortType]);\n\n  const filterdList = useMemo(\n    () =>\n      sortedList.filter((n) =>\n        n.name.toUpperCase().includes(searchText.trim().toUpperCase())\n      ),\n    [searchText, sortedList]\n  );\n\n  useEffect(() => {\n    setSearchText(\"\");\n    setSelectNotes(Set());\n  }, [noteList, editing]);\n\n  return (\n    <div className=\"note-list\">\n      <header>\n        <NoteNav {...props} />\n        <ListTools\n          sortType={sortType}\n          setSortType={setSortType}\n          editing={editing}\n          setEditing={setEditing}\n          searchText={searchText}\n          setSearchText={setSearchText}\n          selectedNotes={selectedNotes}\n          {...props}\n        />\n      </header>\n      <SwipeDeleteProvider>\n        <TransitionGroup component={null}>\n          {filterdList.map((noteInfo, index) => {\n            const { uid } = noteInfo;\n            const selected = selectedNotes.has(uid);\n            const nextUid = filterdList.get(index + 1)?.uid;\n            const last = (nextUid && selectedNotes.has(nextUid)) !== selected;\n            return (\n              <CSSTransition key={uid} timeout={300}>\n                {(state) => (\n                  <SwipeDelete\n                    className=\"note-wrapper\"\n                    onDelete={() => removeNote(uid)}\n                    disable={editing}\n                    data-last={last}\n                    data-selected={selected}\n                  >\n                    <NoteItem\n                      timgShow={/^(entered|exiting)$/.test(state)}\n                      noteInfo={noteInfo}\n                      selected={selected}\n                      editing={editing}\n                      setSelectNotes={setSelectNotes}\n                      {...props}\n                    />\n                  </SwipeDelete>\n                )}\n              </CSSTransition>\n            );\n          })}\n        </TransitionGroup>\n      </SwipeDeleteProvider>\n    </div>\n  );\n};\n\nconst NoteItem: FC<\n  {\n    noteInfo: NoteInfo;\n    selected: boolean;\n    editing: boolean;\n    setSelectNotes: Setter<Set<string>>;\n    timgShow: boolean;\n  } & MenuProps\n> = ({\n  noteInfo,\n  selected,\n  editing,\n  setSelectNotes,\n  setAllNotes,\n  allTags,\n  currTagID,\n  timgShow,\n}) => {\n  const { team, uid, name, lastTime, tagID } = noteInfo;\n  const date = useMemo(() => dayjs(lastTime).calendar(), [lastTime]);\n  const href = `${team ? \"team\" : \"reader\"}/${uid}`;\n\n  const [noteName, setNoteName] = useState(name);\n  const nav = useNavigate();\n\n  const saveNoteName = () => {\n    const newName = noteName.trim();\n    if (!newName || newName === name) return setNoteName(name);\n    editNoteData(uid, { name: newName });\n    setAllNotes((prev) => ({ ...prev, [uid]: { ...noteInfo, name: newName } }));\n  };\n\n  const handleClick = () => {\n    if (!editing) return nav(href);\n    setSelectNotes((prev) => {\n      if (prev.has(uid)) return prev.delete(uid);\n      return prev.add(uid);\n    });\n  };\n\n  const tag = allTags[tagID];\n\n  return (\n    <div className=\"note-item\" data-selected={selected} onClick={handleClick}>\n      <div className=\"left\">\n        {timgShow && <NoteTimg uid={uid} />}\n        {team && <CloudTwoTone className=\"cloud-icon\" />}\n        <CheckCircleFilled className=\"checked-icon\" />\n      </div>\n      <div className=\"content\">\n        {editing && !selected ? (\n          <Input\n            className=\"name-input\"\n            value={noteName}\n            onChange={(e) => setNoteName(e.target.value)}\n            onClick={(e) => e.stopPropagation()}\n            onBlur={saveNoteName}\n          />\n        ) : (\n          <p className=\"name\">{name}</p>\n        )}\n        <p className=\"info\">\n          <span className=\"date\">{date}</span>\n          {tag && currTagID === \"DEFAULT\" && (\n            <span className=\"tag\" style={getColorPalette(tag.color)}>\n              {tag.name}\n            </span>\n          )}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nconst PageWrapper = React.lazy(() => import(\"component/PageWrapper\"));\n\nconst NoteTimg: FC<{ uid: string }> = ({ uid }) => {\n  const [note, setNote] = useState<Note>();\n  const [teamNote, setTeamNote] = useState<TeamPageRec>();\n  useEffect(() => {\n    loadNote(uid).then(setNote);\n    loadCachedTeamState(uid).then(setTeamNote);\n  }, [uid]);\n\n  const firstID = note?.pageOrder[0] ?? \"\";\n  const firstPage = note?.pageRec[firstID];\n\n  const drawState = useMemo(() => {\n    if (!firstPage) return;\n    const { state, ratio } = firstPage;\n    return DrawState.loadFromFlat(state, ratio);\n  }, [firstPage]);\n  const teamStateMap = useMemo(() => {\n    if (!teamNote || !firstID) return;\n    return TeamState.createFromTeamPages(teamNote).getOnePageStateMap(firstID);\n  }, [teamNote, firstID]);\n\n  if (!firstPage || !drawState) return null;\n  const { ratio, image } = firstPage;\n  return (\n    <div className=\"timg-wrapper\" data-landscape={ratio < 1}>\n      <Suspense fallback={null}>\n        <PageWrapper\n          drawState={drawState}\n          teamStateMap={teamStateMap}\n          thumbnail={image}\n          preview\n        />\n      </Suspense>\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { getAllNotes, getAllTags, NoteTag } from \"lib/note/archive\";\nimport { NoteInfo } from \"lib/note/note\";\nimport { AsideOpenProvider, Setter } from \"lib/hooks\";\nimport { SideMenu } from \"./Aside\";\nimport { NoteList } from \"./NoteList\";\n\nexport interface MenuProps {\n  currTagID: string;\n  allNotes: Record<string, NoteInfo>;\n  allTags: Record<string, NoteTag>;\n  setAllNotes: Setter<Record<string, NoteInfo>>;\n  setAllTags: Setter<Record<string, NoteTag>>;\n  setCurrTagID: Setter<string>;\n}\n\nexport default function MainMenu() {\n  const [allNotes, setAllNotes] = useState<Record<string, NoteInfo>>({});\n  const [allTags, setAllTags] = useState<Record<string, NoteTag>>({});\n  const [currTagID, setCurrTagID] = useState(\"DEFAULT\");\n\n  useEffect(() => {\n    getAllNotes().then(setAllNotes);\n    getAllTags().then(setAllTags);\n    document.title = \"Multibility\";\n  }, []);\n\n  const menuProps: MenuProps = {\n    allNotes,\n    allTags,\n    setAllNotes,\n    setAllTags,\n    currTagID,\n    setCurrTagID,\n  };\n\n  return (\n    <div className=\"main-menu container\">\n      <AsideOpenProvider>\n        <SideMenu {...menuProps} />\n        <NoteList {...menuProps} />\n      </AsideOpenProvider>\n    </div>\n  );\n}\n"],"names":["ColorCirle","color","className","style","backgroundColor","classNames","colors","allColors","getRandomColor","index","Math","floor","random","length","getHashedColor","str","hash","colorPalette","light","dark","getColorPalette","palette","defaultRecord","pageStates","Map","pageInfos","defaultFactory","Record","TeamState","immutable","this","getImmutable","get","pageID","userID","getPageStates","getPageInfos","ratio","has","drawState","pageMap","update","m","set","notePage","setOp","op","getPageRatio","includesPage","prevDs","getOneState","DrawState","ds","setState","pageRec","newTS","Object","entries","state","teamPages","record","forEach","teamPage","states","map","flatState","teamStateMap","ignores","Set","Array","from","filter","isEmpty","deleteAll","keys","every","useTransitionEnd","propertyName","active","resRef","useRef","useState","Promise","res","current","e","ActiveKeyCtx","createContext","useActiveKey","tuple","useContext","useDebugValue","ActiveKeyProvider","children","initKey","Provider","value","AsideOpenCtx","useAsideOpen","AsideOpenProvider","BASE_URL","process","getNoteID","roomCode","axios","data","statusCode","noteID","console","error","getTeamNoteInfo","loadTeamNoteInfo","cb","infoRes","noteInfo","updateTeamNote","withImg","method","url","responseType","onDownloadProgress","loaded","file","Blob","type","saveTeamNote","putNote","loadNote","note","uid","name","pdf","pageOrder","removePageTimg","getUserID","formData","FormData","arrayBuffer","ab","append","headers","hashForage","localforage","updatePages","md5","JSON","stringify","getItem","lastHash","body","setItem","teamForage","getTeamNoteState","loadCachedTeamState","cachedState","params","modified","undefined","imageForage","getImageCache","cacheList","key","includes","id","setImageCache","slice","removeUnusedCache","allKeys","removeItem","clearImageCache","clear","cached","localStorage","getUid","getUserName","saveUserName","trim","SwipeCtx","SwipeDeleteProvider","SwipeDelete","onDelete","disable","nowSwiped","setNowSwiped","swiped","setSwiped","deleting","deleted","setDeleted","height","setHeight","wrapper","useEffect","swipeHandler","useSwipeable","onSwipedLeft","clientHeight","onSwipedRight","preventScrollOnSwipe","trackTouch","transDidEnd","handler","handleClick","onTransitionEnd","ref","onClick","TagInput","tagName","setTagName","tagColor","setTagColor","colorSelector","onSelect","listHeight","virtual","dropdownClassName","c","placeholder","addonBefore","onChange","target","TagItem","noteTag","currTagID","setAllTags","setCurrTagID","notes","tagEditing","setTagEditing","curr","removeTag","deleteTag","tags","finishEditing","newTag","editTag","newAllTags","displayPanel","size","icon","SettingOutlined","editingPanel","title","onConfirm","placement","cancelText","DeleteOutlined","okText","okType","okButtonProps","danger","disabled","NewTagItem","setAdding","addNewTag","then","SideMenu","props","allTags","allNotes","adding","asideOpen","setAsideOpen","allNoteTag","ContainerOutlined","header","MenuOutlined","PlusOutlined","stopPropagation","values","tag","SeconaryMenu","keyName","cssTransProps","setActive","CSSTransition","in","shape","ArrowLeftOutlined","UploadPdfPage","setAllNotes","loading","setLoading","percent","setPercent","LoadPDF","tagID","createNewNote","message","width","InboxOutlined","multiple","accept","files","handleFile","ProfilePage","userName","setName","prefix","UserOutlined","allowClear","block","SettingsPage","clearAll","window","location","reload","ClearOutlined","menuItems","label","FilePdfOutlined","PrimaryMenu","items","OthersPage","timeout","onEnter","el","unmountOnExit","components","PDF","PROFILE","SETTINGS","OthersMenu","trigger","content","zIndex","CaretDownOutlined","NoteNav","Left","Right","NewNoteButton","JoinTeamButton","addNewNote","createEmptyNote","FormOutlined","setRoomCode","wrong","setWrong","nav","useNavigate","code","destroyTooltipOnHide","onOpenChange","plain","v","onFill","TeamOutlined","ListTools","sortType","setSortType","editing","setEditing","searchText","setSearchText","selectedNotes","menu","FileOutlined","FileTextOutlined","SortAscendingOutlined","selectedKeys","btnProps","sortButton","SwapOutlined","rotate","deleteNotes","toArray","deleteNote","moveNotes","moveNoteTag","deleteButton","ColorLabel","overlay","t","tagButton","overlayClassName","TagsOutlined","transition","SelectOutlined","SearchOutlined","bordered","dayjs","calender","NoteList","setSelectNotes","removeNote","noteList","useMemo","List","n","sortedList","comparator","t0","t1","sortBy","createTime","lastTime","toUpperCase","filterdList","TransitionGroup","component","selected","nextUid","last","NoteItem","timgShow","test","team","date","calendar","href","noteName","setNoteName","prev","delete","add","NoteTimg","CloudTwoTone","CheckCircleFilled","onBlur","newName","editNoteData","PageWrapper","React","setNote","teamNote","setTeamNote","firstID","firstPage","getOnePageStateMap","image","Suspense","fallback","thumbnail","preview","MainMenu","getAllNotes","getAllTags","document","menuProps"],"sourceRoot":""}