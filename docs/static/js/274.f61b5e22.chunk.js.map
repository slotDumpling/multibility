{"version":3,"file":"static/js/274.f61b5e22.chunk.js","mappings":"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","sources":["lib/draw/drawCtrl.ts","component/reader/ReaderTools.tsx","lib/draw/StateSet.ts","lib/array.ts","component/ui/DigitDisplay.tsx","component/ui/IconFont.tsx","component/reader/PageNav.tsx","component/reader/DrawTools.tsx","component/draw/SelectTool.tsx","component/draw/Draw.tsx","lib/touch/touch.ts","lib/hooks.ts","component/reader/Reader.tsx","lib/draw/TeamState.ts","lib/network/io.ts","component/reader/Team.tsx","lib/draw/drawer.ts"],"sourcesContent":["import localforage from \"localforage\";\r\n\r\nexport type CtrlMode = \"draw\" | \"erase\" | \"select\";\r\n\r\nexport interface DrawCtrl {\r\n  finger: boolean;\r\n  lineWidth: number;\r\n  eraserWidth: number;\r\n  color: string;\r\n  highlight: boolean;\r\n}\r\n\r\nexport const defaultDrawCtrl: Readonly<DrawCtrl> = {\r\n  finger: true,\r\n  lineWidth: 10,\r\n  eraserWidth: 10,\r\n  color: \"#000000\",\r\n  highlight: false,\r\n};\r\n\r\nexport async function getDrawCtrl() {\r\n  let drawCtrl = (await localforage.getItem(\"DRAW_CTRL\")) as DrawCtrl | null;\r\n  if (!drawCtrl) {\r\n    drawCtrl = defaultDrawCtrl;\r\n    await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n  }\r\n  return drawCtrl;\r\n}\r\n\r\nexport async function saveDrawCtrl(drawCtrl: DrawCtrl) {\r\n  await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n}\r\n","import { Button, Input, message } from \"antd\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nexport const AddPageButton = () => {\r\n  const { addFinalPage } = useContext(ReaderMethodCtx);\r\n  return (\r\n    <div className=\"add-btn-wrapper\">\r\n      <Button\r\n        type=\"dashed\"\r\n        icon={<PlusOutlined />}\r\n        block\r\n        onClick={addFinalPage}\r\n      >\r\n        New page\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const NoteHeader = () => {\r\n  const { noteInfo } = useContext(ReaderStateCtx);\r\n  const [noteName, setNoteName] = useState(\"\");\r\n  useEffect(() => {\r\n    if (!noteInfo) return;\r\n    setNoteName(noteInfo?.name);\r\n  }, [noteInfo]);\r\n\r\n  if (!noteInfo) return null;\r\n\r\n  return (\r\n    <div className=\"note-header\">\r\n      <Input value={noteName} bordered={false} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const showPageDelMsg = (onUndo: () => void) => {\r\n  message.warning({\r\n    content: (\r\n      <>\r\n        One page was deleted.\r\n        <Button\r\n          size=\"small\"\r\n          type=\"link\"\r\n          onClick={() => {\r\n            message.destroy(\"DELETE\");\r\n            onUndo();\r\n          }}\r\n        >\r\n          Undo\r\n        </Button>\r\n      </>\r\n    ),\r\n    key: \"DELETE\",\r\n    duration: 10,\r\n  });\r\n};\r\n","import { List, Map, Record } from \"immutable\";\r\nimport { DrawState, Operation, WIDTH } from \"./DrawState\";\r\nimport { NotePage } from \"../note/note\";\r\n\r\ninterface StateSetRecordType {\r\n  states: Map<string, DrawState>;\r\n  editStack: List<string>;\r\n  undoStack: List<string>;\r\n}\r\n\r\nconst defaultRecord: Readonly<StateSetRecordType> = {\r\n  states: Map(),\r\n  editStack: List(),\r\n  undoStack: List(),\r\n};\r\n\r\ntype StateSetRecord = Record<StateSetRecordType>;\r\nconst defaultFactory = Record(defaultRecord);\r\n\r\nexport type SetOperation = Operation & { pageID: string };\r\n\r\nexport class StateSet {\r\n  constructor(\r\n    private immutable: StateSetRecord,\r\n    public lastOp?: SetOperation\r\n  ) {}\r\n\r\n  static createFromList(list: [string, DrawState][]) {\r\n    return new StateSet(defaultFactory().set(\"states\", Map(list)));\r\n  }\r\n\r\n  static createFromPages(\r\n    pageRec: globalThis.Record<string, NotePage>,\r\n    width = WIDTH\r\n  ) {\r\n    const entries = Object.entries(pageRec);\r\n    return StateSet.createFromList(\r\n      entries.map(([key, { state, ratio }]) => [\r\n        key,\r\n        DrawState.loadFromFlat(state, width, width * ratio),\r\n      ])\r\n    );\r\n  }\r\n\r\n  getImmutable() {\r\n    return this.immutable;\r\n  }\r\n\r\n  getStates() {\r\n    return this.getImmutable().get(\"states\");\r\n  }\r\n\r\n  getOneState(pageID: string) {\r\n    return this.getStates().get(pageID);\r\n  }\r\n\r\n  getEditStack() {\r\n    return this.getImmutable().get(\"editStack\");\r\n  }\r\n\r\n  getUndoStack() {\r\n    return this.getImmutable().get(\"undoStack\");\r\n  }\r\n\r\n  setState(pageID: string, drawState: DrawState) {\r\n    const prevDS = this.getOneState(pageID);\r\n    if (!prevDS || prevDS === drawState) return this;\r\n    let currRecord = this.getImmutable()\r\n      .update(\"states\", (s) => s.set(pageID, drawState))\r\n      .update(\"editStack\", (l) => l.push(pageID))\r\n      .delete(\"undoStack\");\r\n\r\n    const { lastOp } = drawState;\r\n    const lastSetOp = lastOp && { ...lastOp, pageID };\r\n\r\n    return new StateSet(currRecord, lastSetOp);\r\n  }\r\n\r\n  updateState(pageID: string, cb: (prevDS: DrawState) => DrawState) {\r\n    const prevDS = this.getOneState(pageID);\r\n    if (!prevDS) return this;\r\n    const currDS = cb(prevDS);\r\n    return new StateSet(\r\n      this.getImmutable().update(\"states\", (s) => s.set(pageID, currDS))\r\n    );\r\n  }\r\n\r\n  addState(pageID: string, notePage: NotePage, width = WIDTH) {\r\n    const { state, ratio } = notePage;\r\n    const newDS = DrawState.loadFromFlat(state, width, width * ratio);\r\n    const currRecord = this.getImmutable().update(\"states\", (s) =>\r\n      s.set(pageID, newDS)\r\n    );\r\n    return new StateSet(currRecord);\r\n  }\r\n\r\n  deleteState(pageID: string) {\r\n    return new StateSet(\r\n      this.getImmutable().update(\"states\", (s) => s.delete(pageID))\r\n    );\r\n  }\r\n\r\n  isUndoable() {\r\n    return this.getEditStack().size > 0;\r\n  }\r\n\r\n  isRedoable() {\r\n    return this.getUndoStack().size > 0;\r\n  }\r\n\r\n  undo() {\r\n    if (!this.isUndoable()) return this;\r\n    const lastUid = this.getEditStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.undo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"editStack\", (s) => s.pop())\r\n        .update(\"undoStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  redo() {\r\n    if (!this.isRedoable()) return this;\r\n    const lastUid = this.getUndoStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.redo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"undoStack\", (s) => s.pop())\r\n        .update(\"editStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  getLastDS(): [string, DrawState] | undefined {\r\n    const pageID = this.lastOp?.pageID;\r\n    const ds = pageID && this.getOneState(pageID);\r\n    return ds ? [pageID, ds] : undefined;\r\n  }\r\n}\r\n","export function exchange<T>(list: T[], fromIndex: number, toIndex: number) {\r\n  const result = list.slice();\r\n  const [removed] = result.splice(fromIndex, 1);\r\n  result.splice(toIndex, 0, removed);\r\n  return result;\r\n}\r\n\r\nexport function insertAfter<T>(list: T[], prevItem: T, newItem: T) {\r\n  const prevIndex = list.indexOf(prevItem);\r\n  const curr = list.slice();\r\n  if (prevIndex === -1) return curr;\r\n  curr.splice(prevIndex + 1, 0, newItem);\r\n  return curr;\r\n}\r\n","import classNames from \"classnames\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./digitDisplay.sass\";\r\n\r\nfunction num2digits(num: number): number[] {\r\n  return String(num)\r\n    .padStart(4, \"0\")\r\n    .split(\"\")\r\n    .map((s) => Number(s));\r\n}\r\n\r\nexport default function DigitDisplay({ value }: { value: number }) {\r\n  const [randomNum, setRandomNum] = useState(9999);\r\n  const displayNum = value >= 0 ? value : randomNum;\r\n  const digits = num2digits(displayNum);\r\n\r\n  function resetRandom() {\r\n    setRandomNum(Math.floor(Math.random() * 10000));\r\n  }\r\n  useEffect(() => {\r\n    if (value !== -1) return setRandomNum(9999);\r\n    const timer = setTimeout(resetRandom, 100);\r\n    return () => clearTimeout(timer);\r\n  }, [value]);\r\n\r\n  return (\r\n    <div className={classNames(\"digit-display\", { disabled: value === -2 })}>\r\n      {digits.map((d, idx) => (\r\n        <Digit key={idx} digit={d} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Digit({ digit }: { digit: number }) {\r\n  if (!(digit <= 9 && digit >= 0)) {\r\n    return <div className=\"digit\">*</div>;\r\n  }\r\n  return <div className=\"digit\">{digit}</div>;\r\n}\r\n","import { createFromIconfontCN } from \"@ant-design/icons\";\r\n\r\nexport default createFromIconfontCN({\r\n  scriptUrl: \"//at.alicdn.com/t/font_3181679_eb02zt96p4p.js\",\r\n});\r\n","import { Avatar, Button, Drawer, Menu, Popover, Tabs } from \"antd\";\r\nimport React, {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  MouseEvent,\r\n} from \"react\";\r\nimport { PageWrapper, ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport {\r\n  MoreOutlined,\r\n  PlusOutlined,\r\n  CopyOutlined,\r\n  DeleteOutlined,\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n} from \"@ant-design/icons\";\r\nimport IconFont from \"../ui/IconFont\";\r\nimport {\r\n  Draggable,\r\n  Droppable,\r\n  DropResult,\r\n  DragDropContext,\r\n} from \"react-beautiful-dnd\";\r\nimport { AddPageButton } from \"./ReaderTools\";\r\nimport { exchange } from \"../../lib/array\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport classNames from \"classnames\";\r\nimport \"./preview.sass\";\r\nimport { UserAvatar } from \"./DrawTools\";\r\nimport { TeamCtx } from \"./Team\";\r\n\r\nconst PageNavContent = ({\r\n  activeKey,\r\n  setActiveKey,\r\n}: {\r\n  activeKey: string;\r\n  setActiveKey: Setter<string>;\r\n}) => {\r\n  const { pageOrder, inviewPages } = useContext(ReaderStateCtx);\r\n  const { scrollPage, saveReorder } = useContext(ReaderMethodCtx);\r\n  const refRec = useRef<Record<string, HTMLElement>>({});\r\n  const listEl = useRef<HTMLDivElement>();\r\n\r\n  const onDragEnd = ({ source, destination }: DropResult) => {\r\n    if (!destination || !pageOrder) return;\r\n    const { index: fromIndex } = source;\r\n    const { index: toIndex } = destination;\r\n    if (fromIndex === toIndex) return; \r\n    const pageID = pageOrder[fromIndex];\r\n    const newOrder = exchange(pageOrder, fromIndex, toIndex);\r\n    saveReorder(newOrder, true);\r\n    requestAnimationFrame(() => scrollPage(pageID));\r\n  };\r\n\r\n  const currpageID = useMemo(\r\n    () => pageOrder?.find((pageID) => inviewPages.has(pageID)) || \"\",\r\n    [pageOrder, inviewPages]\r\n  );\r\n\r\n  useEffect(() => {\r\n    refRec.current[currpageID]?.scrollIntoView();\r\n    const itemHeight = refRec.current[currpageID]?.clientHeight || 0;\r\n    const listHeight = listEl.current?.clientHeight || 0;\r\n    listEl.current?.scrollBy(0, -listHeight / 2 + itemHeight / 2);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"preview-container\">\r\n      <PreviewTabs activeKey={activeKey} setActiveKey={setActiveKey} />\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"droppable\">\r\n          {({ droppableProps, innerRef, placeholder }) => (\r\n            <div\r\n              className=\"page-list\"\r\n              ref={(e) => {\r\n                innerRef(e);\r\n                if (e) listEl.current = e;\r\n              }}\r\n              {...droppableProps}\r\n            >\r\n              {pageOrder?.map((uid, index) => (\r\n                <PagePreview\r\n                  key={uid}\r\n                  uid={uid}\r\n                  mode={activeKey}\r\n                  pageIndex={index}\r\n                  currpageID={currpageID}\r\n                  refRec={refRec.current}\r\n                />\r\n              ))}\r\n              {placeholder}\r\n              {activeKey === \"ALL\" && <AddPageButton />}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PagePreview: FC<{\r\n  uid: string;\r\n  mode: string;\r\n  pageIndex: number;\r\n  currpageID: string;\r\n  refRec: Record<string, HTMLElement>;\r\n}> = ({ uid, pageIndex, mode, currpageID, refRec }) => {\r\n  const { stateSet, teamState, pageRec } = useContext(ReaderStateCtx);\r\n  const { scrollPage, switchPageMarked } = useContext(ReaderMethodCtx);\r\n  const { ignores } = useContext(TeamCtx);\r\n  const [chosen, setChosen] = useState(\"\");\r\n\r\n  const page = pageRec && pageRec[uid];\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageState(uid);\r\n  const userIDs = useMemo(\r\n    () =>\r\n      teamState\r\n        ?.getOnePageValidUser(uid)\r\n        .filter((userID) => !ignores.has(userID)),\r\n    [teamState, ignores, uid]\r\n  );\r\n  if (!page || !drawState) return null;\r\n\r\n  if (\r\n    mode === \"WRITTEN\" &&\r\n    drawState.isEmpty() &&\r\n    (!teamStateMap || teamStateMap.every((ds) => ds.isEmpty()))\r\n  ) {\r\n    return null;\r\n  } else if (mode === \"MARKED\" && !page.marked) {\r\n    return null;\r\n  }\r\n\r\n  const switchMarked = (e: MouseEvent<HTMLSpanElement>) => {\r\n    switchPageMarked(uid);\r\n    e.stopPropagation();\r\n  };\r\n  const curr = currpageID === uid;\r\n  const dragDisabled = mode !== \"ALL\";\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={uid}\r\n      index={pageIndex}\r\n      isDragDisabled={dragDisabled}\r\n    >\r\n      {(\r\n        { innerRef, draggableProps, dragHandleProps },\r\n        { isDragging: drag }\r\n      ) => {\r\n        const { image, marked } = page;\r\n        return (\r\n          <div\r\n            ref={(e) => {\r\n              innerRef(e);\r\n              if (e) refRec[uid] = e;\r\n            }}\r\n            className={classNames(\"page\", { curr, drag })}\r\n            onClick={() => scrollPage(uid)}\r\n            {...draggableProps}\r\n            {...dragHandleProps}\r\n          >\r\n            <PageWrapper\r\n              uid={uid}\r\n              drawState={teamStateMap?.get(chosen) || drawState}\r\n              teamStateMap={chosen ? undefined : teamStateMap}\r\n              thumbnail={image}\r\n              preview\r\n            />\r\n            <span\r\n              className={classNames(\"bookmark\", { marked })}\r\n              onClickCapture={switchMarked}\r\n            />\r\n            <span className=\"index\">{pageIndex + 1}</span>\r\n            <TeamAvatars\r\n              userIDs={userIDs}\r\n              chosen={chosen}\r\n              setChosen={setChosen}\r\n            />\r\n            <PreviewOption uid={uid} />\r\n          </div>\r\n        );\r\n      }}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst TeamAvatars: FC<{\r\n  userIDs?: string[];\r\n  chosen: string;\r\n  setChosen: Setter<string>;\r\n}> = ({ userIDs, chosen, setChosen }) => {\r\n  return (\r\n    <Avatar.Group\r\n      maxCount={2}\r\n      size=\"default\"\r\n      className={classNames(\"team-group\", { chosen })}\r\n    >\r\n      {userIDs?.map((userID) => (\r\n        <UserAvatar\r\n          key={userID}\r\n          size=\"default\"\r\n          userID={userID}\r\n          className=\"preview-avatar\"\r\n          chosen={chosen === userID}\r\n          onClick={() => setChosen((prev) => (prev === userID ? \"\" : userID))}\r\n        />\r\n      ))}\r\n    </Avatar.Group>\r\n  );\r\n};\r\n\r\nconst PreviewOption = ({ uid }: { uid: string }) => {\r\n  const [popShow, setPopShow] = useState(false);\r\n  const { addPage, deletePage } = useContext(ReaderMethodCtx);\r\n\r\n  const menu = (\r\n    <Menu\r\n      onClick={({ key, domEvent }) => {\r\n        if (key === \"ADD\") {\r\n          addPage(uid);\r\n        } else if (key === \"COPY\") {\r\n          addPage(uid, true);\r\n        } else if (key === \"DELETE\") {\r\n          deletePage(uid);\r\n        }\r\n        domEvent.stopPropagation();\r\n        setPopShow(false);\r\n      }}\r\n      items={[\r\n        { key: \"ADD\", icon: <PlusOutlined />, label: \"Add page\" },\r\n        { key: \"COPY\", icon: <CopyOutlined />, label: \"Duplicate\" },\r\n        {\r\n          key: \"DELETE\",\r\n          icon: <DeleteOutlined />,\r\n          label: \"Delete\",\r\n          danger: true,\r\n        },\r\n      ]}\r\n    ></Menu>\r\n  );\r\n  return (\r\n    <Popover\r\n      content={menu}\r\n      trigger=\"click\"\r\n      placement=\"left\"\r\n      visible={popShow}\r\n      onVisibleChange={setPopShow}\r\n      destroyTooltipOnHide\r\n    >\r\n      <span\r\n        className=\"option\"\r\n        onClickCapture={(e) => {\r\n          setPopShow((prev) => !prev);\r\n          e.stopPropagation();\r\n        }}\r\n      >\r\n        <MoreOutlined />\r\n      </span>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst PreviewTabs = ({\r\n  activeKey,\r\n  setActiveKey,\r\n}: {\r\n  activeKey: string;\r\n  setActiveKey: (key: string) => void;\r\n}) => {\r\n  const { TabPane } = Tabs;\r\n  return (\r\n    <Tabs\r\n      className=\"tabs\"\r\n      activeKey={activeKey}\r\n      onChange={setActiveKey}\r\n      tabBarGutter={10}\r\n      size=\"small\"\r\n      centered\r\n    >\r\n      <TabPane tab={<IconFont type=\"icon-uf_paper\" />} key=\"ALL\" />\r\n      <TabPane tab={<IconFont type=\"icon-bookmark2\" />} key=\"MARKED\" />\r\n      <TabPane tab={<IconFont type=\"icon-write\" />} key=\"WRITTEN\" />\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default function PageNav() {\r\n  const [navOn, setNavOn] = useState(false);\r\n  const [activeKey, setActiveKey] = useState<string>(\"ALL\");\r\n  const title = {\r\n    ALL: \"All Pages\",\r\n    MARKED: \"Bookmarks\",\r\n    WRITTEN: \"Notes\",\r\n  }[activeKey];\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        type=\"text\"\r\n        icon={navOn ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\r\n        onClick={() => setNavOn((prev) => !prev)}\r\n      />\r\n      <Drawer\r\n        visible={navOn}\r\n        onClose={() => setNavOn(false)}\r\n        width={200}\r\n        title={title}\r\n        closable={false}\r\n        className=\"preview-drawer\"\r\n        contentWrapperStyle={{ boxShadow: \"none\" }}\r\n        bodyStyle={{ padding: 0, overflow: \"hidden\" }}\r\n        headerStyle={{ textAlign: \"center\", borderTop: \"1px solid #eee\" }}\r\n        destroyOnClose\r\n      >\r\n        <PageNavContent activeKey={activeKey} setActiveKey={setActiveKey} />\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","import React, {\r\n  FC,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  CSSProperties,\r\n} from \"react\";\r\nimport {\r\n  Badge,\r\n  Alert,\r\n  Avatar,\r\n  Button,\r\n  Slider,\r\n  Divider,\r\n  message,\r\n  Popover,\r\n  Popconfirm,\r\n} from \"antd\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport DigitDisplay from \"../ui/DigitDisplay\";\r\nimport { colors, getHashedColor } from \"../../lib/color\";\r\nimport { getUserID, saveUserName } from \"../../lib/user\";\r\nimport { DrawCtrl } from \"../../lib/draw/drawCtrl\";\r\nimport PageNav from \"./PageNav\";\r\nimport {\r\n  HomeFilled,\r\n  EyeOutlined,\r\n  FormOutlined,\r\n  UndoOutlined,\r\n  RedoOutlined,\r\n  SaveOutlined,\r\n  TeamOutlined,\r\n  CopyOutlined,\r\n  CheckOutlined,\r\n  ExpandOutlined,\r\n  ReloadOutlined,\r\n  ShareAltOutlined,\r\n  HighlightOutlined,\r\n  DisconnectOutlined,\r\n  EyeInvisibleOutlined,\r\n  UsergroupAddOutlined,\r\n} from \"@ant-design/icons\";\r\nimport IconFont from \"../ui/IconFont\";\r\nimport \"./drawTools.sass\";\r\nimport { putNote } from \"../../lib/network/http\";\r\nimport { editNoteData } from \"../../lib/note/archive\";\r\nimport classNames from \"classnames\";\r\nimport { AvatarSize } from \"antd/lib/avatar/SizeContext\";\r\nimport copy from \"clipboard-copy\";\r\n\r\nexport default function DrawTools({\r\n  handleUndo,\r\n  handleRedo,\r\n  instantSave,\r\n}: {\r\n  handleUndo: () => void;\r\n  handleRedo: () => void;\r\n  instantSave: () => Promise<void> | undefined;\r\n}) {\r\n  const { saved, stateSet, teamOn, mode, drawCtrl } =\r\n    useContext(ReaderStateCtx);\r\n  const { setDrawCtrl, setMode } = useContext(ReaderMethodCtx);\r\n  const { finger } = drawCtrl;\r\n\r\n  const nav = useNavigate();\r\n\r\n  const updateDrawCtrl = (updated: Partial<DrawCtrl>) => {\r\n    setDrawCtrl((prev) => ({ ...prev, ...updated }));\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"left\">\r\n        <Button\r\n          type=\"text\"\r\n          onClick={async () => {\r\n            await instantSave();\r\n            nav(\"/\");\r\n          }}\r\n          icon={<HomeFilled style={{ opacity: 0.8 }} />}\r\n        />\r\n        <br />\r\n        <Button\r\n          type=\"text\"\r\n          className=\"save\"\r\n          onClick={instantSave}\r\n          disabled={saved}\r\n          icon={<SaveOutlined />}\r\n        />\r\n      </div>\r\n      <div className=\"middle\">\r\n        <Button\r\n          type=\"text\"\r\n          shape=\"circle\"\r\n          icon={<UndoOutlined />}\r\n          onClick={handleUndo}\r\n          disabled={!stateSet?.isUndoable()}\r\n        />\r\n        <Button\r\n          className=\"redo\"\r\n          type=\"text\"\r\n          shape=\"circle\"\r\n          icon={<RedoOutlined />}\r\n          onClick={handleRedo}\r\n          disabled={!stateSet?.isRedoable()}\r\n        />\r\n        <br />\r\n        <PenButton updateDrawCtrl={updateDrawCtrl} />\r\n        <EraserButton updateDrawCtrl={updateDrawCtrl} />\r\n        <Button\r\n          type={[\"select\", \"selected\"].includes(mode) ? \"default\" : \"text\"}\r\n          shape=\"circle\"\r\n          onClick={() => setMode(\"select\")}\r\n          icon={<ExpandOutlined />}\r\n        />\r\n        <Button\r\n          className=\"finger\"\r\n          type={finger ? \"primary\" : \"text\"}\r\n          ghost={finger}\r\n          shape=\"circle\"\r\n          onClick={() => updateDrawCtrl({ finger: !finger })}\r\n          icon={<IconFont type=\"icon-finger\" />}\r\n        />\r\n      </div>\r\n      <div className=\"right\">\r\n        {teamOn && <RoomInfo />}\r\n        {teamOn || <JoinRoom instantSave={instantSave} />}\r\n        <br />\r\n        <PageNav />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nconst PenButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const { mode, drawCtrl } = useContext(ReaderStateCtx);\r\n  const { setMode } = useContext(ReaderMethodCtx);\r\n  return mode === \"draw\" ? (\r\n    <Popover\r\n      content={<PenPanel updateDrawCtrl={updateDrawCtrl} drawCtrl={drawCtrl} />}\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button type=\"default\" shape=\"circle\" icon={<HighlightOutlined />} />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      shape=\"circle\"\r\n      onClick={() => setMode(\"draw\")}\r\n      icon={<HighlightOutlined />}\r\n    />\r\n  );\r\n};\r\n\r\nexport const PenPanel: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n  drawCtrl: DrawCtrl;\r\n}> = ({ updateDrawCtrl, drawCtrl }) => {\r\n  const { lineWidth, highlight, color } = drawCtrl;\r\n  const [tempLineWidth, setTempLineWidth] = useState(lineWidth);\r\n\r\n  return (\r\n    <div className=\"pen-panel\">\r\n      <div className=\"pen-status\">\r\n        <Slider\r\n          min={5}\r\n          max={100}\r\n          defaultValue={tempLineWidth}\r\n          onChange={setTempLineWidth}\r\n          onAfterChange={(lineWidth) => updateDrawCtrl({ lineWidth })}\r\n        />\r\n        <Button\r\n          type={highlight ? \"primary\" : \"text\"}\r\n          ghost={highlight}\r\n          shape=\"circle\"\r\n          icon={<IconFont type=\"icon-Highlight\" />}\r\n          onClick={() => updateDrawCtrl({ highlight: !highlight })}\r\n        />\r\n      </div>\r\n      <ColorSelect updateDrawCtrl={updateDrawCtrl} color={color} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ColorSelect: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n  color: string;\r\n}> = ({ updateDrawCtrl, color }) => {\r\n  return (\r\n    <div className=\"color-select\">\r\n      {colors.map((c) => (\r\n        <label key={c}>\r\n          <input\r\n            checked={color === c}\r\n            type=\"radio\"\r\n            name=\"color\"\r\n            onChange={() => updateDrawCtrl({ color: c })}\r\n          />\r\n          <div\r\n            className=\"circle\"\r\n            style={{ \"--circle-color\": c } as CSSProperties}\r\n          ></div>\r\n        </label>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EraserButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const { setMode } = useContext(ReaderMethodCtx);\r\n  const {\r\n    mode,\r\n    drawCtrl: { eraserWidth },\r\n  } = useContext(ReaderStateCtx);\r\n  const [tempEraserWidth, setTempEraserWidth] = useState(eraserWidth);\r\n\r\n  const content = (\r\n    <div className=\"pen-panel\">\r\n      <Slider\r\n        min={5}\r\n        max={100}\r\n        defaultValue={tempEraserWidth}\r\n        onChange={setTempEraserWidth}\r\n        onAfterChange={(eraserWidth) => updateDrawCtrl({ eraserWidth })}\r\n      />\r\n    </div>\r\n  );\r\n  return mode === \"erase\" ? (\r\n    <Popover\r\n      content={content}\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button\r\n        type=\"default\"\r\n        shape=\"circle\"\r\n        icon={<IconFont type=\"icon-eraser\" />}\r\n      />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      shape=\"circle\"\r\n      onClick={() => setMode(\"erase\")}\r\n      icon={<IconFont type=\"icon-eraser\" />}\r\n    />\r\n  );\r\n};\r\n\r\nconst UserCard: FC<{ userID: string }> = ({ userID }) => {\r\n  const [renaming, setRenaming] = useState(false);\r\n  const { ignores, setIgnores, resetIO, userRec } = useContext(TeamCtx);\r\n  const userInfo = userRec[userID];\r\n  useEffect(() => setRenaming(false), [userInfo]);\r\n  if (!userInfo) return null;\r\n\r\n  const { userName, online } = userInfo;\r\n  const self = userID === getUserID();\r\n  const ignored = ignores.has(userID) && !self;\r\n\r\n  const switchIgnore = () => {\r\n    setIgnores((prev) => {\r\n      if (prev.has(userID)) return prev.delete(userID);\r\n      return prev.add(userID);\r\n    });\r\n  };\r\n\r\n  const submitRename = (value: string) => {\r\n    const name = value.trim();\r\n    if (!name || name === userName) return setRenaming(false);\r\n    saveUserName(name);\r\n    resetIO();\r\n  };\r\n\r\n  return (\r\n    <div className={classNames(\"user-item\", { online })}>\r\n      <UserAvatar userID={userID} size=\"small\" className=\"room-avatar\" />\r\n      {renaming || <span className=\"user-name\">{userName}</span>}\r\n      {renaming && (\r\n        <Search\r\n          autoFocus\r\n          className=\"rename-input\"\r\n          defaultValue={userName}\r\n          onSearch={submitRename}\r\n          enterButton={<Button icon={<CheckOutlined />} />}\r\n        />\r\n      )}\r\n      {self ? (\r\n        renaming || (\r\n          <Button\r\n            type=\"text\"\r\n            icon={<FormOutlined />}\r\n            onClick={() => setRenaming(true)}\r\n          />\r\n        )\r\n      ) : (\r\n        <Button\r\n          type=\"text\"\r\n          icon={ignored ? <EyeInvisibleOutlined /> : <EyeOutlined />}\r\n          onClick={switchIgnore}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const UserAvatar: FC<{\r\n  userID: string;\r\n  size?: AvatarSize;\r\n  onClick?: () => void;\r\n  chosen?: boolean;\r\n  className?: string;\r\n}> = ({\r\n  userID,\r\n  size = \"default\",\r\n  onClick = () => {},\r\n  chosen = false,\r\n  className,\r\n}) => {\r\n  const { userRec } = useContext(TeamCtx);\r\n  const color = useMemo(() => getHashedColor(userID), [userID]);\r\n  const userInfo = userRec[userID];\r\n  if (!userInfo) return null;\r\n  const { userName } = userInfo;\r\n\r\n  return (\r\n    <Avatar\r\n      className={classNames(className, { chosen })}\r\n      size={size}\r\n      style={{ backgroundColor: color }}\r\n    >\r\n      <div\r\n        className=\"avatar-wrapper\"\r\n        onClickCapture={(e) => {\r\n          e.stopPropagation();\r\n          onClick();\r\n        }}\r\n      >\r\n        {userName?.slice(0, 3)}\r\n      </div>\r\n    </Avatar>\r\n  );\r\n};\r\n\r\nconst RoomInfo: FC = () => {\r\n  const { code, userRec, connected, loadInfo, resetIO } = useContext(TeamCtx);\r\n  const link = window.location.href;\r\n  const share = async () => {\r\n    const selfName = userRec[getUserID()]?.userName;\r\n    try {\r\n      await copy(`${selfName} shared a note with you at 𝐌𝐮𝐥𝐭𝐢𝐛𝐢𝐥𝐢𝐭𝐲.\\n${link}`);\r\n      message.destroy(\"copy\");\r\n      message.success({\r\n        content: \"Share link copied!\",\r\n        icon: <CopyOutlined />,\r\n        key: \"copy\",\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const userList = useMemo(() => {\r\n    const values = Object.values(userRec);\r\n    const selfID = getUserID();\r\n    const selfInfo = userRec[selfID];\r\n    const list = selfInfo ? [selfInfo] : [];\r\n    list.push(\r\n      ...values.filter(({ online, userID }) => online && userID !== selfID),\r\n      ...values.filter(({ online, userID }) => !online && userID !== selfID)\r\n    );\r\n    return list;\r\n  }, [userRec]);\r\n  const onlineNum = userList.filter((u) => u.online).length;\r\n\r\n  const content = (\r\n    <div className=\"team-popover\">\r\n      {connected || (\r\n        <Alert\r\n          className=\"disconn-alert\"\r\n          message=\"Network failed.\"\r\n          icon={<DisconnectOutlined />}\r\n          type=\"error\"\r\n          showIcon\r\n          banner\r\n        />\r\n      )}\r\n      <DigitDisplay value={code} />\r\n      <Button\r\n        icon={<ShareAltOutlined />}\r\n        className=\"share-btn\"\r\n        onClick={share}\r\n        block\r\n      >\r\n        Share\r\n      </Button>\r\n      <Divider />\r\n      <div className=\"user-list\">\r\n        {userList.map((u) => (\r\n          <UserCard key={u.userID} userID={u.userID} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const title = (\r\n    <div className=\"team-title\">\r\n      <span>Team info</span>\r\n      <Button\r\n        shape=\"circle\"\r\n        type=\"text\"\r\n        size=\"small\"\r\n        icon={<ReloadOutlined />}\r\n        onClick={() => {\r\n          loadInfo();\r\n          resetIO();\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Popover\r\n      content={content}\r\n      trigger=\"click\"\r\n      placement=\"bottomRight\"\r\n      title={title}\r\n      defaultVisible\r\n      getPopupContainer={(e) => e}\r\n    >\r\n      <Button\r\n        type=\"text\"\r\n        icon={\r\n          <Badge\r\n            status={connected ? \"success\" : \"error\"}\r\n            count={connected ? onlineNum : \"!\"}\r\n            size=\"small\"\r\n          >\r\n            <TeamOutlined />\r\n          </Badge>\r\n        }\r\n      />\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst JoinRoom: FC<{ instantSave: () => Promise<void> | undefined }> = ({\r\n  instantSave,\r\n}) => {\r\n  const { noteID } = useContext(ReaderStateCtx);\r\n  const nav = useNavigate();\r\n  const createRoom = async () => {\r\n    await instantSave();\r\n    const resCode = await putNote(noteID);\r\n    if (!resCode) {\r\n      message.error(\"Can't create room.\");\r\n      return;\r\n    }\r\n    await editNoteData(noteID, { team: true });\r\n    nav(\"/team/\" + noteID);\r\n  };\r\n  return (\r\n    <Popconfirm\r\n      placement=\"bottomRight\"\r\n      title=\"Enable team editing?\"\r\n      onConfirm={createRoom}\r\n      okText=\"Yes\"\r\n      cancelText=\"No\"\r\n    >\r\n      <Button type=\"text\" icon={<UsergroupAddOutlined />} />\r\n    </Popconfirm>\r\n  );\r\n};\r\n","import React from \"react\";\nimport {\n  DeleteOutlined,\n  BgColorsOutlined,\n  RotateRightOutlined,\n} from \"@ant-design/icons\";\nimport { Button, ButtonProps, Popover } from \"antd\";\nimport { PenPanel } from \"../reader/DrawTools\";\nimport { SelectToolType } from \"./Draw\";\nimport \"./tools.sass\";\n\n\nconst SelectTool: SelectToolType = ({\n  onDelete,\n  onRotate,\n  mutateStyle,\n  currDrawCtrl,\n}) => {\n  const btnProps: ButtonProps = {\n    type: \"text\",\n    shape: \"round\",\n  };\n\n  return (\n    <div className=\"select-tool\">\n      <Button\n        icon={<RotateRightOutlined />}\n        onClick={() => onRotate(90, true)}\n        {...btnProps}\n      />\n      <Popover\n        trigger=\"click\"\n        placement=\"bottom\"\n        getPopupContainer={(e) => e}\n        destroyTooltipOnHide\n        content={\n          <PenPanel updateDrawCtrl={mutateStyle} drawCtrl={currDrawCtrl} />\n        }\n      >\n        <Button icon={<BgColorsOutlined />} {...btnProps} />\n      </Popover>\n      <Button\n        danger\n        icon={<DeleteOutlined />}\n        onClick={onDelete}\n        {...btnProps}\n      />\n    </div>\n  );\n};\n\nexport default SelectTool;\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  TouchEvent,\r\n} from \"react\";\r\nimport { CtrlMode, defaultDrawCtrl, DrawCtrl } from \"../../lib/draw/drawCtrl\";\r\nimport { DrawState, Mutation, Stroke } from \"../../lib/draw/DrawState\";\r\nimport { Setter, usePreventGesture } from \"../../lib/hooks\";\r\nimport { releaseCanvas } from \"../../lib/draw/drawer\";\r\nimport { isStylus } from \"../../lib/touch/touch\";\r\nimport { usePinch } from \"@use-gesture/react\";\r\nimport { Set } from \"immutable\";\r\nimport paper from \"paper\";\r\nimport \"./draw.sass\";\r\n\r\nexport type SelectToolType = FC<{\r\n  onDelete: () => void;\r\n  onRotate: (angle: number, smooth?: boolean) => void;\r\n  mutateStyle: (updated: Partial<DrawCtrl>) => void;\r\n  currDrawCtrl: DrawCtrl;\r\n}>;\r\n\r\n\r\nconst PREVIEW_WIDTH = 200;\r\nconst {\r\n  Point,\r\n  Path,\r\n  Group,\r\n  Shape: { Rectangle },\r\n  Color,\r\n  Size,\r\n  Raster,\r\n} = paper;\r\n\r\nconst Draw: FC<{\r\n  drawState: DrawState;\r\n  otherStates?: DrawState[];\r\n  onChange?: Setter<DrawState>;\r\n  drawCtrl?: DrawCtrl;\r\n  mode?: CtrlMode;\r\n  readonly?: boolean;\r\n  preview?: boolean;\r\n  imgSrc?: string;\r\n  SelectTool?: SelectToolType;\r\n}> = ({\r\n  drawState,\r\n  onChange = () => {},\r\n  otherStates,\r\n  drawCtrl = defaultDrawCtrl,\r\n  mode = \"draw\",\r\n  readonly = false,\r\n  preview = false,\r\n  imgSrc,\r\n  SelectTool,\r\n}) => {\r\n  const { width, height } = drawState;\r\n  const canvasEl = useRef<HTMLCanvasElement>(null);\r\n  const scope = useRef(new paper.PaperScope());\r\n  const group = useRef<paper.Path[]>();\r\n  const path = useRef<paper.Path>();\r\n  const [rect, setRect] = useState<paper.Shape.Rectangle>();\r\n  const selectGroup = useRef<paper.Group>();\r\n  const [erased, setErased] = useState(Set<string>());\r\n  const ratio = useRef(1);\r\n\r\n  const [selected, setSelected] = useState(false);\r\n  const paperMode =\r\n    mode === \"select\" ? (selected ? \"selected\" : \"select\") : mode;\r\n\r\n  const [currDrawCtrl, setCurrDrawCtrl] = useState(defaultDrawCtrl);\r\n\r\n  let { color, finger, lineWidth, highlight, eraserWidth } = drawCtrl;\r\n\r\n  const isEventValid = (e: TouchEvent) =>\r\n    isStylus(e) || (finger && e.touches.length === 1);\r\n  const preventTouch = (e: TouchEvent) =>\r\n    isEventValid(e) || e.stopPropagation();\r\n\r\n  const updateRatio = () => {\r\n    const clientWidth = canvasEl.current?.clientWidth;\r\n    if (clientWidth) ratio.current = width / clientWidth;\r\n  };\r\n\r\n  const transformPoint = (projP: paper.Point) => {\r\n    const { center, zoom } = scope.current.view;\r\n    const viewP = scope.current.view.projectToView(projP);\r\n    const absoluteP = viewP.multiply(ratio.current);\r\n    const offsetP = new Point(width, height)\r\n      .divide(2)\r\n      .subtract(center.multiply(zoom));\r\n    return absoluteP.subtract(offsetP).divide(zoom);\r\n  };\r\n\r\n  const setupPaper = () => {\r\n    if (!canvasEl.current) return;\r\n    scope.current.setup(canvasEl.current);\r\n\r\n    const r = preview ? PREVIEW_WIDTH / width : 1;\r\n    scope.current.view.viewSize = new Size(width, height).multiply(r);\r\n    scope.current.view.scale(r, new Point(0, 0));\r\n    paintBackground(width, height);\r\n  };\r\n\r\n  const setNewRect = (e: paper.MouseEvent) => {\r\n    updateRatio();\r\n    scope.current.activate();\r\n    const point = transformPoint(e.point);\r\n    const rectangle = startSelectRect(point);\r\n    setRect(rectangle);\r\n  };\r\n\r\n  const handleDown = {\r\n    draw() {\r\n      updateRatio();\r\n      scope.current.activate();\r\n      path.current = startStroke(color, lineWidth, highlight);\r\n    },\r\n    erase() {\r\n      updateRatio();\r\n      scope.current.activate();\r\n      path.current = startStroke(\"#0003\", eraserWidth);\r\n    },\r\n    select(e: paper.MouseEvent) {\r\n      setNewRect(e);\r\n    },\r\n    selected(e: paper.MouseEvent) {\r\n      scope.current.activate();\r\n      const point = transformPoint(e.point);\r\n      if (!rect) return;\r\n      if (!point.isInside(rect.strokeBounds)) {\r\n        setNewRect(e);\r\n        setSelected(false);\r\n      }\r\n    },\r\n    delete() {},\r\n  }[paperMode];\r\n\r\n  const handleDrag = {\r\n    draw(e: paper.MouseEvent) {\r\n      if (!path.current) return;\r\n      scope.current.activate();\r\n      const point = transformPoint(e.point);\r\n      path.current.add(point);\r\n      path.current.smooth();\r\n    },\r\n    erase(e: paper.MouseEvent) {\r\n      const eraserPath = path.current;\r\n      if (!eraserPath) return;\r\n      scope.current.activate();\r\n      const point = transformPoint(e.point);\r\n      eraserPath.add(point);\r\n      eraserPath.smooth();\r\n\r\n      const newErased = group.current\r\n        ?.filter((p) => !erased.has(p.name))\r\n        .filter((p) => checkErase(p, eraserPath))\r\n        .map((p) => p.name);\r\n      newErased && setErased((prev) => prev.concat(newErased));\r\n    },\r\n    select(e: paper.MouseEvent) {\r\n      if (!rect) return;\r\n      scope.current.activate();\r\n      const delta = e.delta.multiply(ratio.current);\r\n      rect.size = rect.size.add(new Size(delta.x, delta.y));\r\n      rect.translate(delta.divide(2));\r\n    },\r\n    selected(e: paper.MouseEvent) {\r\n      const sGroup = selectGroup.current;\r\n      if (!rect || !sGroup) return;\r\n      const delta = e.delta.multiply(ratio.current);\r\n      rect.translate(delta);\r\n      sGroup.translate(delta);\r\n    },\r\n    delete() {},\r\n  }[paperMode];\r\n\r\n  const handleUp = {\r\n    erase() {\r\n      if (!path.current) return;\r\n      scope.current.activate();\r\n      path.current.remove();\r\n      onChange((prev) => DrawState.eraseStrokes(prev, erased.toArray()));\r\n      setErased(Set());\r\n    },\r\n    draw() {\r\n      if (!path.current || path.current.segments.length === 0) return;\r\n      path.current.simplify();\r\n      if (path.current.segments.length === 0) return;\r\n      const pathData = path.current.exportJSON();\r\n      path.current.remove();\r\n      onChange((prev) => DrawState.addStroke(prev, pathData));\r\n    },\r\n    select() {\r\n      if (!rect || rect.size.abs().width < 10 || rect.size.abs().height < 10) {\r\n        return setRect(undefined);\r\n      }\r\n      scope.current.activate();\r\n\r\n      const bounds = rect.strokeBounds;\r\n      const sg = new Group();\r\n      selectGroup.current = sg;\r\n      group.current?.forEach((p) => {\r\n        if (!(p instanceof paper.Path)) return;\r\n        if (p.isInside(bounds) || p.intersects(rect)) {\r\n          sg.addChild(p);\r\n        }\r\n      });\r\n      const tempStyle: Partial<DrawCtrl> = {};\r\n      if (sg.strokeColor) tempStyle.color = sg.strokeColor.toCSS(true);\r\n      if (sg.strokeWidth) tempStyle.lineWidth = sg.strokeWidth;\r\n      if (sg.children.every((p) => p.strokeColor?.alpha === 0.5))\r\n        tempStyle.highlight = true;\r\n\r\n      setCurrDrawCtrl((prev) => ({ ...prev, ...tempStyle }));\r\n      setSelected(true);\r\n    },\r\n    selected() {},\r\n    delete() {},\r\n  }[paperMode];\r\n\r\n  useEffect(() => {\r\n    setupPaper();\r\n    scope.current.activate();\r\n    const cvs = canvasEl.current;\r\n    return () => void (cvs && releaseCanvas(cvs));\r\n  }, []);\r\n\r\n  const handlePaper = () => {\r\n    if (readonly) return;\r\n    scope.current.view.onMouseDown = handleDown;\r\n    scope.current.view.onMouseDrag = handleDrag;\r\n    scope.current.view.onMouseUp = handleUp;\r\n  };\r\n  useEffect(handlePaper);\r\n\r\n  useEffect(() => {\r\n    if (!imgSrc) return;\r\n    const img = new Image();\r\n    img.src = imgSrc;\r\n    let raster: paper.Raster;\r\n\r\n    img.onload = () => {\r\n      scope.current.activate();\r\n      raster = new Raster(img);\r\n      raster.position = scope.current.view.center;\r\n      let r = width / img.width;\r\n      raster.scale(r);\r\n      raster.sendToBack();\r\n      raster.parent.getItem({ name: \"BGRECT\" })?.sendToBack();\r\n    };\r\n\r\n    return () => void raster?.remove();\r\n  }, [imgSrc]);\r\n\r\n  const mergedStrokes = useMemo(() => {\r\n    if (!otherStates) return drawState.getStrokeList();\r\n    else return DrawState.mergeStates([drawState, ...otherStates]);\r\n  }, [drawState, otherStates]);\r\n\r\n  useEffect(() => {\r\n    scope.current.activate();\r\n    group.current = [];\r\n    const otherGroup: paper.Path[] = [];\r\n\r\n    mergedStrokes.forEach((stroke) => {\r\n      const passedGroup = drawState.hasStroke(stroke.uid)\r\n        ? group.current\r\n        : otherGroup;\r\n      paintStroke(stroke, passedGroup, erased);\r\n    });\r\n\r\n    return () => {\r\n      group.current?.forEach((item) => item.remove());\r\n      otherGroup.forEach((item) => item.remove());\r\n    };\r\n  }, [mergedStrokes, erased]);\r\n\r\n  const updateMutation = () => {\r\n    const sg = selectGroup.current;\r\n    if (!sg) return;\r\n    const list = sg.children;\r\n    if (!list.length) return;\r\n\r\n    const mutations: Mutation[] = list.map((p) => [p.name, p.exportJSON()]);\r\n    onChange((prev) => DrawState.mutateStroke(prev, mutations));\r\n  };\r\n\r\n  const deleteSelected = () => {\r\n    const list = selectGroup.current?.children;\r\n    if (!list?.length) return;\r\n    const deleted = list.map((item) => item.name);\r\n    onChange((prev) => DrawState.eraseStrokes(prev, deleted));\r\n    setRect(undefined);\r\n    setSelected(false);\r\n  };\r\n\r\n  const rotateSelected = (angle: number, smooth = false) => {\r\n    const sg = selectGroup.current;\r\n    if (!sg) return;\r\n    let count = smooth ? 10 : 1;\r\n    const dAngle = angle / count;\r\n    const rotate = () => {\r\n      sg.rotate(dAngle);\r\n      if (--count > 0) requestAnimationFrame(rotate);\r\n    };\r\n    rotate();\r\n  };\r\n\r\n  const mutateStyle = (updated: Partial<DrawCtrl>) => {\r\n    const sg = selectGroup.current;\r\n    if (!sg) return;\r\n    const { lineWidth, color, highlight } = updated;\r\n    if (color) sg.strokeColor = new Color(color);\r\n    if (lineWidth) sg.strokeWidth = lineWidth;\r\n    if (highlight === true || currDrawCtrl.highlight === true) {\r\n      sg.children.forEach((p) => {\r\n        const { strokeColor } = p;\r\n        if (!strokeColor) return;\r\n        if (strokeColor.alpha === 1) strokeColor.alpha /= 2;\r\n        p.blendMode = \"multiply\";\r\n      });\r\n    }\r\n    if (highlight === false) {\r\n      sg.children.forEach((p) => {\r\n        const { strokeColor } = p;\r\n        if (!strokeColor) return;\r\n        strokeColor.alpha = 1;\r\n        p.blendMode = \"normal\";\r\n      });\r\n    }\r\n    setCurrDrawCtrl((prev) => ({ ...prev, ...updated }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (paperMode === \"select\") {\r\n      //\r\n    } else if (paperMode === \"selected\") {\r\n      if (rect?.strokeColor) rect.strokeColor.alpha /= 2;\r\n      scope.current.activate();\r\n      return () => {\r\n        updateMutation();\r\n        setCurrDrawCtrl(defaultDrawCtrl);\r\n      };\r\n    } else {\r\n      setSelected(false);\r\n      setRect(undefined);\r\n    }\r\n  }, [paperMode]);\r\n\r\n  useEffect(() => {\r\n    if (!rect) return;\r\n    let id = 0;\r\n    const moveDash = () => {\r\n      rect.dashOffset += 3;\r\n      id = requestAnimationFrame(moveDash);\r\n    };\r\n    moveDash();\r\n    return () => {\r\n      rect.remove();\r\n      cancelAnimationFrame(id);\r\n    };\r\n  }, [rect]);\r\n\r\n  usePinch(\r\n    ({ memo, offset, last, first, origin }) => {\r\n      if (!canvasEl.current) return;\r\n\r\n      let lastScale, lastOX, lastOY, osX, osY: number;\r\n      if (first || !memo) {\r\n        updateRatio();\r\n        scope.current.activate();\r\n        const { x, y } = canvasEl.current.getBoundingClientRect();\r\n        [lastScale, [lastOX, lastOY], [osX, osY]] = [\r\n          1,\r\n          [origin[0] - x, origin[1] - y],\r\n          [x, y],\r\n        ];\r\n      } else {\r\n        [lastScale, [lastOX, lastOY], [osX, osY]] = memo;\r\n      }\r\n\r\n      const { view } = scope.current;\r\n\r\n      const scale = first ? 1 : offset[0] / lastScale;\r\n      const r = ratio.current;\r\n      const [oX, oY] = [origin[0] - osX, origin[1] - osY];\r\n      const originViewP = new Point(oX, oY).multiply(r);\r\n      const originProjP = view.viewToProject(originViewP);\r\n      view.scale(scale, originProjP);\r\n\r\n      const [dX, dY] = [oX - lastOX, oY - lastOY];\r\n      const transP = new Point(dX, dY).multiply(r / offset[0]);\r\n      view.translate(transP);\r\n\r\n      if (!last) return [offset[0], [oX, oY], [osX, osY]];\r\n      putCenterBack(view);\r\n    },\r\n    {\r\n      scaleBounds: { max: 5, min: 0.3 },\r\n      target: canvasEl,\r\n    }\r\n  );\r\n\r\n  usePreventGesture();\r\n  return (\r\n    <div className=\"draw-wrapper\">\r\n      <canvas\r\n        ref={canvasEl}\r\n        className=\"draw-canvas\"\r\n        data-paper-hidpi={false}\r\n        onTouchStartCapture={preventTouch}\r\n        onTouchMoveCapture={preventTouch}\r\n      />\r\n      {SelectTool && paperMode === \"selected\" && (\r\n        <SelectTool\r\n          onDelete={deleteSelected}\r\n          onRotate={rotateSelected}\r\n          mutateStyle={mutateStyle}\r\n          currDrawCtrl={currDrawCtrl}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Draw);\r\n\r\nconst paintStroke = (\r\n  stroke: Stroke,\r\n  group?: paper.Path[],\r\n  erased?: Set<string>\r\n) => {\r\n  let { pathData, uid } = stroke;\r\n  try {\r\n    const path = new Path();\r\n    path.importJSON(pathData);\r\n    path.name = uid;\r\n    if (erased?.has(uid)) path.opacity /= 2;\r\n    group?.push(path);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getCheckPoints = (() => {\r\n  const cache = new WeakMap<paper.Segment, paper.Point[]>();\r\n  return (segment: paper.Segment, width: number) => {\r\n    const cached = cache.get(segment);\r\n    if (cached) return cached;\r\n\r\n    const { point } = segment;\r\n    const prevPoint = segment.previous?.point;\r\n    if (!prevPoint) return [];\r\n    const delta = point.subtract(prevPoint);\r\n    const times = (delta.length / width) * 2;\r\n    const checkPoints: paper.Point[] = [];\r\n    for (let i = 0; i < times; i += 1) {\r\n      checkPoints.push(point.subtract(delta.multiply(i / times)));\r\n    }\r\n    cache.set(segment, checkPoints);\r\n    return checkPoints;\r\n  };\r\n})();\r\n\r\nconst checkErase = (checkedPath: paper.Path, eraserPath: paper.Path) => {\r\n  const curveBound = eraserPath.lastSegment.curve?.strokeBounds;\r\n  if (\r\n    !(checkedPath instanceof paper.Path) ||\r\n    !curveBound?.intersects(checkedPath.strokeBounds)\r\n  ) {\r\n    return false;\r\n  }\r\n\r\n  if (eraserPath.intersects(checkedPath)) return true;\r\n\r\n  const { strokeWidth, lastSegment } = eraserPath;\r\n  const checkPoints = getCheckPoints(lastSegment, strokeWidth);\r\n  return checkPoints.some((cPoint) => {\r\n    const d = checkedPath.getNearestPoint(cPoint)?.getDistance(cPoint);\r\n    return d && d < (checkedPath.strokeWidth + strokeWidth) / 2;\r\n  });\r\n};\r\n\r\nconst paintBackground = (width: number, height: number) => {\r\n  const bgRect = new Rectangle(new Point(0, 0), new Point(width, height));\r\n  bgRect.fillColor = new Color(\"#fff\");\r\n  bgRect.name = \"BGRECT\";\r\n  bgRect.sendToBack();\r\n  return bgRect;\r\n};\r\n\r\nconst startSelectRect = (point: paper.Point) => {\r\n  const rect = new Rectangle(point, new Size(0, 0));\r\n  rect.strokeColor = new Color(\"#1890ff\");\r\n  rect.strokeWidth = 3;\r\n  rect.dashOffset = 0;\r\n  rect.dashArray = [30, 20];\r\n  return rect;\r\n};\r\n\r\nconst startStroke = (color: string, lineWidth: number, highlight = false) => {\r\n  const path = new Path();\r\n  const strokeColor = new Color(color);\r\n  if (highlight) {\r\n    strokeColor.alpha /= 2;\r\n    path.blendMode = \"multiply\";\r\n  }\r\n  path.strokeColor = strokeColor;\r\n  path.strokeWidth = lineWidth;\r\n  path.strokeJoin = \"round\";\r\n  path.strokeCap = \"round\";\r\n  return path;\r\n};\r\n\r\nconst getCenterTranslate = (view: paper.View) => {\r\n  const { center, zoom } = view;\r\n  const { height, width } = view.viewSize;\r\n  const { x, y } = center;\r\n  if (zoom <= 1) return [width / 2 - x, height / 2 - y];\r\n\r\n  const dX = (width * (zoom - 1)) / zoom / 2;\r\n  const dY = (height * (zoom - 1)) / zoom / 2;\r\n  const [minX, maxX, minY, maxY] = [\r\n    width / 2 - dX,\r\n    width / 2 + dX,\r\n    height / 2 - dY,\r\n    height / 2 + dY,\r\n  ];\r\n\r\n  const deltaX = x < minX ? minX - x : x > maxX ? maxX - x : 0;\r\n  const deltaY = y < minY ? minY - y : y > maxY ? maxY - y : 0;\r\n  return [deltaX, deltaY];\r\n};\r\n\r\nconst putCenterBack = (view: paper.View) => {\r\n  const [deltaX, deltaY] = getCenterTranslate(view);\r\n  let count = 10;\r\n  const dP = new Point(deltaX, deltaY).divide(-count);\r\n  const move = () => {\r\n    view.translate(dP);\r\n    if (--count > 0) requestAnimationFrame(move);\r\n  };\r\n  move();\r\n};\r\n","import { TouchEvent } from \"react\";\r\n\r\nexport type iOSTouch = Touch & {\r\n  force?: number;\r\n  touchType?: \"stylus\" | \"direct\";\r\n};\r\n\r\nexport function isStylus(e: TouchEvent) {\r\n  const touch = e.touches[0] as iOSTouch;\r\n  return touch?.touchType === \"stylus\";\r\n}\r\n","import { Dispatch, SetStateAction, useEffect, useMemo, useRef } from \"react\";\r\n\r\nexport function useObjectUrl(obj: Blob | MediaSource | undefined) {\r\n  const url = useMemo(\r\n    () => (obj ? URL.createObjectURL(obj) : undefined),\r\n    [obj]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const prevUrl = url || \"\";\r\n    return () => URL.revokeObjectURL(prevUrl);\r\n  }, [url]);\r\n\r\n  return url;\r\n}\r\n\r\nexport function useMounted() {\r\n  const _mounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    _mounted.current = true;\r\n    return () => {\r\n      _mounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  return _mounted;\r\n}\r\n\r\nexport function usePreventGesture() {\r\n  useEffect(() => {\r\n    const handler = (e: Event) => e.preventDefault();\r\n    document.addEventListener(\"gesturestart\", handler);\r\n    document.addEventListener(\"gesturechange\", handler);\r\n    document.addEventListener(\"gestureend\", handler);\r\n    return () => {\r\n      document.removeEventListener(\"gesturestart\", handler);\r\n      document.removeEventListener(\"gesturechange\", handler);\r\n      document.removeEventListener(\"gestureend\", handler);\r\n    };\r\n  }, []);\r\n}\r\n\r\nexport type Setter<T> = Dispatch<SetStateAction<T>>;\r\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useCallback,\r\n  createContext,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport {\r\n  DrawCtrl,\r\n  CtrlMode,\r\n  getDrawCtrl,\r\n  saveDrawCtrl,\r\n  defaultDrawCtrl,\r\n} from \"../../lib/draw/drawCtrl\";\r\nimport { createPage, NoteInfo, NotePage } from \"../../lib/note/note\";\r\nimport { loadNote, editNoteData } from \"../../lib/note/archive\";\r\nimport { AddPageButton, showPageDelMsg } from \"./ReaderTools\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { updatePages } from \"../../lib/network/http\";\r\nimport { useBeforeunload } from \"react-beforeunload\";\r\nimport { TeamState } from \"../../lib/draw/TeamState\";\r\nimport { DrawState } from \"../../lib/draw/DrawState\";\r\nimport { Setter, useMounted } from \"../../lib/hooks\";\r\nimport { StateSet } from \"../../lib/draw/StateSet\";\r\nimport { insertAfter } from \"../../lib/array\";\r\nimport SelectTool from \"../draw/SelectTool\";\r\nimport { debounce, last } from \"lodash\";\r\nimport { Map, Set } from \"immutable\";\r\nimport DrawTools from \"./DrawTools\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport Draw from \"../draw/Draw\";\r\nimport { message } from \"antd\";\r\nimport \"./reader.sass\";\r\n\r\nexport const ReaderStateCtx = createContext({\r\n  noteID: \"\",\r\n  noteInfo: undefined as NoteInfo | undefined,\r\n  stateSet: undefined as StateSet | undefined,\r\n  teamState: undefined as TeamState | undefined,\r\n  pageRec: undefined as Record<string, NotePage> | undefined,\r\n  pageOrder: undefined as string[] | undefined,\r\n  saved: true,\r\n  teamOn: false,\r\n  inviewPages: Set<string>(),\r\n  refRec: {} as Record<string, HTMLElement>,\r\n  drawCtrl: defaultDrawCtrl,\r\n  mode: \"draw\" as CtrlMode,\r\n});\r\n\r\nexport const ReaderMethodCtx = createContext({\r\n  scrollPage: (pageID: string) => {},\r\n  switchPageMarked: (pageID: string) => {},\r\n  setPageState: (uid: string, ds: DrawState) => {},\r\n  addPage: (prevPageID: string, copy?: boolean) => {},\r\n  addFinalPage: () => {},\r\n  deletePage: (pageID: string) => {},\r\n  saveReorder: async (order: string[], push: boolean) => {},\r\n  setInviewPages: (() => {}) as Setter<Set<string>>,\r\n  setMode: (() => {}) as Setter<CtrlMode>,\r\n  setDrawCtrl: (() => {}) as Setter<DrawCtrl>,\r\n});\r\n\r\nexport default function Reader({ teamOn }: { teamOn: boolean }) {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const nav = useNavigate();\r\n\r\n  const [pageRec, setPageRec] = useState<Record<string, NotePage>>();\r\n  const [noteInfo, setNoteInfo] = useState<NoteInfo>();\r\n  const [stateSet, setStateSet] = useState<StateSet>();\r\n  const [drawCtrl, setDrawCtrl] = useState(defaultDrawCtrl);\r\n  const [mode, setMode] = useState<CtrlMode>(\"draw\");\r\n  const [saved, setSaved] = useState(true);\r\n  const [inviewPages, setInviewPages] = useState(Set<string>());\r\n  const [pageOrder, setPageOrder] = useState<string[]>();\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  const refRec = useRef<Record<string, HTMLElement>>({});\r\n  const mounted = useMounted();\r\n\r\n  const { teamState, pushOperation, teamUpdate, pushNewPage, pushReorder } =\r\n    useContext(TeamCtx);\r\n\r\n  const loadNotePages = async () => {\r\n    const storedNote = await loadNote(noteID);\r\n    if (!storedNote) {\r\n      message.error(\"Note not found\");\r\n      return nav(\"/\");\r\n    }\r\n    const { pageRec, pdf, pageOrder, ...noteInfo } = storedNote;\r\n    setPageRec(pageRec);\r\n    setPageOrder(pageOrder);\r\n    setNoteInfo(noteInfo);\r\n    setStateSet(StateSet.createFromPages(pageRec));\r\n    setDrawCtrl(await getDrawCtrl());\r\n    setLoaded(true);\r\n    if (teamOn) updatePages(noteID);\r\n  };\r\n\r\n  const debouncedSave = useCallback(\r\n    debounce(async (pr: Record<string, NotePage>) => {\r\n      const canvas = document.querySelector(\"canvas\");\r\n      const data = canvas?.toDataURL();\r\n      await editNoteData(noteID, { pageRec: pr, thumbnail: data });\r\n      mounted.current && setSaved(true);\r\n    }, 2000),\r\n    []\r\n  );\r\n  const instantSave = debouncedSave.flush;\r\n\r\n  useLayoutEffect(() => {\r\n    loadNotePages();\r\n    return () => void instantSave();\r\n  }, [noteID, teamOn]);\r\n\r\n  useBeforeunload(instantSave);\r\n\r\n  useEffect(() => {\r\n    if (!noteInfo) return;\r\n    document.title = noteInfo.name + \" - Multibility\";\r\n  }, [noteInfo]);\r\n\r\n  useEffect(() => {\r\n    loaded && saveDrawCtrl(drawCtrl);\r\n  }, [drawCtrl]);\r\n\r\n  useEffect(() => {\r\n    if (!stateSet?.lastOp) return;\r\n    pushOperation(stateSet.lastOp);\r\n  }, [stateSet]);\r\n\r\n  useEffect(() => {\r\n    if (!pageRec || !loaded) return;\r\n    debouncedSave(pageRec);\r\n    setSaved(false);\r\n  }, [pageRec]);\r\n\r\n  useEffect(() => {\r\n    if (!teamUpdate) return;\r\n    const { type } = teamUpdate;\r\n    if (type === \"reorder\") {\r\n      const { pageOrder } = teamUpdate;\r\n      saveReorder(pageOrder);\r\n\r\n      if (!teamUpdate.deleted) return;\r\n      showPageDelMsg(() => {\r\n        saveReorder(teamUpdate.prevOrder, true);\r\n      });\r\n    } else if (type === \"newPage\") {\r\n      const { pageOrder } = teamUpdate;\r\n      saveReorder(pageOrder);\r\n      let { pageID, newPage } = teamUpdate;\r\n      setPageRec((prev) => prev && { ...prev, [pageID]: newPage });\r\n      setStateSet((prev) => prev?.addState(pageID, newPage));\r\n    } else if (type === \"sync\") {\r\n      const { pageID, stroke } = teamUpdate;\r\n      setStateSet((prevSS) =>\r\n        prevSS?.updateState(pageID, (prevDS) =>\r\n          DrawState.updateStroke(prevDS, stroke)\r\n        )\r\n      );\r\n    }\r\n  }, [teamUpdate]);\r\n\r\n  const updatePageRec = (pageID: string, ds: DrawState) => {\r\n    const state = DrawState.flaten(ds);\r\n    setPageRec(\r\n      (prev) => prev && { ...prev, [pageID]: { ...prev[pageID], state } }\r\n    );\r\n  };\r\n\r\n  const setPageState = useCallback((pageID: string, ds: DrawState) => {\r\n    setStateSet((prev) => prev?.setState(pageID, ds));\r\n    updatePageRec(pageID, ds);\r\n  }, []);\r\n\r\n  const switchPageMarked = (pageID: string) => {\r\n    const page = pageRec && pageRec[pageID];\r\n    if (!page) return;\r\n    const marked = !Boolean(page.marked);\r\n    setPageRec(\r\n      (prev) => prev && { ...prev, [pageID]: { ...prev[pageID], marked } }\r\n    );\r\n  };\r\n\r\n  const handleUndo = () => {\r\n    setStateSet((prev) => {\r\n      if (!prev) return;\r\n      const newSS = prev.undo();\r\n      const lastDS = newSS.getLastDS();\r\n      lastDS && updatePageRec(...lastDS);\r\n      return newSS;\r\n    });\r\n  };\r\n\r\n  const handleRedo = () => {\r\n    setStateSet((prev) => {\r\n      if (!prev) return;\r\n      const newSS = prev.redo();\r\n      const lastDS = newSS.getLastDS();\r\n      lastDS && updatePageRec(...lastDS);\r\n      return newSS;\r\n    });\r\n  };\r\n\r\n  const scrollPage = (pageID: string) => {\r\n    refRec.current[pageID]?.scrollIntoView();\r\n  };\r\n\r\n  const saveReorder = async (newOrder: string[], push = false) => {\r\n    setPageOrder(newOrder);\r\n    await editNoteData(noteID, { pageOrder: newOrder });\r\n    await instantSave();\r\n    push && pushReorder(newOrder);\r\n  };\r\n\r\n  const addPage = (prevPageID: string, copy = false) => {\r\n    if (!pageOrder) return;\r\n    const prevPage = copy ? pageRec && pageRec[prevPageID] : undefined;\r\n    const [pageID, newPage] = createPage(prevPage);\r\n    const newOrder = insertAfter(pageOrder, prevPageID, pageID);\r\n    pushNewPage(newOrder, pageID, newPage);\r\n    saveReorder(newOrder);\r\n    setPageRec((prev) => prev && { ...prev, [pageID]: newPage });\r\n    setStateSet((prev) => prev?.addState(pageID, newPage));\r\n  };\r\n\r\n  const addFinalPage = () => {\r\n    const lastPageID = last(pageOrder);\r\n    console.log(lastPageID);\r\n    lastPageID && addPage(lastPageID);\r\n  };\r\n\r\n  const deletePage = (pageID: string) => {\r\n    const newOrder = pageOrder?.filter((id) => id !== pageID);\r\n    newOrder?.length && saveReorder(newOrder, true);\r\n  };\r\n\r\n  const renderResult = (\r\n    <div className=\"reader container\">\r\n      <DrawTools\r\n        instantSave={instantSave}\r\n        handleUndo={handleUndo}\r\n        handleRedo={handleRedo}\r\n      />\r\n      <main>\r\n        {pageOrder?.map((uid) => (\r\n          <PageContainer uid={uid} key={uid} />\r\n        ))}\r\n        <AddPageButton />\r\n      </main>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ReaderStateCtx.Provider\r\n      value={{\r\n        noteID,\r\n        noteInfo,\r\n        stateSet,\r\n        teamState,\r\n        saved,\r\n        teamOn,\r\n        pageRec,\r\n        pageOrder,\r\n        inviewPages,\r\n        refRec: refRec.current,\r\n        mode,\r\n        drawCtrl,\r\n      }}\r\n    >\r\n      <ReaderMethodCtx.Provider\r\n        value={{\r\n          scrollPage,\r\n          setInviewPages,\r\n          switchPageMarked,\r\n          setPageState,\r\n          addPage,\r\n          addFinalPage,\r\n          deletePage,\r\n          setMode,\r\n          setDrawCtrl,\r\n          saveReorder,\r\n        }}\r\n      >\r\n        {renderResult}\r\n      </ReaderMethodCtx.Provider>\r\n    </ReaderStateCtx.Provider>\r\n  );\r\n}\r\n\r\nconst PageContainer: FC<{ uid: string }> = ({ uid }) => {\r\n  const { pageRec, stateSet, teamState } = useContext(ReaderStateCtx);\r\n  const { setPageState } = useContext(ReaderMethodCtx);\r\n\r\n  const page = pageRec && pageRec[uid];\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageState(uid);\r\n  const updateState = useCallback(\r\n    (ds: DrawState) => setPageState(uid, ds),\r\n    [uid, setPageState]\r\n  );\r\n  if (!page || !drawState) return null;\r\n\r\n  return (\r\n    <PageWrapper\r\n      drawState={drawState}\r\n      teamStateMap={teamStateMap}\r\n      updateState={updateState}\r\n      pdfIndex={page.pdfIndex}\r\n      uid={uid}\r\n    />\r\n  );\r\n};\r\n\r\nexport const PageWrapper = ({\r\n  thumbnail,\r\n  drawState,\r\n  teamStateMap,\r\n  updateState,\r\n  pdfIndex,\r\n  preview = false,\r\n  uid,\r\n}: {\r\n  uid: string;\r\n  drawState: DrawState;\r\n  teamStateMap?: Map<string, DrawState>;\r\n  thumbnail?: string;\r\n  pdfIndex?: number;\r\n  updateState?: (ds: DrawState) => void;\r\n  preview?: boolean;\r\n}) => {\r\n  const { setInviewPages } = useContext(ReaderMethodCtx);\r\n  const { refRec, noteID } = useContext(ReaderStateCtx);\r\n  const [fullImg, setFullImg] = useState<string>();\r\n  const [visibleRef, visible] = useInView({ delay: 100 });\r\n\r\n  const { height, width } = drawState;\r\n  const ratio = height / width;\r\n\r\n  const handleRef = useCallback(\r\n    (e: HTMLDivElement | null) => {\r\n      if (!e) return;\r\n      visibleRef(e);\r\n      if (!preview && refRec) refRec[uid] = e;\r\n    },\r\n    [refRec]\r\n  );\r\n\r\n  const loadImage = useCallback(\r\n    (() => {\r\n      let called = false;\r\n      return async () => {\r\n        if (preview || !pdfIndex || called) return;\r\n        called = true;\r\n        const { getOnePageImage } = await import(\"../../lib/note/pdfImage\");\r\n        setFullImg(await getOnePageImage(noteID, pdfIndex));\r\n      };\r\n    })(),\r\n    [preview, pdfIndex]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (preview) return;\r\n    if (visible) {\r\n      loadImage();\r\n      setInviewPages((prev) => prev.add(uid));\r\n    } else {\r\n      setInviewPages((prev) => prev.delete(uid));\r\n    }\r\n  }, [visible, loadImage, preview]);\r\n\r\n  const { ignores } = useContext(TeamCtx);\r\n  const otherStates = useMemo(\r\n    () => teamStateMap && Array.from(teamStateMap.deleteAll(ignores).values()),\r\n    [teamStateMap, ignores]\r\n  );\r\n\r\n  const imageLoaded = fullImg || !pdfIndex;\r\n  const drawShow = visible && imageLoaded;\r\n  const maskShow = Boolean(preview || !imageLoaded);\r\n\r\n  return (\r\n    <section\r\n      ref={handleRef}\r\n      className=\"note-page\"\r\n      style={{ paddingTop: `${ratio * 100}%` }}\r\n    >\r\n      {drawShow && (\r\n        <DrawWrapper\r\n          drawState={drawState}\r\n          otherStates={otherStates}\r\n          updateState={updateState}\r\n          imgSrc={fullImg || thumbnail || undefined}\r\n          preview={preview}\r\n        />\r\n      )}\r\n      {maskShow && <div className=\"mask\" />}\r\n    </section>\r\n  );\r\n};\r\nPageWrapper.displayName = \"PageWrapper\";\r\n\r\nconst DrawWrapper = ({\r\n  drawState,\r\n  updateState,\r\n  otherStates,\r\n  preview = false,\r\n  imgSrc,\r\n}: {\r\n  drawState: DrawState;\r\n  otherStates?: DrawState[];\r\n  updateState?: (ds: DrawState) => void;\r\n  preview?: boolean;\r\n  imgSrc?: string;\r\n}) => {\r\n  const { mode, drawCtrl } = useContext(ReaderStateCtx);\r\n\r\n  const handleChange = useCallback(\r\n    (arg: ((s: DrawState) => DrawState) | DrawState) => {\r\n      if (!updateState) return;\r\n      let ds = arg instanceof DrawState ? arg : arg(drawState);\r\n      updateState(ds);\r\n    },\r\n    [updateState, drawState]\r\n  );\r\n\r\n  return preview ? (\r\n    <Draw\r\n      drawState={drawState}\r\n      otherStates={otherStates}\r\n      imgSrc={imgSrc}\r\n      readonly\r\n      preview\r\n    />\r\n  ) : (\r\n    <Draw\r\n      drawState={drawState}\r\n      otherStates={otherStates}\r\n      onChange={handleChange}\r\n      imgSrc={imgSrc}\r\n      drawCtrl={drawCtrl}\r\n      mode={mode}\r\n      SelectTool={SelectTool}\r\n    />\r\n  );\r\n};\r\nDrawWrapper.displayName = \"DrawWrapper\";\r\n","import { Map, Record } from \"immutable\";\nimport { NotePage, TeamPage, TeamPageInfo } from \"../note/note\";\nimport { DrawState, WIDTH } from \"./DrawState\";\nimport { SetOperation } from \"./StateSet\";\n\ninterface TeamStateRecordType {\n  pageStates: Map<string, Map<string, DrawState>>;\n  pageInfos: Map<string, TeamPageInfo>;\n}\n\nconst defaultRecord: Readonly<TeamStateRecordType> = {\n  pageStates: Map(),\n  pageInfos: Map(),\n};\n\ntype TeamStateRecord = Record<TeamStateRecordType>;\nconst defaultFactory = Record(defaultRecord);\n\nexport class TeamState {\n  constructor(private immutable: TeamStateRecord) {}\n\n  getImmutable() {\n    return this.immutable;\n  }\n\n  getPageStates() {\n    return this.getImmutable().get(\"pageStates\");\n  }\n\n  getPageInfos() {\n    return this.getImmutable().get(\"pageInfos\");\n  }\n\n  getOneState(pageID: string, userID: string) {\n    return this.getPageStates().get(pageID)?.get(userID);\n  }\n\n  getOnePageState(pageID: string) {\n    return this.getPageStates().get(pageID);\n  }\n\n  getOnePageValidUser(pageID: string) {\n    const map = this.getOnePageState(pageID);\n    if (!map) return [];\n    return Array.from(map?.filter((ds) => !ds.isEmpty()).keys());\n  }\n\n  getPageRatio(pageID: string) {\n    return this.getPageInfos().get(pageID)?.ratio;\n  }\n\n  includesPage(pageID: string) {\n    return this.getPageStates().has(pageID);\n  }\n\n  setState(pageID: string, userID: string, drawState: DrawState) {\n    const pageMap = this.getPageStates().get(pageID);\n    if (!pageMap) return this;\n    return new TeamState(\n      this.getImmutable().update(\"pageStates\", (m) =>\n        m.set(pageID, pageMap.set(userID, drawState))\n      )\n    );\n  }\n\n  static createFromTeamPages(\n    teamPages: globalThis.Record<string, TeamPage>,\n    width = WIDTH\n  ) {\n    let record = defaultFactory();\n    Object.entries(teamPages).forEach(([pageID, teamPage]) => {\n      const { states, ratio } = teamPage;\n      const pageMap = Map(\n        Object.entries(states).map(([userID, flatState]) => [\n          userID,\n          DrawState.loadFromFlat(flatState, width, width * ratio),\n        ])\n      );\n      record = record\n        .update(\"pageStates\", (m) => m.set(pageID, pageMap))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }));\n    });\n    return new TeamState(record);\n  }\n\n  addPage(pageID: string, notePage: NotePage) {\n    const { ratio } = notePage;\n    return new TeamState(\n      this.getImmutable()\n        .update(\"pageStates\", (m) => m.set(pageID, Map()))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }))\n    );\n  }\n\n  pushOperation(setOp: SetOperation, userID: string, width = WIDTH) {\n    const { pageID, ...op } = setOp;\n    const ratio = this.getPageRatio(pageID);\n    if (!this.includesPage(pageID) || !ratio) return this;\n    const prevDs =\n      this.getOneState(pageID, userID) ||\n      DrawState.createEmpty(width, width * ratio);\n\n    const ds = DrawState.pushOperation(prevDs, op);\n    return this.setState(pageID, userID, ds);\n  }\n\n  resetUser(userID: string, pageRec: globalThis.Record<string, NotePage>) {\n    let newTS: TeamState = this;\n    for (let [pageID, { state, ratio }] of Object.entries(pageRec)) {\n      const prevDS = newTS.getOneState(pageID, userID);\n      if (!prevDS) continue;\n      const { width } = prevDS;\n      newTS = newTS.setState(\n        pageID,\n        userID,\n        DrawState.loadFromFlat(state, width, width * ratio)\n      );\n    }\n    return newTS;\n  }\n}\n","import { io } from \"socket.io-client\";\r\nimport { getUserID, getUserName } from \"../user\";\r\nimport { BASE_URL } from \"./http\";\r\n\r\nexport const IoFactory = (noteID: string) => {\r\n  return () =>\r\n    io(BASE_URL, {\r\n      query: {\r\n        userID: getUserID(),\r\n        userName: getUserName(),\r\n        noteID,\r\n      },\r\n    });\r\n};\r\n","import { message } from \"antd\";\r\nimport React, { useState, useEffect, createContext } from \"react\";\r\nimport { getTeamNoteState, loadTeamNoteInfo } from \"../../lib/network/http\";\r\nimport { LoginOutlined, LogoutOutlined } from \"@ant-design/icons\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { SetOperation } from \"../../lib/draw/StateSet\";\r\nimport { TeamState } from \"../../lib/draw/TeamState\";\r\nimport { getUserID, UserInfo } from \"../../lib/user\";\r\nimport { Stroke } from \"../../lib/draw/DrawState\";\r\nimport { IoFactory } from \"../../lib/network/io\";\r\nimport { NotePage } from \"../../lib/note/note\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { Set } from \"immutable\";\r\nimport Reader from \"./Reader\";\r\n\r\nexport const TeamCtx = createContext({\r\n  code: -2,\r\n  connected: false,\r\n  ignores: Set<string>(),\r\n  userRec: {} as Record<string, UserInfo>,\r\n  teamState: undefined as TeamState | undefined,\r\n  teamUpdate: undefined as undefined | TeamUpdate,\r\n  resetIO: () => {},\r\n  loadInfo: async () => false,\r\n  setIgnores: (() => {}) as Setter<Set<string>>,\r\n  pushReorder: (pageOrder: string[]) => {},\r\n  pushNewPage: (pageOrder: string[], pageID: string, newPage: NotePage) => {},\r\n  pushOperation: (op: SetOperation) => {},\r\n});\r\n\r\ninterface ReorderInfo {\r\n  pageOrder: string[];\r\n  prevOrder: string[];\r\n  deleted: boolean;\r\n}\r\n\r\ninterface NewPageInfo {\r\n  pageOrder: string[];\r\n  pageID: string;\r\n  newPage: NotePage;\r\n}\r\n\r\ntype TeamUpdate =\r\n  | ({\r\n      type: \"reorder\";\r\n    } & ReorderInfo)\r\n  | ({\r\n      type: \"newPage\";\r\n    } & NewPageInfo)\r\n  | {\r\n      type: \"sync\";\r\n      stroke: Stroke;\r\n      pageID: string;\r\n    };\r\n\r\nexport default function Team() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const [teamState, setTeamState] = useState<TeamState>();\r\n  const [code, setCode] = useState(-2);\r\n  const [userRec, setUserRec] = useState<Record<string, UserInfo>>({});\r\n  const [ignores, setIgnores] = useState(Set<string>());\r\n  const [io, setIO] = useState(IoFactory(noteID));\r\n  const [teamUpdate, setTeamUpdate] = useState<TeamUpdate>();\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [connected, setConnected] = useState(false);\r\n  const nav = useNavigate();\r\n\r\n  const loadState = async () => {\r\n    const teamNote = await getTeamNoteState(noteID);\r\n    if (!teamNote) {\r\n      message.error(\"Failed loading the team note state\");\r\n      return false;\r\n    }\r\n    setTeamState(TeamState.createFromTeamPages(teamNote));\r\n    return true;\r\n  };\r\n\r\n  const loadInfo = async () => {\r\n    const info = await loadTeamNoteInfo(noteID);\r\n    if (!info) {\r\n      message.error(\"Failed loading the team note info\");\r\n      return false;\r\n    }\r\n    setCode(info.code);\r\n    return true;\r\n  };\r\n\r\n  const roomInit = async () => {\r\n    message.loading({\r\n      content: \"Loading team note...\",\r\n      key: \"TEAM_LOADING\",\r\n      duration: 0,\r\n    });\r\n    if (!((await loadInfo()) && (await loadState()))) {\r\n      message.destroy(\"TEAM_LOADING\");\r\n      return nav(\"/\");\r\n    }\r\n    message.destroy(\"TEAM_LOADING\");\r\n    setLoaded(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    io.on(\"push\", ({ operation, userID }) => {\r\n      setTeamState((prev) => prev?.pushOperation(operation, userID));\r\n    });\r\n\r\n    io.on(\"join\", ({ joined, members }) => {\r\n      const { userID, userName } = joined;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return;\r\n      message.destroy(userID);\r\n      message.success({\r\n        content: `${userName} joined room`,\r\n        icon: <LoginOutlined />,\r\n        key: userID,\r\n      });\r\n    });\r\n\r\n    io.on(\"leave\", ({ leaved, members }) => {\r\n      const { userID, userName } = leaved;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return io.emit(\"join\");\r\n      message.destroy(userID);\r\n      message.warning({\r\n        content: `${userName} leaved room`,\r\n        icon: <LogoutOutlined />,\r\n        key: userID,\r\n      });\r\n    });\r\n\r\n    io.on(\"reorder\", (info: ReorderInfo) => {\r\n      setTeamUpdate({ type: \"reorder\", ...info });\r\n    });\r\n\r\n    io.on(\"newPage\", (info: NewPageInfo) => {\r\n      const { pageID, newPage } = info;\r\n      setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n      setTeamUpdate({ type: \"newPage\", ...info });\r\n    });\r\n\r\n    io.on(\"reset\", ({ userID, pageRec }) => {\r\n      if (userID === getUserID()) return;\r\n      setTeamState((prev) => prev?.resetUser(userID, pageRec));\r\n    });\r\n\r\n    io.on(\"connect_error\", console.error);\r\n    io.on(\"connect\", () => setConnected(true));\r\n    io.on(\"disconnect\", () => setConnected(false));\r\n\r\n    return () => {\r\n      io.removeAllListeners();\r\n      io.close();\r\n    };\r\n  }, [io]);\r\n\r\n  const roomDestroy = () => {\r\n    message.destroy(\"TEAM_LOADING\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    roomInit();\r\n    return roomDestroy;\r\n  }, [noteID]);\r\n\r\n  const pushOperation = (operation: SetOperation) => {\r\n    io.emit(\r\n      \"push\",\r\n      { operation },\r\n      ({ stroke, pageID }: { stroke: Stroke; pageID: string }) => {\r\n        setTeamUpdate({ type: \"sync\", stroke, pageID });\r\n      }\r\n    );\r\n  };\r\n\r\n  const pushReorder = (pageOrder: string[]) => {\r\n    io.emit(\"reorder\", { pageOrder });\r\n  };\r\n\r\n  const pushNewPage = (\r\n    pageOrder: string[],\r\n    pageID: string,\r\n    newPage: NotePage\r\n  ) => {\r\n    setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n    const { image, marked, ...newTeamPage } = newPage;\r\n    io.emit(\"newPage\", { pageOrder, pageID, newPage: newTeamPage });\r\n  };\r\n\r\n  const resetIO = () => setIO(IoFactory(noteID));\r\n\r\n  if (!loaded) return null;\r\n  return (\r\n    <TeamCtx.Provider\r\n      value={{\r\n        code,\r\n        ignores,\r\n        userRec,\r\n        connected,\r\n        teamState,\r\n        teamUpdate,\r\n        resetIO,\r\n        loadInfo,\r\n        setIgnores,\r\n        pushReorder,\r\n        pushNewPage,\r\n        pushOperation,\r\n      }}\r\n    >\r\n      <Reader teamOn />\r\n    </TeamCtx.Provider>\r\n  );\r\n}\r\n","export function createVirtualCanvas(width: number, height: number) {\r\n  const canvas = document.createElement(\"canvas\");\r\n  const context = canvas.getContext(\"2d\");\r\n  if (!context) {\r\n    throw new Error(\"can't get virtual canvas context\");\r\n  }\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n  return { canvas, context };\r\n}\r\n\r\nexport function releaseCanvas(canvas: HTMLCanvasElement) {\r\n  canvas.width = 1;\r\n  canvas.height = 1;\r\n  const ctx = canvas.getContext('2d');\r\n  ctx?.clearRect(0, 0, 1, 1);\r\n}\r\n"],"names":["defaultDrawCtrl","finger","lineWidth","eraserWidth","color","highlight","getDrawCtrl","localforage","drawCtrl","AddPageButton","addFinalPage","useContext","ReaderMethodCtx","className","type","icon","PlusOutlined","block","onClick","defaultRecord","states","Map","editStack","List","undoStack","defaultFactory","Record","StateSet","immutable","lastOp","this","getImmutable","get","pageID","getStates","drawState","prevDS","getOneState","currRecord","update","s","set","l","push","delete","cb","currDS","notePage","width","WIDTH","state","ratio","newDS","DrawState","getEditStack","size","getUndoStack","isUndoable","lastUid","last","lastSetOp","pop","isRedoable","ds","undefined","list","pageRec","entries","Object","createFromList","map","key","insertAfter","prevItem","newItem","prevIndex","indexOf","curr","slice","splice","DigitDisplay","value","useState","randomNum","setRandomNum","digits","String","padStart","split","Number","resetRandom","Math","floor","random","useEffect","timer","setTimeout","clearTimeout","classNames","disabled","d","idx","Digit","digit","createFromIconfontCN","scriptUrl","PageNavContent","activeKey","setActiveKey","ReaderStateCtx","pageOrder","inviewPages","scrollPage","saveReorder","refRec","useRef","listEl","currpageID","useMemo","find","has","current","scrollIntoView","itemHeight","clientHeight","listHeight","scrollBy","PreviewTabs","onDragEnd","source","destination","fromIndex","index","toIndex","newOrder","result","removed","exchange","requestAnimationFrame","droppableId","droppableProps","innerRef","placeholder","ref","e","uid","PagePreview","mode","pageIndex","stateSet","teamState","switchPageMarked","ignores","TeamCtx","chosen","setChosen","page","teamStateMap","getOnePageState","userIDs","getOnePageValidUser","filter","userID","isEmpty","every","marked","switchMarked","stopPropagation","dragDisabled","draggableId","isDragDisabled","draggableProps","dragHandleProps","drag","isDragging","image","PageWrapper","thumbnail","preview","onClickCapture","TeamAvatars","PreviewOption","maxCount","UserAvatar","prev","popShow","setPopShow","addPage","deletePage","menu","domEvent","items","label","CopyOutlined","DeleteOutlined","danger","content","trigger","placement","visible","onVisibleChange","destroyTooltipOnHide","MoreOutlined","TabPane","Tabs","onChange","tabBarGutter","centered","tab","PageNav","navOn","setNavOn","title","ALL","MARKED","WRITTEN","MenuUnfoldOutlined","MenuFoldOutlined","onClose","closable","contentWrapperStyle","boxShadow","bodyStyle","padding","overflow","headerStyle","textAlign","borderTop","destroyOnClose","DrawTools","handleUndo","handleRedo","instantSave","saved","teamOn","setDrawCtrl","setMode","nav","useNavigate","updateDrawCtrl","updated","HomeFilled","style","opacity","SaveOutlined","shape","UndoOutlined","RedoOutlined","PenButton","EraserButton","includes","ExpandOutlined","ghost","RoomInfo","JoinRoom","PenPanel","getPopupContainer","HighlightOutlined","tempLineWidth","setTempLineWidth","min","max","defaultValue","onAfterChange","ColorSelect","colors","c","checked","name","tempEraserWidth","setTempEraserWidth","UserCard","renaming","setRenaming","setIgnores","resetIO","userInfo","userRec","userName","online","self","getUserID","ignored","Search","autoFocus","onSearch","trim","saveUserName","enterButton","CheckOutlined","FormOutlined","EyeInvisibleOutlined","EyeOutlined","add","getHashedColor","backgroundColor","code","connected","loadInfo","link","window","location","href","share","selfName","copy","message","console","log","userList","values","selfID","selfInfo","onlineNum","u","length","DisconnectOutlined","showIcon","banner","ShareAltOutlined","ReloadOutlined","defaultVisible","status","count","TeamOutlined","noteID","createRoom","putNote","editNoteData","team","onConfirm","okText","cancelText","UsergroupAddOutlined","onDelete","onRotate","mutateStyle","currDrawCtrl","btnProps","RotateRightOutlined","BgColorsOutlined","Point","paper","Path","Group","Rectangle","Color","Size","Raster","Draw","otherStates","readonly","imgSrc","SelectTool","height","canvasEl","scope","group","path","rect","setRect","selectGroup","Set","erased","setErased","selected","setSelected","paperMode","setCurrDrawCtrl","preventTouch","touch","touches","touchType","isStylus","isEventValid","updateRatio","clientWidth","transformPoint","projP","view","center","zoom","absoluteP","projectToView","multiply","offsetP","divide","subtract","setNewRect","activate","point","rectangle","startSelectRect","handleDown","draw","startStroke","erase","select","isInside","strokeBounds","handleDrag","smooth","eraserPath","newErased","p","checkErase","concat","delta","x","y","translate","sGroup","handleUp","remove","toArray","segments","simplify","pathData","exportJSON","abs","bounds","sg","forEach","intersects","addChild","tempStyle","strokeColor","toCSS","strokeWidth","children","alpha","setup","r","viewSize","scale","paintBackground","setupPaper","cvs","releaseCanvas","onMouseDown","onMouseDrag","onMouseUp","raster","img","Image","src","onload","position","sendToBack","parent","getItem","mergedStrokes","getStrokeList","otherGroup","stroke","passedGroup","hasStroke","paintStroke","item","mutations","updateMutation","id","moveDash","dashOffset","cancelAnimationFrame","usePinch","memo","offset","first","origin","lastScale","lastOX","lastOY","osX","osY","getBoundingClientRect","oX","oY","originViewP","originProjP","viewToProject","transP","putCenterBack","scaleBounds","target","handler","preventDefault","document","addEventListener","removeEventListener","onTouchStartCapture","onTouchMoveCapture","deleted","angle","dAngle","rotate","blendMode","React","importJSON","error","getCheckPoints","cache","WeakMap","segment","cached","prevPoint","previous","times","checkPoints","i","checkedPath","curveBound","lastSegment","curve","some","cPoint","getNearestPoint","getDistance","bgRect","fillColor","dashArray","strokeJoin","strokeCap","dX","dY","minX","maxX","minY","maxY","getCenterTranslate","deltaX","deltaY","dP","move","createContext","noteInfo","setPageState","prevPageID","order","setInviewPages","Reader","useParams","setPageRec","setNoteInfo","setStateSet","setSaved","setPageOrder","loaded","setLoaded","mounted","_mounted","useMounted","pushOperation","teamUpdate","pushNewPage","pushReorder","loadNotePages","loadNote","storedNote","pdf","createFromPages","updatePages","debouncedSave","useCallback","debounce","pr","canvas","querySelector","data","toDataURL","flush","useLayoutEffect","useBeforeunload","saveDrawCtrl","onUndo","prevOrder","duration","newPage","addState","prevSS","updateState","updatePageRec","setState","prevPage","createPage","renderResult","newSS","undo","lastDS","getLastDS","redo","PageContainer","Provider","Boolean","lastPageID","pdfIndex","fullImg","setFullImg","useInView","delay","visibleRef","handleRef","loadImage","called","getOnePageImage","Array","from","deleteAll","imageLoaded","drawShow","maskShow","paddingTop","DrawWrapper","displayName","handleChange","arg","pageStates","pageInfos","TeamState","getPageStates","keys","getPageInfos","pageMap","m","setOp","op","getPageRatio","includesPage","prevDs","newTS","teamPages","record","teamPage","flatState","IoFactory","io","BASE_URL","query","getUserName","Team","setTeamState","setCode","setUserRec","setIO","setTeamUpdate","setConnected","loadState","getTeamNoteState","teamNote","createFromTeamPages","loadTeamNoteInfo","info","roomInit","on","operation","joined","members","LoginOutlined","leaved","emit","LogoutOutlined","resetUser","removeAllListeners","close","roomDestroy","newTeamPage","createVirtualCanvas","createElement","context","getContext","Error","ctx","clearRect"],"sourceRoot":""}