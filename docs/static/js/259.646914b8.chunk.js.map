{"version":3,"file":"static/js/259.646914b8.chunk.js","mappings":"obAgBMA,EAAqBC,EAAAA,cAAoB,CAC7CC,UAAW,GACXC,aAAe,eAGJC,EAA0B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACxC,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOJ,EAAP,KAAkBC,EAAlB,KACA,OACE,SAACH,EAAmBO,SAApB,CAA6BC,MAAO,CAAEN,UAAAA,EAAWC,aAAAA,GAAjD,SACGE,KAKMI,EAIR,SAAC,GAAwD,IAAtDJ,EAAqD,EAArDA,SAAUK,EAA2C,EAA3CA,SAA2C,IAAjCC,QAAAA,OAAiC,SAAhBC,EAAgB,EAAhBA,UAC3C,GAAcN,EAAAA,EAAAA,UAASO,EAAAA,IAAhBC,GAAP,eAEA,GAAoCC,EAAAA,EAAAA,YAAWf,GAAvCE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,aACnB,GAA4BG,EAAAA,EAAAA,WAAS,GAArC,eAAOU,EAAP,KAAeC,EAAf,KACMC,EAAWF,KAAYd,GAAaA,IAAcY,GACxD,GAA8BR,EAAAA,EAAAA,WAAS,GAAvC,eAAOa,EAAP,KAAgBC,EAAhB,KAEA,GAA4Bd,EAAAA,EAAAA,YAA5B,eAAOe,EAAP,KAAeC,EAAf,KACMC,GAAUC,EAAAA,EAAAA,QAAuB,OAEvCC,EAAAA,EAAAA,YAAU,WACJvB,IAAcY,GAAKG,GAAU,KAChC,CAACf,EAAWY,IAEf,IAYMY,GAAeC,EAAAA,EAAAA,cAAa,CAChCC,aAbiB,WAAO,IAAD,EACvBX,GAAU,GACVd,EAAaW,GACbQ,EAAS,UAACC,EAAQM,eAAT,aAAC,EAAiBC,eAW3BC,cARiB,WACjBd,GAAU,GACVd,EAAa,IACbmB,OAAUU,IAMVC,8BAA8B,EAC9BC,YAAavB,KAGfc,EAAAA,EAAAA,YAAU,WACHd,IACLW,OAAUU,GACV7B,EAAa,IACbc,GAAU,MACT,CAACN,EAASR,IAEb,OAAgCgC,EAAAA,EAAAA,MAAhC,eAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAW,mCAAG,qFAClBlB,GAAW,GADO,SAEZgB,EAFY,OAGlB1B,IACAP,EAAa,IAJK,2CAAH,qDAWjB,OACE,iCACES,UAAW2B,GAAAA,CAAW,gBAAiB3B,GACvC,eAAcO,EACd,gBAAeD,GACXQ,GAJN,IAKEc,MAAO,CAAEnB,OAAAA,GACToB,gBAX2C,SAACC,GACvB,WAAnBA,EAAEC,cAA6BxB,GAASkB,KAI5C,WAQE,gBAAKzB,UAAU,UAAUgC,IAAKrB,EAA9B,SACGlB,KAEH,gBAAKO,UAAU,SAASiC,QAASP,EAAaE,MAAO,CAAEnB,OAAAA,GAAvD,yB,kECpFAyB,EAKD,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,QAASC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC/BC,GACJ,SAAC,IAAD,CAAQ3C,MAAOyC,EAAUG,SAAUF,EAAaG,WAAY,IAA5D,SACGC,EAAAA,GAAAA,KAAW,SAACC,GAAD,OACV,SAAC,WAAD,CAAe/C,MAAO+C,EAAtB,UACE,SAAC,IAAD,CAAY3C,UAAU,aAAa4C,MAAOD,KADdA,QAOpC,OACE,SAAC,IAAD,CACEE,WAAS,EACTC,YAAY,cACZ9C,UAAU,iBACV+C,YAAaR,EACb3C,MAAOuC,EACPa,SAAU,SAAClB,GAAD,OAAOM,EAAWN,EAAEmB,OAAOrD,WAKrCsD,EAAoC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACnCjD,EAA4BiD,EAA5BjD,IAAK0C,EAAuBO,EAAvBP,MAAOQ,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MAC1B,GAAmDlD,EAAAA,EAAAA,YAAWmD,IAAtDC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,OAAQC,EAAzB,EAAyBA,WAAYC,EAArC,EAAqCA,UACrC,GAA8BhE,EAAAA,EAAAA,UAAS0D,GAAvC,eAAOjB,EAAP,KAAgBC,EAAhB,KACA,GAAgC1C,EAAAA,EAAAA,UAASkD,GAAzC,eAAOP,EAAP,KAAiBC,EAAjB,KACA,GAAoC5C,EAAAA,EAAAA,WAAS,GAA7C,eAAOiE,EAAP,KAAmBC,EAAnB,KALyD,SAQ1CC,IAR0C,uEAQzD,qGACqBC,EAAAA,EAAAA,IAAU5D,GAD/B,OACQ6D,EADR,OAEEL,EAAU,WACVD,EAAWM,GAHb,4CARyD,uBAMzDlD,EAAAA,EAAAA,YAAU,kBAAM+C,GAAc,KAAQ,CAACL,IAQvC,IAMMS,EAAa,mCAAG,6FACdC,GADc,kBAEfd,GAFe,IAGlBC,KAAMjB,EACNS,MAAOP,IAJW,UAOK6B,EAAAA,EAAAA,IAAQD,GAPb,OAOdE,EAPc,OAQpBV,EAAWU,GACXP,GAAc,GATM,2CAAH,qDAYbQ,GACJ,iCACE,SAAC,IAAD,CAAYpE,UAAU,aAAa4C,MAAOP,KAC1C,iBAAMrC,UAAU,WAAhB,SAA4BmC,IAC3BoB,IAAW,iBAAMvD,UAAU,UAAhB,SAA2BqD,EAAMgB,SAC5Cd,IACC,SAAC,IAAD,CACEe,KAAK,QACLC,KAAK,OACLtC,QAAS,kBAAM2B,GAAc,IAC7BY,MAAM,SAACC,EAAA,EAAD,SAMRC,GACJ,iCACE,SAACxC,EAAD,CACEC,QAASA,EACTC,WAAYA,EACZC,SAAUA,EACVC,YAAaA,KAEf,iBAAKtC,UAAU,UAAf,WACE,SAAC,IAAD,CACE2E,MAAM,4BACNC,UAAWf,EACXgB,UAAU,OACVC,WAAW,SACXN,MAAM,SAACO,EAAA,EAAD,IACNC,OAAO,SACPC,OAAO,SACPC,cAAe,CAAEX,KAAM,WARzB,UAUE,SAAC,IAAD,CAAQY,QAAM,EAAd,uBAEF,SAAC,IAAD,CAAQlD,QAvDQ,WACpBG,EAAWgB,GACXd,EAAYM,GACZgB,GAAc,IAoDV,qBACA,SAAC,IAAD,CAAQW,KAAK,UAAUa,UAAWjD,EAASF,QAAS+B,EAApD,sBAON,OACE,SAACnE,EAAD,CAAaG,UAAU,cAAcF,SAAU+D,EAAW9D,QAASwD,EAAnE,UACE,gBACEvD,UAAU,WACV,YAAWwD,IAAWtD,EACtB,eAAcyD,EACd1B,QAAS,kBAAMyB,EAAUxD,IAJ3B,SAMGyD,EAAae,EAAeN,OAM/BiB,EAAiD,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACxD,GAA8B5F,EAAAA,EAAAA,UAAS,IAAvC,eAAOyC,EAAP,KAAgBC,EAAhB,KACA,GAAgC1C,EAAAA,EAAAA,WAAS6F,EAAAA,EAAAA,OAAzC,eAAOlD,EAAP,KAAiBC,EAAjB,KACQmB,GAAetD,EAAAA,EAAAA,YAAWmD,IAA1BG,WASR,OACE,gBAAKzD,UAAU,cAAf,UACE,iBAAKA,UAAU,WAAW,eAAU,kBAApC,WACE,SAACkC,EAAD,CACEC,QAASA,EACTC,WAAYA,EACZC,SAAUA,EACVC,YAAaA,KAEf,iBAAKtC,UAAU,UAAf,WACE,SAAC,IAAD,CAAQiC,QAAS,kBAAMqD,GAAU,IAAjC,qBACA,SAAC,IAAD,CAAQf,KAAK,UAAUa,UAAWjD,EAASF,QAlBpC,WACb,IAAMmB,EAAOjB,EAAQqD,OAChBpC,KACLqC,EAAAA,EAAAA,IAAUrC,EAAMf,GAAUqD,KAAKjC,GAC/B6B,GAAU,KAcJ,yBASK,SAASK,IACtB,OACExF,EAAAA,EAAAA,YAAWmD,IADLsC,EAAR,EAAQA,QAASrC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,OAAQqC,EAAlC,EAAkCA,SAAUnC,EAA5C,EAA4CA,UAAWoC,EAAvD,EAAuDA,WAEvD,GAA4BpG,EAAAA,EAAAA,WAAS,GAArC,eAAOqG,EAAP,KAAeT,EAAf,KAEMU,GACJ,gBAAKhG,UAAU,cAAf,UACE,iBACEA,UAAU,WACV,YAAsB,YAAXwD,EACXvB,QAAS,kBAAMyB,EAAU,YAH3B,WAKE,SAACuC,EAAA,EAAD,CAAmBjG,UAAU,mBAC7B,iBAAMA,UAAU,WAAhB,wBACA,iBAAMA,UAAU,UAAhB,SAA2BkG,OAAOC,KAAKN,GAAUxB,cAOjD+B,GACJ,SAAC,IAAD,CACEpG,UAAU,iBACVqG,MAAM,QACN9B,KAAMhB,EAAU,UAAY,UAC5BtB,QAPiB,kBAAM6D,GAAW,SAACQ,GAAD,OAAWA,MAG/C,SAMG/C,EAAU,OAAS,SAIxB,OACE,mBAAOvD,UAAU,YAAjB,WACE,iBAAKA,UAAU,WAAf,UACGgG,GACD,SAACxG,EAAD,UACG0G,OAAOK,OAAOX,GAASY,KAAI,SAACC,GAAD,OAC1B,SAACvD,EAAD,CAAuBC,QAASsD,GAAlBA,EAAIvG,UAGrB6F,IAAU,SAACV,EAAD,CAAYC,UAAWA,QAEpC,+BACE,SAAC,IAAD,CACEe,MAAM,QACN7B,MAAM,SAACkC,EAAA,EAAD,IACNzE,QAAS,kBAAMqD,GAAU,IACzBF,SAAUW,EAJZ,iBAQCK,Q,kPCzMIO,GAQR,SAAC,GAQC,IAPLC,EAOI,EAPJA,SACAC,EAMI,EANJA,YACAC,EAKI,EALJA,WACAC,EAII,EAJJA,cACAjH,EAGI,EAHJA,SACAkH,EAEI,EAFJA,OAEI,IADJ5B,SAAAA,OACI,SACJ,GAAyCjF,EAAAA,EAAAA,YAAWmD,IAA5CC,EAAR,EAAQA,QAASqC,EAAjB,EAAiBA,QAASE,EAA1B,EAA0BA,WAEpBmB,GACJ,SAAC,IAAD,CACEhF,QAAS,gBAAGiF,EAAH,EAAGA,IAAH,OAAaL,EAAYK,IAClCC,aAAc,CAACP,GACf5G,UAAU,YACVoH,MAAO,CACL,CACE7C,KAAM,QACN8C,MAAO,UACP5H,SAAU,CACR,CAAE+E,MAAM,SAAC8C,EAAA,EAAD,IAAkBJ,IAAK,SAAUG,MAAO,gBAChD,CAAE7C,MAAM,SAAC+C,EAAA,EAAD,IAAsBL,IAAK,OAAQG,MAAO,iBAClD,CAAE7C,MAAM,SAACgD,EAAA,EAAD,IAA2BN,IAAK,OAAQG,MAAO,aAO3DI,EAAwB,CAAElD,KAAM,OAAQ8B,MAAO,UAC/CqB,GACJ,SAAC,IAAD,CAAUC,QAASV,EAAUW,QAAS,CAAC,SAAU/C,UAAU,SAA3D,UACE,SAAC,KAAD,QACE7E,UAAU,WACVwE,MAAM,SAACqD,EAAA,EAAD,CAAcC,OAAQ,MACxBL,MAKJM,GACJ,SAAC,IAAD,CACEpD,MAAM,yBACNC,UAAW9E,EACX0E,MAAM,SAACO,EAAA,EAAD,IACNF,UAAU,SACVC,WAAW,SACXM,SAAUA,EACVJ,OAAO,SACPC,OAAO,SACPC,cAAe,CAAEX,KAAM,WATzB,UAWE,SAAC,IAAD,CACEvE,UAAU,UACVqG,MAAM,QACN9B,KAAK,OACLa,SAAUA,EACVD,QAASC,EACTZ,MAAM,SAACO,EAAA,EAAD,IANR,sBAaEiD,EAGD,SAAC,GAAD,IAAGpF,EAAH,EAAGA,MAAOQ,EAAV,EAAUA,KAAV,OACH,iBAAKpD,UAAU,aAAf,WACE,SAAC,IAAD,CAAY4C,MAAOA,EAAO5C,UAAU,gBACpC,iBAAMA,UAAU,OAAhB,SAAwBoD,QAItBuE,GACJ,SAAC,IAAD,CACE1F,QAAS,gBAAGiF,EAAH,EAAGA,IAAH,OAAaF,EAAOE,IAC7BE,MAAK,CACH,CACEF,IAAK,UACLG,OAAO,SAACW,EAAD,CAAYpF,MAAM,OAAOQ,KAAK,aAHpC,eAKA8C,OAAOK,OAAOX,GAASY,KAAI,SAACyB,GAAD,MAAQ,CACpCf,IAAKe,EAAE/H,IACPmH,OAAO,SAACW,EAAD,CAAYpF,MAAOqF,EAAErF,MAAOQ,KAAM6E,EAAE7E,eAM7C8E,GACJ,SAAC,IAAD,CACE9C,SAAUA,EACVuC,QAASA,EACTC,QAAS,CAAC,SACV/C,UAAU,SAJZ,UAME,SAAC,IAAD,CACEwB,MAAM,QACN9B,KAAK,OACLvE,UAAU,UACVwE,MAAM,SAAC2D,EAAA,EAAD,IACNvG,MAAO,CAAEwG,WAAY,QALvB,mBAYJ,OACE,gBAAKpI,UAAU,aAAa,eAAcuD,EAA1C,SACGA,GACC,iCACE,SAAC,KAAD,QACEvD,UAAU,QACViC,QAAS,kBAAM6D,GAAW,IAC1BtB,MAAM,SAAC6D,GAAA,EAAD,KACFZ,IAELS,EACAH,MAGH,iCACE,SAAC,IAAD,CACEnI,MAAOkH,EACP9D,SAAU,SAAClB,GAAD,OAAOiF,EAAcjF,EAAEmB,OAAOrD,QACxCI,UAAU,eACVsI,QAAQ,SAACC,GAAA,EAAD,IACRC,UAAU,EACVC,YAAU,IAEXf,GACD,SAAC,KAAD,QACE1H,UAAU,QACViC,QAAS,kBAAM6D,GAAW,IAC1BtB,MAAM,SAACkE,GAAA,EAAD,KACFjB,U,mCC3ID,SAASkB,GAAT,GAA+D,IAA3CC,EAA0C,EAA1CA,SACjC,GAA6CzI,EAAAA,EAAAA,YAAWmD,IAAhDC,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,WAAYoF,EAA7B,EAA6BA,YAC7B,GAAgCnJ,EAAAA,EAAAA,UAAS,QAAzC,eAAOkH,EAAP,KAAiBC,EAAjB,KACA,GAAoCnH,EAAAA,EAAAA,UAAS,IAA7C,eAAOoH,EAAP,KAAmBC,EAAnB,KACA,GAAwCrH,EAAAA,EAAAA,WAASoJ,EAAAA,GAAAA,OAAjD,eAAOC,EAAP,KAAsBC,EAAtB,KAEMC,EAAW,mCAAG,WAAOC,GAAP,2FAGFA,GAHE,gEAGThJ,EAHS,kBAIEiJ,EAAAA,EAAAA,IAAWjJ,GAJb,OAIVkJ,EAJU,OAKhBrF,EAAOqF,EAAIrF,KACX8B,EAAWuD,EAAIvD,SANC,+IAQlB9B,GAAQN,EAAWM,GACnB8B,GAAYgD,EAAYhD,GATN,gEAAH,sDAYXwD,EAAS,mCAAG,WAAOC,EAAmBC,GAA1B,2FAGGD,GAHH,gEAGPE,EAHO,kBAIIC,EAAAA,EAAAA,IAAYD,EAAQD,GAJxB,OAIRH,EAJQ,OAKdrF,EAAOqF,EAAIrF,KACX8B,EAAWuD,EAAIvD,SAND,+IAQhB9B,GAAQN,EAAWM,GACnB8B,GAAYgD,EAAYhD,GATR,gEAAH,wDAYT6D,GAAaC,EAAAA,EAAAA,UAAQ,WACzB,IAAMC,EAAa,SAACC,EAAYC,GAAb,OAA4BA,EAAKD,GACpD,OAAQjD,GACN,IAAK,SACH,OAAOgC,EAASmB,QAAO,SAACC,GAAD,OAAOA,EAAEC,aAAYL,GAC9C,IAAK,OACH,OAAOhB,EAASmB,QAAO,SAACC,GAAD,OAAOA,EAAEE,WAAUN,GAC5C,IAAK,OACH,OAAOhB,EAASmB,QAAO,SAACC,GAAD,OAAOA,EAAE5G,KAAK+G,iBACvC,QACE,OAAOvB,KAEV,CAACA,EAAUhC,IAERwD,GAAcT,EAAAA,EAAAA,UAClB,kBACED,EAAWW,QAAO,SAACL,GAAD,OAChBA,EAAE5G,KAAK+G,cAAcG,SAASxD,EAAWtB,OAAO2E,oBAEpD,CAACrD,EAAY4C,IAQf,OALA7I,EAAAA,EAAAA,YAAU,WACRkG,EAAc,IACdiC,GAAeF,EAAAA,GAAAA,SACd,CAACF,EAAUrF,KAGZ,SAAC/D,EAAD,WACE,UAAC+K,EAAA,EAAD,CAAiBvK,UAAU,YAA3B,WACE,SAAC2G,GAAD,CACEC,SAAUA,EACVC,YAAaA,EACbC,WAAYA,EACZC,cAAeA,EACfjH,SAAU,kBAAMmJ,EAAYF,EAAcyB,YAC1CxD,OAAQ,SAACuC,GAAD,OAAWF,EAAUN,EAAcyB,UAAWjB,IACtDnE,SAAiC,IAAvB2D,EAAczE,OAEzB8F,EAAY5D,KAAI,SAACiE,GAChB,IAAQvK,EAAQuK,EAARvK,IACR,OACE,SAACwK,EAAA,EAAD,CAAyBC,QAAS,IAAlC,UACE,SAAC9K,EAAD,CACEG,UAAU,eACVF,SAAU,kBAAMmJ,EAAY,CAAC/I,KAC7BH,QAASwD,EAHX,UAKE,SAACqH,GAAD,CACEH,SAAUA,EACVI,SAAU9B,EAAc+B,IAAI5K,GAC5B8I,eAAgBA,OATF9I,WA1EhC6K,KAAAA,OAAaC,KA8Fb,IAAMJ,GAID,SAAC,GAA4C,IAAD,EAAzCH,EAAyC,EAAzCA,SAAUI,EAA+B,EAA/BA,SAAU7B,EAAqB,EAArBA,eAClBiC,EAA8BR,EAA9BQ,KAAM/K,EAAwBuK,EAAxBvK,IAAKkD,EAAmBqH,EAAnBrH,KAAM8G,EAAaO,EAAbP,SACnBgB,GAAOvB,EAAAA,EAAAA,UAAQ,kBAAMoB,IAAAA,CAAMb,GAAUiB,aAAY,CAACjB,IAClDkB,EAAI,UAAMH,EAAO,OAAS,SAAtB,YAAkC/K,GAE5C,GAAiCC,EAAAA,EAAAA,YAAWmD,IAApCC,EAAR,EAAQA,QAASsF,EAAjB,EAAiBA,YACjB,GAAgCnJ,EAAAA,EAAAA,UAAS0D,GAAzC,eAAOiI,EAAP,KAAiBC,EAAjB,KACMC,GAAMC,EAAAA,EAAAA,MAoBZ,GAAkC9L,EAAAA,EAAAA,YAAlC,eAAO+L,EAAP,KAAkBC,EAAlB,KACMC,GAAYhC,EAAAA,EAAAA,UAAQ,WACxB,GAAK8B,EAAL,CACA,IAAQG,EAAiBH,EAAjBG,MAAOC,EAAUJ,EAAVI,MACf,OAAOC,EAAAA,GAAAA,aAAuBF,EAAOC,MACpC,CAACJ,KAEJ5K,EAAAA,EAAAA,YAAU,YACR,iBAAC,2GACsBkL,EAAAA,EAAAA,IAAS7L,GAD/B,UACO8L,EADP,wDAGSC,EAAuBD,EAAvBC,QAASC,EAAcF,EAAdE,WACXC,EAAUD,EAAU,KACfR,EAAaO,EAAQE,IALjC,0CAAD,KAOC,CAACjM,IAEJ,IAAMkM,GACJ,iBACEpM,UAAU,eACV,kBAAgB,iBAACyL,QAAD,IAACA,OAAD,EAACA,EAAWI,aAAZ,QAAqB,KAAO,EAF9C,UAIGJ,GAAaE,IACZ,SAAC,EAAAU,YAAD,CACEV,UAAWA,EACXW,UAAWb,EAAUc,MACrBC,SAAO,IAGVvB,IAAQ,SAACwB,EAAA,EAAD,CAAczM,UAAU,gBACjC,SAAC0M,EAAA,EAAD,CAAmB1M,UAAU,oBAIjC,OACE,iBAAKA,UAAU,YAAY,gBAAe6K,EAAU5I,QA3ClC,WAClB,IAAKsB,EAAS,OAAOgI,EAAIH,GACzBpC,GAAe,SAAC1C,GACd,OAAIA,EAAKwE,IAAI5K,GAAaoG,EAAKqG,OAAOzM,GAC/BoG,EAAKsG,IAAI1M,OAuClB,UACGkM,GACD,iBAAKpM,UAAU,UAAf,UACGuD,IAAW,cAAGvD,UAAU,OAAb,SAAqBoD,IAChCG,IACC,SAAC,IAAD,CACEvD,UAAU,aACVJ,MAAOyL,EACPrI,SAAU,SAAClB,GAAD,OAAOwJ,EAAYxJ,EAAEmB,OAAOrD,QACtCqC,QAAS,SAACH,GAAD,OAAOA,EAAE+K,mBAClBC,OA/DW,WACnB,IAAMC,EAAU1B,EAAS7F,OACzB,IAAKuH,GAAWA,IAAY3J,EAAM,OAAOkI,EAAYlI,IACrD4J,EAAAA,EAAAA,IAAa9M,EAAK,CAAEkD,KAAM2J,IAC1BlE,GAAY,SAACvC,GAAD,eAAC,UACRA,GADO,cAETpG,GAFS,QAAC,UAECoG,EAAKpG,IAFP,IAEakD,KAAM2J,aA4D3B,iBAAM/M,UAAU,OAAhB,SAAwBkL,W,wBC9LjB,SAAS+B,KACtB,OAA8BvN,EAAAA,EAAAA,WAAS,GAAvC,eAAOwN,EAAP,KAAgBC,EAAhB,KACA,GAAwChN,EAAAA,EAAAA,YAAWmD,IAA3CC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,OAAQsC,EAAzB,EAAyBA,YAEzBjF,EAAAA,EAAAA,YAAU,WACH0C,GAAS4J,GAAW,KAExB,CAAC3J,IAEJ,IAAM4C,GACJ,SAAC,IAAD,CACEpG,UAAU,iBACViC,QAAS,kBAAM6D,GAAW,SAACQ,GAAD,OAAWA,MACrC/B,KAAMhB,EAAU,UAAY,OAH9B,SAKGA,EAAU,OAAS,SAIlB6J,GACJ,iCACE,SAAC,IAAD,CACEpN,UAAU,YACVuE,KAAK,OACLC,MAAM,SAAC6I,GAAA,EAAD,IACNpL,QAAS,kBAAMkL,GAAW,SAAC7G,GAAD,OAAWA,SAEvC,SAAC,KAAD,CACEtG,UAAU,eACVsN,MAAO,IACPzI,UAAU,OACV0I,UAAU,EACVC,QAASN,EACTO,QAAS,kBAAMN,GAAW,IAC1BO,oBAAqB,CAAEC,UAAW,QAClCC,UAAW,CAAEC,QAAS,EAAGC,SAAU,UACnCC,gBAAc,EAThB,UAWE,SAACpI,EAAD,SAKN,OACE,iBAAK3F,UAAU,aAAf,UACGoN,EACAhH,K,qRCdQ,SAAS4H,KACtB,OACE,iBAAKhO,UAAU,cAAf,WACE,SAACiO,GAAD,KACA,SAACC,GAAD,OAKN,IAAMC,GAKF,SAAC,GAAoD,IAAlD1O,EAAiD,EAAjDA,SAAUkF,EAAuC,EAAvCA,MAAOyJ,EAAgC,EAAhCA,QAAYC,GAAoB,cACtD,GAA4BC,EAAAA,EAAAA,MAA5B,eAAOC,EAAP,KAAeC,EAAf,KACA,OACE,SAAC9D,EAAA,GAAD,gBAAe+D,GAAIF,IAAWH,GAAaC,GAA3C,cACE,iBAAKrO,UAAU,YAAf,WACE,4BACE,SAAC,IAAD,CACEuE,KAAK,OACL8B,MAAM,SACNpE,QAAS,kBAAMuM,EAAU,SACzBhK,MAAM,SAACkK,GAAA,EAAD,OAER,wBAAK/J,OAENlF,SAMHkP,GAAgB,WACpB,OAA8BjP,EAAAA,EAAAA,WAAS,GAAvC,eAAOkP,EAAP,KAAgBC,EAAhB,KACA,GAA4C1O,EAAAA,EAAAA,YAAWmD,IAA/CE,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,WAAYoF,EAA5B,EAA4BA,YAC5B,GAA8BnJ,EAAAA,EAAAA,UAAS,GAAvC,eAAOoP,EAAP,KAAgBC,EAAhB,KAH0B,wCAK1B,WAA0BC,GAA1B,oFACoB,oBAAdA,EAAKzK,KADX,wDAEEsK,GAAW,GAFb,SAG4B,uDAH5B,uBAGUI,EAHV,EAGUA,QAHV,SAIqBA,EAAQD,EAAMD,GAJnC,cAIQG,EAJR,QAKO3F,MAAQ/F,EALf,WAMmC2L,EAAAA,EAAAA,IAAcD,GANjD,wBAMUnL,EANV,EAMUA,KAAM8B,EANhB,EAMgBA,SACdpC,EAAWM,GACX8E,EAAYhD,GACZgJ,GAAW,GACXO,GAAAA,GAAAA,QAAgB,cAVlB,mBAWS,GAXT,6CAL0B,sBAmB1B,OACE,UAACC,GAAA,EAAD,CACErP,UAAU,aACVoF,SAAUwJ,EACVU,UAAU,EACVC,OAAO,IACPC,OAAO,kBACPC,aA1BsB,4CAoBxB,WAQE,eAAGzP,UAAU,uBAAb,UACG4O,IAAW,SAAC,KAAD,CAAUtB,MAAO,GAAI/I,KAAK,SAASuK,QAASA,IACvDF,IAAW,SAACc,GAAA,EAAD,QAEd,cAAG1P,UAAU,kBAAb,gDAKA2P,GAAc,WAClB,OAAsBrB,EAAAA,EAAAA,MAAbE,GAAT,eACMoB,GAAWC,EAAAA,GAAAA,MACjB,GAAwBnQ,EAAAA,EAAAA,UAASkQ,GAAjC,eAAOxM,EAAP,KAAa0M,EAAb,KAMA,OACE,iBAAK9P,UAAU,eAAf,WACE,SAAC,IAAD,CACEJ,MAAOwD,EACPJ,SAAU,SAAClB,GAAD,OAAOgO,EAAQhO,EAAEmB,OAAOrD,QAClC0I,QAAQ,SAACyH,GAAA,EAAD,IACRtH,YAAU,KAEZ,SAAC,IAAD,CACErD,SAAUwK,IAAaxM,IAASA,EAChCnB,QAfc,WACbmB,KACL4M,EAAAA,GAAAA,IAAa5M,GACboL,EAAU,UAaNjK,KAAK,UACL0L,OAAK,EAJP,oBAYAC,GAAe,WACnB,IAAQC,GAAahQ,EAAAA,EAAAA,YAAWmD,IAAxB6M,SAEFC,EAAQ,mCAAG,8FACTC,KAAAA,QADS,wBAETC,EAAAA,GAAAA,MAFS,OAGfH,IAHe,2CAAH,qDAMd,OACE,iBAAKnQ,UAAU,eAAf,WACE,SAAC,IAAD,CACEwE,MAAM,SAAC+L,GAAA,EAAD,IACNtO,SAAO,iBAAE,8FACDuO,GAAAA,IADC,OAEPC,OAAOC,SAASC,SAFT,2CAITV,OAAK,EANP,qBAUA,SAAC,IAAD,CACEtL,MAAM,8BACNC,UAAWwL,EACX5L,MAAM,SAACoM,GAAA,EAAD,IACN5L,OAAO,SACPC,OAAO,SACPC,cAAe,CAAEX,KAAM,WACvBO,WAAW,SACXD,UAAU,SARZ,UAUE,SAAC,IAAD,CAAQL,MAAM,SAACoM,GAAA,EAAD,IAAmBzL,QAAM,EAAC8K,OAAK,EAA7C,6BAQFY,GAAY,CAChB,CACE3J,IAAK,MACLG,MAAO,aACPyJ,WAAW,SAACnC,GAAD,IACXnK,MAAM,SAACuM,GAAA,EAAD,KAER,CACE7J,IAAK,UACLG,MAAO,aACPyJ,WAAW,SAACnB,GAAD,IACXnL,MAAM,SAACuL,GAAA,EAAD,KAER,CACE7I,IAAK,WACLG,MAAO,WACPyJ,WAAW,SAACZ,GAAD,IACX1L,MAAM,SAACC,EAAA,EAAD,MAIJuM,GAAc,WAClB,OAAsB1C,EAAAA,EAAAA,MAAbE,GAAT,eACA,OACE,gBAAKxO,UAAU,eAAf,UACE,SAAC,IAAD,CAAMiC,QAAS,gBAAGiF,EAAH,EAAGA,IAAH,OAAasH,EAAUtH,IAAME,MAAOyJ,QAKnDI,GAAa,WACjB,OAA4BvR,EAAAA,EAAAA,UAAS,GAArC,eAAOe,EAAP,KAAeC,EAAf,KACA,GAA4B4N,EAAAA,EAAAA,MAA5B,eAAOC,EAAP,KAAeC,EAAf,KAMMH,EAAgB,CACpB1D,QAAS,IACTuG,QANiB,SAACC,GAClBzQ,EAAUyQ,EAAGjQ,eAMbkQ,eAAe,GAKjB,OAFAvQ,EAAAA,EAAAA,YAAU,kBAAM2N,EAAU,UAAS,CAACA,KAGlC,qBAASxO,UAAU,cAAc4B,MAAO,CAAEnB,OAAAA,GAA1C,WACE,SAACiK,EAAA,GAAD,gBAAe+D,GAAe,SAAXF,GAAuBF,GAA1C,cACE,SAAC2C,GAAD,OAEDH,GAAUrK,KAAI,gBAAGU,EAAH,EAAGA,IAAKG,EAAR,EAAQA,MAAOyJ,EAAf,EAAeA,UAAf,OACb,SAAC3C,IAAD,gBAAwBC,QAASlH,EAAKvC,MAAO0C,GAAWgH,GAAxD,aACGyC,IADgB5J,UAQrBgH,GAAe,WACnB,OACE,UAAC,KAAD,CACErJ,UAAU,cACV+C,QAAQ,QACRyJ,SACE,SAAC,KAAD,CAAmBC,QAAQ,GAA3B,UACE,SAACL,GAAD,MAGJM,OAAQ,IARV,WAUE,SAAC,IAAD,CAAQvR,UAAU,QAAQqG,MAAM,SAAS7B,MAAM,SAACgN,GAAA,EAAD,OAC/C,SAAC,IAAD,CAAQxR,UAAU,QAAQuE,KAAK,OAAOC,MAAM,SAACgN,GAAA,EAAD,UAK5CvD,GAAiB,WACrB,OAAgCvO,EAAAA,EAAAA,UAAS,IAAzC,eAAO+R,EAAP,KAAiBC,EAAjB,KACA,GAA0BhS,EAAAA,EAAAA,WAAS,GAAnC,eAAOiS,EAAP,KAAcC,EAAd,KAEMrG,GAAMC,EAAAA,EAAAA,MAJe,wCAK3B,WAA4BqG,GAA5B,wFACuBC,EAAAA,GAAAA,IAAUD,GADjC,YACQrI,EADR,iDAEqB+B,EAAI,SAAD,OAAU/B,KAFlC,OAGEkI,EAAY,IACZE,GAAS,GAJX,4CAL2B,sBAY3B,OACE,UAAC,KAAD,CACE/M,UAAU,cACV+C,QAAQ,QACRjD,MAAM,mBACNoN,sBAAoB,EACpBC,gBAAiB,kBAAMJ,GAAS,IAChCP,SACE,SAAC,MAAD,CACEY,OAAK,EACL5N,OAAQ,EACR6N,MAAOP,EACP/R,MAAO6R,EACPzO,SAAU,SAACmP,GACTP,GAAS,GACTF,EAAYS,IAEdC,OA7BmB,8CAazB,WAoBE,SAAC,IAAD,CAAQpS,UAAU,iBAAiBqG,MAAM,QAAQ7B,MAAM,SAAC6N,GAAA,EAAD,IAAvD,mBAGA,SAAC,IAAD,CAAQrS,UAAU,iBAAiBuE,KAAK,OAAOC,MAAM,SAAC6N,GAAA,EAAD,UC7RpD,SAASC,KAAc,IAAD,EAC3B,GAA4BnS,EAAAA,EAAAA,YAAWmD,IAA/BE,EAAR,EAAQA,OAAQoC,EAAhB,EAAgBA,QACV2M,EAAkB,YAAX/O,EACb,OACE,+BACE,SAACyJ,GAAD,KACA,eAAI,YAAWsF,EAAf,SAAsBA,EAAO,cAAH,UAAmB3M,EAAQpC,UAA3B,aAAmB,EAAiBJ,QAC9D,SAAC4K,GAAD,OCIC,IAAM1K,GAAUjE,EAAAA,cAAoB,CACzCmE,OAAQ,UACRD,SAAS,EACTsC,SAAU,GACVD,QAAS,GACTiD,YAAc,aACdpF,WAAa,aACbC,UAAY,aACZoC,WAAa,aACbqK,SAAU,eAGG,SAASqC,KACtB,OAAgC9S,EAAAA,EAAAA,UAAmC,IAAnE,eAAOmG,EAAP,KAAiBgD,EAAjB,KACA,GAA8BnJ,EAAAA,EAAAA,UAAkC,IAAhE,eAAOkG,EAAP,KAAgBnC,EAAhB,KACA,GAA4B/D,EAAAA,EAAAA,UAAS,WAArC,eAAO8D,EAAP,KAAeE,EAAf,KACA,GAA8BhE,EAAAA,EAAAA,WAAS,GAAvC,eAAO6D,EAAP,KAAgBuC,EAAhB,KAEM2M,GAAc9I,EAAAA,EAAAA,UAClB,kCACE/D,EAAQpC,UADV,QACqB,CACjBtD,IAAK,GACLkD,KAAM,YACNR,MAAO,UACPS,MAAO6C,OAAOC,KAAKN,MAEvB,CAACA,EAAUD,EAASpC,IAGhBoF,GAAWe,EAAAA,EAAAA,UACf,kBACE+I,EAAAA,GAAAA,IACED,EAAYpP,MACTgH,QAAO,SAACnK,GAAD,OAASA,KAAO2F,KACvBW,KAAI,SAACtG,GAAD,OAAS2F,EAAS3F,SAE7B,CAACuS,EAAa5M,IAGVsK,EAAW,YACfwC,EAAAA,EAAAA,MAAcjN,KAAKmD,IACnB+J,EAAAA,EAAAA,MAAalN,KAAKjC,GAClBoP,SAASlO,MAAQ,eAInB,OAFA9D,EAAAA,EAAAA,WAAUsP,EAAU,KAGlB,SAAC7M,GAAQ3D,SAAT,CACEC,MAAO,CACL4D,OAAAA,EACAD,QAAAA,EACAsC,SAAAA,EACAD,QAAAA,EACAiD,YAAAA,EACApF,WAAAA,EACAqC,WAAAA,EACApC,UAAAA,EACAyM,SAAAA,GAVJ,UAaE,iBAAKnQ,UAAU,sBAAf,WACE,SAACsS,GAAD,KACA,6BACE,SAAC3M,EAAD,KACA,SAACgD,GAAD,CAAUC,SAAUA,KACpB,SAACkK,GAAD,YAOH,IAAMA,GAAgB,WAC3B,OAA4C3S,EAAAA,EAAAA,YAAWmD,IAA/CE,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,WAAYoF,EAA5B,EAA4BA,YADK,wCAGjC,iGACQqG,GAAO6D,EAAAA,EAAAA,OACRxJ,MAAQ/F,EAFf,UAGmC2L,EAAAA,EAAAA,IAAcD,GAHjD,gBAGUnL,EAHV,EAGUA,KAAM8B,EAHhB,EAGgBA,SACdpC,EAAWM,GACX8E,EAAYhD,GALd,4CAHiC,sBAWjC,OACE,SAAC,IAAD,CACE7F,UAAU,WACVsE,KAAK,QACLC,KAAK,UACL8B,MAAM,SACNpE,QAjB6B,2CAkB7BuC,MAAM,SAACwO,EAAA,EAAD,Q,2KCxGNC,E,MAAc5C,GAAAA,eAA2B,CAAEjN,KAAM,gBAC1C8P,EAAa,mCAAG,WAAO1J,EAAgB2J,GAAvB,2FACJF,EAAYG,QAAkB,QAD1B,oJACsC,GADtC,WACvBC,EADuB,KAErBnM,EAFqB,UAEZsC,EAFY,YAEF2J,GACpBE,EAAU/I,SAASpD,GAHG,0DAI3BmM,EAAS,CAAInM,GAAJ,eAAYmM,EAAUhJ,QAAO,SAACiJ,GAAD,OAAQA,IAAOpM,OAJ1B,UAKrB+L,EAAYM,QAAQ,OAAQF,GALP,yBAMdJ,EAAYG,QAAgBlM,GANd,qFAAH,wDASbsM,EAAa,mCAAG,WAAOhK,EAAgB2J,EAAeM,GAAtC,2FACJR,EAAYG,QAAkB,QAD1B,oJACsC,GADtC,eACvBC,EADuB,KAErBnM,EAFqB,UAEZsC,EAFY,YAEF2J,IACzBE,EAAS,CAAInM,GAAJ,eAAYmM,EAAUhJ,QAAO,SAACiJ,GAAD,OAAQA,IAAOpM,QACvC7C,OAfQ,KAgBpBgP,EAAYA,EAAUK,MAAM,EAhBR,KAWK,UAOrBT,EAAYM,QAAQ,OAAQF,GAPP,yBAQrBJ,EAAYM,QAAQrM,EAAKuM,GARJ,QAS3BE,IAT2B,4CAAH,0DAYpBA,EAAiB,mCAAG,gHACCV,EAAYG,QAAkB,QAD/B,oJAC2C,GAD3C,eAClBC,EADkB,KAElBO,EAAM,IAAI9K,IAAIuK,GAFI,UAGFJ,EAAY9M,OAHV,QAGlB0N,EAHkB,iBAIRA,GAJQ,8DAKV,UADL3M,EAJe,oEAMjB0M,EAAI9I,IAAI5D,GANS,kCAMG+L,EAAYa,WAAW5M,GAN1B,0MAAH,qDAUVoJ,EAAkB,kBAAM2C,EAAYc","sources":["component/ui/SwipeDelete.tsx","component/menu/SideMenu.tsx","component/menu/NoteHeader.tsx","component/menu/NoteList.tsx","component/menu/header/Left.tsx","component/menu/header/Right.tsx","component/menu/header/index.tsx","component/menu/MainMenu.tsx","lib/note/imgCache.ts"],"sourcesContent":["import React, {\n  FC,\n  useRef,\n  Dispatch,\n  useState,\n  useEffect,\n  useContext,\n  SetStateAction,\n  TransitionEventHandler,\n} from \"react\";\nimport { useSwipeable } from \"react-swipeable\";\nimport classNames from \"classnames\";\nimport \"./swipe-delete.sass\";\nimport { v4 as getUid } from \"uuid\";\nimport { useEventWaiter } from \"../../lib/hooks\";\n\nconst SwipeDeleteContext = React.createContext({\n  nowSwiped: \"\",\n  setNowSwiped: (() => {}) as Dispatch<SetStateAction<string>>,\n});\n\nexport const SwipeDeleteProvider: FC = ({ children }) => {\n  const [nowSwiped, setNowSwiped] = useState(\"\");\n  return (\n    <SwipeDeleteContext.Provider value={{ nowSwiped, setNowSwiped }}>\n      {children}\n    </SwipeDeleteContext.Provider>\n  );\n};\n\nexport const SwipeDelete: FC<{\n  onDelete: () => void;\n  disable?: boolean;\n  className?: string;\n}> = ({ children, onDelete, disable = false, className }) => {\n  const [uid] = useState(getUid);\n\n  const { nowSwiped, setNowSwiped } = useContext(SwipeDeleteContext);\n  const [swiped, setSwiped] = useState(false);\n  const deleting = swiped && (!nowSwiped || nowSwiped === uid);\n  const [deleted, setDeleted] = useState(false);\n\n  const [height, setHeight] = useState<number>();\n  const wrapper = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (nowSwiped !== uid) setSwiped(false);\n  }, [nowSwiped, uid]);\n\n  const showDelete = () => {\n    setSwiped(true);\n    setNowSwiped(uid);\n    setHeight(wrapper.current?.clientHeight);\n  };\n\n  const hideDelete = () => {\n    setSwiped(false);\n    setNowSwiped(\"\");\n    setHeight(undefined);\n  };\n\n  const swipeHandler = useSwipeable({\n    onSwipedLeft: showDelete,\n    onSwipedRight: hideDelete,\n    preventDefaultTouchmoveEvent: true,\n    trackTouch: !disable,\n  });\n\n  useEffect(() => {\n    if (!disable) return;\n    setHeight(undefined);\n    setNowSwiped(\"\");\n    setSwiped(false);\n  }, [disable, setNowSwiped]);\n\n  const [transDidEnd, transEnd] = useEventWaiter();\n  const handleClick = async () => {\n    setDeleted(true);\n    await transDidEnd;\n    onDelete();\n    setNowSwiped(\"\");\n  };\n\n  const handleTransEnd: TransitionEventHandler = (e) => {\n    if (e.propertyName === \"height\" && deleted) transEnd();\n  };\n\n  return (\n    <div\n      className={classNames(\"swipe-wrapper\", className)}\n      data-deleted={deleted}\n      data-deleting={deleting}\n      {...swipeHandler}\n      style={{ height }}\n      onTransitionEnd={handleTransEnd}\n    >\n      <div className=\"content\" ref={wrapper}>\n        {children}\n      </div>\n      <div className=\"button\" onClick={handleClick} style={{ height }}>\n        Delete\n      </div>\n    </div>\n  );\n};\n","import { FC, useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  TagOutlined,\r\n  DeleteOutlined,\r\n  SettingOutlined,\r\n  ContainerOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { deleteTag, editTag, NoteTag, addNewTag } from \"../../lib/note/archive\";\r\nimport { SwipeDelete, SwipeDeleteProvider } from \"../ui/SwipeDelete\";\r\nimport { Button, Input, Popconfirm, Select } from \"antd\";\r\nimport { colors, getRandomColor } from \"../../lib/color\";\r\nimport { ColorCirle } from \"../widgets/ColorCircle\";\r\nimport { MenuCtx } from \"./MainMenu\";\r\nimport { Setter } from \"../../lib/hooks\";\r\n\r\nconst TagInput: FC<{\r\n  tagName: string;\r\n  setTagName: Setter<string>;\r\n  tagColor: string;\r\n  setTagColor: Setter<string>;\r\n}> = ({ tagName, setTagName, tagColor, setTagColor }) => {\r\n  const colorSelector = (\r\n    <Select value={tagColor} onSelect={setTagColor} listHeight={150}>\r\n      {colors.map((c) => (\r\n        <Select.Option value={c} key={c}>\r\n          <ColorCirle className=\"tag-circle\" color={c} />\r\n        </Select.Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n\r\n  return (\r\n    <Input\r\n      autoFocus\r\n      placeholder=\"Tag name...\"\r\n      className=\"tag-name-input\"\r\n      addonBefore={colorSelector}\r\n      value={tagName}\r\n      onChange={(e) => setTagName(e.target.value)}\r\n    />\r\n  );\r\n};\r\n\r\nconst TagItem: FC<{ noteTag: NoteTag }> = ({ noteTag }) => {\r\n  const { uid, color, name, notes } = noteTag;\r\n  const { editing, tagUid, setAllTags, setTagUid } = useContext(MenuCtx);\r\n  const [tagName, setTagName] = useState(name);\r\n  const [tagColor, setTagColor] = useState(color);\r\n  const [tagEditing, setTagEditing] = useState(false);\r\n  useEffect(() => setTagEditing(false), [editing]);\r\n\r\n  async function removeTag() {\r\n    const tags = await deleteTag(uid);\r\n    setTagUid(\"DEFAULT\");\r\n    setAllTags(tags);\r\n  }\r\n\r\n  const cancelEditing = () => {\r\n    setTagName(name);\r\n    setTagColor(color);\r\n    setTagEditing(false);\r\n  };\r\n\r\n  const finishEditing = async () => {\r\n    const newTag: NoteTag = {\r\n      ...noteTag,\r\n      name: tagName,\r\n      color: tagColor,\r\n    };\r\n\r\n    const newAllTags = await editTag(newTag);\r\n    setAllTags(newAllTags);\r\n    setTagEditing(false);\r\n  };\r\n\r\n  const displayPanel = (\r\n    <>\r\n      <ColorCirle className=\"tag-circle\" color={tagColor} />\r\n      <span className=\"tag-name\">{tagName}</span>\r\n      {editing || <span className=\"tag-num\">{notes.length}</span>}\r\n      {editing && (\r\n        <Button\r\n          size=\"small\"\r\n          type=\"text\"\r\n          onClick={() => setTagEditing(true)}\r\n          icon={<SettingOutlined />}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const editingPanel = (\r\n    <>\r\n      <TagInput\r\n        tagName={tagName}\r\n        setTagName={setTagName}\r\n        tagColor={tagColor}\r\n        setTagColor={setTagColor}\r\n      />\r\n      <div className=\"buttons\">\r\n        <Popconfirm\r\n          title=\"This tag will be deleted.\"\r\n          onConfirm={removeTag}\r\n          placement=\"left\"\r\n          cancelText=\"Cancel\"\r\n          icon={<DeleteOutlined />}\r\n          okText=\"Delete\"\r\n          okType=\"danger\"\r\n          okButtonProps={{ type: \"primary\" }}\r\n        >\r\n          <Button danger>Delete</Button>\r\n        </Popconfirm>\r\n        <Button onClick={cancelEditing}>Cancel</Button>\r\n        <Button type=\"primary\" disabled={!tagName} onClick={finishEditing}>\r\n          OK\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <SwipeDelete className=\"tag-wrapper\" onDelete={removeTag} disable={editing}>\r\n      <div\r\n        className=\"tag-item\"\r\n        data-curr={tagUid === uid}\r\n        data-editing={tagEditing}\r\n        onClick={() => setTagUid(uid)}\r\n      >\r\n        {tagEditing ? editingPanel : displayPanel}\r\n      </div>\r\n    </SwipeDelete>\r\n  );\r\n};\r\n\r\nconst NewTagItem: FC<{ setAdding: Setter<boolean> }> = ({ setAdding }) => {\r\n  const [tagName, setTagName] = useState(\"\");\r\n  const [tagColor, setTagColor] = useState(getRandomColor());\r\n  const { setAllTags } = useContext(MenuCtx);\r\n\r\n  const addTag = () => {\r\n    const name = tagName.trim();\r\n    if (!name) return;\r\n    addNewTag(name, tagColor).then(setAllTags);\r\n    setAdding(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tag-wrapper\">\r\n      <div className=\"tag-item\" data-curr data-editing>\r\n        <TagInput\r\n          tagName={tagName}\r\n          setTagName={setTagName}\r\n          tagColor={tagColor}\r\n          setTagColor={setTagColor}\r\n        />\r\n        <div className=\"buttons\">\r\n          <Button onClick={() => setAdding(false)}>Cancel</Button>\r\n          <Button type=\"primary\" disabled={!tagName} onClick={addTag}>\r\n            OK\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function SideMenu() {\r\n  const { allTags, editing, tagUid, allNotes, setTagUid, setEditing } =\r\n    useContext(MenuCtx);\r\n  const [adding, setAdding] = useState(false);\r\n\r\n  const allNoteTag = (\r\n    <div className=\"tag-wrapper\">\r\n      <div\r\n        className=\"tag-item\"\r\n        data-curr={tagUid === \"DEFAULT\"}\r\n        onClick={() => setTagUid(\"DEFAULT\")}\r\n      >\r\n        <ContainerOutlined className=\"all-note-icon\" />\r\n        <span className=\"tag-name\">All Notes</span>\r\n        <span className=\"tag-num\">{Object.keys(allNotes).length}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const swichEditing = () => setEditing((prev) => !prev);\r\n\r\n  const editButton = (\r\n    <Button\r\n      className=\"edit-btn small\"\r\n      shape=\"round\"\r\n      type={editing ? \"primary\" : \"default\"}\r\n      onClick={swichEditing}\r\n    >\r\n      {editing ? \"Done\" : \"Edit\"}\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <aside className=\"side-menu\">\r\n      <div className=\"tag-list\">\r\n        {allNoteTag}\r\n        <SwipeDeleteProvider>\r\n          {Object.values(allTags).map((tag) => (\r\n            <TagItem key={tag.uid} noteTag={tag} />\r\n          ))}\r\n        </SwipeDeleteProvider>\r\n        {adding && <NewTagItem setAdding={setAdding} />}\r\n      </div>\r\n      <footer>\r\n        <Button\r\n          shape=\"round\"\r\n          icon={<TagOutlined />}\r\n          onClick={() => setAdding(true)}\r\n          disabled={adding}\r\n        >\r\n          Add\r\n        </Button>\r\n        {editButton}\r\n      </footer>\r\n    </aside>\r\n  );\r\n}\r\n","import { Button, ButtonProps, Dropdown, Input, Menu, Popconfirm } from \"antd\";\r\nimport { FC, useContext } from \"react\";\r\nimport { MenuCtx } from \"./MainMenu\";\r\nimport {\r\n  SwapOutlined,\r\n  TagsOutlined,\r\n  FileOutlined,\r\n  DeleteOutlined,\r\n  SearchOutlined,\r\n  FileTextOutlined,\r\n  RollbackOutlined,\r\n  CheckSquareOutlined,\r\n  SortAscendingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { ColorCirle } from \"../widgets/ColorCircle\";\r\n\r\nexport const NoteHeader: FC<{\r\n  sortType: string;\r\n  setSortType: Setter<string>;\r\n  searchText: string;\r\n  setSearchText: Setter<string>;\r\n  onDelete: () => void;\r\n  onMove: (tagID: string) => void;\r\n  disabled: boolean;\r\n}> = ({\r\n  sortType,\r\n  setSortType,\r\n  searchText,\r\n  setSearchText,\r\n  onDelete,\r\n  onMove,\r\n  disabled = true,\r\n}) => {\r\n  const { editing, allTags, setEditing } = useContext(MenuCtx);\r\n\r\n  const sortMenu = (\r\n    <Menu\r\n      onClick={({ key }) => setSortType(key)}\r\n      selectedKeys={[sortType]}\r\n      className=\"sort-drop\"\r\n      items={[\r\n        {\r\n          type: \"group\",\r\n          label: \"Sort by\",\r\n          children: [\r\n            { icon: <FileOutlined />, key: \"CREATE\", label: \"Date created\" },\r\n            { icon: <FileTextOutlined />, key: \"LAST\", label: \"Date modified\" },\r\n            { icon: <SortAscendingOutlined />, key: \"NAME\", label: \"Name\" },\r\n          ],\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n\r\n  const btnProps: ButtonProps = { type: \"text\", shape: \"circle\" };\r\n  const sortButton = (\r\n    <Dropdown overlay={sortMenu} trigger={[\"click\"]} placement=\"bottom\">\r\n      <Button\r\n        className=\"sort-btn\"\r\n        icon={<SwapOutlined rotate={90} />}\r\n        {...btnProps}\r\n      />\r\n    </Dropdown>\r\n  );\r\n\r\n  const deleteButton = (\r\n    <Popconfirm\r\n      title=\"Notes will be deleted.\"\r\n      onConfirm={onDelete}\r\n      icon={<DeleteOutlined />}\r\n      placement=\"bottom\"\r\n      cancelText=\"Cancel\"\r\n      disabled={disabled}\r\n      okText=\"Delete\"\r\n      okType=\"danger\"\r\n      okButtonProps={{ type: \"primary\" }}\r\n    >\r\n      <Button\r\n        className=\"del-btn\"\r\n        shape=\"round\"\r\n        type=\"text\"\r\n        disabled={disabled}\r\n        danger={!disabled}\r\n        icon={<DeleteOutlined />}\r\n      >\r\n        Delete\r\n      </Button>\r\n    </Popconfirm>\r\n  );\r\n\r\n  const ColorLabel: FC<{\r\n    color: string;\r\n    name: string;\r\n  }> = ({ color, name }) => (\r\n    <div className=\"tag-select\">\r\n      <ColorCirle color={color} className=\"tag-circle\" />\r\n      <span className=\"name\">{name}</span>\r\n    </div>\r\n  );\r\n\r\n  const overlay = (\r\n    <Menu\r\n      onClick={({ key }) => onMove(key)}\r\n      items={[\r\n        {\r\n          key: \"DEFAULT\",\r\n          label: <ColorLabel color=\"#eee\" name=\"No tag\" />,\r\n        },\r\n        ...Object.values(allTags).map((t) => ({\r\n          key: t.uid,\r\n          label: <ColorLabel color={t.color} name={t.name} />,\r\n        })),\r\n      ]}\r\n    />\r\n  );\r\n\r\n  const tagButton = (\r\n    <Dropdown\r\n      disabled={disabled}\r\n      overlay={overlay}\r\n      trigger={[\"click\"]}\r\n      placement=\"bottom\"\r\n    >\r\n      <Button\r\n        shape=\"round\"\r\n        type=\"text\"\r\n        className=\"tag-btn\"\r\n        icon={<TagsOutlined />}\r\n        style={{ transition: \"none\" }}\r\n      >\r\n        Tag\r\n      </Button>\r\n    </Dropdown>\r\n  );\r\n\r\n  return (\r\n    <div className=\"head-tools\" data-editing={editing}>\r\n      {editing ? (\r\n        <>\r\n          <Button\r\n            className=\"small\"\r\n            onClick={() => setEditing(false)}\r\n            icon={<RollbackOutlined />}\r\n            {...btnProps}\r\n          />\r\n          {tagButton}\r\n          {deleteButton}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Input\r\n            value={searchText}\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n            className=\"search-input\"\r\n            prefix={<SearchOutlined />}\r\n            bordered={false}\r\n            allowClear\r\n          />\r\n          {sortButton}\r\n          <Button\r\n            className=\"small\"\r\n            onClick={() => setEditing(true)}\r\n            icon={<CheckSquareOutlined />}\r\n            {...btnProps}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { FC, useMemo, useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  NoteTag,\r\n  deleteNote,\r\n  moveNoteTag,\r\n  editNoteData,\r\n  loadNote,\r\n} from \"../../lib/note/archive\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { CloudTwoTone, CheckCircleFilled } from \"@ant-design/icons\";\r\nimport { SwipeDelete, SwipeDeleteProvider } from \"../ui/SwipeDelete\";\r\nimport { NoteInfo, NotePage } from \"../../lib/note/note\";\r\nimport { DrawState } from \"../../lib/draw/DrawState\";\r\nimport { PageWrapper } from \"../reader/Reader\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport calender from \"dayjs/plugin/calendar\";\r\nimport { NoteHeader } from \"./NoteHeader\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { List, Set } from \"immutable\";\r\nimport { MenuCtx } from \"./MainMenu\";\r\nimport { Input } from \"antd\";\r\nimport dayjs from \"dayjs\";\r\n\r\ndayjs.extend(calender);\r\n\r\nexport default function NoteList({ noteList }: { noteList: List<NoteInfo> }) {\r\n  const { editing, setAllTags, setAllNotes } = useContext(MenuCtx);\r\n  const [sortType, setSortType] = useState(\"LAST\");\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [selectedNotes, setSelectNotes] = useState(Set<string>());\r\n\r\n  const removeNotes = async (uids: string[]) => {\r\n    let tags: Record<string, NoteTag> | undefined;\r\n    let allNotes: Record<string, NoteInfo> | undefined;\r\n    for (let uid of uids) {\r\n      const res = await deleteNote(uid);\r\n      tags = res.tags;\r\n      allNotes = res.allNotes;\r\n    }\r\n    tags && setAllTags(tags);\r\n    allNotes && setAllNotes(allNotes);\r\n  };\r\n\r\n  const moveNotes = async (noteIDs: string[], tagID: string) => {\r\n    let tags: Record<string, NoteTag> | undefined;\r\n    let allNotes: Record<string, NoteInfo> | undefined;\r\n    for (let noteID of noteIDs) {\r\n      const res = await moveNoteTag(noteID, tagID);\r\n      tags = res.tags;\r\n      allNotes = res.allNotes;\r\n    }\r\n    tags && setAllTags(tags);\r\n    allNotes && setAllNotes(allNotes);\r\n  };\r\n\r\n  const sortedList = useMemo(() => {\r\n    const comparator = (t0: number, t1: number) => t1 - t0;\r\n    switch (sortType) {\r\n      case \"CREATE\":\r\n        return noteList.sortBy((n) => n.createTime, comparator);\r\n      case \"LAST\":\r\n        return noteList.sortBy((n) => n.lastTime, comparator);\r\n      case \"NAME\":\r\n        return noteList.sortBy((n) => n.name.toUpperCase());\r\n      default:\r\n        return noteList;\r\n    }\r\n  }, [noteList, sortType]);\r\n\r\n  const filterdList = useMemo(\r\n    () =>\r\n      sortedList.filter((n) =>\r\n        n.name.toUpperCase().includes(searchText.trim().toUpperCase())\r\n      ),\r\n    [searchText, sortedList]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setSearchText(\"\");\r\n    setSelectNotes(Set());\r\n  }, [noteList, editing]);\r\n\r\n  return (\r\n    <SwipeDeleteProvider>\r\n      <TransitionGroup className=\"note-list\">\r\n        <NoteHeader\r\n          sortType={sortType}\r\n          setSortType={setSortType}\r\n          searchText={searchText}\r\n          setSearchText={setSearchText}\r\n          onDelete={() => removeNotes(selectedNotes.toArray())}\r\n          onMove={(tagID) => moveNotes(selectedNotes.toArray(), tagID)}\r\n          disabled={selectedNotes.size === 0}\r\n        />\r\n        {filterdList.map((noteInfo) => {\r\n          const { uid } = noteInfo;\r\n          return (\r\n            <CSSTransition key={uid} timeout={300}>\r\n              <SwipeDelete\r\n                className=\"note-wrapper\"\r\n                onDelete={() => removeNotes([uid])}\r\n                disable={editing}\r\n              >\r\n                <NoteItem\r\n                  noteInfo={noteInfo}\r\n                  selected={selectedNotes.has(uid)}\r\n                  setSelectNotes={setSelectNotes}\r\n                />\r\n              </SwipeDelete>\r\n            </CSSTransition>\r\n          );\r\n        })}\r\n      </TransitionGroup>\r\n    </SwipeDeleteProvider>\r\n  );\r\n}\r\n\r\nconst NoteItem: FC<{\r\n  noteInfo: NoteInfo;\r\n  selected: boolean;\r\n  setSelectNotes: Setter<Set<string>>;\r\n}> = ({ noteInfo, selected, setSelectNotes }) => {\r\n  const { team, uid, name, lastTime } = noteInfo;\r\n  const date = useMemo(() => dayjs(lastTime).calendar(), [lastTime]);\r\n  const href = `${team ? \"team\" : \"reader\"}/${uid}`;\r\n\r\n  const { editing, setAllNotes } = useContext(MenuCtx);\r\n  const [noteName, setNoteName] = useState(name);\r\n  const nav = useNavigate();\r\n\r\n  const saveNoteName = () => {\r\n    const newName = noteName.trim();\r\n    if (!newName || newName === name) return setNoteName(name);\r\n    editNoteData(uid, { name: newName });\r\n    setAllNotes((prev) => ({\r\n      ...prev,\r\n      [uid]: { ...prev[uid], name: newName },\r\n    }));\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (!editing) return nav(href);\r\n    setSelectNotes((prev) => {\r\n      if (prev.has(uid)) return prev.delete(uid);\r\n      return prev.add(uid);\r\n    });\r\n  };\r\n\r\n  const [firstPage, setFirstPage] = useState<NotePage>();\r\n  const drawState = useMemo(() => {\r\n    if (!firstPage) return;\r\n    const { state, ratio } = firstPage;\r\n    return DrawState.loadFromFlat(state, ratio);\r\n  }, [firstPage]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const stored = await loadNote(uid);\r\n      if (!stored) return;\r\n      const { pageRec, pageOrder } = stored;\r\n      const firstID = pageOrder[0];\r\n      firstID && setFirstPage(pageRec[firstID]);\r\n    })();\r\n  }, [uid]);\r\n\r\n  const timg = (\r\n    <div\r\n      className=\"timg-wrapper\"\r\n      data-landscape={(firstPage?.ratio ?? 1.5) < 1}\r\n    >\r\n      {firstPage && drawState && (\r\n        <PageWrapper\r\n          drawState={drawState}\r\n          thumbnail={firstPage.image}\r\n          preview\r\n        />\r\n      )}\r\n      {team && <CloudTwoTone className=\"cloud-icon\" />}\r\n      <CheckCircleFilled className=\"checked-icon\" />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"note-item\" data-selected={selected} onClick={handleClick}>\r\n      {timg}\r\n      <div className=\"content\">\r\n        {editing || <p className=\"name\">{name}</p>}\r\n        {editing && (\r\n          <Input\r\n            className=\"name-input\"\r\n            value={noteName}\r\n            onChange={(e) => setNoteName(e.target.value)}\r\n            onClick={(e) => e.stopPropagation()}\r\n            onBlur={saveNoteName}\r\n          />\r\n        )}\r\n        <span className=\"date\">{date}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Button, Drawer } from \"antd\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { MenuOutlined } from \"@ant-design/icons\";\r\nimport SideMenu from \"../SideMenu\";\r\nimport { MenuCtx } from \"../MainMenu\";\r\n\r\nexport default function Left() {\r\n  const [asideOn, setAsideOn] = useState(false);\r\n  const { editing, tagUid, setEditing } = useContext(MenuCtx);\r\n\r\n  useEffect(() => {\r\n    if (!editing) setAsideOn(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [tagUid]);\r\n\r\n  const editButton = (\r\n    <Button\r\n      className=\"edit-btn large\"\r\n      onClick={() => setEditing((prev) => !prev)}\r\n      type={editing ? \"primary\" : \"text\"}\r\n    >\r\n      {editing ? \"Done\" : \"Edit\"}\r\n    </Button>\r\n  );\r\n\r\n  const AsideButton = (\r\n    <>\r\n      <Button\r\n        className=\"aside-btn\"\r\n        type=\"text\"\r\n        icon={<MenuOutlined />}\r\n        onClick={() => setAsideOn((prev) => !prev)}\r\n      />\r\n      <Drawer\r\n        className=\"aside-drawer\"\r\n        width={300}\r\n        placement=\"left\"\r\n        closable={false}\r\n        visible={asideOn}\r\n        onClose={() => setAsideOn(false)}\r\n        contentWrapperStyle={{ boxShadow: \"none\" }}\r\n        bodyStyle={{ padding: 0, overflow: \"hidden\" }}\r\n        destroyOnClose\r\n      >\r\n        <SideMenu />\r\n      </Drawer>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div className=\"left-tools\">\r\n      {AsideButton}\r\n      {editButton}\r\n    </div>\r\n  );\r\n}\r\n","import { useContext, useState } from \"react\";\r\nimport {\r\n  Menu,\r\n  Input,\r\n  Button,\r\n  message,\r\n  Popover,\r\n  Progress,\r\n  Popconfirm,\r\n} from \"antd\";\r\nimport {\r\n  TeamOutlined,\r\n  UserOutlined,\r\n  SyncOutlined,\r\n  ClearOutlined,\r\n  InboxOutlined,\r\n  FilePdfOutlined,\r\n  SettingOutlined,\r\n  CaretDownOutlined,\r\n  ArrowLeftOutlined,\r\n} from \"@ant-design/icons\";\r\nimport * as serviceWorkerRegistration from \"../../../serviceWorkerRegistration\";\r\nimport { CSSTransitionProps } from \"react-transition-group/CSSTransition\";\r\nimport { getUserName, saveUserName } from \"../../../lib/user\";\r\nimport { clearImageCache } from \"../../../lib/note/imgCache\";\r\nimport { createNewNote } from \"../../../lib/note/archive\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { getNoteID } from \"../../../lib/network/http\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Dragger from \"antd/lib/upload/Dragger\";\r\nimport { PasscodeInput } from \"antd-mobile\";\r\nimport localforage from \"localforage\";\r\nimport { MenuCtx } from \"../MainMenu\";\r\nimport { useEffect } from \"react\";\r\nimport { FC } from \"react\";\r\nimport \"./right.sass\";\r\nimport { ActiveKeyProvider, useActiveKey } from \"../../../lib/hooks\";\r\n\r\nexport default function Right() {\r\n  return (\r\n    <div className=\"right-tools\">\r\n      <JoinTeamButton />\r\n      <OthersButton />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst SeconaryMenu: FC<\r\n  {\r\n    title: string;\r\n    keyName: string;\r\n  } & CSSTransitionProps\r\n> = ({ children, title, keyName, ...cssTransProps }) => {\r\n  const [active, setActive] = useActiveKey();\r\n  return (\r\n    <CSSTransition in={active === keyName} {...cssTransProps}>\r\n      <div className=\"secondary\">\r\n        <nav>\r\n          <Button\r\n            type=\"text\"\r\n            shape=\"circle\"\r\n            onClick={() => setActive(\"MENU\")}\r\n            icon={<ArrowLeftOutlined />}\r\n          />\r\n          <h3>{title}</h3>\r\n        </nav>\r\n        {children}\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nconst UploadPdfPage = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const { tagUid, setAllTags, setAllNotes } = useContext(MenuCtx);\r\n  const [percent, setPercent] = useState(0);\r\n\r\n  async function handleFile(file: File) {\r\n    if (file.type !== \"application/pdf\") return;\r\n    setLoading(true);\r\n    const { LoadPDF } = await import(\"../../../lib/note/pdfImage\");\r\n    const note = await LoadPDF(file, setPercent);\r\n    note.tagID = tagUid;\r\n    const { tags, allNotes } = await createNewNote(note);\r\n    setAllTags(tags);\r\n    setAllNotes(allNotes);\r\n    setLoading(false);\r\n    message.success(\"PDF Loaded\");\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <Dragger\r\n      className=\"pdf-upload\"\r\n      disabled={loading}\r\n      multiple={false}\r\n      action=\"#\"\r\n      accept=\"application/pdf\"\r\n      beforeUpload={handleFile}\r\n    >\r\n      <p className=\"ant-upload-drag-icon\">\r\n        {loading && <Progress width={48} type=\"circle\" percent={percent} />}\r\n        {loading || <InboxOutlined />}\r\n      </p>\r\n      <p className=\"ant-upload-hint\">Click or drag a pdf file here.</p>\r\n    </Dragger>\r\n  );\r\n};\r\n\r\nconst ProfilePage = () => {\r\n  const [, setActive] = useActiveKey();\r\n  const userName = getUserName();\r\n  const [name, setName] = useState(userName);\r\n  const handleEnter = () => {\r\n    if (!name) return;\r\n    saveUserName(name);\r\n    setActive(\"MENU\");\r\n  };\r\n  return (\r\n    <div className=\"profile-page\">\r\n      <Input\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        prefix={<UserOutlined />}\r\n        allowClear\r\n      />\r\n      <Button\r\n        disabled={userName === name || !name}\r\n        onClick={handleEnter}\r\n        type=\"primary\"\r\n        block\r\n      >\r\n        OK\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SettingsPage = () => {\r\n  const { menuInit } = useContext(MenuCtx);\r\n\r\n  const clearAll = async () => {\r\n    await localforage.clear();\r\n    await clearImageCache();\r\n    menuInit();\r\n  };\r\n\r\n  return (\r\n    <div className=\"setting-menu\">\r\n      <Button\r\n        icon={<SyncOutlined />}\r\n        onClick={async () => {\r\n          await serviceWorkerRegistration.unregister();\r\n          window.location.reload();\r\n        }}\r\n        block\r\n      >\r\n        Update\r\n      </Button>\r\n      <Popconfirm\r\n        title=\"Everything will be deleted.\"\r\n        onConfirm={clearAll}\r\n        icon={<ClearOutlined />}\r\n        okText=\"Delete\"\r\n        okType=\"danger\"\r\n        okButtonProps={{ type: \"primary\" }}\r\n        cancelText=\"Cancel\"\r\n        placement=\"bottom\"\r\n      >\r\n        <Button icon={<ClearOutlined />} danger block>\r\n          Clear all\r\n        </Button>\r\n      </Popconfirm>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst menuItems = [\r\n  {\r\n    key: \"PDF\",\r\n    label: \"Import PDF\",\r\n    component: <UploadPdfPage />,\r\n    icon: <FilePdfOutlined />,\r\n  },\r\n  {\r\n    key: \"PROFILE\",\r\n    label: \"My profile\",\r\n    component: <ProfilePage />,\r\n    icon: <UserOutlined />,\r\n  },\r\n  {\r\n    key: \"SETTINGS\",\r\n    label: \"Settings\",\r\n    component: <SettingsPage />,\r\n    icon: <SettingOutlined />,\r\n  },\r\n];\r\n\r\nconst PrimaryMenu = () => {\r\n  const [, setActive] = useActiveKey();\r\n  return (\r\n    <div className=\"primary-menu\">\r\n      <Menu onClick={({ key }) => setActive(key)} items={menuItems} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OthersPage = () => {\r\n  const [height, setHeight] = useState(0);\r\n  const [active, setActive] = useActiveKey();\r\n\r\n  const calcHeight = (el: HTMLElement) => {\r\n    setHeight(el.clientHeight);\r\n  };\r\n\r\n  const cssTransProps = {\r\n    timeout: 300,\r\n    onEnter: calcHeight,\r\n    unmountOnExit: true,\r\n  };\r\n\r\n  useEffect(() => setActive(\"MENU\"), [setActive]);\r\n\r\n  return (\r\n    <section className=\"others-menu\" style={{ height }}>\r\n      <CSSTransition in={active === \"MENU\"} {...cssTransProps}>\r\n        <PrimaryMenu />\r\n      </CSSTransition>\r\n      {menuItems.map(({ key, label, component }) => (\r\n        <SeconaryMenu key={key} keyName={key} title={label} {...cssTransProps}>\r\n          {component}\r\n        </SeconaryMenu>\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nconst OthersButton = () => {\r\n  return (\r\n    <Popover\r\n      placement=\"bottomRight\"\r\n      trigger=\"click\"\r\n      content={\r\n        <ActiveKeyProvider initKey=\"\">\r\n          <OthersPage />\r\n        </ActiveKeyProvider>\r\n      }\r\n      zIndex={900}\r\n    >\r\n      <Button className=\"large\" shape=\"circle\" icon={<CaretDownOutlined />} />\r\n      <Button className=\"small\" type=\"text\" icon={<CaretDownOutlined />} />\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst JoinTeamButton = () => {\r\n  const [roomCode, setRoomCode] = useState(\"\");\r\n  const [wrong, setWrong] = useState(false);\r\n\r\n  const nav = useNavigate();\r\n  async function handleSubmit(code: string) {\r\n    const noteID = await getNoteID(code);\r\n    if (noteID) return nav(`/team/${noteID}`);\r\n    setRoomCode(\"\");\r\n    setWrong(true);\r\n  }\r\n\r\n  return (\r\n    <Popover\r\n      placement=\"bottomRight\"\r\n      trigger=\"click\"\r\n      title=\"Join a team note\"\r\n      destroyTooltipOnHide\r\n      onVisibleChange={() => setWrong(false)}\r\n      content={\r\n        <PasscodeInput\r\n          plain\r\n          length={4}\r\n          error={wrong}\r\n          value={roomCode}\r\n          onChange={(v) => {\r\n            setWrong(false);\r\n            setRoomCode(v);\r\n          }}\r\n          onFill={handleSubmit}\r\n        />\r\n      }\r\n    >\r\n      <Button className=\"team-btn large\" shape=\"round\" icon={<TeamOutlined />}>\r\n        Team\r\n      </Button>\r\n      <Button className=\"team-btn small\" type=\"text\" icon={<TeamOutlined />} />\r\n    </Popover>\r\n  );\r\n};\r\n","import { useContext } from \"react\";\nimport { MenuCtx } from \"../MainMenu\";\nimport Left from \"./Left\";\nimport Right from \"./Right\";\nimport \"./header.sass\";\n\nexport function MenuHeader() {\n  const { tagUid, allTags } = useContext(MenuCtx);\n  const logo = tagUid === \"DEFAULT\";\n  return (\n    <header>\n      <Left />\n      <h2 data-logo={logo}>{logo ? \"Multibility\" : allTags[tagUid]?.name}</h2>\n      <Right />\n    </header>\n  );\n}\n","import React, { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport {\r\n  createNewNote,\r\n  getAllNotes,\r\n  getAllTags,\r\n  NoteTag,\r\n} from \"../../lib/note/archive\";\r\nimport { createEmptyNote, NoteInfo } from \"../../lib/note/note\";\r\nimport { FormOutlined } from \"@ant-design/icons\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport SideMenu from \"./SideMenu\";\r\nimport NoteList from \"./NoteList\";\r\nimport { List } from \"immutable\";\r\nimport { Button } from \"antd\";\r\nimport \"./menu.sass\";\r\nimport { MenuHeader } from \"./header\";\r\n\r\nexport const MenuCtx = React.createContext({\r\n  tagUid: \"DEFAULT\",\r\n  editing: false,\r\n  allNotes: {} as Record<string, NoteInfo>,\r\n  allTags: {} as Record<string, NoteTag>,\r\n  setAllNotes: (() => {}) as Setter<Record<string, NoteInfo>>,\r\n  setAllTags: (() => {}) as Setter<Record<string, NoteTag>>,\r\n  setTagUid: (() => {}) as Setter<string>,\r\n  setEditing: (() => {}) as Setter<boolean>,\r\n  menuInit: () => {},\r\n});\r\n\r\nexport default function MainMenu() {\r\n  const [allNotes, setAllNotes] = useState<Record<string, NoteInfo>>({});\r\n  const [allTags, setAllTags] = useState<Record<string, NoteTag>>({});\r\n  const [tagUid, setTagUid] = useState(\"DEFAULT\");\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const selectedTag = useMemo(\r\n    () =>\r\n      allTags[tagUid] ?? {\r\n        uid: \"\",\r\n        name: \"All Notes\",\r\n        color: \"#000000\",\r\n        notes: Object.keys(allNotes),\r\n      },\r\n    [allNotes, allTags, tagUid]\r\n  );\r\n\r\n  const noteList = useMemo(\r\n    () =>\r\n      List(\r\n        selectedTag.notes\r\n          .filter((uid) => uid in allNotes)\r\n          .map((uid) => allNotes[uid])\r\n      ),\r\n    [selectedTag, allNotes]\r\n  );\r\n\r\n  const menuInit = () => {\r\n    getAllNotes().then(setAllNotes);\r\n    getAllTags().then(setAllTags);\r\n    document.title = \"Multibility\";\r\n  };\r\n  useEffect(menuInit, []);\r\n\r\n  return (\r\n    <MenuCtx.Provider\r\n      value={{\r\n        tagUid,\r\n        editing,\r\n        allNotes,\r\n        allTags,\r\n        setAllNotes,\r\n        setAllTags,\r\n        setEditing,\r\n        setTagUid,\r\n        menuInit,\r\n      }}\r\n    >\r\n      <div className=\"main-menu container\">\r\n        <MenuHeader />\r\n        <main>\r\n          <SideMenu />\r\n          <NoteList noteList={noteList} />\r\n          <NewNoteButton />\r\n        </main>\r\n      </div>\r\n    </MenuCtx.Provider>\r\n  );\r\n}\r\n\r\nexport const NewNoteButton = () => {\r\n  const { tagUid, setAllTags, setAllNotes } = useContext(MenuCtx);\r\n\r\n  async function addNewNote() {\r\n    const note = createEmptyNote();\r\n    note.tagID = tagUid;\r\n    const { tags, allNotes } = await createNewNote(note);\r\n    setAllTags(tags);\r\n    setAllNotes(allNotes);\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      className=\"new-note\"\r\n      size=\"large\"\r\n      type=\"primary\"\r\n      shape=\"circle\"\r\n      onClick={addNewNote}\r\n      icon={<FormOutlined />}\r\n    />\r\n  );\r\n};\r\n","import localforage from \"localforage\";\n\nconst IMAGE_CACHE_MAX = 10;\nconst imageForage = localforage.createInstance({ name: \"imageForage\" });\nexport const getImageCache = async (noteID: string, index: number) => {\n  let cacheList = (await imageForage.getItem<string[]>(\"LIST\")) ?? [];\n  const key = `${noteID}_${index}`;\n  if (!cacheList.includes(key)) return;\n  cacheList = [key, ...cacheList.filter((id) => id !== key)];\n  await imageForage.setItem(\"LIST\", cacheList);\n  return await imageForage.getItem<string>(key);\n};\n\nexport const setImageCache = async (noteID: string, index: number, data: string) => {\n  let cacheList = (await imageForage.getItem<string[]>(\"LIST\")) ?? [];\n  const key = `${noteID}_${index}`;\n  cacheList = [key, ...cacheList.filter((id) => id !== key)];\n  if (cacheList.length > IMAGE_CACHE_MAX) {\n    cacheList = cacheList.slice(0, IMAGE_CACHE_MAX);\n  }\n  await imageForage.setItem(\"LIST\", cacheList);\n  await imageForage.setItem(key, data);\n  removeUnusedCache();\n};\n\nconst removeUnusedCache = async () => {\n  const cacheList = (await imageForage.getItem<string[]>(\"LIST\")) ?? [];\n  const set = new Set(cacheList);\n  const allKeys = await imageForage.keys();\n  for (let key of allKeys) {\n    if (key === \"LIST\") continue;\n    if (!set.has(key)) await imageForage.removeItem(key);\n  }\n};\n\nexport const clearImageCache = () => imageForage.clear();\n"],"names":["SwipeDeleteContext","React","nowSwiped","setNowSwiped","SwipeDeleteProvider","children","useState","Provider","value","SwipeDelete","onDelete","disable","className","getUid","uid","useContext","swiped","setSwiped","deleting","deleted","setDeleted","height","setHeight","wrapper","useRef","useEffect","swipeHandler","useSwipeable","onSwipedLeft","current","clientHeight","onSwipedRight","undefined","preventDefaultTouchmoveEvent","trackTouch","useEventWaiter","transDidEnd","transEnd","handleClick","classNames","style","onTransitionEnd","e","propertyName","ref","onClick","TagInput","tagName","setTagName","tagColor","setTagColor","colorSelector","onSelect","listHeight","colors","c","color","autoFocus","placeholder","addonBefore","onChange","target","TagItem","noteTag","name","notes","MenuCtx","editing","tagUid","setAllTags","setTagUid","tagEditing","setTagEditing","removeTag","deleteTag","tags","finishEditing","newTag","editTag","newAllTags","displayPanel","length","size","type","icon","SettingOutlined","editingPanel","title","onConfirm","placement","cancelText","DeleteOutlined","okText","okType","okButtonProps","danger","disabled","NewTagItem","setAdding","getRandomColor","trim","addNewTag","then","SideMenu","allTags","allNotes","setEditing","adding","allNoteTag","ContainerOutlined","Object","keys","editButton","shape","prev","values","map","tag","TagOutlined","NoteHeader","sortType","setSortType","searchText","setSearchText","onMove","sortMenu","key","selectedKeys","items","label","FileOutlined","FileTextOutlined","SortAscendingOutlined","btnProps","sortButton","overlay","trigger","SwapOutlined","rotate","deleteButton","ColorLabel","t","tagButton","TagsOutlined","transition","RollbackOutlined","prefix","SearchOutlined","bordered","allowClear","CheckSquareOutlined","NoteList","noteList","setAllNotes","Set","selectedNotes","setSelectNotes","removeNotes","uids","deleteNote","res","moveNotes","noteIDs","tagID","noteID","moveNoteTag","sortedList","useMemo","comparator","t0","t1","sortBy","n","createTime","lastTime","toUpperCase","filterdList","filter","includes","TransitionGroup","toArray","noteInfo","CSSTransition","timeout","NoteItem","selected","has","dayjs","calender","team","date","calendar","href","noteName","setNoteName","nav","useNavigate","firstPage","setFirstPage","drawState","state","ratio","DrawState","loadNote","stored","pageRec","pageOrder","firstID","timg","PageWrapper","thumbnail","image","preview","CloudTwoTone","CheckCircleFilled","delete","add","stopPropagation","onBlur","newName","editNoteData","Left","asideOn","setAsideOn","AsideButton","MenuOutlined","width","closable","visible","onClose","contentWrapperStyle","boxShadow","bodyStyle","padding","overflow","destroyOnClose","Right","JoinTeamButton","OthersButton","SeconaryMenu","keyName","cssTransProps","useActiveKey","active","setActive","in","ArrowLeftOutlined","UploadPdfPage","loading","setLoading","percent","setPercent","file","LoadPDF","note","createNewNote","message","Dragger","multiple","action","accept","beforeUpload","InboxOutlined","ProfilePage","userName","getUserName","setName","UserOutlined","saveUserName","block","SettingsPage","menuInit","clearAll","localforage","clearImageCache","SyncOutlined","serviceWorkerRegistration","window","location","reload","ClearOutlined","menuItems","component","FilePdfOutlined","PrimaryMenu","OthersPage","onEnter","el","unmountOnExit","content","initKey","zIndex","CaretDownOutlined","roomCode","setRoomCode","wrong","setWrong","code","getNoteID","destroyTooltipOnHide","onVisibleChange","plain","error","v","onFill","TeamOutlined","MenuHeader","logo","MainMenu","selectedTag","List","getAllNotes","getAllTags","document","NewNoteButton","createEmptyNote","FormOutlined","imageForage","getImageCache","index","getItem","cacheList","id","setItem","setImageCache","data","slice","removeUnusedCache","set","allKeys","removeItem","clear"],"sourceRoot":""}