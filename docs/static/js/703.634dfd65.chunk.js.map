{"version":3,"file":"static/js/703.634dfd65.chunk.js","mappings":"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","sources":["lib/draw/drawCtrl.ts","lib/draw/StateSet.ts","component/reader/ReaderUtils.tsx","component/ui/IconFont.tsx","component/reader/tools/PenPanel.tsx","component/reader/header/Middle.tsx","component/reader/tools/DrawTools.tsx","lib/array.ts","component/widgets/UserAvatar.tsx","component/reader/PageNav.tsx","component/reader/header/Right.tsx","component/reader/header/Header.tsx","lib/touch/touch.ts","component/draw/Draw.tsx","component/reader/Reader.tsx","lib/network/io.ts","lib/draw/TeamState.ts","component/reader/Team.tsx","lib/draw/canvas.ts"],"sourcesContent":["import localforage from \"localforage\";\r\nexport interface DrawCtrl {\r\n  mode: \"draw\" | \"erase\" | \"select\" | \"text\";\r\n  finger: boolean;\r\n  lineWidth: number;\r\n  eraserWidth: number;\r\n  color: string;\r\n  highlight: boolean;\r\n  lasso: boolean;\r\n  widthList: number[];\r\n}\r\n\r\nexport const defaultWidthList = [10, 20, 30, 50];\r\nexport const defaultDrawCtrl: Readonly<DrawCtrl> = {\r\n  mode: \"draw\",\r\n  finger: true,\r\n  lineWidth: 10,\r\n  eraserWidth: 10,\r\n  color: \"#000000\",\r\n  highlight: false,\r\n  lasso: true,\r\n  widthList: defaultWidthList,\r\n};\r\n\r\nexport async function getDrawCtrl() {\r\n  let drawCtrl = (await localforage.getItem(\"DRAW_CTRL\")) as DrawCtrl | null;\r\n  if (!drawCtrl) {\r\n    drawCtrl = defaultDrawCtrl;\r\n    await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n  }\r\n  return drawCtrl;\r\n}\r\n\r\nexport async function saveDrawCtrl(drawCtrl: DrawCtrl) {\r\n  await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n}\r\n","import { DrawState, Operation, Stroke, WIDTH } from \"./DrawState\";\r\nimport { List, Map, Record } from \"immutable\";\r\nimport { NotePage } from \"../note/note\";\r\n\r\ninterface StateSetRecordType {\r\n  states: Map<string, DrawState>;\r\n  editStack: List<string>;\r\n  undoStack: List<string>;\r\n}\r\n\r\nconst defaultRecord: Readonly<StateSetRecordType> = {\r\n  states: Map(),\r\n  editStack: List(),\r\n  undoStack: List(),\r\n};\r\n\r\ntype StateSetRecord = Record<StateSetRecordType>;\r\nconst defaultFactory = Record(defaultRecord);\r\n\r\nexport type SetOperation = Operation & { pageID: string };\r\n\r\nexport class StateSet {\r\n  constructor(\r\n    private immutable: StateSetRecord,\r\n    public lastOp?: SetOperation\r\n  ) {}\r\n\r\n  static createFromPages(\r\n    pageRec: globalThis.Record<string, NotePage>,\r\n    width = WIDTH\r\n  ) {\r\n    return new StateSet(\r\n      defaultFactory().set(\r\n        \"states\",\r\n        Map(pageRec).map(({ state, ratio }) =>\r\n          DrawState.loadFromFlat(state, width, width * ratio)\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  getImmutable() {\r\n    return this.immutable;\r\n  }\r\n\r\n  getStates() {\r\n    return this.getImmutable().get(\"states\");\r\n  }\r\n\r\n  getOneState(pageID: string) {\r\n    return this.getStates().get(pageID);\r\n  }\r\n\r\n  getEditStack() {\r\n    return this.getImmutable().get(\"editStack\");\r\n  }\r\n\r\n  getUndoStack() {\r\n    return this.getImmutable().get(\"undoStack\");\r\n  }\r\n\r\n  setState(pageID: string, drawState: DrawState) {\r\n    const prevDS = this.getOneState(pageID);\r\n    if (!prevDS || prevDS === drawState) return this;\r\n    let currRecord = this.getImmutable()\r\n      .update(\"states\", (s) => s.set(pageID, drawState))\r\n      .update(\"editStack\", (l) => l.push(pageID))\r\n      .delete(\"undoStack\");\r\n\r\n    const { lastOp } = drawState;\r\n    const lastSetOp = lastOp && { ...lastOp, pageID };\r\n\r\n    return new StateSet(currRecord, lastSetOp);\r\n  }\r\n\r\n  // sync with mutation.\r\n  syncStrokeTime(pageID: string, stroke: Stroke) {\r\n    const prevDS = this.getOneState(pageID);\r\n    prevDS && DrawState.syncStrokeTime(prevDS, stroke);\r\n    return this;\r\n  }\r\n\r\n  addState(pageID: string, notePage: NotePage, width = WIDTH) {\r\n    const { state, ratio } = notePage;\r\n    const newDS = DrawState.loadFromFlat(state, width, width * ratio);\r\n    const currRecord = this.getImmutable().update(\"states\", (s) =>\r\n      s.set(pageID, newDS)\r\n    );\r\n    return new StateSet(currRecord);\r\n  }\r\n\r\n  deleteState(pageID: string) {\r\n    return new StateSet(\r\n      this.getImmutable().update(\"states\", (s) => s.delete(pageID))\r\n    );\r\n  }\r\n\r\n  isUndoable() {\r\n    return this.getEditStack().size > 0;\r\n  }\r\n\r\n  isRedoable() {\r\n    return this.getUndoStack().size > 0;\r\n  }\r\n\r\n  undo() {\r\n    if (!this.isUndoable()) return this;\r\n    const lastUid = this.getEditStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.undo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"editStack\", (s) => s.pop())\r\n        .update(\"undoStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  redo() {\r\n    if (!this.isRedoable()) return this;\r\n    const lastUid = this.getUndoStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.redo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"undoStack\", (s) => s.pop())\r\n        .update(\"editStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  getLastDS(): [string, DrawState] | undefined {\r\n    const pageID = this.lastOp?.pageID;\r\n    const ds = pageID && this.getOneState(pageID);\r\n    if (ds) return [pageID, ds];\r\n  }\r\n}\r\n","import { Button, message } from \"antd\";\r\nimport React, { useContext } from \"react\";\r\nimport { ReaderMethodCtx } from \"./Reader\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nexport const AddPageButton = () => {\r\n  const { addFinalPage } = useContext(ReaderMethodCtx);\r\n  return (\r\n    <div className=\"add-btn-wrapper\">\r\n      <Button\r\n        type=\"dashed\"\r\n        icon={<PlusOutlined />}\r\n        block\r\n        onClick={addFinalPage}\r\n      >\r\n        New page\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const showPageDelMsg = (onUndo: () => void) => {\r\n  message.warning({\r\n    content: (\r\n      <>\r\n        One page was deleted.\r\n        <Button\r\n          size=\"small\"\r\n          type=\"link\"\r\n          onClick={() => {\r\n            message.destroy(\"DELETE\");\r\n            onUndo();\r\n          }}\r\n        >\r\n          Undo\r\n        </Button>\r\n      </>\r\n    ),\r\n    key: \"DELETE\",\r\n    duration: 10,\r\n  });\r\n};\r\n","import { createFromIconfontCN } from \"@ant-design/icons\";\r\n\r\nexport default createFromIconfontCN({\r\n  scriptUrl: \"//at.alicdn.com/t/font_3181679_yo844n7qgns.js\",\r\n});\r\n","import { CSSProperties, FC, useEffect, useMemo, useState } from \"react\";\nimport { defaultWidthList, DrawCtrl } from \"../../../lib/draw/drawCtrl\";\nimport { Button, Popover, Segmented, Slider } from \"antd\";\nimport { ColorCirle } from \"../../widgets/ColorCircle\";\nimport { ColorSelect } from \"../header/Middle\";\nimport { Setter } from \"../../../lib/hooks\";\nimport IconFont from \"../../ui/IconFont\";\nimport { List } from \"immutable\";\nimport \"./penPanel.sass\";\n\nexport const PenPanel: FC<{\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\n  drawCtrl: Partial<DrawCtrl>;\n}> = ({ updateDrawCtrl, drawCtrl }) => {\n  const { highlight, color } = drawCtrl;\n  const [panelBlur, setPanelBlur] = useState(false);\n\n  return (\n    <div className=\"pen-panel\" data-blur={panelBlur}>\n      <div className=\"pen-status\">\n        <WidthSelect\n          updateDrawCtrl={updateDrawCtrl}\n          drawCtrl={drawCtrl}\n          setPanelBlur={setPanelBlur}\n        />\n        <Button\n          type=\"primary\"\n          ghost\n          shape=\"circle\"\n          className=\"hi-btn\"\n          data-checked={highlight}\n          icon={<IconFont type=\"icon-Highlight\" />}\n          onClick={() => updateDrawCtrl({ highlight: !highlight })}\n        />\n      </div>\n      <ColorSelect\n        color={color || \"\"}\n        setColor={(c) => updateDrawCtrl({ color: c })}\n      />\n    </div>\n  );\n};\n\nexport const WidthSelect: FC<{\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\n  drawCtrl: Partial<DrawCtrl>;\n  setPanelBlur?: Setter<boolean>;\n  field?: \"lineWidth\" | \"eraserWidth\";\n}> = ({\n  updateDrawCtrl,\n  drawCtrl,\n  setPanelBlur = () => {},\n  field = \"lineWidth\",\n}) => {\n  const currWidth = drawCtrl[field];\n  const widthList = drawCtrl.widthList ?? defaultWidthList;\n  const color = field === \"lineWidth\" ? drawCtrl.color ?? \"#0003\" : \"#0003\";\n\n  const chosen = useMemo(\n    () => Math.max(0, widthList.indexOf(currWidth ?? 0)),\n    [currWidth, widthList]\n  );\n\n  const [popShow, setPopShow] = useState(List([false, false, false, false]));\n  useEffect(() => {\n    if (popShow.includes(true)) setPanelBlur(true);\n    else setPanelBlur(false);\n  }, [popShow, setPanelBlur]);\n\n  const options = widthList.map((width, index) => ({\n    value: index,\n    label: (\n      <Popover\n        visible={popShow.get(index)}\n        onVisibleChange={(v) => setPopShow((prev) => prev.set(index, v))}\n        trigger={chosen === index ? [\"click\"] : []}\n        placement=\"bottom\"\n        destroyTooltipOnHide\n        content={\n          <Slider\n            min={5}\n            max={100}\n            className=\"ctrl-slider\"\n            defaultValue={width}\n            onAfterChange={(w) => {\n              if (widthList.includes(w)) {\n                setPopShow((prev) => prev.set(index, false));\n                return updateDrawCtrl({ [field]: w });\n              }\n              const newWL = widthList.slice();\n              newWL[index] = w;\n              updateDrawCtrl({ widthList: newWL, [field]: w });\n            }}\n          />\n        }\n      >\n        <div\n          className=\"circle-wrapper\"\n          style={{ \"--real-size\": `calc(0.05vw * ${width})` } as CSSProperties}\n        >\n          <ColorCirle className=\"width-circle\" color={color} />\n        </div>\n      </Popover>\n    ),\n  }));\n\n  return (\n    <Segmented\n      className=\"width-seg\"\n      value={chosen}\n      options={options}\n      onChange={(i) => {\n        if (typeof i !== \"number\") return;\n        updateDrawCtrl({ [field]: widthList[i] ?? 5 });\n      }}\n    />\n  );\n};\n","import { FC, useContext, CSSProperties } from \"react\";\r\nimport { Button, message, Popover, ButtonProps } from \"antd\";\r\nimport { ReaderMethodCtx, ReaderStateCtx } from \"../Reader\";\r\nimport { DrawCtrl, saveDrawCtrl } from \"../../../lib/draw/drawCtrl\";\r\nimport {\r\n  UndoOutlined,\r\n  RedoOutlined,\r\n  GatewayOutlined,\r\n  HighlightOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { colors } from \"../../../lib/color\";\r\nimport IconFont from \"../../ui/IconFont\";\r\nimport { PenPanel, WidthSelect } from \"../tools/PenPanel\";\r\n\r\nexport const HeaderMiddle = () => {\r\n  const { stateSet, drawCtrl } = useContext(ReaderStateCtx);\r\n  const { setDrawCtrl, handleUndo, handleRedo } = useContext(ReaderMethodCtx);\r\n  const { mode, finger } = drawCtrl;\r\n\r\n  const updateDrawCtrl = (updated: Partial<DrawCtrl>) => {\r\n    console.log(updated)\r\n    setDrawCtrl((prev) => {\r\n      const newCtrl = { ...prev, ...updated };\r\n      saveDrawCtrl(newCtrl);\r\n      return newCtrl;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"middle\">\r\n      <Button\r\n        type=\"text\"\r\n        shape=\"circle\"\r\n        icon={<UndoOutlined />}\r\n        onClick={handleUndo}\r\n        disabled={!stateSet?.isUndoable()}\r\n      />\r\n      <Button\r\n        type=\"text\"\r\n        shape=\"circle\"\r\n        icon={<RedoOutlined />}\r\n        onClick={handleRedo}\r\n        disabled={!stateSet?.isRedoable()}\r\n      />\r\n      <Button\r\n        type={finger ? \"default\" : \"text\"}\r\n        shape=\"circle\"\r\n        onClick={() => {\r\n          updateDrawCtrl({ finger: !finger });\r\n          message.destroy(\"FINGER\");\r\n          message.open({\r\n            content: finger ? \"Pencil only\" : \"Draw with finger\",\r\n            key: \"FINGER\",\r\n          });\r\n        }}\r\n        icon={<IconFont type=\"icon-finger\" />}\r\n      />\r\n      <PenButton updateDrawCtrl={updateDrawCtrl} />\r\n      <EraserButton updateDrawCtrl={updateDrawCtrl} />\r\n      <Button\r\n        type={mode === \"text\" ? \"default\" : \"text\"}\r\n        shape=\"circle\"\r\n        onClick={() => updateDrawCtrl({ mode: \"text\" })}\r\n        icon={<IconFont type=\"icon-text1\" />}\r\n      />\r\n      <SelectButton updateDrawCtrl={updateDrawCtrl} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PenButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const { drawCtrl } = useContext(ReaderStateCtx);\r\n  const { mode } = drawCtrl;\r\n\r\n  const btnProps: ButtonProps = {\r\n    shape: \"circle\",\r\n    icon: <HighlightOutlined />,\r\n  };\r\n  return mode === \"draw\" ? (\r\n    <Popover\r\n      content={<PenPanel updateDrawCtrl={updateDrawCtrl} drawCtrl={drawCtrl} />}\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e.parentElement!}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button type=\"default\" {...btnProps} />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      onClick={() => updateDrawCtrl({ mode: \"draw\" })}\r\n      {...btnProps}\r\n    />\r\n  );\r\n};\r\n\r\nexport const ColorSelect: FC<{\r\n  color: string;\r\n  setColor: (color: string) => void;\r\n}> = ({ setColor, color }) => {\r\n  return (\r\n    <div className=\"color-select\">\r\n      {colors.map((c) => (\r\n        <label key={c}>\r\n          <input\r\n            checked={color === c}\r\n            type=\"radio\"\r\n            name=\"color\"\r\n            onChange={() => setColor(c)}\r\n          />\r\n          <div\r\n            className=\"circle\"\r\n            style={{ \"--circle-color\": c } as CSSProperties}\r\n          ></div>\r\n        </label>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EraserButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const { drawCtrl } = useContext(ReaderStateCtx);\r\n\r\n  const btnProps: ButtonProps = {\r\n    shape: \"circle\",\r\n    icon: <IconFont type=\"icon-eraser\" />,\r\n  };\r\n\r\n  return drawCtrl.mode === \"erase\" ? (\r\n    <Popover\r\n      content={\r\n        <WidthSelect\r\n          drawCtrl={drawCtrl}\r\n          updateDrawCtrl={updateDrawCtrl}\r\n          field=\"eraserWidth\"\r\n        />\r\n      }\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e.parentElement!}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button type=\"default\" {...btnProps} />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      onClick={() => updateDrawCtrl({ mode: \"erase\" })}\r\n      {...btnProps}\r\n    />\r\n  );\r\n};\r\n\r\nconst SelectButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const {\r\n    drawCtrl: { lasso, mode },\r\n  } = useContext(ReaderStateCtx);\r\n\r\n  const icon = lasso ? <IconFont type=\"icon-lasso1\" /> : <GatewayOutlined />;\r\n\r\n  return mode === \"select\" ? (\r\n    <Button\r\n      type=\"default\"\r\n      shape=\"circle\"\r\n      icon={icon}\r\n      onClick={() => updateDrawCtrl({ lasso: !lasso })}\r\n    />\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      shape=\"circle\"\r\n      icon={icon}\r\n      onClick={() => updateDrawCtrl({ mode: \"select\" })}\r\n    />\r\n  );\r\n};\r\n","import { FC, RefObject, useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  CopyOutlined,\r\n  DeleteOutlined,\r\n  BgColorsOutlined,\r\n  FontSizeOutlined,\r\n  CaretLeftOutlined,\r\n  FontColorsOutlined,\r\n  CaretRightOutlined,\r\n  RotateRightOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Button, ButtonProps, InputNumber, Modal, Popover } from \"antd\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { DrawCtrl } from \"../../../lib/draw/drawCtrl\";\r\nimport { createWorker, Worker } from \"tesseract.js\";\r\nimport { ColorSelect } from \"../header/Middle\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { useDrag } from \"@use-gesture/react\";\r\nimport { DrawRefType } from \"../../draw/Draw\";\r\nimport { colors } from \"../../../lib/color\";\r\nimport IconFont from \"../../ui/IconFont\";\r\nimport { PenPanel } from \"./PenPanel\";\r\nimport copy from \"clipboard-copy\";\r\nimport \"./drawTools.sass\";\r\n\r\nconst getOcrWorker = (() => {\r\n  let worker: Worker;\r\n  return async () => {\r\n    if (worker) return worker;\r\n    worker = createWorker({ logger: console.log });\r\n    await worker.load();\r\n    await worker.loadLanguage(\"eng+chi_sim\");\r\n    await worker.initialize(\"eng+chi_sim\");\r\n    return worker;\r\n  };\r\n})();\r\n\r\nexport const SelectTool: FC<{\r\n  drawRef: RefObject<DrawRefType>;\r\n  visible: boolean;\r\n}> = ({ drawRef, visible }) => {\r\n  const btnProps: ButtonProps = {\r\n    type: \"text\",\r\n    shape: \"round\",\r\n    size: \"small\",\r\n  };\r\n\r\n  const [currDrawCtrl, setCurrDrawCtrl] = useState<Partial<DrawCtrl>>({});\r\n  useEffect(() => setCurrDrawCtrl({}), [visible]);\r\n  const rotateEl = useRef<HTMLDivElement>(null);\r\n  const [dragged, setDragged] = useState(false);\r\n  const [transX, setTransX] = useState(0);\r\n  const gearStyle = { transform: `translateX(${transX}px)` };\r\n\r\n  useDrag(\r\n    ({ first, last, offset, delta }) => {\r\n      setTransX(offset[0]);\r\n      drawRef.current?.rotateSelected(delta[0] / 2, last);\r\n      first && setDragged(true);\r\n      last && setDragged(false);\r\n    },\r\n    {\r\n      target: rotateEl,\r\n      filterTaps: true,\r\n      rubberband: 0.05,\r\n      bounds: { left: -90, right: 90 },\r\n    }\r\n  );\r\n\r\n  const [recoginzing, setRecoginzing] = useState(false);\r\n  const recognizeText = async () => {\r\n    setRecoginzing(true);\r\n    if (!drawRef.current) return;\r\n    const imageData = drawRef.current.rasterize();\r\n    try {\r\n      const worker = await getOcrWorker();\r\n      const { text } = (await worker.recognize(imageData)).data;\r\n      Modal.confirm({\r\n        title: \"OCR Result\",\r\n        content: <TextArea defaultValue={text} />,\r\n        icon: <IconFont type=\"icon-OCR\" />,\r\n        okText: \"Copy\",\r\n        onOk: () => copy(text),\r\n      });\r\n    } catch (e) {\r\n      console.error(e);\r\n    } finally {\r\n      setRecoginzing(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CSSTransition timeout={300} in={visible} unmountOnExit>\r\n      <div className=\"select-tool\">\r\n        <Popover\r\n          trigger=\"click\"\r\n          placement=\"bottom\"\r\n          getPopupContainer={(e) => e.parentElement!}\r\n          destroyTooltipOnHide\r\n          content={\r\n            <PenPanel\r\n              updateDrawCtrl={(updated) => {\r\n                setCurrDrawCtrl((prev) => ({ ...prev, ...updated }));\r\n                drawRef.current?.mutateStyle(updated);\r\n              }}\r\n              drawCtrl={currDrawCtrl}\r\n            />\r\n          }\r\n        >\r\n          <Button icon={<BgColorsOutlined />} {...btnProps} />\r\n        </Popover>\r\n        <div className=\"rotate-wrapper\" data-dragged={dragged} ref={rotateEl}>\r\n          <Button\r\n            icon={<RotateRightOutlined />}\r\n            onClick={() => drawRef.current?.rotateSelected(90, true)}\r\n            {...btnProps}\r\n          />\r\n          <CaretLeftOutlined className=\"arrow left\" />\r\n          <CaretRightOutlined className=\"arrow right\" />\r\n          <div className=\"gear\" style={gearStyle} />\r\n        </div>\r\n        <Button\r\n          icon={<CopyOutlined />}\r\n          onClick={() => drawRef.current?.duplicateSelected()}\r\n          {...btnProps}\r\n        />\r\n        <Button\r\n          icon={<IconFont type=\"icon-OCR\" />}\r\n          loading={recoginzing}\r\n          onClick={recognizeText}\r\n          {...btnProps}\r\n        />\r\n        <Button\r\n          danger\r\n          icon={<DeleteOutlined />}\r\n          onClick={() => drawRef.current?.deleteSelected()}\r\n          {...btnProps}\r\n        />\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport const TextTool: FC<{\r\n  drawRef: RefObject<DrawRefType>;\r\n  visible: boolean;\r\n}> = ({ visible, drawRef }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [fontSize, setFontSize] = useState(5);\r\n  const [color, setColor] = useState(colors[0]);\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      title=\"Insert text\"\r\n      onCancel={() => drawRef.current?.cancelText()}\r\n      onOk={() => {\r\n        const content = text.trim();\r\n        if (!content) return drawRef.current?.cancelText();\r\n        drawRef.current?.submitText(content, fontSize, color);\r\n      }}\r\n      bodyStyle={{ paddingTop: 0 }}\r\n      destroyOnClose\r\n    >\r\n      <div className=\"insert-option\">\r\n        <span className=\"font-size\">\r\n          <FontSizeOutlined />\r\n          <span>Font size: </span>\r\n          <InputNumber\r\n            min={1}\r\n            size=\"small\"\r\n            value={fontSize}\r\n            onChange={setFontSize}\r\n          />\r\n        </span>\r\n        <Popover\r\n          content={<ColorSelect color={color} setColor={setColor} />}\r\n          overlayStyle={{ width: 200 }}\r\n          placement=\"bottom\"\r\n        >\r\n          <Button\r\n            className=\"tag-btn\"\r\n            size=\"small\"\r\n            icon={<FontColorsOutlined style={{ color }} />}\r\n          >\r\n            Font color\r\n          </Button>\r\n        </Popover>\r\n      </div>\r\n      <TextArea\r\n        autoFocus\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n","import { Map } from \"immutable\";\r\n\r\nexport function exchange<T>(list: T[], fromIndex: number, toIndex: number) {\r\n  const result = list.slice();\r\n  const [removed] = result.splice(fromIndex, 1);\r\n  result.splice(toIndex, 0, removed);\r\n  return result;\r\n}\r\n\r\nexport function insertAfter<T>(list: T[], prevItem: T, newItem: T) {\r\n  const prevIndex = list.indexOf(prevItem);\r\n  const curr = list.slice();\r\n  if (prevIndex === -1) return curr;\r\n  curr.splice(prevIndex + 1, 0, newItem);\r\n  return curr;\r\n}\r\n\r\nexport function getLargestKey(map: Map<string, number>) {\r\n  let result = \"\";\r\n  let maxRatio = 0;\r\n  map.forEach((ratio, pageID) => {\r\n    if (ratio > maxRatio) {\r\n      result = pageID;\r\n      maxRatio = ratio;\r\n    }\r\n  });\r\n  return result;\r\n}\r\n","import { Avatar } from \"antd\";\nimport { AvatarSize } from \"antd/lib/avatar/SizeContext\";\nimport { FC, useContext, useMemo } from \"react\";\nimport { getHashedColor } from \"../../lib/color\";\nimport { TeamCtx } from \"../reader/Team\";\n\nexport const UserAvatar: FC<{\n  userID: string;\n  size?: AvatarSize;\n  onClick?: () => void;\n  chosen?: boolean;\n  className?: string;\n}> = ({\n  userID,\n  size = \"default\",\n  onClick = () => {},\n  chosen = false,\n  className,\n}) => {\n  const { userRec } = useContext(TeamCtx);\n  const color = useMemo(() => getHashedColor(userID), [userID]);\n  const userInfo = userRec[userID];\n  if (!userInfo) return null;\n  const { userName } = userInfo;\n\n  return (\n    <Avatar\n      className={className}\n      data-chosen={chosen}\n      size={size}\n      style={{ backgroundColor: color }}\n    >\n      <div className=\"avatar-wrapper\" onClick={onClick}>\n        {userName?.slice(0, 3)}\n      </div>\n    </Avatar>\n  );\n};\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n} from \"react\";\r\nimport {\r\n  MoreOutlined,\r\n  PlusOutlined,\r\n  CopyOutlined,\r\n  DeleteOutlined,\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  Draggable,\r\n  Droppable,\r\n  DropResult,\r\n  DragDropContext,\r\n} from \"react-beautiful-dnd\";\r\nimport { PageWrapper, ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport { Avatar, Button, Drawer, Menu, Popover, Tabs } from \"antd\";\r\nimport { AddPageButton } from \"./ReaderUtils\";\r\nimport { exchange } from \"../../lib/array\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport IconFont from \"../ui/IconFont\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport \"./preview.sass\";\r\nimport { UserAvatar } from \"../widgets/UserAvatar\";\r\nimport classNames from \"classnames\";\r\n\r\nconst PreviewCtx = React.createContext({\r\n  activeKey: \"ALL\",\r\n  setActiveKey: (() => {}) as Setter<string>,\r\n});\r\n\r\nconst PageNavContent = () => {\r\n  const { pageOrder, currPageID } = useContext(ReaderStateCtx);\r\n  const { scrollPage, saveReorder } = useContext(ReaderMethodCtx);\r\n  const { activeKey } = useContext(PreviewCtx);\r\n  const refRec = useRef<Record<string, HTMLElement>>({});\r\n\r\n  const onDragEnd = ({ source, destination }: DropResult) => {\r\n    if (!destination || !pageOrder) return;\r\n    const { index: fromIndex } = source;\r\n    const { index: toIndex } = destination;\r\n    if (fromIndex === toIndex) return;\r\n    const pageID = pageOrder[fromIndex];\r\n    const newOrder = exchange(pageOrder, fromIndex, toIndex);\r\n    saveReorder(newOrder, true);\r\n    requestAnimationFrame(() => scrollPage(pageID));\r\n  };\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => refRec.current[currPageID]?.scrollIntoView(), []);\r\n\r\n  return (\r\n    <div className=\"preview-container\">\r\n      <PreviewTabs />\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"preview-list\">\r\n          {({ droppableProps, innerRef, placeholder }) => (\r\n            <div className=\"page-list\" ref={innerRef} {...droppableProps}>\r\n              {pageOrder?.map((uid, index) => (\r\n                <PagePreview\r\n                  key={uid}\r\n                  uid={uid}\r\n                  pageIndex={index}\r\n                  refRec={refRec.current}\r\n                />\r\n              ))}\r\n              {placeholder}\r\n              {activeKey === \"ALL\" && <AddPageButton />}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PagePreview: FC<{\r\n  uid: string;\r\n  pageIndex: number;\r\n  refRec: Record<string, HTMLElement>;\r\n}> = ({ uid, pageIndex, refRec }) => {\r\n  const { stateSet, teamState, pageRec, currPageID } =\r\n    useContext(ReaderStateCtx);\r\n  const { scrollPage } = useContext(ReaderMethodCtx);\r\n  const { activeKey } = useContext(PreviewCtx);\r\n  const [chosen, setChosen] = useState(\"\");\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n\r\n  if (!page || !drawState) return null;\r\n  const { image, marked } = page;\r\n\r\n  if (\r\n    activeKey === \"WRITTEN\" &&\r\n    drawState.isEmpty() &&\r\n    (!teamStateMap || teamStateMap.every((ds) => ds.isEmpty()))\r\n  ) {\r\n    return null;\r\n  }\r\n  if (activeKey === \"MARKED\" && !marked) return null;\r\n  const curr = currPageID === uid;\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={uid}\r\n      index={pageIndex}\r\n      isDragDisabled={activeKey !== \"ALL\"}\r\n    >\r\n      {(\r\n        { innerRef, draggableProps, dragHandleProps },\r\n        { isDragging: dragged }\r\n      ) => (\r\n        <div\r\n          ref={(e) => {\r\n            innerRef(e);\r\n            if (e) refRec[uid] = e;\r\n          }}\r\n          className=\"page\"\r\n          data-curr={curr}\r\n          data-dragged={dragged}\r\n          onClick={() => scrollPage(uid)}\r\n          {...draggableProps}\r\n          {...dragHandleProps}\r\n        >\r\n          <PageWrapper\r\n            uid={uid}\r\n            drawState={teamStateMap?.get(chosen) || drawState}\r\n            teamStateMap={chosen ? undefined : teamStateMap}\r\n            thumbnail={image}\r\n            preview\r\n          />\r\n          <PreviewTools\r\n            uid={uid}\r\n            index={pageIndex}\r\n            chosen={chosen}\r\n            setChosen={setChosen}\r\n          />\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst PreviewTools: FC<{\r\n  uid: string;\r\n  index: number;\r\n  chosen: string;\r\n  setChosen: Setter<string>;\r\n}> = ({ uid, index, chosen, setChosen }) => {\r\n  const { switchPageMarked } = useContext(ReaderMethodCtx);\r\n  const { teamState, pageRec } = useContext(ReaderStateCtx);\r\n  const { ignores } = useContext(TeamCtx);\r\n  const userIDs = useMemo(\r\n    () =>\r\n      teamState\r\n        ?.getPageValidUsers(uid)\r\n        .filter((userID) => !ignores.has(userID)) || [],\r\n    [teamState, ignores, uid]\r\n  );\r\n  const page = pageRec?.get(uid);\r\n  if (!page) return null;\r\n  const { marked } = page;\r\n\r\n  return (\r\n    <div className=\"tools\" onClick={(e) => e.stopPropagation()}>\r\n      <span\r\n        className=\"bookmark\" data-marked={marked}\r\n        onClick={() => switchPageMarked(uid)}\r\n      />\r\n      <span className=\"index\">{index + 1}</span>\r\n      <PreviewOption uid={uid} />\r\n      <TeamAvatars userIDs={userIDs} chosen={chosen} setChosen={setChosen} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TeamAvatars: FC<{\r\n  userIDs: string[];\r\n  chosen: string;\r\n  setChosen: Setter<string>;\r\n}> = ({ userIDs, chosen, setChosen }) => {\r\n  return (\r\n    <Avatar.Group\r\n      maxCount={2}\r\n      size=\"default\"\r\n      className={classNames(\"team-group\", { chosen })}\r\n      maxPopoverPlacement=\"bottom\"\r\n    >\r\n      {userIDs.map((userID) => (\r\n        <UserAvatar\r\n          key={userID}\r\n          size=\"default\"\r\n          userID={userID}\r\n          className=\"preview-avatar\"\r\n          chosen={chosen === userID}\r\n          onClick={() => setChosen((prev) => (prev === userID ? \"\" : userID))}\r\n        />\r\n      ))}\r\n    </Avatar.Group>\r\n  );\r\n};\r\n\r\nconst PreviewOption = ({ uid }: { uid: string }) => {\r\n  const { addPage, deletePage } = useContext(ReaderMethodCtx);\r\n\r\n  const menu = (\r\n    <Menu\r\n      onClick={({ key }) => {\r\n        if (key === \"ADD\") {\r\n          addPage(uid);\r\n        } else if (key === \"COPY\") {\r\n          addPage(uid, true);\r\n        } else if (key === \"DELETE\") {\r\n          deletePage(uid);\r\n        }\r\n      }}\r\n      items={[\r\n        { key: \"ADD\", icon: <PlusOutlined />, label: \"Add page\" },\r\n        { key: \"COPY\", icon: <CopyOutlined />, label: \"Duplicate\" },\r\n        {\r\n          key: \"DELETE\",\r\n          icon: <DeleteOutlined />,\r\n          label: \"Delete\",\r\n          danger: true,\r\n        },\r\n      ]}\r\n    ></Menu>\r\n  );\r\n  return (\r\n    <Popover\r\n      content={menu}\r\n      trigger=\"click\"\r\n      placement=\"left\"\r\n      destroyTooltipOnHide\r\n    >\r\n      <span className=\"option\">\r\n        <MoreOutlined />\r\n      </span>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst PreviewTabs = () => {\r\n  const { activeKey, setActiveKey } = useContext(PreviewCtx);\r\n  const { TabPane } = Tabs;\r\n  return (\r\n    <Tabs\r\n      className=\"tabs\"\r\n      activeKey={activeKey}\r\n      onChange={setActiveKey}\r\n      tabBarGutter={10}\r\n      size=\"small\"\r\n      centered\r\n    >\r\n      <TabPane tab={<IconFont type=\"icon-uf_paper\" />} key=\"ALL\" />\r\n      <TabPane tab={<IconFont type=\"icon-bookmark2\" />} key=\"MARKED\" />\r\n      <TabPane tab={<IconFont type=\"icon-write\" />} key=\"WRITTEN\" />\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default function PageNav() {\r\n  const [navOn, setNavOn] = useState(false);\r\n  const [activeKey, setActiveKey] = useState<string>(\"ALL\");\r\n  const title = {\r\n    ALL: \"All Pages\",\r\n    MARKED: \"Bookmarks\",\r\n    WRITTEN: \"Notes\",\r\n  }[activeKey];\r\n\r\n  return (\r\n    <PreviewCtx.Provider value={{ activeKey, setActiveKey }}>\r\n      <Button\r\n        type=\"text\"\r\n        icon={navOn ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\r\n        onClick={() => setNavOn((prev) => !prev)}\r\n      />\r\n      <Drawer\r\n        visible={navOn}\r\n        onClose={() => setNavOn(false)}\r\n        width={200}\r\n        title={title}\r\n        closable={false}\r\n        zIndex={800}\r\n        className=\"preview-drawer\"\r\n        bodyStyle={{ padding: 0, overflow: \"hidden\" }}\r\n        headerStyle={{ textAlign: \"center\" }}\r\n        destroyOnClose\r\n      >\r\n        <PageNavContent />\r\n      </Drawer>\r\n    </PreviewCtx.Provider>\r\n  );\r\n}\r\n","import { FC, useMemo, useState, useEffect, useContext } from \"react\";\r\nimport { Badge, Alert, Modal, Button, Divider, message, Popover } from \"antd\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { PasscodeInput } from \"antd-mobile\";\r\nimport { ReaderMethodCtx, ReaderStateCtx } from \"../Reader\";\r\nimport { TeamCtx } from \"../Team\";\r\nimport { getUserID, saveUserName } from \"../../../lib/user\";\r\nimport PageNav from \"../PageNav\";\r\nimport {\r\n  EyeOutlined,\r\n  FormOutlined,\r\n  TeamOutlined,\r\n  CopyOutlined,\r\n  CheckOutlined,\r\n  ReloadOutlined,\r\n  ShareAltOutlined,\r\n  DisconnectOutlined,\r\n  EyeInvisibleOutlined,\r\n  UsergroupAddOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { editNoteData } from \"../../../lib/note/archive\";\r\nimport { UserAvatar } from \"../../widgets/UserAvatar\";\r\nimport { putNote } from \"../../../lib/network/http\";\r\nimport copy from \"clipboard-copy\";\r\n\r\nexport const HeaderRight = () => {\r\n  const { teamOn } = useContext(TeamCtx);\r\n  return (\r\n    <div className=\"right\">\r\n      {teamOn ? <RoomInfo /> : <JoinRoom />}\r\n      <PageNav />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst UserCard: FC<{ userID: string }> = ({ userID }) => {\r\n  const [renaming, setRenaming] = useState(false);\r\n  const { ignores, setIgnores, resetIO, userRec } = useContext(TeamCtx);\r\n  const userInfo = userRec[userID];\r\n  useEffect(() => setRenaming(false), [userInfo]);\r\n  if (!userInfo) return null;\r\n\r\n  const { userName, online } = userInfo;\r\n  const self = userID === getUserID();\r\n  const ignored = ignores.has(userID) && !self;\r\n\r\n  const switchIgnore = () => {\r\n    setIgnores((prev) => {\r\n      if (prev.has(userID)) return prev.delete(userID);\r\n      return prev.add(userID);\r\n    });\r\n  };\r\n\r\n  const submitRename = (value: string) => {\r\n    const name = value.trim();\r\n    if (!name || name === userName) return setRenaming(false);\r\n    saveUserName(name);\r\n    resetIO();\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-item\" data-online={online}>\r\n      <UserAvatar userID={userID} size=\"small\" className=\"room-avatar\" />\r\n      {renaming || <span className=\"user-name\">{userName}</span>}\r\n      {renaming && (\r\n        <Search\r\n          autoFocus\r\n          className=\"rename-input\"\r\n          defaultValue={userName}\r\n          onSearch={submitRename}\r\n          enterButton={<Button icon={<CheckOutlined />} />}\r\n        />\r\n      )}\r\n      {self ? (\r\n        renaming || (\r\n          <Button\r\n            type=\"text\"\r\n            icon={<FormOutlined />}\r\n            onClick={() => setRenaming(true)}\r\n          />\r\n        )\r\n      ) : (\r\n        <Button\r\n          type=\"text\"\r\n          icon={ignored ? <EyeInvisibleOutlined /> : <EyeOutlined />}\r\n          onClick={switchIgnore}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RoomInfo: FC = () => {\r\n  const { code, userRec, connected, loadInfo, loadState, resetIO } =\r\n    useContext(TeamCtx);\r\n  const { noteInfo } = useContext(ReaderStateCtx);\r\n  const link = window.location.href;\r\n  const share = async () => {\r\n    const selfName = userRec[getUserID()]?.userName;\r\n    try {\r\n      if (!noteInfo) return;\r\n      await copy(`${noteInfo.name} - ${selfName} - Multibility\\n${link}`);\r\n      message.destroy(\"copy\");\r\n      message.success({\r\n        content: \"Link copied!\",\r\n        icon: <CopyOutlined />,\r\n        key: \"copy\",\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const userList = useMemo(() => {\r\n    const selfID = getUserID();\r\n    const { [selfID]: selfInfo, ...otherUsers } = userRec;\r\n    const list = selfInfo ? [selfInfo] : [];\r\n    const values = Object.values(otherUsers);\r\n    list.push(\r\n      ...values.filter(({ online }) => online),\r\n      ...values.filter(({ online }) => !online)\r\n    );\r\n    return list;\r\n  }, [userRec]);\r\n\r\n  const onlineNum = useMemo(\r\n    () => userList.filter(({ online }) => online).length,\r\n    [userList]\r\n  );\r\n\r\n  const teamPop = (\r\n    <div className=\"team-popover\">\r\n      {connected || (\r\n        <Alert\r\n          className=\"disconn-alert\"\r\n          message=\"Network failed.\"\r\n          icon={<DisconnectOutlined />}\r\n          type=\"error\"\r\n          showIcon\r\n          banner\r\n        />\r\n      )}\r\n      <PasscodeInput\r\n        className=\"code-display\"\r\n        value={String(code)}\r\n        length={4}\r\n        plain\r\n      />\r\n      <Button\r\n        icon={<ShareAltOutlined />}\r\n        className=\"share-btn\"\r\n        onClick={share}\r\n        block\r\n      >\r\n        Share\r\n      </Button>\r\n      <Divider />\r\n      <div className=\"user-list\">\r\n        {userList.map((u) => (\r\n          <UserCard key={u.userID} userID={u.userID} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const [reloading, setReloading] = useState(false);\r\n  const title = (\r\n    <div className=\"team-title\">\r\n      <span>Team info</span>\r\n      <Button\r\n        shape=\"circle\"\r\n        type=\"text\"\r\n        size=\"small\"\r\n        loading={reloading}\r\n        icon={<ReloadOutlined />}\r\n        onClick={async () => {\r\n          setReloading(true);\r\n          await loadInfo();\r\n          await loadState();\r\n          setReloading(false);\r\n          resetIO();\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Popover\r\n      content={teamPop}\r\n      trigger=\"click\"\r\n      placement=\"bottomRight\"\r\n      title={title}\r\n      getPopupContainer={(e) => e.parentElement!}\r\n    >\r\n      <Button\r\n        type=\"text\"\r\n        icon={\r\n          <Badge\r\n            status={connected ? \"success\" : \"error\"}\r\n            count={connected ? onlineNum : \"!\"}\r\n            size=\"small\"\r\n          >\r\n            <TeamOutlined />\r\n          </Badge>\r\n        }\r\n      />\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst JoinRoom = () => {\r\n  const { noteID } = useContext(ReaderStateCtx);\r\n  const { instantSave } = useContext(ReaderMethodCtx);\r\n  const nav = useNavigate();\r\n\r\n  const createRoom = async () => {\r\n    await instantSave();\r\n    const res = await putNote(noteID);\r\n    if (!res) return message.error(\"Can't create room.\");\r\n    await editNoteData(noteID, { team: true });\r\n    nav(\"/team/\" + noteID);\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      type=\"text\"\r\n      icon={<UsergroupAddOutlined />}\r\n      onClick={() => {\r\n        Modal.confirm({\r\n          title: \"Enable team editing\",\r\n          content: \"This will make your note public.\",\r\n          icon: <TeamOutlined style={{ color: \"#555\" }} />,\r\n          onOk: createRoom,\r\n        });\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import { useContext } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ReaderMethodCtx, ReaderStateCtx } from \"../Reader\";\r\nimport { HomeFilled, SaveOutlined } from \"@ant-design/icons\";\r\nimport { HeaderMiddle } from \"./Middle\";\r\nimport { HeaderRight } from \"./Right\";\r\nimport \"./header.sass\";\r\n\r\nexport default function ReaderHeader() {\r\n  return (\r\n    <header>\r\n      <HeaderLeft />\r\n      <HeaderMiddle />\r\n      <HeaderRight />\r\n    </header>\r\n  );\r\n}\r\n\r\nconst HeaderLeft = () => {\r\n  const { saved } = useContext(ReaderStateCtx);\r\n  const { instantSave } = useContext(ReaderMethodCtx);\r\n  const nav = useNavigate();\r\n\r\n  return (\r\n    <div className=\"left\">\r\n      <Button\r\n        type=\"text\"\r\n        onClick={async () => {\r\n          await instantSave();\r\n          nav(\"/\");\r\n        }}\r\n        icon={<HomeFilled style={{ opacity: 0.8 }} />}\r\n      />\r\n      <Button\r\n        type=\"text\"\r\n        className=\"save\"\r\n        onClick={instantSave}\r\n        disabled={saved}\r\n        icon={<SaveOutlined />}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { PointerEvent, TouchEvent, useEffect, useRef } from \"react\";\r\n\r\ntype iOSTouch = Touch & {\r\n  force?: number;\r\n  touchType?: \"stylus\" | \"direct\";\r\n};\r\n\r\nexport function isApplePencil(e: TouchEvent) {\r\n  const touch = e.touches[0] as iOSTouch;\r\n  return touch?.touchType === \"stylus\";\r\n}\r\n\r\nexport function usePreventTouch(\r\n  allowFinger: boolean\r\n): React.CanvasHTMLAttributes<HTMLCanvasElement> {\r\n  const isTouch = useRef(false);\r\n  const checkPoniter = (e: PointerEvent) =>\r\n    e.isPrimary && (isTouch.current = e.pointerType === \"touch\");\r\n\r\n  const isEventValid = (e: TouchEvent) =>\r\n    !isTouch.current ||\r\n    isApplePencil(e) ||\r\n    (allowFinger && e.touches.length === 1);\r\n\r\n  const preventTouch = (e: TouchEvent) =>\r\n    isEventValid(e) || e.stopPropagation();\r\n\r\n  return {\r\n    onPointerDownCapture: checkPoniter,\r\n    onPointerMoveCapture: checkPoniter,\r\n    onTouchStartCapture: preventTouch,\r\n    onTouchMoveCapture: preventTouch,\r\n  };\r\n}\r\n\r\nexport function usePreventGesture() {\r\n  useEffect(() => {\r\n    const handler = (e: Event) => e.preventDefault();\r\n    document.addEventListener(\"gesturestart\", handler);\r\n    document.addEventListener(\"gesturechange\", handler);\r\n    document.addEventListener(\"gestureend\", handler);\r\n    return () => {\r\n      document.removeEventListener(\"gesturestart\", handler);\r\n      document.removeEventListener(\"gesturechange\", handler);\r\n      document.removeEventListener(\"gestureend\", handler);\r\n    };\r\n  }, []);\r\n}\r\n","import React, {\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  Dispatch,\r\n  useEffect,\r\n  useCallback,\r\n  useDebugValue,\r\n  SetStateAction,\r\n  useImperativeHandle,\r\n} from \"react\";\r\nimport { usePreventTouch, usePreventGesture } from \"../../lib/touch/touch\";\r\nimport { DrawState, Mutation, Stroke } from \"../../lib/draw/DrawState\";\r\nimport { defaultDrawCtrl, DrawCtrl } from \"../../lib/draw/drawCtrl\";\r\nimport { releaseCanvas } from \"../../lib/draw/canvas\";\r\nimport { usePinch } from \"@use-gesture/react\";\r\nimport { v4 as getUid } from \"uuid\";\r\nimport { Set } from \"immutable\";\r\nimport paper from \"paper\";\r\nimport \"./draw.sass\";\r\n\r\nconst PREVIEW_WIDTH = 200;\r\nconst {\r\n  Path,\r\n  Size,\r\n  Point,\r\n  Group,\r\n  Color,\r\n  Raster,\r\n  Shape: { Rectangle },\r\n} = paper;\r\n\r\nexport type ActiveToolKey = \"\" | \"select\" | \"text\";\r\nexport interface DrawRefType {\r\n  deleteSelected: () => void;\r\n  rotateSelected: (angle: number, last?: boolean) => void;\r\n  duplicateSelected: () => void;\r\n  mutateStyle: (updated: Partial<DrawCtrl>) => void;\r\n  rasterize: () => string;\r\n  submitText: (text: string, fontSize: number, color: string) => void;\r\n  cancelText: () => void;\r\n}\r\ninterface DrawPropType {\r\n  drawState: DrawState;\r\n  otherStates?: DrawState[];\r\n  onChange?: Dispatch<SetStateAction<DrawState>>;\r\n  setActiveTool?: Dispatch<SetStateAction<ActiveToolKey>>;\r\n  drawCtrl?: DrawCtrl;\r\n  readonly?: boolean;\r\n  preview?: boolean;\r\n  imgSrc?: string;\r\n}\r\n\r\nconst Draw = React.forwardRef<DrawRefType, DrawPropType>(\r\n  (\r\n    {\r\n      drawState,\r\n      otherStates,\r\n      onChange = () => {},\r\n      drawCtrl = defaultDrawCtrl,\r\n      preview = false,\r\n      readonly = preview,\r\n      imgSrc,\r\n      setActiveTool,\r\n    },\r\n    ref\r\n  ) => {\r\n    const { width, height } = drawState;\r\n    const { mode, color, finger, lineWidth, highlight, eraserWidth, lasso } =\r\n      drawCtrl;\r\n\r\n    const canvasEl = useRef<HTMLCanvasElement>(null);\r\n    const scope = useRef(new paper.PaperScope());\r\n    const [group, setGroup] = useState<paper.Item[]>([]);\r\n    const [erased, setErased] = useState(Set<string>());\r\n    const [path, setPath] = usePaperItem<paper.Path>();\r\n    const [rect, setRect] = usePaperItem<paper.Shape.Rectangle>();\r\n\r\n    useEffect(() => {\r\n      const cvs = canvasEl.current;\r\n      const scp = scope.current;\r\n      if (!cvs) return;\r\n\r\n      scp.setup(cvs);\r\n      const r = preview ? PREVIEW_WIDTH / width : 1;\r\n      scp.view.viewSize = new Size(width, height).multiply(r);\r\n      scp.view.scale(r, new Point(0, 0));\r\n      paintBackground(scp, width, height);\r\n\r\n      return () => {\r\n        scp.remove();\r\n        releaseCanvas(cvs);\r\n      };\r\n    }, [width, height, preview]);\r\n\r\n    useEffect(() => {\r\n      if (!imgSrc) return;\r\n      const img = new Image();\r\n      img.src = imgSrc;\r\n      let raster: paper.Raster;\r\n\r\n      img.onload = () => {\r\n        scope.current.activate();\r\n        raster = new Raster(img);\r\n        scope.current.project.layers[0].addChild(raster);\r\n        raster.position = scope.current.view.center;\r\n        let r = width / img.width;\r\n        raster.scale(r);\r\n      };\r\n\r\n      return () => void raster?.remove();\r\n    }, [imgSrc, width]);\r\n\r\n    const mergedStrokes = useMemo(\r\n      () =>\r\n        otherStates\r\n          ? DrawState.mergeStates(drawState, ...otherStates)\r\n          : drawState.getStrokeList(),\r\n      [drawState, otherStates]\r\n    );\r\n\r\n    useEffect(() => {\r\n      const tempGroup: paper.Item[] = [];\r\n      const othersGroup: paper.Item[] = [];\r\n\r\n      mergedStrokes.forEach((stroke) =>\r\n        paintStroke(\r\n          stroke,\r\n          scope.current,\r\n          drawState.hasStroke(stroke.uid) ? tempGroup : othersGroup,\r\n          erased.has(stroke.uid)\r\n        )\r\n      );\r\n      setGroup(tempGroup);\r\n\r\n      return () => {\r\n        tempGroup.forEach((item) => item.remove());\r\n        othersGroup.forEach((item) => item.remove());\r\n      };\r\n    }, [mergedStrokes, erased, drawState]);\r\n\r\n    const [selected, setSelected] = useState(false);\r\n    const paperMode = mode === \"select\" && selected ? \"selected\" : mode;\r\n    const [selectedIDs, setSelectedIDs] = useState<string[]>([]);\r\n    const selectedItems = useMemo(() => {\r\n      const IDSet = Set(selectedIDs);\r\n      return group.filter((item) => IDSet.has(item.name));\r\n    }, [group, selectedIDs]);\r\n\r\n    const resetSelect = useCallback(() => {\r\n      setSelected(false);\r\n      setPath(undefined);\r\n      setRect(undefined);\r\n    }, [setPath, setRect]);\r\n\r\n    useEffect(() => {\r\n      if (mode === \"select\") return resetSelect;\r\n    }, [mode, resetSelect]);\r\n\r\n    useEffect(() => {\r\n      if (selected) return () => setSelectedIDs([]);\r\n    }, [selected]);\r\n\r\n    useEffect(() => resetSelect, [lasso, resetSelect]);\r\n\r\n    const ratio = useRef(1);\r\n    const updateRatio = () => {\r\n      const clientWidth = canvasEl.current?.clientWidth;\r\n      if (clientWidth) ratio.current = width / clientWidth;\r\n      scope.current.activate();\r\n    };\r\n\r\n    const setNewRect = (e: paper.MouseEvent) => {\r\n      const point = transformPoint(e.point);\r\n      const rectangle = startSelectRect(point);\r\n      setRect(rectangle);\r\n    };\r\n\r\n    const transformPoint = (projP: paper.Point) => {\r\n      scope.current.activate();\r\n      const { center, zoom } = scope.current.view;\r\n      const viewP = scope.current.view.projectToView(projP);\r\n      const absoluteP = viewP.multiply(ratio.current);\r\n      const offsetP = new Point(width, height)\r\n        .divide(2)\r\n        .subtract(center.multiply(zoom));\r\n      return absoluteP.subtract(offsetP).divide(zoom);\r\n    };\r\n\r\n    const handleDown = {\r\n      draw() {\r\n        updateRatio();\r\n        setPath(startStroke(color, lineWidth, highlight));\r\n      },\r\n      erase() {\r\n        updateRatio();\r\n        setPath(startStroke(\"#0003\", eraserWidth));\r\n      },\r\n      select(e: paper.MouseEvent) {\r\n        updateRatio();\r\n        if (lasso) setPath(startStroke(\"#1890ff\", 5));\r\n        else setNewRect(e);\r\n      },\r\n      selected(e: paper.MouseEvent) {\r\n        updateRatio();\r\n        const point = transformPoint(e.point);\r\n        // check if point is outside of selection\r\n        if (lasso) {\r\n          if (path?.contains(point)) return;\r\n          setPath(startStroke(\"#1890ff\", 5));\r\n        } else {\r\n          if (rect?.bounds.contains(point)) return;\r\n          setNewRect(e);\r\n        }\r\n        setSelected(false);\r\n      },\r\n      text(e: paper.MouseEvent) {\r\n        updateRatio();\r\n        const point = transformPoint(e.point);\r\n        const t = new paper.PointText(point);\r\n        setPointText(t);\r\n      },\r\n    }[paperMode];\r\n\r\n    const handleDrag = {\r\n      draw(e: paper.MouseEvent) {\r\n        if (!path) return;\r\n        scope.current.activate();\r\n        path.add(transformPoint(e.point));\r\n        path.smooth();\r\n      },\r\n      erase(e: paper.MouseEvent) {\r\n        if (!path) return;\r\n        scope.current.activate();\r\n        path.add(transformPoint(e.point));\r\n        path.smooth();\r\n\r\n        const newErased = group\r\n          .filter((p) => !erased.has(p.name))\r\n          .filter((p) => checkErase(p, path))\r\n          .map((p) => p.name);\r\n        setErased((prev) => prev.concat(newErased));\r\n      },\r\n      select(e: paper.MouseEvent) {\r\n        scope.current.activate();\r\n        if (lasso) {\r\n          if (!path) return;\r\n          path.add(transformPoint(e.point));\r\n          path.smooth();\r\n        } else {\r\n          if (!rect) return;\r\n          const delta = e.delta.multiply(ratio.current);\r\n          rect.size = rect.size.add(new Size(delta.x, delta.y));\r\n          rect.translate(delta.divide(2));\r\n        }\r\n      },\r\n      selected(e: paper.MouseEvent) {\r\n        scope.current.activate();\r\n        const delta = e.delta.multiply(ratio.current);\r\n        selectedItems.forEach((item) => item.translate(delta));\r\n        path?.translate(delta);\r\n        rect?.translate(delta);\r\n      },\r\n      text: null,\r\n    }[paperMode];\r\n\r\n    const handleUp = {\r\n      draw() {\r\n        if (!path || path.segments.length === 0) return;\r\n        scope.current.activate();\r\n        path.simplify();\r\n        const pathData = path.exportJSON();\r\n        setPath(undefined);\r\n        onChange((prev) => DrawState.addStroke(prev, pathData));\r\n      },\r\n      erase() {\r\n        if (!path) return;\r\n        scope.current.activate();\r\n        setPath(undefined);\r\n        onChange((prev) => DrawState.eraseStrokes(prev, erased.toArray()));\r\n        setErased(Set());\r\n      },\r\n      select() {\r\n        scope.current.activate();\r\n        let items: paper.Item[];\r\n        if (lasso) {\r\n          if (!path || path.length < 50) return setPath(undefined);\r\n          path.closePath();\r\n          path.simplify();\r\n          moveDash(path);\r\n          items = checkPathSelection(path, group);\r\n        } else {\r\n          if (!rect) return;\r\n          const { width, height } = rect.size.abs();\r\n          if (width * height < 100) return setRect(undefined);\r\n          moveDash(rect);\r\n          items = checkRectSelection(rect, group);\r\n        }\r\n        setSelectedIDs(items.map((item) => item.name));\r\n        setSelected(true);\r\n      },\r\n      selected() {\r\n        updateMutation();\r\n      },\r\n      text: null,\r\n    }[paperMode];\r\n\r\n    const handlePaper = () => {\r\n      if (readonly) return;\r\n      scope.current.view.onMouseDown = handleDown;\r\n      scope.current.view.onMouseDrag = handleDrag;\r\n      scope.current.view.onMouseUp = handleUp;\r\n    };\r\n    useEffect(handlePaper);\r\n\r\n    const updateMutation = () => {\r\n      if (!selectedItems?.length) return;\r\n      const mutations = selectedItems.map(\r\n        (p) => [p.name, p.exportJSON()] as Mutation\r\n      );\r\n      onChange((prev) => DrawState.mutateStrokes(prev, mutations));\r\n    };\r\n\r\n    const deleteSelected = () => {\r\n      if (!selectedIDs.length) return;\r\n      onChange((prev) => DrawState.eraseStrokes(prev, selectedIDs));\r\n      setSelectedIDs([]);\r\n      resetSelect();\r\n    };\r\n\r\n    const rotateSelected = (angle: number, last = false) => {\r\n      let aniCount = last ? 10 : 1;\r\n      const dAngle = angle / aniCount;\r\n      const center = (rect || path)?.position;\r\n      const rotate = () => {\r\n        selectedItems.forEach((item) => item.rotate(dAngle, center));\r\n        rect?.rotate(dAngle, center);\r\n        path?.rotate(dAngle, center);\r\n        if (--aniCount > 0) requestAnimationFrame(rotate);\r\n        else last && updateMutation();\r\n      };\r\n      rotate();\r\n    };\r\n\r\n    const mutateStyle = (updated: Partial<DrawCtrl>) => {\r\n      scope.current.activate();\r\n      updateGroupStyle(selectedItems, updated);\r\n      updateMutation();\r\n    };\r\n\r\n    const duplicateSelected = () => {\r\n      scope.current.activate();\r\n      const size = (rect || path)?.bounds.size;\r\n      if (!size) return;\r\n      const { width, height } = size;\r\n      const transP = new Point(width, height).divide(10);\r\n      const newSG = new Group(selectedItems).clone({ insert: false });\r\n      newSG.translate(transP);\r\n      rect?.translate(transP);\r\n      path?.translate(transP);\r\n\r\n      const mutations = newSG.children.map(\r\n        (item) => [getUid(), item.exportJSON()] as Mutation\r\n      );\r\n      onChange((prev) => DrawState.mutateStrokes(prev, mutations));\r\n      setSelectedIDs(mutations.map((m) => m[0]));\r\n    };\r\n\r\n    const rasterize = () =>\r\n      new Group(selectedItems).rasterize({ insert: false }).toDataURL();\r\n\r\n    const [pointText, setPointText] = usePaperItem<paper.PointText>();\r\n    const cancelText = useCallback(\r\n      () => setPointText(undefined),\r\n      [setPointText]\r\n    );\r\n\r\n    useEffect(() => {\r\n      if (mode === \"text\") return cancelText;\r\n    }, [mode, cancelText]);\r\n\r\n    const submitText = (text: string, fontSize: number, color = \"#000\") => {\r\n      if (!pointText) return;\r\n      pointText.content = text;\r\n      pointText.fontSize = fontSize * 10;\r\n      pointText.fillColor = new Color(color);\r\n      const pathData = pointText.exportJSON();\r\n      onChange((prev) => DrawState.addStroke(prev, pathData));\r\n      cancelText();\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      deleteSelected,\r\n      duplicateSelected,\r\n      cancelText,\r\n      rotateSelected,\r\n      submitText,\r\n      mutateStyle,\r\n      rasterize,\r\n    }));\r\n\r\n    useEffect(() => {\r\n      if (!setActiveTool) return;\r\n      if (paperMode === \"selected\") {\r\n        setActiveTool(\"select\");\r\n      } else if (paperMode === \"text\") {\r\n        setActiveTool(pointText ? \"text\" : \"\");\r\n      } else {\r\n        setActiveTool(\"\");\r\n      }\r\n    }, [paperMode, pointText, setActiveTool]);\r\n\r\n    usePreventGesture();\r\n    usePinch(\r\n      ({ memo, offset: [scale], first, last, origin }) => {\r\n        const { view } = scope.current;\r\n\r\n        let lastScale, lastOX, lastOY, elX, elY: number;\r\n        if (first || !memo) {\r\n          updateRatio();\r\n          if (!canvasEl.current) return;\r\n          const { x, y } = canvasEl.current.getBoundingClientRect();\r\n          lastScale = 1;\r\n          [lastOX, lastOY] = [origin[0] - x, origin[1] - y];\r\n          [elX, elY] = [x, y];\r\n        } else {\r\n          [lastScale, [lastOX, lastOY], [elX, elY]] = memo;\r\n        }\r\n\r\n        const r = ratio.current;\r\n        const [oX, oY] = [origin[0] - elX, origin[1] - elY];\r\n        const originViewP = new Point(oX, oY).multiply(r);\r\n        const originProjP = view.viewToProject(originViewP);\r\n\r\n        if (Math.abs(1 - scale) < 0.05) scale = 1;\r\n        let dScale = first ? 1 : scale / lastScale;\r\n        let aniCount = last ? 10 : 1;\r\n        dScale = Math.pow(dScale, 1 / aniCount);\r\n        const scaleView = () => {\r\n          view.scale(dScale, originProjP);\r\n          if (--aniCount > 0) requestAnimationFrame(scaleView);\r\n          else if (last) putCenterBack(view);\r\n        };\r\n        scaleView();\r\n\r\n        const [dX, dY] = [oX - lastOX, oY - lastOY];\r\n        const transP = new Point(dX, dY).multiply(r / scale);\r\n        view.translate(transP);\r\n\r\n        if (!last) return [scale, [oX, oY], [elX, elY]];\r\n      },\r\n      {\r\n        scaleBounds: { max: 10, min: 0.3 },\r\n        rubberband: 0.5,\r\n        target: canvasEl,\r\n      }\r\n    );\r\n\r\n    const touchHandler = usePreventTouch(finger);\r\n    return (\r\n      <div className=\"draw-wrapper\">\r\n        <canvas\r\n          ref={canvasEl}\r\n          className=\"draw-canvas\"\r\n          data-paper-hidpi={false}\r\n          {...touchHandler}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nDraw.displayName = \"Draw\";\r\nexport default React.memo(Draw);\r\n\r\nfunction usePaperItem<T extends paper.Item>(init?: T) {\r\n  const stateArray = useState<T | undefined>(init);\r\n  const [item] = stateArray;\r\n  useDebugValue(item);\r\n  useEffect(() => () => void item?.remove(), [item]);\r\n  return stateArray;\r\n}\r\n\r\nconst paintStroke = (\r\n  stroke: Stroke,\r\n  scope: paper.PaperScope,\r\n  group?: paper.Item[],\r\n  erased = false\r\n) => {\r\n  let { pathData, uid } = stroke;\r\n  try {\r\n    scope.activate();\r\n    const item = scope.project.activeLayer.importJSON(pathData);\r\n    if (!item) return;\r\n    item.name = uid;\r\n    if (erased) item.opacity = 0.5;\r\n    group?.push(item);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getCheckPoints = (() => {\r\n  const cache = new WeakMap<paper.Segment, paper.Point[]>();\r\n  return (segment: paper.Segment, width: number) => {\r\n    const cached = cache.get(segment);\r\n    if (cached) return cached;\r\n\r\n    const { point } = segment;\r\n    const prevPoint = segment.previous?.point;\r\n    if (!prevPoint) return [];\r\n    const delta = point.subtract(prevPoint);\r\n    const times = (delta.length / width) * 2;\r\n    const checkPoints: paper.Point[] = [];\r\n    for (let i = 0; i < times; i += 1) {\r\n      checkPoints.push(point.subtract(delta.multiply(i / times)));\r\n    }\r\n    cache.set(segment, checkPoints);\r\n    return checkPoints;\r\n  };\r\n})();\r\n\r\nconst checkErase = (item: paper.Item, eraserPath: paper.Path) => {\r\n  const curveBound = eraserPath.lastSegment.curve?.strokeBounds;\r\n  if (!(item instanceof paper.Path)) return false;\r\n  if (!curveBound?.intersects(item.strokeBounds)) return false;\r\n\r\n  if (eraserPath.intersects(item)) return true;\r\n\r\n  const { strokeWidth, lastSegment } = eraserPath;\r\n  const checkPoints = getCheckPoints(lastSegment, strokeWidth);\r\n  return checkPoints.some((cPoint) => {\r\n    const d = item.getNearestPoint(cPoint)?.getDistance(cPoint);\r\n    return d && d * 2 < item.strokeWidth + strokeWidth;\r\n  });\r\n};\r\n\r\nconst paintBackground = (\r\n  scope: paper.PaperScope,\r\n  width: number,\r\n  height: number\r\n) => {\r\n  scope.activate();\r\n  const bgRect = new Rectangle(new Point(0, 0), new Point(width, height));\r\n  bgRect.fillColor = new Color(\"#fff\");\r\n  const bgLayer = new paper.Layer(bgRect);\r\n  scope.project.insertLayer(0, bgLayer);\r\n  return bgRect;\r\n};\r\n\r\nconst startSelectRect = (point: paper.Point) => {\r\n  const rect = new Rectangle(point, new Size(0, 0));\r\n  rect.strokeColor = new Color(\"#1890ff\");\r\n  rect.strokeWidth = 5;\r\n  return rect;\r\n};\r\n\r\nconst startStroke = (color: string, lineWidth: number, highlight = false) => {\r\n  const path = new Path();\r\n  const strokeColor = new Color(color);\r\n  if (highlight) {\r\n    strokeColor.alpha = 0.5;\r\n    path.blendMode = \"multiply\";\r\n  }\r\n  path.strokeColor = strokeColor;\r\n  path.strokeWidth = lineWidth;\r\n  path.strokeJoin = \"round\";\r\n  path.strokeCap = \"round\";\r\n  return path;\r\n};\r\n\r\nconst moveDash = (item: paper.Item) => {\r\n  if (item.strokeColor) item.strokeColor.alpha = 0.5;\r\n  item.dashOffset = 0;\r\n  item.dashArray = [30, 20];\r\n  item.onFrame = () => (item.dashOffset += 3);\r\n};\r\n\r\nconst getCenterTranslate = (view: paper.View) => {\r\n  const { center, zoom } = view;\r\n  const { height, width } = view.viewSize;\r\n  const { x, y } = center;\r\n  if (zoom <= 1) return [width / 2 - x, height / 2 - y];\r\n\r\n  const dX = (width * (zoom - 1)) / zoom / 2;\r\n  const dY = (height * (zoom - 1)) / zoom / 2;\r\n  const [minX, maxX, minY, maxY] = [\r\n    width / 2 - dX,\r\n    width / 2 + dX,\r\n    height / 2 - dY,\r\n    height / 2 + dY,\r\n  ];\r\n\r\n  const deltaX = x < minX ? minX - x : x > maxX ? maxX - x : 0;\r\n  const deltaY = y < minY ? minY - y : y > maxY ? maxY - y : 0;\r\n  return [deltaX, deltaY];\r\n};\r\n\r\nconst putCenterBack = (view: paper.View) => {\r\n  const [deltaX, deltaY] = getCenterTranslate(view);\r\n  let aniCount = 10;\r\n  const dP = new Point(deltaX, deltaY).divide(-aniCount);\r\n  const move = () => {\r\n    view.translate(dP);\r\n    if (--aniCount > 0) requestAnimationFrame(move);\r\n  };\r\n  move();\r\n};\r\n\r\nconst checkRectSelection = (rect: paper.Shape.Rectangle, items: paper.Item[]) =>\r\n  items.filter((item) =>\r\n    item instanceof paper.Path\r\n      ? item.intersects(rect) || item.isInside(rect.bounds)\r\n      : item.bounds.intersects(rect.bounds)\r\n  );\r\n\r\nconst checkPathSelection = (selection: paper.Path, items: paper.Item[]) => {\r\n  const isInside = (p: paper.Path) => {\r\n    const res = p.subtract(selection, { insert: false, trace: false });\r\n    res.remove();\r\n    return res.isEmpty();\r\n  };\r\n\r\n  return items.filter((item) => {\r\n    if (!item.bounds.intersects(selection.bounds)) return false;\r\n    let checkedP: paper.Path;\r\n    if (item instanceof paper.Path) {\r\n      checkedP = item;\r\n    } else {\r\n      checkedP = new Path.Rectangle(item.bounds);\r\n      checkedP.remove();\r\n    }\r\n    return checkedP.intersects(selection) || isInside(checkedP);\r\n  });\r\n};\r\n\r\nconst updateGroupStyle = (items: paper.Item[], updated: Partial<DrawCtrl>) => {\r\n  const { lineWidth, color, highlight } = updated;\r\n  items.forEach((item) => {\r\n    if (item instanceof paper.PointText) {\r\n      if (color) {\r\n        const newColor = new Color(color);\r\n        item.fillColor = newColor;\r\n      }\r\n    }\r\n\r\n    if (!(item instanceof paper.Path)) return;\r\n\r\n    if (color) {\r\n      const newColor = new Color(color);\r\n      if (item.blendMode === \"multiply\") newColor.alpha = 0.5;\r\n      item.strokeColor = newColor;\r\n    }\r\n\r\n    if (lineWidth) item.strokeWidth = lineWidth;\r\n\r\n    if (!item.strokeColor || highlight === undefined) return;\r\n    item.strokeColor.alpha = highlight ? 0.5 : 1;\r\n    item.blendMode = highlight ? \"multiply\" : \"normal\";\r\n  });\r\n};\r\n","import {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useCallback,\r\n  createContext,\r\n} from \"react\";\r\nimport {\r\n  DrawCtrl,\r\n  getDrawCtrl,\r\n  defaultDrawCtrl,\r\n} from \"../../lib/draw/drawCtrl\";\r\nimport {\r\n  NoteInfo,\r\n  NotePage,\r\n  createPage,\r\n  defaultNotePage,\r\n} from \"../../lib/note/note\";\r\nimport { useMemoizedFn as useEvent, useSafeState } from \"ahooks\";\r\nimport { NewPageInfo, ReorderInfo, SyncInfo } from \"../../lib/network/io\";\r\nimport { SetOperation, StateSet } from \"../../lib/draw/StateSet\";\r\nimport { loadNote, editNoteData } from \"../../lib/note/archive\";\r\nimport { AddPageButton, showPageDelMsg } from \"./ReaderUtils\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { DrawState } from \"../../lib/draw/DrawState\";\r\nimport { TeamState } from \"../../lib/draw/TeamState\";\r\nimport { SelectTool, TextTool } from \"./tools/DrawTools\";\r\nimport { getLargestKey, insertAfter } from \"../../lib/array\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { debounce, last, once, range } from \"lodash-es\";\r\nimport { Map } from \"immutable\";\r\nimport ReaderHeader from \"./header/Header\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport Draw, { ActiveToolKey, DrawRefType } from \"../draw/Draw\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { message } from \"antd\";\r\nimport \"./reader.sass\";\r\n\r\nexport const ReaderStateCtx = createContext({\r\n  noteID: \"\",\r\n  noteInfo: undefined as NoteInfo | undefined,\r\n  stateSet: undefined as StateSet | undefined,\r\n  teamState: undefined as TeamState | undefined,\r\n  pageRec: undefined as Map<string, NotePage> | undefined,\r\n  pageOrder: undefined as string[] | undefined,\r\n  saved: true,\r\n  currPageID: \"\",\r\n  drawCtrl: defaultDrawCtrl,\r\n});\r\n\r\nexport const ReaderMethodCtx = createContext({\r\n  scrollPage: (pageID: string) => {},\r\n  switchPageMarked: (pageID: string) => {},\r\n  updateStateSet: (cb: (prevSS: StateSet) => StateSet) => {},\r\n  addPage: (prevPageID: string, copy?: boolean) => {},\r\n  addFinalPage: () => {},\r\n  deletePage: (pageID: string) => {},\r\n  saveReorder: async (order: string[], push: boolean) => {},\r\n  setInviewRatios: (() => {}) as Setter<Map<string, number>>,\r\n  setDrawCtrl: (() => {}) as Setter<DrawCtrl>,\r\n  instantSave: (() => {}) as () => Promise<void> | undefined,\r\n  handleUndo: () => {},\r\n  handleRedo: () => {},\r\n});\r\n\r\nexport default function Reader() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const nav = useNavigate();\r\n\r\n  const [pageRec, setPageRec] = useState<Map<string, NotePage>>();\r\n  const [noteInfo, setNoteInfo] = useState<NoteInfo>();\r\n  const [stateSet, setStateSet] = useState<StateSet>();\r\n  const [drawCtrl, setDrawCtrl] = useState(defaultDrawCtrl);\r\n  const [pageOrder, setPageOrder] = useState<string[]>();\r\n  const [saved, setSaved] = useSafeState(true);\r\n\r\n  const refRec = useRef<Record<string, HTMLElement>>({});\r\n\r\n  const { io, teamOn, teamState, addTeamStatePage } = useContext(TeamCtx);\r\n\r\n  useEffect(() => {\r\n    const loadNotePages = async () => {\r\n      const storedNote = await loadNote(noteID);\r\n      if (!storedNote) {\r\n        message.error(\"Note not found\");\r\n        return nav(\"/\");\r\n      }\r\n      const { pageRec, pdf, pageOrder, ...noteInfo } = storedNote;\r\n      setPageRec(Map(pageRec));\r\n      setPageOrder(pageOrder);\r\n      setNoteInfo(noteInfo);\r\n      setStateSet(StateSet.createFromPages(pageRec));\r\n      setDrawCtrl(await getDrawCtrl());\r\n    };\r\n    loadNotePages();\r\n  }, [nav, noteID, teamOn]);\r\n\r\n  useEffect(() => {\r\n    if (!noteInfo) return;\r\n    document.title = noteInfo.name + \" - Multibility\";\r\n  }, [noteInfo]);\r\n\r\n  const saver = useEvent(async () => {\r\n    const pr = pageRec?.toObject();\r\n    const canvas = document.querySelector(\"canvas\");\r\n    const thumbnail = canvas?.toDataURL(\"image/jpeg\", 0.1);\r\n    await editNoteData(noteID, { pageRec: pr, thumbnail });\r\n    setSaved(true);\r\n  });\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const debouncedSave = useCallback(debounce(saver, 2000), [saver]);\r\n  const instantSave = debouncedSave.flush;\r\n\r\n  const savePageRec = (pageID: string, cb: (prev: NotePage) => NotePage) => {\r\n    setPageRec((prev) => prev?.update(pageID, defaultNotePage, cb));\r\n    setSaved(false);\r\n    debouncedSave();\r\n  };\r\n\r\n  const saveReorder = async (pageOrder: string[], push = false) => {\r\n    setPageOrder(pageOrder);\r\n    await editNoteData(noteID, { pageOrder });\r\n    await instantSave();\r\n    push && pushReorder(pageOrder);\r\n  };\r\n\r\n  const pushReorder = (pageOrder: string[]) =>\r\n    io?.emit(\"reorder\", { pageOrder });\r\n\r\n  const handleReorder = useEvent(\r\n    ({ deleted, pageOrder, prevOrder }: ReorderInfo) => {\r\n      saveReorder(pageOrder);\r\n      if (!deleted) return;\r\n      showPageDelMsg(() => saveReorder(prevOrder, true));\r\n    }\r\n  );\r\n\r\n  const handleNewPage = useEvent(\r\n    ({ pageOrder, pageID, newPage }: NewPageInfo) => {\r\n      saveReorder(pageOrder);\r\n      savePageRec(pageID, () => newPage);\r\n      setStateSet((prev) => prev?.addState(pageID, newPage));\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    io?.on(\"reorder\", handleReorder);\r\n    io?.on(\"newPage\", handleNewPage);\r\n    return () => void io?.removeAllListeners();\r\n  }, [io, handleReorder, handleNewPage]);\r\n\r\n  const pushOperation = (operation: SetOperation) => {\r\n    const handleSync = ({ pageID, stroke }: SyncInfo) =>\r\n      setStateSet((prev) => prev?.syncStrokeTime(pageID, stroke));\r\n\r\n    io?.emit(\"push\", { operation }, handleSync);\r\n  };\r\n\r\n  const pushNewPage = (\r\n    pageOrder: string[],\r\n    pageID: string,\r\n    newPage: NotePage\r\n  ) => {\r\n    const { image, marked, ...newTeamPage } = newPage;\r\n    io?.emit(\"newPage\", { pageOrder, pageID, newPage: newTeamPage });\r\n    addTeamStatePage(pageID, newPage);\r\n  };\r\n\r\n  const updatePageRec = (pageID: string, ds: DrawState) => {\r\n    const state = DrawState.flaten(ds);\r\n    savePageRec(pageID, (prev) => ({ ...prev, state }));\r\n  };\r\n\r\n  const updateStateSet = (cb: (prevSS: StateSet) => StateSet) => {\r\n    if (!stateSet) return;\r\n    const newSS = cb(stateSet);\r\n    setStateSet(newSS);\r\n    const lastDS = newSS.getLastDS();\r\n    const lastOp = newSS.lastOp;\r\n    if (!lastDS || !lastOp) return;\r\n    updatePageRec(...lastDS);\r\n    pushOperation(lastOp);\r\n  };\r\n\r\n  const switchPageMarked = (pageID: string) =>\r\n    savePageRec(pageID, (prev) => ({ ...prev, marked: !prev.marked }));\r\n\r\n  const scrollPage = (pageID: string) =>\r\n    refRec.current[pageID]?.scrollIntoView();\r\n\r\n  const [inviewRatios, setInviewRatios] = useState(Map<string, number>());\r\n  const currPageID = useMemo(() => getLargestKey(inviewRatios), [inviewRatios]);\r\n\r\n  const addPage = (prevPageID: string, copy = false) => {\r\n    if (!pageOrder) return;\r\n    const prevPage = copy ? pageRec?.get(prevPageID) : undefined;\r\n    const [pageID, newPage] = createPage(prevPage);\r\n    const newOrder = insertAfter(pageOrder, prevPageID, pageID);\r\n    pushNewPage(newOrder, pageID, newPage);\r\n    saveReorder(newOrder);\r\n    savePageRec(pageID, () => newPage);\r\n    setStateSet((prev) => prev?.addState(pageID, newPage));\r\n  };\r\n\r\n  const addFinalPage = () => {\r\n    const lastPageID = last(pageOrder);\r\n    lastPageID && addPage(lastPageID);\r\n  };\r\n\r\n  const deletePage = (pageID: string) => {\r\n    const newOrder = pageOrder?.filter((id) => id !== pageID);\r\n    newOrder?.length && saveReorder(newOrder, true);\r\n  };\r\n\r\n  const handleUndo = () => updateStateSet((prev) => prev.undo());\r\n  const handleRedo = () => updateStateSet((prev) => prev.redo());\r\n  const renderResult = (\r\n    <div className=\"reader container\">\r\n      <ReaderHeader />\r\n      <main>\r\n        {pageOrder?.map((uid) => (\r\n          <section\r\n            key={uid}\r\n            className=\"note-page\"\r\n            ref={(e) => e && (refRec.current[uid] = e)}\r\n          >\r\n            <PageContainer uid={uid} />\r\n          </section>\r\n        ))}\r\n        <AddPageButton />\r\n      </main>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ReaderStateCtx.Provider\r\n      value={{\r\n        saved,\r\n        noteID,\r\n        pageRec,\r\n        drawCtrl,\r\n        noteInfo,\r\n        stateSet,\r\n        teamState,\r\n        pageOrder,\r\n        currPageID,\r\n      }}\r\n    >\r\n      <ReaderMethodCtx.Provider\r\n        value={{\r\n          addPage,\r\n          scrollPage,\r\n          deletePage,\r\n          setDrawCtrl,\r\n          saveReorder,\r\n          instantSave,\r\n          addFinalPage,\r\n          handleRedo,\r\n          handleUndo,\r\n          updateStateSet,\r\n          setInviewRatios,\r\n          switchPageMarked,\r\n        }}\r\n      >\r\n        {renderResult}\r\n      </ReaderMethodCtx.Provider>\r\n    </ReaderStateCtx.Provider>\r\n  );\r\n}\r\n\r\nconst PageContainer: FC<{ uid: string }> = ({ uid }) => {\r\n  const { pageRec, stateSet, teamState } = useContext(ReaderStateCtx);\r\n  const { updateStateSet } = useContext(ReaderMethodCtx);\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n  const updateState = (ds: DrawState) => {\r\n    updateStateSet((prev) => prev.setState(uid, ds));\r\n  };\r\n\r\n  if (!page || !drawState) return null;\r\n  return (\r\n    <PageWrapper\r\n      drawState={drawState}\r\n      teamStateMap={teamStateMap}\r\n      updateState={updateState}\r\n      pdfIndex={page.pdfIndex}\r\n      uid={uid}\r\n    />\r\n  );\r\n};\r\n\r\nexport const PageWrapper = ({\r\n  thumbnail,\r\n  drawState,\r\n  teamStateMap,\r\n  updateState,\r\n  pdfIndex,\r\n  preview = false,\r\n  uid,\r\n}: {\r\n  uid: string;\r\n  drawState: DrawState;\r\n  teamStateMap?: Map<string, DrawState>;\r\n  thumbnail?: string;\r\n  pdfIndex?: number;\r\n  updateState?: (ds: DrawState) => void;\r\n  preview?: boolean;\r\n}) => {\r\n  const { setInviewRatios } = useContext(ReaderMethodCtx);\r\n  const { noteID } = useContext(ReaderStateCtx);\r\n  const [fullImg, setFullImg] = useState<string>();\r\n  const [ref, visible, entry] = useInView({ threshold: range(0, 1.1, 0.1) });\r\n\r\n  useEffect(() => {\r\n    if (preview) return;\r\n    if (!entry || !visible) {\r\n      setInviewRatios((prev) => prev.delete(uid));\r\n    } else {\r\n      setInviewRatios((prev) => prev.set(uid, entry.intersectionRatio));\r\n    }\r\n  }, [visible, entry, uid, preview, setInviewRatios]);\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const loadImage = useCallback(\r\n    once(async () => {\r\n      if (!pdfIndex) return;\r\n      const { getOnePageImage } = await import(\"../../lib/note/pdfImage\");\r\n      setFullImg(await getOnePageImage(noteID, pdfIndex));\r\n    }),\r\n    [pdfIndex, noteID]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!preview && visible) loadImage();\r\n  }, [visible, preview, loadImage]);\r\n\r\n  const { ignores } = useContext(TeamCtx);\r\n  const otherStates = useMemo(\r\n    () => teamStateMap?.deleteAll(ignores).toList().toArray(),\r\n    [teamStateMap, ignores]\r\n  );\r\n\r\n  const imageLoaded = fullImg || !pdfIndex;\r\n  const drawShow = visible && imageLoaded;\r\n  const maskShow = Boolean(preview || !drawShow);\r\n\r\n  const { height, width } = drawState;\r\n  const ratio = height / width;\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className=\"page-wrapper\"\r\n      style={{ paddingTop: `${ratio * 100}%` }}\r\n    >\r\n      {drawShow && (\r\n        <DrawWrapper\r\n          drawState={drawState}\r\n          otherStates={otherStates}\r\n          updateState={updateState}\r\n          imgSrc={fullImg || thumbnail}\r\n          preview={preview}\r\n        />\r\n      )}\r\n      {maskShow && <div className=\"mask\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DrawWrapper = ({\r\n  drawState,\r\n  updateState,\r\n  otherStates,\r\n  preview = false,\r\n  imgSrc,\r\n}: {\r\n  drawState: DrawState;\r\n  otherStates?: DrawState[];\r\n  updateState?: (ds: DrawState) => void;\r\n  preview?: boolean;\r\n  imgSrc?: string;\r\n}) => {\r\n  const { drawCtrl } = useContext(ReaderStateCtx);\r\n  const [activeTool, setActiveTool] = useState<ActiveToolKey>(\"\");\r\n  const drawRef = useRef<DrawRefType>(null);\r\n\r\n  const handleChange = useEvent(\r\n    (arg: ((s: DrawState) => DrawState) | DrawState) => {\r\n      if (!updateState) return;\r\n      const newDS = arg instanceof DrawState ? arg : arg(drawState);\r\n      updateState(newDS);\r\n    }\r\n  );\r\n\r\n  return preview ? (\r\n    <Draw\r\n      drawState={drawState}\r\n      otherStates={otherStates}\r\n      imgSrc={imgSrc}\r\n      readonly\r\n      preview\r\n    />\r\n  ) : (\r\n    <>\r\n      <Draw\r\n        drawState={drawState}\r\n        otherStates={otherStates}\r\n        onChange={handleChange}\r\n        imgSrc={imgSrc}\r\n        drawCtrl={drawCtrl}\r\n        ref={drawRef}\r\n        setActiveTool={setActiveTool}\r\n      />\r\n      <SelectTool drawRef={drawRef} visible={activeTool === \"select\"} />\r\n      <TextTool drawRef={drawRef} visible={activeTool === \"text\"} />\r\n    </>\r\n  );\r\n};\r\nDrawWrapper.displayName = \"DrawWrapper\";\r\n","import { io } from \"socket.io-client\";\r\nimport { Stroke } from \"../draw/DrawState\";\r\nimport { NotePage } from \"../note/note\";\r\nimport { getUserID, getUserName } from \"../user\";\r\nimport { BASE_URL } from \"./http\";\r\n\r\nexport const IoFactory = (noteID: string) => () =>\r\n  io(BASE_URL, {\r\n    query: {\r\n      userID: getUserID(),\r\n      userName: getUserName(),\r\n      noteID,\r\n    },\r\n  });\r\n\r\nexport interface ReorderInfo {\r\n  pageOrder: string[];\r\n  prevOrder: string[];\r\n  deleted: boolean;\r\n}\r\n\r\nexport interface NewPageInfo {\r\n  pageOrder: string[];\r\n  pageID: string;\r\n  newPage: NotePage;\r\n}\r\n\r\nexport interface SyncInfo {\r\n  stroke: Stroke;\r\n  pageID: string;\r\n}\r\n","import { NotePage, TeamPage, TeamPageInfo } from \"../note/note\";\nimport { DrawState, WIDTH } from \"./DrawState\";\nimport { SetOperation } from \"./StateSet\";\nimport { Map, Record } from \"immutable\";\n\ninterface TeamStateRecordType {\n  pageStates: Map<string, Map<string, DrawState>>;\n  pageInfos: Map<string, TeamPageInfo>;\n}\n\nconst defaultRecord: Readonly<TeamStateRecordType> = {\n  pageStates: Map(),\n  pageInfos: Map(),\n};\n\ntype TeamStateRecord = Record<TeamStateRecordType>;\nconst defaultFactory = Record(defaultRecord);\n\nexport class TeamState {\n  constructor(private immutable: TeamStateRecord) {}\n\n  getImmutable() {\n    return this.immutable;\n  }\n\n  getPageStates() {\n    return this.getImmutable().get(\"pageStates\");\n  }\n\n  getPageInfos() {\n    return this.getImmutable().get(\"pageInfos\");\n  }\n\n  getOneState(pageID: string, userID: string) {\n    return this.getPageStates().get(pageID)?.get(userID);\n  }\n\n  getOnePageStateMap(pageID: string) {\n    return this.getPageStates().get(pageID);\n  }\n\n  getPageValidUsers(pageID: string) {\n    const map = this.getOnePageStateMap(pageID);\n    if (!map) return [];\n    return Array.from(map?.filter((ds) => !ds.isEmpty()).keys());\n  }\n\n  getPageRatio(pageID: string) {\n    return this.getPageInfos().get(pageID)?.ratio;\n  }\n\n  includesPage(pageID: string) {\n    return this.getPageStates().has(pageID);\n  }\n\n  setState(pageID: string, userID: string, drawState: DrawState) {\n    const pageMap = this.getPageStates().get(pageID);\n    if (!pageMap) return this;\n    return new TeamState(\n      this.getImmutable().update(\"pageStates\", (m) =>\n        m.set(pageID, pageMap.set(userID, drawState))\n      )\n    );\n  }\n\n  static createFromTeamPages(\n    teamPages: globalThis.Record<string, TeamPage>,\n    width = WIDTH\n  ) {\n    let record = defaultFactory();\n    Object.entries(teamPages).forEach(([pageID, teamPage]) => {\n      const { states, ratio } = teamPage;\n      const pageMap = Map(\n        Object.entries(states).map(([userID, flatState]) => [\n          userID,\n          DrawState.loadFromFlat(flatState, width, width * ratio),\n        ])\n      );\n      record = record\n        .update(\"pageStates\", (m) => m.set(pageID, pageMap))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }));\n    });\n    return new TeamState(record);\n  }\n\n  addPage(pageID: string, notePage: NotePage) {\n    const { ratio } = notePage;\n    return new TeamState(\n      this.getImmutable()\n        .update(\"pageStates\", (m) => m.set(pageID, Map()))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }))\n    );\n  }\n\n  pushOperation(setOp: SetOperation, userID: string, width = WIDTH) {\n    const { pageID, ...op } = setOp;\n    const ratio = this.getPageRatio(pageID);\n    if (!this.includesPage(pageID) || !ratio) return this;\n    const prevDs =\n      this.getOneState(pageID, userID) ||\n      DrawState.createEmpty(width, width * ratio);\n\n    const ds = DrawState.pushOperation(prevDs, op);\n    return this.setState(pageID, userID, ds);\n  }\n\n  resetUser(userID: string, pageRec: globalThis.Record<string, NotePage>) {\n    let newTS: TeamState = this;\n    for (let [pageID, { state, ratio }] of Object.entries(pageRec)) {\n      const prevDS = newTS.getOneState(pageID, userID);\n      if (!prevDS) continue;\n      const { width } = prevDS;\n      newTS = newTS.setState(\n        pageID,\n        userID,\n        DrawState.loadFromFlat(state, width, width * ratio)\n      );\n    }\n    return newTS;\n  }\n}\n","import { useState, useEffect, createContext, useCallback } from \"react\";\r\nimport {\r\n  getTeamNoteState,\r\n  loadTeamNoteInfo,\r\n  updatePages,\r\n} from \"../../lib/network/http\";\r\nimport { LoginOutlined, LogoutOutlined } from \"@ant-design/icons\";\r\nimport { IoFactory, NewPageInfo } from \"../../lib/network/io\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { TeamState } from \"../../lib/draw/TeamState\";\r\nimport { getUserID, UserInfo } from \"../../lib/user\";\r\nimport { NotePage } from \"../../lib/note/note\";\r\nimport { Socket } from \"socket.io-client\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { Loading } from \"../ui/Loading\";\r\nimport { message } from \"antd\";\r\nimport { Set } from \"immutable\";\r\nimport Reader from \"./Reader\";\r\n\r\nexport const TeamCtx = createContext({\r\n  io: undefined as Socket | undefined,\r\n  code: 0,\r\n  teamOn: false,\r\n  connected: false,\r\n  ignores: Set<string>(),\r\n  userRec: {} as Record<string, UserInfo>,\r\n  teamState: undefined as TeamState | undefined,\r\n  resetIO: () => {},\r\n  loadInfo: async () => false,\r\n  loadState: async () => false,\r\n  setIgnores: (() => {}) as Setter<Set<string>>,\r\n  addTeamStatePage: (pageID: string, newPage: NotePage) => {},\r\n});\r\n\r\nexport default function Team() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const [teamState, setTeamState] = useState<TeamState>();\r\n  const [code, setCode] = useState(-2);\r\n  const [userRec, setUserRec] = useState<Record<string, UserInfo>>({});\r\n  const [ignores, setIgnores] = useState(Set<string>());\r\n  const [io, setIO] = useState(IoFactory(noteID));\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [connected, setConnected] = useState(false);\r\n  const nav = useNavigate();\r\n\r\n  const loadInfo = useCallback(async () => {\r\n    const info = await loadTeamNoteInfo(noteID);\r\n    if (!info) {\r\n      message.error(\"Failed loading the team note info\");\r\n      return false;\r\n    }\r\n    setCode(info.code);\r\n    return true;\r\n  }, [noteID]);\r\n\r\n  const loadState = useCallback(async () => {\r\n    const teamNote = await getTeamNoteState(noteID);\r\n    if (!teamNote) {\r\n      message.error(\"Failed loading the team note state\");\r\n      return false;\r\n    }\r\n    setTeamState(TeamState.createFromTeamPages(teamNote));\r\n    return true;\r\n  }, [noteID]);\r\n\r\n  const updateSelfState = useCallback(() => {\r\n    updatePages(noteID);\r\n  }, [noteID]);\r\n\r\n  useEffect(() => {\r\n    const roomInit = async () => {\r\n      const infoLoaded = await loadInfo();\r\n      const stateLoaded = await loadState();\r\n      if (!infoLoaded || !stateLoaded) return nav(\"/\");\r\n      setLoaded(true);\r\n      updateSelfState();\r\n    };\r\n    roomInit();\r\n    return updateSelfState;\r\n  }, [loadInfo, loadState, nav, updateSelfState]);\r\n\r\n  useEffect(() => {\r\n    io.on(\"push\", ({ operation, userID }) => {\r\n      setTeamState((prev) => prev?.pushOperation(operation, userID));\r\n    });\r\n\r\n    io.on(\"join\", ({ joined, members }) => {\r\n      const { userID, userName } = joined;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return;\r\n      showJoinMsg(userID, userName);\r\n    });\r\n\r\n    io.on(\"leave\", ({ leaved, members }) => {\r\n      const { userID, userName } = leaved;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return io.emit(\"join\");\r\n      showLeaveMsg(userID, userName);\r\n    });\r\n\r\n    io.on(\"newPage\", (info: NewPageInfo) => {\r\n      const { pageID, newPage } = info;\r\n      setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n    });\r\n\r\n    io.on(\"reset\", ({ userID, pageRec }) => {\r\n      if (userID === getUserID()) return;\r\n      setTeamState((prev) => prev?.resetUser(userID, pageRec));\r\n    });\r\n\r\n    io.on(\"connect_error\", console.error);\r\n    io.on(\"connect\", () => setConnected(true));\r\n    io.on(\"disconnect\", () => setConnected(false));\r\n\r\n    return () => {\r\n      io.removeAllListeners();\r\n      io.close();\r\n    };\r\n  }, [io]);\r\n\r\n  const addTeamStatePage = (pageID: string, newPage: NotePage) => {\r\n    setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n  };\r\n\r\n  const resetIO = () => setIO(IoFactory(noteID));\r\n\r\n  return (\r\n    <Loading loading={!loaded}>\r\n      <TeamCtx.Provider\r\n        value={{\r\n          io,\r\n          code,\r\n          teamOn: true,\r\n          ignores,\r\n          userRec,\r\n          connected,\r\n          teamState,\r\n          resetIO,\r\n          loadInfo,\r\n          loadState,\r\n          setIgnores,\r\n          addTeamStatePage,\r\n        }}\r\n      >\r\n        <Reader />\r\n      </TeamCtx.Provider>\r\n    </Loading>\r\n  );\r\n}\r\n\r\nconst showJoinMsg = (userID: string, userName: string) => {\r\n  message.destroy(userID);\r\n  message.success({\r\n    content: `${userName} joined room`,\r\n    icon: <LoginOutlined />,\r\n    key: userID,\r\n  });\r\n};\r\n\r\nconst showLeaveMsg = (userID: string, userName: string) => {\r\n  message.destroy(userID);\r\n  message.warning({\r\n    content: `${userName} leaved room`,\r\n    icon: <LogoutOutlined />,\r\n    key: userID,\r\n  });\r\n};\r\n","export function createVirtualCanvas(width: number, height: number) {\r\n  const canvas = document.createElement(\"canvas\");\r\n  const context = canvas.getContext(\"2d\");\r\n  if (!context) {\r\n    throw new Error(\"can't get virtual canvas context\");\r\n  }\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n  return { canvas, context };\r\n}\r\n\r\nexport function releaseCanvas(canvas: HTMLCanvasElement) {\r\n  canvas.width = 1;\r\n  canvas.height = 1;\r\n  const ctx = canvas.getContext('2d');\r\n  ctx?.clearRect(0, 0, 1, 1);\r\n}\r\n"],"names":["defaultWidthList","defaultDrawCtrl","mode","finger","lineWidth","eraserWidth","color","highlight","lasso","widthList","getDrawCtrl","localforage","drawCtrl","defaultRecord","states","Map","editStack","List","undoStack","defaultFactory","Record","StateSet","immutable","lastOp","this","getImmutable","get","pageID","getStates","drawState","prevDS","getOneState","currRecord","update","s","set","l","push","delete","stroke","DrawState","notePage","width","WIDTH","state","ratio","newDS","getEditStack","size","getUndoStack","isUndoable","lastUid","last","lastSetOp","pop","isRedoable","ds","pageRec","map","AddPageButton","addFinalPage","useContext","ReaderMethodCtx","className","type","icon","PlusOutlined","block","onClick","createFromIconfontCN","scriptUrl","PenPanel","updateDrawCtrl","useState","panelBlur","setPanelBlur","WidthSelect","ghost","shape","ColorSelect","setColor","c","field","currWidth","chosen","useMemo","Math","max","indexOf","popShow","setPopShow","useEffect","includes","options","index","value","label","visible","onVisibleChange","v","prev","trigger","placement","destroyTooltipOnHide","content","min","defaultValue","onAfterChange","w","newWL","slice","style","onChange","i","HeaderMiddle","ReaderStateCtx","stateSet","setDrawCtrl","handleUndo","handleRedo","updated","console","log","newCtrl","saveDrawCtrl","UndoOutlined","disabled","RedoOutlined","message","key","PenButton","EraserButton","SelectButton","btnProps","HighlightOutlined","getPopupContainer","e","parentElement","colors","checked","name","GatewayOutlined","getOcrWorker","worker","createWorker","logger","load","loadLanguage","initialize","SelectTool","drawRef","currDrawCtrl","setCurrDrawCtrl","rotateEl","useRef","dragged","setDragged","transX","setTransX","gearStyle","transform","useDrag","first","offset","delta","current","rotateSelected","target","filterTaps","rubberband","bounds","left","right","recoginzing","setRecoginzing","recognizeText","imageData","rasterize","recognize","text","data","Modal","title","TextArea","okText","onOk","copy","error","CSSTransition","timeout","in","unmountOnExit","mutateStyle","BgColorsOutlined","ref","RotateRightOutlined","CaretLeftOutlined","CaretRightOutlined","CopyOutlined","duplicateSelected","loading","danger","DeleteOutlined","deleteSelected","TextTool","setText","fontSize","setFontSize","onCancel","cancelText","trim","submitText","bodyStyle","paddingTop","destroyOnClose","FontSizeOutlined","overlayStyle","FontColorsOutlined","autoFocus","insertAfter","list","prevItem","newItem","prevIndex","curr","splice","UserAvatar","userID","userRec","TeamCtx","getHashedColor","userInfo","userName","backgroundColor","PreviewCtx","React","activeKey","setActiveKey","PageNavContent","pageOrder","currPageID","scrollPage","saveReorder","refRec","scrollIntoView","PreviewTabs","onDragEnd","source","destination","fromIndex","toIndex","newOrder","result","removed","exchange","requestAnimationFrame","droppableId","droppableProps","innerRef","placeholder","uid","PagePreview","pageIndex","teamState","setChosen","page","teamStateMap","getOnePageStateMap","image","marked","isEmpty","every","draggableId","isDragDisabled","draggableProps","dragHandleProps","isDragging","PageWrapper","undefined","thumbnail","preview","PreviewTools","switchPageMarked","ignores","userIDs","getPageValidUsers","filter","has","stopPropagation","PreviewOption","TeamAvatars","maxCount","classNames","maxPopoverPlacement","addPage","deletePage","menu","items","MoreOutlined","TabPane","Tabs","tabBarGutter","centered","tab","PageNav","navOn","setNavOn","ALL","MARKED","WRITTEN","Provider","MenuUnfoldOutlined","MenuFoldOutlined","onClose","closable","zIndex","padding","overflow","headerStyle","textAlign","HeaderRight","teamOn","RoomInfo","JoinRoom","UserCard","renaming","setRenaming","setIgnores","resetIO","online","self","getUserID","ignored","Search","onSearch","saveUserName","enterButton","CheckOutlined","FormOutlined","EyeInvisibleOutlined","EyeOutlined","add","code","connected","loadInfo","loadState","noteInfo","link","window","location","href","share","selfName","userList","selfID","selfInfo","otherUsers","values","Object","onlineNum","length","teamPop","DisconnectOutlined","showIcon","banner","String","plain","ShareAltOutlined","u","reloading","setReloading","ReloadOutlined","status","count","TeamOutlined","noteID","instantSave","nav","useNavigate","createRoom","putNote","editNoteData","team","UsergroupAddOutlined","ReaderHeader","HeaderLeft","saved","HomeFilled","opacity","SaveOutlined","usePreventTouch","allowFinger","isTouch","checkPoniter","isPrimary","pointerType","preventTouch","touch","touches","touchType","isApplePencil","isEventValid","onPointerDownCapture","onPointerMoveCapture","onTouchStartCapture","onTouchMoveCapture","Path","paper","Size","Point","Group","Color","Raster","Rectangle","Draw","otherStates","readonly","imgSrc","setActiveTool","height","canvasEl","scope","group","setGroup","Set","erased","setErased","usePaperItem","path","setPath","rect","setRect","cvs","scp","setup","r","view","viewSize","multiply","scale","paintBackground","remove","releaseCanvas","raster","img","Image","src","onload","activate","project","layers","addChild","position","center","mergedStrokes","getStrokeList","tempGroup","othersGroup","forEach","paintStroke","hasStroke","item","selected","setSelected","paperMode","selectedIDs","setSelectedIDs","selectedItems","IDSet","resetSelect","useCallback","updateRatio","clientWidth","setNewRect","point","transformPoint","rectangle","startSelectRect","projP","zoom","absoluteP","projectToView","offsetP","divide","subtract","handleDown","draw","startStroke","erase","select","contains","t","setPointText","handleDrag","smooth","newErased","p","checkErase","concat","x","y","translate","handleUp","segments","simplify","pathData","exportJSON","toArray","closePath","moveDash","checkPathSelection","abs","checkRectSelection","updateMutation","onMouseDown","onMouseDrag","onMouseUp","mutations","angle","aniCount","dAngle","rotate","updateGroupStyle","transP","newSG","clone","insert","children","getUid","m","toDataURL","pointText","fillColor","useImperativeHandle","handler","preventDefault","document","addEventListener","removeEventListener","usePinch","lastScale","lastOX","lastOY","elX","elY","memo","origin","getBoundingClientRect","oX","oY","originViewP","originProjP","viewToProject","dScale","pow","scaleView","putCenterBack","scaleBounds","touchHandler","displayName","init","stateArray","useDebugValue","activeLayer","importJSON","getCheckPoints","cache","WeakMap","segment","cached","prevPoint","previous","times","checkPoints","eraserPath","curveBound","lastSegment","curve","strokeBounds","intersects","strokeWidth","some","cPoint","d","getNearestPoint","getDistance","bgRect","bgLayer","insertLayer","strokeColor","alpha","blendMode","strokeJoin","strokeCap","dashOffset","dashArray","onFrame","dX","dY","minX","maxX","minY","maxY","getCenterTranslate","deltaX","deltaY","dP","move","isInside","selection","checkedP","res","trace","newColor","createContext","updateStateSet","cb","prevPageID","order","setInviewRatios","Reader","useParams","setPageRec","setNoteInfo","setStateSet","setPageOrder","useSafeState","setSaved","io","addTeamStatePage","loadNotePages","loadNote","storedNote","pdf","createFromPages","saver","useEvent","pr","toObject","canvas","querySelector","debouncedSave","debounce","flush","savePageRec","defaultNotePage","pushReorder","emit","handleReorder","onUndo","deleted","prevOrder","duration","handleNewPage","newPage","addState","on","removeAllListeners","pushNewPage","newTeamPage","updatePageRec","newSS","operation","lastDS","getLastDS","syncStrokeTime","inviewRatios","maxRatio","getLargestKey","prevPage","createPage","renderResult","PageContainer","id","lastPageID","redo","undo","updateState","setState","pdfIndex","fullImg","setFullImg","useInView","threshold","range","entry","intersectionRatio","loadImage","once","getOnePageImage","deleteAll","toList","drawShow","maskShow","Boolean","DrawWrapper","activeTool","handleChange","arg","IoFactory","BASE_URL","query","getUserName","pageStates","pageInfos","TeamState","getPageStates","Array","from","keys","getPageInfos","pageMap","setOp","op","getPageRatio","includesPage","prevDs","newTS","entries","teamPages","record","teamPage","flatState","Team","setTeamState","setCode","setUserRec","setIO","loaded","setLoaded","setConnected","loadTeamNoteInfo","info","getTeamNoteState","teamNote","createFromTeamPages","updateSelfState","updatePages","roomInit","infoLoaded","stateLoaded","pushOperation","joined","members","showJoinMsg","leaved","showLeaveMsg","resetUser","close","Loading","LoginOutlined","LogoutOutlined","createVirtualCanvas","createElement","context","getContext","Error","ctx","clearRect"],"sourceRoot":""}