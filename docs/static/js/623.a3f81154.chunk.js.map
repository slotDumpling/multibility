{"version":3,"file":"static/js/623.a3f81154.chunk.js","mappings":"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","sources":["component/menu/RightTools.tsx","component/ui/SwipeDelete.tsx","lib/hooks.ts","component/menu/SideMenu.tsx","component/menu/LeftTools.tsx","component/menu/HeadTools.tsx","component/menu/NoteList.tsx","component/menu/MainMenu.tsx"],"sourcesContent":["import {\r\n  Menu,\r\n  Input,\r\n  Button,\r\n  message,\r\n  Popover,\r\n  Progress,\r\n  Popconfirm,\r\n} from \"antd\";\r\nimport {\r\n  TeamOutlined,\r\n  UserOutlined,\r\n  SyncOutlined,\r\n  ClearOutlined,\r\n  InboxOutlined,\r\n  FilePdfOutlined,\r\n  SettingOutlined,\r\n  CaretDownOutlined,\r\n  ArrowLeftOutlined,\r\n} from \"@ant-design/icons\";\r\nimport * as serviceWorkerRegistration from \"../.././serviceWorkerRegistration\";\r\nimport { CSSTransitionProps } from \"react-transition-group/CSSTransition\";\r\nimport { createContext, useContext, useState } from \"react\";\r\nimport { getUserName, saveUserName } from \"../../lib/user\";\r\nimport { createNewNote } from \"../../lib/note/archive\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { getNoteID } from \"../../lib/network/http\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Dragger from \"antd/lib/upload/Dragger\";\r\nimport { PasscodeInput } from \"antd-mobile\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport localforage from \"localforage\";\r\nimport { MenuCtx } from \"./MainMenu\";\r\nimport { useEffect } from \"react\";\r\nimport { FC } from \"react\";\r\nimport \"./rightTools.sass\";\r\n\r\nconst activeKeyCtx = createContext({\r\n  active: \"MENU\",\r\n  setActive: (() => {}) as Setter<string>,\r\n});\r\n\r\nexport default function RightTools() {\r\n  return (\r\n    <div className=\"right-tools\">\r\n      <JoinTeamButton />\r\n      <OthersButton />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst SeconaryMenu: FC<\r\n  {\r\n    title: string;\r\n    keyName: string;\r\n  } & CSSTransitionProps\r\n> = ({ children, title, keyName, ...cssTransProps }) => {\r\n  const { active, setActive } = useContext(activeKeyCtx);\r\n  return (\r\n    <CSSTransition in={active === keyName} {...cssTransProps}>\r\n      <div className=\"secondary\">\r\n        <nav>\r\n          <Button\r\n            type=\"text\"\r\n            shape=\"circle\"\r\n            onClick={() => setActive(\"MENU\")}\r\n            icon={<ArrowLeftOutlined />}\r\n          />\r\n          <h3>{title}</h3>\r\n        </nav>\r\n        {children}\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nconst UploadPdfPage = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const { tagUid, setAllTags, setAllNotes } = useContext(MenuCtx);\r\n  const [percent, setPercent] = useState(0);\r\n\r\n  async function handleFile(file: File) {\r\n    if (file.type !== \"application/pdf\") return;\r\n    setLoading(true);\r\n    const { LoadPDF } = await import(\"../../lib/note/pdfImage\");\r\n    const note = await LoadPDF(file, setPercent);\r\n    note.tagID = tagUid;\r\n    const { tags, allNotes } = await createNewNote(note);\r\n    setAllTags(tags);\r\n    setAllNotes(allNotes);\r\n    setLoading(false);\r\n    message.success(\"PDF Loaded\");\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <Dragger\r\n      className=\"pdf-upload\"\r\n      disabled={loading}\r\n      multiple={false}\r\n      action=\"#\"\r\n      accept=\"application/pdf\"\r\n      beforeUpload={handleFile}\r\n    >\r\n      <p className=\"ant-upload-drag-icon\">\r\n        {loading && <Progress width={48} type=\"circle\" percent={percent} />}\r\n        {loading || <InboxOutlined />}\r\n      </p>\r\n      <p className=\"ant-upload-hint\">Click or drag a pdf file here.</p>\r\n    </Dragger>\r\n  );\r\n};\r\n\r\nconst ProfilePage = () => {\r\n  const { setActive } = useContext(activeKeyCtx);\r\n  const userName = getUserName();\r\n  const [name, setName] = useState(userName);\r\n  const handleEnter = () => {\r\n    if (!name) return;\r\n    saveUserName(name);\r\n    setActive(\"MENU\");\r\n  };\r\n  return (\r\n    <div className=\"profile-page\">\r\n      <Input\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        prefix={<UserOutlined />}\r\n        allowClear\r\n      />\r\n      <Button\r\n        disabled={userName === name || !name}\r\n        onClick={handleEnter}\r\n        type=\"primary\"\r\n        block\r\n      >\r\n        OK\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SettingsPage = () => {\r\n  const { menuInit } = useContext(MenuCtx);\r\n\r\n  const clearAll = async () => {\r\n    await localforage.clear();\r\n    menuInit();\r\n  };\r\n\r\n  return (\r\n    <div className=\"setting-menu\">\r\n      <Button\r\n        icon={<SyncOutlined />}\r\n        onClick={async () => {\r\n          await serviceWorkerRegistration.unregister();\r\n          window.location.reload();\r\n        }}\r\n        block\r\n      >\r\n        Update\r\n      </Button>\r\n      <Popconfirm\r\n        title=\"Everything will be deleted.\"\r\n        onConfirm={clearAll}\r\n        icon={<ClearOutlined />}\r\n        okText=\"Delete\"\r\n        okType=\"danger\"\r\n        okButtonProps={{ type: \"primary\" }}\r\n        cancelText=\"Cancel\"\r\n        placement=\"bottom\"\r\n      >\r\n        <Button icon={<ClearOutlined />} danger block>\r\n          Clear all\r\n        </Button>\r\n      </Popconfirm>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst menuItems = [\r\n  {\r\n    key: \"PDF\",\r\n    label: \"Import PDF\",\r\n    component: <UploadPdfPage />,\r\n    icon: <FilePdfOutlined />,\r\n  },\r\n  {\r\n    key: \"PROFILE\",\r\n    label: \"My profile\",\r\n    component: <ProfilePage />,\r\n    icon: <UserOutlined />,\r\n  },\r\n  {\r\n    key: \"SETTINGS\",\r\n    label: \"Settings\",\r\n    component: <SettingsPage />,\r\n    icon: <SettingOutlined />,\r\n  },\r\n];\r\n\r\nconst PrimaryMenu = () => {\r\n  const { setActive } = useContext(activeKeyCtx);\r\n  return (\r\n    <div className=\"primary-menu\">\r\n      <Menu onClick={({ key }) => setActive(key)} items={menuItems} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OthersPage = () => {\r\n  const [height, setHeight] = useState(0);\r\n  const [active, setActive] = useState(\"\");\r\n\r\n  const calcHeight = (el: HTMLElement) => {\r\n    setHeight(el.clientHeight);\r\n  };\r\n\r\n  const cssTransProps = {\r\n    timeout: 300,\r\n    onEnter: calcHeight,\r\n    unmountOnExit: true,\r\n  };\r\n\r\n  useEffect(() => setActive(\"MENU\"), []);\r\n\r\n  return (\r\n    <activeKeyCtx.Provider value={{ active, setActive }}>\r\n      <section className=\"others-menu\" style={{ height }}>\r\n        <CSSTransition in={active === \"MENU\"} {...cssTransProps}>\r\n          <PrimaryMenu />\r\n        </CSSTransition>\r\n        {menuItems.map(({ key, label, component }) => (\r\n          <SeconaryMenu\r\n            key={key}\r\n            keyName={key}\r\n            title={label}\r\n            {...cssTransProps}\r\n          >\r\n            {component}\r\n          </SeconaryMenu>\r\n        ))}\r\n      </section>\r\n    </activeKeyCtx.Provider>\r\n  );\r\n};\r\n\r\nconst OthersButton = () => {\r\n  return (\r\n    <Popover\r\n      placement=\"bottomRight\"\r\n      trigger=\"click\"\r\n      content={<OthersPage />}\r\n      zIndex={900}\r\n    >\r\n      <Button className=\"large\" shape=\"circle\" icon={<CaretDownOutlined />} />\r\n      <Button className=\"small\" type=\"text\" icon={<CaretDownOutlined />} />\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst JoinTeamButton = () => {\r\n  const [roomCode, setRoomCode] = useState(\"\");\r\n  const [wrong, setWrong] = useState(false);\r\n\r\n  const nav = useNavigate();\r\n  async function handleSubmit(code: string) {\r\n    const noteID = await getNoteID(code);\r\n    if (noteID) return nav(`/team/${noteID}`);\r\n    setRoomCode(\"\");\r\n    setWrong(true);\r\n  }\r\n\r\n  return (\r\n    <Popover\r\n      placement=\"bottomRight\"\r\n      trigger=\"click\"\r\n      title=\"Join a team note\"\r\n      destroyTooltipOnHide\r\n      onVisibleChange={() => setWrong(false)}\r\n      content={\r\n        <PasscodeInput\r\n          plain\r\n          length={4}\r\n          error={wrong}\r\n          value={roomCode}\r\n          onChange={(v) => {\r\n            setWrong(false);\r\n            setRoomCode(v);\r\n          }}\r\n          onFill={handleSubmit}\r\n        />\r\n      }\r\n    >\r\n      <Button className=\"team-btn large\" shape=\"round\" icon={<TeamOutlined />}>\r\n        Team\r\n      </Button>\r\n      <Button className=\"team-btn small\" type=\"text\" icon={<TeamOutlined />} />\r\n    </Popover>\r\n  );\r\n};\r\n","import React, {\n  createContext,\n  Dispatch,\n  FC,\n  SetStateAction,\n  TransitionEventHandler,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { useSwipeable } from \"react-swipeable\";\nimport classNames from \"classnames\";\nimport \"./swipe-delete.sass\";\nimport { v4 as getUid } from \"uuid\";\nimport { useEventWaiter } from \"../../lib/hooks\";\n\nconst SwipedCtx = createContext({\n  nowSwiped: \"\",\n  setNowSwiped: (() => {}) as Dispatch<SetStateAction<string>>,\n});\n\nexport const SwipeDeleteContext: FC = ({ children }) => {\n  const [nowSwiped, setNowSwiped] = useState(\"\");\n  return (\n    <SwipedCtx.Provider value={{ nowSwiped, setNowSwiped }}>\n      {children}\n    </SwipedCtx.Provider>\n  );\n};\n\nexport const SwipeDelete: FC<{\n  onDelete: () => void;\n  disable?: boolean;\n  className?: string;\n}> = ({ children, onDelete, disable = false, className }) => {\n  const [uid] = useState(getUid);\n  \n  const { nowSwiped, setNowSwiped } = useContext(SwipedCtx);\n  const [swiped, setSwiped] = useState(false);\n  const deleting = swiped && (!nowSwiped || nowSwiped === uid);\n  const [deleted, setDeleted] = useState(false);\n\n  const [height, setHeight] = useState<number>();\n  const wrapper = useRef<HTMLDivElement>(null);\n  \n  useEffect(() => {\n    if (nowSwiped !== uid) setSwiped(false);\n  }, [nowSwiped, uid]);\n\n  const showDelete = () => {\n    setSwiped(true);\n    setNowSwiped(uid);\n    setHeight(wrapper.current?.clientHeight);\n  };\n\n  const hideDelete = () => {\n    setSwiped(false);\n    setNowSwiped(\"\");\n    setHeight(undefined);\n  };\n\n  const swipeHandler = useSwipeable({\n    onSwipedLeft: showDelete,\n    onSwipedRight: hideDelete,\n    preventDefaultTouchmoveEvent: true,\n    trackTouch: !disable,\n  });\n\n  useEffect(() => {\n    if (!disable) return;\n    setHeight(undefined);\n    setNowSwiped(\"\");\n    setSwiped(false);\n  }, [disable, setNowSwiped]);\n\n  const [transDidEnd, transEnd] = useEventWaiter();\n  const handleClick = async () => {\n    setDeleted(true);\n    await transDidEnd;\n    onDelete();\n    setNowSwiped(\"\");\n  };\n\n  const handleTransEnd: TransitionEventHandler = (e) => {\n    if (e.propertyName === \"height\" && deleted) transEnd();\n  };\n\n  const wrapperClass = classNames(\"swipe-wrapper\", className, {\n    deleted,\n    deleting,\n  });\n\n  return (\n    <div\n      className={wrapperClass}\n      {...swipeHandler}\n      style={{ height }}\n      onTransitionEnd={handleTransEnd}\n    >\n      <div className=\"content\" ref={wrapper}>\n        {children}\n      </div>\n      <div className=\"button\" onClick={handleClick} style={{ height }}>\n        Delete\n      </div>\n    </div>\n  );\n};\n","import { Dispatch, SetStateAction, useRef, useState } from \"react\";\r\n\r\nexport type Setter<T> = Dispatch<SetStateAction<T>>;\r\n\r\nexport function useEventWaiter(): [Promise<void>, () => void] {\r\n  const resRef = useRef(() => {});\r\n  const resolve = () => resRef.current();\r\n\r\n  const [promise] = useState(\r\n    () => new Promise<void>((res) => (resRef.current = res))\r\n  );\r\n\r\n  return [promise, resolve];\r\n}\r\n","import { FC, useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  TagOutlined,\r\n  DeleteOutlined,\r\n  SettingOutlined,\r\n  ContainerOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { deleteTag, editTag, NoteTag, addNewTag } from \"../../lib/note/archive\";\r\nimport { SwipeDelete, SwipeDeleteContext } from \"../ui/SwipeDelete\";\r\nimport { Button, Input, Popconfirm, Select } from \"antd\";\r\nimport { colors, getRandomColor } from \"../../lib/color\";\r\nimport { MenuCtx } from \"./MainMenu\";\r\nimport { ColorCirle } from \"../widgets/ColorCircle\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport classNames from \"classnames\";\r\n\r\nconst TagInput: FC<{\r\n  tagName: string;\r\n  setTagName: Setter<string>;\r\n  tagColor: string;\r\n  setTagColor: Setter<string>;\r\n}> = ({ tagName, setTagName, tagColor, setTagColor }) => {\r\n  const colorSelector = (\r\n    <Select value={tagColor} onSelect={setTagColor} listHeight={150}>\r\n      {colors.map((c) => (\r\n        <Select.Option value={c} key={c}>\r\n          <ColorCirle className=\"tag-circle\" color={c} />\r\n        </Select.Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n\r\n  return (\r\n    <Input\r\n      autoFocus\r\n      placeholder=\"Tag name...\"\r\n      className=\"tag-name-input\"\r\n      addonBefore={colorSelector}\r\n      value={tagName}\r\n      onChange={(e) => setTagName(e.target.value)}\r\n    />\r\n  );\r\n};\r\n\r\nconst TagItem: FC<{ noteTag: NoteTag }> = ({ noteTag }) => {\r\n  const { uid, color, name, notes } = noteTag;\r\n  const { editing, tagUid, setAllTags, setTagUid } = useContext(MenuCtx);\r\n  const [tagName, setTagName] = useState(name);\r\n  const [tagColor, setTagColor] = useState(color);\r\n  const [tagEditing, setTagEditing] = useState(false);\r\n  useEffect(() => setTagEditing(false), [editing]);\r\n\r\n  async function removeTag() {\r\n    const tags = await deleteTag(uid);\r\n    setTagUid(\"DEFAULT\");\r\n    setAllTags(tags);\r\n  }\r\n\r\n  const cancelEditing = () => {\r\n    setTagName(name);\r\n    setTagColor(color);\r\n    setTagEditing(false);\r\n  };\r\n\r\n  const finishEditing = async () => {\r\n    const newTag: NoteTag = {\r\n      ...noteTag,\r\n      name: tagName,\r\n      color: tagColor,\r\n    };\r\n\r\n    const newAllTags = await editTag(newTag);\r\n    setAllTags(newAllTags);\r\n    setTagEditing(false);\r\n  };\r\n\r\n  const displayPanel = (\r\n    <>\r\n      <ColorCirle className=\"tag-circle\" color={tagColor} />\r\n      <span className=\"tag-name\">{tagName}</span>\r\n      {editing || <span className=\"tag-num\">{notes.length}</span>}\r\n      {editing && (\r\n        <Button\r\n          size=\"small\"\r\n          type=\"text\"\r\n          onClick={() => setTagEditing(true)}\r\n          icon={<SettingOutlined />}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const editingPanel = (\r\n    <>\r\n      <TagInput\r\n        tagName={tagName}\r\n        setTagName={setTagName}\r\n        tagColor={tagColor}\r\n        setTagColor={setTagColor}\r\n      />\r\n      <div className=\"buttons\">\r\n        <Popconfirm\r\n          title=\"This tag will be deleted.\"\r\n          onConfirm={removeTag}\r\n          placement=\"left\"\r\n          cancelText=\"Cancel\"\r\n          icon={<DeleteOutlined />}\r\n          okText=\"Delete\"\r\n          okType=\"danger\"\r\n          okButtonProps={{ type: \"primary\" }}\r\n        >\r\n          <Button danger>Delete</Button>\r\n        </Popconfirm>\r\n        <Button onClick={cancelEditing}>Cancel</Button>\r\n        <Button type=\"primary\" disabled={!tagName} onClick={finishEditing}>\r\n          OK\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  const itemClass = classNames(\"tag-item\", {\r\n    curr: tagUid === uid,\r\n    editing: tagEditing,\r\n  });\r\n\r\n  return (\r\n    <SwipeDelete className=\"tag-wrapper\" onDelete={removeTag} disable={editing}>\r\n      <div className={itemClass} onClick={() => setTagUid(uid)}>\r\n        {tagEditing ? editingPanel : displayPanel}\r\n      </div>\r\n    </SwipeDelete>\r\n  );\r\n};\r\n\r\nconst NewTagItem: FC<{ setAdding: Setter<boolean> }> = ({ setAdding }) => {\r\n  const [tagName, setTagName] = useState(\"\");\r\n  const [tagColor, setTagColor] = useState(getRandomColor());\r\n  const { setAllTags } = useContext(MenuCtx);\r\n\r\n  const addTag = () => {\r\n    const name = tagName.trim();\r\n    if (!name) return;\r\n    addNewTag(name, tagColor).then(setAllTags);\r\n    setAdding(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tag-wrapper new\">\r\n      <div className=\"tag-item curr editing\">\r\n        <TagInput\r\n          tagName={tagName}\r\n          setTagName={setTagName}\r\n          tagColor={tagColor}\r\n          setTagColor={setTagColor}\r\n        />\r\n        <div className=\"buttons\">\r\n          <Button onClick={() => setAdding(false)}>Cancel</Button>\r\n          <Button type=\"primary\" disabled={!tagName} onClick={addTag}>\r\n            OK\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function SideMenu() {\r\n  const { allTags, editing, tagUid, allNotes, setTagUid, setEditing } =\r\n    useContext(MenuCtx);\r\n  const [adding, setAdding] = useState(false);\r\n\r\n  const allNoteTag = (\r\n    <div className=\"tag-wrapper\">\r\n      <div\r\n        className={classNames(\"tag-item\", { curr: tagUid === \"DEFAULT\" })}\r\n        onClick={() => setTagUid(\"DEFAULT\")}\r\n      >\r\n        <ContainerOutlined className=\"all-note-icon\" />\r\n        <span className=\"tag-name\">All Notes</span>\r\n        <span className=\"tag-num\">{Object.keys(allNotes).length}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const swichEditing = () => setEditing((prev) => !prev);\r\n\r\n  const editButton = (\r\n    <Button\r\n      className=\"edit-btn small\"\r\n      shape=\"round\"\r\n      type={editing ? \"primary\" : \"default\"}\r\n      onClick={swichEditing}\r\n    >\r\n      {editing ? \"Done\" : \"Edit\"}\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <aside className=\"side-menu\">\r\n      <div className=\"tag-list\">\r\n        {allNoteTag}\r\n        <SwipeDeleteContext>\r\n          {Object.values(allTags).map((tag) => (\r\n            <TagItem key={tag.uid} noteTag={tag} />\r\n          ))}\r\n        </SwipeDeleteContext>\r\n        {adding && <NewTagItem setAdding={setAdding} />}\r\n      </div>\r\n      <footer>\r\n        <Button\r\n          shape=\"round\"\r\n          icon={<TagOutlined />}\r\n          onClick={() => setAdding(true)}\r\n          disabled={adding}\r\n        >\r\n          Add\r\n        </Button>\r\n        {editButton}\r\n      </footer>\r\n    </aside>\r\n  );\r\n}\r\n","import { Button, Drawer } from \"antd\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { MenuOutlined } from \"@ant-design/icons\";\r\nimport SideMenu from \"./SideMenu\";\r\nimport { MenuCtx } from \"./MainMenu\";\r\n\r\nexport default function LeftTools() {\r\n  const [asideOn, setAsideOn] = useState(false);\r\n  const { editing, tagUid, setEditing } = useContext(MenuCtx);\r\n\r\n  useEffect(() => {\r\n    if (!editing) setAsideOn(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [tagUid]);\r\n\r\n  const editButton = (\r\n    <Button\r\n      className=\"edit-btn large\"\r\n      onClick={() => setEditing((prev) => !prev)}\r\n      type={editing ? \"primary\" : \"text\"}\r\n    >\r\n      {editing ? \"Done\" : \"Edit\"}\r\n    </Button>\r\n  );\r\n\r\n  const AsideButton = (\r\n    <>\r\n      <Button\r\n        className=\"aside-btn\"\r\n        type=\"text\"\r\n        icon={<MenuOutlined />}\r\n        onClick={() => setAsideOn((prev) => !prev)}\r\n      />\r\n      <Drawer\r\n        className=\"aside-drawer\"\r\n        width={300}\r\n        placement=\"left\"\r\n        closable={false}\r\n        visible={asideOn}\r\n        onClose={() => setAsideOn(false)}\r\n        contentWrapperStyle={{ boxShadow: \"none\" }}\r\n        bodyStyle={{ padding: 0, overflow: \"hidden\" }}\r\n        destroyOnClose\r\n      >\r\n        <SideMenu />\r\n      </Drawer>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div className=\"left-tools\">\r\n      {AsideButton}\r\n      {editButton}\r\n    </div>\r\n  );\r\n}\r\n","import { Button, ButtonProps, Dropdown, Input, Menu, Popconfirm } from \"antd\";\r\nimport { FC, useContext } from \"react\";\r\nimport { MenuCtx } from \"./MainMenu\";\r\nimport {\r\n  SwapOutlined,\r\n  TagsOutlined,\r\n  FileOutlined,\r\n  DeleteOutlined,\r\n  SearchOutlined,\r\n  FileTextOutlined,\r\n  RollbackOutlined,\r\n  CheckSquareOutlined,\r\n  SortAscendingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { ColorCirle } from \"../widgets/ColorCircle\";\r\nimport classNames from \"classnames\";\r\n\r\nexport function HeadTools({\r\n  sortType,\r\n  setSortType,\r\n  searchText,\r\n  setSearchText,\r\n  onDelete,\r\n  onMove,\r\n  disabled = true,\r\n}: {\r\n  sortType: string;\r\n  setSortType: Setter<string>;\r\n  searchText: string;\r\n  setSearchText: Setter<string>;\r\n  onDelete: () => void;\r\n  onMove: (tagID: string) => void;\r\n  disabled: boolean;\r\n}) {\r\n  const { editing, allTags, setEditing } = useContext(MenuCtx);\r\n\r\n  const sortMenu = (\r\n    <Menu\r\n      onClick={({ key }) => setSortType(key)}\r\n      selectedKeys={[sortType]}\r\n      className=\"sort-drop\"\r\n      items={[\r\n        {\r\n          type: \"group\",\r\n          label: \"Sort by\",\r\n          children: [\r\n            { icon: <FileOutlined />, key: \"CREATE\", label: \"Date created\" },\r\n            { icon: <FileTextOutlined />, key: \"LAST\", label: \"Date modified\" },\r\n            { icon: <SortAscendingOutlined />, key: \"NAME\", label: \"Name\" },\r\n          ],\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n\r\n  const btnProps: ButtonProps = { type: \"text\", shape: \"circle\" };\r\n  const sortButton = (\r\n    <Dropdown overlay={sortMenu} trigger={[\"click\"]} placement=\"bottom\">\r\n      <Button\r\n        className=\"sort-btn\"\r\n        icon={<SwapOutlined rotate={90} />}\r\n        {...btnProps}\r\n      />\r\n    </Dropdown>\r\n  );\r\n\r\n  const deleteButton = (\r\n    <Popconfirm\r\n      title=\"Notes will be deleted.\"\r\n      onConfirm={onDelete}\r\n      icon={<DeleteOutlined />}\r\n      placement=\"bottom\"\r\n      cancelText=\"Cancel\"\r\n      disabled={disabled}\r\n      okText=\"Delete\"\r\n      okType=\"danger\"\r\n      okButtonProps={{ type: \"primary\" }}\r\n    >\r\n      <Button\r\n        className=\"del-btn\"\r\n        shape=\"round\"\r\n        type=\"text\"\r\n        disabled={disabled}\r\n        danger={!disabled}\r\n        icon={<DeleteOutlined />}\r\n      >\r\n        Delete\r\n      </Button>\r\n    </Popconfirm>\r\n  );\r\n\r\n  const ColorLabel: FC<{\r\n    color: string;\r\n    name: string;\r\n  }> = ({ color, name }) => (\r\n    <div className=\"tag-select\">\r\n      <ColorCirle color={color} className=\"tag-circle\" />\r\n      <span className=\"name\">{name}</span>\r\n    </div>\r\n  );\r\n\r\n  const overlay = (\r\n    <Menu\r\n      onClick={({ key }) => onMove(key)}\r\n      items={[\r\n        {\r\n          key: \"DEFAULT\",\r\n          label: <ColorLabel color=\"#eee\" name=\"No tag\" />,\r\n        },\r\n        ...Object.values(allTags).map((t) => ({\r\n          key: t.uid,\r\n          label: <ColorLabel color={t.color} name={t.name} />,\r\n        })),\r\n      ]}\r\n    />\r\n  );\r\n\r\n  const tagButton = (\r\n    <Dropdown\r\n      disabled={disabled}\r\n      overlay={overlay}\r\n      trigger={[\"click\"]}\r\n      placement=\"bottom\"\r\n    >\r\n      <Button\r\n        shape=\"round\"\r\n        type=\"text\"\r\n        className=\"tag-btn\"\r\n        icon={<TagsOutlined />}\r\n        style={{ transition: \"none\" }}\r\n      >\r\n        Tag\r\n      </Button>\r\n    </Dropdown>\r\n  );\r\n\r\n  return (\r\n    <div className={classNames(\"head-tools\", { editing })}>\r\n      {editing ? (\r\n        <>\r\n          <Button\r\n            className=\"small\"\r\n            onClick={() => setEditing(false)}\r\n            icon={<RollbackOutlined />}\r\n            {...btnProps}\r\n          />\r\n          {tagButton}\r\n          {deleteButton}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Input\r\n            value={searchText}\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n            className=\"search-input\"\r\n            prefix={<SearchOutlined />}\r\n            bordered={false}\r\n            allowClear\r\n          />\r\n          {sortButton}\r\n          <Button\r\n            className=\"small\"\r\n            onClick={() => setEditing(true)}\r\n            icon={<CheckSquareOutlined />}\r\n            {...btnProps}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { FC, useMemo, useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  NoteTag,\r\n  deleteNote,\r\n  moveNoteTag,\r\n  editNoteData,\r\n} from \"../../lib/note/archive\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { CloudTwoTone, CheckCircleFilled } from \"@ant-design/icons\";\r\nimport { SwipeDelete, SwipeDeleteContext } from \"../ui/SwipeDelete\";\r\nimport { NoteInfo } from \"../../lib/note/note\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport calender from \"dayjs/plugin/calendar\";\r\nimport dafaultImg from \"../ui/default.png\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { HeadTools } from \"./HeadTools\";\r\nimport { List, Set } from \"immutable\";\r\nimport { MenuCtx } from \"./MainMenu\";\r\nimport classNames from \"classnames\";\r\nimport { Input } from \"antd\";\r\nimport dayjs from \"dayjs\";\r\n\r\ndayjs.extend(calender);\r\n\r\nexport default function NoteList({ noteList }: { noteList: List<NoteInfo> }) {\r\n  const { editing, setAllTags, setAllNotes } = useContext(MenuCtx);\r\n  const [sortType, setSortType] = useState(\"LAST\");\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [selectedNotes, setSelectNotes] = useState(Set<string>());\r\n\r\n  const removeNotes = async (uids: string[]) => {\r\n    let tags: Record<string, NoteTag> | undefined;\r\n    let allNotes: Record<string, NoteInfo> | undefined;\r\n    for (let uid of uids) {\r\n      const res = await deleteNote(uid);\r\n      tags = res.tags;\r\n      allNotes = res.allNotes;\r\n    }\r\n    tags && setAllTags(tags);\r\n    allNotes && setAllNotes(allNotes);\r\n  };\r\n\r\n  const moveNotes = async (noteIDs: string[], tagID: string) => {\r\n    let tags: Record<string, NoteTag> | undefined;\r\n    let allNotes: Record<string, NoteInfo> | undefined;\r\n    for (let noteID of noteIDs) {\r\n      const res = await moveNoteTag(noteID, tagID);\r\n      tags = res.tags;\r\n      allNotes = res.allNotes;\r\n    }\r\n    tags && setAllTags(tags);\r\n    allNotes && setAllNotes(allNotes);\r\n  };\r\n\r\n  const sortedList = useMemo(() => {\r\n    const comparator = (t0: number, t1: number) => t1 - t0;\r\n    switch (sortType) {\r\n      case \"CREATE\":\r\n        return noteList.sortBy((n) => n.createTime, comparator);\r\n      case \"LAST\":\r\n        return noteList.sortBy((n) => n.lastTime, comparator);\r\n      case \"NAME\":\r\n        return noteList.sortBy((n) => n.name.toUpperCase());\r\n      default:\r\n        return noteList;\r\n    }\r\n  }, [noteList, sortType]);\r\n\r\n  const filterdList = useMemo(\r\n    () =>\r\n      sortedList.filter((n) =>\r\n        n.name.toUpperCase().includes(searchText.trim().toUpperCase())\r\n      ),\r\n    [searchText, sortedList]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setSearchText(\"\");\r\n    setSelectNotes(Set());\r\n  }, [noteList, editing]);\r\n\r\n  return (\r\n    <SwipeDeleteContext>\r\n      <TransitionGroup className=\"note-list\">\r\n        <HeadTools\r\n          sortType={sortType}\r\n          setSortType={setSortType}\r\n          searchText={searchText}\r\n          setSearchText={setSearchText}\r\n          onDelete={() => removeNotes(selectedNotes.toArray())}\r\n          onMove={(tagID) => moveNotes(selectedNotes.toArray(), tagID)}\r\n          disabled={selectedNotes.size === 0}\r\n        />\r\n        {filterdList.map((noteInfo) => {\r\n          const { uid } = noteInfo;\r\n          const removeNote = () => removeNotes([uid]);\r\n          return (\r\n            <CSSTransition key={uid} timeout={500}>\r\n              <SwipeDelete\r\n                className=\"note-wrapper\"\r\n                onDelete={removeNote}\r\n                disable={editing}\r\n              >\r\n                <NoteItem\r\n                  noteInfo={noteInfo}\r\n                  selected={selectedNotes.has(uid)}\r\n                  setSelectNotes={setSelectNotes}\r\n                />\r\n              </SwipeDelete>\r\n            </CSSTransition>\r\n          );\r\n        })}\r\n      </TransitionGroup>\r\n    </SwipeDeleteContext>\r\n  );\r\n}\r\n\r\nconst NoteItem: FC<{\r\n  noteInfo: NoteInfo;\r\n  selected: boolean;\r\n  setSelectNotes: Setter<Set<string>>;\r\n}> = ({ noteInfo, selected, setSelectNotes }) => {\r\n  const { team, uid, name, thumbnail, lastTime } = noteInfo;\r\n  const date = useMemo(() => dayjs(lastTime).calendar(), [lastTime]);\r\n  const href = `${team ? \"team\" : \"reader\"}/${uid}`;\r\n\r\n  const { editing, setAllNotes } = useContext(MenuCtx);\r\n  const [noteName, setNoteName] = useState(name);\r\n  const nav = useNavigate();\r\n\r\n  const saveNoteName = () => {\r\n    const newName = noteName.trim();\r\n    if (!newName || newName === name) return setNoteName(name);\r\n    editNoteData(uid, { name: newName });\r\n    setAllNotes((prev) => ({\r\n      ...prev,\r\n      [uid]: { ...prev[uid], name: newName },\r\n    }));\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (!editing) return nav(href);\r\n    setSelectNotes((prev) => {\r\n      if (prev.has(uid)) return prev.delete(uid);\r\n      return prev.add(uid);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classNames(\"note-item\", { selected })}\r\n      onClick={handleClick}\r\n    >\r\n      <div className=\"timg-wrapper\">\r\n        <img src={thumbnail || dafaultImg} alt={name} className=\"timg\" />\r\n        {team && <CloudTwoTone className=\"cloud-icon\" />}\r\n        <CheckCircleFilled className=\"checked-icon\" />\r\n      </div>\r\n      <div className=\"content\">\r\n        {editing || <p className=\"name\">{name}</p>}\r\n        {editing && (\r\n          <Input\r\n            className=\"name-input\"\r\n            value={noteName}\r\n            onChange={(e) => setNoteName(e.target.value)}\r\n            onClick={(e) => e.stopPropagation()}\r\n            onBlur={saveNoteName}\r\n          />\r\n        )}\r\n        <span className=\"date\">{date}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { createContext, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport {\r\n  createNewNote,\r\n  getAllNotes,\r\n  getAllTags,\r\n  NoteTag,\r\n} from \"../../lib/note/archive\";\r\nimport { createEmptyNote, NoteInfo } from \"../../lib/note/note\";\r\nimport { FormOutlined } from \"@ant-design/icons\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport RightTools from \"./RightTools\";\r\nimport LeftTools from \"./LeftTools\";\r\nimport classNames from \"classnames\";\r\nimport SideMenu from \"./SideMenu\";\r\nimport NoteList from \"./NoteList\";\r\nimport { List } from \"immutable\";\r\nimport { Button } from \"antd\";\r\nimport \"./menu.sass\";\r\n\r\nexport const MenuCtx = createContext({\r\n  tagUid: \"DEFAULT\",\r\n  editing: false,\r\n  allNotes: {} as Record<string, NoteInfo>,\r\n  allTags: {} as Record<string, NoteTag>,\r\n  setAllNotes: (() => {}) as Setter<Record<string, NoteInfo>>,\r\n  setAllTags: (() => {}) as Setter<Record<string, NoteTag>>,\r\n  setTagUid: (() => {}) as Setter<string>,\r\n  setEditing: (() => {}) as Setter<boolean>,\r\n  menuInit: () => {},\r\n});\r\n\r\nexport default function MainMenu() {\r\n  const [allNotes, setAllNotes] = useState<Record<string, NoteInfo>>({});\r\n  const [allTags, setAllTags] = useState<Record<string, NoteTag>>({});\r\n  const [tagUid, setTagUid] = useState(\"DEFAULT\");\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const selectedTag = useMemo(\r\n    () =>\r\n      allTags[tagUid] ?? {\r\n        uid: \"\",\r\n        name: \"All Notes\",\r\n        color: \"#000000\",\r\n        notes: Object.keys(allNotes),\r\n      },\r\n    [allNotes, allTags, tagUid]\r\n  );\r\n\r\n  const noteList = useMemo(\r\n    () =>\r\n      List(\r\n        selectedTag.notes\r\n          .filter((uid) => uid in allNotes)\r\n          .map((uid) => allNotes[uid])\r\n      ),\r\n    [selectedTag, allNotes]\r\n  );\r\n\r\n  const menuInit = () => {\r\n    getAllNotes().then(setAllNotes);\r\n    getAllTags().then(setAllTags);\r\n    document.title = \"Multibility\";\r\n  };\r\n  useEffect(menuInit, []);\r\n  const logo = tagUid === \"DEFAULT\";\r\n\r\n  return (\r\n    <MenuCtx.Provider\r\n      value={{\r\n        tagUid,\r\n        editing,\r\n        allNotes,\r\n        allTags,\r\n        setAllNotes,\r\n        setAllTags,\r\n        setEditing,\r\n        setTagUid,\r\n        menuInit,\r\n      }}\r\n    >\r\n      <div className=\"main-menu container\">\r\n        <header>\r\n          <LeftTools />\r\n          <h2 className={classNames({ logo })}>\r\n            {logo ? \"Multibility\" : selectedTag.name}\r\n          </h2>\r\n          <RightTools />\r\n        </header>\r\n        <main>\r\n          <SideMenu />\r\n          <NoteList noteList={noteList} />\r\n          <NewNoteButton />\r\n        </main>\r\n      </div>\r\n    </MenuCtx.Provider>\r\n  );\r\n}\r\n\r\nexport const NewNoteButton = () => {\r\n  const { tagUid, setAllTags, setAllNotes } = useContext(MenuCtx);\r\n\r\n  async function addNewNote() {\r\n    const note = createEmptyNote();\r\n    note.tagID = tagUid;\r\n    const { tags, allNotes } = await createNewNote(note);\r\n    setAllTags(tags);\r\n    setAllNotes(allNotes);\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      className=\"new-note\"\r\n      size=\"large\"\r\n      type=\"primary\"\r\n      shape=\"circle\"\r\n      onClick={addNewNote}\r\n      icon={<FormOutlined />}\r\n    />\r\n  );\r\n};\r\n"],"names":["activeKeyCtx","createContext","active","setActive","RightTools","className","JoinTeamButton","OthersButton","SeconaryMenu","children","title","keyName","cssTransProps","useContext","CSSTransition","in","type","shape","onClick","icon","ArrowLeftOutlined","UploadPdfPage","useState","loading","setLoading","MenuCtx","tagUid","setAllTags","setAllNotes","percent","setPercent","file","LoadPDF","note","tagID","createNewNote","tags","allNotes","message","Dragger","disabled","multiple","action","accept","beforeUpload","width","InboxOutlined","ProfilePage","userName","getUserName","name","setName","value","onChange","e","target","prefix","UserOutlined","allowClear","saveUserName","block","SettingsPage","menuInit","clearAll","localforage","SyncOutlined","serviceWorkerRegistration","window","location","reload","onConfirm","ClearOutlined","okText","okType","okButtonProps","cancelText","placement","danger","menuItems","key","label","component","FilePdfOutlined","SettingOutlined","PrimaryMenu","items","OthersPage","height","setHeight","timeout","onEnter","el","clientHeight","unmountOnExit","useEffect","Provider","style","map","trigger","content","zIndex","CaretDownOutlined","roomCode","setRoomCode","wrong","setWrong","nav","useNavigate","code","getNoteID","noteID","destroyTooltipOnHide","onVisibleChange","plain","length","error","v","onFill","TeamOutlined","SwipedCtx","nowSwiped","setNowSwiped","SwipeDeleteContext","SwipeDelete","onDelete","disable","getUid","uid","swiped","setSwiped","deleting","deleted","setDeleted","wrapper","useRef","swipeHandler","useSwipeable","onSwipedLeft","current","onSwipedRight","undefined","preventDefaultTouchmoveEvent","trackTouch","resRef","Promise","res","useEventWaiter","transDidEnd","transEnd","handleClick","wrapperClass","classNames","onTransitionEnd","propertyName","ref","TagInput","tagName","setTagName","tagColor","setTagColor","colorSelector","onSelect","listHeight","colors","c","color","autoFocus","placeholder","addonBefore","TagItem","noteTag","notes","editing","setTagUid","tagEditing","setTagEditing","removeTag","deleteTag","finishEditing","newTag","editTag","newAllTags","displayPanel","size","editingPanel","DeleteOutlined","itemClass","curr","NewTagItem","setAdding","getRandomColor","trim","addNewTag","then","SideMenu","allTags","setEditing","adding","allNoteTag","ContainerOutlined","Object","keys","editButton","prev","values","tag","TagOutlined","LeftTools","asideOn","setAsideOn","AsideButton","MenuOutlined","closable","visible","onClose","contentWrapperStyle","boxShadow","bodyStyle","padding","overflow","destroyOnClose","HeadTools","sortType","setSortType","searchText","setSearchText","onMove","sortMenu","selectedKeys","FileOutlined","FileTextOutlined","SortAscendingOutlined","btnProps","sortButton","overlay","SwapOutlined","rotate","deleteButton","ColorLabel","t","tagButton","TagsOutlined","transition","RollbackOutlined","SearchOutlined","bordered","CheckSquareOutlined","NoteList","noteList","Set","selectedNotes","setSelectNotes","removeNotes","uids","deleteNote","moveNotes","noteIDs","moveNoteTag","sortedList","useMemo","comparator","t0","t1","sortBy","n","createTime","lastTime","toUpperCase","filterdList","filter","includes","TransitionGroup","toArray","noteInfo","NoteItem","selected","has","dayjs","calender","team","thumbnail","date","calendar","href","noteName","setNoteName","delete","add","src","dafaultImg","alt","CloudTwoTone","CheckCircleFilled","stopPropagation","onBlur","newName","editNoteData","MainMenu","selectedTag","List","getAllNotes","getAllTags","document","logo","NewNoteButton","createEmptyNote","FormOutlined"],"sourceRoot":""}