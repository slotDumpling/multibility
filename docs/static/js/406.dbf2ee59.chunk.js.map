{"version":3,"file":"static/js/406.dbf2ee59.chunk.js","mappings":"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","sources":["lib/draw/drawCtrl.ts","lib/draw/StateSet.ts","component/reader/ReaderTools.tsx","lib/array.ts","component/ui/DigitDisplay.tsx","component/ui/IconFont.tsx","component/reader/PageNav.tsx","component/reader/DrawTools.tsx","component/draw/Draw.tsx","lib/hooks.ts","lib/touch/touch.ts","component/draw/Tools.tsx","component/reader/Reader.tsx","lib/network/io.ts","lib/draw/TeamState.ts","component/reader/Team.tsx","lib/draw/canvas.ts"],"sourcesContent":["import localforage from \"localforage\";\r\n\r\nexport interface DrawCtrl {\r\n  mode: \"draw\" | \"erase\" | \"select\" | \"text\";\r\n  finger: boolean;\r\n  lineWidth: number;\r\n  eraserWidth: number;\r\n  color: string;\r\n  highlight: boolean;\r\n}\r\n\r\nexport const defaultDrawCtrl: Readonly<DrawCtrl> = {\r\n  mode: \"draw\",\r\n  finger: true,\r\n  lineWidth: 10,\r\n  eraserWidth: 10,\r\n  color: \"#000000\",\r\n  highlight: false,\r\n};\r\n\r\nexport async function getDrawCtrl() {\r\n  let drawCtrl = (await localforage.getItem(\"DRAW_CTRL\")) as DrawCtrl | null;\r\n  if (!drawCtrl) {\r\n    drawCtrl = defaultDrawCtrl;\r\n    await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n  }\r\n  return drawCtrl;\r\n}\r\n\r\nexport async function saveDrawCtrl(drawCtrl: DrawCtrl) {\r\n  await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n}\r\n","import { List, Map, Record } from \"immutable\";\r\nimport { DrawState, Operation, WIDTH } from \"./DrawState\";\r\nimport { NotePage } from \"../note/note\";\r\n\r\ninterface StateSetRecordType {\r\n  states: Map<string, DrawState>;\r\n  editStack: List<string>;\r\n  undoStack: List<string>;\r\n}\r\n\r\nconst defaultRecord: Readonly<StateSetRecordType> = {\r\n  states: Map(),\r\n  editStack: List(),\r\n  undoStack: List(),\r\n};\r\n\r\ntype StateSetRecord = Record<StateSetRecordType>;\r\nconst defaultFactory = Record(defaultRecord);\r\n\r\nexport type SetOperation = Operation & { pageID: string };\r\n\r\nexport class StateSet {\r\n  constructor(\r\n    private immutable: StateSetRecord,\r\n    public lastOp?: SetOperation\r\n  ) {}\r\n\r\n  static createFromList(list: [string, DrawState][]) {\r\n    return new StateSet(defaultFactory().set(\"states\", Map(list)));\r\n  }\r\n\r\n  static createFromPages(\r\n    pageRec: globalThis.Record<string, NotePage>,\r\n    width = WIDTH\r\n  ) {\r\n    const entries = Object.entries(pageRec);\r\n    return StateSet.createFromList(\r\n      entries.map(([key, { state, ratio }]) => [\r\n        key,\r\n        DrawState.loadFromFlat(state, width, width * ratio),\r\n      ])\r\n    );\r\n  }\r\n\r\n  getImmutable() {\r\n    return this.immutable;\r\n  }\r\n\r\n  getStates() {\r\n    return this.getImmutable().get(\"states\");\r\n  }\r\n\r\n  getOneState(pageID: string) {\r\n    return this.getStates().get(pageID);\r\n  }\r\n\r\n  getEditStack() {\r\n    return this.getImmutable().get(\"editStack\");\r\n  }\r\n\r\n  getUndoStack() {\r\n    return this.getImmutable().get(\"undoStack\");\r\n  }\r\n\r\n  setState(pageID: string, drawState: DrawState) {\r\n    const prevDS = this.getOneState(pageID);\r\n    if (!prevDS || prevDS === drawState) return this;\r\n    let currRecord = this.getImmutable()\r\n      .update(\"states\", (s) => s.set(pageID, drawState))\r\n      .update(\"editStack\", (l) => l.push(pageID))\r\n      .delete(\"undoStack\");\r\n\r\n    const { lastOp } = drawState;\r\n    const lastSetOp = lastOp && { ...lastOp, pageID };\r\n\r\n    return new StateSet(currRecord, lastSetOp);\r\n  }\r\n\r\n  updateState(pageID: string, cb: (prevDS: DrawState) => DrawState) {\r\n    const prevDS = this.getOneState(pageID);\r\n    if (!prevDS) return this;\r\n    const currDS = cb(prevDS);\r\n    return new StateSet(\r\n      this.getImmutable().update(\"states\", (s) => s.set(pageID, currDS))\r\n    );\r\n  }\r\n\r\n  addState(pageID: string, notePage: NotePage, width = WIDTH) {\r\n    const { state, ratio } = notePage;\r\n    const newDS = DrawState.loadFromFlat(state, width, width * ratio);\r\n    const currRecord = this.getImmutable().update(\"states\", (s) =>\r\n      s.set(pageID, newDS)\r\n    );\r\n    return new StateSet(currRecord);\r\n  }\r\n\r\n  deleteState(pageID: string) {\r\n    return new StateSet(\r\n      this.getImmutable().update(\"states\", (s) => s.delete(pageID))\r\n    );\r\n  }\r\n\r\n  isUndoable() {\r\n    return this.getEditStack().size > 0;\r\n  }\r\n\r\n  isRedoable() {\r\n    return this.getUndoStack().size > 0;\r\n  }\r\n\r\n  undo() {\r\n    if (!this.isUndoable()) return this;\r\n    const lastUid = this.getEditStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.undo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"editStack\", (s) => s.pop())\r\n        .update(\"undoStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  redo() {\r\n    if (!this.isRedoable()) return this;\r\n    const lastUid = this.getUndoStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.redo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"undoStack\", (s) => s.pop())\r\n        .update(\"editStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  getLastDS(): [string, DrawState] | undefined {\r\n    const pageID = this.lastOp?.pageID;\r\n    const ds = pageID && this.getOneState(pageID);\r\n    return ds ? [pageID, ds] : undefined;\r\n  }\r\n}\r\n","import { Button, Input, message } from \"antd\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nexport const AddPageButton = () => {\r\n  const { addFinalPage } = useContext(ReaderMethodCtx);\r\n  return (\r\n    <div className=\"add-btn-wrapper\">\r\n      <Button\r\n        type=\"dashed\"\r\n        icon={<PlusOutlined />}\r\n        block\r\n        onClick={addFinalPage}\r\n      >\r\n        New page\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const NoteHeader = () => {\r\n  const { noteInfo } = useContext(ReaderStateCtx);\r\n  const [noteName, setNoteName] = useState(\"\");\r\n  useEffect(() => {\r\n    if (!noteInfo) return;\r\n    setNoteName(noteInfo?.name);\r\n  }, [noteInfo]);\r\n\r\n  if (!noteInfo) return null;\r\n\r\n  return (\r\n    <div className=\"note-header\">\r\n      <Input value={noteName} bordered={false} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const showPageDelMsg = (onUndo: () => void) => {\r\n  message.warning({\r\n    content: (\r\n      <>\r\n        One page was deleted.\r\n        <Button\r\n          size=\"small\"\r\n          type=\"link\"\r\n          onClick={() => {\r\n            message.destroy(\"DELETE\");\r\n            onUndo();\r\n          }}\r\n        >\r\n          Undo\r\n        </Button>\r\n      </>\r\n    ),\r\n    key: \"DELETE\",\r\n    duration: 10,\r\n  });\r\n};\r\n","export function exchange<T>(list: T[], fromIndex: number, toIndex: number) {\r\n  const result = list.slice();\r\n  const [removed] = result.splice(fromIndex, 1);\r\n  result.splice(toIndex, 0, removed);\r\n  return result;\r\n}\r\n\r\nexport function insertAfter<T>(list: T[], prevItem: T, newItem: T) {\r\n  const prevIndex = list.indexOf(prevItem);\r\n  const curr = list.slice();\r\n  if (prevIndex === -1) return curr;\r\n  curr.splice(prevIndex + 1, 0, newItem);\r\n  return curr;\r\n}\r\n","import classNames from \"classnames\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./digitDisplay.sass\";\r\n\r\nfunction num2digits(num: number): number[] {\r\n  return String(num)\r\n    .padStart(4, \"0\")\r\n    .split(\"\")\r\n    .map((s) => Number(s));\r\n}\r\n\r\nexport default function DigitDisplay({ value }: { value: number }) {\r\n  const [randomNum, setRandomNum] = useState(9999);\r\n  const displayNum = value >= 0 ? value : randomNum;\r\n  const digits = num2digits(displayNum);\r\n\r\n  function resetRandom() {\r\n    setRandomNum(Math.floor(Math.random() * 10000));\r\n  }\r\n  useEffect(() => {\r\n    if (value !== -1) return setRandomNum(9999);\r\n    const timer = setTimeout(resetRandom, 100);\r\n    return () => clearTimeout(timer);\r\n  }, [value]);\r\n\r\n  return (\r\n    <div className={classNames(\"digit-display\", { disabled: value === -2 })}>\r\n      {digits.map((d, idx) => (\r\n        <Digit key={idx} digit={d} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Digit({ digit }: { digit: number }) {\r\n  if (!(digit <= 9 && digit >= 0)) {\r\n    return <div className=\"digit\">*</div>;\r\n  }\r\n  return <div className=\"digit\">{digit}</div>;\r\n}\r\n","import { createFromIconfontCN } from \"@ant-design/icons\";\r\n\r\nexport default createFromIconfontCN({\r\n  scriptUrl: \"//at.alicdn.com/t/font_3181679_lu0aajj9g9j.js\",\r\n});\r\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  MouseEvent,\r\n} from \"react\";\r\nimport {\r\n  MoreOutlined,\r\n  PlusOutlined,\r\n  CopyOutlined,\r\n  DeleteOutlined,\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  Draggable,\r\n  Droppable,\r\n  DropResult,\r\n  DragDropContext,\r\n} from \"react-beautiful-dnd\";\r\nimport { PageWrapper, ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport { Avatar, Button, Drawer, Menu, Popover, Tabs } from \"antd\";\r\nimport { AddPageButton } from \"./ReaderTools\";\r\nimport { exchange } from \"../../lib/array\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { UserAvatar } from \"./DrawTools\";\r\nimport IconFont from \"../ui/IconFont\";\r\nimport classNames from \"classnames\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport \"./preview.sass\";\r\n\r\nconst PageNavContent = ({\r\n  activeKey,\r\n  setActiveKey,\r\n}: {\r\n  activeKey: string;\r\n  setActiveKey: Setter<string>;\r\n}) => {\r\n  const { pageOrder, inviewPages } = useContext(ReaderStateCtx);\r\n  const { scrollPage, saveReorder } = useContext(ReaderMethodCtx);\r\n  const refRec = useRef<Record<string, HTMLElement>>({});\r\n  const listEl = useRef<HTMLDivElement>();\r\n\r\n  const onDragEnd = ({ source, destination }: DropResult) => {\r\n    if (!destination || !pageOrder) return;\r\n    const { index: fromIndex } = source;\r\n    const { index: toIndex } = destination;\r\n    if (fromIndex === toIndex) return;\r\n    const pageID = pageOrder[fromIndex];\r\n    const newOrder = exchange(pageOrder, fromIndex, toIndex);\r\n    saveReorder(newOrder, true);\r\n    requestAnimationFrame(() => scrollPage(pageID));\r\n  };\r\n\r\n  const currpageID = useMemo(\r\n    () => pageOrder?.find((pageID) => inviewPages.has(pageID)) || \"\",\r\n    [pageOrder, inviewPages]\r\n  );\r\n\r\n  useEffect(() => {\r\n    refRec.current[currpageID]?.scrollIntoView();\r\n    const itemHeight = refRec.current[currpageID]?.clientHeight || 0;\r\n    const listHeight = listEl.current?.clientHeight || 0;\r\n    listEl.current?.scrollBy(0, -listHeight / 2 + itemHeight / 2);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"preview-container\">\r\n      <PreviewTabs activeKey={activeKey} setActiveKey={setActiveKey} />\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"droppable\">\r\n          {({ droppableProps, innerRef, placeholder }) => (\r\n            <div\r\n              className=\"page-list\"\r\n              ref={(e) => {\r\n                innerRef(e);\r\n                if (e) listEl.current = e;\r\n              }}\r\n              {...droppableProps}\r\n            >\r\n              {pageOrder?.map((uid, index) => (\r\n                <PagePreview\r\n                  key={uid}\r\n                  uid={uid}\r\n                  mode={activeKey}\r\n                  pageIndex={index}\r\n                  currpageID={currpageID}\r\n                  refRec={refRec.current}\r\n                />\r\n              ))}\r\n              {placeholder}\r\n              {activeKey === \"ALL\" && <AddPageButton />}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PagePreview: FC<{\r\n  uid: string;\r\n  mode: string;\r\n  pageIndex: number;\r\n  currpageID: string;\r\n  refRec: Record<string, HTMLElement>;\r\n}> = ({ uid, pageIndex, mode, currpageID, refRec }) => {\r\n  const { stateSet, teamState, pageRec } = useContext(ReaderStateCtx);\r\n  const { scrollPage, switchPageMarked } = useContext(ReaderMethodCtx);\r\n  const { ignores } = useContext(TeamCtx);\r\n  const [chosen, setChosen] = useState(\"\");\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n  const userIDs = useMemo(\r\n    () =>\r\n      teamState\r\n        ?.getPageValidUsers(uid)\r\n        .filter((userID) => !ignores.has(userID)),\r\n    [teamState, ignores, uid]\r\n  );\r\n  if (!page || !drawState) return null;\r\n\r\n  if (\r\n    mode === \"WRITTEN\" &&\r\n    drawState.isEmpty() &&\r\n    (!teamStateMap || teamStateMap.every((ds) => ds.isEmpty()))\r\n  ) {\r\n    return null;\r\n  }\r\n  if (mode === \"MARKED\" && !page.marked) return null;\r\n\r\n  const switchMarked = (e: MouseEvent<HTMLSpanElement>) => {\r\n    switchPageMarked(uid);\r\n    e.stopPropagation();\r\n  };\r\n  const curr = currpageID === uid;\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={uid}\r\n      index={pageIndex}\r\n      isDragDisabled={mode !== \"ALL\"}\r\n    >\r\n      {(\r\n        { innerRef, draggableProps, dragHandleProps },\r\n        { isDragging: drag }\r\n      ) => {\r\n        const { image, marked } = page;\r\n        return (\r\n          <div\r\n            ref={(e) => {\r\n              innerRef(e);\r\n              if (e) refRec[uid] = e;\r\n            }}\r\n            className={classNames(\"page\", { curr, drag })}\r\n            onClick={() => scrollPage(uid)}\r\n            {...draggableProps}\r\n            {...dragHandleProps}\r\n          >\r\n            <PageWrapper\r\n              uid={uid}\r\n              drawState={teamStateMap?.get(chosen) || drawState}\r\n              teamStateMap={chosen ? undefined : teamStateMap}\r\n              thumbnail={image}\r\n              preview\r\n            />\r\n            <span\r\n              className={classNames(\"bookmark\", { marked })}\r\n              onClickCapture={switchMarked}\r\n            />\r\n            <span className=\"index\">{pageIndex + 1}</span>\r\n            <TeamAvatars\r\n              userIDs={userIDs}\r\n              chosen={chosen}\r\n              setChosen={setChosen}\r\n            />\r\n            <PreviewOption uid={uid} />\r\n          </div>\r\n        );\r\n      }}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst TeamAvatars: FC<{\r\n  userIDs?: string[];\r\n  chosen: string;\r\n  setChosen: Setter<string>;\r\n}> = ({ userIDs, chosen, setChosen }) => {\r\n  return (\r\n    <Avatar.Group\r\n      maxCount={2}\r\n      size=\"default\"\r\n      className={classNames(\"team-group\", { chosen })}\r\n    >\r\n      {userIDs?.map((userID) => (\r\n        <UserAvatar\r\n          key={userID}\r\n          size=\"default\"\r\n          userID={userID}\r\n          className=\"preview-avatar\"\r\n          chosen={chosen === userID}\r\n          onClick={() => setChosen((prev) => (prev === userID ? \"\" : userID))}\r\n        />\r\n      ))}\r\n    </Avatar.Group>\r\n  );\r\n};\r\n\r\nconst PreviewOption = ({ uid }: { uid: string }) => {\r\n  const [popShow, setPopShow] = useState(false);\r\n  const { addPage, deletePage } = useContext(ReaderMethodCtx);\r\n\r\n  const menu = (\r\n    <Menu\r\n      onClick={({ key, domEvent }) => {\r\n        if (key === \"ADD\") {\r\n          addPage(uid);\r\n        } else if (key === \"COPY\") {\r\n          addPage(uid, true);\r\n        } else if (key === \"DELETE\") {\r\n          deletePage(uid);\r\n        }\r\n        domEvent.stopPropagation();\r\n        setPopShow(false);\r\n      }}\r\n      items={[\r\n        { key: \"ADD\", icon: <PlusOutlined />, label: \"Add page\" },\r\n        { key: \"COPY\", icon: <CopyOutlined />, label: \"Duplicate\" },\r\n        {\r\n          key: \"DELETE\",\r\n          icon: <DeleteOutlined />,\r\n          label: \"Delete\",\r\n          danger: true,\r\n        },\r\n      ]}\r\n    ></Menu>\r\n  );\r\n  return (\r\n    <Popover\r\n      content={menu}\r\n      trigger=\"click\"\r\n      placement=\"left\"\r\n      visible={popShow}\r\n      onVisibleChange={setPopShow}\r\n      destroyTooltipOnHide\r\n    >\r\n      <span\r\n        className=\"option\"\r\n        onClickCapture={(e) => {\r\n          setPopShow((prev) => !prev);\r\n          e.stopPropagation();\r\n        }}\r\n      >\r\n        <MoreOutlined />\r\n      </span>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst PreviewTabs = ({\r\n  activeKey,\r\n  setActiveKey,\r\n}: {\r\n  activeKey: string;\r\n  setActiveKey: (key: string) => void;\r\n}) => {\r\n  const { TabPane } = Tabs;\r\n  return (\r\n    <Tabs\r\n      className=\"tabs\"\r\n      activeKey={activeKey}\r\n      onChange={setActiveKey}\r\n      tabBarGutter={10}\r\n      size=\"small\"\r\n      centered\r\n    >\r\n      <TabPane tab={<IconFont type=\"icon-uf_paper\" />} key=\"ALL\" />\r\n      <TabPane tab={<IconFont type=\"icon-bookmark2\" />} key=\"MARKED\" />\r\n      <TabPane tab={<IconFont type=\"icon-write\" />} key=\"WRITTEN\" />\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default function PageNav() {\r\n  const [navOn, setNavOn] = useState(false);\r\n  const [activeKey, setActiveKey] = useState<string>(\"ALL\");\r\n  const title = {\r\n    ALL: \"All Pages\",\r\n    MARKED: \"Bookmarks\",\r\n    WRITTEN: \"Notes\",\r\n  }[activeKey];\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        type=\"text\"\r\n        icon={navOn ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\r\n        onClick={() => setNavOn((prev) => !prev)}\r\n      />\r\n      <Drawer\r\n        visible={navOn}\r\n        onClose={() => setNavOn(false)}\r\n        width={200}\r\n        title={title}\r\n        closable={false}\r\n        className=\"preview-drawer\"\r\n        contentWrapperStyle={{ boxShadow: \"none\" }}\r\n        bodyStyle={{ padding: 0, overflow: \"hidden\" }}\r\n        headerStyle={{ textAlign: \"center\", borderTop: \"1px solid #eee\" }}\r\n        destroyOnClose\r\n      >\r\n        <PageNavContent activeKey={activeKey} setActiveKey={setActiveKey} />\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","import React, {\r\n  FC,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  CSSProperties,\r\n} from \"react\";\r\nimport {\r\n  Badge,\r\n  Alert,\r\n  Avatar,\r\n  Button,\r\n  Slider,\r\n  Divider,\r\n  message,\r\n  Popover,\r\n  Popconfirm,\r\n  ButtonProps,\r\n} from \"antd\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport DigitDisplay from \"../ui/DigitDisplay\";\r\nimport { colors, getHashedColor } from \"../../lib/color\";\r\nimport { getUserID, saveUserName } from \"../../lib/user\";\r\nimport { DrawCtrl, saveDrawCtrl } from \"../../lib/draw/drawCtrl\";\r\nimport PageNav from \"./PageNav\";\r\nimport {\r\n  HomeFilled,\r\n  EyeOutlined,\r\n  FormOutlined,\r\n  UndoOutlined,\r\n  RedoOutlined,\r\n  SaveOutlined,\r\n  TeamOutlined,\r\n  CopyOutlined,\r\n  CheckOutlined,\r\n  ExpandOutlined,\r\n  ReloadOutlined,\r\n  ShareAltOutlined,\r\n  HighlightOutlined,\r\n  DisconnectOutlined,\r\n  EyeInvisibleOutlined,\r\n  UsergroupAddOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { AvatarSize } from \"antd/lib/avatar/SizeContext\";\r\nimport { editNoteData } from \"../../lib/note/archive\";\r\nimport { putNote } from \"../../lib/network/http\";\r\nimport IconFont from \"../ui/IconFont\";\r\nimport classNames from \"classnames\";\r\nimport copy from \"clipboard-copy\";\r\nimport \"./drawTools.sass\";\r\n\r\nexport default function DrawTools({\r\n  handleUndo,\r\n  handleRedo,\r\n  instantSave,\r\n}: {\r\n  handleUndo: () => void;\r\n  handleRedo: () => void;\r\n  instantSave: () => Promise<void> | undefined;\r\n}) {\r\n  const { saved, stateSet, teamOn, drawCtrl } = useContext(ReaderStateCtx);\r\n  const { mode } = drawCtrl;\r\n  const { setDrawCtrl } = useContext(ReaderMethodCtx);\r\n  const { finger } = drawCtrl;\r\n\r\n  const nav = useNavigate();\r\n\r\n  const updateDrawCtrl = (updated: Partial<DrawCtrl>) => {\r\n    setDrawCtrl((prev) => {\r\n      const newCtrl = { ...prev, ...updated };\r\n      saveDrawCtrl(newCtrl);\r\n      return newCtrl;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"left\">\r\n        <Button\r\n          type=\"text\"\r\n          onClick={async () => {\r\n            await instantSave();\r\n            nav(\"/\");\r\n          }}\r\n          icon={<HomeFilled style={{ opacity: 0.8 }} />}\r\n        />\r\n        <div className=\"br\" />\r\n        <Button\r\n          type=\"text\"\r\n          className=\"save\"\r\n          onClick={instantSave}\r\n          disabled={saved}\r\n          icon={<SaveOutlined />}\r\n        />\r\n      </div>\r\n      <div className=\"middle\">\r\n        <Button\r\n          type=\"text\"\r\n          shape=\"circle\"\r\n          icon={<UndoOutlined />}\r\n          onClick={handleUndo}\r\n          disabled={!stateSet?.isUndoable()}\r\n        />\r\n        <Button\r\n          type=\"text\"\r\n          shape=\"circle\"\r\n          icon={<RedoOutlined />}\r\n          onClick={handleRedo}\r\n          disabled={!stateSet?.isRedoable()}\r\n        />\r\n        <Button\r\n          type={finger ? \"primary\" : \"text\"}\r\n          ghost={finger}\r\n          shape=\"circle\"\r\n          onClick={() => updateDrawCtrl({ finger: !finger })}\r\n          icon={<IconFont type=\"icon-finger\" />}\r\n        />\r\n        <div className=\"br\" />\r\n        <PenButton updateDrawCtrl={updateDrawCtrl} />\r\n        <EraserButton updateDrawCtrl={updateDrawCtrl} />\r\n        <Button\r\n          type={mode === \"text\" ? \"default\" : \"text\"}\r\n          shape=\"circle\"\r\n          onClick={() => updateDrawCtrl({ mode: \"text\" })}\r\n          icon={<IconFont type=\"icon-text1\" />}\r\n        />\r\n        <Button\r\n          type={mode === \"select\" ? \"default\" : \"text\"}\r\n          shape=\"circle\"\r\n          onClick={() => updateDrawCtrl({ mode: \"select\" })}\r\n          icon={<ExpandOutlined />}\r\n        />\r\n      </div>\r\n      <div className=\"right\">\r\n        {teamOn && <RoomInfo />}\r\n        {teamOn || <JoinRoom instantSave={instantSave} />}\r\n        <div className=\"br\" />\r\n        <PageNav />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nconst PenButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const { drawCtrl } = useContext(ReaderStateCtx);\r\n  const { mode } = drawCtrl;\r\n\r\n  const btnProps: ButtonProps = {\r\n    className: \"pen\",\r\n    shape: \"circle\",\r\n    icon: <HighlightOutlined />,\r\n  };\r\n  return mode === \"draw\" ? (\r\n    <Popover\r\n      content={<PenPanel updateDrawCtrl={updateDrawCtrl} drawCtrl={drawCtrl} />}\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button type=\"default\" {...btnProps} />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      onClick={() => updateDrawCtrl({ mode: \"draw\" })}\r\n      {...btnProps}\r\n    />\r\n  );\r\n};\r\n\r\nexport const PenPanel: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n  drawCtrl: DrawCtrl;\r\n}> = ({ updateDrawCtrl, drawCtrl }) => {\r\n  const { lineWidth, highlight, color } = drawCtrl;\r\n  const [tempLineWidth, setTempLineWidth] = useState(lineWidth);\r\n\r\n  return (\r\n    <div className=\"pen-panel\">\r\n      <div className=\"pen-status\">\r\n        <Slider\r\n          min={5}\r\n          max={100}\r\n          defaultValue={tempLineWidth}\r\n          onChange={setTempLineWidth}\r\n          onAfterChange={(lineWidth) => updateDrawCtrl({ lineWidth })}\r\n        />\r\n        <Button\r\n          type={highlight ? \"primary\" : \"text\"}\r\n          ghost={highlight}\r\n          shape=\"circle\"\r\n          icon={<IconFont type=\"icon-Highlight\" />}\r\n          onClick={() => updateDrawCtrl({ highlight: !highlight })}\r\n        />\r\n      </div>\r\n      <ColorSelect updateDrawCtrl={updateDrawCtrl} color={color} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ColorSelect: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n  color: string;\r\n}> = ({ updateDrawCtrl, color }) => {\r\n  return (\r\n    <div className=\"color-select\">\r\n      {colors.map((c) => (\r\n        <label key={c}>\r\n          <input\r\n            checked={color === c}\r\n            type=\"radio\"\r\n            name=\"color\"\r\n            onChange={() => updateDrawCtrl({ color: c })}\r\n          />\r\n          <div\r\n            className=\"circle\"\r\n            style={{ \"--circle-color\": c } as CSSProperties}\r\n          ></div>\r\n        </label>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EraserButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const {\r\n    drawCtrl: { eraserWidth, mode },\r\n  } = useContext(ReaderStateCtx);\r\n  const [tempEraserWidth, setTempEraserWidth] = useState(eraserWidth);\r\n\r\n  const content = (\r\n    <div className=\"pen-panel\">\r\n      <Slider\r\n        min={5}\r\n        max={100}\r\n        defaultValue={tempEraserWidth}\r\n        onChange={setTempEraserWidth}\r\n        onAfterChange={(eraserWidth) => updateDrawCtrl({ eraserWidth })}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const btnProps: ButtonProps = {\r\n    shape: \"circle\",\r\n    icon: <IconFont type=\"icon-eraser\" />,\r\n  };\r\n\r\n  return mode === \"erase\" ? (\r\n    <Popover\r\n      content={content}\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button type=\"default\" {...btnProps} />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      onClick={() => updateDrawCtrl({ mode: \"erase\" })}\r\n      {...btnProps}\r\n    />\r\n  );\r\n};\r\n\r\nconst UserCard: FC<{ userID: string }> = ({ userID }) => {\r\n  const [renaming, setRenaming] = useState(false);\r\n  const { ignores, setIgnores, resetIO, userRec } = useContext(TeamCtx);\r\n  const userInfo = userRec[userID];\r\n  useEffect(() => setRenaming(false), [userInfo]);\r\n  if (!userInfo) return null;\r\n\r\n  const { userName, online } = userInfo;\r\n  const self = userID === getUserID();\r\n  const ignored = ignores.has(userID) && !self;\r\n\r\n  const switchIgnore = () => {\r\n    setIgnores((prev) => {\r\n      if (prev.has(userID)) return prev.delete(userID);\r\n      return prev.add(userID);\r\n    });\r\n  };\r\n\r\n  const submitRename = (value: string) => {\r\n    const name = value.trim();\r\n    if (!name || name === userName) return setRenaming(false);\r\n    saveUserName(name);\r\n    resetIO();\r\n  };\r\n\r\n  return (\r\n    <div className={classNames(\"user-item\", { online })}>\r\n      <UserAvatar userID={userID} size=\"small\" className=\"room-avatar\" />\r\n      {renaming || <span className=\"user-name\">{userName}</span>}\r\n      {renaming && (\r\n        <Search\r\n          autoFocus\r\n          className=\"rename-input\"\r\n          defaultValue={userName}\r\n          onSearch={submitRename}\r\n          enterButton={<Button icon={<CheckOutlined />} />}\r\n        />\r\n      )}\r\n      {self ? (\r\n        renaming || (\r\n          <Button\r\n            type=\"text\"\r\n            icon={<FormOutlined />}\r\n            onClick={() => setRenaming(true)}\r\n          />\r\n        )\r\n      ) : (\r\n        <Button\r\n          type=\"text\"\r\n          icon={ignored ? <EyeInvisibleOutlined /> : <EyeOutlined />}\r\n          onClick={switchIgnore}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const UserAvatar: FC<{\r\n  userID: string;\r\n  size?: AvatarSize;\r\n  onClick?: () => void;\r\n  chosen?: boolean;\r\n  className?: string;\r\n}> = ({\r\n  userID,\r\n  size = \"default\",\r\n  onClick = () => {},\r\n  chosen = false,\r\n  className,\r\n}) => {\r\n  const { userRec } = useContext(TeamCtx);\r\n  const color = useMemo(() => getHashedColor(userID), [userID]);\r\n  const userInfo = userRec[userID];\r\n  if (!userInfo) return null;\r\n  const { userName } = userInfo;\r\n\r\n  return (\r\n    <Avatar\r\n      className={classNames(className, { chosen })}\r\n      size={size}\r\n      style={{ backgroundColor: color }}\r\n    >\r\n      <div\r\n        className=\"avatar-wrapper\"\r\n        onClickCapture={(e) => {\r\n          e.stopPropagation();\r\n          onClick();\r\n        }}\r\n      >\r\n        {userName?.slice(0, 3)}\r\n      </div>\r\n    </Avatar>\r\n  );\r\n};\r\n\r\nconst RoomInfo: FC = () => {\r\n  const { code, userRec, connected, loadInfo, resetIO } = useContext(TeamCtx);\r\n  const link = window.location.href;\r\n  const share = async () => {\r\n    const selfName = userRec[getUserID()]?.userName;\r\n    try {\r\n      await copy(`${selfName} shared a note with you at 𝐌𝐮𝐥𝐭𝐢𝐛𝐢𝐥𝐢𝐭𝐲.\\n${link}`);\r\n      message.destroy(\"copy\");\r\n      message.success({\r\n        content: \"Share link copied!\",\r\n        icon: <CopyOutlined />,\r\n        key: \"copy\",\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const userList = useMemo(() => {\r\n    const values = Object.values(userRec);\r\n    const selfID = getUserID();\r\n    const selfInfo = userRec[selfID];\r\n    const list = selfInfo ? [selfInfo] : [];\r\n    list.push(\r\n      ...values.filter(({ online, userID }) => online && userID !== selfID),\r\n      ...values.filter(({ online, userID }) => !online && userID !== selfID)\r\n    );\r\n    return list;\r\n  }, [userRec]);\r\n  const onlineNum = userList.filter((u) => u.online).length;\r\n\r\n  const content = (\r\n    <div className=\"team-popover\">\r\n      {connected || (\r\n        <Alert\r\n          className=\"disconn-alert\"\r\n          message=\"Network failed.\"\r\n          icon={<DisconnectOutlined />}\r\n          type=\"error\"\r\n          showIcon\r\n          banner\r\n        />\r\n      )}\r\n      <DigitDisplay value={code} />\r\n      <Button\r\n        icon={<ShareAltOutlined />}\r\n        className=\"share-btn\"\r\n        onClick={share}\r\n        block\r\n      >\r\n        Share\r\n      </Button>\r\n      <Divider />\r\n      <div className=\"user-list\">\r\n        {userList.map((u) => (\r\n          <UserCard key={u.userID} userID={u.userID} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const title = (\r\n    <div className=\"team-title\">\r\n      <span>Team info</span>\r\n      <Button\r\n        shape=\"circle\"\r\n        type=\"text\"\r\n        size=\"small\"\r\n        icon={<ReloadOutlined />}\r\n        onClick={() => {\r\n          loadInfo();\r\n          resetIO();\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Popover\r\n      content={content}\r\n      trigger=\"click\"\r\n      placement=\"bottomRight\"\r\n      title={title}\r\n      defaultVisible\r\n      getPopupContainer={(e) => e}\r\n    >\r\n      <Button\r\n        type=\"text\"\r\n        icon={\r\n          <Badge\r\n            status={connected ? \"success\" : \"error\"}\r\n            count={connected ? onlineNum : \"!\"}\r\n            size=\"small\"\r\n          >\r\n            <TeamOutlined />\r\n          </Badge>\r\n        }\r\n      />\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst JoinRoom: FC<{ instantSave: () => Promise<void> | undefined }> = ({\r\n  instantSave,\r\n}) => {\r\n  const { noteID } = useContext(ReaderStateCtx);\r\n  const nav = useNavigate();\r\n  const createRoom = async () => {\r\n    await instantSave();\r\n    const resCode = await putNote(noteID);\r\n    if (!resCode) {\r\n      message.error(\"Can't create room.\");\r\n      return;\r\n    }\r\n    await editNoteData(noteID, { team: true });\r\n    nav(\"/team/\" + noteID);\r\n  };\r\n  return (\r\n    <Popconfirm\r\n      placement=\"bottomRight\"\r\n      title=\"Enable team editing?\"\r\n      onConfirm={createRoom}\r\n      okText=\"Yes\"\r\n      cancelText=\"No\"\r\n    >\r\n      <Button type=\"text\" icon={<UsergroupAddOutlined />} />\r\n    </Popconfirm>\r\n  );\r\n};\r\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  TouchEvent,\r\n} from \"react\";\r\nimport { DrawState, Mutation, Stroke } from \"../../lib/draw/DrawState\";\r\nimport { defaultDrawCtrl, DrawCtrl } from \"../../lib/draw/drawCtrl\";\r\nimport { Setter, usePreventGesture } from \"../../lib/hooks\";\r\nimport { releaseCanvas } from \"../../lib/draw/canvas\";\r\nimport { isStylus } from \"../../lib/touch/touch\";\r\nimport { usePinch } from \"@use-gesture/react\";\r\nimport { v4 as getUid } from \"uuid\";\r\nimport { Set } from \"immutable\";\r\nimport paper from \"paper\";\r\nimport \"./draw.sass\";\r\n\r\nexport type SelectToolType = FC<{\r\n  onDelete: () => void;\r\n  onRotate: (angle: number, smooth?: boolean) => void;\r\n  onDuplicate: () => void;\r\n  mutateStyle: (updated: Partial<DrawCtrl>) => void;\r\n  rasterize: () => string;\r\n  currDrawCtrl: DrawCtrl;\r\n}>;\r\n\r\nexport type TextToolType = FC<{\r\n  onSubmit: (text: string, fontSize: number) => void;\r\n  onCancel: () => void;\r\n}>;\r\n\r\nconst PREVIEW_WIDTH = 200;\r\nconst {\r\n  Point,\r\n  Path,\r\n  Group,\r\n  Shape: { Rectangle },\r\n  Color,\r\n  Size,\r\n  Raster,\r\n} = paper;\r\n\r\nconst Draw: FC<{\r\n  drawState: DrawState;\r\n  otherStates?: DrawState[];\r\n  onChange?: Setter<DrawState>;\r\n  drawCtrl?: DrawCtrl;\r\n  readonly?: boolean;\r\n  preview?: boolean;\r\n  imgSrc?: string;\r\n  SelectTool?: SelectToolType;\r\n  TextTool?: TextToolType;\r\n}> = ({\r\n  drawState,\r\n  onChange = () => {},\r\n  otherStates,\r\n  drawCtrl = defaultDrawCtrl,\r\n  preview = false,\r\n  readonly = preview,\r\n  imgSrc,\r\n  SelectTool,\r\n  TextTool,\r\n}) => {\r\n  const { width, height } = drawState;\r\n  const { mode, color, finger, lineWidth, highlight, eraserWidth } = drawCtrl;\r\n\r\n  const canvasEl = useRef<HTMLCanvasElement>(null);\r\n  const scope = useRef(new paper.PaperScope());\r\n  const group = useRef<paper.Item[]>([]);\r\n  const path = useRef<paper.Path>();\r\n  const [erased, setErased] = useState(Set<string>());\r\n  const [currDrawCtrl, setCurrDrawCtrl] = useState(defaultDrawCtrl);\r\n\r\n  const [rect, setRect] = useState<paper.Shape.Rectangle>();\r\n  useEffect(() => {\r\n    if (!rect) return;\r\n    rect.onFrame = () => (rect.dashOffset += 3);\r\n    return () => void rect.remove();\r\n  }, [rect]);\r\n\r\n  const [selectedGroup, setSelectedGroup] = useState<paper.Group>();\r\n  useEffect(() => () => void selectedGroup?.remove(), [selectedGroup]);\r\n\r\n  const [selected, setSelected] = useState(false);\r\n  const paperMode = mode === \"select\" && selected ? \"selected\" : mode;\r\n  useEffect(() => {\r\n    if (mode !== \"select\") {\r\n      setSelected(false);\r\n      setRect(undefined);\r\n    }\r\n    if (mode !== \"text\") {\r\n      setPointText(undefined);\r\n    }\r\n  }, [mode]);\r\n  useEffect(() => {\r\n    if (selected) {\r\n      if (!rect?.strokeColor) return;\r\n      rect.strokeColor.alpha /= 2;\r\n    } else {\r\n      updateMutation();\r\n      setSelectedGroup(undefined);\r\n      setCurrDrawCtrl(defaultDrawCtrl);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selected]);\r\n\r\n  const ratio = useRef(1);\r\n  const updateRatio = () => {\r\n    const clientWidth = canvasEl.current?.clientWidth;\r\n    if (clientWidth) ratio.current = width / clientWidth;\r\n  };\r\n\r\n  const transformPoint = (projP: paper.Point) => {\r\n    scope.current.activate();\r\n    const { center, zoom } = scope.current.view;\r\n    const viewP = scope.current.view.projectToView(projP);\r\n    const absoluteP = viewP.multiply(ratio.current);\r\n    const offsetP = new Point(width, height)\r\n      .divide(2)\r\n      .subtract(center.multiply(zoom));\r\n    return absoluteP.subtract(offsetP).divide(zoom);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const setupPaper = () => {\r\n      if (!canvasEl.current) return;\r\n      scope.current.setup(canvasEl.current);\r\n\r\n      const r = preview ? PREVIEW_WIDTH / width : 1;\r\n      scope.current.view.viewSize = new Size(width, height).multiply(r);\r\n      scope.current.view.scale(r, new Point(0, 0));\r\n      paintBackground(scope.current, width, height);\r\n    };\r\n\r\n    setupPaper();\r\n    const cvs = canvasEl.current;\r\n    return () => void (cvs && releaseCanvas(cvs));\r\n  }, [height, width, preview]);\r\n\r\n  const setNewRect = (e: paper.MouseEvent) => {\r\n    updateRatio();\r\n    scope.current.activate();\r\n    const point = transformPoint(e.point);\r\n    const rectangle = startSelectRect(point);\r\n    setRect(rectangle);\r\n  };\r\n\r\n  const handleDown = {\r\n    draw() {\r\n      updateRatio();\r\n      scope.current.activate();\r\n      path.current = startStroke(color, lineWidth, highlight);\r\n    },\r\n    erase() {\r\n      updateRatio();\r\n      scope.current.activate();\r\n      path.current = startStroke(\"#0003\", eraserWidth);\r\n    },\r\n    select(e: paper.MouseEvent) {\r\n      setNewRect(e);\r\n    },\r\n    selected(e: paper.MouseEvent) {\r\n      const point = transformPoint(e.point);\r\n      if (rect && point.isInside(rect.strokeBounds)) return;\r\n      setNewRect(e);\r\n      setSelected(false);\r\n    },\r\n    text(e: paper.MouseEvent) {\r\n      updateRatio();\r\n      const point = transformPoint(e.point);\r\n      const t = new paper.PointText(point);\r\n      setPointText(t);\r\n    },\r\n  }[paperMode];\r\n\r\n  const handleDrag = {\r\n    draw(e: paper.MouseEvent) {\r\n      if (!path.current) return;\r\n      scope.current.activate();\r\n      const point = transformPoint(e.point);\r\n      path.current.add(point);\r\n      path.current.smooth();\r\n    },\r\n    erase(e: paper.MouseEvent) {\r\n      const eraserPath = path.current;\r\n      if (!eraserPath) return;\r\n      scope.current.activate();\r\n      const point = transformPoint(e.point);\r\n      eraserPath.add(point);\r\n      eraserPath.smooth();\r\n\r\n      const newErased = group.current\r\n        .filter((p) => !erased.has(p.name))\r\n        .filter((p) => p instanceof paper.Path && checkErase(p, eraserPath))\r\n        .map((p) => p.name);\r\n      setErased((prev) => prev.concat(newErased));\r\n    },\r\n    select(e: paper.MouseEvent) {\r\n      if (!rect) return;\r\n      scope.current.activate();\r\n      const delta = e.delta.multiply(ratio.current);\r\n      rect.size = rect.size.add(new Size(delta.x, delta.y));\r\n      rect.translate(delta.divide(2));\r\n    },\r\n    selected(e: paper.MouseEvent) {\r\n      if (!rect || !selectedGroup) return;\r\n      scope.current.activate();\r\n      const delta = e.delta.multiply(ratio.current);\r\n      rect.translate(delta);\r\n      selectedGroup.translate(delta);\r\n    },\r\n    text() {},\r\n  }[paperMode];\r\n\r\n  const handleUp = {\r\n    draw() {\r\n      if (!path.current || path.current.segments.length === 0) return;\r\n      scope.current.activate();\r\n      path.current.simplify();\r\n      const pathData = path.current.exportJSON();\r\n      path.current.remove();\r\n      onChange((prev) => DrawState.addStroke(prev, pathData));\r\n    },\r\n    erase() {\r\n      if (!path.current) return;\r\n      scope.current.activate();\r\n      path.current.remove();\r\n      onChange((prev) => DrawState.eraseStrokes(prev, erased.toArray()));\r\n      setErased(Set());\r\n    },\r\n    select() {\r\n      if (!rect) return;\r\n      const { width, height } = rect.size.abs();\r\n      if (width < 10 || height < 10) return setRect(undefined);\r\n\r\n      scope.current.activate();\r\n      const items = group.current;\r\n      const newSG = new Group(checkSelection(rect, items));\r\n      setSelectedGroup(newSG);\r\n      const tempStyle = parseGroupStyle(newSG);\r\n      setCurrDrawCtrl((prev) => ({ ...prev, ...tempStyle }));\r\n      setSelected(true);\r\n    },\r\n    selected() {},\r\n    text() {},\r\n  }[paperMode];\r\n\r\n  const handlePaper = () => {\r\n    if (readonly) return;\r\n    scope.current.view.onMouseDown = handleDown;\r\n    scope.current.view.onMouseDrag = handleDrag;\r\n    scope.current.view.onMouseUp = handleUp;\r\n  };\r\n  useEffect(handlePaper);\r\n\r\n  useEffect(() => {\r\n    if (!imgSrc) return;\r\n    const img = new Image();\r\n    img.src = imgSrc;\r\n    let raster: paper.Raster;\r\n\r\n    img.onload = () => {\r\n      scope.current.activate();\r\n      raster = new Raster(img);\r\n      scope.current.project.layers[0].addChild(raster);\r\n      raster.position = scope.current.view.center;\r\n      let r = width / img.width;\r\n      raster.scale(r);\r\n    };\r\n\r\n    return () => void raster?.remove();\r\n  }, [imgSrc, width]);\r\n\r\n  const mergedStrokes = useMemo(\r\n    () =>\r\n      otherStates\r\n        ? DrawState.mergeStates([drawState, ...otherStates])\r\n        : drawState.getStrokeList(),\r\n    [drawState, otherStates]\r\n  );\r\n\r\n  useEffect(() => {\r\n    group.current = [];\r\n    const othersGroup: paper.Item[] = [];\r\n\r\n    mergedStrokes.forEach((stroke) =>\r\n      paintStroke(\r\n        stroke,\r\n        scope.current,\r\n        drawState.hasStroke(stroke.uid) ? group.current : othersGroup,\r\n        erased.has(stroke.uid)\r\n      )\r\n    );\r\n\r\n    return () => {\r\n      group.current.forEach((item) => item.remove());\r\n      othersGroup.forEach((item) => item.remove());\r\n    };\r\n  }, [mergedStrokes, erased, drawState]);\r\n\r\n  const updateMutation = () => {\r\n    const list = selectedGroup?.children;\r\n    if (!list?.length) return;\r\n    const mutations: Mutation[] = list.map((p) => [p.name, p.exportJSON()]);\r\n    onChange((prev) => DrawState.mutateStrokes(prev, mutations));\r\n  };\r\n\r\n  const deleteSelected = () => {\r\n    const list = selectedGroup?.children;\r\n    if (!list?.length) return;\r\n\r\n    const deleted = list.map((item) => item.name);\r\n    onChange((prev) => DrawState.eraseStrokes(prev, deleted));\r\n    setRect(undefined);\r\n    setSelectedGroup(undefined);\r\n    setSelected(false);\r\n  };\r\n\r\n  const rotateSelected = (angle: number, smooth = false) => {\r\n    if (!selectedGroup) return;\r\n    let count = smooth ? 10 : 1;\r\n    const dAngle = angle / count;\r\n    const rotate = () => {\r\n      selectedGroup.rotate(dAngle, rect?.position);\r\n      rect?.rotate(dAngle, rect.position);\r\n      if (--count > 0) requestAnimationFrame(rotate);\r\n    };\r\n    rotate();\r\n  };\r\n\r\n  const mutateStyle = (updated: Partial<DrawCtrl>) => {\r\n    if (!selectedGroup) return;\r\n    scope.current.activate();\r\n    updateGroupStyle(selectedGroup, updated, currDrawCtrl.highlight);\r\n    setCurrDrawCtrl((prev) => ({ ...prev, ...updated }));\r\n  };\r\n\r\n  const duplicateSelected = () => {\r\n    scope.current.activate();\r\n    if (!rect || !selectedGroup) return;\r\n    const newSG = selectedGroup.clone();\r\n    updateMutation();\r\n    setSelectedGroup(newSG);\r\n\r\n    const { width, height } = rect.size;\r\n    const transP = new Point(width, height).divide(10);\r\n    newSG.translate(transP);\r\n    rect.translate(transP);\r\n    newSG.children.forEach((p) => (p.name = getUid()));\r\n  };\r\n\r\n  const rasterize = () => {\r\n    if (!selectedGroup) return \"\";\r\n    const raster = selectedGroup.rasterize();\r\n    const data = raster.toDataURL();\r\n    raster.remove();\r\n    return data;\r\n  };\r\n\r\n  const [pointText, setPointText] = useState<paper.PointText>();\r\n  useEffect(() => () => void pointText?.remove(), [pointText]);\r\n\r\n  const submitText = (text: string, fontSize: number) => {\r\n    if (!pointText) return;\r\n    pointText.content = text;\r\n    pointText.fontSize = fontSize;\r\n    const pathData = pointText.exportJSON();\r\n    onChange((prev) => DrawState.addStroke(prev, pathData));\r\n    setPointText(undefined);\r\n  };\r\n  const cancelText = () => setPointText(undefined);\r\n\r\n  usePreventGesture();\r\n  usePinch(\r\n    ({ memo, offset, last, first, origin }) => {\r\n      if (!canvasEl.current) return;\r\n\r\n      let lastScale, lastOX, lastOY, osX, osY: number;\r\n      if (first || !memo) {\r\n        updateRatio();\r\n        scope.current.activate();\r\n        const { x, y } = canvasEl.current.getBoundingClientRect();\r\n        [lastScale, [lastOX, lastOY], [osX, osY]] = [\r\n          1,\r\n          [origin[0] - x, origin[1] - y],\r\n          [x, y],\r\n        ];\r\n      } else [lastScale, [lastOX, lastOY], [osX, osY]] = memo;\r\n\r\n      const { view } = scope.current;\r\n      if (Math.abs(1 - offset[0]) < 0.05) offset[0] = 1;\r\n\r\n      let scale = first ? 1 : offset[0] / lastScale;\r\n      const r = ratio.current;\r\n      const [oX, oY] = [origin[0] - osX, origin[1] - osY];\r\n      const originViewP = new Point(oX, oY).multiply(r);\r\n      const originProjP = view.viewToProject(originViewP);\r\n\r\n      let aniCount = last ? 10 : 1;\r\n      scale = Math.pow(scale, 1 / aniCount);\r\n      const scaleView = () => {\r\n        view.scale(scale, originProjP);\r\n        if (--aniCount > 0) requestAnimationFrame(scaleView);\r\n      };\r\n      scaleView();\r\n\r\n      const [dX, dY] = [oX - lastOX, oY - lastOY];\r\n      const transP = new Point(dX, dY).multiply(r / offset[0]);\r\n      view.translate(transP);\r\n\r\n      if (!last) return [offset[0], [oX, oY], [osX, osY]];\r\n      putCenterBack(view);\r\n    },\r\n    {\r\n      scaleBounds: { max: 5, min: 0.3 },\r\n      rubberband: 0.5,\r\n      target: canvasEl,\r\n    }\r\n  );\r\n\r\n  const isEventValid = (e: TouchEvent) =>\r\n    isStylus(e) || (finger && e.touches.length === 1);\r\n  const preventTouch = (e: TouchEvent) =>\r\n    isEventValid(e) || e.stopPropagation();\r\n\r\n  return (\r\n    <div className=\"draw-wrapper\">\r\n      <canvas\r\n        ref={canvasEl}\r\n        className=\"draw-canvas\"\r\n        data-paper-hidpi={false}\r\n        onTouchStartCapture={preventTouch}\r\n        onTouchMoveCapture={preventTouch}\r\n      />\r\n      {SelectTool && paperMode === \"selected\" && (\r\n        <SelectTool\r\n          onDelete={deleteSelected}\r\n          onRotate={rotateSelected}\r\n          onDuplicate={duplicateSelected}\r\n          mutateStyle={mutateStyle}\r\n          rasterize={rasterize}\r\n          currDrawCtrl={currDrawCtrl}\r\n        />\r\n      )}\r\n      {TextTool && pointText && mode === \"text\" && (\r\n        <TextTool onCancel={cancelText} onSubmit={submitText} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Draw);\r\n\r\nconst paintStroke = (\r\n  stroke: Stroke,\r\n  scope: paper.PaperScope,\r\n  group?: paper.Item[],\r\n  erased = false\r\n) => {\r\n  let { pathData, uid } = stroke;\r\n  try {\r\n    scope.activate();\r\n    const item = scope.project.activeLayer.importJSON(pathData);\r\n    item.name = uid;\r\n    if (erased) item.opacity /= 2;\r\n    group?.push(item);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getCheckPoints = (() => {\r\n  const cache = new WeakMap<paper.Segment, paper.Point[]>();\r\n  return (segment: paper.Segment, width: number) => {\r\n    const cached = cache.get(segment);\r\n    if (cached) return cached;\r\n\r\n    const { point } = segment;\r\n    const prevPoint = segment.previous?.point;\r\n    if (!prevPoint) return [];\r\n    const delta = point.subtract(prevPoint);\r\n    const times = (delta.length / width) * 2;\r\n    const checkPoints: paper.Point[] = [];\r\n    for (let i = 0; i < times; i += 1) {\r\n      checkPoints.push(point.subtract(delta.multiply(i / times)));\r\n    }\r\n    cache.set(segment, checkPoints);\r\n    return checkPoints;\r\n  };\r\n})();\r\n\r\nconst checkErase = (checkedPath: paper.Path, eraserPath: paper.Path) => {\r\n  const curveBound = eraserPath.lastSegment.curve?.strokeBounds;\r\n  if (\r\n    !(checkedPath instanceof paper.Path) ||\r\n    !curveBound?.intersects(checkedPath.strokeBounds)\r\n  ) {\r\n    return false;\r\n  }\r\n\r\n  if (eraserPath.intersects(checkedPath)) return true;\r\n\r\n  const { strokeWidth, lastSegment } = eraserPath;\r\n  const checkPoints = getCheckPoints(lastSegment, strokeWidth);\r\n  return checkPoints.some((cPoint) => {\r\n    const d = checkedPath.getNearestPoint(cPoint)?.getDistance(cPoint);\r\n    return d && d < (checkedPath.strokeWidth + strokeWidth) / 2;\r\n  });\r\n};\r\n\r\nconst paintBackground = (\r\n  scope: paper.PaperScope,\r\n  width: number,\r\n  height: number\r\n) => {\r\n  scope.activate();\r\n  const bgRect = new Rectangle(new Point(0, 0), new Point(width, height));\r\n  bgRect.fillColor = new Color(\"#fff\");\r\n  scope.project.addLayer(new paper.Layer()).activate();\r\n  return bgRect;\r\n};\r\n\r\nconst startSelectRect = (point: paper.Point) => {\r\n  const rect = new Rectangle(point, new Size(0, 0));\r\n  rect.strokeColor = new Color(\"#1890ff\");\r\n  rect.strokeWidth = 3;\r\n  rect.dashOffset = 0;\r\n  rect.dashArray = [30, 20];\r\n  return rect;\r\n};\r\n\r\nconst startStroke = (color: string, lineWidth: number, highlight = false) => {\r\n  const path = new Path();\r\n  const strokeColor = new Color(color);\r\n  if (highlight) {\r\n    strokeColor.alpha /= 2;\r\n    path.blendMode = \"multiply\";\r\n  }\r\n  path.strokeColor = strokeColor;\r\n  path.strokeWidth = lineWidth;\r\n  path.strokeJoin = \"round\";\r\n  path.strokeCap = \"round\";\r\n  return path;\r\n};\r\n\r\nconst getCenterTranslate = (view: paper.View) => {\r\n  const { center, zoom } = view;\r\n  const { height, width } = view.viewSize;\r\n  const { x, y } = center;\r\n  if (zoom <= 1) return [width / 2 - x, height / 2 - y];\r\n\r\n  const dX = (width * (zoom - 1)) / zoom / 2;\r\n  const dY = (height * (zoom - 1)) / zoom / 2;\r\n  const [minX, maxX, minY, maxY] = [\r\n    width / 2 - dX,\r\n    width / 2 + dX,\r\n    height / 2 - dY,\r\n    height / 2 + dY,\r\n  ];\r\n\r\n  const deltaX = x < minX ? minX - x : x > maxX ? maxX - x : 0;\r\n  const deltaY = y < minY ? minY - y : y > maxY ? maxY - y : 0;\r\n  return [deltaX, deltaY];\r\n};\r\n\r\nconst putCenterBack = (view: paper.View) => {\r\n  const [deltaX, deltaY] = getCenterTranslate(view);\r\n  let count = 10;\r\n  const dP = new Point(deltaX, deltaY).divide(-count);\r\n  const move = () => {\r\n    view.translate(dP);\r\n    if (--count > 0) requestAnimationFrame(move);\r\n  };\r\n  move();\r\n};\r\n\r\nconst parseGroupStyle = (group: paper.Group) => {\r\n  const tempStyle: Partial<DrawCtrl> = {};\r\n  if (group.strokeColor) tempStyle.color = group.strokeColor.toCSS(true);\r\n  if (group.strokeWidth) tempStyle.lineWidth = group.strokeWidth;\r\n  if (group.children.every((p) => p.strokeColor?.alpha === 0.5))\r\n    tempStyle.highlight = true;\r\n  return tempStyle;\r\n};\r\n\r\nconst checkSelection = (rect: paper.Shape.Rectangle, items: paper.Item[]) => {\r\n  const bounds = rect.strokeBounds;\r\n  return items.filter((item) =>\r\n    item instanceof paper.Path\r\n      ? item.isInside(bounds) || item.intersects(rect)\r\n      : item.bounds.intersects(rect.bounds)\r\n  );\r\n};\r\n\r\nconst updateGroupStyle = (\r\n  group: paper.Group,\r\n  updated: Partial<DrawCtrl>,\r\n  prevHighLighted: boolean\r\n) => {\r\n  const { lineWidth, color, highlight } = updated;\r\n  if (color) group.strokeColor = new Color(color);\r\n  if (lineWidth) group.strokeWidth = lineWidth;\r\n  if (highlight === true || prevHighLighted === true) {\r\n    group.children.forEach((p) => {\r\n      const { strokeColor } = p;\r\n      if (!strokeColor) return;\r\n      if (strokeColor.alpha === 1) strokeColor.alpha /= 2;\r\n      p.blendMode = \"multiply\";\r\n    });\r\n  }\r\n  if (highlight === false) {\r\n    group.children.forEach((p) => {\r\n      const { strokeColor } = p;\r\n      if (!strokeColor) return;\r\n      strokeColor.alpha = 1;\r\n      p.blendMode = \"normal\";\r\n    });\r\n  }\r\n};\r\n","import { Dispatch, SetStateAction, useEffect, useMemo, useRef } from \"react\";\r\n\r\nexport function useObjectUrl(obj: Blob | MediaSource | undefined) {\r\n  const url = useMemo(\r\n    () => (obj ? URL.createObjectURL(obj) : undefined),\r\n    [obj]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const prevUrl = url || \"\";\r\n    return () => URL.revokeObjectURL(prevUrl);\r\n  }, [url]);\r\n\r\n  return url;\r\n}\r\n\r\nexport function useMounted() {\r\n  const _mounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    _mounted.current = true;\r\n    return () => {\r\n      _mounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  return _mounted;\r\n}\r\n\r\nexport function usePreventGesture() {\r\n  useEffect(() => {\r\n    const handler = (e: Event) => e.preventDefault();\r\n    document.addEventListener(\"gesturestart\", handler);\r\n    document.addEventListener(\"gesturechange\", handler);\r\n    document.addEventListener(\"gestureend\", handler);\r\n    return () => {\r\n      document.removeEventListener(\"gesturestart\", handler);\r\n      document.removeEventListener(\"gesturechange\", handler);\r\n      document.removeEventListener(\"gestureend\", handler);\r\n    };\r\n  }, []);\r\n}\r\n\r\nexport type Setter<T> = Dispatch<SetStateAction<T>>;\r\n","import { TouchEvent } from \"react\";\r\n\r\nexport type iOSTouch = Touch & {\r\n  force?: number;\r\n  touchType?: \"stylus\" | \"direct\";\r\n};\r\n\r\nexport function isStylus(e: TouchEvent) {\r\n  const touch = e.touches[0] as iOSTouch;\r\n  return touch?.touchType === \"stylus\";\r\n}\r\n","import React, { useRef, useState } from \"react\";\nimport {\n  CopyOutlined,\n  DeleteOutlined,\n  LoadingOutlined,\n  BgColorsOutlined,\n  RotateRightOutlined,\n} from \"@ant-design/icons\";\nimport { Button, ButtonProps, InputNumber, Modal, Popover } from \"antd\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { PenPanel } from \"../reader/DrawTools\";\nimport { useDrag } from \"@use-gesture/react\";\nimport { createPortal } from \"react-dom\";\nimport { SelectToolType, TextToolType } from \"./Draw\";\nimport IconFont from \"../ui/IconFont\";\nimport classNames from \"classnames\";\nimport copy from \"clipboard-copy\";\nimport \"./tools.sass\";\nimport \"animate.css\";\n\nexport const SelectTool: SelectToolType = ({\n  onDelete,\n  onRotate,\n  onDuplicate,\n  mutateStyle,\n  rasterize,\n  currDrawCtrl,\n}) => {\n  const btnProps: ButtonProps = {\n    type: \"text\",\n    shape: \"round\",\n    size: \"small\",\n  };\n\n  const rotateEl = useRef<HTMLDivElement>(null);\n  const [dragged, setDragged] = useState(false);\n  const [transX, setTransX] = useState(0);\n  const gearStyle = { transform: `translateX(${transX}px)` };\n\n  const [rotateCount, setRotateCount] = useState(0);\n  const shakeShow = rotateCount % 4 === 1;\n  const btnClass = shakeShow\n    ? \"animate__animated animate__headShake\"\n    : undefined;\n\n  useDrag(\n    ({ first, last, offset, delta }) => {\n      setTransX(offset[0]);\n      onRotate(delta[0] / 2, last);\n      first && setDragged(true);\n      last && setDragged(false);\n    },\n    {\n      target: rotateEl,\n      filterTaps: true,\n      rubberband: 0.05,\n      bounds: { left: -90, right: 90 },\n    }\n  );\n\n  const [recoginzing, setRecoginzing] = useState(false);\n  const [modalShow, setModalShow] = useState(false);\n  const [text, setText] = useState(\"\");\n  const recognizeText = async () => {\n    setRecoginzing(true);\n    const data = rasterize();\n    const { createWorker } = await import(\"tesseract.js\");\n    try {\n      const worker = createWorker({ logger: console.log });\n      await worker.load();\n      await worker.loadLanguage(\"eng+chi_sim\");\n      await worker.initialize(\"eng+chi_sim\");\n      const result = await worker.recognize(data);\n      await worker.terminate();\n      setText(result.data.text);\n      setModalShow(true);\n    } catch (e) {\n      console.error(e);\n    } finally {\n      setRecoginzing(false);\n    }\n  };\n\n  return createPortal(\n    <div className=\"select-tool\">\n      <Popover\n        trigger=\"click\"\n        placement=\"bottom\"\n        getPopupContainer={(e) => e}\n        destroyTooltipOnHide\n        content={\n          <PenPanel updateDrawCtrl={mutateStyle} drawCtrl={currDrawCtrl} />\n        }\n      >\n        <Button icon={<BgColorsOutlined />} {...btnProps} />\n      </Popover>\n      <div className={classNames(\"rotate-wrapper\", { dragged })} ref={rotateEl}>\n        <Button\n          className={btnClass}\n          icon={<RotateRightOutlined />}\n          onClick={() => {\n            setRotateCount((prev) => prev + 1);\n            onRotate(90, true);\n          }}\n          {...btnProps}\n        />\n        <div className=\"gear\" style={gearStyle} />\n      </div>\n      <Button icon={<CopyOutlined />} onClick={onDuplicate} {...btnProps} />\n      <Button\n        icon={recoginzing ? <LoadingOutlined /> : <IconFont type=\"icon-OCR\" />}\n        onClick={recognizeText}\n        {...btnProps}\n      />\n      <Button\n        danger\n        icon={<DeleteOutlined />}\n        onClick={onDelete}\n        {...btnProps}\n      />\n      <Modal\n        visible={modalShow}\n        title=\"OCR Result\"\n        onCancel={() => setModalShow(false)}\n        onOk={() => {\n          copy(text);\n          setModalShow(false);\n          setText(\"\");\n        }}\n        okText=\"Copy\"\n        destroyOnClose\n      >\n        <TextArea value={text} onChange={(e) => setText(e.target.value)} />\n      </Modal>\n    </div>,\n    document.body\n  );\n};\n\nexport const TextTool: TextToolType = ({ onSubmit, onCancel }) => {\n  const [text, setText] = useState(\"\");\n  const [fontSize, setFontSize] = useState(50);\n  return (\n    <Modal\n      visible\n      title=\"Insert text\"\n      onCancel={onCancel}\n      onOk={() => {\n        if (!text.trim()) return onCancel();\n        onSubmit(text.trim(), fontSize);\n      }}\n      bodyStyle={{ paddingTop: 0 }}\n    >\n      <div className=\"insert-option\">\n        <span>Font size: </span>\n        <InputNumber size=\"small\" value={fontSize} onChange={setFontSize} />\n      </div>\n      <TextArea\n        autoFocus\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n      />\n    </Modal>\n  );\n};\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useCallback,\r\n  createContext,\r\n} from \"react\";\r\nimport {\r\n  DrawCtrl,\r\n  getDrawCtrl,\r\n  defaultDrawCtrl,\r\n} from \"../../lib/draw/drawCtrl\";\r\nimport {\r\n  createPage,\r\n  defaultNotePage,\r\n  NoteInfo,\r\n  NotePage,\r\n} from \"../../lib/note/note\";\r\nimport { NewPageInfo, ReorderInfo, SyncInfo } from \"../../lib/network/io\";\r\nimport { useInViewport, useMemoizedFn, useSafeState } from \"ahooks\";\r\nimport { SetOperation, StateSet } from \"../../lib/draw/StateSet\";\r\nimport { loadNote, editNoteData } from \"../../lib/note/archive\";\r\nimport { AddPageButton, showPageDelMsg } from \"./ReaderTools\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { DrawState } from \"../../lib/draw/DrawState\";\r\nimport { updatePages } from \"../../lib/network/http\";\r\nimport { TeamState } from \"../../lib/draw/TeamState\";\r\nimport { insertAfter } from \"../../lib/array\";\r\nimport { debounce, last, once } from \"lodash\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { Map, Set } from \"immutable\";\r\nimport DrawTools from \"./DrawTools\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport Draw from \"../draw/Draw\";\r\nimport { message } from \"antd\";\r\nimport \"./reader.sass\";\r\nimport { SelectTool, TextTool } from \"../draw/Tools\";\r\n\r\nexport const ReaderStateCtx = createContext({\r\n  noteID: \"\",\r\n  noteInfo: undefined as NoteInfo | undefined,\r\n  stateSet: undefined as StateSet | undefined,\r\n  teamState: undefined as TeamState | undefined,\r\n  pageRec: undefined as Map<string, NotePage> | undefined,\r\n  pageOrder: undefined as string[] | undefined,\r\n  saved: true,\r\n  teamOn: false,\r\n  inviewPages: Set<string>(),\r\n  drawCtrl: defaultDrawCtrl,\r\n});\r\n\r\nexport const ReaderMethodCtx = createContext({\r\n  scrollPage: (pageID: string) => {},\r\n  switchPageMarked: (pageID: string) => {},\r\n  updateStateSet: (cb: (prevSS: StateSet) => StateSet) => {},\r\n  addPage: (prevPageID: string, copy?: boolean) => {},\r\n  addFinalPage: () => {},\r\n  deletePage: (pageID: string) => {},\r\n  saveReorder: async (order: string[], push: boolean) => {},\r\n  setInviewPages: (() => {}) as Setter<Set<string>>,\r\n  setDrawCtrl: (() => {}) as Setter<DrawCtrl>,\r\n});\r\n\r\nexport default function Reader({ teamOn }: { teamOn: boolean }) {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const nav = useNavigate();\r\n\r\n  const [pageRec, setPageRec] = useState<Map<string, NotePage>>();\r\n  const [noteInfo, setNoteInfo] = useState<NoteInfo>();\r\n  const [stateSet, setStateSet] = useState<StateSet>();\r\n  const [drawCtrl, setDrawCtrl] = useState(defaultDrawCtrl);\r\n  const [inviewPages, setInviewPages] = useState(Set<string>());\r\n  const [pageOrder, setPageOrder] = useState<string[]>();\r\n  const [saved, setSaved] = useSafeState(true);\r\n\r\n  const refRec = useRef<Record<string, HTMLElement>>({});\r\n\r\n  const { io, teamState, addTeamStatePage } = useContext(TeamCtx);\r\n\r\n  useEffect(() => {\r\n    const loadNotePages = async () => {\r\n      const storedNote = await loadNote(noteID);\r\n      if (!storedNote) {\r\n        message.error(\"Note not found\");\r\n        return nav(\"/\");\r\n      }\r\n      const { pageRec, pdf, pageOrder, ...noteInfo } = storedNote;\r\n      setPageRec(Map(pageRec));\r\n      setPageOrder(pageOrder);\r\n      setNoteInfo(noteInfo);\r\n      setStateSet(StateSet.createFromPages(pageRec));\r\n      setDrawCtrl(await getDrawCtrl());\r\n      if (teamOn) updatePages(noteID);\r\n    };\r\n    loadNotePages();\r\n  }, [nav, noteID, teamOn]);\r\n\r\n  useEffect(() => {\r\n    if (!noteInfo) return;\r\n    document.title = noteInfo.name + \" - Multibility\";\r\n  }, [noteInfo]);\r\n\r\n  const saver = useMemoizedFn(async () => {\r\n    const pr = pageRec?.toObject();\r\n    const canvas = document.querySelector(\"canvas\");\r\n    const data = canvas?.toDataURL();\r\n    await editNoteData(noteID, { pageRec: pr, thumbnail: data });\r\n    setSaved(true);\r\n  });\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const debouncedSave = useCallback(debounce(saver, 2000), [saver]);\r\n  const instantSave = debouncedSave.flush;\r\n\r\n  const savePageRec = (pageID: string, cb: (prev: NotePage) => NotePage) => {\r\n    setPageRec((prev) => prev?.update(pageID, defaultNotePage, cb));\r\n    setSaved(false);\r\n    debouncedSave();\r\n  };\r\n\r\n  const saveReorder = async (pageOrder: string[], push = false) => {\r\n    setPageOrder(pageOrder);\r\n    await editNoteData(noteID, { pageOrder });\r\n    await instantSave();\r\n    push && pushReorder(pageOrder);\r\n  };\r\n\r\n  const pushReorder = (pageOrder: string[]) => {\r\n    io?.emit(\"reorder\", { pageOrder });\r\n  };\r\n\r\n  const handleReorder = useMemoizedFn(\r\n    ({ deleted, pageOrder, prevOrder }: ReorderInfo) => {\r\n      saveReorder(pageOrder);\r\n      if (!deleted) return;\r\n      showPageDelMsg(() => saveReorder(prevOrder, true));\r\n    }\r\n  );\r\n\r\n  const handleNewPage = useMemoizedFn(\r\n    ({ pageOrder, pageID, newPage }: NewPageInfo) => {\r\n      saveReorder(pageOrder);\r\n      savePageRec(pageID, () => newPage);\r\n      setStateSet((prev) => prev?.addState(pageID, newPage));\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    io?.on(\"reorder\", handleReorder);\r\n    io?.on(\"newPage\", handleNewPage);\r\n    return () => void io?.removeAllListeners();\r\n  }, [io, handleReorder, handleNewPage]);\r\n\r\n  const pushOperation = (operation: SetOperation) => {\r\n    const handleSync = ({ stroke, pageID }: SyncInfo) =>\r\n      setStateSet((prevSS) =>\r\n        prevSS?.updateState(pageID, (prevDS) =>\r\n          DrawState.updateStroke(prevDS, stroke)\r\n        )\r\n      );\r\n\r\n    io?.emit(\"push\", { operation }, handleSync);\r\n  };\r\n\r\n  const pushNewPage = (\r\n    pageOrder: string[],\r\n    pageID: string,\r\n    newPage: NotePage\r\n  ) => {\r\n    const { image, marked, ...newTeamPage } = newPage;\r\n    io?.emit(\"newPage\", { pageOrder, pageID, newPage: newTeamPage });\r\n    addTeamStatePage(pageID, newPage);\r\n  };\r\n\r\n  const updatePageRec = (pageID: string, ds: DrawState) => {\r\n    const state = DrawState.flaten(ds);\r\n    savePageRec(pageID, (prev) => ({ ...prev, state }));\r\n  };\r\n\r\n  const updateStateSet = (cb: (prevSS: StateSet) => StateSet) => {\r\n    if (!stateSet) return;\r\n    const newSS = cb(stateSet);\r\n    setStateSet(newSS);\r\n    const lastDS = newSS.getLastDS();\r\n    const lastOp = newSS.lastOp;\r\n    if (!lastDS || !lastOp) return;\r\n    updatePageRec(...lastDS);\r\n    pushOperation(lastOp);\r\n  };\r\n\r\n  const switchPageMarked = (pageID: string) => {\r\n    savePageRec(pageID, (prev) => ({ ...prev, marked: !prev.marked }));\r\n  };\r\n\r\n  const scrollPage = (pageID: string) => {\r\n    refRec.current[pageID]?.scrollIntoView();\r\n  };\r\n\r\n  const addPage = (prevPageID: string, copy = false) => {\r\n    if (!pageOrder) return;\r\n    const prevPage = copy ? pageRec?.get(prevPageID) : undefined;\r\n    const [pageID, newPage] = createPage(prevPage);\r\n    const newOrder = insertAfter(pageOrder, prevPageID, pageID);\r\n    pushNewPage(newOrder, pageID, newPage);\r\n    saveReorder(newOrder);\r\n    savePageRec(pageID, () => newPage);\r\n    setStateSet((prev) => prev?.addState(pageID, newPage));\r\n  };\r\n\r\n  const addFinalPage = () => {\r\n    const lastPageID = last(pageOrder);\r\n    lastPageID && addPage(lastPageID);\r\n  };\r\n\r\n  const deletePage = (pageID: string) => {\r\n    const newOrder = pageOrder?.filter((id) => id !== pageID);\r\n    newOrder?.length && saveReorder(newOrder, true);\r\n  };\r\n\r\n  const renderResult = (\r\n    <div className=\"reader container\">\r\n      <DrawTools\r\n        handleUndo={() => updateStateSet((prev) => prev.undo())}\r\n        handleRedo={() => updateStateSet((prev) => prev.redo())}\r\n        instantSave={instantSave}\r\n      />\r\n      <main>\r\n        {pageOrder?.map((uid) => (\r\n          <section\r\n            key={uid}\r\n            className=\"note-page\"\r\n            ref={(e) => e && (refRec.current[uid] = e)}\r\n          >\r\n            <PageContainer uid={uid} />\r\n          </section>\r\n        ))}\r\n        <AddPageButton />\r\n      </main>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ReaderStateCtx.Provider\r\n      value={{\r\n        saved,\r\n        teamOn,\r\n        noteID,\r\n        pageRec,\r\n        drawCtrl,\r\n        noteInfo,\r\n        stateSet,\r\n        teamState,\r\n        pageOrder,\r\n        inviewPages,\r\n      }}\r\n    >\r\n      <ReaderMethodCtx.Provider\r\n        value={{\r\n          addPage,\r\n          scrollPage,\r\n          deletePage,\r\n          setDrawCtrl,\r\n          saveReorder,\r\n          addFinalPage,\r\n          updateStateSet,\r\n          setInviewPages,\r\n          switchPageMarked,\r\n        }}\r\n      >\r\n        {renderResult}\r\n      </ReaderMethodCtx.Provider>\r\n    </ReaderStateCtx.Provider>\r\n  );\r\n}\r\n\r\nconst PageContainer: FC<{ uid: string }> = ({ uid }) => {\r\n  const { pageRec, stateSet, teamState } = useContext(ReaderStateCtx);\r\n  const { updateStateSet } = useContext(ReaderMethodCtx);\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n  const updateState = (ds: DrawState) => {\r\n    updateStateSet((prev) => prev.setState(uid, ds));\r\n  };\r\n\r\n  if (!page || !drawState) return null;\r\n  return (\r\n    <PageWrapper\r\n      drawState={drawState}\r\n      teamStateMap={teamStateMap}\r\n      updateState={updateState}\r\n      pdfIndex={page.pdfIndex}\r\n      uid={uid}\r\n    />\r\n  );\r\n};\r\n\r\nexport const PageWrapper = ({\r\n  thumbnail,\r\n  drawState,\r\n  teamStateMap,\r\n  updateState,\r\n  pdfIndex,\r\n  preview = false,\r\n  uid,\r\n}: {\r\n  uid: string;\r\n  drawState: DrawState;\r\n  teamStateMap?: Map<string, DrawState>;\r\n  thumbnail?: string;\r\n  pdfIndex?: number;\r\n  updateState?: (ds: DrawState) => void;\r\n  preview?: boolean;\r\n}) => {\r\n  const { setInviewPages } = useContext(ReaderMethodCtx);\r\n  const { noteID } = useContext(ReaderStateCtx);\r\n  const [fullImg, setFullImg] = useState<string>();\r\n  const wrapperEl = useRef<HTMLDivElement>(null);\r\n  const [visible] = useInViewport(wrapperEl);\r\n\r\n  const { height, width } = drawState;\r\n  const ratio = height / width;\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const loadImage = useCallback(\r\n    once(async () => {\r\n      if (!pdfIndex) return;\r\n      const { getOnePageImage } = await import(\"../../lib/note/pdfImage\");\r\n      setFullImg(await getOnePageImage(noteID, pdfIndex));\r\n    }),\r\n    [pdfIndex, noteID]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (preview) return;\r\n    if (visible) {\r\n      loadImage();\r\n      setInviewPages((prev) => prev.add(uid));\r\n    } else {\r\n      setInviewPages((prev) => prev.delete(uid));\r\n    }\r\n  }, [visible, preview, uid, loadImage, setInviewPages]);\r\n\r\n  const { ignores } = useContext(TeamCtx);\r\n  const otherStates = useMemo(\r\n    () => teamStateMap?.deleteAll(ignores).toList().toArray(),\r\n    [teamStateMap, ignores]\r\n  );\r\n\r\n  const imageLoaded = fullImg || !pdfIndex;\r\n  const drawShow = visible && imageLoaded;\r\n  const maskShow = Boolean(preview || !drawShow);\r\n\r\n  return (\r\n    <div ref={wrapperEl} style={{ paddingTop: `${ratio * 100}%` }}>\r\n      {drawShow && (\r\n        <DrawWrapper\r\n          drawState={drawState}\r\n          otherStates={otherStates}\r\n          updateState={updateState}\r\n          imgSrc={fullImg || thumbnail}\r\n          preview={preview}\r\n        />\r\n      )}\r\n      {maskShow && <div className=\"mask\" />}\r\n    </div>\r\n  );\r\n};\r\nPageWrapper.displayName = \"PageWrapper\";\r\n\r\nconst DrawWrapper = ({\r\n  drawState,\r\n  updateState,\r\n  otherStates,\r\n  preview = false,\r\n  imgSrc,\r\n}: {\r\n  drawState: DrawState;\r\n  otherStates?: DrawState[];\r\n  updateState?: (ds: DrawState) => void;\r\n  preview?: boolean;\r\n  imgSrc?: string;\r\n}) => {\r\n  const { drawCtrl } = useContext(ReaderStateCtx);\r\n\r\n  const handleChange = useMemoizedFn(\r\n    (arg: ((s: DrawState) => DrawState) | DrawState) => {\r\n      if (!updateState) return;\r\n      const newDS = arg instanceof DrawState ? arg : arg(drawState);\r\n      updateState(newDS);\r\n    }\r\n  );\r\n\r\n  return preview ? (\r\n    <Draw\r\n      drawState={drawState}\r\n      otherStates={otherStates}\r\n      imgSrc={imgSrc}\r\n      readonly\r\n      preview\r\n    />\r\n  ) : (\r\n    <Draw\r\n      drawState={drawState}\r\n      otherStates={otherStates}\r\n      onChange={handleChange}\r\n      imgSrc={imgSrc}\r\n      drawCtrl={drawCtrl}\r\n      SelectTool={SelectTool}\r\n      TextTool={TextTool}\r\n    />\r\n  );\r\n};\r\nDrawWrapper.displayName = \"DrawWrapper\";\r\n","import { io } from \"socket.io-client\";\r\nimport { Stroke } from \"../draw/DrawState\";\r\nimport { NotePage } from \"../note/note\";\r\nimport { getUserID, getUserName } from \"../user\";\r\nimport { BASE_URL } from \"./http\";\r\n\r\nexport const IoFactory = (noteID: string) => {\r\n  return () =>\r\n    io(BASE_URL, {\r\n      query: {\r\n        userID: getUserID(),\r\n        userName: getUserName(),\r\n        noteID,\r\n      },\r\n    });\r\n};\r\n\r\nexport interface ReorderInfo {\r\n  pageOrder: string[];\r\n  prevOrder: string[];\r\n  deleted: boolean;\r\n}\r\n\r\nexport interface NewPageInfo {\r\n  pageOrder: string[];\r\n  pageID: string;\r\n  newPage: NotePage;\r\n}\r\n\r\nexport interface SyncInfo {\r\n  stroke: Stroke;\r\n  pageID: string;\r\n}\r\n","import { NotePage, TeamPage, TeamPageInfo } from \"../note/note\";\nimport { DrawState, WIDTH } from \"./DrawState\";\nimport { SetOperation } from \"./StateSet\";\nimport { Map, Record } from \"immutable\";\n\ninterface TeamStateRecordType {\n  pageStates: Map<string, Map<string, DrawState>>;\n  pageInfos: Map<string, TeamPageInfo>;\n}\n\nconst defaultRecord: Readonly<TeamStateRecordType> = {\n  pageStates: Map(),\n  pageInfos: Map(),\n};\n\ntype TeamStateRecord = Record<TeamStateRecordType>;\nconst defaultFactory = Record(defaultRecord);\n\nexport class TeamState {\n  constructor(private immutable: TeamStateRecord) {}\n\n  getImmutable() {\n    return this.immutable;\n  }\n\n  getPageStates() {\n    return this.getImmutable().get(\"pageStates\");\n  }\n\n  getPageInfos() {\n    return this.getImmutable().get(\"pageInfos\");\n  }\n\n  getOneState(pageID: string, userID: string) {\n    return this.getPageStates().get(pageID)?.get(userID);\n  }\n\n  getOnePageStateMap(pageID: string) {\n    return this.getPageStates().get(pageID);\n  }\n\n  getPageValidUsers(pageID: string) {\n    const map = this.getOnePageStateMap(pageID);\n    if (!map) return [];\n    return Array.from(map?.filter((ds) => !ds.isEmpty()).keys());\n  }\n\n  getPageRatio(pageID: string) {\n    return this.getPageInfos().get(pageID)?.ratio;\n  }\n\n  includesPage(pageID: string) {\n    return this.getPageStates().has(pageID);\n  }\n\n  setState(pageID: string, userID: string, drawState: DrawState) {\n    const pageMap = this.getPageStates().get(pageID);\n    if (!pageMap) return this;\n    return new TeamState(\n      this.getImmutable().update(\"pageStates\", (m) =>\n        m.set(pageID, pageMap.set(userID, drawState))\n      )\n    );\n  }\n\n  static createFromTeamPages(\n    teamPages: globalThis.Record<string, TeamPage>,\n    width = WIDTH\n  ) {\n    let record = defaultFactory();\n    Object.entries(teamPages).forEach(([pageID, teamPage]) => {\n      const { states, ratio } = teamPage;\n      const pageMap = Map(\n        Object.entries(states).map(([userID, flatState]) => [\n          userID,\n          DrawState.loadFromFlat(flatState, width, width * ratio),\n        ])\n      );\n      record = record\n        .update(\"pageStates\", (m) => m.set(pageID, pageMap))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }));\n    });\n    return new TeamState(record);\n  }\n\n  addPage(pageID: string, notePage: NotePage) {\n    const { ratio } = notePage;\n    return new TeamState(\n      this.getImmutable()\n        .update(\"pageStates\", (m) => m.set(pageID, Map()))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }))\n    );\n  }\n\n  pushOperation(setOp: SetOperation, userID: string, width = WIDTH) {\n    const { pageID, ...op } = setOp;\n    const ratio = this.getPageRatio(pageID);\n    if (!this.includesPage(pageID) || !ratio) return this;\n    const prevDs =\n      this.getOneState(pageID, userID) ||\n      DrawState.createEmpty(width, width * ratio);\n\n    const ds = DrawState.pushOperation(prevDs, op);\n    return this.setState(pageID, userID, ds);\n  }\n\n  resetUser(userID: string, pageRec: globalThis.Record<string, NotePage>) {\n    let newTS: TeamState = this;\n    for (let [pageID, { state, ratio }] of Object.entries(pageRec)) {\n      const prevDS = newTS.getOneState(pageID, userID);\n      if (!prevDS) continue;\n      const { width } = prevDS;\n      newTS = newTS.setState(\n        pageID,\n        userID,\n        DrawState.loadFromFlat(state, width, width * ratio)\n      );\n    }\n    return newTS;\n  }\n}\n","import { getTeamNoteState, loadTeamNoteInfo } from \"../../lib/network/http\";\r\nimport React, { useState, useEffect, createContext, useCallback } from \"react\";\r\nimport { LoginOutlined, LogoutOutlined } from \"@ant-design/icons\";\r\nimport { IoFactory, NewPageInfo } from \"../../lib/network/io\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { TeamState } from \"../../lib/draw/TeamState\";\r\nimport { getUserID, UserInfo } from \"../../lib/user\";\r\nimport { NotePage } from \"../../lib/note/note\";\r\nimport { Socket } from \"socket.io-client\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { Set } from \"immutable\";\r\nimport { message } from \"antd\";\r\nimport Reader from \"./Reader\";\r\n\r\nexport const TeamCtx = createContext({\r\n  io: undefined as Socket | undefined,\r\n  code: -2,\r\n  connected: false,\r\n  ignores: Set<string>(),\r\n  userRec: {} as Record<string, UserInfo>,\r\n  teamState: undefined as TeamState | undefined,\r\n  resetIO: () => {},\r\n  loadInfo: async () => false,\r\n  setIgnores: (() => {}) as Setter<Set<string>>,\r\n  addTeamStatePage: (pageID: string, newPage: NotePage) => {},\r\n});\r\n\r\nexport default function Team() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const [teamState, setTeamState] = useState<TeamState>();\r\n  const [code, setCode] = useState(-2);\r\n  const [userRec, setUserRec] = useState<Record<string, UserInfo>>({});\r\n  const [ignores, setIgnores] = useState(Set<string>());\r\n  const [io, setIO] = useState(IoFactory(noteID));\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [connected, setConnected] = useState(false);\r\n  const nav = useNavigate();\r\n\r\n  const loadState = useCallback(async () => {\r\n    const teamNote = await getTeamNoteState(noteID);\r\n    if (!teamNote) {\r\n      message.error(\"Failed loading the team note state\");\r\n      return false;\r\n    }\r\n    setTeamState(TeamState.createFromTeamPages(teamNote));\r\n    return true;\r\n  }, [noteID]);\r\n\r\n  const loadInfo = useCallback(async () => {\r\n    const info = await loadTeamNoteInfo(noteID);\r\n    if (!info) {\r\n      message.error(\"Failed loading the team note info\");\r\n      return false;\r\n    }\r\n    setCode(info.code);\r\n    return true;\r\n  }, [noteID]);\r\n\r\n  useEffect(() => {\r\n    const roomInit = async () => {\r\n      message.loading({\r\n        content: \"Loading team note...\",\r\n        key: \"TEAM_LOADING\",\r\n        duration: 0,\r\n      });\r\n      if (!((await loadInfo()) && (await loadState()))) {\r\n        message.destroy(\"TEAM_LOADING\");\r\n        return nav(\"/\");\r\n      }\r\n      message.destroy(\"TEAM_LOADING\");\r\n      setLoaded(true);\r\n    };\r\n    roomInit();\r\n    return () => message.destroy(\"TEAM_LOADING\");\r\n  }, [loadInfo, loadState, nav]);\r\n\r\n  useEffect(() => {\r\n    io.on(\"push\", ({ operation, userID }) => {\r\n      setTeamState((prev) => prev?.pushOperation(operation, userID));\r\n    });\r\n\r\n    io.on(\"join\", ({ joined, members }) => {\r\n      const { userID, userName } = joined;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return;\r\n      message.destroy(userID);\r\n      message.success({\r\n        content: `${userName} joined room`,\r\n        icon: <LoginOutlined />,\r\n        key: userID,\r\n      });\r\n    });\r\n\r\n    io.on(\"leave\", ({ leaved, members }) => {\r\n      const { userID, userName } = leaved;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return io.emit(\"join\");\r\n      message.destroy(userID);\r\n      message.warning({\r\n        content: `${userName} leaved room`,\r\n        icon: <LogoutOutlined />,\r\n        key: userID,\r\n      });\r\n    });\r\n\r\n    io.on(\"newPage\", (info: NewPageInfo) => {\r\n      const { pageID, newPage } = info;\r\n      setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n    });\r\n\r\n    io.on(\"reset\", ({ userID, pageRec }) => {\r\n      if (userID === getUserID()) return;\r\n      setTeamState((prev) => prev?.resetUser(userID, pageRec));\r\n    });\r\n\r\n    io.on(\"connect_error\", console.error);\r\n    io.on(\"connect\", () => setConnected(true));\r\n    io.on(\"disconnect\", () => setConnected(false));\r\n\r\n    return () => {\r\n      io.removeAllListeners();\r\n      io.close();\r\n    };\r\n  }, [io]);\r\n\r\n  const addTeamStatePage = (pageID: string, newPage: NotePage) => {\r\n    setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n  };\r\n\r\n  const resetIO = () => setIO(IoFactory(noteID));\r\n\r\n  if (!loaded) return null;\r\n  return (\r\n    <TeamCtx.Provider\r\n      value={{\r\n        io,\r\n        code,\r\n        ignores,\r\n        userRec,\r\n        connected,\r\n        teamState,\r\n        resetIO,\r\n        loadInfo,\r\n        setIgnores,\r\n        addTeamStatePage,\r\n      }}\r\n    >\r\n      <Reader teamOn />\r\n    </TeamCtx.Provider>\r\n  );\r\n}\r\n","export function createVirtualCanvas(width: number, height: number) {\r\n  const canvas = document.createElement(\"canvas\");\r\n  const context = canvas.getContext(\"2d\");\r\n  if (!context) {\r\n    throw new Error(\"can't get virtual canvas context\");\r\n  }\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n  return { canvas, context };\r\n}\r\n\r\nexport function releaseCanvas(canvas: HTMLCanvasElement) {\r\n  canvas.width = 1;\r\n  canvas.height = 1;\r\n  const ctx = canvas.getContext('2d');\r\n  ctx?.clearRect(0, 0, 1, 1);\r\n}\r\n"],"names":["defaultDrawCtrl","mode","finger","lineWidth","eraserWidth","color","highlight","getDrawCtrl","localforage","drawCtrl","defaultRecord","states","Map","editStack","List","undoStack","defaultFactory","Record","StateSet","immutable","lastOp","this","getImmutable","get","pageID","getStates","drawState","prevDS","getOneState","currRecord","update","s","set","l","push","delete","cb","currDS","notePage","width","WIDTH","state","ratio","newDS","DrawState","getEditStack","size","getUndoStack","isUndoable","lastUid","last","lastSetOp","pop","isRedoable","ds","undefined","list","pageRec","entries","Object","createFromList","map","key","AddPageButton","addFinalPage","useContext","ReaderMethodCtx","className","type","icon","PlusOutlined","block","onClick","insertAfter","prevItem","newItem","prevIndex","indexOf","curr","slice","splice","DigitDisplay","value","useState","randomNum","setRandomNum","digits","String","padStart","split","Number","resetRandom","Math","floor","random","useEffect","timer","setTimeout","clearTimeout","classNames","disabled","d","idx","Digit","digit","createFromIconfontCN","scriptUrl","PageNavContent","activeKey","setActiveKey","ReaderStateCtx","pageOrder","inviewPages","scrollPage","saveReorder","refRec","useRef","listEl","currpageID","useMemo","find","has","current","scrollIntoView","itemHeight","clientHeight","listHeight","scrollBy","PreviewTabs","onDragEnd","source","destination","fromIndex","index","toIndex","newOrder","result","removed","exchange","requestAnimationFrame","droppableId","droppableProps","innerRef","placeholder","ref","e","uid","PagePreview","pageIndex","stateSet","teamState","switchPageMarked","ignores","TeamCtx","chosen","setChosen","page","teamStateMap","getOnePageStateMap","userIDs","getPageValidUsers","filter","userID","isEmpty","every","marked","switchMarked","stopPropagation","draggableId","isDragDisabled","draggableProps","dragHandleProps","drag","isDragging","image","PageWrapper","thumbnail","preview","onClickCapture","TeamAvatars","PreviewOption","maxCount","UserAvatar","prev","popShow","setPopShow","addPage","deletePage","menu","domEvent","items","label","CopyOutlined","DeleteOutlined","danger","content","trigger","placement","visible","onVisibleChange","destroyTooltipOnHide","MoreOutlined","TabPane","Tabs","onChange","tabBarGutter","centered","tab","PageNav","navOn","setNavOn","title","ALL","MARKED","WRITTEN","MenuUnfoldOutlined","MenuFoldOutlined","onClose","closable","contentWrapperStyle","boxShadow","bodyStyle","padding","overflow","headerStyle","textAlign","borderTop","destroyOnClose","DrawTools","handleUndo","handleRedo","instantSave","saved","teamOn","setDrawCtrl","nav","useNavigate","updateDrawCtrl","updated","newCtrl","saveDrawCtrl","HomeFilled","style","opacity","SaveOutlined","shape","UndoOutlined","RedoOutlined","ghost","PenButton","EraserButton","ExpandOutlined","RoomInfo","JoinRoom","btnProps","HighlightOutlined","PenPanel","getPopupContainer","tempLineWidth","setTempLineWidth","min","max","defaultValue","onAfterChange","ColorSelect","colors","c","checked","name","tempEraserWidth","setTempEraserWidth","UserCard","renaming","setRenaming","setIgnores","resetIO","userInfo","userRec","userName","online","self","getUserID","ignored","Search","autoFocus","onSearch","trim","saveUserName","enterButton","CheckOutlined","FormOutlined","EyeInvisibleOutlined","EyeOutlined","add","getHashedColor","backgroundColor","code","connected","loadInfo","link","window","location","href","share","selfName","copy","message","console","log","userList","values","selfID","selfInfo","onlineNum","u","length","DisconnectOutlined","showIcon","banner","ShareAltOutlined","ReloadOutlined","defaultVisible","status","count","TeamOutlined","noteID","createRoom","putNote","editNoteData","team","onConfirm","okText","cancelText","UsergroupAddOutlined","Point","paper","Path","Group","Rectangle","Color","Size","Raster","Draw","otherStates","readonly","imgSrc","SelectTool","TextTool","height","canvasEl","scope","group","path","Set","erased","setErased","currDrawCtrl","setCurrDrawCtrl","rect","setRect","onFrame","dashOffset","remove","selectedGroup","setSelectedGroup","selected","setSelected","paperMode","setPointText","strokeColor","alpha","updateMutation","updateRatio","clientWidth","transformPoint","projP","activate","view","center","zoom","absoluteP","projectToView","multiply","offsetP","divide","subtract","setup","r","viewSize","scale","paintBackground","setupPaper","cvs","releaseCanvas","setNewRect","point","rectangle","startSelectRect","handleDown","draw","startStroke","erase","select","isInside","strokeBounds","text","t","handleDrag","smooth","eraserPath","newErased","p","checkErase","concat","delta","x","y","translate","handleUp","segments","simplify","pathData","exportJSON","toArray","abs","newSG","checkSelection","tempStyle","parseGroupStyle","onMouseDown","onMouseDrag","onMouseUp","raster","img","Image","src","onload","project","layers","addChild","position","mergedStrokes","getStrokeList","othersGroup","forEach","stroke","paintStroke","hasStroke","item","children","mutations","pointText","handler","preventDefault","document","addEventListener","removeEventListener","usePinch","memo","offset","first","origin","lastScale","lastOX","lastOY","osX","osY","getBoundingClientRect","oX","oY","originViewP","originProjP","viewToProject","aniCount","pow","scaleView","transP","putCenterBack","scaleBounds","rubberband","target","preventTouch","touch","touches","touchType","isStylus","isEventValid","onTouchStartCapture","onTouchMoveCapture","onDelete","deleted","onRotate","angle","dAngle","rotate","onDuplicate","clone","getUid","mutateStyle","updateGroupStyle","rasterize","data","toDataURL","onCancel","onSubmit","fontSize","React","activeLayer","importJSON","error","getCheckPoints","cache","WeakMap","segment","cached","prevPoint","previous","times","checkPoints","i","checkedPath","curveBound","lastSegment","curve","intersects","strokeWidth","some","cPoint","getNearestPoint","getDistance","bgRect","fillColor","addLayer","dashArray","blendMode","strokeJoin","strokeCap","dX","dY","minX","maxX","minY","maxY","getCenterTranslate","deltaX","deltaY","dP","move","toCSS","bounds","prevHighLighted","rotateEl","dragged","setDragged","transX","setTransX","gearStyle","transform","rotateCount","setRotateCount","btnClass","useDrag","filterTaps","left","right","recoginzing","setRecoginzing","modalShow","setModalShow","setText","recognizeText","createWorker","worker","logger","load","loadLanguage","initialize","recognize","terminate","createPortal","BgColorsOutlined","RotateRightOutlined","LoadingOutlined","onOk","TextArea","body","setFontSize","paddingTop","createContext","noteInfo","updateStateSet","prevPageID","order","setInviewPages","Reader","useParams","setPageRec","setNoteInfo","setStateSet","setPageOrder","useSafeState","setSaved","io","addTeamStatePage","loadNotePages","loadNote","storedNote","pdf","createFromPages","updatePages","saver","useMemoizedFn","pr","toObject","canvas","querySelector","debouncedSave","useCallback","debounce","flush","savePageRec","defaultNotePage","pushReorder","emit","handleReorder","onUndo","prevOrder","duration","handleNewPage","newPage","addState","on","removeAllListeners","pushNewPage","newTeamPage","updatePageRec","newSS","operation","lastDS","getLastDS","prevSS","updateState","prevPage","createPage","renderResult","undo","redo","PageContainer","Provider","id","lastPageID","setState","pdfIndex","fullImg","setFullImg","wrapperEl","useInViewport","loadImage","once","getOnePageImage","deleteAll","toList","drawShow","maskShow","Boolean","DrawWrapper","displayName","handleChange","arg","IoFactory","BASE_URL","query","getUserName","pageStates","pageInfos","TeamState","getPageStates","Array","from","keys","getPageInfos","pageMap","m","setOp","op","getPageRatio","includesPage","prevDs","newTS","teamPages","record","teamPage","flatState","Team","setTeamState","setCode","setUserRec","setIO","loaded","setLoaded","setConnected","loadState","getTeamNoteState","teamNote","createFromTeamPages","loadTeamNoteInfo","info","roomInit","pushOperation","joined","members","LoginOutlined","leaved","LogoutOutlined","resetUser","close","createVirtualCanvas","createElement","context","getContext","Error","ctx","clearRect"],"sourceRoot":""}