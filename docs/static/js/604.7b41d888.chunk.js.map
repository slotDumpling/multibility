{"version":3,"file":"static/js/604.7b41d888.chunk.js","mappings":"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","sources":["lib/draw/drawCtrl.ts","lib/draw/StateSet.ts","component/draw/touch.ts","component/draw/Draw.tsx","component/reader/ReaderUtils.tsx","component/reader/lib/array.ts","component/ui/IconFont.tsx","component/reader/tools/PenPanel.tsx","component/reader/tools/DrawTools.tsx","component/reader/lib/scroll.ts","component/reader/header/Middle.tsx","component/widgets/UserAvatar.tsx","component/reader/PageNav.tsx","component/reader/header/Right.tsx","component/reader/header/Header.tsx","component/reader/Reader.tsx","lib/network/io.ts","lib/draw/TeamState.ts","component/reader/Team.tsx","lib/draw/canvas.ts"],"sourcesContent":["import localforage from \"localforage\";\r\nexport interface DrawCtrl {\r\n  mode: \"draw\" | \"erase\" | \"select\" | \"text\";\r\n  finger: boolean;\r\n  lineWidth: number;\r\n  eraserWidth: number;\r\n  color: string;\r\n  highlight: boolean;\r\n  lasso: boolean;\r\n  widthList: number[];\r\n}\r\n\r\nexport const defaultWidthList = [10, 20, 30, 50];\r\nexport const defaultDrawCtrl: Readonly<DrawCtrl> = {\r\n  mode: \"draw\",\r\n  finger: true,\r\n  lineWidth: 10,\r\n  eraserWidth: 10,\r\n  color: \"#000000\",\r\n  highlight: false,\r\n  lasso: true,\r\n  widthList: defaultWidthList,\r\n};\r\n\r\nexport async function getDrawCtrl() {\r\n  let drawCtrl = await localforage.getItem<DrawCtrl>(\"DRAW_CTRL\");\r\n  if (!drawCtrl) {\r\n    drawCtrl = defaultDrawCtrl;\r\n    await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n  }\r\n  return drawCtrl;\r\n}\r\n\r\nexport async function saveDrawCtrl(drawCtrl: DrawCtrl) {\r\n  await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n}\r\n","import { DrawState, Operation, Stroke, WIDTH } from \"./DrawState\";\r\nimport { List, Map, Record } from \"immutable\";\r\nimport { NotePage } from \"../note/note\";\r\n\r\ninterface StateSetRecordType {\r\n  states: Map<string, DrawState>;\r\n  editStack: List<string>;\r\n  undoStack: List<string>;\r\n}\r\n\r\nconst defaultRecord: Readonly<StateSetRecordType> = {\r\n  states: Map(),\r\n  editStack: List(),\r\n  undoStack: List(),\r\n};\r\n\r\ntype StateSetRecord = Record<StateSetRecordType>;\r\nconst defaultFactory = Record(defaultRecord);\r\n\r\nexport type SetOperation = Operation & { pageID: string };\r\n\r\nexport class StateSet {\r\n  constructor(\r\n    private immutable: StateSetRecord,\r\n    public lastOp?: SetOperation\r\n  ) {}\r\n\r\n  static createFromPages(\r\n    pageRec: globalThis.Record<string, NotePage>,\r\n    width = WIDTH\r\n  ) {\r\n    return new StateSet(\r\n      defaultFactory().set(\r\n        \"states\",\r\n        Map(pageRec).map(({ state, ratio }) =>\r\n          DrawState.loadFromFlat(state, width, width * ratio)\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  getImmutable() {\r\n    return this.immutable;\r\n  }\r\n\r\n  getStates() {\r\n    return this.getImmutable().get(\"states\");\r\n  }\r\n\r\n  getOneState(pageID: string) {\r\n    return this.getStates().get(pageID);\r\n  }\r\n\r\n  getEditStack() {\r\n    return this.getImmutable().get(\"editStack\");\r\n  }\r\n\r\n  getUndoStack() {\r\n    return this.getImmutable().get(\"undoStack\");\r\n  }\r\n\r\n  setState(pageID: string, drawState: DrawState) {\r\n    const prevDS = this.getOneState(pageID);\r\n    if (!prevDS || prevDS === drawState) return this;\r\n    let currRecord = this.getImmutable()\r\n      .update(\"states\", (s) => s.set(pageID, drawState))\r\n      .update(\"editStack\", (l) => l.push(pageID))\r\n      .delete(\"undoStack\");\r\n\r\n    const { lastOp } = drawState;\r\n    const lastSetOp = lastOp && { ...lastOp, pageID };\r\n\r\n    return new StateSet(currRecord, lastSetOp);\r\n  }\r\n\r\n  // sync with mutation.\r\n  syncStrokeTime(pageID: string, stroke: Stroke) {\r\n    const prevDS = this.getOneState(pageID);\r\n    prevDS && DrawState.syncStrokeTime(prevDS, stroke);\r\n    return this;\r\n  }\r\n\r\n  addState(pageID: string, notePage: NotePage, width = WIDTH) {\r\n    const { state, ratio } = notePage;\r\n    const newDS = DrawState.loadFromFlat(state, width, width * ratio);\r\n    const currRecord = this.getImmutable().update(\"states\", (s) =>\r\n      s.set(pageID, newDS)\r\n    );\r\n    return new StateSet(currRecord);\r\n  }\r\n\r\n  deleteState(pageID: string) {\r\n    return new StateSet(\r\n      this.getImmutable().update(\"states\", (s) => s.delete(pageID))\r\n    );\r\n  }\r\n\r\n  isUndoable() {\r\n    return this.getEditStack().size > 0;\r\n  }\r\n\r\n  isRedoable() {\r\n    return this.getUndoStack().size > 0;\r\n  }\r\n\r\n  undo() {\r\n    if (!this.isUndoable()) return this;\r\n    const lastUid = this.getEditStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.undo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"editStack\", (s) => s.pop())\r\n        .update(\"undoStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  redo() {\r\n    if (!this.isRedoable()) return this;\r\n    const lastUid = this.getUndoStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.redo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"undoStack\", (s) => s.pop())\r\n        .update(\"editStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  getLastDS(): [string, DrawState] | undefined {\r\n    const pageID = this.lastOp?.pageID;\r\n    const ds = pageID && this.getOneState(pageID);\r\n    if (ds) return [pageID, ds];\r\n  }\r\n}\r\n","import { PointerEvent, TouchEvent, useEffect, useRef } from \"react\";\r\n\r\ntype iOSTouch = Touch & {\r\n  force?: number;\r\n  touchType?: \"stylus\" | \"direct\";\r\n};\r\n\r\nexport function isApplePencil(e: TouchEvent) {\r\n  const touch = e.touches[0] as iOSTouch;\r\n  return touch?.touchType === \"stylus\";\r\n}\r\n\r\nexport function usePreventTouch(\r\n  allowFinger: boolean\r\n): React.CanvasHTMLAttributes<HTMLCanvasElement> {\r\n  const isTouch = useRef(false);\r\n  const checkPoniter = (e: PointerEvent) =>\r\n    e.isPrimary && (isTouch.current = e.pointerType === \"touch\");\r\n\r\n  const isEventValid = (e: TouchEvent) =>\r\n    !isTouch.current ||\r\n    isApplePencil(e) ||\r\n    (allowFinger && e.touches.length === 1);\r\n\r\n  const preventTouch = (e: TouchEvent) =>\r\n    isEventValid(e) || e.stopPropagation();\r\n\r\n  return {\r\n    onPointerDownCapture: checkPoniter,\r\n    onPointerMoveCapture: checkPoniter,\r\n    onTouchStartCapture: preventTouch,\r\n    onTouchMoveCapture: preventTouch,\r\n  };\r\n}\r\n\r\nexport function usePreventGesture() {\r\n  useEffect(() => {\r\n    const handler = (e: Event) => e.preventDefault();\r\n    document.addEventListener(\"gesturestart\", handler);\r\n    document.addEventListener(\"gesturechange\", handler);\r\n    document.addEventListener(\"gestureend\", handler);\r\n    return () => {\r\n      document.removeEventListener(\"gesturestart\", handler);\r\n      document.removeEventListener(\"gesturechange\", handler);\r\n      document.removeEventListener(\"gestureend\", handler);\r\n    };\r\n  }, []);\r\n}\r\n","import React, {\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  Dispatch,\r\n  useEffect,\r\n  useCallback,\r\n  useDebugValue,\r\n  SetStateAction,\r\n  useImperativeHandle,\r\n} from \"react\";\r\nimport { DrawState, Mutation, Stroke } from \"../../lib/draw/DrawState\";\r\nimport { defaultDrawCtrl, DrawCtrl } from \"../../lib/draw/drawCtrl\";\r\nimport { usePreventTouch, usePreventGesture } from \"./touch\";\r\nimport { releaseCanvas } from \"../../lib/draw/canvas\";\r\nimport { usePinch } from \"@use-gesture/react\";\r\nimport useSize from \"@react-hook/size\";\r\nimport paper from \"paper\";\r\nimport \"./draw.sass\";\r\n\r\nconst { Path, Size, Point, Group, Color, Raster, Layer } = paper;\r\n\r\nexport type ActiveToolKey = \"\" | \"select\" | \"text\";\r\nexport interface DrawRefType {\r\n  deleteSelected: () => void;\r\n  rotateSelected: (angle: number, last?: boolean) => void;\r\n  duplicateSelected: () => void;\r\n  mutateStyle: (updated: Partial<DrawCtrl>) => void;\r\n  rasterize: () => string;\r\n  submitText: (text: string, color?: string, justification?: string) => void;\r\n  cancelText: () => void;\r\n  pointText?: paper.PointText;\r\n}\r\ninterface DrawPropType {\r\n  drawState: DrawState;\r\n  otherStates?: DrawState[];\r\n  onChange?: Dispatch<SetStateAction<DrawState>>;\r\n  setActiveTool?: Dispatch<SetStateAction<ActiveToolKey>>;\r\n  drawCtrl?: DrawCtrl;\r\n  readonly?: boolean;\r\n  imgSrc?: string;\r\n}\r\n\r\nconst Draw = React.forwardRef<DrawRefType, DrawPropType>(\r\n  (\r\n    {\r\n      drawState,\r\n      otherStates,\r\n      onChange = () => {},\r\n      drawCtrl = defaultDrawCtrl,\r\n      readonly = false,\r\n      imgSrc,\r\n      setActiveTool = () => {},\r\n    },\r\n    ref\r\n  ) => {\r\n    const { width, height } = drawState;\r\n    const { mode, finger, lasso, eraserWidth } = drawCtrl;\r\n\r\n    const canvasEl = useRef<HTMLCanvasElement>(null);\r\n    const scope = useRef(new paper.PaperScope());\r\n    const [group, setGroup] = useState<paper.Item[]>([]);\r\n    const [path, setPath] = usePaperItem<paper.Path>();\r\n    const [rect, setRect] = usePaperItem<paper.Path.Rectangle>();\r\n\r\n    useEffect(() => {\r\n      const cvs = canvasEl.current;\r\n      const scp = scope.current;\r\n      if (!cvs) return;\r\n\r\n      scp.setup(cvs);\r\n      scp.settings.handleSize = 10;\r\n      scp.settings.hitTolerance = 20;\r\n      scp.project.addLayer(new Layer());\r\n      scp.project.addLayer(new Layer());\r\n      scp.project.addLayer(new Layer());\r\n      scp.project.layers[1].activate();\r\n      scp.project.layers.forEach((l) => (l.visible = false));\r\n      new scp.Tool();\r\n\r\n      return () => {\r\n        scp.remove();\r\n        releaseCanvas(cvs);\r\n      };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      const bgRect = paintBackground(scope.current, width, height);\r\n      return () => void bgRect.remove();\r\n    }, [width, height]);\r\n\r\n    const [canvasWidth] = useSize(canvasEl);\r\n    const ratio = canvasWidth / width;\r\n    useEffect(() => {\r\n      if (!ratio) return;\r\n      const scp = scope.current;\r\n      scp.view.viewSize = new Size(width, height).multiply(ratio);\r\n      scp.view.scale(ratio, new Point(0, 0));\r\n      scp.project.layers.forEach((l) => (l.visible = true));\r\n\r\n      return () => {\r\n        scp.project?.layers.forEach((l) => (l.visible = false));\r\n        scp.view?.scale(1 / ratio, new Point(0, 0));\r\n      };\r\n    }, [width, height, ratio]);\r\n\r\n    useEffect(() => {\r\n      if (!imgSrc) return;\r\n      scope.current.activate();\r\n      const raster = new Raster(imgSrc);\r\n      raster.project.layers[0].addChild(raster);\r\n      raster.sendToBack();\r\n      raster.onLoad = () => {\r\n        // render the image in full size first to prevent blurring.\r\n        requestAnimationFrame(() => {\r\n          raster.fitBounds(new paper.Rectangle(0, 0, width, height));\r\n          raster.bringToFront();\r\n        });\r\n      };\r\n\r\n      return () => void raster?.remove();\r\n    }, [imgSrc, width, height]);\r\n\r\n    const mergedStrokes = useMemo(\r\n      () =>\r\n        otherStates\r\n          ? DrawState.mergeStates(drawState, ...otherStates)\r\n          : drawState.getStrokeList(),\r\n      [drawState, otherStates]\r\n    );\r\n    useEffect(() => {\r\n      const tempGroup: paper.Item[] = [];\r\n      const othersGroup: paper.Item[] = [];\r\n\r\n      mergedStrokes.forEach((stroke) => {\r\n        const { uid } = stroke;\r\n        const item = paintStroke(stroke, scope.current);\r\n        if (!item) return;\r\n\r\n        if (drawState.hasStroke(uid)) tempGroup.push(item);\r\n        else othersGroup.push(item);\r\n      });\r\n      setGroup(tempGroup);\r\n\r\n      return () => {\r\n        tempGroup.forEach((item) => item.remove());\r\n        othersGroup.forEach((item) => item.remove());\r\n      };\r\n    }, [mergedStrokes, drawState]);\r\n\r\n    const hitRef = useRef<paper.HitResult>();\r\n    const [selected, setSelected] = useState(false);\r\n    const paperMode = mode === \"select\" && selected ? \"selected\" : mode;\r\n    const [selectedIDs, setSelectedIDs] = useState<string[]>([]);\r\n    const selectedItems = useMemo(() => {\r\n      const IDSet = new Set(selectedIDs);\r\n      return group.filter((item) => IDSet.has(item.name));\r\n    }, [group, selectedIDs]);\r\n\r\n    const resetSelect = useCallback(() => {\r\n      setSelected(false);\r\n      setPath(undefined);\r\n      setRect(undefined);\r\n    }, [setPath, setRect]);\r\n\r\n    useEffect(() => {\r\n      if (mode === \"select\") return resetSelect;\r\n    }, [mode, resetSelect]);\r\n    useEffect(() => resetSelect, [lasso, resetSelect]);\r\n\r\n    useEffect(() => {\r\n      if (!selected) return;\r\n      return () => {\r\n        setSelectedIDs([]);\r\n        setActiveTool(\"\");\r\n      };\r\n    }, [selected, setActiveTool]);\r\n\r\n    const downPath = () => {\r\n      const p = startStroke(drawCtrl);\r\n      scope.current.project.layers[2].addChild(p);\r\n      setPath(p);\r\n    };\r\n    const downRect = (e: paper.MouseEvent) => {\r\n      const r = startSelectRect(e.point);\r\n      scope.current.project.layers[2].addChild(r);\r\n      setRect(r);\r\n    };\r\n\r\n    const handleDown = {\r\n      draw: downPath,\r\n      erase: downPath,\r\n      select: lasso ? downPath : downRect,\r\n      selected(e: paper.MouseEvent) {\r\n        if (lasso) {\r\n          // if the point is outside of selection, reset selection\r\n          if (path?.contains(e.point)) return;\r\n          downPath();\r\n          setSelected(false);\r\n        } else {\r\n          // check if the point hit the segment point.\r\n          const hitRes = rect?.hitTest(e.point, { segments: true });\r\n          hitRef.current = hitRes;\r\n          if (hitRes) return;\r\n          // if the point is outside of selection, reset selection\r\n          if (rect?.contains(e.point)) return;\r\n          downRect(e);\r\n          setSelected(false);\r\n        }\r\n      },\r\n      text(e: paper.MouseEvent) {\r\n        let t = getClickedText(scope.current, e.point);\r\n        if (!t) {\r\n          t = new paper.PointText({\r\n            point: e.point.add(new Point(0, 50)),\r\n            content: \"Insert text...\",\r\n            fontSize: 50,\r\n            justification: \"center\",\r\n            fillColor: \"#1890ff55\",\r\n          });\r\n          scope.current.project.layers[2].addChild(t);\r\n        }\r\n        setPointText(t as paper.PointText);\r\n      },\r\n    }[paperMode];\r\n\r\n    const dragPath = (e: paper.MouseEvent) => {\r\n      path?.add(e.point);\r\n      path?.smooth();\r\n    };\r\n    const resizeRect = (e: paper.MouseEvent) => {\r\n      if (!rect) return;\r\n      const { x, y } = e.point;\r\n      const [, s1, s2, s3] = rect.segments;\r\n      s1.point.x = x;\r\n      s2.point = e.point;\r\n      s3.point.y = y;\r\n    };\r\n\r\n    const handleDrag = {\r\n      draw: dragPath,\r\n      erase: dragPath,\r\n      select: lasso ? dragPath : resizeRect,\r\n      selected(e: paper.MouseEvent) {\r\n        const hitRes = hitRef.current;\r\n        if (hitRes?.segment) {\r\n          // resize selected items\r\n          const moveP = hitRes.segment.point;\r\n          const baseP = hitRes.segment.next.next.point;\r\n          const diagonal = moveP.subtract(baseP);\r\n          const projection = e.point.subtract(baseP).project(diagonal);\r\n          const scale = projection.x / diagonal.x;\r\n          if (scale < 0) return;\r\n\r\n          rect?.scale(scale, baseP);\r\n          selectedItems.forEach((item) => {\r\n            item.scale(scale, baseP);\r\n            item.strokeWidth *= scale;\r\n          });\r\n        } else {\r\n          // move selected items\r\n          selectedItems.forEach((item) => item.translate(e.delta));\r\n          path?.translate(e.delta);\r\n          rect?.translate(e.delta);\r\n        }\r\n      },\r\n      text(e: paper.MouseEvent) {\r\n        if (!pointText || pointText.name) return;\r\n        const { topCenter, bottomRight } = pointText.bounds;\r\n        const diagonal = bottomRight.subtract(topCenter);\r\n        const projection = e.point.subtract(topCenter).project(diagonal);\r\n        const scale = projection.x / diagonal.x;\r\n        if (scale < 0) return;\r\n        pointText.scale(scale, topCenter);\r\n      },\r\n    }[paperMode];\r\n\r\n    useEffect(() => {\r\n      scope.current.tool.maxDistance = eraserWidth;\r\n    }, [eraserWidth]);\r\n    const erased = useRef(new Set<string>());\r\n\r\n    const handleEarserDrag =\r\n      paperMode === \"erase\"\r\n        ? (e: paper.ToolEvent) => {\r\n            const layer = scope.current.project.layers[1];\r\n            const hitRes = layer.hitTestAll(e.point, {\r\n              class: paper.Path,\r\n              stroke: true,\r\n              tolerance: eraserWidth / 2,\r\n            });\r\n\r\n            hitRes.forEach(({ item }) => {\r\n              item.opacity = 0.5;\r\n              item.guide = true;\r\n              if (item.name) erased.current.add(item.name);\r\n            });\r\n          }\r\n        : null;\r\n\r\n    const handleUp = {\r\n      draw() {\r\n        if (!path || path.isEmpty()) return;\r\n        path.simplify();\r\n        const pathData = path.exportJSON();\r\n        onChange((prev) => DrawState.addStroke(prev, pathData));\r\n        setPath(undefined);\r\n      },\r\n      erase() {\r\n        const erasedList = Array.from(erased.current);\r\n        erased.current.clear();\r\n        onChange((prev) => DrawState.eraseStrokes(prev, erasedList));\r\n        setPath(undefined);\r\n      },\r\n      select() {\r\n        let selection: string[];\r\n        const layer = scope.current.project.layers[1];\r\n        if (lasso) {\r\n          if (!path || Math.abs(path.area) < 1_000) return setPath(undefined);\r\n          path.closePath();\r\n          path.simplify();\r\n          moveDash(path);\r\n          selection = checkLasso(layer, path);\r\n        } else {\r\n          if (!rect || Math.abs(rect.area) < 1_000) return setRect(undefined);\r\n          selection = checkRect(layer, rect);\r\n        }\r\n        setSelectedIDs(selection);\r\n        setSelected(true);\r\n        setActiveTool(\"select\");\r\n      },\r\n      selected() {\r\n        updateMutation();\r\n      },\r\n      text() {\r\n        setActiveTool(\"text\");\r\n      },\r\n    }[paperMode];\r\n\r\n    const [cursor, setCursor] = useState(\"auto\");\r\n    useEffect(() => {\r\n      if (paperMode === \"text\" || paperMode === \"select\") {\r\n        setCursor(\"crosshair\");\r\n      } else if (paperMode === \"selected\") {\r\n        console.log(1);\r\n        setCursor(lasso ? \"crosshair\" : \"nwse-resize\");\r\n      } else if (paperMode === \"draw\" || paperMode === \"erase\") {\r\n        setCursor(cursorStyle(drawCtrl, ratio));\r\n      }\r\n    }, [paperMode, lasso, drawCtrl, ratio]);\r\n\r\n    const handleMove = {\r\n      selected(e: paper.MouseEvent) {\r\n        const hitRes = rect?.hitTest(e.point, { segments: true });\r\n        if (hitRes?.segment) {\r\n          const moveP = hitRes.segment.point;\r\n          const baseP = hitRes.segment.next.next.point;\r\n          const diagonal = moveP.subtract(baseP);\r\n          const { x, y } = diagonal;\r\n          setCursor(x * y < 0 ? \"nesw-resize\" : \"nwse-resize\");\r\n        } else if (rect?.contains(e.point) || path?.contains(e.point)) {\r\n          setCursor(\"move\");\r\n        } else {\r\n          setCursor(\"crosshair\");\r\n        }\r\n      },\r\n      text(e: paper.MouseEvent) {\r\n        if (getClickedText(scope.current, e.point)) setCursor(\"text\");\r\n        else setCursor(\"crosshair\");\r\n      },\r\n      select: null,\r\n      draw: null,\r\n      erase: null,\r\n    }[paperMode];\r\n\r\n    const handleViewEvent = () => {\r\n      if (readonly) return;\r\n\r\n      type Handler<E> = ((e: E) => boolean | void) | null;\r\n      const activate = <E,>(handler: Handler<E>): Handler<E> => {\r\n        return (e) => {\r\n          scope.current.activate();\r\n          if (handler) return handler(e);\r\n        };\r\n      };\r\n      const { view, tool } = scope.current;\r\n      view.onMouseDown = activate(handleDown);\r\n      view.onMouseDrag = activate(handleDrag);\r\n      view.onMouseUp = activate(handleUp);\r\n      view.onMouseMove = activate(handleMove);\r\n      if (tool) tool.onMouseDrag = activate(handleEarserDrag);\r\n    };\r\n    useEffect(handleViewEvent);\r\n\r\n    const updateMutation = () => {\r\n      if (!selectedItems?.length) return;\r\n      const mutations = selectedItems.map(\r\n        (p) => [p.name, p.exportJSON()] as Mutation\r\n      );\r\n      onChange((prev) => DrawState.mutateStrokes(prev, mutations));\r\n    };\r\n\r\n    const deleteSelected = () => {\r\n      setSelectedIDs([]);\r\n      resetSelect();\r\n      if (!selectedIDs.length) return;\r\n      onChange((prev) => DrawState.eraseStrokes(prev, selectedIDs));\r\n    };\r\n\r\n    const rotateSelected = (angle: number, last = false) => {\r\n      let aniCount = last ? 10 : 1;\r\n      const dAngle = angle / aniCount;\r\n      const center = (rect || path)?.position;\r\n      const rotate = () => {\r\n        selectedItems.forEach((item) => item.rotate(dAngle, center));\r\n        rect?.rotate(dAngle, center);\r\n        path?.rotate(dAngle, center);\r\n        if (--aniCount > 0) requestAnimationFrame(rotate);\r\n        else last && updateMutation();\r\n      };\r\n      rotate();\r\n    };\r\n\r\n    const mutateStyle = (updated: Partial<DrawCtrl>) => {\r\n      scope.current.activate();\r\n      updateGroupStyle(selectedItems, updated);\r\n      updateMutation();\r\n    };\r\n\r\n    const duplicateSelected = () => {\r\n      scope.current.activate();\r\n      const size = (rect || path)?.bounds.size;\r\n      if (!size) return;\r\n      const { width, height } = size;\r\n      const transP = new Point(width, height).divide(10);\r\n      const newSG = new Group(selectedItems).clone({ insert: false });\r\n      newSG.translate(transP);\r\n      rect?.translate(transP);\r\n      path?.translate(transP);\r\n\r\n      const mutations = newSG.children.map(\r\n        (item) => [DrawState.getUid(), item.exportJSON()] as Mutation\r\n      );\r\n      onChange((prev) => DrawState.mutateStrokes(prev, mutations));\r\n      setSelectedIDs(mutations.map((m) => m[0]));\r\n    };\r\n\r\n    const rasterize = () =>\r\n      new Group(selectedItems).rasterize({ insert: false }).toDataURL();\r\n\r\n    const [pointText, setPointText] = usePaperItem<paper.PointText>();\r\n    const cancelText = useCallback(() => {\r\n      setPointText(undefined);\r\n      setActiveTool(\"\");\r\n    }, [setPointText, setActiveTool]);\r\n\r\n    useEffect(() => {\r\n      if (mode === \"text\") return cancelText;\r\n    }, [mode, cancelText]);\r\n\r\n    const submitText = (\r\n      text: string,\r\n      color = \"#000\",\r\n      justification = \"center\"\r\n    ) => {\r\n      if (!pointText) return;\r\n      pointText.content = text;\r\n      pointText.fillColor = new Color(color);\r\n      pointText.justification = justification;\r\n      const pathData = pointText.exportJSON();\r\n      const { name } = pointText;\r\n      cancelText();\r\n      if (!name) return onChange((prev) => DrawState.addStroke(prev, pathData));\r\n      onChange((prev) => DrawState.mutateStrokes(prev, [[name, pathData]]));\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      deleteSelected,\r\n      duplicateSelected,\r\n      cancelText,\r\n      rotateSelected,\r\n      submitText,\r\n      mutateStyle,\r\n      rasterize,\r\n      pointText,\r\n    }));\r\n\r\n    usePreventGesture();\r\n    usePinch(\r\n      ({ memo, offset: [scale], first, last, origin }) => {\r\n        scope.current.activate();\r\n        const { view } = scope.current;\r\n        const originRawP = new Point(origin);\r\n\r\n        let lastScale: number;\r\n        let lastOrigin, elPos: paper.Point;\r\n        if (first || !memo) {\r\n          const { x, y } = canvasEl.current!.getBoundingClientRect();\r\n          lastScale = 1;\r\n          elPos = new Point(x, y);\r\n          lastOrigin = originRawP.subtract(elPos);\r\n        } else {\r\n          [lastScale, lastOrigin, elPos] = memo;\r\n        }\r\n\r\n        const originViewP = originRawP.subtract(elPos);\r\n        const originPorjP = view.viewToProject(originViewP);\r\n\r\n        if (Math.abs(1 - scale) < 0.05) scale = 1;\r\n        let dScale = first ? 1 : scale / lastScale;\r\n        let aniCount = last ? 10 : 1;\r\n        dScale = Math.pow(dScale, 1 / aniCount);\r\n        const scaleView = () => {\r\n          view.scale(dScale, originPorjP);\r\n          if (--aniCount > 0) requestAnimationFrame(scaleView);\r\n          else if (last) putCenterBack(view, new Size(width, height));\r\n        };\r\n        scaleView();\r\n\r\n        const deltaP = originViewP.subtract(lastOrigin);\r\n        const transP = deltaP.divide(view.zoom);\r\n        view.translate(transP);\r\n\r\n        if (!last) return [scale, originViewP, elPos];\r\n      },\r\n      {\r\n        scaleBounds: { max: 10, min: 0.3 },\r\n        rubberband: 0.5,\r\n        target: canvasEl,\r\n      }\r\n    );\r\n\r\n    const touchHandler = usePreventTouch(finger);\r\n    return (\r\n      <div className=\"draw-wrapper\" style={{ cursor }}>\r\n        <canvas ref={canvasEl} className=\"draw-canvas\" {...touchHandler} />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nDraw.displayName = \"Draw\";\r\nexport default React.memo(Draw);\r\n\r\nfunction usePaperItem<T extends paper.Item>() {\r\n  const tuple = useState<T | undefined>();\r\n  const [item] = tuple;\r\n  useDebugValue(item);\r\n  useEffect(\r\n    () => () => {\r\n      if (!item?.name) item?.remove();\r\n    },\r\n    [item]\r\n  );\r\n  return tuple;\r\n}\r\n\r\nconst paintStroke = (stroke: Stroke, scope: paper.PaperScope) => {\r\n  let { pathData, uid } = stroke;\r\n  try {\r\n    scope.activate();\r\n    const item = scope.project.layers[1].importJSON(pathData);\r\n    if (!item) return;\r\n    item.name = uid;\r\n    item.guide = false;\r\n    return item;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst paintBackground = (\r\n  scope: paper.PaperScope,\r\n  width: number,\r\n  height: number\r\n) => {\r\n  scope.activate();\r\n  const bgRect = new Path.Rectangle(new Point(0, 0), new Point(width, height));\r\n  bgRect.fillColor = new Color(\"#fff\");\r\n  scope.project.layers[0].addChild(bgRect);\r\n  return bgRect;\r\n};\r\n\r\nconst startSelectRect = (point: paper.Point) => {\r\n  const rect = new Path.Rectangle(point, new Size(0, 0));\r\n  rect.onFrame = () => {}; // the handle size bug\r\n  rect.selected = true;\r\n  return rect;\r\n};\r\n\r\nconst startStroke = (drawCtrl: DrawCtrl) => {\r\n  let { mode, lineWidth, eraserWidth, color, highlight } = drawCtrl;\r\n  const path = new Path();\r\n  if (mode === \"erase\") {\r\n    color = \"#ccc\";\r\n    lineWidth = eraserWidth;\r\n  }\r\n  if (mode === \"select\") {\r\n    color = \"#1890ff\";\r\n    lineWidth = 5;\r\n  }\r\n  const strokeColor = new Color(color);\r\n  if (highlight || mode === \"erase\") {\r\n    strokeColor.alpha = 0.5;\r\n    path.blendMode = \"multiply\";\r\n  }\r\n  path.strokeColor = strokeColor;\r\n  path.strokeWidth = lineWidth;\r\n  path.strokeJoin = \"round\";\r\n  path.strokeCap = \"round\";\r\n  path.guide = true;\r\n  return path;\r\n};\r\n\r\nconst cursorStyle = (drawCtrl: DrawCtrl, ratio: number) => {\r\n  const { lineWidth, eraserWidth, mode } = drawCtrl;\r\n  const size = ratio * (mode === \"erase\" ? eraserWidth : lineWidth);\r\n  const half = size / 2;\r\n  return `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"%23EEE6\" width=\"${size}\" height=\"${size}\" viewBox=\"0 0 10 10\"><circle cx=\"5\" cy=\"5\" r=\"5\"/></svg>') ${half} ${half}, auto`;\r\n};\r\n\r\nconst moveDash = (item: paper.Item) => {\r\n  item.dashOffset = 0;\r\n  item.dashArray = [30, 20];\r\n  item.onFrame = () => (item.dashOffset += 3);\r\n};\r\n\r\nconst getCenterTranslate = (view: paper.View, projSize: paper.Size) => {\r\n  const { x, y } = view.center;\r\n  const { width: viewW, height: viewH } = view.size;\r\n  const { width: projW, height: projH } = projSize;\r\n\r\n  const [minX, minY] = [Math.min(viewW, projW) / 2, Math.min(viewH, projH) / 2];\r\n  const [maxX, maxY] = [projW - minX, projH - minY];\r\n\r\n  const deltaX = x < minX ? minX - x : x > maxX ? maxX - x : 0;\r\n  const deltaY = y < minY ? minY - y : y > maxY ? maxY - y : 0;\r\n\r\n  return [deltaX, deltaY];\r\n};\r\n\r\nconst putCenterBack = (view: paper.View, projSize: paper.Size) => {\r\n  const [deltaX, deltaY] = getCenterTranslate(view, projSize);\r\n  let aniCount = 10;\r\n  const dP = new Point(deltaX, deltaY).divide(-aniCount);\r\n  const move = () => {\r\n    view.translate(dP);\r\n    if (--aniCount > 0) requestAnimationFrame(move);\r\n  };\r\n  move();\r\n};\r\n\r\nconst checkLasso = (layer: paper.Layer, selection: paper.Path) => {\r\n  const isInside = (p: paper.Path) => {\r\n    const res = p.subtract(selection, { insert: false, trace: false });\r\n    res.remove();\r\n    return !res.compare(p);\r\n  };\r\n  const items = [\r\n    ...layer.getItems({\r\n      class: paper.Path,\r\n      overlapping: selection.bounds,\r\n      match: isInside,\r\n    }),\r\n    // can't get partially overlapped text items\r\n    ...layer.getItems({\r\n      class: paper.PointText,\r\n      match: (t: paper.PointText) => {\r\n        const checkedP = new Path.Rectangle(t.bounds);\r\n        checkedP.remove();\r\n        return isInside(checkedP);\r\n      },\r\n    }),\r\n  ];\r\n  return items.map(({ name }) => name).filter((n) => n);\r\n};\r\n\r\nconst checkRect = (layer: paper.Layer, { bounds }: paper.Path.Rectangle) => {\r\n  const items = [\r\n    ...layer.getItems({ class: paper.Path, overlapping: bounds }),\r\n    // can't get partially overlapped text items\r\n    ...layer.getItems({\r\n      class: paper.PointText,\r\n      match: (t: paper.PointText) => t.bounds.intersects(bounds),\r\n    }),\r\n  ];\r\n  return items.map(({ name }) => name).filter((n) => n);\r\n};\r\n\r\nconst updateGroupStyle = (items: paper.Item[], updated: Partial<DrawCtrl>) => {\r\n  const { lineWidth, color, highlight } = updated;\r\n  items.forEach((item) => {\r\n    if (item instanceof paper.PointText && color) {\r\n      const newColor = new Color(color);\r\n      item.fillColor = newColor;\r\n    }\r\n\r\n    if (!(item instanceof paper.Path)) return;\r\n\r\n    if (color) {\r\n      const newColor = new Color(color);\r\n      if (item.blendMode === \"multiply\") newColor.alpha = 0.5;\r\n      item.strokeColor = newColor;\r\n    }\r\n\r\n    if (lineWidth) item.strokeWidth = lineWidth;\r\n\r\n    if (!item.strokeColor || highlight === undefined) return;\r\n    item.strokeColor.alpha = highlight ? 0.5 : 1;\r\n    item.blendMode = highlight ? \"multiply\" : \"normal\";\r\n  });\r\n};\r\n\r\nconst getClickedText = (scope: paper.PaperScope, point: paper.Point) => {\r\n  const hitRes = scope.project.hitTest(point, {\r\n    class: paper.PointText,\r\n    fill: true,\r\n  });\r\n  return hitRes?.item;\r\n};\r\n","import { Button, message } from \"antd\";\r\nimport React, { useContext } from \"react\";\r\nimport { ReaderMethodCtx } from \"./Reader\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nexport const AddPageButton = () => {\r\n  const { addFinalPage } = useContext(ReaderMethodCtx);\r\n  return (\r\n    <div className=\"add-btn-wrapper\">\r\n      <Button\r\n        type=\"dashed\"\r\n        icon={<PlusOutlined />}\r\n        block\r\n        onClick={addFinalPage}\r\n      >\r\n        New page\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const showPageDelMsg = (onUndo: () => void) => {\r\n  message.warning({\r\n    content: (\r\n      <>\r\n        One page was deleted.\r\n        <Button\r\n          size=\"small\"\r\n          type=\"link\"\r\n          onClick={() => {\r\n            message.destroy(\"DELETE\");\r\n            onUndo();\r\n          }}\r\n        >\r\n          Undo\r\n        </Button>\r\n      </>\r\n    ),\r\n    key: \"DELETE\",\r\n    duration: 10,\r\n  });\r\n};\r\n","export function exchange<T>(list: T[], fromIndex: number, toIndex: number) {\r\n  const result = list.slice();\r\n  const [removed] = result.splice(fromIndex, 1);\r\n  result.splice(toIndex, 0, removed);\r\n  return result;\r\n}\r\n\r\nexport function insertAfter<T>(list: T[], prevItem: T, newItem: T) {\r\n  const prevIndex = list.indexOf(prevItem);\r\n  const curr = list.slice();\r\n  if (prevIndex === -1) return curr;\r\n  curr.splice(prevIndex + 1, 0, newItem);\r\n  return curr;\r\n}\r\n","import { createFromIconfontCN } from \"@ant-design/icons\";\r\n\r\nexport default createFromIconfontCN({\r\n  scriptUrl: \"//at.alicdn.com/t/font_3181679_yo844n7qgns.js\",\r\n});\r\n","import { CSSProperties, FC, useEffect, useMemo, useState } from \"react\";\r\nimport { defaultWidthList, DrawCtrl } from \"../../../lib/draw/drawCtrl\";\r\nimport { ColorCirle } from \"../../widgets/ColorCircle\";\r\nimport { WIDTH } from \"../../../lib/draw/DrawState\";\r\nimport { Popover, Segmented, Slider } from \"antd\";\r\nimport { allColors } from \"../../../lib/color\";\r\nimport { Setter } from \"../../../lib/hooks\";\r\nimport IconFont from \"../../ui/IconFont\";\r\nimport { List } from \"immutable\";\r\nimport \"./penPanel.sass\";\r\n\r\nexport const PenPanel: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n  drawCtrl: Partial<DrawCtrl>;\r\n}> = ({ updateDrawCtrl, drawCtrl }) => {\r\n  const { highlight, color } = drawCtrl;\r\n  const [panelBlur, setPanelBlur] = useState(false);\r\n\r\n  return (\r\n    <div className=\"pen-panel\" data-blur={panelBlur} data-hi={highlight}>\r\n      <div className=\"pen-status\">\r\n        <WidthSelect\r\n          updateDrawCtrl={updateDrawCtrl}\r\n          drawCtrl={drawCtrl}\r\n          setPanelBlur={setPanelBlur}\r\n        />\r\n        <HighlightSwitch checked={highlight} updateDrawCtrl={updateDrawCtrl} />\r\n      </div>\r\n      <ColorSelect\r\n        color={color || \"\"}\r\n        setColor={(c) => updateDrawCtrl({ color: c })}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const WidthSelect: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n  drawCtrl: Partial<DrawCtrl>;\r\n  setPanelBlur?: Setter<boolean>;\r\n  field?: \"lineWidth\" | \"eraserWidth\";\r\n}> = ({\r\n  updateDrawCtrl,\r\n  drawCtrl,\r\n  setPanelBlur = () => {},\r\n  field = \"lineWidth\",\r\n}) => {\r\n  const currWidth = drawCtrl[field];\r\n  const widthList = drawCtrl.widthList ?? defaultWidthList;\r\n  const color = field === \"lineWidth\" ? drawCtrl.color ?? \"#aaa\" : \"#aaa\";\r\n\r\n  const chosen = useMemo(\r\n    () => widthList.indexOf(currWidth ?? -1),\r\n    [currWidth, widthList]\r\n  );\r\n\r\n  const [popShow, setPopShow] = useState(List([false, false, false, false]));\r\n  useEffect(() => {\r\n    if (popShow.includes(true)) setPanelBlur(true);\r\n    else setPanelBlur(false);\r\n  }, [popShow, setPanelBlur]);\r\n\r\n  const realSizeStyle = (width: number) =>\r\n    ({\r\n      \"--real-size\": `calc(${100 / WIDTH}vw * ${width})`,\r\n    } as CSSProperties);\r\n\r\n  const options = [\r\n    { value: -1, label: null },\r\n    ...widthList.map((width, index) => ({\r\n      value: index,\r\n      label: (\r\n        <Popover\r\n          visible={popShow.get(index)}\r\n          onVisibleChange={(v) => setPopShow((prev) => prev.set(index, v))}\r\n          trigger={chosen === index ? [\"click\"] : []}\r\n          placement=\"bottom\"\r\n          destroyTooltipOnHide\r\n          content={\r\n            <Slider\r\n              min={5}\r\n              max={100}\r\n              className=\"ctrl-slider\"\r\n              defaultValue={width}\r\n              onAfterChange={(w) => {\r\n                if (widthList.includes(w)) {\r\n                  setPopShow((prev) => prev.set(index, false));\r\n                  return updateDrawCtrl({ [field]: w });\r\n                }\r\n                const newWL = widthList.slice();\r\n                newWL[index] = w;\r\n                updateDrawCtrl({ widthList: newWL, [field]: w });\r\n              }}\r\n            />\r\n          }\r\n        >\r\n          <div className=\"circle-wrapper\" style={realSizeStyle(width)}>\r\n            <ColorCirle className={\"width-circle \" + field} color={color} />\r\n          </div>\r\n        </Popover>\r\n      ),\r\n    })),\r\n  ];\r\n\r\n  return (\r\n    <Segmented\r\n      className=\"width-seg\"\r\n      value={chosen}\r\n      options={options}\r\n      onChange={(i) => updateDrawCtrl({ [field]: widthList[+i] ?? 10 })}\r\n    />\r\n  );\r\n};\r\n\r\nconst HighlightSwitch: FC<{\r\n  checked?: boolean;\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ checked = false, updateDrawCtrl }) => {\r\n  return (\r\n    <label className=\"hi-wrapper\">\r\n      <input\r\n        type=\"checkbox\"\r\n        name=\"highlight\"\r\n        checked={checked}\r\n        onChange={(e) => updateDrawCtrl({ highlight: e.target.checked })}\r\n      />\r\n      <div className=\"hi-switch\">\r\n        <IconFont type=\"icon-Highlight\" />\r\n      </div>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport const ColorSelect: FC<{\r\n  color: string;\r\n  setColor: (color: string) => void;\r\n}> = ({ setColor, color }) => {\r\n  return (\r\n    <div className=\"color-select\">\r\n      {allColors.map((c) => (\r\n        <label key={c}>\r\n          <input\r\n            checked={color === c}\r\n            type=\"radio\"\r\n            name=\"color\"\r\n            onChange={(e) => e.target.checked && setColor(c)}\r\n          />\r\n          <div\r\n            data-color={c}\r\n            className=\"circle\"\r\n            style={{ backgroundColor: c, borderColor: c }}\r\n          />\r\n        </label>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import { FC, RefObject, useContext, useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  CopyOutlined,\r\n  DeleteOutlined,\r\n  PictureOutlined,\r\n  BgColorsOutlined,\r\n  CaretLeftOutlined,\r\n  AlignLeftOutlined,\r\n  FontColorsOutlined,\r\n  CaretRightOutlined,\r\n  AlignRightOutlined,\r\n  RotateRightOutlined,\r\n  AlignCenterOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Button, ButtonProps, Modal, Popover, Radio } from \"antd\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { DrawCtrl } from \"../../../lib/draw/drawCtrl\";\r\nimport { ColorSelect, PenPanel } from \"./PenPanel\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { DrawRefType } from \"../../draw/Draw\";\r\nimport { allColors } from \"../../../lib/color\";\r\nimport { useDrag } from \"@use-gesture/react\";\r\nimport { ReaderStateCtx } from \"../Reader\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { saveAs } from \"file-saver\";\r\nimport \"./drawTools.sass\";\r\n\r\nexport const SelectTool: FC<{\r\n  drawRef: RefObject<DrawRefType>;\r\n  visible: boolean;\r\n}> = ({ drawRef, visible }) => (\r\n  <CSSTransition timeout={300} in={visible} unmountOnExit>\r\n    <SelectToolContent drawRef={drawRef} />\r\n  </CSSTransition>\r\n);\r\n\r\nexport const SelectToolContent: FC<{\r\n  drawRef: RefObject<DrawRefType>;\r\n}> = ({ drawRef }) => {\r\n  const btnProps: ButtonProps = {\r\n    type: \"text\",\r\n    shape: \"round\",\r\n    size: \"small\",\r\n  };\r\n\r\n  const [currDrawCtrl, setCurrDrawCtrl] = useState<Partial<DrawCtrl>>({});\r\n  const rotateEl = useRef<HTMLDivElement>(null);\r\n  const [dragged, setDragged] = useState(false);\r\n  const [transX, setTransX] = useState(0);\r\n  const gearStyle = { transform: `translateX(${transX}px)` };\r\n\r\n  useDrag(\r\n    ({ first, last, offset, delta }) => {\r\n      setTransX(offset[0]);\r\n      drawRef.current?.rotateSelected(delta[0] / 2, last);\r\n      first && setDragged(true);\r\n      last && setDragged(false);\r\n    },\r\n    {\r\n      target: rotateEl,\r\n      filterTaps: true,\r\n      rubberband: 0.05,\r\n      bounds: { left: -90, right: 90 },\r\n    }\r\n  );\r\n\r\n  const getRaster = () => {\r\n    if (!drawRef.current) return;\r\n    const imageData = drawRef.current.rasterize();\r\n    Modal.confirm({\r\n      title: \"Screenshot\",\r\n      content: <img className=\"raster\" src={imageData} alt=\"raster\" />,\r\n      className: \"raster-modal\",\r\n      icon: <PictureOutlined />,\r\n      okText: \"Save\",\r\n      onOk: () => saveAs(imageData, \"screenshot\"),\r\n    });\r\n  };\r\n\r\n  return createPortal(\r\n    <div className=\"select-tool\">\r\n      <Popover\r\n        trigger=\"click\"\r\n        placement=\"bottom\"\r\n        getPopupContainer={(e) => e.parentElement!}\r\n        destroyTooltipOnHide\r\n        content={\r\n          <PenPanel\r\n            updateDrawCtrl={(updated) => {\r\n              setCurrDrawCtrl((prev) => ({ ...prev, ...updated }));\r\n              drawRef.current?.mutateStyle(updated);\r\n            }}\r\n            drawCtrl={currDrawCtrl}\r\n          />\r\n        }\r\n      >\r\n        <Button icon={<BgColorsOutlined />} {...btnProps} />\r\n      </Popover>\r\n      <div className=\"rotate-wrapper\" data-dragged={dragged} ref={rotateEl}>\r\n        <Button\r\n          icon={<RotateRightOutlined />}\r\n          onClick={() => drawRef.current?.rotateSelected(90, true)}\r\n          {...btnProps}\r\n        />\r\n        <CaretLeftOutlined className=\"arrow left\" />\r\n        <CaretRightOutlined className=\"arrow right\" />\r\n        <div className=\"gear\" style={gearStyle} />\r\n      </div>\r\n      <Button\r\n        icon={<CopyOutlined />}\r\n        onClick={() => drawRef.current?.duplicateSelected()}\r\n        {...btnProps}\r\n      />\r\n      <Button icon={<PictureOutlined />} onClick={getRaster} {...btnProps} />\r\n      <Button\r\n        danger\r\n        icon={<DeleteOutlined />}\r\n        onClick={() => drawRef.current?.deleteSelected()}\r\n        {...btnProps}\r\n      />\r\n    </div>,\r\n    document.querySelector(\".reader.container > header\")!\r\n  );\r\n};\r\n\r\nexport const TextTool: FC<{\r\n  drawRef: RefObject<DrawRefType>;\r\n  visible: boolean;\r\n}> = ({ visible, drawRef }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [color, setColor] = useState(allColors[0]);\r\n  const [align, setAlign] = useState(\"center\");\r\n  const { forceLight } = useContext(ReaderStateCtx);\r\n\r\n  useEffect(() => {\r\n    const pointText = drawRef.current?.pointText;\r\n    if (!pointText || !visible) return;\r\n    const { name, content, justification, fillColor } = pointText;\r\n    setAlign(justification);\r\n    if (name) {\r\n      setText(content);\r\n      setColor(fillColor?.toCSS(true) ?? allColors[0]);\r\n    } else {\r\n      setText(\"\");\r\n      setColor(allColors[0]);\r\n    }\r\n  }, [visible, drawRef]);\r\n\r\n  const fontColorBtn = (\r\n    <Popover\r\n      content={<ColorSelect color={color} setColor={setColor} />}\r\n      overlayStyle={{ width: 200 }}\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e.parentElement!}\r\n    >\r\n      <Button\r\n        size=\"small\"\r\n        icon={<FontColorsOutlined className=\"font-icon\" style={{ color }} />}\r\n      />\r\n    </Popover>\r\n  );\r\n\r\n  const alignRadio = (\r\n    <Radio.Group\r\n      size=\"small\"\r\n      optionType=\"button\"\r\n      value={align}\r\n      buttonStyle=\"solid\"\r\n      onChange={(e) => setAlign(e.target.value)}\r\n      options={[\r\n        { label: <AlignLeftOutlined />, value: \"left\" },\r\n        { label: <AlignCenterOutlined />, value: \"center\" },\r\n        { label: <AlignRightOutlined />, value: \"right\" },\r\n      ]}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      title=\"Insert text\"\r\n      onCancel={() => drawRef.current?.cancelText()}\r\n      onOk={() => {\r\n        const content = text.trim();\r\n        if (!content) return drawRef.current?.cancelText();\r\n        drawRef.current?.submitText(content, color, align);\r\n      }}\r\n      bodyStyle={{ paddingTop: 0 }}\r\n      destroyOnClose\r\n    >\r\n      <div className=\"insert-option\" data-force-light={forceLight}>\r\n        {fontColorBtn}\r\n        {alignRadio}\r\n      </div>\r\n      <TextArea\r\n        size=\"large\"\r\n        rows={3}\r\n        autoFocus\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n","import { useDebugValue, useEffect, useMemo, useRef, useState } from \"react\";\nimport localforage from \"localforage\";\nimport { Map } from \"immutable\";\n\nexport function useScrollPage(noteID: string, pageOrder = [] as string[]) {\n  const [refMap, setRefMap] = useState(Map<string, HTMLElement>());\n  const scrolled = useRef(false);\n  const [prevPageID, setPrevPageID] = useState(\"\");\n  const [inviewRatios, setInviewRatios] = useState(Map<string, number>());\n  const currPageID = useMemo(\n    () => largestKey(inviewRatios, pageOrder),\n    [inviewRatios, pageOrder]\n  );\n  useDebugValue(currPageID);\n\n  useEffect(() => {\n    const loadPrevPageID = async () => {\n      const stored = await localforage.getItem<string>(`SCROLL_${noteID}`);\n      if (!stored) return (scrolled.current = true);\n      setPrevPageID(stored);\n    };\n    loadPrevPageID();\n  }, [noteID]);\n\n  useEffect(() => {\n    if (scrolled.current || !refMap.has(prevPageID)) return;\n    requestAnimationFrame(() => {\n      refMap.get(prevPageID)?.scrollIntoView();\n      scrolled.current = true;\n    });\n  }, [prevPageID, refMap]);\n\n  useEffect(() => {\n    if (!scrolled.current) return;\n    localforage.setItem(`SCROLL_${noteID}`, currPageID);\n  }, [currPageID, noteID]);\n\n  const setRef = (pageID: string, el: HTMLElement | null) => {\n    if (!el) return;\n    setRefMap((prev) => prev.set(pageID, el));\n  };\n\n  const scrollPage = (pageID: string) => {\n    refMap.get(pageID)?.scrollIntoView();\n  };\n\n  return { scrollPage, setInviewRatios, setRef, currPageID };\n}\n\nconst largestKey = (map: Map<string, number>, order: string[]) => {\n  let result = \"\";\n  let maxRatio = 0;\n  for (let key of order) {\n    const ratio = map.get(key);\n    if (!ratio) continue;\n    if (ratio === 1) return key;\n    if (ratio > maxRatio) {\n      result = key;\n      maxRatio = ratio;\n    }\n  }\n  return result;\n};\n","import { FC, useContext } from \"react\";\r\nimport { Button, message, Popover, ButtonProps } from \"antd\";\r\nimport { ReaderMethodCtx, ReaderStateCtx } from \"../Reader\";\r\nimport { DrawCtrl, saveDrawCtrl } from \"../../../lib/draw/drawCtrl\";\r\nimport {\r\n  BulbFilled,\r\n  BulbOutlined,\r\n  UndoOutlined,\r\n  RedoOutlined,\r\n  GatewayOutlined,\r\n  HighlightOutlined,\r\n} from \"@ant-design/icons\";\r\nimport IconFont from \"../../ui/IconFont\";\r\nimport { PenPanel, WidthSelect } from \"../tools/PenPanel\";\r\n\r\nexport const HeaderMiddle = () => {\r\n  const { stateSet, drawCtrl, forceLight } = useContext(ReaderStateCtx);\r\n  const { setDrawCtrl, handleUndo, handleRedo, setForceLight } =\r\n    useContext(ReaderMethodCtx);\r\n  const { mode, finger } = drawCtrl;\r\n\r\n  const updateDrawCtrl = (updated: Partial<DrawCtrl>) => {\r\n    setDrawCtrl((prev) => {\r\n      const newCtrl = { ...prev, ...updated };\r\n      saveDrawCtrl(newCtrl);\r\n      return newCtrl;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"middle\">\r\n      <Button\r\n        type=\"text\"\r\n        shape=\"circle\"\r\n        icon={<UndoOutlined />}\r\n        onClick={handleUndo}\r\n        disabled={!stateSet?.isUndoable()}\r\n      />\r\n      <Button\r\n        type=\"text\"\r\n        shape=\"circle\"\r\n        icon={<RedoOutlined />}\r\n        onClick={handleRedo}\r\n        disabled={!stateSet?.isRedoable()}\r\n      />\r\n      <Button\r\n        type={finger ? \"default\" : \"text\"}\r\n        shape=\"circle\"\r\n        onClick={() => {\r\n          updateDrawCtrl({ finger: !finger });\r\n          message.destroy(\"FINGER\");\r\n          message.open({\r\n            content: finger ? \"Pencil only\" : \"Draw with finger\",\r\n            key: \"FINGER\",\r\n          });\r\n        }}\r\n        icon={<IconFont type=\"icon-finger\" />}\r\n      />\r\n      <Button\r\n        className=\"force-light-btn\"\r\n        type=\"text\"\r\n        shape=\"circle\"\r\n        icon={forceLight ? <BulbFilled /> : <BulbOutlined />}\r\n        onClick={() => setForceLight((prev) => !prev)}\r\n      />\r\n      <PenButton updateDrawCtrl={updateDrawCtrl} />\r\n      <EraserButton updateDrawCtrl={updateDrawCtrl} />\r\n      <Button\r\n        type={mode === \"text\" ? \"default\" : \"text\"}\r\n        shape=\"circle\"\r\n        onClick={() => updateDrawCtrl({ mode: \"text\" })}\r\n        icon={<IconFont type=\"icon-text1\" />}\r\n      />\r\n      <SelectButton updateDrawCtrl={updateDrawCtrl} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PenButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const { drawCtrl } = useContext(ReaderStateCtx);\r\n  const { mode } = drawCtrl;\r\n\r\n  const btnProps: ButtonProps = {\r\n    shape: \"circle\",\r\n    icon: <HighlightOutlined />,\r\n  };\r\n  return mode === \"draw\" ? (\r\n    <Popover\r\n      content={<PenPanel updateDrawCtrl={updateDrawCtrl} drawCtrl={drawCtrl} />}\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e.parentElement!}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button type=\"default\" {...btnProps} />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      onClick={() => updateDrawCtrl({ mode: \"draw\" })}\r\n      {...btnProps}\r\n    />\r\n  );\r\n};\r\n\r\nconst EraserButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const { drawCtrl } = useContext(ReaderStateCtx);\r\n\r\n  const btnProps: ButtonProps = {\r\n    shape: \"circle\",\r\n    icon: <IconFont type=\"icon-eraser\" />,\r\n  };\r\n\r\n  return drawCtrl.mode === \"erase\" ? (\r\n    <Popover\r\n      content={\r\n        <div className=\"width-seg-wrapper\">\r\n          <WidthSelect\r\n            drawCtrl={drawCtrl}\r\n            updateDrawCtrl={updateDrawCtrl}\r\n            field=\"eraserWidth\"\r\n          />\r\n        </div>\r\n      }\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e.parentElement!}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button type=\"default\" {...btnProps} />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      onClick={() => updateDrawCtrl({ mode: \"erase\" })}\r\n      {...btnProps}\r\n    />\r\n  );\r\n};\r\n\r\nconst SelectButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const {\r\n    drawCtrl: { lasso, mode },\r\n  } = useContext(ReaderStateCtx);\r\n\r\n  const icon = lasso ? <IconFont type=\"icon-lasso1\" /> : <GatewayOutlined />;\r\n\r\n  return mode === \"select\" ? (\r\n    <Button\r\n      type=\"default\"\r\n      shape=\"circle\"\r\n      icon={icon}\r\n      onClick={() => updateDrawCtrl({ lasso: !lasso })}\r\n    />\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      shape=\"circle\"\r\n      icon={icon}\r\n      onClick={() => updateDrawCtrl({ mode: \"select\" })}\r\n    />\r\n  );\r\n};\r\n","import { Avatar } from \"antd\";\nimport { AvatarSize } from \"antd/lib/avatar/SizeContext\";\nimport { FC, useContext, useMemo } from \"react\";\nimport { getHashedColor } from \"../../lib/color\";\nimport { TeamCtx } from \"../reader/Team\";\n\nexport const UserAvatar: FC<{\n  userID: string;\n  size?: AvatarSize;\n  onClick?: () => void;\n  chosen?: boolean;\n  className?: string;\n}> = ({\n  userID,\n  size = \"default\",\n  onClick = () => {},\n  chosen = false,\n  className,\n}) => {\n  const { userRec } = useContext(TeamCtx);\n  const color = useMemo(() => getHashedColor(userID), [userID]);\n  const userInfo = userRec[userID];\n  if (!userInfo) return null;\n  const { userName } = userInfo;\n\n  return (\n    <Avatar\n      className={className}\n      data-chosen={chosen}\n      size={size}\n      style={{ backgroundColor: color }}\n    >\n      <div className=\"avatar-wrapper\" onClick={onClick}>\n        {userName?.slice(0, 3)}\n      </div>\n    </Avatar>\n  );\n};\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n} from \"react\";\r\nimport {\r\n  MoreOutlined,\r\n  PlusOutlined,\r\n  CopyOutlined,\r\n  DeleteOutlined,\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  Draggable,\r\n  Droppable,\r\n  DropResult,\r\n  DragDropContext,\r\n} from \"react-beautiful-dnd\";\r\nimport { PageWrapper, ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport { Avatar, Button, Drawer, Menu, Popover, Tabs } from \"antd\";\r\nimport { AddPageButton } from \"./ReaderUtils\";\r\nimport { exchange } from \"./lib/array\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport IconFont from \"../ui/IconFont\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport \"./preview.sass\";\r\nimport { UserAvatar } from \"../widgets/UserAvatar\";\r\nimport classNames from \"classnames\";\r\n\r\nconst PreviewCtx = React.createContext({\r\n  activeKey: \"ALL\",\r\n  setActiveKey: (() => {}) as Setter<string>,\r\n});\r\n\r\nconst PageNavContent = () => {\r\n  const { pageOrder, currPageID, forceLight } = useContext(ReaderStateCtx);\r\n  const { scrollPage, saveReorder } = useContext(ReaderMethodCtx);\r\n  const { activeKey } = useContext(PreviewCtx);\r\n  const refRec = useRef<Record<string, HTMLElement>>({});\r\n\r\n  const onDragEnd = ({ source, destination }: DropResult) => {\r\n    if (!destination || !pageOrder) return;\r\n    const { index: fromIndex } = source;\r\n    const { index: toIndex } = destination;\r\n    if (fromIndex === toIndex) return;\r\n    const pageID = pageOrder[fromIndex];\r\n    const newOrder = exchange(pageOrder, fromIndex, toIndex);\r\n    saveReorder(newOrder, true);\r\n    requestAnimationFrame(() => scrollPage(pageID));\r\n  };\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => refRec.current[currPageID]?.scrollIntoView(), []);\r\n\r\n  return (\r\n    <div className=\"preview-container\" data-force-light={forceLight}>\r\n      <PreviewTabs />\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"preview-list\">\r\n          {({ droppableProps, innerRef, placeholder }) => (\r\n            <div className=\"page-list\" ref={innerRef} {...droppableProps}>\r\n              {pageOrder?.map((uid, index) => (\r\n                <PagePreview\r\n                  key={uid}\r\n                  uid={uid}\r\n                  pageIndex={index}\r\n                  refRec={refRec.current}\r\n                />\r\n              ))}\r\n              {placeholder}\r\n              {activeKey === \"ALL\" && <AddPageButton />}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PagePreview: FC<{\r\n  uid: string;\r\n  pageIndex: number;\r\n  refRec: Record<string, HTMLElement>;\r\n}> = ({ uid, pageIndex, refRec }) => {\r\n  const { stateSet, teamState, pageRec, currPageID } =\r\n    useContext(ReaderStateCtx);\r\n  const { scrollPage } = useContext(ReaderMethodCtx);\r\n  const { activeKey } = useContext(PreviewCtx);\r\n  const [chosen, setChosen] = useState(\"\");\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n\r\n  if (!page || !drawState) return null;\r\n  const { image, marked } = page;\r\n\r\n  if (\r\n    activeKey === \"WRITTEN\" &&\r\n    drawState.isEmpty() &&\r\n    (!teamStateMap || teamStateMap.every((ds) => ds.isEmpty()))\r\n  ) {\r\n    return null;\r\n  }\r\n  if (activeKey === \"MARKED\" && !marked) return null;\r\n  const curr = currPageID === uid;\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={uid}\r\n      index={pageIndex}\r\n      isDragDisabled={activeKey !== \"ALL\"}\r\n    >\r\n      {(\r\n        { innerRef, draggableProps, dragHandleProps },\r\n        { isDragging: dragged }\r\n      ) => (\r\n        <div\r\n          ref={(e) => {\r\n            innerRef(e);\r\n            if (e) refRec[uid] = e;\r\n          }}\r\n          className=\"page\"\r\n          data-curr={curr}\r\n          data-dragged={dragged}\r\n          onClick={() => scrollPage(uid)}\r\n          {...draggableProps}\r\n          {...dragHandleProps}\r\n        >\r\n          <PageWrapper\r\n            uid={uid}\r\n            drawState={teamStateMap?.get(chosen) || drawState}\r\n            teamStateMap={chosen ? undefined : teamStateMap}\r\n            thumbnail={image}\r\n            preview\r\n          />\r\n          <PreviewTools\r\n            uid={uid}\r\n            index={pageIndex}\r\n            chosen={chosen}\r\n            setChosen={setChosen}\r\n          />\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst PreviewTools: FC<{\r\n  uid: string;\r\n  index: number;\r\n  chosen: string;\r\n  setChosen: Setter<string>;\r\n}> = ({ uid, index, chosen, setChosen }) => {\r\n  const { switchPageMarked } = useContext(ReaderMethodCtx);\r\n  const { teamState, pageRec } = useContext(ReaderStateCtx);\r\n  const { ignores } = useContext(TeamCtx);\r\n  const userIDs = useMemo(\r\n    () =>\r\n      teamState\r\n        ?.getPageValidUsers(uid)\r\n        .filter((userID) => !ignores.has(userID)) || [],\r\n    [teamState, ignores, uid]\r\n  );\r\n  const page = pageRec?.get(uid);\r\n  if (!page) return null;\r\n  const { marked } = page;\r\n\r\n  return (\r\n    <div className=\"tools\" onClick={(e) => e.stopPropagation()}>\r\n      <span\r\n        className=\"bookmark\"\r\n        data-marked={marked}\r\n        onClick={() => switchPageMarked(uid)}\r\n      />\r\n      <span className=\"index\">{index + 1}</span>\r\n      <PreviewOption uid={uid} />\r\n      <TeamAvatars userIDs={userIDs} chosen={chosen} setChosen={setChosen} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TeamAvatars: FC<{\r\n  userIDs: string[];\r\n  chosen: string;\r\n  setChosen: Setter<string>;\r\n}> = ({ userIDs, chosen, setChosen }) => {\r\n  return (\r\n    <Avatar.Group\r\n      maxCount={2}\r\n      size=\"default\"\r\n      className={classNames(\"team-group\", { chosen })}\r\n      maxPopoverPlacement=\"bottom\"\r\n    >\r\n      {userIDs.map((userID) => (\r\n        <UserAvatar\r\n          key={userID}\r\n          size=\"default\"\r\n          userID={userID}\r\n          className=\"preview-avatar\"\r\n          chosen={chosen === userID}\r\n          onClick={() => setChosen((prev) => (prev === userID ? \"\" : userID))}\r\n        />\r\n      ))}\r\n    </Avatar.Group>\r\n  );\r\n};\r\n\r\nconst PreviewOption = ({ uid }: { uid: string }) => {\r\n  const { addPage, deletePage } = useContext(ReaderMethodCtx);\r\n\r\n  const menu = (\r\n    <Menu\r\n      onClick={({ key }) => {\r\n        if (key === \"ADD\") {\r\n          addPage(uid);\r\n        } else if (key === \"COPY\") {\r\n          addPage(uid, true);\r\n        } else if (key === \"DELETE\") {\r\n          deletePage(uid);\r\n        }\r\n      }}\r\n      items={[\r\n        { key: \"ADD\", icon: <PlusOutlined />, label: \"Add page\" },\r\n        { key: \"COPY\", icon: <CopyOutlined />, label: \"Duplicate\" },\r\n        {\r\n          key: \"DELETE\",\r\n          icon: <DeleteOutlined />,\r\n          label: \"Delete\",\r\n          danger: true,\r\n        },\r\n      ]}\r\n    ></Menu>\r\n  );\r\n  return (\r\n    <Popover\r\n      content={menu}\r\n      trigger=\"click\"\r\n      placement=\"left\"\r\n      destroyTooltipOnHide\r\n    >\r\n      <span className=\"option\">\r\n        <MoreOutlined />\r\n      </span>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst PreviewTabs = () => {\r\n  const { activeKey, setActiveKey } = useContext(PreviewCtx);\r\n  const { TabPane } = Tabs;\r\n  return (\r\n    <Tabs\r\n      className=\"tabs\"\r\n      activeKey={activeKey}\r\n      onChange={setActiveKey}\r\n      tabBarGutter={10}\r\n      size=\"small\"\r\n      centered\r\n    >\r\n      <TabPane tab={<IconFont type=\"icon-uf_paper\" />} key=\"ALL\" />\r\n      <TabPane tab={<IconFont type=\"icon-bookmark2\" />} key=\"MARKED\" />\r\n      <TabPane tab={<IconFont type=\"icon-write\" />} key=\"WRITTEN\" />\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default function PageNav() {\r\n  const [navOn, setNavOn] = useState(false);\r\n  const [activeKey, setActiveKey] = useState<string>(\"ALL\");\r\n  const title = {\r\n    ALL: \"All Pages\",\r\n    MARKED: \"Bookmarks\",\r\n    WRITTEN: \"Notes\",\r\n  }[activeKey];\r\n\r\n  return (\r\n    <PreviewCtx.Provider value={{ activeKey, setActiveKey }}>\r\n      <Button\r\n        type=\"text\"\r\n        icon={navOn ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\r\n        onClick={() => setNavOn((prev) => !prev)}\r\n      />\r\n      <Drawer\r\n        visible={navOn}\r\n        onClose={() => setNavOn(false)}\r\n        width={200}\r\n        title={title}\r\n        closable={false}\r\n        zIndex={800}\r\n        className=\"preview-drawer\"\r\n        bodyStyle={{ padding: 0, overflow: \"hidden\" }}\r\n        headerStyle={{ textAlign: \"center\" }}\r\n        destroyOnClose\r\n      >\r\n        <PageNavContent />\r\n      </Drawer>\r\n    </PreviewCtx.Provider>\r\n  );\r\n}\r\n","import { FC, useMemo, useState, useEffect, useContext } from \"react\";\r\nimport { Badge, Alert, Modal, Button, Divider, message, Popover } from \"antd\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { PasscodeInput } from \"antd-mobile\";\r\nimport { ReaderMethodCtx, ReaderStateCtx } from \"../Reader\";\r\nimport { TeamCtx } from \"../Team\";\r\nimport { getUserID, saveUserName } from \"../../../lib/user\";\r\nimport PageNav from \"../PageNav\";\r\nimport {\r\n  EyeOutlined,\r\n  FormOutlined,\r\n  TeamOutlined,\r\n  CopyOutlined,\r\n  CheckOutlined,\r\n  ReloadOutlined,\r\n  ShareAltOutlined,\r\n  DisconnectOutlined,\r\n  EyeInvisibleOutlined,\r\n  UsergroupAddOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { editNoteData } from \"../../../lib/note/archive\";\r\nimport { UserAvatar } from \"../../widgets/UserAvatar\";\r\nimport { putNote } from \"../../../lib/network/http\";\r\nimport copy from \"clipboard-copy\";\r\n\r\nexport const HeaderRight = () => {\r\n  const { teamOn } = useContext(TeamCtx);\r\n  return (\r\n    <div className=\"right\">\r\n      {teamOn ? <RoomInfo /> : <JoinRoom />}\r\n      <PageNav />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst UserCard: FC<{ userID: string }> = ({ userID }) => {\r\n  const [renaming, setRenaming] = useState(false);\r\n  const { ignores, setIgnores, resetIO, userRec } = useContext(TeamCtx);\r\n  const userInfo = userRec[userID];\r\n  useEffect(() => setRenaming(false), [userInfo]);\r\n  if (!userInfo) return null;\r\n\r\n  const { userName, online } = userInfo;\r\n  const self = userID === getUserID();\r\n  const ignored = ignores.has(userID) && !self;\r\n\r\n  const switchIgnore = () => {\r\n    setIgnores((prev) => {\r\n      if (prev.has(userID)) return prev.delete(userID);\r\n      return prev.add(userID);\r\n    });\r\n  };\r\n\r\n  const submitRename = (value: string) => {\r\n    const name = value.trim();\r\n    if (!name || name === userName) return setRenaming(false);\r\n    saveUserName(name);\r\n    resetIO();\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-item\" data-online={online}>\r\n      <UserAvatar userID={userID} size=\"small\" className=\"room-avatar\" />\r\n      {renaming || <span className=\"user-name\">{userName}</span>}\r\n      {renaming && (\r\n        <Search\r\n          autoFocus\r\n          className=\"rename-input\"\r\n          defaultValue={userName}\r\n          onSearch={submitRename}\r\n          enterButton={<Button icon={<CheckOutlined />} />}\r\n        />\r\n      )}\r\n      {self ? (\r\n        renaming || (\r\n          <Button\r\n            type=\"text\"\r\n            icon={<FormOutlined />}\r\n            onClick={() => setRenaming(true)}\r\n          />\r\n        )\r\n      ) : (\r\n        <Button\r\n          type=\"text\"\r\n          icon={ignored ? <EyeInvisibleOutlined /> : <EyeOutlined />}\r\n          onClick={switchIgnore}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RoomInfo: FC = () => {\r\n  const { code, userRec, connected, loadInfo, loadState, resetIO } =\r\n    useContext(TeamCtx);\r\n  const { noteInfo } = useContext(ReaderStateCtx);\r\n  const link = window.location.href;\r\n  const share = async () => {\r\n    const selfName = userRec[getUserID()]?.userName;\r\n    try {\r\n      if (!noteInfo) return;\r\n      await copy(`${noteInfo.name} - ${selfName} - Multibility\\n${link}`);\r\n      message.destroy(\"copy\");\r\n      message.success({\r\n        content: \"Link copied!\",\r\n        icon: <CopyOutlined />,\r\n        key: \"copy\",\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const userList = useMemo(() => {\r\n    const selfID = getUserID();\r\n    const { [selfID]: selfInfo, ...otherUsers } = userRec;\r\n    const list = selfInfo ? [selfInfo] : [];\r\n    const values = Object.values(otherUsers);\r\n    list.push(\r\n      ...values.filter(({ online }) => online),\r\n      ...values.filter(({ online }) => !online)\r\n    );\r\n    return list;\r\n  }, [userRec]);\r\n\r\n  const onlineNum = useMemo(\r\n    () => userList.filter(({ online }) => online).length,\r\n    [userList]\r\n  );\r\n\r\n  const teamPop = (\r\n    <div className=\"team-popover\">\r\n      {connected || (\r\n        <Alert\r\n          className=\"disconn-alert\"\r\n          message=\"Network failed.\"\r\n          icon={<DisconnectOutlined />}\r\n          type=\"error\"\r\n          showIcon\r\n          banner\r\n        />\r\n      )}\r\n      <PasscodeInput\r\n        className=\"code-display\"\r\n        value={String(code)}\r\n        length={4}\r\n        plain\r\n      />\r\n      <Button\r\n        icon={<ShareAltOutlined />}\r\n        className=\"share-btn\"\r\n        onClick={share}\r\n        block\r\n      >\r\n        Share\r\n      </Button>\r\n      <Divider />\r\n      <div className=\"user-list\">\r\n        {userList.map((u) => (\r\n          <UserCard key={u.userID} userID={u.userID} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const [reloading, setReloading] = useState(false);\r\n  const title = (\r\n    <div className=\"team-title\">\r\n      <span>Team info</span>\r\n      <Button\r\n        shape=\"circle\"\r\n        type=\"text\"\r\n        size=\"small\"\r\n        loading={reloading}\r\n        icon={<ReloadOutlined />}\r\n        onClick={async () => {\r\n          setReloading(true);\r\n          await loadInfo();\r\n          await loadState();\r\n          setReloading(false);\r\n          resetIO();\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Popover\r\n      content={teamPop}\r\n      trigger=\"click\"\r\n      placement=\"bottomRight\"\r\n      title={title}\r\n      getPopupContainer={(e) => e.parentElement!}\r\n    >\r\n      <Button\r\n        type=\"text\"\r\n        icon={\r\n          <Badge\r\n            status={connected ? \"success\" : \"error\"}\r\n            count={connected ? onlineNum : \"!\"}\r\n            size=\"small\"\r\n          >\r\n            <TeamOutlined />\r\n          </Badge>\r\n        }\r\n      />\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst JoinRoom = () => {\r\n  const { noteID } = useContext(ReaderStateCtx);\r\n  const { instantSave } = useContext(ReaderMethodCtx);\r\n  const nav = useNavigate();\r\n\r\n  const createRoom = async () => {\r\n    await instantSave();\r\n    const res = await putNote(noteID);\r\n    if (!res) return message.error(\"Can't create room.\");\r\n    await editNoteData(noteID, { team: true });\r\n    nav(\"/team/\" + noteID);\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      type=\"text\"\r\n      icon={<UsergroupAddOutlined />}\r\n      onClick={() => {\r\n        Modal.confirm({\r\n          title: \"Enable team editing\",\r\n          content: \"This will make your note public.\",\r\n          icon: <TeamOutlined style={{ color: \"#555\" }} />,\r\n          onOk: createRoom,\r\n        });\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import { useContext } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ReaderMethodCtx, ReaderStateCtx } from \"../Reader\";\r\nimport { HomeFilled, SaveOutlined } from \"@ant-design/icons\";\r\nimport { HeaderMiddle } from \"./Middle\";\r\nimport { HeaderRight } from \"./Right\";\r\nimport \"./header.sass\";\r\n\r\nexport default function ReaderHeader() {\r\n  return (\r\n    <header>\r\n      <HeaderLeft />\r\n      <HeaderMiddle />\r\n      <HeaderRight />\r\n    </header>\r\n  );\r\n}\r\n\r\nconst HeaderLeft = () => {\r\n  const { saved } = useContext(ReaderStateCtx);\r\n  const { instantSave } = useContext(ReaderMethodCtx);\r\n  const nav = useNavigate();\r\n\r\n  return (\r\n    <div className=\"left\">\r\n      <Button\r\n        type=\"text\"\r\n        onClick={async () => {\r\n          await instantSave();\r\n          nav(\"/\");\r\n        }}\r\n        icon={<HomeFilled style={{ opacity: 0.8 }} />}\r\n      />\r\n      <Button\r\n        type=\"text\"\r\n        className=\"save\"\r\n        onClick={instantSave}\r\n        disabled={saved}\r\n        icon={<SaveOutlined />}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useCallback,\r\n  createContext,\r\n} from \"react\";\r\nimport {\r\n  DrawCtrl,\r\n  getDrawCtrl,\r\n  defaultDrawCtrl,\r\n} from \"../../lib/draw/drawCtrl\";\r\nimport {\r\n  NoteInfo,\r\n  NotePage,\r\n  createPage,\r\n  defaultNotePage,\r\n} from \"../../lib/note/note\";\r\nimport { NewPageInfo, ReorderInfo, SyncInfo } from \"../../lib/network/io\";\r\nimport { useMemoizedFn as useEvent, useSafeState } from \"ahooks\";\r\nimport { SetOperation, StateSet } from \"../../lib/draw/StateSet\";\r\nimport Draw, { ActiveToolKey, DrawRefType } from \"../draw/Draw\";\r\nimport { loadNote, editNoteData } from \"../../lib/note/archive\";\r\nimport { AddPageButton, showPageDelMsg } from \"./ReaderUtils\";\r\nimport { insertAfter } from \"./lib/array\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { SelectTool, TextTool } from \"./tools/DrawTools\";\r\nimport { debounce, last, once, range } from \"lodash-es\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { DrawState } from \"../../lib/draw/DrawState\";\r\nimport { TeamState } from \"../../lib/draw/TeamState\";\r\nimport { useScrollPage } from \"./lib/scroll\";\r\nimport ReaderHeader from \"./header/Header\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport { Map } from \"immutable\";\r\nimport { message } from \"antd\";\r\nimport \"./reader.sass\";\r\n\r\nexport const ReaderStateCtx = createContext({\r\n  noteID: \"\",\r\n  noteInfo: undefined as NoteInfo | undefined,\r\n  stateSet: undefined as StateSet | undefined,\r\n  teamState: undefined as TeamState | undefined,\r\n  pageRec: undefined as Map<string, NotePage> | undefined,\r\n  pageOrder: undefined as string[] | undefined,\r\n  saved: true,\r\n  currPageID: \"\",\r\n  drawCtrl: defaultDrawCtrl,\r\n  forceLight: false,\r\n});\r\n\r\nexport const ReaderMethodCtx = createContext({\r\n  scrollPage: (pageID: string) => {},\r\n  switchPageMarked: (pageID: string) => {},\r\n  updateStateSet: (cb: (prevSS: StateSet) => StateSet) => {},\r\n  addPage: (prevPageID: string, copy?: boolean) => {},\r\n  addFinalPage: () => {},\r\n  deletePage: (pageID: string) => {},\r\n  saveReorder: async (order: string[], push: boolean) => {},\r\n  setInviewRatios: (() => {}) as Setter<Map<string, number>>,\r\n  setDrawCtrl: (() => {}) as Setter<DrawCtrl>,\r\n  instantSave: (() => {}) as () => Promise<void> | undefined,\r\n  handleUndo: () => {},\r\n  handleRedo: () => {},\r\n  setForceLight: (() => {}) as Setter<boolean>,\r\n});\r\n\r\nexport default function Reader() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const nav = useNavigate();\r\n\r\n  const [pageRec, setPageRec] = useState<Map<string, NotePage>>();\r\n  const [noteInfo, setNoteInfo] = useState<NoteInfo>();\r\n  const [stateSet, setStateSet] = useState<StateSet>();\r\n  const [drawCtrl, setDrawCtrl] = useState(defaultDrawCtrl);\r\n  const [pageOrder, setPageOrder] = useState<string[]>();\r\n  const [saved, setSaved] = useSafeState(true);\r\n  const [forceLight, setForceLight] = useState(false);\r\n\r\n  const { io, teamOn, teamState, addTeamStatePage } = useContext(TeamCtx);\r\n  const { setInviewRatios, scrollPage, setRef, currPageID } = useScrollPage(\r\n    noteID,\r\n    pageOrder\r\n  );\r\n\r\n  useEffect(() => {\r\n    const loadNotePages = async () => {\r\n      const storedNote = await loadNote(noteID);\r\n      if (!storedNote) {\r\n        message.error(\"Note not found\");\r\n        return nav(\"/\");\r\n      }\r\n      const { pageRec, pdf, pageOrder, ...noteInfo } = storedNote;\r\n      setPageRec(Map(pageRec));\r\n      setPageOrder(pageOrder);\r\n      setNoteInfo(noteInfo);\r\n      setStateSet(StateSet.createFromPages(pageRec));\r\n      setDrawCtrl(await getDrawCtrl());\r\n    };\r\n    loadNotePages();\r\n  }, [nav, noteID, teamOn]);\r\n\r\n  useEffect(() => {\r\n    if (!noteInfo) return;\r\n    document.title = noteInfo.name + \" - Multibility\";\r\n  }, [noteInfo]);\r\n\r\n  const saver = useEvent(async () => {\r\n    const pr = pageRec?.toObject();\r\n    const canvas = document.querySelector(\"canvas\");\r\n    const thumbnail = canvas?.toDataURL(\"image/jpeg\", 0.1);\r\n    await editNoteData(noteID, { pageRec: pr, thumbnail });\r\n    setSaved(true);\r\n  });\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const debouncedSave = useCallback(debounce(saver, 2000), [saver]);\r\n  const instantSave = debouncedSave.flush;\r\n\r\n  const savePageRec = (pageID: string, cb: (prev: NotePage) => NotePage) => {\r\n    setPageRec((prev) => prev?.update(pageID, defaultNotePage, cb));\r\n    setSaved(false);\r\n    debouncedSave();\r\n  };\r\n\r\n  const saveReorder = async (pageOrder: string[], push = false) => {\r\n    setPageOrder(pageOrder);\r\n    await editNoteData(noteID, { pageOrder });\r\n    await instantSave();\r\n    push && pushReorder(pageOrder);\r\n  };\r\n\r\n  const pushReorder = (pageOrder: string[]) =>\r\n    io?.emit(\"reorder\", { pageOrder });\r\n\r\n  const handleReorder = useEvent(\r\n    ({ deleted, pageOrder, prevOrder }: ReorderInfo) => {\r\n      saveReorder(pageOrder);\r\n      if (!deleted) return;\r\n      showPageDelMsg(() => saveReorder(prevOrder, true));\r\n    }\r\n  );\r\n\r\n  const handleNewPage = useEvent(\r\n    ({ pageOrder, pageID, newPage }: NewPageInfo) => {\r\n      saveReorder(pageOrder);\r\n      savePageRec(pageID, () => newPage);\r\n      setStateSet((prev) => prev?.addState(pageID, newPage));\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    io?.on(\"reorder\", handleReorder);\r\n    io?.on(\"newPage\", handleNewPage);\r\n    return () => void io?.removeAllListeners();\r\n  }, [io, handleReorder, handleNewPage]);\r\n\r\n  const pushOperation = (operation: SetOperation) => {\r\n    const handleSync = ({ pageID, stroke }: SyncInfo) =>\r\n      setStateSet((prev) => prev?.syncStrokeTime(pageID, stroke));\r\n\r\n    io?.emit(\"push\", { operation }, handleSync);\r\n  };\r\n\r\n  const pushNewPage = (\r\n    pageOrder: string[],\r\n    pageID: string,\r\n    newPage: NotePage\r\n  ) => {\r\n    const { image, marked, ...newTeamPage } = newPage;\r\n    io?.emit(\"newPage\", { pageOrder, pageID, newPage: newTeamPage });\r\n    addTeamStatePage(pageID, newPage);\r\n  };\r\n\r\n  const updatePageRec = (pageID: string, ds: DrawState) => {\r\n    const state = DrawState.flaten(ds);\r\n    savePageRec(pageID, (prev) => ({ ...prev, state }));\r\n  };\r\n\r\n  const updateStateSet = (cb: (prevSS: StateSet) => StateSet) => {\r\n    if (!stateSet) return;\r\n    const newSS = cb(stateSet);\r\n    setStateSet(newSS);\r\n    const lastDS = newSS.getLastDS();\r\n    const lastOp = newSS.lastOp;\r\n    if (!lastDS || !lastOp) return;\r\n    updatePageRec(...lastDS);\r\n    pushOperation(lastOp);\r\n  };\r\n\r\n  const switchPageMarked = (pageID: string) =>\r\n    savePageRec(pageID, (prev) => ({ ...prev, marked: !prev.marked }));\r\n\r\n  const addPage = (prevPageID: string, copy = false) => {\r\n    if (!pageOrder) return;\r\n    const prevPage = copy ? pageRec?.get(prevPageID) : undefined;\r\n    const [pageID, newPage] = createPage(prevPage);\r\n    const newOrder = insertAfter(pageOrder, prevPageID, pageID);\r\n    pushNewPage(newOrder, pageID, newPage);\r\n    saveReorder(newOrder);\r\n    savePageRec(pageID, () => newPage);\r\n    setStateSet((prev) => prev?.addState(pageID, newPage));\r\n  };\r\n\r\n  const addFinalPage = () => {\r\n    const lastPageID = last(pageOrder);\r\n    lastPageID && addPage(lastPageID);\r\n  };\r\n\r\n  const deletePage = (pageID: string) => {\r\n    const newOrder = pageOrder?.filter((id) => id !== pageID);\r\n    newOrder?.length && saveReorder(newOrder, true);\r\n  };\r\n\r\n  const handleUndo = () => updateStateSet((prev) => prev.undo());\r\n  const handleRedo = () => updateStateSet((prev) => prev.redo());\r\n  const renderResult = (\r\n    <div className=\"reader container\" data-force-light={forceLight}>\r\n      <ReaderHeader />\r\n      <main>\r\n        {pageOrder?.map((uid) => (\r\n          <section key={uid} className=\"note-page\" ref={(e) => setRef(uid, e)}>\r\n            <PageContainer uid={uid} />\r\n          </section>\r\n        ))}\r\n        <AddPageButton />\r\n      </main>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ReaderStateCtx.Provider\r\n      value={{\r\n        saved,\r\n        noteID,\r\n        pageRec,\r\n        drawCtrl,\r\n        noteInfo,\r\n        stateSet,\r\n        teamState,\r\n        pageOrder,\r\n        currPageID,\r\n        forceLight,\r\n      }}\r\n    >\r\n      <ReaderMethodCtx.Provider\r\n        value={{\r\n          addPage,\r\n          scrollPage,\r\n          deletePage,\r\n          setDrawCtrl,\r\n          saveReorder,\r\n          instantSave,\r\n          addFinalPage,\r\n          handleRedo,\r\n          handleUndo,\r\n          updateStateSet,\r\n          setInviewRatios,\r\n          switchPageMarked,\r\n          setForceLight,\r\n        }}\r\n      >\r\n        {renderResult}\r\n      </ReaderMethodCtx.Provider>\r\n    </ReaderStateCtx.Provider>\r\n  );\r\n}\r\n\r\nconst PageContainer: FC<{ uid: string }> = ({ uid }) => {\r\n  const { pageRec, stateSet, teamState } = useContext(ReaderStateCtx);\r\n  const { updateStateSet } = useContext(ReaderMethodCtx);\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n  const updateState = (ds: DrawState) => {\r\n    updateStateSet((prev) => prev.setState(uid, ds));\r\n  };\r\n\r\n  if (!page || !drawState) return null;\r\n  return (\r\n    <PageWrapper\r\n      drawState={drawState}\r\n      teamStateMap={teamStateMap}\r\n      updateState={updateState}\r\n      pdfIndex={page.pdfIndex}\r\n      uid={uid}\r\n    />\r\n  );\r\n};\r\n\r\nexport const PageWrapper = ({\r\n  thumbnail,\r\n  drawState,\r\n  teamStateMap,\r\n  updateState,\r\n  pdfIndex,\r\n  preview = false,\r\n  uid,\r\n}: {\r\n  uid: string;\r\n  drawState: DrawState;\r\n  teamStateMap?: Map<string, DrawState>;\r\n  thumbnail?: string;\r\n  pdfIndex?: number;\r\n  updateState?: (ds: DrawState) => void;\r\n  preview?: boolean;\r\n}) => {\r\n  const { setInviewRatios } = useContext(ReaderMethodCtx);\r\n  const { noteID } = useContext(ReaderStateCtx);\r\n  const [fullImg, setFullImg] = useState<string>();\r\n  const [ref, visible, entry] = useInView({ threshold: range(0, 1.1, 0.1) });\r\n\r\n  useEffect(() => {\r\n    if (preview) return;\r\n    if (!entry || !visible) {\r\n      setInviewRatios((prev) => prev.delete(uid));\r\n    } else {\r\n      setInviewRatios((prev) => prev.set(uid, entry.intersectionRatio));\r\n    }\r\n  }, [visible, entry, uid, preview, setInviewRatios]);\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const loadImage = useCallback(\r\n    once(async () => {\r\n      if (!pdfIndex) return;\r\n      const { getNotePageImage } = await import(\"../../lib/note/pdfImage\");\r\n      setFullImg(await getNotePageImage(noteID, pdfIndex));\r\n    }),\r\n    [pdfIndex, noteID]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!preview && visible) loadImage();\r\n  }, [visible, preview, loadImage]);\r\n\r\n  const { ignores } = useContext(TeamCtx);\r\n  const otherStates = useMemo(\r\n    () => teamStateMap?.deleteAll(ignores).toList().toArray(),\r\n    [teamStateMap, ignores]\r\n  );\r\n\r\n  const imageLoaded = fullImg || !pdfIndex;\r\n  const drawShow = visible && imageLoaded;\r\n  const maskShow = Boolean(preview || !drawShow);\r\n\r\n  const { height, width } = drawState;\r\n  const ratio = height / width;\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className=\"page-wrapper\"\r\n      style={{ paddingTop: `${ratio * 100}%` }}\r\n    >\r\n      {drawShow && (\r\n        <DrawWrapper\r\n          drawState={drawState}\r\n          otherStates={otherStates}\r\n          updateState={updateState}\r\n          imgSrc={fullImg || thumbnail}\r\n          preview={preview}\r\n        />\r\n      )}\r\n      {maskShow && <div className=\"mask\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DrawWrapper = ({\r\n  drawState,\r\n  updateState,\r\n  otherStates,\r\n  preview = false,\r\n  imgSrc,\r\n}: {\r\n  drawState: DrawState;\r\n  otherStates?: DrawState[];\r\n  updateState?: (ds: DrawState) => void;\r\n  preview?: boolean;\r\n  imgSrc?: string;\r\n}) => {\r\n  const { drawCtrl } = useContext(ReaderStateCtx);\r\n  const [activeTool, setActiveTool] = useState<ActiveToolKey>(\"\");\r\n  const drawRef = useRef<DrawRefType>(null);\r\n\r\n  const handleChange = useEvent(\r\n    (arg: ((s: DrawState) => DrawState) | DrawState) => {\r\n      if (!updateState) return;\r\n      const newDS = arg instanceof DrawState ? arg : arg(drawState);\r\n      updateState(newDS);\r\n    }\r\n  );\r\n\r\n  return preview ? (\r\n    <Draw\r\n      drawState={drawState}\r\n      otherStates={otherStates}\r\n      imgSrc={imgSrc}\r\n      readonly\r\n    />\r\n  ) : (\r\n    <>\r\n      <Draw\r\n        drawState={drawState}\r\n        otherStates={otherStates}\r\n        onChange={handleChange}\r\n        imgSrc={imgSrc}\r\n        drawCtrl={drawCtrl}\r\n        ref={drawRef}\r\n        setActiveTool={setActiveTool}\r\n      />\r\n      <SelectTool drawRef={drawRef} visible={activeTool === \"select\"} />\r\n      <TextTool drawRef={drawRef} visible={activeTool === \"text\"} />\r\n    </>\r\n  );\r\n};\r\nDrawWrapper.displayName = \"DrawWrapper\";\r\n","import { io } from \"socket.io-client\";\r\nimport { Stroke } from \"../draw/DrawState\";\r\nimport { NotePage } from \"../note/note\";\r\nimport { getUserID, getUserName } from \"../user\";\r\nimport { BASE_URL } from \"./http\";\r\n\r\nexport const IoFactory = (noteID: string) => () =>\r\n  io(BASE_URL, {\r\n    query: {\r\n      userID: getUserID(),\r\n      userName: getUserName(),\r\n      noteID,\r\n    },\r\n  });\r\n\r\nexport interface ReorderInfo {\r\n  pageOrder: string[];\r\n  prevOrder: string[];\r\n  deleted: boolean;\r\n}\r\n\r\nexport interface NewPageInfo {\r\n  pageOrder: string[];\r\n  pageID: string;\r\n  newPage: NotePage;\r\n}\r\n\r\nexport interface SyncInfo {\r\n  stroke: Stroke;\r\n  pageID: string;\r\n}\r\n","import { NotePage, TeamPage, TeamPageInfo } from \"../note/note\";\nimport { DrawState, WIDTH } from \"./DrawState\";\nimport { SetOperation } from \"./StateSet\";\nimport { Map, Record } from \"immutable\";\n\ninterface TeamStateRecordType {\n  pageStates: Map<string, Map<string, DrawState>>;\n  pageInfos: Map<string, TeamPageInfo>;\n}\n\nconst defaultRecord: Readonly<TeamStateRecordType> = {\n  pageStates: Map(),\n  pageInfos: Map(),\n};\n\ntype TeamStateRecord = Record<TeamStateRecordType>;\nconst defaultFactory = Record(defaultRecord);\n\nexport class TeamState {\n  constructor(private immutable: TeamStateRecord) {}\n\n  getImmutable() {\n    return this.immutable;\n  }\n\n  getPageStates() {\n    return this.getImmutable().get(\"pageStates\");\n  }\n\n  getPageInfos() {\n    return this.getImmutable().get(\"pageInfos\");\n  }\n\n  getOneState(pageID: string, userID: string) {\n    return this.getPageStates().get(pageID)?.get(userID);\n  }\n\n  getOnePageStateMap(pageID: string) {\n    return this.getPageStates().get(pageID);\n  }\n\n  getPageValidUsers(pageID: string) {\n    const map = this.getOnePageStateMap(pageID);\n    if (!map) return [];\n    return Array.from(map?.filter((ds) => !ds.isEmpty()).keys());\n  }\n\n  getPageRatio(pageID: string) {\n    return this.getPageInfos().get(pageID)?.ratio;\n  }\n\n  includesPage(pageID: string) {\n    return this.getPageStates().has(pageID);\n  }\n\n  setState(pageID: string, userID: string, drawState: DrawState) {\n    const pageMap = this.getPageStates().get(pageID);\n    if (!pageMap) return this;\n    return new TeamState(\n      this.getImmutable().update(\"pageStates\", (m) =>\n        m.set(pageID, pageMap.set(userID, drawState))\n      )\n    );\n  }\n\n  static createFromTeamPages(\n    teamPages: globalThis.Record<string, TeamPage>,\n    width = WIDTH\n  ) {\n    let record = defaultFactory();\n    Object.entries(teamPages).forEach(([pageID, teamPage]) => {\n      const { states, ratio } = teamPage;\n      const pageMap = Map(\n        Object.entries(states).map(([userID, flatState]) => [\n          userID,\n          DrawState.loadFromFlat(flatState, width, width * ratio),\n        ])\n      );\n      record = record\n        .update(\"pageStates\", (m) => m.set(pageID, pageMap))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }));\n    });\n    return new TeamState(record);\n  }\n\n  addPage(pageID: string, notePage: NotePage) {\n    const { ratio } = notePage;\n    return new TeamState(\n      this.getImmutable()\n        .update(\"pageStates\", (m) => m.set(pageID, Map()))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }))\n    );\n  }\n\n  pushOperation(setOp: SetOperation, userID: string, width = WIDTH) {\n    const { pageID, ...op } = setOp;\n    const ratio = this.getPageRatio(pageID);\n    if (!this.includesPage(pageID) || !ratio) return this;\n    const prevDs =\n      this.getOneState(pageID, userID) ||\n      DrawState.createEmpty(width, width * ratio);\n\n    const ds = DrawState.pushOperation(prevDs, op);\n    return this.setState(pageID, userID, ds);\n  }\n\n  resetUser(userID: string, pageRec: globalThis.Record<string, NotePage>) {\n    let newTS: TeamState = this;\n    for (let [pageID, { state, ratio }] of Object.entries(pageRec)) {\n      const prevDS = newTS.getOneState(pageID, userID);\n      if (!prevDS) continue;\n      const { width } = prevDS;\n      newTS = newTS.setState(\n        pageID,\n        userID,\n        DrawState.loadFromFlat(state, width, width * ratio)\n      );\n    }\n    return newTS;\n  }\n}\n","import { useState, useEffect, createContext, useCallback } from \"react\";\r\nimport {\r\n  getTeamNoteState,\r\n  loadTeamNoteInfo,\r\n  updatePages,\r\n} from \"../../lib/network/http\";\r\nimport { LoginOutlined, LogoutOutlined } from \"@ant-design/icons\";\r\nimport { IoFactory, NewPageInfo } from \"../../lib/network/io\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { TeamState } from \"../../lib/draw/TeamState\";\r\nimport { getUserID, UserInfo } from \"../../lib/user\";\r\nimport { NotePage } from \"../../lib/note/note\";\r\nimport { Socket } from \"socket.io-client\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { Loading } from \"../ui/Loading\";\r\nimport { message } from \"antd\";\r\nimport { Set } from \"immutable\";\r\nimport Reader from \"./Reader\";\r\n\r\nexport const TeamCtx = createContext({\r\n  io: undefined as Socket | undefined,\r\n  code: 0,\r\n  teamOn: false,\r\n  connected: false,\r\n  ignores: Set<string>(),\r\n  userRec: {} as Record<string, UserInfo>,\r\n  teamState: undefined as TeamState | undefined,\r\n  resetIO: () => {},\r\n  loadInfo: async () => false,\r\n  loadState: async () => false,\r\n  setIgnores: (() => {}) as Setter<Set<string>>,\r\n  addTeamStatePage: (pageID: string, newPage: NotePage) => {},\r\n});\r\n\r\nexport default function Team() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const [teamState, setTeamState] = useState<TeamState>();\r\n  const [code, setCode] = useState(-2);\r\n  const [userRec, setUserRec] = useState<Record<string, UserInfo>>({});\r\n  const [ignores, setIgnores] = useState(Set<string>());\r\n  const [io, setIO] = useState(IoFactory(noteID));\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [connected, setConnected] = useState(false);\r\n  const nav = useNavigate();\r\n\r\n  const loadInfo = useCallback(async () => {\r\n    const info = await loadTeamNoteInfo(noteID);\r\n    if (!info) {\r\n      message.error(\"Failed loading the team note info\");\r\n      return false;\r\n    }\r\n    setCode(info.code);\r\n    return true;\r\n  }, [noteID]);\r\n\r\n  const loadState = useCallback(async () => {\r\n    const teamNote = await getTeamNoteState(noteID);\r\n    if (!teamNote) {\r\n      message.error(\"Failed loading the team note state\");\r\n      return false;\r\n    }\r\n    setTeamState(TeamState.createFromTeamPages(teamNote));\r\n    return true;\r\n  }, [noteID]);\r\n\r\n  const updateSelfState = useCallback(() => {\r\n    updatePages(noteID);\r\n  }, [noteID]);\r\n\r\n  useEffect(() => {\r\n    const roomInit = async () => {\r\n      const infoLoaded = await loadInfo();\r\n      const stateLoaded = await loadState();\r\n      if (!infoLoaded || !stateLoaded) return nav(\"/\");\r\n      setLoaded(true);\r\n      updateSelfState();\r\n    };\r\n    roomInit();\r\n    return updateSelfState;\r\n  }, [loadInfo, loadState, nav, updateSelfState]);\r\n\r\n  useEffect(() => {\r\n    io.on(\"push\", ({ operation, userID }) => {\r\n      setTeamState((prev) => prev?.pushOperation(operation, userID));\r\n    });\r\n\r\n    io.on(\"join\", ({ joined, members }) => {\r\n      const { userID, userName } = joined;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return;\r\n      showJoinMsg(userID, userName);\r\n    });\r\n\r\n    io.on(\"leave\", ({ leaved, members }) => {\r\n      const { userID, userName } = leaved;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return io.emit(\"join\");\r\n      showLeaveMsg(userID, userName);\r\n    });\r\n\r\n    io.on(\"newPage\", (info: NewPageInfo) => {\r\n      const { pageID, newPage } = info;\r\n      setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n    });\r\n\r\n    io.on(\"reset\", ({ userID, pageRec }) => {\r\n      if (userID === getUserID()) return;\r\n      setTeamState((prev) => prev?.resetUser(userID, pageRec));\r\n    });\r\n\r\n    io.on(\"connect_error\", console.error);\r\n    io.on(\"connect\", () => setConnected(true));\r\n    io.on(\"disconnect\", () => setConnected(false));\r\n\r\n    return () => {\r\n      io.removeAllListeners();\r\n      io.close();\r\n    };\r\n  }, [io]);\r\n\r\n  const addTeamStatePage = (pageID: string, newPage: NotePage) => {\r\n    setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n  };\r\n\r\n  const resetIO = () => setIO(IoFactory(noteID));\r\n\r\n  return (\r\n    <Loading loading={!loaded}>\r\n      <TeamCtx.Provider\r\n        value={{\r\n          io,\r\n          code,\r\n          teamOn: true,\r\n          ignores,\r\n          userRec,\r\n          connected,\r\n          teamState,\r\n          resetIO,\r\n          loadInfo,\r\n          loadState,\r\n          setIgnores,\r\n          addTeamStatePage,\r\n        }}\r\n      >\r\n        <Reader />\r\n      </TeamCtx.Provider>\r\n    </Loading>\r\n  );\r\n}\r\n\r\nconst showJoinMsg = (userID: string, userName: string) => {\r\n  message.destroy(userID);\r\n  message.success({\r\n    content: `${userName} joined room`,\r\n    icon: <LoginOutlined />,\r\n    key: userID,\r\n  });\r\n};\r\n\r\nconst showLeaveMsg = (userID: string, userName: string) => {\r\n  message.destroy(userID);\r\n  message.warning({\r\n    content: `${userName} leaved room`,\r\n    icon: <LogoutOutlined />,\r\n    key: userID,\r\n  });\r\n};\r\n","export function createVirtualCanvas(width: number, height: number) {\r\n  const canvas = document.createElement(\"canvas\");\r\n  const context = canvas.getContext(\"2d\");\r\n  if (!context) {\r\n    throw new Error(\"can't get virtual canvas context\");\r\n  }\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n  return { canvas, context };\r\n}\r\n\r\nexport function releaseCanvas(canvas: HTMLCanvasElement) {\r\n  canvas.width = 1;\r\n  canvas.height = 1;\r\n  const ctx = canvas.getContext('2d');\r\n  ctx?.clearRect(0, 0, 1, 1);\r\n}\r\n"],"names":["defaultWidthList","defaultDrawCtrl","mode","finger","lineWidth","eraserWidth","color","highlight","lasso","widthList","getDrawCtrl","localforage","drawCtrl","defaultRecord","states","Map","editStack","List","undoStack","defaultFactory","Record","StateSet","immutable","lastOp","this","getImmutable","get","pageID","getStates","drawState","prevDS","getOneState","currRecord","update","s","set","l","push","delete","stroke","DrawState","notePage","width","WIDTH","state","ratio","newDS","getEditStack","size","getUndoStack","isUndoable","lastUid","last","lastSetOp","pop","isRedoable","ds","pageRec","map","usePreventTouch","allowFinger","isTouch","useRef","checkPoniter","e","isPrimary","current","pointerType","preventTouch","touch","touches","touchType","isApplePencil","length","isEventValid","stopPropagation","onPointerDownCapture","onPointerMoveCapture","onTouchStartCapture","onTouchMoveCapture","Path","paper","Size","Point","Group","Color","Raster","Layer","Draw","React","ref","otherStates","onChange","readonly","imgSrc","setActiveTool","height","canvasEl","scope","useState","group","setGroup","usePaperItem","path","setPath","rect","setRect","useEffect","cvs","scp","setup","settings","handleSize","hitTolerance","project","addLayer","layers","activate","forEach","visible","Tool","remove","releaseCanvas","bgRect","paintBackground","useSize","view","viewSize","multiply","scale","raster","addChild","sendToBack","onLoad","requestAnimationFrame","fitBounds","bringToFront","mergedStrokes","useMemo","getStrokeList","tempGroup","othersGroup","uid","item","paintStroke","hasStroke","hitRef","selected","setSelected","paperMode","selectedIDs","setSelectedIDs","selectedItems","IDSet","Set","filter","has","name","resetSelect","useCallback","undefined","downPath","p","startStroke","downRect","r","startSelectRect","point","handleDown","draw","erase","select","contains","hitRes","hitTest","segments","text","t","getClickedText","add","content","fontSize","justification","fillColor","setPointText","dragPath","smooth","handleDrag","x","y","s1","s2","s3","segment","moveP","baseP","next","diagonal","subtract","strokeWidth","translate","delta","pointText","bounds","topCenter","bottomRight","tool","maxDistance","erased","handleEarserDrag","hitTestAll","class","tolerance","opacity","guide","handleUp","isEmpty","simplify","pathData","exportJSON","prev","erasedList","Array","from","clear","selection","layer","Math","abs","area","closePath","moveDash","checkLasso","checkRect","updateMutation","cursor","setCursor","console","log","cursorStyle","handleMove","handler","onMouseDown","onMouseDrag","onMouseUp","onMouseMove","mutations","deleteSelected","rotateSelected","angle","aniCount","dAngle","center","position","rotate","mutateStyle","updated","updateGroupStyle","duplicateSelected","transP","divide","newSG","clone","insert","children","m","rasterize","toDataURL","cancelText","submitText","useImperativeHandle","preventDefault","document","addEventListener","removeEventListener","usePinch","memo","offset","first","origin","lastScale","lastOrigin","elPos","originRawP","getBoundingClientRect","originViewP","originPorjP","viewToProject","dScale","pow","scaleView","putCenterBack","zoom","scaleBounds","max","min","rubberband","target","touchHandler","className","style","displayName","tuple","useDebugValue","importJSON","error","Rectangle","onFrame","strokeColor","alpha","blendMode","strokeJoin","strokeCap","half","dashOffset","dashArray","projSize","viewW","viewH","projW","projH","minX","minY","maxX","maxY","getCenterTranslate","deltaX","deltaY","dP","move","isInside","res","trace","compare","getItems","overlapping","match","checkedP","n","intersects","items","newColor","fill","AddPageButton","addFinalPage","useContext","ReaderMethodCtx","type","icon","PlusOutlined","block","onClick","insertAfter","list","prevItem","newItem","prevIndex","indexOf","curr","slice","splice","createFromIconfontCN","scriptUrl","PenPanel","updateDrawCtrl","panelBlur","setPanelBlur","WidthSelect","HighlightSwitch","checked","ColorSelect","setColor","c","field","currWidth","chosen","popShow","setPopShow","includes","realSizeStyle","options","value","label","index","onVisibleChange","v","trigger","placement","destroyTooltipOnHide","defaultValue","onAfterChange","w","newWL","i","allColors","backgroundColor","borderColor","SelectTool","drawRef","CSSTransition","timeout","in","unmountOnExit","SelectToolContent","btnProps","shape","currDrawCtrl","setCurrDrawCtrl","rotateEl","dragged","setDragged","transX","setTransX","gearStyle","transform","useDrag","filterTaps","left","right","createPortal","getPopupContainer","parentElement","BgColorsOutlined","RotateRightOutlined","CaretLeftOutlined","CaretRightOutlined","CopyOutlined","PictureOutlined","imageData","Modal","title","src","alt","okText","onOk","saveAs","danger","DeleteOutlined","querySelector","TextTool","setText","align","setAlign","forceLight","ReaderStateCtx","toCSS","fontColorBtn","overlayStyle","FontColorsOutlined","alignRadio","optionType","buttonStyle","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","onCancel","trim","bodyStyle","paddingTop","destroyOnClose","TextArea","rows","autoFocus","largestKey","order","result","maxRatio","key","HeaderMiddle","stateSet","setDrawCtrl","handleUndo","handleRedo","setForceLight","newCtrl","saveDrawCtrl","UndoOutlined","disabled","RedoOutlined","message","BulbFilled","BulbOutlined","PenButton","EraserButton","SelectButton","HighlightOutlined","GatewayOutlined","UserAvatar","userID","userRec","TeamCtx","getHashedColor","userInfo","userName","PreviewCtx","activeKey","setActiveKey","PageNavContent","pageOrder","currPageID","scrollPage","saveReorder","refRec","scrollIntoView","PreviewTabs","onDragEnd","source","destination","fromIndex","toIndex","newOrder","removed","exchange","droppableId","droppableProps","innerRef","placeholder","PagePreview","pageIndex","teamState","setChosen","page","teamStateMap","getOnePageStateMap","image","marked","every","draggableId","isDragDisabled","draggableProps","dragHandleProps","isDragging","PageWrapper","thumbnail","preview","PreviewTools","switchPageMarked","ignores","userIDs","getPageValidUsers","PreviewOption","TeamAvatars","maxCount","classNames","maxPopoverPlacement","addPage","deletePage","menu","MoreOutlined","TabPane","Tabs","tabBarGutter","centered","tab","PageNav","navOn","setNavOn","ALL","MARKED","WRITTEN","Provider","MenuUnfoldOutlined","MenuFoldOutlined","onClose","closable","zIndex","padding","overflow","headerStyle","textAlign","HeaderRight","teamOn","RoomInfo","JoinRoom","UserCard","renaming","setRenaming","setIgnores","resetIO","online","self","getUserID","ignored","Search","onSearch","saveUserName","enterButton","CheckOutlined","FormOutlined","EyeInvisibleOutlined","EyeOutlined","code","connected","loadInfo","loadState","noteInfo","link","window","location","href","share","selfName","copy","userList","selfID","selfInfo","otherUsers","values","Object","onlineNum","teamPop","DisconnectOutlined","showIcon","banner","String","plain","ShareAltOutlined","u","reloading","setReloading","loading","ReloadOutlined","status","count","TeamOutlined","noteID","instantSave","nav","useNavigate","createRoom","putNote","editNoteData","team","UsergroupAddOutlined","ReaderHeader","HeaderLeft","saved","HomeFilled","SaveOutlined","createContext","updateStateSet","cb","prevPageID","setInviewRatios","Reader","useParams","setPageRec","setNoteInfo","setStateSet","setPageOrder","useSafeState","setSaved","io","addTeamStatePage","refMap","setRefMap","scrolled","setPrevPageID","inviewRatios","loadPrevPageID","stored","setRef","el","useScrollPage","loadNotePages","loadNote","storedNote","pdf","createFromPages","saver","useEvent","pr","toObject","canvas","debouncedSave","debounce","flush","savePageRec","defaultNotePage","pushReorder","emit","handleReorder","onUndo","deleted","prevOrder","duration","handleNewPage","newPage","addState","on","removeAllListeners","pushNewPage","newTeamPage","updatePageRec","newSS","operation","lastDS","getLastDS","syncStrokeTime","prevPage","createPage","renderResult","PageContainer","id","lastPageID","redo","undo","updateState","setState","pdfIndex","fullImg","setFullImg","useInView","threshold","range","entry","intersectionRatio","loadImage","once","getNotePageImage","deleteAll","toList","toArray","drawShow","maskShow","Boolean","DrawWrapper","activeTool","handleChange","arg","IoFactory","BASE_URL","query","getUserName","pageStates","pageInfos","TeamState","getPageStates","keys","getPageInfos","pageMap","setOp","op","getPageRatio","includesPage","prevDs","newTS","entries","teamPages","record","teamPage","flatState","Team","setTeamState","setCode","setUserRec","setIO","loaded","setLoaded","setConnected","loadTeamNoteInfo","info","getTeamNoteState","teamNote","createFromTeamPages","updateSelfState","updatePages","roomInit","infoLoaded","stateLoaded","pushOperation","joined","members","showJoinMsg","leaved","showLeaveMsg","resetUser","close","Loading","LoginOutlined","LogoutOutlined","createVirtualCanvas","createElement","context","getContext","Error","ctx","clearRect"],"sourceRoot":""}