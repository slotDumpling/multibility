{"version":3,"file":"static/js/703.b143b847.chunk.js","mappings":"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","sources":["lib/draw/drawCtrl.ts","lib/draw/StateSet.ts","component/reader/ReaderUtils.tsx","component/ui/IconFont.tsx","component/reader/tools/PenPanel.tsx","component/reader/tools/DrawTools.tsx","lib/array.ts","component/reader/header/Middle.tsx","component/widgets/UserAvatar.tsx","component/reader/PageNav.tsx","component/reader/header/Right.tsx","component/reader/header/Header.tsx","lib/touch/touch.ts","component/draw/Draw.tsx","component/reader/Reader.tsx","lib/network/io.ts","lib/draw/TeamState.ts","component/reader/Team.tsx","lib/draw/canvas.ts"],"sourcesContent":["import localforage from \"localforage\";\r\nexport interface DrawCtrl {\r\n  mode: \"draw\" | \"erase\" | \"select\" | \"text\";\r\n  finger: boolean;\r\n  lineWidth: number;\r\n  eraserWidth: number;\r\n  color: string;\r\n  highlight: boolean;\r\n  lasso: boolean;\r\n  widthList: number[];\r\n}\r\n\r\nexport const defaultWidthList = [10, 20, 30, 50];\r\nexport const defaultDrawCtrl: Readonly<DrawCtrl> = {\r\n  mode: \"draw\",\r\n  finger: true,\r\n  lineWidth: 10,\r\n  eraserWidth: 10,\r\n  color: \"#000000\",\r\n  highlight: false,\r\n  lasso: true,\r\n  widthList: defaultWidthList,\r\n};\r\n\r\nexport async function getDrawCtrl() {\r\n  let drawCtrl = (await localforage.getItem(\"DRAW_CTRL\")) as DrawCtrl | null;\r\n  if (!drawCtrl) {\r\n    drawCtrl = defaultDrawCtrl;\r\n    await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n  }\r\n  return drawCtrl;\r\n}\r\n\r\nexport async function saveDrawCtrl(drawCtrl: DrawCtrl) {\r\n  await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n}\r\n","import { DrawState, Operation, Stroke, WIDTH } from \"./DrawState\";\r\nimport { List, Map, Record } from \"immutable\";\r\nimport { NotePage } from \"../note/note\";\r\n\r\ninterface StateSetRecordType {\r\n  states: Map<string, DrawState>;\r\n  editStack: List<string>;\r\n  undoStack: List<string>;\r\n}\r\n\r\nconst defaultRecord: Readonly<StateSetRecordType> = {\r\n  states: Map(),\r\n  editStack: List(),\r\n  undoStack: List(),\r\n};\r\n\r\ntype StateSetRecord = Record<StateSetRecordType>;\r\nconst defaultFactory = Record(defaultRecord);\r\n\r\nexport type SetOperation = Operation & { pageID: string };\r\n\r\nexport class StateSet {\r\n  constructor(\r\n    private immutable: StateSetRecord,\r\n    public lastOp?: SetOperation\r\n  ) {}\r\n\r\n  static createFromPages(\r\n    pageRec: globalThis.Record<string, NotePage>,\r\n    width = WIDTH\r\n  ) {\r\n    return new StateSet(\r\n      defaultFactory().set(\r\n        \"states\",\r\n        Map(pageRec).map(({ state, ratio }) =>\r\n          DrawState.loadFromFlat(state, width, width * ratio)\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  getImmutable() {\r\n    return this.immutable;\r\n  }\r\n\r\n  getStates() {\r\n    return this.getImmutable().get(\"states\");\r\n  }\r\n\r\n  getOneState(pageID: string) {\r\n    return this.getStates().get(pageID);\r\n  }\r\n\r\n  getEditStack() {\r\n    return this.getImmutable().get(\"editStack\");\r\n  }\r\n\r\n  getUndoStack() {\r\n    return this.getImmutable().get(\"undoStack\");\r\n  }\r\n\r\n  setState(pageID: string, drawState: DrawState) {\r\n    const prevDS = this.getOneState(pageID);\r\n    if (!prevDS || prevDS === drawState) return this;\r\n    let currRecord = this.getImmutable()\r\n      .update(\"states\", (s) => s.set(pageID, drawState))\r\n      .update(\"editStack\", (l) => l.push(pageID))\r\n      .delete(\"undoStack\");\r\n\r\n    const { lastOp } = drawState;\r\n    const lastSetOp = lastOp && { ...lastOp, pageID };\r\n\r\n    return new StateSet(currRecord, lastSetOp);\r\n  }\r\n\r\n  // sync with mutation.\r\n  syncStrokeTime(pageID: string, stroke: Stroke) {\r\n    const prevDS = this.getOneState(pageID);\r\n    prevDS && DrawState.syncStrokeTime(prevDS, stroke);\r\n    return this;\r\n  }\r\n\r\n  addState(pageID: string, notePage: NotePage, width = WIDTH) {\r\n    const { state, ratio } = notePage;\r\n    const newDS = DrawState.loadFromFlat(state, width, width * ratio);\r\n    const currRecord = this.getImmutable().update(\"states\", (s) =>\r\n      s.set(pageID, newDS)\r\n    );\r\n    return new StateSet(currRecord);\r\n  }\r\n\r\n  deleteState(pageID: string) {\r\n    return new StateSet(\r\n      this.getImmutable().update(\"states\", (s) => s.delete(pageID))\r\n    );\r\n  }\r\n\r\n  isUndoable() {\r\n    return this.getEditStack().size > 0;\r\n  }\r\n\r\n  isRedoable() {\r\n    return this.getUndoStack().size > 0;\r\n  }\r\n\r\n  undo() {\r\n    if (!this.isUndoable()) return this;\r\n    const lastUid = this.getEditStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.undo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"editStack\", (s) => s.pop())\r\n        .update(\"undoStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  redo() {\r\n    if (!this.isRedoable()) return this;\r\n    const lastUid = this.getUndoStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.redo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"undoStack\", (s) => s.pop())\r\n        .update(\"editStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  getLastDS(): [string, DrawState] | undefined {\r\n    const pageID = this.lastOp?.pageID;\r\n    const ds = pageID && this.getOneState(pageID);\r\n    if (ds) return [pageID, ds];\r\n  }\r\n}\r\n","import { Button, message } from \"antd\";\r\nimport React, { useContext } from \"react\";\r\nimport { ReaderMethodCtx } from \"./Reader\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nexport const AddPageButton = () => {\r\n  const { addFinalPage } = useContext(ReaderMethodCtx);\r\n  return (\r\n    <div className=\"add-btn-wrapper\">\r\n      <Button\r\n        type=\"dashed\"\r\n        icon={<PlusOutlined />}\r\n        block\r\n        onClick={addFinalPage}\r\n      >\r\n        New page\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const showPageDelMsg = (onUndo: () => void) => {\r\n  message.warning({\r\n    content: (\r\n      <>\r\n        One page was deleted.\r\n        <Button\r\n          size=\"small\"\r\n          type=\"link\"\r\n          onClick={() => {\r\n            message.destroy(\"DELETE\");\r\n            onUndo();\r\n          }}\r\n        >\r\n          Undo\r\n        </Button>\r\n      </>\r\n    ),\r\n    key: \"DELETE\",\r\n    duration: 10,\r\n  });\r\n};\r\n","import { createFromIconfontCN } from \"@ant-design/icons\";\r\n\r\nexport default createFromIconfontCN({\r\n  scriptUrl: \"//at.alicdn.com/t/font_3181679_yo844n7qgns.js\",\r\n});\r\n","import { CSSProperties, FC, useEffect, useMemo, useState } from \"react\";\r\nimport { defaultWidthList, DrawCtrl } from \"../../../lib/draw/drawCtrl\";\r\nimport { Button, Popover, Segmented, Slider } from \"antd\";\r\nimport { ColorCirle } from \"../../widgets/ColorCircle\";\r\nimport { Setter } from \"../../../lib/hooks\";\r\nimport { colors } from \"../../../lib/color\";\r\nimport IconFont from \"../../ui/IconFont\";\r\nimport { List } from \"immutable\";\r\nimport \"./penPanel.sass\";\r\n\r\nexport const PenPanel: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n  drawCtrl: Partial<DrawCtrl>;\r\n}> = ({ updateDrawCtrl, drawCtrl }) => {\r\n  const { highlight, color } = drawCtrl;\r\n  const [panelBlur, setPanelBlur] = useState(false);\r\n\r\n  return (\r\n    <div className=\"pen-panel\" data-blur={panelBlur}>\r\n      <div className=\"pen-status\">\r\n        <WidthSelect\r\n          updateDrawCtrl={updateDrawCtrl}\r\n          drawCtrl={drawCtrl}\r\n          setPanelBlur={setPanelBlur}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          ghost\r\n          shape=\"circle\"\r\n          className=\"hi-btn\"\r\n          data-checked={highlight}\r\n          icon={<IconFont type=\"icon-Highlight\" />}\r\n          onClick={() => updateDrawCtrl({ highlight: !highlight })}\r\n        />\r\n      </div>\r\n      <ColorSelect\r\n        color={color || \"\"}\r\n        setColor={(c) => updateDrawCtrl({ color: c })}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const WidthSelect: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n  drawCtrl: Partial<DrawCtrl>;\r\n  setPanelBlur?: Setter<boolean>;\r\n  field?: \"lineWidth\" | \"eraserWidth\";\r\n}> = ({\r\n  updateDrawCtrl,\r\n  drawCtrl,\r\n  setPanelBlur = () => {},\r\n  field = \"lineWidth\",\r\n}) => {\r\n  const currWidth = drawCtrl[field];\r\n  const widthList = drawCtrl.widthList ?? defaultWidthList;\r\n  const color = field === \"lineWidth\" ? drawCtrl.color ?? \"#0003\" : \"#0003\";\r\n\r\n  const chosen = useMemo(\r\n    () => Math.max(0, widthList.indexOf(currWidth ?? 0)),\r\n    [currWidth, widthList]\r\n  );\r\n\r\n  const [popShow, setPopShow] = useState(List([false, false, false, false]));\r\n  useEffect(() => {\r\n    if (popShow.includes(true)) setPanelBlur(true);\r\n    else setPanelBlur(false);\r\n  }, [popShow, setPanelBlur]);\r\n\r\n  const options = widthList.map((width, index) => ({\r\n    value: index,\r\n    label: (\r\n      <Popover\r\n        visible={popShow.get(index)}\r\n        onVisibleChange={(v) => setPopShow((prev) => prev.set(index, v))}\r\n        trigger={chosen === index ? [\"click\"] : []}\r\n        placement=\"bottom\"\r\n        destroyTooltipOnHide\r\n        content={\r\n          <Slider\r\n            min={5}\r\n            max={100}\r\n            className=\"ctrl-slider\"\r\n            defaultValue={width}\r\n            onAfterChange={(w) => {\r\n              if (widthList.includes(w)) {\r\n                setPopShow((prev) => prev.set(index, false));\r\n                return updateDrawCtrl({ [field]: w });\r\n              }\r\n              const newWL = widthList.slice();\r\n              newWL[index] = w;\r\n              updateDrawCtrl({ widthList: newWL, [field]: w });\r\n            }}\r\n          />\r\n        }\r\n      >\r\n        <div\r\n          className=\"circle-wrapper\"\r\n          style={{ \"--real-size\": `calc(0.05vw * ${width})` } as CSSProperties}\r\n        >\r\n          <ColorCirle className=\"width-circle\" color={color} />\r\n        </div>\r\n      </Popover>\r\n    ),\r\n  }));\r\n\r\n  return (\r\n    <Segmented\r\n      className=\"width-seg\"\r\n      value={chosen}\r\n      options={options}\r\n      onChange={(i) => updateDrawCtrl({ [field]: widthList[+i] ?? 5 })}\r\n    />\r\n  );\r\n};\r\n\r\nexport const ColorSelect: FC<{\r\n  color: string;\r\n  setColor: (color: string) => void;\r\n}> = ({ setColor, color }) => {\r\n  return (\r\n    <div className=\"color-select\">\r\n      {colors.map((c) => (\r\n        <label key={c}>\r\n          <input\r\n            checked={color === c}\r\n            type=\"radio\"\r\n            name=\"color\"\r\n            onChange={() => setColor(c)}\r\n          />\r\n          <div\r\n            className=\"circle\"\r\n            style={{ backgroundColor: c, borderColor: c }}\r\n          ></div>\r\n        </label>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import { FC, RefObject, useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  CopyOutlined,\r\n  DeleteOutlined,\r\n  BgColorsOutlined,\r\n  FontSizeOutlined,\r\n  CaretLeftOutlined,\r\n  FontColorsOutlined,\r\n  CaretRightOutlined,\r\n  RotateRightOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Button, ButtonProps, InputNumber, Modal, Popover } from \"antd\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { DrawCtrl } from \"../../../lib/draw/drawCtrl\";\r\nimport { createWorker, Worker } from \"tesseract.js\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { useDrag } from \"@use-gesture/react\";\r\nimport { DrawRefType } from \"../../draw/Draw\";\r\nimport { colors } from \"../../../lib/color\";\r\nimport IconFont from \"../../ui/IconFont\";\r\nimport { ColorSelect, PenPanel } from \"./PenPanel\";\r\nimport copy from \"clipboard-copy\";\r\nimport \"./drawTools.sass\";\r\n\r\nconst getOcrWorker = (() => {\r\n  let worker: Worker;\r\n  return async () => {\r\n    if (worker) return worker;\r\n    worker = createWorker({ logger: console.log });\r\n    await worker.load();\r\n    await worker.loadLanguage(\"eng+chi_sim\");\r\n    await worker.initialize(\"eng+chi_sim\");\r\n    return worker;\r\n  };\r\n})();\r\n\r\nexport const SelectTool: FC<{\r\n  drawRef: RefObject<DrawRefType>;\r\n  visible: boolean;\r\n}> = ({ drawRef, visible }) => {\r\n  const btnProps: ButtonProps = {\r\n    type: \"text\",\r\n    shape: \"round\",\r\n    size: \"small\",\r\n  };\r\n\r\n  const [currDrawCtrl, setCurrDrawCtrl] = useState<Partial<DrawCtrl>>({});\r\n  useEffect(() => setCurrDrawCtrl({}), [visible]);\r\n  const rotateEl = useRef<HTMLDivElement>(null);\r\n  const [dragged, setDragged] = useState(false);\r\n  const [transX, setTransX] = useState(0);\r\n  const gearStyle = { transform: `translateX(${transX}px)` };\r\n\r\n  useDrag(\r\n    ({ first, last, offset, delta }) => {\r\n      setTransX(offset[0]);\r\n      drawRef.current?.rotateSelected(delta[0] / 2, last);\r\n      first && setDragged(true);\r\n      last && setDragged(false);\r\n    },\r\n    {\r\n      target: rotateEl,\r\n      filterTaps: true,\r\n      rubberband: 0.05,\r\n      bounds: { left: -90, right: 90 },\r\n    }\r\n  );\r\n\r\n  const [recoginzing, setRecoginzing] = useState(false);\r\n  const recognizeText = async () => {\r\n    setRecoginzing(true);\r\n    if (!drawRef.current) return;\r\n    const imageData = drawRef.current.rasterize();\r\n    try {\r\n      const worker = await getOcrWorker();\r\n      const { text } = (await worker.recognize(imageData)).data;\r\n      Modal.confirm({\r\n        title: \"OCR Result\",\r\n        content: <TextArea defaultValue={text} />,\r\n        icon: <IconFont type=\"icon-OCR\" />,\r\n        okText: \"Copy\",\r\n        onOk: () => copy(text),\r\n      });\r\n    } catch (e) {\r\n      console.error(e);\r\n    } finally {\r\n      setRecoginzing(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CSSTransition timeout={300} in={visible} unmountOnExit>\r\n      <div className=\"select-tool\">\r\n        <Popover\r\n          trigger=\"click\"\r\n          placement=\"bottom\"\r\n          getPopupContainer={(e) => e.parentElement!}\r\n          destroyTooltipOnHide\r\n          content={\r\n            <PenPanel\r\n              updateDrawCtrl={(updated) => {\r\n                setCurrDrawCtrl((prev) => ({ ...prev, ...updated }));\r\n                drawRef.current?.mutateStyle(updated);\r\n              }}\r\n              drawCtrl={currDrawCtrl}\r\n            />\r\n          }\r\n        >\r\n          <Button icon={<BgColorsOutlined />} {...btnProps} />\r\n        </Popover>\r\n        <div className=\"rotate-wrapper\" data-dragged={dragged} ref={rotateEl}>\r\n          <Button\r\n            icon={<RotateRightOutlined />}\r\n            onClick={() => drawRef.current?.rotateSelected(90, true)}\r\n            {...btnProps}\r\n          />\r\n          <CaretLeftOutlined className=\"arrow left\" />\r\n          <CaretRightOutlined className=\"arrow right\" />\r\n          <div className=\"gear\" style={gearStyle} />\r\n        </div>\r\n        <Button\r\n          icon={<CopyOutlined />}\r\n          onClick={() => drawRef.current?.duplicateSelected()}\r\n          {...btnProps}\r\n        />\r\n        <Button\r\n          icon={<IconFont type=\"icon-OCR\" />}\r\n          loading={recoginzing}\r\n          onClick={recognizeText}\r\n          {...btnProps}\r\n        />\r\n        <Button\r\n          danger\r\n          icon={<DeleteOutlined />}\r\n          onClick={() => drawRef.current?.deleteSelected()}\r\n          {...btnProps}\r\n        />\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport const TextTool: FC<{\r\n  drawRef: RefObject<DrawRefType>;\r\n  visible: boolean;\r\n}> = ({ visible, drawRef }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [fontSize, setFontSize] = useState(5);\r\n  const [color, setColor] = useState(colors[0]);\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      title=\"Insert text\"\r\n      onCancel={() => drawRef.current?.cancelText()}\r\n      onOk={() => {\r\n        const content = text.trim();\r\n        if (!content) return drawRef.current?.cancelText();\r\n        drawRef.current?.submitText(content, fontSize, color);\r\n      }}\r\n      bodyStyle={{ paddingTop: 0 }}\r\n      destroyOnClose\r\n    >\r\n      <div className=\"insert-option\">\r\n        <span className=\"font-size\">\r\n          <FontSizeOutlined />\r\n          <span>Font size: </span>\r\n          <InputNumber\r\n            min={1}\r\n            size=\"small\"\r\n            value={fontSize}\r\n            onChange={setFontSize}\r\n          />\r\n        </span>\r\n        <Popover\r\n          content={<ColorSelect color={color} setColor={setColor} />}\r\n          overlayStyle={{ width: 200 }}\r\n          placement=\"bottom\"\r\n        >\r\n          <Button\r\n            className=\"tag-btn\"\r\n            size=\"small\"\r\n            icon={<FontColorsOutlined style={{ color }} />}\r\n          >\r\n            Font color\r\n          </Button>\r\n        </Popover>\r\n      </div>\r\n      <TextArea\r\n        autoFocus\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n","import { Map } from \"immutable\";\r\n\r\nexport function exchange<T>(list: T[], fromIndex: number, toIndex: number) {\r\n  const result = list.slice();\r\n  const [removed] = result.splice(fromIndex, 1);\r\n  result.splice(toIndex, 0, removed);\r\n  return result;\r\n}\r\n\r\nexport function insertAfter<T>(list: T[], prevItem: T, newItem: T) {\r\n  const prevIndex = list.indexOf(prevItem);\r\n  const curr = list.slice();\r\n  if (prevIndex === -1) return curr;\r\n  curr.splice(prevIndex + 1, 0, newItem);\r\n  return curr;\r\n}\r\n\r\nexport function getLargestKey(map: Map<string, number>) {\r\n  let result = \"\";\r\n  let maxRatio = 0;\r\n  map.forEach((ratio, pageID) => {\r\n    if (ratio > maxRatio) {\r\n      result = pageID;\r\n      maxRatio = ratio;\r\n    }\r\n  });\r\n  return result;\r\n}\r\n","import { FC, useContext } from \"react\";\r\nimport { Button, message, Popover, ButtonProps } from \"antd\";\r\nimport { ReaderMethodCtx, ReaderStateCtx } from \"../Reader\";\r\nimport { DrawCtrl, saveDrawCtrl } from \"../../../lib/draw/drawCtrl\";\r\nimport {\r\n  UndoOutlined,\r\n  RedoOutlined,\r\n  GatewayOutlined,\r\n  HighlightOutlined,\r\n} from \"@ant-design/icons\";\r\nimport IconFont from \"../../ui/IconFont\";\r\nimport { PenPanel, WidthSelect } from \"../tools/PenPanel\";\r\n\r\nexport const HeaderMiddle = () => {\r\n  const { stateSet, drawCtrl } = useContext(ReaderStateCtx);\r\n  const { setDrawCtrl, handleUndo, handleRedo } = useContext(ReaderMethodCtx);\r\n  const { mode, finger } = drawCtrl;\r\n\r\n  const updateDrawCtrl = (updated: Partial<DrawCtrl>) => {\r\n    setDrawCtrl((prev) => {\r\n      const newCtrl = { ...prev, ...updated };\r\n      saveDrawCtrl(newCtrl);\r\n      return newCtrl;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"middle\">\r\n      <Button\r\n        type=\"text\"\r\n        shape=\"circle\"\r\n        icon={<UndoOutlined />}\r\n        onClick={handleUndo}\r\n        disabled={!stateSet?.isUndoable()}\r\n      />\r\n      <Button\r\n        type=\"text\"\r\n        shape=\"circle\"\r\n        icon={<RedoOutlined />}\r\n        onClick={handleRedo}\r\n        disabled={!stateSet?.isRedoable()}\r\n      />\r\n      <Button\r\n        type={finger ? \"default\" : \"text\"}\r\n        shape=\"circle\"\r\n        onClick={() => {\r\n          updateDrawCtrl({ finger: !finger });\r\n          message.destroy(\"FINGER\");\r\n          message.open({\r\n            content: finger ? \"Pencil only\" : \"Draw with finger\",\r\n            key: \"FINGER\",\r\n          });\r\n        }}\r\n        icon={<IconFont type=\"icon-finger\" />}\r\n      />\r\n      <PenButton updateDrawCtrl={updateDrawCtrl} />\r\n      <EraserButton updateDrawCtrl={updateDrawCtrl} />\r\n      <Button\r\n        type={mode === \"text\" ? \"default\" : \"text\"}\r\n        shape=\"circle\"\r\n        onClick={() => updateDrawCtrl({ mode: \"text\" })}\r\n        icon={<IconFont type=\"icon-text1\" />}\r\n      />\r\n      <SelectButton updateDrawCtrl={updateDrawCtrl} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PenButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const { drawCtrl } = useContext(ReaderStateCtx);\r\n  const { mode } = drawCtrl;\r\n\r\n  const btnProps: ButtonProps = {\r\n    shape: \"circle\",\r\n    icon: <HighlightOutlined />,\r\n  };\r\n  return mode === \"draw\" ? (\r\n    <Popover\r\n      content={<PenPanel updateDrawCtrl={updateDrawCtrl} drawCtrl={drawCtrl} />}\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e.parentElement!}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button type=\"default\" {...btnProps} />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      onClick={() => updateDrawCtrl({ mode: \"draw\" })}\r\n      {...btnProps}\r\n    />\r\n  );\r\n};\r\n\r\nconst EraserButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const { drawCtrl } = useContext(ReaderStateCtx);\r\n\r\n  const btnProps: ButtonProps = {\r\n    shape: \"circle\",\r\n    icon: <IconFont type=\"icon-eraser\" />,\r\n  };\r\n\r\n  return drawCtrl.mode === \"erase\" ? (\r\n    <Popover\r\n      content={\r\n        <WidthSelect\r\n          drawCtrl={drawCtrl}\r\n          updateDrawCtrl={updateDrawCtrl}\r\n          field=\"eraserWidth\"\r\n        />\r\n      }\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e.parentElement!}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button type=\"default\" {...btnProps} />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      onClick={() => updateDrawCtrl({ mode: \"erase\" })}\r\n      {...btnProps}\r\n    />\r\n  );\r\n};\r\n\r\nconst SelectButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const {\r\n    drawCtrl: { lasso, mode },\r\n  } = useContext(ReaderStateCtx);\r\n\r\n  const icon = lasso ? <IconFont type=\"icon-lasso1\" /> : <GatewayOutlined />;\r\n\r\n  return mode === \"select\" ? (\r\n    <Button\r\n      type=\"default\"\r\n      shape=\"circle\"\r\n      icon={icon}\r\n      onClick={() => updateDrawCtrl({ lasso: !lasso })}\r\n    />\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      shape=\"circle\"\r\n      icon={icon}\r\n      onClick={() => updateDrawCtrl({ mode: \"select\" })}\r\n    />\r\n  );\r\n};\r\n","import { Avatar } from \"antd\";\nimport { AvatarSize } from \"antd/lib/avatar/SizeContext\";\nimport { FC, useContext, useMemo } from \"react\";\nimport { getHashedColor } from \"../../lib/color\";\nimport { TeamCtx } from \"../reader/Team\";\n\nexport const UserAvatar: FC<{\n  userID: string;\n  size?: AvatarSize;\n  onClick?: () => void;\n  chosen?: boolean;\n  className?: string;\n}> = ({\n  userID,\n  size = \"default\",\n  onClick = () => {},\n  chosen = false,\n  className,\n}) => {\n  const { userRec } = useContext(TeamCtx);\n  const color = useMemo(() => getHashedColor(userID), [userID]);\n  const userInfo = userRec[userID];\n  if (!userInfo) return null;\n  const { userName } = userInfo;\n\n  return (\n    <Avatar\n      className={className}\n      data-chosen={chosen}\n      size={size}\n      style={{ backgroundColor: color }}\n    >\n      <div className=\"avatar-wrapper\" onClick={onClick}>\n        {userName?.slice(0, 3)}\n      </div>\n    </Avatar>\n  );\n};\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n} from \"react\";\r\nimport {\r\n  MoreOutlined,\r\n  PlusOutlined,\r\n  CopyOutlined,\r\n  DeleteOutlined,\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  Draggable,\r\n  Droppable,\r\n  DropResult,\r\n  DragDropContext,\r\n} from \"react-beautiful-dnd\";\r\nimport { PageWrapper, ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport { Avatar, Button, Drawer, Menu, Popover, Tabs } from \"antd\";\r\nimport { AddPageButton } from \"./ReaderUtils\";\r\nimport { exchange } from \"../../lib/array\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport IconFont from \"../ui/IconFont\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport \"./preview.sass\";\r\nimport { UserAvatar } from \"../widgets/UserAvatar\";\r\nimport classNames from \"classnames\";\r\n\r\nconst PreviewCtx = React.createContext({\r\n  activeKey: \"ALL\",\r\n  setActiveKey: (() => {}) as Setter<string>,\r\n});\r\n\r\nconst PageNavContent = () => {\r\n  const { pageOrder, currPageID } = useContext(ReaderStateCtx);\r\n  const { scrollPage, saveReorder } = useContext(ReaderMethodCtx);\r\n  const { activeKey } = useContext(PreviewCtx);\r\n  const refRec = useRef<Record<string, HTMLElement>>({});\r\n\r\n  const onDragEnd = ({ source, destination }: DropResult) => {\r\n    if (!destination || !pageOrder) return;\r\n    const { index: fromIndex } = source;\r\n    const { index: toIndex } = destination;\r\n    if (fromIndex === toIndex) return;\r\n    const pageID = pageOrder[fromIndex];\r\n    const newOrder = exchange(pageOrder, fromIndex, toIndex);\r\n    saveReorder(newOrder, true);\r\n    requestAnimationFrame(() => scrollPage(pageID));\r\n  };\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => refRec.current[currPageID]?.scrollIntoView(), []);\r\n\r\n  return (\r\n    <div className=\"preview-container\">\r\n      <PreviewTabs />\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"preview-list\">\r\n          {({ droppableProps, innerRef, placeholder }) => (\r\n            <div className=\"page-list\" ref={innerRef} {...droppableProps}>\r\n              {pageOrder?.map((uid, index) => (\r\n                <PagePreview\r\n                  key={uid}\r\n                  uid={uid}\r\n                  pageIndex={index}\r\n                  refRec={refRec.current}\r\n                />\r\n              ))}\r\n              {placeholder}\r\n              {activeKey === \"ALL\" && <AddPageButton />}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PagePreview: FC<{\r\n  uid: string;\r\n  pageIndex: number;\r\n  refRec: Record<string, HTMLElement>;\r\n}> = ({ uid, pageIndex, refRec }) => {\r\n  const { stateSet, teamState, pageRec, currPageID } =\r\n    useContext(ReaderStateCtx);\r\n  const { scrollPage } = useContext(ReaderMethodCtx);\r\n  const { activeKey } = useContext(PreviewCtx);\r\n  const [chosen, setChosen] = useState(\"\");\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n\r\n  if (!page || !drawState) return null;\r\n  const { image, marked } = page;\r\n\r\n  if (\r\n    activeKey === \"WRITTEN\" &&\r\n    drawState.isEmpty() &&\r\n    (!teamStateMap || teamStateMap.every((ds) => ds.isEmpty()))\r\n  ) {\r\n    return null;\r\n  }\r\n  if (activeKey === \"MARKED\" && !marked) return null;\r\n  const curr = currPageID === uid;\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={uid}\r\n      index={pageIndex}\r\n      isDragDisabled={activeKey !== \"ALL\"}\r\n    >\r\n      {(\r\n        { innerRef, draggableProps, dragHandleProps },\r\n        { isDragging: dragged }\r\n      ) => (\r\n        <div\r\n          ref={(e) => {\r\n            innerRef(e);\r\n            if (e) refRec[uid] = e;\r\n          }}\r\n          className=\"page\"\r\n          data-curr={curr}\r\n          data-dragged={dragged}\r\n          onClick={() => scrollPage(uid)}\r\n          {...draggableProps}\r\n          {...dragHandleProps}\r\n        >\r\n          <PageWrapper\r\n            uid={uid}\r\n            drawState={teamStateMap?.get(chosen) || drawState}\r\n            teamStateMap={chosen ? undefined : teamStateMap}\r\n            thumbnail={image}\r\n            preview\r\n          />\r\n          <PreviewTools\r\n            uid={uid}\r\n            index={pageIndex}\r\n            chosen={chosen}\r\n            setChosen={setChosen}\r\n          />\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst PreviewTools: FC<{\r\n  uid: string;\r\n  index: number;\r\n  chosen: string;\r\n  setChosen: Setter<string>;\r\n}> = ({ uid, index, chosen, setChosen }) => {\r\n  const { switchPageMarked } = useContext(ReaderMethodCtx);\r\n  const { teamState, pageRec } = useContext(ReaderStateCtx);\r\n  const { ignores } = useContext(TeamCtx);\r\n  const userIDs = useMemo(\r\n    () =>\r\n      teamState\r\n        ?.getPageValidUsers(uid)\r\n        .filter((userID) => !ignores.has(userID)) || [],\r\n    [teamState, ignores, uid]\r\n  );\r\n  const page = pageRec?.get(uid);\r\n  if (!page) return null;\r\n  const { marked } = page;\r\n\r\n  return (\r\n    <div className=\"tools\" onClick={(e) => e.stopPropagation()}>\r\n      <span\r\n        className=\"bookmark\" data-marked={marked}\r\n        onClick={() => switchPageMarked(uid)}\r\n      />\r\n      <span className=\"index\">{index + 1}</span>\r\n      <PreviewOption uid={uid} />\r\n      <TeamAvatars userIDs={userIDs} chosen={chosen} setChosen={setChosen} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TeamAvatars: FC<{\r\n  userIDs: string[];\r\n  chosen: string;\r\n  setChosen: Setter<string>;\r\n}> = ({ userIDs, chosen, setChosen }) => {\r\n  return (\r\n    <Avatar.Group\r\n      maxCount={2}\r\n      size=\"default\"\r\n      className={classNames(\"team-group\", { chosen })}\r\n      maxPopoverPlacement=\"bottom\"\r\n    >\r\n      {userIDs.map((userID) => (\r\n        <UserAvatar\r\n          key={userID}\r\n          size=\"default\"\r\n          userID={userID}\r\n          className=\"preview-avatar\"\r\n          chosen={chosen === userID}\r\n          onClick={() => setChosen((prev) => (prev === userID ? \"\" : userID))}\r\n        />\r\n      ))}\r\n    </Avatar.Group>\r\n  );\r\n};\r\n\r\nconst PreviewOption = ({ uid }: { uid: string }) => {\r\n  const { addPage, deletePage } = useContext(ReaderMethodCtx);\r\n\r\n  const menu = (\r\n    <Menu\r\n      onClick={({ key }) => {\r\n        if (key === \"ADD\") {\r\n          addPage(uid);\r\n        } else if (key === \"COPY\") {\r\n          addPage(uid, true);\r\n        } else if (key === \"DELETE\") {\r\n          deletePage(uid);\r\n        }\r\n      }}\r\n      items={[\r\n        { key: \"ADD\", icon: <PlusOutlined />, label: \"Add page\" },\r\n        { key: \"COPY\", icon: <CopyOutlined />, label: \"Duplicate\" },\r\n        {\r\n          key: \"DELETE\",\r\n          icon: <DeleteOutlined />,\r\n          label: \"Delete\",\r\n          danger: true,\r\n        },\r\n      ]}\r\n    ></Menu>\r\n  );\r\n  return (\r\n    <Popover\r\n      content={menu}\r\n      trigger=\"click\"\r\n      placement=\"left\"\r\n      destroyTooltipOnHide\r\n    >\r\n      <span className=\"option\">\r\n        <MoreOutlined />\r\n      </span>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst PreviewTabs = () => {\r\n  const { activeKey, setActiveKey } = useContext(PreviewCtx);\r\n  const { TabPane } = Tabs;\r\n  return (\r\n    <Tabs\r\n      className=\"tabs\"\r\n      activeKey={activeKey}\r\n      onChange={setActiveKey}\r\n      tabBarGutter={10}\r\n      size=\"small\"\r\n      centered\r\n    >\r\n      <TabPane tab={<IconFont type=\"icon-uf_paper\" />} key=\"ALL\" />\r\n      <TabPane tab={<IconFont type=\"icon-bookmark2\" />} key=\"MARKED\" />\r\n      <TabPane tab={<IconFont type=\"icon-write\" />} key=\"WRITTEN\" />\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default function PageNav() {\r\n  const [navOn, setNavOn] = useState(false);\r\n  const [activeKey, setActiveKey] = useState<string>(\"ALL\");\r\n  const title = {\r\n    ALL: \"All Pages\",\r\n    MARKED: \"Bookmarks\",\r\n    WRITTEN: \"Notes\",\r\n  }[activeKey];\r\n\r\n  return (\r\n    <PreviewCtx.Provider value={{ activeKey, setActiveKey }}>\r\n      <Button\r\n        type=\"text\"\r\n        icon={navOn ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\r\n        onClick={() => setNavOn((prev) => !prev)}\r\n      />\r\n      <Drawer\r\n        visible={navOn}\r\n        onClose={() => setNavOn(false)}\r\n        width={200}\r\n        title={title}\r\n        closable={false}\r\n        zIndex={800}\r\n        className=\"preview-drawer\"\r\n        bodyStyle={{ padding: 0, overflow: \"hidden\" }}\r\n        headerStyle={{ textAlign: \"center\" }}\r\n        destroyOnClose\r\n      >\r\n        <PageNavContent />\r\n      </Drawer>\r\n    </PreviewCtx.Provider>\r\n  );\r\n}\r\n","import { FC, useMemo, useState, useEffect, useContext } from \"react\";\r\nimport { Badge, Alert, Modal, Button, Divider, message, Popover } from \"antd\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { PasscodeInput } from \"antd-mobile\";\r\nimport { ReaderMethodCtx, ReaderStateCtx } from \"../Reader\";\r\nimport { TeamCtx } from \"../Team\";\r\nimport { getUserID, saveUserName } from \"../../../lib/user\";\r\nimport PageNav from \"../PageNav\";\r\nimport {\r\n  EyeOutlined,\r\n  FormOutlined,\r\n  TeamOutlined,\r\n  CopyOutlined,\r\n  CheckOutlined,\r\n  ReloadOutlined,\r\n  ShareAltOutlined,\r\n  DisconnectOutlined,\r\n  EyeInvisibleOutlined,\r\n  UsergroupAddOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { editNoteData } from \"../../../lib/note/archive\";\r\nimport { UserAvatar } from \"../../widgets/UserAvatar\";\r\nimport { putNote } from \"../../../lib/network/http\";\r\nimport copy from \"clipboard-copy\";\r\n\r\nexport const HeaderRight = () => {\r\n  const { teamOn } = useContext(TeamCtx);\r\n  return (\r\n    <div className=\"right\">\r\n      {teamOn ? <RoomInfo /> : <JoinRoom />}\r\n      <PageNav />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst UserCard: FC<{ userID: string }> = ({ userID }) => {\r\n  const [renaming, setRenaming] = useState(false);\r\n  const { ignores, setIgnores, resetIO, userRec } = useContext(TeamCtx);\r\n  const userInfo = userRec[userID];\r\n  useEffect(() => setRenaming(false), [userInfo]);\r\n  if (!userInfo) return null;\r\n\r\n  const { userName, online } = userInfo;\r\n  const self = userID === getUserID();\r\n  const ignored = ignores.has(userID) && !self;\r\n\r\n  const switchIgnore = () => {\r\n    setIgnores((prev) => {\r\n      if (prev.has(userID)) return prev.delete(userID);\r\n      return prev.add(userID);\r\n    });\r\n  };\r\n\r\n  const submitRename = (value: string) => {\r\n    const name = value.trim();\r\n    if (!name || name === userName) return setRenaming(false);\r\n    saveUserName(name);\r\n    resetIO();\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-item\" data-online={online}>\r\n      <UserAvatar userID={userID} size=\"small\" className=\"room-avatar\" />\r\n      {renaming || <span className=\"user-name\">{userName}</span>}\r\n      {renaming && (\r\n        <Search\r\n          autoFocus\r\n          className=\"rename-input\"\r\n          defaultValue={userName}\r\n          onSearch={submitRename}\r\n          enterButton={<Button icon={<CheckOutlined />} />}\r\n        />\r\n      )}\r\n      {self ? (\r\n        renaming || (\r\n          <Button\r\n            type=\"text\"\r\n            icon={<FormOutlined />}\r\n            onClick={() => setRenaming(true)}\r\n          />\r\n        )\r\n      ) : (\r\n        <Button\r\n          type=\"text\"\r\n          icon={ignored ? <EyeInvisibleOutlined /> : <EyeOutlined />}\r\n          onClick={switchIgnore}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RoomInfo: FC = () => {\r\n  const { code, userRec, connected, loadInfo, loadState, resetIO } =\r\n    useContext(TeamCtx);\r\n  const { noteInfo } = useContext(ReaderStateCtx);\r\n  const link = window.location.href;\r\n  const share = async () => {\r\n    const selfName = userRec[getUserID()]?.userName;\r\n    try {\r\n      if (!noteInfo) return;\r\n      await copy(`${noteInfo.name} - ${selfName} - Multibility\\n${link}`);\r\n      message.destroy(\"copy\");\r\n      message.success({\r\n        content: \"Link copied!\",\r\n        icon: <CopyOutlined />,\r\n        key: \"copy\",\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const userList = useMemo(() => {\r\n    const selfID = getUserID();\r\n    const { [selfID]: selfInfo, ...otherUsers } = userRec;\r\n    const list = selfInfo ? [selfInfo] : [];\r\n    const values = Object.values(otherUsers);\r\n    list.push(\r\n      ...values.filter(({ online }) => online),\r\n      ...values.filter(({ online }) => !online)\r\n    );\r\n    return list;\r\n  }, [userRec]);\r\n\r\n  const onlineNum = useMemo(\r\n    () => userList.filter(({ online }) => online).length,\r\n    [userList]\r\n  );\r\n\r\n  const teamPop = (\r\n    <div className=\"team-popover\">\r\n      {connected || (\r\n        <Alert\r\n          className=\"disconn-alert\"\r\n          message=\"Network failed.\"\r\n          icon={<DisconnectOutlined />}\r\n          type=\"error\"\r\n          showIcon\r\n          banner\r\n        />\r\n      )}\r\n      <PasscodeInput\r\n        className=\"code-display\"\r\n        value={String(code)}\r\n        length={4}\r\n        plain\r\n      />\r\n      <Button\r\n        icon={<ShareAltOutlined />}\r\n        className=\"share-btn\"\r\n        onClick={share}\r\n        block\r\n      >\r\n        Share\r\n      </Button>\r\n      <Divider />\r\n      <div className=\"user-list\">\r\n        {userList.map((u) => (\r\n          <UserCard key={u.userID} userID={u.userID} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const [reloading, setReloading] = useState(false);\r\n  const title = (\r\n    <div className=\"team-title\">\r\n      <span>Team info</span>\r\n      <Button\r\n        shape=\"circle\"\r\n        type=\"text\"\r\n        size=\"small\"\r\n        loading={reloading}\r\n        icon={<ReloadOutlined />}\r\n        onClick={async () => {\r\n          setReloading(true);\r\n          await loadInfo();\r\n          await loadState();\r\n          setReloading(false);\r\n          resetIO();\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Popover\r\n      content={teamPop}\r\n      trigger=\"click\"\r\n      placement=\"bottomRight\"\r\n      title={title}\r\n      getPopupContainer={(e) => e.parentElement!}\r\n    >\r\n      <Button\r\n        type=\"text\"\r\n        icon={\r\n          <Badge\r\n            status={connected ? \"success\" : \"error\"}\r\n            count={connected ? onlineNum : \"!\"}\r\n            size=\"small\"\r\n          >\r\n            <TeamOutlined />\r\n          </Badge>\r\n        }\r\n      />\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst JoinRoom = () => {\r\n  const { noteID } = useContext(ReaderStateCtx);\r\n  const { instantSave } = useContext(ReaderMethodCtx);\r\n  const nav = useNavigate();\r\n\r\n  const createRoom = async () => {\r\n    await instantSave();\r\n    const res = await putNote(noteID);\r\n    if (!res) return message.error(\"Can't create room.\");\r\n    await editNoteData(noteID, { team: true });\r\n    nav(\"/team/\" + noteID);\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      type=\"text\"\r\n      icon={<UsergroupAddOutlined />}\r\n      onClick={() => {\r\n        Modal.confirm({\r\n          title: \"Enable team editing\",\r\n          content: \"This will make your note public.\",\r\n          icon: <TeamOutlined style={{ color: \"#555\" }} />,\r\n          onOk: createRoom,\r\n        });\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import { useContext } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ReaderMethodCtx, ReaderStateCtx } from \"../Reader\";\r\nimport { HomeFilled, SaveOutlined } from \"@ant-design/icons\";\r\nimport { HeaderMiddle } from \"./Middle\";\r\nimport { HeaderRight } from \"./Right\";\r\nimport \"./header.sass\";\r\n\r\nexport default function ReaderHeader() {\r\n  return (\r\n    <header>\r\n      <HeaderLeft />\r\n      <HeaderMiddle />\r\n      <HeaderRight />\r\n    </header>\r\n  );\r\n}\r\n\r\nconst HeaderLeft = () => {\r\n  const { saved } = useContext(ReaderStateCtx);\r\n  const { instantSave } = useContext(ReaderMethodCtx);\r\n  const nav = useNavigate();\r\n\r\n  return (\r\n    <div className=\"left\">\r\n      <Button\r\n        type=\"text\"\r\n        onClick={async () => {\r\n          await instantSave();\r\n          nav(\"/\");\r\n        }}\r\n        icon={<HomeFilled style={{ opacity: 0.8 }} />}\r\n      />\r\n      <Button\r\n        type=\"text\"\r\n        className=\"save\"\r\n        onClick={instantSave}\r\n        disabled={saved}\r\n        icon={<SaveOutlined />}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { PointerEvent, TouchEvent, useEffect, useRef } from \"react\";\r\n\r\ntype iOSTouch = Touch & {\r\n  force?: number;\r\n  touchType?: \"stylus\" | \"direct\";\r\n};\r\n\r\nexport function isApplePencil(e: TouchEvent) {\r\n  const touch = e.touches[0] as iOSTouch;\r\n  return touch?.touchType === \"stylus\";\r\n}\r\n\r\nexport function usePreventTouch(\r\n  allowFinger: boolean\r\n): React.CanvasHTMLAttributes<HTMLCanvasElement> {\r\n  const isTouch = useRef(false);\r\n  const checkPoniter = (e: PointerEvent) =>\r\n    e.isPrimary && (isTouch.current = e.pointerType === \"touch\");\r\n\r\n  const isEventValid = (e: TouchEvent) =>\r\n    !isTouch.current ||\r\n    isApplePencil(e) ||\r\n    (allowFinger && e.touches.length === 1);\r\n\r\n  const preventTouch = (e: TouchEvent) =>\r\n    isEventValid(e) || e.stopPropagation();\r\n\r\n  return {\r\n    onPointerDownCapture: checkPoniter,\r\n    onPointerMoveCapture: checkPoniter,\r\n    onTouchStartCapture: preventTouch,\r\n    onTouchMoveCapture: preventTouch,\r\n  };\r\n}\r\n\r\nexport function usePreventGesture() {\r\n  useEffect(() => {\r\n    const handler = (e: Event) => e.preventDefault();\r\n    document.addEventListener(\"gesturestart\", handler);\r\n    document.addEventListener(\"gesturechange\", handler);\r\n    document.addEventListener(\"gestureend\", handler);\r\n    return () => {\r\n      document.removeEventListener(\"gesturestart\", handler);\r\n      document.removeEventListener(\"gesturechange\", handler);\r\n      document.removeEventListener(\"gestureend\", handler);\r\n    };\r\n  }, []);\r\n}\r\n","import React, {\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  Dispatch,\r\n  useEffect,\r\n  useCallback,\r\n  useDebugValue,\r\n  SetStateAction,\r\n  useImperativeHandle,\r\n} from \"react\";\r\nimport { usePreventTouch, usePreventGesture } from \"../../lib/touch/touch\";\r\nimport { DrawState, Mutation, Stroke } from \"../../lib/draw/DrawState\";\r\nimport { defaultDrawCtrl, DrawCtrl } from \"../../lib/draw/drawCtrl\";\r\nimport { releaseCanvas } from \"../../lib/draw/canvas\";\r\nimport { usePinch } from \"@use-gesture/react\";\r\nimport { v4 as getUid } from \"uuid\";\r\nimport { Set } from \"immutable\";\r\nimport paper from \"paper\";\r\nimport \"./draw.sass\";\r\n\r\nconst PREVIEW_WIDTH = 200;\r\nconst {\r\n  Path,\r\n  Size,\r\n  Point,\r\n  Group,\r\n  Color,\r\n  Raster,\r\n  Shape: { Rectangle },\r\n} = paper;\r\n\r\nexport type ActiveToolKey = \"\" | \"select\" | \"text\";\r\nexport interface DrawRefType {\r\n  deleteSelected: () => void;\r\n  rotateSelected: (angle: number, last?: boolean) => void;\r\n  duplicateSelected: () => void;\r\n  mutateStyle: (updated: Partial<DrawCtrl>) => void;\r\n  rasterize: () => string;\r\n  submitText: (text: string, fontSize: number, color: string) => void;\r\n  cancelText: () => void;\r\n}\r\ninterface DrawPropType {\r\n  drawState: DrawState;\r\n  otherStates?: DrawState[];\r\n  onChange?: Dispatch<SetStateAction<DrawState>>;\r\n  setActiveTool?: Dispatch<SetStateAction<ActiveToolKey>>;\r\n  drawCtrl?: DrawCtrl;\r\n  readonly?: boolean;\r\n  preview?: boolean;\r\n  imgSrc?: string;\r\n}\r\n\r\nconst Draw = React.forwardRef<DrawRefType, DrawPropType>(\r\n  (\r\n    {\r\n      drawState,\r\n      otherStates,\r\n      onChange = () => {},\r\n      drawCtrl = defaultDrawCtrl,\r\n      preview = false,\r\n      readonly = preview,\r\n      imgSrc,\r\n      setActiveTool,\r\n    },\r\n    ref\r\n  ) => {\r\n    const { width, height } = drawState;\r\n    const { mode, color, finger, lineWidth, highlight, eraserWidth, lasso } =\r\n      drawCtrl;\r\n\r\n    const canvasEl = useRef<HTMLCanvasElement>(null);\r\n    const scope = useRef(new paper.PaperScope());\r\n    const [group, setGroup] = useState<paper.Item[]>([]);\r\n    const [erased, setErased] = useState(Set<string>());\r\n    const [path, setPath] = usePaperItem<paper.Path>();\r\n    const [rect, setRect] = usePaperItem<paper.Shape.Rectangle>();\r\n\r\n    useEffect(() => {\r\n      const cvs = canvasEl.current;\r\n      const scp = scope.current;\r\n      if (!cvs) return;\r\n\r\n      scp.setup(cvs);\r\n      const r = preview ? PREVIEW_WIDTH / width : 1;\r\n      scp.view.viewSize = new Size(width, height).multiply(r);\r\n      scp.view.scale(r, new Point(0, 0));\r\n      paintBackground(scp, width, height);\r\n\r\n      return () => {\r\n        scp.remove();\r\n        releaseCanvas(cvs);\r\n      };\r\n    }, [width, height, preview]);\r\n\r\n    useEffect(() => {\r\n      if (!imgSrc) return;\r\n      const img = new Image();\r\n      img.src = imgSrc;\r\n      let raster: paper.Raster;\r\n\r\n      img.onload = () => {\r\n        scope.current.activate();\r\n        raster = new Raster(img);\r\n        scope.current.project.layers[0].addChild(raster);\r\n        raster.position = scope.current.view.center;\r\n        let r = width / img.width;\r\n        raster.scale(r);\r\n      };\r\n\r\n      return () => void raster?.remove();\r\n    }, [imgSrc, width]);\r\n\r\n    const mergedStrokes = useMemo(\r\n      () =>\r\n        otherStates\r\n          ? DrawState.mergeStates(drawState, ...otherStates)\r\n          : drawState.getStrokeList(),\r\n      [drawState, otherStates]\r\n    );\r\n\r\n    useEffect(() => {\r\n      const tempGroup: paper.Item[] = [];\r\n      const othersGroup: paper.Item[] = [];\r\n\r\n      mergedStrokes.forEach((stroke) =>\r\n        paintStroke(\r\n          stroke,\r\n          scope.current,\r\n          drawState.hasStroke(stroke.uid) ? tempGroup : othersGroup,\r\n          erased.has(stroke.uid)\r\n        )\r\n      );\r\n      setGroup(tempGroup);\r\n\r\n      return () => {\r\n        tempGroup.forEach((item) => item.remove());\r\n        othersGroup.forEach((item) => item.remove());\r\n      };\r\n    }, [mergedStrokes, erased, drawState]);\r\n\r\n    const [selected, setSelected] = useState(false);\r\n    const paperMode = mode === \"select\" && selected ? \"selected\" : mode;\r\n    const [selectedIDs, setSelectedIDs] = useState<string[]>([]);\r\n    const selectedItems = useMemo(() => {\r\n      const IDSet = Set(selectedIDs);\r\n      return group.filter((item) => IDSet.has(item.name));\r\n    }, [group, selectedIDs]);\r\n\r\n    const resetSelect = useCallback(() => {\r\n      setSelected(false);\r\n      setPath(undefined);\r\n      setRect(undefined);\r\n    }, [setPath, setRect]);\r\n\r\n    useEffect(() => {\r\n      if (mode === \"select\") return resetSelect;\r\n    }, [mode, resetSelect]);\r\n\r\n    useEffect(() => {\r\n      if (selected) return () => setSelectedIDs([]);\r\n    }, [selected]);\r\n\r\n    useEffect(() => resetSelect, [lasso, resetSelect]);\r\n\r\n    const ratio = useRef(1);\r\n    const updateRatio = () => {\r\n      const clientWidth = canvasEl.current?.clientWidth;\r\n      if (clientWidth) ratio.current = width / clientWidth;\r\n      scope.current.activate();\r\n    };\r\n\r\n    const setNewRect = (e: paper.MouseEvent) => {\r\n      const point = transformPoint(e.point);\r\n      const rectangle = startSelectRect(point);\r\n      setRect(rectangle);\r\n    };\r\n\r\n    const transformPoint = (projP: paper.Point) => {\r\n      scope.current.activate();\r\n      const { center, zoom } = scope.current.view;\r\n      const viewP = scope.current.view.projectToView(projP);\r\n      const absoluteP = viewP.multiply(ratio.current);\r\n      const offsetP = new Point(width, height)\r\n        .divide(2)\r\n        .subtract(center.multiply(zoom));\r\n      return absoluteP.subtract(offsetP).divide(zoom);\r\n    };\r\n\r\n    const handleDown = {\r\n      draw() {\r\n        updateRatio();\r\n        setPath(startStroke(color, lineWidth, highlight));\r\n      },\r\n      erase() {\r\n        updateRatio();\r\n        setPath(startStroke(\"#ccc\", eraserWidth, true));\r\n      },\r\n      select(e: paper.MouseEvent) {\r\n        updateRatio();\r\n        if (lasso) setPath(startStroke(\"#1890ff\", 5));\r\n        else setNewRect(e);\r\n      },\r\n      selected(e: paper.MouseEvent) {\r\n        updateRatio();\r\n        const point = transformPoint(e.point);\r\n        // check if point is outside of selection\r\n        if (lasso) {\r\n          if (path?.contains(point)) return;\r\n          setPath(startStroke(\"#1890ff\", 5));\r\n        } else {\r\n          if (rect?.bounds.contains(point)) return;\r\n          setNewRect(e);\r\n        }\r\n        setSelected(false);\r\n      },\r\n      text(e: paper.MouseEvent) {\r\n        updateRatio();\r\n        const point = transformPoint(e.point);\r\n        const t = new paper.PointText(point);\r\n        setPointText(t);\r\n      },\r\n    }[paperMode];\r\n\r\n    const handleDrag = {\r\n      draw(e: paper.MouseEvent) {\r\n        if (!path) return;\r\n        scope.current.activate();\r\n        path.add(transformPoint(e.point));\r\n        path.smooth();\r\n      },\r\n      erase(e: paper.MouseEvent) {\r\n        if (!path) return;\r\n        scope.current.activate();\r\n        path.add(transformPoint(e.point));\r\n        path.smooth();\r\n\r\n        const newErased = group\r\n          .filter((p) => !erased.has(p.name))\r\n          .filter((p) => checkErase(p, path))\r\n          .map((p) => p.name);\r\n        setErased((prev) => prev.concat(newErased));\r\n      },\r\n      select(e: paper.MouseEvent) {\r\n        scope.current.activate();\r\n        if (lasso) {\r\n          if (!path) return;\r\n          path.add(transformPoint(e.point));\r\n          path.smooth();\r\n        } else {\r\n          if (!rect) return;\r\n          const delta = e.delta.multiply(ratio.current);\r\n          rect.size = rect.size.add(new Size(delta.x, delta.y));\r\n          rect.translate(delta.divide(2));\r\n        }\r\n      },\r\n      selected(e: paper.MouseEvent) {\r\n        scope.current.activate();\r\n        const delta = e.delta.multiply(ratio.current);\r\n        selectedItems.forEach((item) => item.translate(delta));\r\n        path?.translate(delta);\r\n        rect?.translate(delta);\r\n      },\r\n      text: null,\r\n    }[paperMode];\r\n\r\n    const handleUp = {\r\n      draw() {\r\n        if (!path || path.segments.length === 0) return;\r\n        scope.current.activate();\r\n        path.simplify();\r\n        const pathData = path.exportJSON();\r\n        setPath(undefined);\r\n        onChange((prev) => DrawState.addStroke(prev, pathData));\r\n      },\r\n      erase() {\r\n        if (!path) return;\r\n        scope.current.activate();\r\n        setPath(undefined);\r\n        onChange((prev) => DrawState.eraseStrokes(prev, erased.toArray()));\r\n        setErased(Set());\r\n      },\r\n      select() {\r\n        scope.current.activate();\r\n        let items: paper.Item[];\r\n        if (lasso) {\r\n          if (!path || path.length < 50) return setPath(undefined);\r\n          path.closePath();\r\n          path.simplify();\r\n          moveDash(path);\r\n          items = checkPathSelection(path, group);\r\n        } else {\r\n          if (!rect) return;\r\n          const { width, height } = rect.size.abs();\r\n          if (width * height < 100) return setRect(undefined);\r\n          moveDash(rect);\r\n          items = checkRectSelection(rect, group);\r\n        }\r\n        setSelectedIDs(items.map((item) => item.name));\r\n        setSelected(true);\r\n      },\r\n      selected() {\r\n        updateMutation();\r\n      },\r\n      text: null,\r\n    }[paperMode];\r\n\r\n    const handlePaper = () => {\r\n      if (readonly) return;\r\n      scope.current.view.onMouseDown = handleDown;\r\n      scope.current.view.onMouseDrag = handleDrag;\r\n      scope.current.view.onMouseUp = handleUp;\r\n    };\r\n    useEffect(handlePaper);\r\n\r\n    const updateMutation = () => {\r\n      if (!selectedItems?.length) return;\r\n      const mutations = selectedItems.map(\r\n        (p) => [p.name, p.exportJSON()] as Mutation\r\n      );\r\n      onChange((prev) => DrawState.mutateStrokes(prev, mutations));\r\n    };\r\n\r\n    const deleteSelected = () => {\r\n      if (!selectedIDs.length) return;\r\n      onChange((prev) => DrawState.eraseStrokes(prev, selectedIDs));\r\n      setSelectedIDs([]);\r\n      resetSelect();\r\n    };\r\n\r\n    const rotateSelected = (angle: number, last = false) => {\r\n      let aniCount = last ? 10 : 1;\r\n      const dAngle = angle / aniCount;\r\n      const center = (rect || path)?.position;\r\n      const rotate = () => {\r\n        selectedItems.forEach((item) => item.rotate(dAngle, center));\r\n        rect?.rotate(dAngle, center);\r\n        path?.rotate(dAngle, center);\r\n        if (--aniCount > 0) requestAnimationFrame(rotate);\r\n        else last && updateMutation();\r\n      };\r\n      rotate();\r\n    };\r\n\r\n    const mutateStyle = (updated: Partial<DrawCtrl>) => {\r\n      scope.current.activate();\r\n      updateGroupStyle(selectedItems, updated);\r\n      updateMutation();\r\n    };\r\n\r\n    const duplicateSelected = () => {\r\n      scope.current.activate();\r\n      const size = (rect || path)?.bounds.size;\r\n      if (!size) return;\r\n      const { width, height } = size;\r\n      const transP = new Point(width, height).divide(10);\r\n      const newSG = new Group(selectedItems).clone({ insert: false });\r\n      newSG.translate(transP);\r\n      rect?.translate(transP);\r\n      path?.translate(transP);\r\n\r\n      const mutations = newSG.children.map(\r\n        (item) => [getUid(), item.exportJSON()] as Mutation\r\n      );\r\n      onChange((prev) => DrawState.mutateStrokes(prev, mutations));\r\n      setSelectedIDs(mutations.map((m) => m[0]));\r\n    };\r\n\r\n    const rasterize = () =>\r\n      new Group(selectedItems).rasterize({ insert: false }).toDataURL();\r\n\r\n    const [pointText, setPointText] = usePaperItem<paper.PointText>();\r\n    const cancelText = useCallback(\r\n      () => setPointText(undefined),\r\n      [setPointText]\r\n    );\r\n\r\n    useEffect(() => {\r\n      if (mode === \"text\") return cancelText;\r\n    }, [mode, cancelText]);\r\n\r\n    const submitText = (text: string, fontSize: number, color = \"#000\") => {\r\n      if (!pointText) return;\r\n      pointText.content = text;\r\n      pointText.fontSize = fontSize * 10;\r\n      pointText.fillColor = new Color(color);\r\n      const pathData = pointText.exportJSON();\r\n      onChange((prev) => DrawState.addStroke(prev, pathData));\r\n      cancelText();\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      deleteSelected,\r\n      duplicateSelected,\r\n      cancelText,\r\n      rotateSelected,\r\n      submitText,\r\n      mutateStyle,\r\n      rasterize,\r\n    }));\r\n\r\n    useEffect(() => {\r\n      if (!setActiveTool) return;\r\n      if (paperMode === \"selected\") {\r\n        setActiveTool(\"select\");\r\n      } else if (paperMode === \"text\") {\r\n        setActiveTool(pointText ? \"text\" : \"\");\r\n      } else {\r\n        setActiveTool(\"\");\r\n      }\r\n    }, [paperMode, pointText, setActiveTool]);\r\n\r\n    usePreventGesture();\r\n    usePinch(\r\n      ({ memo, offset: [scale], first, last, origin }) => {\r\n        const { view } = scope.current;\r\n\r\n        let lastScale, lastOX, lastOY, elX, elY: number;\r\n        if (first || !memo) {\r\n          updateRatio();\r\n          if (!canvasEl.current) return;\r\n          const { x, y } = canvasEl.current.getBoundingClientRect();\r\n          lastScale = 1;\r\n          [lastOX, lastOY] = [origin[0] - x, origin[1] - y];\r\n          [elX, elY] = [x, y];\r\n        } else {\r\n          [lastScale, [lastOX, lastOY], [elX, elY]] = memo;\r\n        }\r\n\r\n        const r = ratio.current;\r\n        const [oX, oY] = [origin[0] - elX, origin[1] - elY];\r\n        const originViewP = new Point(oX, oY).multiply(r);\r\n        const originProjP = view.viewToProject(originViewP);\r\n\r\n        if (Math.abs(1 - scale) < 0.05) scale = 1;\r\n        let dScale = first ? 1 : scale / lastScale;\r\n        let aniCount = last ? 10 : 1;\r\n        dScale = Math.pow(dScale, 1 / aniCount);\r\n        const scaleView = () => {\r\n          view.scale(dScale, originProjP);\r\n          if (--aniCount > 0) requestAnimationFrame(scaleView);\r\n          else if (last) putCenterBack(view);\r\n        };\r\n        scaleView();\r\n\r\n        const [dX, dY] = [oX - lastOX, oY - lastOY];\r\n        const transP = new Point(dX, dY).multiply(r / scale);\r\n        view.translate(transP);\r\n\r\n        if (!last) return [scale, [oX, oY], [elX, elY]];\r\n      },\r\n      {\r\n        scaleBounds: { max: 10, min: 0.3 },\r\n        rubberband: 0.5,\r\n        target: canvasEl,\r\n      }\r\n    );\r\n\r\n    const touchHandler = usePreventTouch(finger);\r\n    return (\r\n      <div className=\"draw-wrapper\">\r\n        <canvas\r\n          ref={canvasEl}\r\n          className=\"draw-canvas\"\r\n          data-paper-hidpi={false}\r\n          {...touchHandler}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nDraw.displayName = \"Draw\";\r\nexport default React.memo(Draw);\r\n\r\nfunction usePaperItem<T extends paper.Item>(init?: T) {\r\n  const stateArray = useState<T | undefined>(init);\r\n  const [item] = stateArray;\r\n  useDebugValue(item);\r\n  useEffect(() => () => void item?.remove(), [item]);\r\n  return stateArray;\r\n}\r\n\r\nconst paintStroke = (\r\n  stroke: Stroke,\r\n  scope: paper.PaperScope,\r\n  group?: paper.Item[],\r\n  erased = false\r\n) => {\r\n  let { pathData, uid } = stroke;\r\n  try {\r\n    scope.activate();\r\n    const item = scope.project.activeLayer.importJSON(pathData);\r\n    if (!item) return;\r\n    item.name = uid;\r\n    if (erased) item.opacity = 0.5;\r\n    group?.push(item);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getCheckPoints = (() => {\r\n  const cache = new WeakMap<paper.Segment, paper.Point[]>();\r\n  return (segment: paper.Segment, width: number) => {\r\n    const cached = cache.get(segment);\r\n    if (cached) return cached;\r\n\r\n    const { point } = segment;\r\n    const prevPoint = segment.previous?.point;\r\n    if (!prevPoint) return [];\r\n    const delta = point.subtract(prevPoint);\r\n    const times = (delta.length / width) * 2;\r\n    const checkPoints: paper.Point[] = [];\r\n    for (let i = 0; i < times; i += 1) {\r\n      checkPoints.push(point.subtract(delta.multiply(i / times)));\r\n    }\r\n    cache.set(segment, checkPoints);\r\n    return checkPoints;\r\n  };\r\n})();\r\n\r\nconst checkErase = (item: paper.Item, eraserPath: paper.Path) => {\r\n  const curveBound = eraserPath.lastSegment.curve?.strokeBounds;\r\n  if (!(item instanceof paper.Path)) return false;\r\n  if (!curveBound?.intersects(item.strokeBounds)) return false;\r\n\r\n  if (eraserPath.intersects(item)) return true;\r\n\r\n  const { strokeWidth, lastSegment } = eraserPath;\r\n  const checkPoints = getCheckPoints(lastSegment, strokeWidth);\r\n  return checkPoints.some((cPoint) => {\r\n    const d = item.getNearestPoint(cPoint)?.getDistance(cPoint);\r\n    return d && d * 2 < item.strokeWidth + strokeWidth;\r\n  });\r\n};\r\n\r\nconst paintBackground = (\r\n  scope: paper.PaperScope,\r\n  width: number,\r\n  height: number\r\n) => {\r\n  scope.activate();\r\n  const bgRect = new Rectangle(new Point(0, 0), new Point(width, height));\r\n  bgRect.fillColor = new Color(\"#fff\");\r\n  const bgLayer = new paper.Layer(bgRect);\r\n  scope.project.insertLayer(0, bgLayer);\r\n  return bgRect;\r\n};\r\n\r\nconst startSelectRect = (point: paper.Point) => {\r\n  const rect = new Rectangle(point, new Size(0, 0));\r\n  rect.strokeColor = new Color(\"#1890ff\");\r\n  rect.strokeWidth = 5;\r\n  return rect;\r\n};\r\n\r\nconst startStroke = (color: string, lineWidth: number, highlight = false) => {\r\n  const path = new Path();\r\n  const strokeColor = new Color(color);\r\n  if (highlight) {\r\n    strokeColor.alpha = 0.5;\r\n    path.blendMode = \"multiply\";\r\n  }\r\n  path.strokeColor = strokeColor;\r\n  path.strokeWidth = lineWidth;\r\n  path.strokeJoin = \"round\";\r\n  path.strokeCap = \"round\";\r\n  return path;\r\n};\r\n\r\nconst moveDash = (item: paper.Item) => {\r\n  if (item.strokeColor) item.strokeColor.alpha = 0.5;\r\n  item.dashOffset = 0;\r\n  item.dashArray = [30, 20];\r\n  item.onFrame = () => (item.dashOffset += 3);\r\n};\r\n\r\nconst getCenterTranslate = (view: paper.View) => {\r\n  const { center, zoom } = view;\r\n  const { height, width } = view.viewSize;\r\n  const { x, y } = center;\r\n  if (zoom <= 1) return [width / 2 - x, height / 2 - y];\r\n\r\n  const dX = (width * (zoom - 1)) / zoom / 2;\r\n  const dY = (height * (zoom - 1)) / zoom / 2;\r\n  const [minX, maxX, minY, maxY] = [\r\n    width / 2 - dX,\r\n    width / 2 + dX,\r\n    height / 2 - dY,\r\n    height / 2 + dY,\r\n  ];\r\n\r\n  const deltaX = x < minX ? minX - x : x > maxX ? maxX - x : 0;\r\n  const deltaY = y < minY ? minY - y : y > maxY ? maxY - y : 0;\r\n  return [deltaX, deltaY];\r\n};\r\n\r\nconst putCenterBack = (view: paper.View) => {\r\n  const [deltaX, deltaY] = getCenterTranslate(view);\r\n  let aniCount = 10;\r\n  const dP = new Point(deltaX, deltaY).divide(-aniCount);\r\n  const move = () => {\r\n    view.translate(dP);\r\n    if (--aniCount > 0) requestAnimationFrame(move);\r\n  };\r\n  move();\r\n};\r\n\r\nconst checkRectSelection = (rect: paper.Shape.Rectangle, items: paper.Item[]) =>\r\n  items.filter((item) =>\r\n    item instanceof paper.Path\r\n      ? item.intersects(rect) || item.isInside(rect.bounds)\r\n      : item.bounds.intersects(rect.bounds)\r\n  );\r\n\r\nconst checkPathSelection = (selection: paper.Path, items: paper.Item[]) => {\r\n  const isInside = (p: paper.Path) => {\r\n    const res = p.subtract(selection, { insert: false, trace: false });\r\n    res.remove();\r\n    return res.isEmpty();\r\n  };\r\n\r\n  return items.filter((item) => {\r\n    if (!item.bounds.intersects(selection.bounds)) return false;\r\n    let checkedP: paper.Path;\r\n    if (item instanceof paper.Path) {\r\n      checkedP = item;\r\n    } else {\r\n      checkedP = new Path.Rectangle(item.bounds);\r\n      checkedP.remove();\r\n    }\r\n    return checkedP.intersects(selection) || isInside(checkedP);\r\n  });\r\n};\r\n\r\nconst updateGroupStyle = (items: paper.Item[], updated: Partial<DrawCtrl>) => {\r\n  const { lineWidth, color, highlight } = updated;\r\n  items.forEach((item) => {\r\n    if (item instanceof paper.PointText) {\r\n      if (color) {\r\n        const newColor = new Color(color);\r\n        item.fillColor = newColor;\r\n      }\r\n    }\r\n\r\n    if (!(item instanceof paper.Path)) return;\r\n\r\n    if (color) {\r\n      const newColor = new Color(color);\r\n      if (item.blendMode === \"multiply\") newColor.alpha = 0.5;\r\n      item.strokeColor = newColor;\r\n    }\r\n\r\n    if (lineWidth) item.strokeWidth = lineWidth;\r\n\r\n    if (!item.strokeColor || highlight === undefined) return;\r\n    item.strokeColor.alpha = highlight ? 0.5 : 1;\r\n    item.blendMode = highlight ? \"multiply\" : \"normal\";\r\n  });\r\n};\r\n","import {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useCallback,\r\n  createContext,\r\n} from \"react\";\r\nimport {\r\n  DrawCtrl,\r\n  getDrawCtrl,\r\n  defaultDrawCtrl,\r\n} from \"../../lib/draw/drawCtrl\";\r\nimport {\r\n  NoteInfo,\r\n  NotePage,\r\n  createPage,\r\n  defaultNotePage,\r\n} from \"../../lib/note/note\";\r\nimport { useMemoizedFn as useEvent, useSafeState } from \"ahooks\";\r\nimport { NewPageInfo, ReorderInfo, SyncInfo } from \"../../lib/network/io\";\r\nimport { SetOperation, StateSet } from \"../../lib/draw/StateSet\";\r\nimport { loadNote, editNoteData } from \"../../lib/note/archive\";\r\nimport { AddPageButton, showPageDelMsg } from \"./ReaderUtils\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { DrawState } from \"../../lib/draw/DrawState\";\r\nimport { TeamState } from \"../../lib/draw/TeamState\";\r\nimport { SelectTool, TextTool } from \"./tools/DrawTools\";\r\nimport { getLargestKey, insertAfter } from \"../../lib/array\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { debounce, last, once, range } from \"lodash-es\";\r\nimport { Map } from \"immutable\";\r\nimport ReaderHeader from \"./header/Header\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport Draw, { ActiveToolKey, DrawRefType } from \"../draw/Draw\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { message } from \"antd\";\r\nimport \"./reader.sass\";\r\n\r\nexport const ReaderStateCtx = createContext({\r\n  noteID: \"\",\r\n  noteInfo: undefined as NoteInfo | undefined,\r\n  stateSet: undefined as StateSet | undefined,\r\n  teamState: undefined as TeamState | undefined,\r\n  pageRec: undefined as Map<string, NotePage> | undefined,\r\n  pageOrder: undefined as string[] | undefined,\r\n  saved: true,\r\n  currPageID: \"\",\r\n  drawCtrl: defaultDrawCtrl,\r\n});\r\n\r\nexport const ReaderMethodCtx = createContext({\r\n  scrollPage: (pageID: string) => {},\r\n  switchPageMarked: (pageID: string) => {},\r\n  updateStateSet: (cb: (prevSS: StateSet) => StateSet) => {},\r\n  addPage: (prevPageID: string, copy?: boolean) => {},\r\n  addFinalPage: () => {},\r\n  deletePage: (pageID: string) => {},\r\n  saveReorder: async (order: string[], push: boolean) => {},\r\n  setInviewRatios: (() => {}) as Setter<Map<string, number>>,\r\n  setDrawCtrl: (() => {}) as Setter<DrawCtrl>,\r\n  instantSave: (() => {}) as () => Promise<void> | undefined,\r\n  handleUndo: () => {},\r\n  handleRedo: () => {},\r\n});\r\n\r\nexport default function Reader() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const nav = useNavigate();\r\n\r\n  const [pageRec, setPageRec] = useState<Map<string, NotePage>>();\r\n  const [noteInfo, setNoteInfo] = useState<NoteInfo>();\r\n  const [stateSet, setStateSet] = useState<StateSet>();\r\n  const [drawCtrl, setDrawCtrl] = useState(defaultDrawCtrl);\r\n  const [pageOrder, setPageOrder] = useState<string[]>();\r\n  const [saved, setSaved] = useSafeState(true);\r\n\r\n  const refRec = useRef<Record<string, HTMLElement>>({});\r\n\r\n  const { io, teamOn, teamState, addTeamStatePage } = useContext(TeamCtx);\r\n\r\n  useEffect(() => {\r\n    const loadNotePages = async () => {\r\n      const storedNote = await loadNote(noteID);\r\n      if (!storedNote) {\r\n        message.error(\"Note not found\");\r\n        return nav(\"/\");\r\n      }\r\n      const { pageRec, pdf, pageOrder, ...noteInfo } = storedNote;\r\n      setPageRec(Map(pageRec));\r\n      setPageOrder(pageOrder);\r\n      setNoteInfo(noteInfo);\r\n      setStateSet(StateSet.createFromPages(pageRec));\r\n      setDrawCtrl(await getDrawCtrl());\r\n    };\r\n    loadNotePages();\r\n  }, [nav, noteID, teamOn]);\r\n\r\n  useEffect(() => {\r\n    if (!noteInfo) return;\r\n    document.title = noteInfo.name + \" - Multibility\";\r\n  }, [noteInfo]);\r\n\r\n  const saver = useEvent(async () => {\r\n    const pr = pageRec?.toObject();\r\n    const canvas = document.querySelector(\"canvas\");\r\n    const thumbnail = canvas?.toDataURL(\"image/jpeg\", 0.1);\r\n    await editNoteData(noteID, { pageRec: pr, thumbnail });\r\n    setSaved(true);\r\n  });\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const debouncedSave = useCallback(debounce(saver, 2000), [saver]);\r\n  const instantSave = debouncedSave.flush;\r\n\r\n  const savePageRec = (pageID: string, cb: (prev: NotePage) => NotePage) => {\r\n    setPageRec((prev) => prev?.update(pageID, defaultNotePage, cb));\r\n    setSaved(false);\r\n    debouncedSave();\r\n  };\r\n\r\n  const saveReorder = async (pageOrder: string[], push = false) => {\r\n    setPageOrder(pageOrder);\r\n    await editNoteData(noteID, { pageOrder });\r\n    await instantSave();\r\n    push && pushReorder(pageOrder);\r\n  };\r\n\r\n  const pushReorder = (pageOrder: string[]) =>\r\n    io?.emit(\"reorder\", { pageOrder });\r\n\r\n  const handleReorder = useEvent(\r\n    ({ deleted, pageOrder, prevOrder }: ReorderInfo) => {\r\n      saveReorder(pageOrder);\r\n      if (!deleted) return;\r\n      showPageDelMsg(() => saveReorder(prevOrder, true));\r\n    }\r\n  );\r\n\r\n  const handleNewPage = useEvent(\r\n    ({ pageOrder, pageID, newPage }: NewPageInfo) => {\r\n      saveReorder(pageOrder);\r\n      savePageRec(pageID, () => newPage);\r\n      setStateSet((prev) => prev?.addState(pageID, newPage));\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    io?.on(\"reorder\", handleReorder);\r\n    io?.on(\"newPage\", handleNewPage);\r\n    return () => void io?.removeAllListeners();\r\n  }, [io, handleReorder, handleNewPage]);\r\n\r\n  const pushOperation = (operation: SetOperation) => {\r\n    const handleSync = ({ pageID, stroke }: SyncInfo) =>\r\n      setStateSet((prev) => prev?.syncStrokeTime(pageID, stroke));\r\n\r\n    io?.emit(\"push\", { operation }, handleSync);\r\n  };\r\n\r\n  const pushNewPage = (\r\n    pageOrder: string[],\r\n    pageID: string,\r\n    newPage: NotePage\r\n  ) => {\r\n    const { image, marked, ...newTeamPage } = newPage;\r\n    io?.emit(\"newPage\", { pageOrder, pageID, newPage: newTeamPage });\r\n    addTeamStatePage(pageID, newPage);\r\n  };\r\n\r\n  const updatePageRec = (pageID: string, ds: DrawState) => {\r\n    const state = DrawState.flaten(ds);\r\n    savePageRec(pageID, (prev) => ({ ...prev, state }));\r\n  };\r\n\r\n  const updateStateSet = (cb: (prevSS: StateSet) => StateSet) => {\r\n    if (!stateSet) return;\r\n    const newSS = cb(stateSet);\r\n    setStateSet(newSS);\r\n    const lastDS = newSS.getLastDS();\r\n    const lastOp = newSS.lastOp;\r\n    if (!lastDS || !lastOp) return;\r\n    updatePageRec(...lastDS);\r\n    pushOperation(lastOp);\r\n  };\r\n\r\n  const switchPageMarked = (pageID: string) =>\r\n    savePageRec(pageID, (prev) => ({ ...prev, marked: !prev.marked }));\r\n\r\n  const scrollPage = (pageID: string) =>\r\n    refRec.current[pageID]?.scrollIntoView();\r\n\r\n  const [inviewRatios, setInviewRatios] = useState(Map<string, number>());\r\n  const currPageID = useMemo(() => getLargestKey(inviewRatios), [inviewRatios]);\r\n\r\n  const addPage = (prevPageID: string, copy = false) => {\r\n    if (!pageOrder) return;\r\n    const prevPage = copy ? pageRec?.get(prevPageID) : undefined;\r\n    const [pageID, newPage] = createPage(prevPage);\r\n    const newOrder = insertAfter(pageOrder, prevPageID, pageID);\r\n    pushNewPage(newOrder, pageID, newPage);\r\n    saveReorder(newOrder);\r\n    savePageRec(pageID, () => newPage);\r\n    setStateSet((prev) => prev?.addState(pageID, newPage));\r\n  };\r\n\r\n  const addFinalPage = () => {\r\n    const lastPageID = last(pageOrder);\r\n    lastPageID && addPage(lastPageID);\r\n  };\r\n\r\n  const deletePage = (pageID: string) => {\r\n    const newOrder = pageOrder?.filter((id) => id !== pageID);\r\n    newOrder?.length && saveReorder(newOrder, true);\r\n  };\r\n\r\n  const handleUndo = () => updateStateSet((prev) => prev.undo());\r\n  const handleRedo = () => updateStateSet((prev) => prev.redo());\r\n  const renderResult = (\r\n    <div className=\"reader container\">\r\n      <ReaderHeader />\r\n      <main>\r\n        {pageOrder?.map((uid) => (\r\n          <section\r\n            key={uid}\r\n            className=\"note-page\"\r\n            ref={(e) => e && (refRec.current[uid] = e)}\r\n          >\r\n            <PageContainer uid={uid} />\r\n          </section>\r\n        ))}\r\n        <AddPageButton />\r\n      </main>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ReaderStateCtx.Provider\r\n      value={{\r\n        saved,\r\n        noteID,\r\n        pageRec,\r\n        drawCtrl,\r\n        noteInfo,\r\n        stateSet,\r\n        teamState,\r\n        pageOrder,\r\n        currPageID,\r\n      }}\r\n    >\r\n      <ReaderMethodCtx.Provider\r\n        value={{\r\n          addPage,\r\n          scrollPage,\r\n          deletePage,\r\n          setDrawCtrl,\r\n          saveReorder,\r\n          instantSave,\r\n          addFinalPage,\r\n          handleRedo,\r\n          handleUndo,\r\n          updateStateSet,\r\n          setInviewRatios,\r\n          switchPageMarked,\r\n        }}\r\n      >\r\n        {renderResult}\r\n      </ReaderMethodCtx.Provider>\r\n    </ReaderStateCtx.Provider>\r\n  );\r\n}\r\n\r\nconst PageContainer: FC<{ uid: string }> = ({ uid }) => {\r\n  const { pageRec, stateSet, teamState } = useContext(ReaderStateCtx);\r\n  const { updateStateSet } = useContext(ReaderMethodCtx);\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n  const updateState = (ds: DrawState) => {\r\n    updateStateSet((prev) => prev.setState(uid, ds));\r\n  };\r\n\r\n  if (!page || !drawState) return null;\r\n  return (\r\n    <PageWrapper\r\n      drawState={drawState}\r\n      teamStateMap={teamStateMap}\r\n      updateState={updateState}\r\n      pdfIndex={page.pdfIndex}\r\n      uid={uid}\r\n    />\r\n  );\r\n};\r\n\r\nexport const PageWrapper = ({\r\n  thumbnail,\r\n  drawState,\r\n  teamStateMap,\r\n  updateState,\r\n  pdfIndex,\r\n  preview = false,\r\n  uid,\r\n}: {\r\n  uid: string;\r\n  drawState: DrawState;\r\n  teamStateMap?: Map<string, DrawState>;\r\n  thumbnail?: string;\r\n  pdfIndex?: number;\r\n  updateState?: (ds: DrawState) => void;\r\n  preview?: boolean;\r\n}) => {\r\n  const { setInviewRatios } = useContext(ReaderMethodCtx);\r\n  const { noteID } = useContext(ReaderStateCtx);\r\n  const [fullImg, setFullImg] = useState<string>();\r\n  const [ref, visible, entry] = useInView({ threshold: range(0, 1.1, 0.1) });\r\n\r\n  useEffect(() => {\r\n    if (preview) return;\r\n    if (!entry || !visible) {\r\n      setInviewRatios((prev) => prev.delete(uid));\r\n    } else {\r\n      setInviewRatios((prev) => prev.set(uid, entry.intersectionRatio));\r\n    }\r\n  }, [visible, entry, uid, preview, setInviewRatios]);\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const loadImage = useCallback(\r\n    once(async () => {\r\n      if (!pdfIndex) return;\r\n      const { getOnePageImage } = await import(\"../../lib/note/pdfImage\");\r\n      setFullImg(await getOnePageImage(noteID, pdfIndex));\r\n    }),\r\n    [pdfIndex, noteID]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!preview && visible) loadImage();\r\n  }, [visible, preview, loadImage]);\r\n\r\n  const { ignores } = useContext(TeamCtx);\r\n  const otherStates = useMemo(\r\n    () => teamStateMap?.deleteAll(ignores).toList().toArray(),\r\n    [teamStateMap, ignores]\r\n  );\r\n\r\n  const imageLoaded = fullImg || !pdfIndex;\r\n  const drawShow = visible && imageLoaded;\r\n  const maskShow = Boolean(preview || !drawShow);\r\n\r\n  const { height, width } = drawState;\r\n  const ratio = height / width;\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className=\"page-wrapper\"\r\n      style={{ paddingTop: `${ratio * 100}%` }}\r\n    >\r\n      {drawShow && (\r\n        <DrawWrapper\r\n          drawState={drawState}\r\n          otherStates={otherStates}\r\n          updateState={updateState}\r\n          imgSrc={fullImg || thumbnail}\r\n          preview={preview}\r\n        />\r\n      )}\r\n      {maskShow && <div className=\"mask\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DrawWrapper = ({\r\n  drawState,\r\n  updateState,\r\n  otherStates,\r\n  preview = false,\r\n  imgSrc,\r\n}: {\r\n  drawState: DrawState;\r\n  otherStates?: DrawState[];\r\n  updateState?: (ds: DrawState) => void;\r\n  preview?: boolean;\r\n  imgSrc?: string;\r\n}) => {\r\n  const { drawCtrl } = useContext(ReaderStateCtx);\r\n  const [activeTool, setActiveTool] = useState<ActiveToolKey>(\"\");\r\n  const drawRef = useRef<DrawRefType>(null);\r\n\r\n  const handleChange = useEvent(\r\n    (arg: ((s: DrawState) => DrawState) | DrawState) => {\r\n      if (!updateState) return;\r\n      const newDS = arg instanceof DrawState ? arg : arg(drawState);\r\n      updateState(newDS);\r\n    }\r\n  );\r\n\r\n  return preview ? (\r\n    <Draw\r\n      drawState={drawState}\r\n      otherStates={otherStates}\r\n      imgSrc={imgSrc}\r\n      readonly\r\n      preview\r\n    />\r\n  ) : (\r\n    <>\r\n      <Draw\r\n        drawState={drawState}\r\n        otherStates={otherStates}\r\n        onChange={handleChange}\r\n        imgSrc={imgSrc}\r\n        drawCtrl={drawCtrl}\r\n        ref={drawRef}\r\n        setActiveTool={setActiveTool}\r\n      />\r\n      <SelectTool drawRef={drawRef} visible={activeTool === \"select\"} />\r\n      <TextTool drawRef={drawRef} visible={activeTool === \"text\"} />\r\n    </>\r\n  );\r\n};\r\nDrawWrapper.displayName = \"DrawWrapper\";\r\n","import { io } from \"socket.io-client\";\r\nimport { Stroke } from \"../draw/DrawState\";\r\nimport { NotePage } from \"../note/note\";\r\nimport { getUserID, getUserName } from \"../user\";\r\nimport { BASE_URL } from \"./http\";\r\n\r\nexport const IoFactory = (noteID: string) => () =>\r\n  io(BASE_URL, {\r\n    query: {\r\n      userID: getUserID(),\r\n      userName: getUserName(),\r\n      noteID,\r\n    },\r\n  });\r\n\r\nexport interface ReorderInfo {\r\n  pageOrder: string[];\r\n  prevOrder: string[];\r\n  deleted: boolean;\r\n}\r\n\r\nexport interface NewPageInfo {\r\n  pageOrder: string[];\r\n  pageID: string;\r\n  newPage: NotePage;\r\n}\r\n\r\nexport interface SyncInfo {\r\n  stroke: Stroke;\r\n  pageID: string;\r\n}\r\n","import { NotePage, TeamPage, TeamPageInfo } from \"../note/note\";\nimport { DrawState, WIDTH } from \"./DrawState\";\nimport { SetOperation } from \"./StateSet\";\nimport { Map, Record } from \"immutable\";\n\ninterface TeamStateRecordType {\n  pageStates: Map<string, Map<string, DrawState>>;\n  pageInfos: Map<string, TeamPageInfo>;\n}\n\nconst defaultRecord: Readonly<TeamStateRecordType> = {\n  pageStates: Map(),\n  pageInfos: Map(),\n};\n\ntype TeamStateRecord = Record<TeamStateRecordType>;\nconst defaultFactory = Record(defaultRecord);\n\nexport class TeamState {\n  constructor(private immutable: TeamStateRecord) {}\n\n  getImmutable() {\n    return this.immutable;\n  }\n\n  getPageStates() {\n    return this.getImmutable().get(\"pageStates\");\n  }\n\n  getPageInfos() {\n    return this.getImmutable().get(\"pageInfos\");\n  }\n\n  getOneState(pageID: string, userID: string) {\n    return this.getPageStates().get(pageID)?.get(userID);\n  }\n\n  getOnePageStateMap(pageID: string) {\n    return this.getPageStates().get(pageID);\n  }\n\n  getPageValidUsers(pageID: string) {\n    const map = this.getOnePageStateMap(pageID);\n    if (!map) return [];\n    return Array.from(map?.filter((ds) => !ds.isEmpty()).keys());\n  }\n\n  getPageRatio(pageID: string) {\n    return this.getPageInfos().get(pageID)?.ratio;\n  }\n\n  includesPage(pageID: string) {\n    return this.getPageStates().has(pageID);\n  }\n\n  setState(pageID: string, userID: string, drawState: DrawState) {\n    const pageMap = this.getPageStates().get(pageID);\n    if (!pageMap) return this;\n    return new TeamState(\n      this.getImmutable().update(\"pageStates\", (m) =>\n        m.set(pageID, pageMap.set(userID, drawState))\n      )\n    );\n  }\n\n  static createFromTeamPages(\n    teamPages: globalThis.Record<string, TeamPage>,\n    width = WIDTH\n  ) {\n    let record = defaultFactory();\n    Object.entries(teamPages).forEach(([pageID, teamPage]) => {\n      const { states, ratio } = teamPage;\n      const pageMap = Map(\n        Object.entries(states).map(([userID, flatState]) => [\n          userID,\n          DrawState.loadFromFlat(flatState, width, width * ratio),\n        ])\n      );\n      record = record\n        .update(\"pageStates\", (m) => m.set(pageID, pageMap))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }));\n    });\n    return new TeamState(record);\n  }\n\n  addPage(pageID: string, notePage: NotePage) {\n    const { ratio } = notePage;\n    return new TeamState(\n      this.getImmutable()\n        .update(\"pageStates\", (m) => m.set(pageID, Map()))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }))\n    );\n  }\n\n  pushOperation(setOp: SetOperation, userID: string, width = WIDTH) {\n    const { pageID, ...op } = setOp;\n    const ratio = this.getPageRatio(pageID);\n    if (!this.includesPage(pageID) || !ratio) return this;\n    const prevDs =\n      this.getOneState(pageID, userID) ||\n      DrawState.createEmpty(width, width * ratio);\n\n    const ds = DrawState.pushOperation(prevDs, op);\n    return this.setState(pageID, userID, ds);\n  }\n\n  resetUser(userID: string, pageRec: globalThis.Record<string, NotePage>) {\n    let newTS: TeamState = this;\n    for (let [pageID, { state, ratio }] of Object.entries(pageRec)) {\n      const prevDS = newTS.getOneState(pageID, userID);\n      if (!prevDS) continue;\n      const { width } = prevDS;\n      newTS = newTS.setState(\n        pageID,\n        userID,\n        DrawState.loadFromFlat(state, width, width * ratio)\n      );\n    }\n    return newTS;\n  }\n}\n","import { useState, useEffect, createContext, useCallback } from \"react\";\r\nimport {\r\n  getTeamNoteState,\r\n  loadTeamNoteInfo,\r\n  updatePages,\r\n} from \"../../lib/network/http\";\r\nimport { LoginOutlined, LogoutOutlined } from \"@ant-design/icons\";\r\nimport { IoFactory, NewPageInfo } from \"../../lib/network/io\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { TeamState } from \"../../lib/draw/TeamState\";\r\nimport { getUserID, UserInfo } from \"../../lib/user\";\r\nimport { NotePage } from \"../../lib/note/note\";\r\nimport { Socket } from \"socket.io-client\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { Loading } from \"../ui/Loading\";\r\nimport { message } from \"antd\";\r\nimport { Set } from \"immutable\";\r\nimport Reader from \"./Reader\";\r\n\r\nexport const TeamCtx = createContext({\r\n  io: undefined as Socket | undefined,\r\n  code: 0,\r\n  teamOn: false,\r\n  connected: false,\r\n  ignores: Set<string>(),\r\n  userRec: {} as Record<string, UserInfo>,\r\n  teamState: undefined as TeamState | undefined,\r\n  resetIO: () => {},\r\n  loadInfo: async () => false,\r\n  loadState: async () => false,\r\n  setIgnores: (() => {}) as Setter<Set<string>>,\r\n  addTeamStatePage: (pageID: string, newPage: NotePage) => {},\r\n});\r\n\r\nexport default function Team() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const [teamState, setTeamState] = useState<TeamState>();\r\n  const [code, setCode] = useState(-2);\r\n  const [userRec, setUserRec] = useState<Record<string, UserInfo>>({});\r\n  const [ignores, setIgnores] = useState(Set<string>());\r\n  const [io, setIO] = useState(IoFactory(noteID));\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [connected, setConnected] = useState(false);\r\n  const nav = useNavigate();\r\n\r\n  const loadInfo = useCallback(async () => {\r\n    const info = await loadTeamNoteInfo(noteID);\r\n    if (!info) {\r\n      message.error(\"Failed loading the team note info\");\r\n      return false;\r\n    }\r\n    setCode(info.code);\r\n    return true;\r\n  }, [noteID]);\r\n\r\n  const loadState = useCallback(async () => {\r\n    const teamNote = await getTeamNoteState(noteID);\r\n    if (!teamNote) {\r\n      message.error(\"Failed loading the team note state\");\r\n      return false;\r\n    }\r\n    setTeamState(TeamState.createFromTeamPages(teamNote));\r\n    return true;\r\n  }, [noteID]);\r\n\r\n  const updateSelfState = useCallback(() => {\r\n    updatePages(noteID);\r\n  }, [noteID]);\r\n\r\n  useEffect(() => {\r\n    const roomInit = async () => {\r\n      const infoLoaded = await loadInfo();\r\n      const stateLoaded = await loadState();\r\n      if (!infoLoaded || !stateLoaded) return nav(\"/\");\r\n      setLoaded(true);\r\n      updateSelfState();\r\n    };\r\n    roomInit();\r\n    return updateSelfState;\r\n  }, [loadInfo, loadState, nav, updateSelfState]);\r\n\r\n  useEffect(() => {\r\n    io.on(\"push\", ({ operation, userID }) => {\r\n      setTeamState((prev) => prev?.pushOperation(operation, userID));\r\n    });\r\n\r\n    io.on(\"join\", ({ joined, members }) => {\r\n      const { userID, userName } = joined;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return;\r\n      showJoinMsg(userID, userName);\r\n    });\r\n\r\n    io.on(\"leave\", ({ leaved, members }) => {\r\n      const { userID, userName } = leaved;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return io.emit(\"join\");\r\n      showLeaveMsg(userID, userName);\r\n    });\r\n\r\n    io.on(\"newPage\", (info: NewPageInfo) => {\r\n      const { pageID, newPage } = info;\r\n      setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n    });\r\n\r\n    io.on(\"reset\", ({ userID, pageRec }) => {\r\n      if (userID === getUserID()) return;\r\n      setTeamState((prev) => prev?.resetUser(userID, pageRec));\r\n    });\r\n\r\n    io.on(\"connect_error\", console.error);\r\n    io.on(\"connect\", () => setConnected(true));\r\n    io.on(\"disconnect\", () => setConnected(false));\r\n\r\n    return () => {\r\n      io.removeAllListeners();\r\n      io.close();\r\n    };\r\n  }, [io]);\r\n\r\n  const addTeamStatePage = (pageID: string, newPage: NotePage) => {\r\n    setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n  };\r\n\r\n  const resetIO = () => setIO(IoFactory(noteID));\r\n\r\n  return (\r\n    <Loading loading={!loaded}>\r\n      <TeamCtx.Provider\r\n        value={{\r\n          io,\r\n          code,\r\n          teamOn: true,\r\n          ignores,\r\n          userRec,\r\n          connected,\r\n          teamState,\r\n          resetIO,\r\n          loadInfo,\r\n          loadState,\r\n          setIgnores,\r\n          addTeamStatePage,\r\n        }}\r\n      >\r\n        <Reader />\r\n      </TeamCtx.Provider>\r\n    </Loading>\r\n  );\r\n}\r\n\r\nconst showJoinMsg = (userID: string, userName: string) => {\r\n  message.destroy(userID);\r\n  message.success({\r\n    content: `${userName} joined room`,\r\n    icon: <LoginOutlined />,\r\n    key: userID,\r\n  });\r\n};\r\n\r\nconst showLeaveMsg = (userID: string, userName: string) => {\r\n  message.destroy(userID);\r\n  message.warning({\r\n    content: `${userName} leaved room`,\r\n    icon: <LogoutOutlined />,\r\n    key: userID,\r\n  });\r\n};\r\n","export function createVirtualCanvas(width: number, height: number) {\r\n  const canvas = document.createElement(\"canvas\");\r\n  const context = canvas.getContext(\"2d\");\r\n  if (!context) {\r\n    throw new Error(\"can't get virtual canvas context\");\r\n  }\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n  return { canvas, context };\r\n}\r\n\r\nexport function releaseCanvas(canvas: HTMLCanvasElement) {\r\n  canvas.width = 1;\r\n  canvas.height = 1;\r\n  const ctx = canvas.getContext('2d');\r\n  ctx?.clearRect(0, 0, 1, 1);\r\n}\r\n"],"names":["defaultWidthList","defaultDrawCtrl","mode","finger","lineWidth","eraserWidth","color","highlight","lasso","widthList","getDrawCtrl","localforage","drawCtrl","defaultRecord","states","Map","editStack","List","undoStack","defaultFactory","Record","StateSet","immutable","lastOp","this","getImmutable","get","pageID","getStates","drawState","prevDS","getOneState","currRecord","update","s","set","l","push","delete","stroke","DrawState","notePage","width","WIDTH","state","ratio","newDS","getEditStack","size","getUndoStack","isUndoable","lastUid","last","lastSetOp","pop","isRedoable","ds","pageRec","map","AddPageButton","addFinalPage","useContext","ReaderMethodCtx","className","type","icon","PlusOutlined","block","onClick","createFromIconfontCN","scriptUrl","PenPanel","updateDrawCtrl","useState","panelBlur","setPanelBlur","WidthSelect","ghost","shape","ColorSelect","setColor","c","field","currWidth","chosen","useMemo","Math","max","indexOf","popShow","setPopShow","useEffect","includes","options","index","value","label","visible","onVisibleChange","v","prev","trigger","placement","destroyTooltipOnHide","content","min","defaultValue","onAfterChange","w","newWL","slice","style","onChange","i","colors","checked","name","backgroundColor","borderColor","getOcrWorker","worker","createWorker","logger","console","log","load","loadLanguage","initialize","SelectTool","drawRef","btnProps","currDrawCtrl","setCurrDrawCtrl","rotateEl","useRef","dragged","setDragged","transX","setTransX","gearStyle","transform","useDrag","first","offset","delta","current","rotateSelected","target","filterTaps","rubberband","bounds","left","right","recoginzing","setRecoginzing","recognizeText","imageData","rasterize","recognize","text","data","Modal","title","TextArea","okText","onOk","copy","error","CSSTransition","timeout","in","unmountOnExit","getPopupContainer","e","parentElement","updated","mutateStyle","BgColorsOutlined","ref","RotateRightOutlined","CaretLeftOutlined","CaretRightOutlined","CopyOutlined","duplicateSelected","loading","danger","DeleteOutlined","deleteSelected","TextTool","setText","fontSize","setFontSize","onCancel","cancelText","trim","submitText","bodyStyle","paddingTop","destroyOnClose","FontSizeOutlined","overlayStyle","FontColorsOutlined","autoFocus","insertAfter","list","prevItem","newItem","prevIndex","curr","splice","HeaderMiddle","ReaderStateCtx","stateSet","setDrawCtrl","handleUndo","handleRedo","newCtrl","saveDrawCtrl","UndoOutlined","disabled","RedoOutlined","message","key","PenButton","EraserButton","SelectButton","HighlightOutlined","GatewayOutlined","UserAvatar","userID","userRec","TeamCtx","getHashedColor","userInfo","userName","PreviewCtx","React","activeKey","setActiveKey","PageNavContent","pageOrder","currPageID","scrollPage","saveReorder","refRec","scrollIntoView","PreviewTabs","onDragEnd","source","destination","fromIndex","toIndex","newOrder","result","removed","exchange","requestAnimationFrame","droppableId","droppableProps","innerRef","placeholder","uid","PagePreview","pageIndex","teamState","setChosen","page","teamStateMap","getOnePageStateMap","image","marked","isEmpty","every","draggableId","isDragDisabled","draggableProps","dragHandleProps","isDragging","PageWrapper","undefined","thumbnail","preview","PreviewTools","switchPageMarked","ignores","userIDs","getPageValidUsers","filter","has","stopPropagation","PreviewOption","TeamAvatars","maxCount","classNames","maxPopoverPlacement","addPage","deletePage","menu","items","MoreOutlined","TabPane","Tabs","tabBarGutter","centered","tab","PageNav","navOn","setNavOn","ALL","MARKED","WRITTEN","Provider","MenuUnfoldOutlined","MenuFoldOutlined","onClose","closable","zIndex","padding","overflow","headerStyle","textAlign","HeaderRight","teamOn","RoomInfo","JoinRoom","UserCard","renaming","setRenaming","setIgnores","resetIO","online","self","getUserID","ignored","Search","onSearch","saveUserName","enterButton","CheckOutlined","FormOutlined","EyeInvisibleOutlined","EyeOutlined","add","code","connected","loadInfo","loadState","noteInfo","link","window","location","href","share","selfName","userList","selfID","selfInfo","otherUsers","values","Object","onlineNum","length","teamPop","DisconnectOutlined","showIcon","banner","String","plain","ShareAltOutlined","u","reloading","setReloading","ReloadOutlined","status","count","TeamOutlined","noteID","instantSave","nav","useNavigate","createRoom","putNote","editNoteData","team","UsergroupAddOutlined","ReaderHeader","HeaderLeft","saved","HomeFilled","opacity","SaveOutlined","usePreventTouch","allowFinger","isTouch","checkPoniter","isPrimary","pointerType","preventTouch","touch","touches","touchType","isApplePencil","isEventValid","onPointerDownCapture","onPointerMoveCapture","onTouchStartCapture","onTouchMoveCapture","Path","paper","Size","Point","Group","Color","Raster","Rectangle","Draw","otherStates","readonly","imgSrc","setActiveTool","height","canvasEl","scope","group","setGroup","Set","erased","setErased","usePaperItem","path","setPath","rect","setRect","cvs","scp","setup","r","view","viewSize","multiply","scale","paintBackground","remove","releaseCanvas","raster","img","Image","src","onload","activate","project","layers","addChild","position","center","mergedStrokes","getStrokeList","tempGroup","othersGroup","forEach","paintStroke","hasStroke","item","selected","setSelected","paperMode","selectedIDs","setSelectedIDs","selectedItems","IDSet","resetSelect","useCallback","updateRatio","clientWidth","setNewRect","point","transformPoint","rectangle","startSelectRect","projP","zoom","absoluteP","projectToView","offsetP","divide","subtract","handleDown","draw","startStroke","erase","select","contains","t","setPointText","handleDrag","smooth","newErased","p","checkErase","concat","x","y","translate","handleUp","segments","simplify","pathData","exportJSON","toArray","closePath","moveDash","checkPathSelection","abs","checkRectSelection","updateMutation","onMouseDown","onMouseDrag","onMouseUp","mutations","angle","aniCount","dAngle","rotate","updateGroupStyle","transP","newSG","clone","insert","children","getUid","m","toDataURL","pointText","fillColor","useImperativeHandle","handler","preventDefault","document","addEventListener","removeEventListener","usePinch","lastScale","lastOX","lastOY","elX","elY","memo","origin","getBoundingClientRect","oX","oY","originViewP","originProjP","viewToProject","dScale","pow","scaleView","putCenterBack","scaleBounds","touchHandler","displayName","init","stateArray","useDebugValue","activeLayer","importJSON","getCheckPoints","cache","WeakMap","segment","cached","prevPoint","previous","times","checkPoints","eraserPath","curveBound","lastSegment","curve","strokeBounds","intersects","strokeWidth","some","cPoint","d","getNearestPoint","getDistance","bgRect","bgLayer","insertLayer","strokeColor","alpha","blendMode","strokeJoin","strokeCap","dashOffset","dashArray","onFrame","dX","dY","minX","maxX","minY","maxY","getCenterTranslate","deltaX","deltaY","dP","move","isInside","selection","checkedP","res","trace","newColor","createContext","updateStateSet","cb","prevPageID","order","setInviewRatios","Reader","useParams","setPageRec","setNoteInfo","setStateSet","setPageOrder","useSafeState","setSaved","io","addTeamStatePage","loadNotePages","loadNote","storedNote","pdf","createFromPages","saver","useEvent","pr","toObject","canvas","querySelector","debouncedSave","debounce","flush","savePageRec","defaultNotePage","pushReorder","emit","handleReorder","onUndo","deleted","prevOrder","duration","handleNewPage","newPage","addState","on","removeAllListeners","pushNewPage","newTeamPage","updatePageRec","newSS","operation","lastDS","getLastDS","syncStrokeTime","inviewRatios","maxRatio","getLargestKey","prevPage","createPage","renderResult","PageContainer","id","lastPageID","redo","undo","updateState","setState","pdfIndex","fullImg","setFullImg","useInView","threshold","range","entry","intersectionRatio","loadImage","once","getOnePageImage","deleteAll","toList","drawShow","maskShow","Boolean","DrawWrapper","activeTool","handleChange","arg","IoFactory","BASE_URL","query","getUserName","pageStates","pageInfos","TeamState","getPageStates","Array","from","keys","getPageInfos","pageMap","setOp","op","getPageRatio","includesPage","prevDs","newTS","entries","teamPages","record","teamPage","flatState","Team","setTeamState","setCode","setUserRec","setIO","loaded","setLoaded","setConnected","loadTeamNoteInfo","info","getTeamNoteState","teamNote","createFromTeamPages","updateSelfState","updatePages","roomInit","infoLoaded","stateLoaded","pushOperation","joined","members","showJoinMsg","leaved","showLeaveMsg","resetUser","close","Loading","LoginOutlined","LogoutOutlined","createVirtualCanvas","createElement","context","getContext","Error","ctx","clearRect"],"sourceRoot":""}