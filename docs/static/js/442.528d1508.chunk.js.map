{"version":3,"file":"static/js/442.528d1508.chunk.js","mappings":"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","sources":["lib/note/imgCache.ts","component/SwipeDelete/SwipeDelete.tsx","pages/menu/aside/SideMenu.tsx","pages/menu/header/Others.tsx","pages/menu/header/Nav.tsx","pages/menu/header/index.tsx","pages/menu/header/ListTools.tsx","pages/menu/notes/NoteList.tsx","pages/menu/Menu.tsx"],"sourcesContent":["import localforage from \"localforage\";\n\nconst IMAGE_CACHE_MAX = 10;\nconst imageForage = localforage.createInstance({ name: \"imageForage\" });\nexport const getImageCache = async (noteID: string, index: number) => {\n  let cacheList = (await imageForage.getItem<string[]>(\"LIST\")) ?? [];\n  const key = `${noteID}_${index}`;\n  if (!cacheList.includes(key)) return;\n  cacheList = [key, ...cacheList.filter((id) => id !== key)];\n  await imageForage.setItem(\"LIST\", cacheList);\n  return await imageForage.getItem<string>(key);\n};\n\nexport const setImageCache = async (noteID: string, index: number, data: string) => {\n  let cacheList = (await imageForage.getItem<string[]>(\"LIST\")) ?? [];\n  const key = `${noteID}_${index}`;\n  cacheList = [key, ...cacheList.filter((id) => id !== key)];\n  if (cacheList.length > IMAGE_CACHE_MAX) {\n    cacheList = cacheList.slice(0, IMAGE_CACHE_MAX);\n  }\n  await imageForage.setItem(\"LIST\", cacheList);\n  await imageForage.setItem(key, data);\n  removeUnusedCache();\n};\n\nconst removeUnusedCache = async () => {\n  const cacheList = (await imageForage.getItem<string[]>(\"LIST\")) ?? [];\n  const set = new Set(cacheList);\n  const allKeys = await imageForage.keys();\n  for (let key of allKeys) {\n    if (key === \"LIST\") continue;\n    if (!set.has(key)) await imageForage.removeItem(key);\n  }\n};\n\nexport const clearImageCache = () => imageForage.clear();\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  createContext,\r\n} from \"react\";\r\nimport { Setter, useTransitionEnd } from \"lib/hooks\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport classNames from \"classnames\";\r\nimport { v4 as getUid } from \"uuid\";\r\nimport \"./swipe-delete.sass\";\r\n\r\nconst SwipeCtx = createContext<[string, Setter<string>]>([\"\", () => {}]);\r\n\r\nexport const SwipeDeleteProvider: FC = ({ children }) => {\r\n  const tuple = useState(\"\");\r\n  return <SwipeCtx.Provider value={tuple}>{children}</SwipeCtx.Provider>;\r\n};\r\n\r\nexport const SwipeDelete: FC<{\r\n  onDelete: () => void;\r\n  disable?: boolean;\r\n  className?: string;\r\n}> = ({ children, onDelete, disable = false, className }) => {\r\n  const [uid] = useState(getUid);\r\n\r\n  const [nowSwiped, setNowSwiped] = useContext(SwipeCtx);\r\n  const [swiped, setSwiped] = useState(false);\r\n  const deleting = swiped && (!nowSwiped || nowSwiped === uid);\r\n  const [deleted, setDeleted] = useState(false);\r\n\r\n  const [height, setHeight] = useState<number>();\r\n  const wrapper = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (nowSwiped !== uid) setSwiped(false);\r\n  }, [nowSwiped, uid]);\r\n\r\n  const showDelete = () => {\r\n    setSwiped(true);\r\n    setNowSwiped(uid);\r\n    setHeight(wrapper.current?.clientHeight);\r\n  };\r\n\r\n  const hideDelete = () => {\r\n    setSwiped(false);\r\n    setNowSwiped(\"\");\r\n    setHeight(undefined);\r\n  };\r\n\r\n  const swipeHandler = useSwipeable({\r\n    onSwipedLeft: showDelete,\r\n    onSwipedRight: hideDelete,\r\n    trackTouch: !disable,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!disable) return;\r\n    setHeight(undefined);\r\n    setNowSwiped(\"\");\r\n    setSwiped(false);\r\n  }, [disable, setNowSwiped]);\r\n\r\n  const [transDidEnd, handler] = useTransitionEnd({\r\n    propertyName: \"height\",\r\n    active: deleted,\r\n  });\r\n  const handleClick = async () => {\r\n    setDeleted(true);\r\n    await transDidEnd;\r\n    onDelete();\r\n    setNowSwiped(\"\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classNames(\"swipe-wrapper\", className)}\r\n      data-deleted={deleted}\r\n      data-deleting={deleting}\r\n      {...swipeHandler}\r\n      style={{ height }}\r\n      onTransitionEnd={handler}\r\n    >\r\n      <div className=\"content\" ref={wrapper}>\r\n        {children}\r\n      </div>\r\n      <div className=\"button\" onClick={handleClick} style={{ height }}>\r\n        Delete\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { FC, useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  MenuOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  SettingOutlined,\r\n  ContainerOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Button, Input, Popconfirm, Select } from \"antd\";\r\nimport { deleteTag, editTag, NoteTag, addNewTag } from \"lib/note/archive\";\r\nimport { colors, getColorPalette, getRandomColor } from \"lib/color\";\r\nimport { Setter, useAsideOpen } from \"lib/hooks\";\r\nimport { SwipeDelete, SwipeDeleteProvider } from \"component/SwipeDelete\";\r\nimport { ColorCirle } from \"component/ColorCircle\";\r\nimport { MenuCtx } from \"../Menu\";\r\n\r\nconst TagInput: FC<{\r\n  tagName: string;\r\n  setTagName: Setter<string>;\r\n  tagColor: string;\r\n  setTagColor: Setter<string>;\r\n}> = ({ tagName, setTagName, tagColor, setTagColor }) => {\r\n  const colorSelector = (\r\n    <Select\r\n      value={tagColor}\r\n      onSelect={setTagColor}\r\n      listHeight={150}\r\n      virtual={false}\r\n    >\r\n      {colors.map((c) => (\r\n        <Select.Option value={c} key={c}>\r\n          <ColorCirle className=\"tag-circle\" color={c} />\r\n        </Select.Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n\r\n  return (\r\n    <Input\r\n      placeholder=\"Tag name...\"\r\n      className=\"tag-name-input\"\r\n      addonBefore={colorSelector}\r\n      value={tagName}\r\n      onChange={(e) => setTagName(e.target.value)}\r\n    />\r\n  );\r\n};\r\n\r\nconst TagItem: FC<{ noteTag: NoteTag }> = ({ noteTag }) => {\r\n  const { uid, color, name, notes } = noteTag;\r\n  const { currTagID, setAllTags, setCurrTagID } = useContext(MenuCtx);\r\n  const [tagName, setTagName] = useState(name);\r\n  const [tagColor, setTagColor] = useState(color);\r\n  const [tagEditing, setTagEditing] = useState(false);\r\n  const curr = currTagID === uid;\r\n  useEffect(() => setTagEditing(false), [curr]);\r\n\r\n  async function removeTag() {\r\n    const tags = await deleteTag(uid);\r\n    setCurrTagID(\"DEFAULT\");\r\n    setAllTags(tags);\r\n  }\r\n\r\n  const cancelEditing = () => {\r\n    setTagName(name);\r\n    setTagColor(color);\r\n    setTagEditing(false);\r\n  };\r\n\r\n  const finishEditing = async () => {\r\n    const newTag: NoteTag = {\r\n      ...noteTag,\r\n      name: tagName,\r\n      color: tagColor,\r\n    };\r\n\r\n    const newAllTags = await editTag(newTag);\r\n    setAllTags(newAllTags);\r\n    setTagEditing(false);\r\n  };\r\n\r\n  const displayPanel = (\r\n    <>\r\n      <ColorCirle className=\"tag-circle\" color={tagColor} />\r\n      <span className=\"tag-name\">{tagName}</span>\r\n      {curr ? (\r\n        <Button\r\n          size=\"small\"\r\n          type=\"text\"\r\n          onClick={() => setTagEditing(true)}\r\n          icon={<SettingOutlined />}\r\n        />\r\n      ) : (\r\n        <span className=\"tag-num\">{notes.length}</span>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const editingPanel = (\r\n    <>\r\n      <TagInput\r\n        tagName={tagName}\r\n        setTagName={setTagName}\r\n        tagColor={tagColor}\r\n        setTagColor={setTagColor}\r\n      />\r\n      <div className=\"buttons\">\r\n        <Popconfirm\r\n          title=\"This tag will be deleted.\"\r\n          onConfirm={removeTag}\r\n          placement=\"left\"\r\n          cancelText=\"Cancel\"\r\n          icon={<DeleteOutlined />}\r\n          okText=\"Delete\"\r\n          okType=\"danger\"\r\n          okButtonProps={{ type: \"primary\" }}\r\n        >\r\n          <Button danger>Delete</Button>\r\n        </Popconfirm>\r\n        <Button onClick={cancelEditing}>Cancel</Button>\r\n        <Button type=\"primary\" disabled={!tagName} onClick={finishEditing}>\r\n          OK\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <SwipeDelete\r\n      className=\"tag-wrapper\"\r\n      onDelete={removeTag}\r\n      disable={tagEditing}\r\n    >\r\n      <div\r\n        className=\"tag-item\"\r\n        data-curr={curr}\r\n        data-editing={tagEditing}\r\n        onClick={() => setCurrTagID(uid)}\r\n        style={getColorPalette(color)}\r\n      >\r\n        {tagEditing ? editingPanel : displayPanel}\r\n      </div>\r\n    </SwipeDelete>\r\n  );\r\n};\r\n\r\nconst NewTagItem: FC<{ setAdding: Setter<boolean> }> = ({ setAdding }) => {\r\n  const [tagName, setTagName] = useState(\"\");\r\n  const [tagColor, setTagColor] = useState(getRandomColor());\r\n  const { setAllTags } = useContext(MenuCtx);\r\n\r\n  const addTag = () => {\r\n    const name = tagName.trim();\r\n    if (!name) return;\r\n    addNewTag(name, tagColor).then(setAllTags);\r\n    setAdding(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tag-wrapper\">\r\n      <div className=\"tag-item\" data-curr data-editing>\r\n        <TagInput\r\n          tagName={tagName}\r\n          setTagName={setTagName}\r\n          tagColor={tagColor}\r\n          setTagColor={setTagColor}\r\n        />\r\n        <div className=\"buttons\">\r\n          <Button onClick={() => setAdding(false)}>Cancel</Button>\r\n          <Button type=\"primary\" disabled={!tagName} onClick={addTag}>\r\n            OK\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const SideMenu = () => {\r\n  const { allTags, currTagID, allNotes, setCurrTagID } = useContext(MenuCtx);\r\n  const [adding, setAdding] = useState(false);\r\n  const [asideOpen, setAsideOpen] = useAsideOpen();\r\n\r\n  const allNoteTag = (\r\n    <div className=\"tag-wrapper\">\r\n      <div\r\n        className=\"tag-item\"\r\n        data-curr={currTagID === \"DEFAULT\"}\r\n        onClick={() => setCurrTagID(\"DEFAULT\")}\r\n      >\r\n        <ContainerOutlined className=\"all-note-icon\" />\r\n        <span className=\"tag-name\">All Notes</span>\r\n        <span className=\"tag-num\">{Object.keys(allNotes).length}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const header = (\r\n    <header>\r\n      <Button\r\n        className=\"aside-btn\"\r\n        type=\"text\"\r\n        icon={<MenuOutlined />}\r\n        onClick={() => setAsideOpen(false)}\r\n      />\r\n      <h2 className=\"logo\">Multibility</h2>\r\n      <Button\r\n        className=\"new-tag-btn\"\r\n        type=\"text\"\r\n        icon={<PlusOutlined />}\r\n        onClick={() => setAdding(true)}\r\n        disabled={adding}\r\n      />\r\n    </header>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <aside className=\"side-menu\" data-open={asideOpen}>\r\n        {header}\r\n        <div className=\"tag-list\">\r\n          {allNoteTag}\r\n          <SwipeDeleteProvider>\r\n            {Object.values(allTags).map((tag) => (\r\n              <TagItem key={tag.uid} noteTag={tag} />\r\n            ))}\r\n          </SwipeDeleteProvider>\r\n          {adding && <NewTagItem setAdding={setAdding} />}\r\n        </div>\r\n      </aside>\r\n      <div\r\n        className=\"aside-mask\"\r\n        onClick={() => setAsideOpen(false)}\r\n        data-open={asideOpen}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { useContext, useState, FC, useEffect } from \"react\";\r\nimport {\r\n  Menu,\r\n  Input,\r\n  Button,\r\n  message,\r\n  Popover,\r\n  Progress,\r\n  Popconfirm,\r\n} from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  SyncOutlined,\r\n  ClearOutlined,\r\n  InboxOutlined,\r\n  FilePdfOutlined,\r\n  SettingOutlined,\r\n  CaretDownOutlined,\r\n  ArrowLeftOutlined,\r\n} from \"@ant-design/icons\";\r\nimport * as serviceWorkerRegistration from \"serviceWorkerRegistration\";\r\nimport { CSSTransitionProps } from \"react-transition-group/CSSTransition\";\r\nimport { ActiveKeyProvider, useActiveKey } from \"lib/hooks\";\r\nimport { getUserName, saveUserName } from \"lib/user\";\r\nimport { clearImageCache } from \"lib/note/imgCache\";\r\nimport { createNewNote } from \"lib/note/archive\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport localforage from \"localforage\";\r\nimport { MenuCtx } from \"../Menu\";\r\nimport \"./others.sass\";\r\n\r\nconst SeconaryMenu: FC<\r\n  {\r\n    title: string;\r\n    keyName: string;\r\n  } & CSSTransitionProps\r\n> = ({ children, title, keyName, ...cssTransProps }) => {\r\n  const [active, setActive] = useActiveKey();\r\n  return (\r\n    <CSSTransition in={active === keyName} {...cssTransProps}>\r\n      <div className=\"secondary\">\r\n        <nav>\r\n          <Button\r\n            type=\"text\"\r\n            shape=\"circle\"\r\n            onClick={() => setActive(\"MENU\")}\r\n            icon={<ArrowLeftOutlined />}\r\n          />\r\n          <h3>{title}</h3>\r\n        </nav>\r\n        {children}\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nconst UploadPdfPage = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const { currTagID, setAllTags, setAllNotes } = useContext(MenuCtx);\r\n  const [percent, setPercent] = useState(0);\r\n\r\n  async function handleFile(file: File) {\r\n    if (file.type !== \"application/pdf\") return;\r\n    setLoading(true);\r\n    const { LoadPDF } = await import(\"lib/note/pdfImage\");\r\n    const note = await LoadPDF(file, setPercent);\r\n    note.tagID = currTagID;\r\n    const { tags, allNotes } = await createNewNote(note);\r\n    setAllTags(tags);\r\n    setAllNotes(allNotes);\r\n    setLoading(false);\r\n    message.success(\"PDF Loaded\");\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <label>\r\n      <div className=\"pdf-upload\">\r\n        <div className=\"icon-wrapper\">\r\n          {loading ? (\r\n            <Progress width={48} type=\"circle\" percent={percent} />\r\n          ) : (\r\n            <InboxOutlined className=\"inbox-icon\" />\r\n          )}\r\n        </div>\r\n        <p className=\"hint\">Click to upload a pdf file.</p>\r\n      </div>\r\n      <input\r\n        type=\"file\"\r\n        multiple={false}\r\n        accept=\".pdf\"\r\n        onChange={({ target: { files } }) => {\r\n          const file = files && files[0];\r\n          if (!file) return;\r\n          handleFile(file);\r\n        }}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst ProfilePage = () => {\r\n  const [, setActive] = useActiveKey();\r\n  const userName = getUserName();\r\n  const [name, setName] = useState(userName);\r\n  const handleEnter = () => {\r\n    if (!name) return;\r\n    saveUserName(name);\r\n    setActive(\"MENU\");\r\n  };\r\n  return (\r\n    <div className=\"profile-page\">\r\n      <Input\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        prefix={<UserOutlined />}\r\n        allowClear\r\n      />\r\n      <Button\r\n        disabled={userName === name || !name}\r\n        onClick={handleEnter}\r\n        type=\"primary\"\r\n        block\r\n      >\r\n        OK\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SettingsPage = () => {\r\n  const { menuInit } = useContext(MenuCtx);\r\n\r\n  const clearAll = async () => {\r\n    await localforage.clear();\r\n    await clearImageCache();\r\n    menuInit();\r\n  };\r\n\r\n  return (\r\n    <div className=\"setting-menu\">\r\n      <Button\r\n        icon={<SyncOutlined />}\r\n        onClick={async () => {\r\n          await serviceWorkerRegistration.unregister();\r\n          window.location.reload();\r\n        }}\r\n        block\r\n      >\r\n        Update\r\n      </Button>\r\n      <Popconfirm\r\n        title=\"Everything will be deleted.\"\r\n        onConfirm={clearAll}\r\n        icon={<ClearOutlined />}\r\n        okText=\"Delete\"\r\n        okType=\"danger\"\r\n        okButtonProps={{ type: \"primary\" }}\r\n        cancelText=\"Cancel\"\r\n        placement=\"bottom\"\r\n      >\r\n        <Button icon={<ClearOutlined />} danger block>\r\n          Clear all\r\n        </Button>\r\n      </Popconfirm>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst menuItems = [\r\n  {\r\n    key: \"PDF\",\r\n    label: \"Import PDF\",\r\n    component: <UploadPdfPage />,\r\n    icon: <FilePdfOutlined />,\r\n  },\r\n  {\r\n    key: \"PROFILE\",\r\n    label: \"My profile\",\r\n    component: <ProfilePage />,\r\n    icon: <UserOutlined />,\r\n  },\r\n  {\r\n    key: \"SETTINGS\",\r\n    label: \"Settings\",\r\n    component: <SettingsPage />,\r\n    icon: <SettingOutlined />,\r\n  },\r\n];\r\n\r\nconst PrimaryMenu = () => {\r\n  const [, setActive] = useActiveKey();\r\n  return (\r\n    <div className=\"primary-menu\">\r\n      <Menu onClick={({ key }) => setActive(key)} items={menuItems} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OthersPage = () => {\r\n  const [height, setHeight] = useState(0);\r\n  const [active, setActive] = useActiveKey();\r\n\r\n  const calcHeight = (el: HTMLElement) => {\r\n    setHeight(el.clientHeight);\r\n  };\r\n\r\n  const cssTransProps = {\r\n    timeout: 300,\r\n    onEnter: calcHeight,\r\n    unmountOnExit: true,\r\n  };\r\n\r\n  useEffect(() => setActive(\"MENU\"), [setActive]);\r\n\r\n  return (\r\n    <section className=\"others-menu\" style={{ height }}>\r\n      <CSSTransition in={active === \"MENU\"} {...cssTransProps}>\r\n        <PrimaryMenu />\r\n      </CSSTransition>\r\n      {menuItems.map(({ key, label, component }) => (\r\n        <SeconaryMenu key={key} keyName={key} title={label} {...cssTransProps}>\r\n          {component}\r\n        </SeconaryMenu>\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport function OthersMenu() {\r\n  return (\r\n    <Popover\r\n      placement=\"bottomRight\"\r\n      trigger=\"click\"\r\n      content={\r\n        <ActiveKeyProvider initKey=\"\">\r\n          <OthersPage />\r\n        </ActiveKeyProvider>\r\n      }\r\n      zIndex={900}\r\n    >\r\n      <Button className=\"small\" type=\"text\" icon={<CaretDownOutlined />} />\r\n      <Button className=\"large\" shape=\"circle\" icon={<CaretDownOutlined />} />\r\n    </Popover>\r\n  );\r\n}\r\n","import { Button, Popover } from \"antd\";\r\nimport { MenuOutlined, FormOutlined, TeamOutlined } from \"@ant-design/icons\";\r\nimport { useContext, useState } from \"react\";\r\nimport { MenuCtx } from \"../Menu\";\r\nimport { createEmptyNote } from \"lib/note/note\";\r\nimport { createNewNote } from \"lib/note/archive\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getNoteID } from \"lib/network/http\";\r\nimport { PasscodeInput } from \"antd-mobile\";\r\nimport { OthersMenu } from \"./Others\";\r\nimport { useAsideOpen } from \"lib/hooks\";\r\n\r\nexport const Nav = () => {\r\n  return (\r\n    <nav>\r\n      <Left />\r\n      <Right />\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst Left = () => {\r\n  const { allTags, currTagID } = useContext(MenuCtx);\r\n  const [, setAsideOpen] = useAsideOpen();\r\n\r\n  const title = allTags[currTagID]?.name ?? \"All notes\";\r\n  return (\r\n    <div className=\"nav-left\">\r\n      <Button\r\n        className=\"aside-btn small\"\r\n        type=\"text\"\r\n        icon={<MenuOutlined />}\r\n        onClick={() => setAsideOpen(true)}\r\n      />\r\n      <h2>\r\n        <b>{title}</b>\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Right = () => {\r\n  return (\r\n    <div className=\"nav-right\">\r\n      <NewNoteButton />\r\n      <JoinTeamButton />\r\n      <OthersMenu />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NewNoteButton = () => {\r\n  const { currTagID, setAllTags, setAllNotes } = useContext(MenuCtx);\r\n\r\n  async function addNewNote() {\r\n    const note = createEmptyNote();\r\n    note.tagID = currTagID;\r\n    const { tags, allNotes } = await createNewNote(note);\r\n    setAllTags(tags);\r\n    setAllNotes(allNotes);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        className=\"new-note large\"\r\n        type=\"primary\"\r\n        shape=\"round\"\r\n        onClick={addNewNote}\r\n        icon={<FormOutlined />}\r\n      >\r\n        New\r\n      </Button>\r\n      <Button\r\n        className=\"new-note small\"\r\n        type=\"link\"\r\n        onClick={addNewNote}\r\n        icon={<FormOutlined />}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst JoinTeamButton = () => {\r\n  const [roomCode, setRoomCode] = useState(\"\");\r\n  const [wrong, setWrong] = useState(false);\r\n\r\n  const nav = useNavigate();\r\n  async function handleSubmit(code: string) {\r\n    const noteID = await getNoteID(code);\r\n    if (noteID) return nav(`/team/${noteID}`);\r\n    setRoomCode(\"\");\r\n    setWrong(true);\r\n  }\r\n\r\n  return (\r\n    <Popover\r\n      placement=\"bottomRight\"\r\n      trigger=\"click\"\r\n      title=\"Join a team note\"\r\n      destroyTooltipOnHide\r\n      onVisibleChange={() => setWrong(false)}\r\n      content={\r\n        <PasscodeInput\r\n          plain\r\n          length={4}\r\n          error={wrong}\r\n          value={roomCode}\r\n          onChange={(v) => {\r\n            setWrong(false);\r\n            setRoomCode(v);\r\n          }}\r\n          onFill={handleSubmit}\r\n        />\r\n      }\r\n    >\r\n      <Button className=\"team-btn large\" shape=\"round\" icon={<TeamOutlined />}>\r\n        Team\r\n      </Button>\r\n      <Button className=\"team-btn small\" type=\"text\" icon={<TeamOutlined />} />\r\n    </Popover>\r\n  );\r\n};\r\n","import { Nav } from \"./Nav\";\r\nimport { FC } from \"react\";\r\nimport \"./header.sass\";\r\n\r\nexport const MenuHeader: FC = ({ children }) => {\r\n  return (\r\n    <header>\r\n      <Nav />\r\n      {children}\r\n    </header>\r\n  );\r\n};\r\n","import { Button, ButtonProps, Dropdown, Input, Menu, Popconfirm } from \"antd\";\r\nimport { FC, useContext } from \"react\";\r\nimport { MenuCtx } from \"../Menu\";\r\nimport {\r\n  SwapOutlined,\r\n  TagsOutlined,\r\n  FileOutlined,\r\n  DeleteOutlined,\r\n  SearchOutlined,\r\n  SelectOutlined,\r\n  FileTextOutlined,\r\n  ArrowLeftOutlined,\r\n  SortAscendingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Setter } from \"lib/hooks\";\r\nimport { ColorCirle } from \"component/ColorCircle\";\r\n\r\nexport const ListTools: FC<{\r\n  sortType: string;\r\n  setSortType: Setter<string>;\r\n  searchText: string;\r\n  setSearchText: Setter<string>;\r\n  onDelete: () => void;\r\n  onMove: (tagID: string) => void;\r\n  disabled: boolean;\r\n}> = ({\r\n  sortType,\r\n  setSortType,\r\n  searchText,\r\n  setSearchText,\r\n  onDelete,\r\n  onMove,\r\n  disabled = true,\r\n}) => {\r\n  const { editing, allTags, setEditing } = useContext(MenuCtx);\r\n\r\n  const sortMenu = (\r\n    <Menu\r\n      onClick={({ key }) => setSortType(key)}\r\n      selectedKeys={[sortType]}\r\n      items={[\r\n        {\r\n          type: \"group\",\r\n          label: \"Sort by\",\r\n          className: \"sort-drop\",\r\n          children: [\r\n            { icon: <FileOutlined />, key: \"CREATE\", label: \"Date created\" },\r\n            { icon: <FileTextOutlined />, key: \"LAST\", label: \"Date modified\" },\r\n            { icon: <SortAscendingOutlined />, key: \"NAME\", label: \"Name\" },\r\n          ],\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n\r\n  const btnProps: ButtonProps = { type: \"text\", shape: \"circle\" };\r\n  const sortButton = (\r\n    <Dropdown overlay={sortMenu} trigger={[\"click\"]} placement=\"bottomRight\">\r\n      <Button\r\n        className=\"sort-btn\"\r\n        icon={<SwapOutlined rotate={90} />}\r\n        {...btnProps}\r\n      />\r\n    </Dropdown>\r\n  );\r\n\r\n  const deleteButton = (\r\n    <Popconfirm\r\n      title=\"Notes will be deleted.\"\r\n      onConfirm={onDelete}\r\n      icon={<DeleteOutlined />}\r\n      placement=\"bottom\"\r\n      cancelText=\"Cancel\"\r\n      disabled={disabled}\r\n      okText=\"Delete\"\r\n      okType=\"danger\"\r\n      okButtonProps={{ type: \"primary\" }}\r\n    >\r\n      <Button\r\n        className=\"del-btn\"\r\n        shape=\"round\"\r\n        type=\"text\"\r\n        disabled={disabled}\r\n        danger={!disabled}\r\n        icon={<DeleteOutlined />}\r\n      >\r\n        Delete\r\n      </Button>\r\n    </Popconfirm>\r\n  );\r\n\r\n  const ColorLabel: FC<{\r\n    color: string;\r\n    name: string;\r\n  }> = ({ color, name }) => (\r\n    <div className=\"tag-select\">\r\n      <ColorCirle color={color} className=\"tag-circle\" />\r\n      <span className=\"name\">{name}</span>\r\n    </div>\r\n  );\r\n\r\n  const overlay = (\r\n    <Menu\r\n      onClick={({ key }) => onMove(key)}\r\n      items={[\r\n        {\r\n          key: \"DEFAULT\",\r\n          label: <ColorLabel color=\"#eee\" name=\"No tag\" />,\r\n        },\r\n        ...Object.values(allTags).map((t) => ({\r\n          key: t.uid,\r\n          label: <ColorLabel color={t.color} name={t.name} />,\r\n        })),\r\n      ]}\r\n    />\r\n  );\r\n\r\n  const tagButton = (\r\n    <Dropdown\r\n      overlayClassName=\"tag-drop\"\r\n      disabled={disabled}\r\n      overlay={overlay}\r\n      trigger={[\"click\"]}\r\n      placement=\"bottom\"\r\n    >\r\n      <Button\r\n        shape=\"round\"\r\n        type=\"text\"\r\n        className=\"tag-btn\"\r\n        icon={<TagsOutlined />}\r\n        style={{ transition: \"none\" }}\r\n      >\r\n        Tag\r\n      </Button>\r\n    </Dropdown>\r\n  );\r\n\r\n  return (\r\n    <div className=\"list-tools\" data-editing={editing}>\r\n      {editing ? (\r\n        <>\r\n          <Button\r\n            onClick={() => setEditing(false)}\r\n            icon={<ArrowLeftOutlined />}\r\n            {...btnProps}\r\n          />\r\n          {tagButton}\r\n          {deleteButton}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Button\r\n            onClick={() => setEditing(true)}\r\n            icon={<SelectOutlined />}\r\n            {...btnProps}\r\n          />\r\n          <Input\r\n            value={searchText}\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n            className=\"search-input\"\r\n            prefix={<SearchOutlined />}\r\n            bordered={false}\r\n            allowClear\r\n          />\r\n          {sortButton}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, {\r\n  FC,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  Suspense,\r\n} from \"react\";\r\nimport {\r\n  NoteTag,\r\n  deleteNote,\r\n  moveNoteTag,\r\n  editNoteData,\r\n  loadNote,\r\n} from \"lib/note/archive\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { CloudTwoTone, CheckCircleFilled } from \"@ant-design/icons\";\r\nimport { SwipeDelete, SwipeDeleteProvider } from \"component/SwipeDelete\";\r\nimport { NoteInfo, NotePage } from \"lib/note/note\";\r\nimport { DrawState } from \"lib/draw/DrawState\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport calender from \"dayjs/plugin/calendar\";\r\nimport { MenuHeader } from \"../header\";\r\nimport { Setter } from \"lib/hooks\";\r\nimport { List, Map, Set } from \"immutable\";\r\nimport { MenuCtx } from \"../Menu\";\r\nimport { Input } from \"antd\";\r\nimport dayjs from \"dayjs\";\r\nimport { getCachedTeamState } from \"lib/network/http\";\r\nimport { TeamState } from \"lib/draw/TeamState\";\r\nimport { getColorPalette } from \"lib/color\";\r\nimport classNames from \"classnames\";\r\nimport { ListTools } from \"../header/ListTools\";\r\n\r\ndayjs.extend(calender);\r\n\r\nexport const NoteList: FC<{ noteList: List<NoteInfo> }> = ({ noteList }) => {\r\n  const { editing, setAllTags, setAllNotes } = useContext(MenuCtx);\r\n  const [sortType, setSortType] = useState(\"LAST\");\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [selectedNotes, setSelectNotes] = useState(Set<string>());\r\n\r\n  const removeNotes = async (uids: string[]) => {\r\n    let tags: Record<string, NoteTag> | undefined;\r\n    let allNotes: Record<string, NoteInfo> | undefined;\r\n    for (let uid of uids) {\r\n      const res = await deleteNote(uid);\r\n      tags = res.tags;\r\n      allNotes = res.allNotes;\r\n    }\r\n    tags && setAllTags(tags);\r\n    allNotes && setAllNotes(allNotes);\r\n  };\r\n\r\n  const moveNotes = async (noteIDs: string[], tagID: string) => {\r\n    let tags: Record<string, NoteTag> | undefined;\r\n    let allNotes: Record<string, NoteInfo> | undefined;\r\n    for (let noteID of noteIDs) {\r\n      const res = await moveNoteTag(noteID, tagID);\r\n      tags = res.tags;\r\n      allNotes = res.allNotes;\r\n    }\r\n    tags && setAllTags(tags);\r\n    allNotes && setAllNotes(allNotes);\r\n  };\r\n\r\n  const sortedList = useMemo(() => {\r\n    const comparator = (t0: number, t1: number) => t1 - t0;\r\n    switch (sortType) {\r\n      case \"CREATE\":\r\n        return noteList.sortBy((n) => n.createTime, comparator);\r\n      case \"LAST\":\r\n        return noteList.sortBy((n) => n.lastTime, comparator);\r\n      case \"NAME\":\r\n        return noteList.sortBy((n) => n.name.toUpperCase());\r\n      default:\r\n        return noteList;\r\n    }\r\n  }, [noteList, sortType]);\r\n\r\n  const filterdList = useMemo(\r\n    () =>\r\n      sortedList.filter((n) =>\r\n        n.name.toUpperCase().includes(searchText.trim().toUpperCase())\r\n      ),\r\n    [searchText, sortedList]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setSearchText(\"\");\r\n    setSelectNotes(Set());\r\n  }, [noteList, editing]);\r\n\r\n  return (\r\n    <SwipeDeleteProvider>\r\n      <TransitionGroup className=\"note-list\">\r\n        <MenuHeader>\r\n          <ListTools\r\n            sortType={sortType}\r\n            setSortType={setSortType}\r\n            searchText={searchText}\r\n            setSearchText={setSearchText}\r\n            onDelete={() => removeNotes(selectedNotes.toArray())}\r\n            onMove={(tagID) => moveNotes(selectedNotes.toArray(), tagID)}\r\n            disabled={selectedNotes.size === 0}\r\n          />\r\n        </MenuHeader>\r\n        {filterdList.map((noteInfo, index) => {\r\n          const { uid } = noteInfo;\r\n          const selected = selectedNotes.has(uid);\r\n          const nextUid = filterdList.get(index + 1)?.uid;\r\n          const last = (nextUid && selectedNotes.has(nextUid)) !== selected;\r\n          return (\r\n            <CSSTransition key={uid} timeout={300}>\r\n              <SwipeDelete\r\n                className={classNames(\"note-wrapper\", { selected, last })}\r\n                onDelete={() => removeNotes([uid])}\r\n                disable={editing}\r\n              >\r\n                <NoteItem\r\n                  noteInfo={noteInfo}\r\n                  selected={selected}\r\n                  setSelectNotes={setSelectNotes}\r\n                />\r\n              </SwipeDelete>\r\n            </CSSTransition>\r\n          );\r\n        })}\r\n      </TransitionGroup>\r\n    </SwipeDeleteProvider>\r\n  );\r\n};\r\n\r\nconst NoteItem: FC<{\r\n  noteInfo: NoteInfo;\r\n  selected: boolean;\r\n  setSelectNotes: Setter<Set<string>>;\r\n}> = ({ noteInfo, selected, setSelectNotes }) => {\r\n  const { team, uid, name, lastTime, tagID } = noteInfo;\r\n  const date = useMemo(() => dayjs(lastTime).calendar(), [lastTime]);\r\n  const href = `${team ? \"team\" : \"reader\"}/${uid}`;\r\n\r\n  const { editing, setAllNotes } = useContext(MenuCtx);\r\n  const [noteName, setNoteName] = useState(name);\r\n  const nav = useNavigate();\r\n\r\n  const saveNoteName = () => {\r\n    const newName = noteName.trim();\r\n    if (!newName || newName === name) return setNoteName(name);\r\n    editNoteData(uid, { name: newName });\r\n    setAllNotes((prev) => ({ ...prev, [uid]: { ...noteInfo, name: newName } }));\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (!editing) return nav(href);\r\n    setSelectNotes((prev) => {\r\n      if (prev.has(uid)) return prev.delete(uid);\r\n      return prev.add(uid);\r\n    });\r\n  };\r\n\r\n  const { allTags, currTagID } = useContext(MenuCtx);\r\n  const tag = allTags[tagID];\r\n\r\n  return (\r\n    <div className=\"note-item\" data-selected={selected} onClick={handleClick}>\r\n      <NoteTimg uid={uid} team={team} />\r\n      <div className=\"content\">\r\n        {editing || <p className=\"name\">{name}</p>}\r\n        {editing && (\r\n          <Input\r\n            className=\"name-input\"\r\n            value={noteName}\r\n            onChange={(e) => setNoteName(e.target.value)}\r\n            onClick={(e) => e.stopPropagation()}\r\n            onBlur={saveNoteName}\r\n          />\r\n        )}\r\n        <p className=\"info\">\r\n          <span className=\"date\">{date}</span>\r\n          {tag && currTagID === \"DEFAULT\" && (\r\n            <span className=\"tag\" style={getColorPalette(tag.color)}>\r\n              {tag.name}\r\n            </span>\r\n          )}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PageWrapper = React.lazy(() => import(\"component/PageWrapper\"));\r\n\r\nconst NoteTimg: FC<{ uid: string; team: boolean }> = ({ uid, team }) => {\r\n  const [firstPage, setFirstPage] = useState<NotePage>();\r\n  const drawState = useMemo(() => {\r\n    if (!firstPage) return;\r\n    const { state, ratio } = firstPage;\r\n    return DrawState.loadFromFlat(state, ratio);\r\n  }, [firstPage]);\r\n  const [teamStateMap, setTeamStateMap] = useState<Map<string, DrawState>>();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const stored = await loadNote(uid);\r\n      if (!stored) return;\r\n      const { pageRec, pageOrder } = stored;\r\n      const firstID = pageOrder[0];\r\n      if (!firstID) return;\r\n      setFirstPage(pageRec[firstID]);\r\n      const teamNote = await getCachedTeamState(uid);\r\n      if (!teamNote) return;\r\n      setTeamStateMap(\r\n        TeamState.createFromTeamPages(teamNote).getOnePageStateMap(firstID)\r\n      );\r\n    })();\r\n  }, [uid]);\r\n\r\n  return (\r\n    <div\r\n      className=\"timg-wrapper\"\r\n      data-landscape={(firstPage?.ratio ?? 1.5) < 1}\r\n    >\r\n      {firstPage && drawState && (\r\n        <Suspense fallback={null}>\r\n          <PageWrapper\r\n            drawState={drawState}\r\n            teamStateMap={teamStateMap}\r\n            thumbnail={firstPage.image}\r\n            preview\r\n          />\r\n        </Suspense>\r\n      )}\r\n      {team && <CloudTwoTone className=\"cloud-icon\" />}\r\n      <CheckCircleFilled className=\"checked-icon\" />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { getAllNotes, getAllTags, NoteTag } from \"lib/note/archive\";\r\nimport { NoteInfo } from \"lib/note/note\";\r\nimport { AsideOpenProvider, Setter } from \"lib/hooks\";\r\nimport { SideMenu } from \"./aside\";\r\nimport { NoteList } from \"./notes\";\r\nimport { List } from \"immutable\";\r\n\r\nexport const MenuCtx = React.createContext({\r\n  currTagID: \"DEFAULT\",\r\n  editing: false,\r\n  allNotes: {} as Record<string, NoteInfo>,\r\n  allTags: {} as Record<string, NoteTag>,\r\n  setAllNotes: (() => {}) as Setter<Record<string, NoteInfo>>,\r\n  setAllTags: (() => {}) as Setter<Record<string, NoteTag>>,\r\n  setCurrTagID: (() => {}) as Setter<string>,\r\n  setEditing: (() => {}) as Setter<boolean>,\r\n  menuInit: () => {},\r\n});\r\n\r\nexport default function MainMenu() {\r\n  const [allNotes, setAllNotes] = useState<Record<string, NoteInfo>>({});\r\n  const [allTags, setAllTags] = useState<Record<string, NoteTag>>({});\r\n  const [currTagID, setCurrTagID] = useState(\"DEFAULT\");\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const selectedTag = useMemo(\r\n    () =>\r\n      allTags[currTagID] ?? {\r\n        uid: \"\",\r\n        name: \"All Notes\",\r\n        color: \"#000000\",\r\n        notes: Object.keys(allNotes),\r\n      },\r\n    [allNotes, allTags, currTagID]\r\n  );\r\n\r\n  const noteList = useMemo(\r\n    () =>\r\n      List(\r\n        selectedTag.notes\r\n          .map((uid) => allNotes[uid])\r\n          .filter((n): n is NoteInfo => n !== undefined)\r\n      ),\r\n    [selectedTag, allNotes]\r\n  );\r\n\r\n  const menuInit = () => {\r\n    getAllNotes().then(setAllNotes);\r\n    getAllTags().then(setAllTags);\r\n    document.title = \"Multibility\";\r\n  };\r\n  useEffect(menuInit, []);\r\n\r\n  return (\r\n    <MenuCtx.Provider\r\n      value={{\r\n        currTagID,\r\n        editing,\r\n        allNotes,\r\n        allTags,\r\n        setAllNotes,\r\n        setAllTags,\r\n        setEditing,\r\n        setCurrTagID,\r\n        menuInit,\r\n      }}\r\n    >\r\n      <div className=\"main-menu container\">\r\n        <AsideOpenProvider>\r\n          <SideMenu />\r\n          <NoteList noteList={noteList} />\r\n        </AsideOpenProvider>\r\n      </div>\r\n    </MenuCtx.Provider>\r\n  );\r\n}\r\n"],"names":["imageForage","localforage","name","getImageCache","noteID","index","getItem","cacheList","key","includes","filter","id","setItem","setImageCache","data","length","slice","removeUnusedCache","set","Set","keys","allKeys","has","removeItem","clearImageCache","clear","SwipeCtx","createContext","SwipeDeleteProvider","children","tuple","useState","Provider","value","SwipeDelete","onDelete","disable","className","getUid","uid","useContext","nowSwiped","setNowSwiped","swiped","setSwiped","deleting","deleted","setDeleted","height","setHeight","wrapper","useRef","useEffect","swipeHandler","useSwipeable","onSwipedLeft","current","clientHeight","onSwipedRight","undefined","trackTouch","useTransitionEnd","propertyName","active","transDidEnd","handler","handleClick","classNames","style","onTransitionEnd","ref","onClick","TagInput","tagName","setTagName","tagColor","setTagColor","colorSelector","onSelect","listHeight","virtual","colors","c","color","placeholder","addonBefore","onChange","e","target","TagItem","noteTag","notes","MenuCtx","currTagID","setAllTags","setCurrTagID","tagEditing","setTagEditing","curr","removeTag","deleteTag","tags","finishEditing","newTag","editTag","newAllTags","displayPanel","size","type","icon","SettingOutlined","editingPanel","title","onConfirm","placement","cancelText","DeleteOutlined","okText","okType","okButtonProps","danger","disabled","getColorPalette","NewTagItem","setAdding","getRandomColor","trim","addNewTag","then","SideMenu","allTags","allNotes","adding","useAsideOpen","asideOpen","setAsideOpen","allNoteTag","ContainerOutlined","Object","header","MenuOutlined","PlusOutlined","values","map","tag","SeconaryMenu","keyName","cssTransProps","useActiveKey","setActive","CSSTransition","in","shape","ArrowLeftOutlined","UploadPdfPage","loading","setLoading","setAllNotes","percent","setPercent","file","LoadPDF","note","tagID","createNewNote","message","width","InboxOutlined","multiple","accept","files","handleFile","ProfilePage","userName","getUserName","setName","prefix","UserOutlined","allowClear","saveUserName","block","SettingsPage","menuInit","clearAll","SyncOutlined","serviceWorkerRegistration","window","location","reload","ClearOutlined","menuItems","label","component","FilePdfOutlined","PrimaryMenu","items","OthersPage","timeout","onEnter","el","unmountOnExit","OthersMenu","trigger","content","initKey","zIndex","CaretDownOutlined","Nav","Left","Right","NewNoteButton","JoinTeamButton","addNewNote","createEmptyNote","FormOutlined","roomCode","setRoomCode","wrong","setWrong","nav","useNavigate","code","getNoteID","destroyTooltipOnHide","onVisibleChange","plain","error","v","onFill","TeamOutlined","MenuHeader","ListTools","sortType","setSortType","searchText","setSearchText","onMove","editing","setEditing","sortMenu","selectedKeys","FileOutlined","FileTextOutlined","SortAscendingOutlined","btnProps","sortButton","overlay","SwapOutlined","rotate","deleteButton","ColorLabel","t","tagButton","overlayClassName","TagsOutlined","transition","SelectOutlined","SearchOutlined","bordered","dayjs","calender","NoteList","noteList","selectedNotes","setSelectNotes","removeNotes","uids","deleteNote","res","moveNotes","noteIDs","moveNoteTag","sortedList","useMemo","comparator","t0","t1","sortBy","n","createTime","lastTime","toUpperCase","filterdList","TransitionGroup","toArray","noteInfo","selected","nextUid","get","last","NoteItem","team","date","calendar","href","noteName","setNoteName","prev","delete","add","NoteTimg","stopPropagation","onBlur","newName","editNoteData","PageWrapper","React","firstPage","setFirstPage","drawState","state","ratio","DrawState","teamStateMap","setTeamStateMap","loadNote","stored","pageRec","pageOrder","firstID","getCachedTeamState","teamNote","TeamState","getOnePageStateMap","Suspense","fallback","thumbnail","image","preview","CloudTwoTone","CheckCircleFilled","MainMenu","selectedTag","List","getAllNotes","getAllTags","document"],"sourceRoot":""}