{"version":3,"file":"static/js/442.f9ee70f9.chunk.js","mappings":"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","sources":["lib/note/imgCache.ts","component/SwipeDelete/SwipeDelete.tsx","pages/menu/aside/SideMenu.tsx","pages/menu/header/Others.tsx","pages/menu/header/Nav.tsx","pages/menu/header/ListTools.tsx","pages/menu/notes/NoteList.tsx","pages/menu/Menu.tsx"],"sourcesContent":["import localforage from \"localforage\";\n\nconst IMAGE_CACHE_MAX = 10;\nconst imageForage = localforage.createInstance({ name: \"imageForage\" });\nexport const getImageCache = async (noteID: string, index: number) => {\n  let cacheList = (await imageForage.getItem<string[]>(\"LIST\")) ?? [];\n  const key = `${noteID}_${index}`;\n  if (!cacheList.includes(key)) return;\n  cacheList = [key, ...cacheList.filter((id) => id !== key)];\n  await imageForage.setItem(\"LIST\", cacheList);\n  return await imageForage.getItem<string>(key);\n};\n\nexport const setImageCache = async (noteID: string, index: number, data: string) => {\n  let cacheList = (await imageForage.getItem<string[]>(\"LIST\")) ?? [];\n  const key = `${noteID}_${index}`;\n  cacheList = [key, ...cacheList.filter((id) => id !== key)];\n  if (cacheList.length > IMAGE_CACHE_MAX) {\n    cacheList = cacheList.slice(0, IMAGE_CACHE_MAX);\n  }\n  await imageForage.setItem(\"LIST\", cacheList);\n  await imageForage.setItem(key, data);\n  removeUnusedCache();\n};\n\nconst removeUnusedCache = async () => {\n  const cacheList = (await imageForage.getItem<string[]>(\"LIST\")) ?? [];\n  const set = new Set(cacheList);\n  const allKeys = await imageForage.keys();\n  for (let key of allKeys) {\n    if (key === \"LIST\") continue;\n    if (!set.has(key)) await imageForage.removeItem(key);\n  }\n};\n\nexport const clearImageCache = () => imageForage.clear();\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  createContext,\r\n} from \"react\";\r\nimport { Setter, useTransitionEnd } from \"lib/hooks\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport classNames from \"classnames\";\r\nimport { v4 as getUid } from \"uuid\";\r\nimport \"./swipe-delete.sass\";\r\n\r\nconst SwipeCtx = createContext<[string, Setter<string>]>([\"\", () => {}]);\r\n\r\nexport const SwipeDeleteProvider: FC = ({ children }) => {\r\n  const tuple = useState(\"\");\r\n  return <SwipeCtx.Provider value={tuple}>{children}</SwipeCtx.Provider>;\r\n};\r\n\r\nexport const SwipeDelete: FC<{\r\n  onDelete: () => void;\r\n  disable?: boolean;\r\n  className?: string;\r\n}> = ({ children, onDelete, disable = false, className }) => {\r\n  const [uid] = useState(getUid);\r\n\r\n  const [nowSwiped, setNowSwiped] = useContext(SwipeCtx);\r\n  const [swiped, setSwiped] = useState(false);\r\n  const deleting = swiped && (!nowSwiped || nowSwiped === uid);\r\n  const [deleted, setDeleted] = useState(false);\r\n\r\n  const [height, setHeight] = useState<number>();\r\n  const wrapper = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (nowSwiped !== uid) setSwiped(false);\r\n  }, [nowSwiped, uid]);\r\n\r\n  const showDelete = () => {\r\n    setSwiped(true);\r\n    setNowSwiped(uid);\r\n    setHeight(wrapper.current?.clientHeight);\r\n  };\r\n\r\n  const hideDelete = () => {\r\n    setSwiped(false);\r\n    setNowSwiped(\"\");\r\n    setHeight(undefined);\r\n  };\r\n\r\n  const swipeHandler = useSwipeable({\r\n    onSwipedLeft: showDelete,\r\n    onSwipedRight: hideDelete,\r\n    trackTouch: !disable,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!disable) return;\r\n    setHeight(undefined);\r\n    setNowSwiped(\"\");\r\n    setSwiped(false);\r\n  }, [disable, setNowSwiped]);\r\n\r\n  const [transDidEnd, handler] = useTransitionEnd({\r\n    propertyName: \"height\",\r\n    active: deleted,\r\n  });\r\n  const handleClick = async () => {\r\n    setDeleted(true);\r\n    await transDidEnd;\r\n    onDelete();\r\n    setNowSwiped(\"\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classNames(\"swipe-wrapper\", className)}\r\n      data-deleted={deleted}\r\n      data-deleting={deleting}\r\n      {...swipeHandler}\r\n      style={{ height }}\r\n      onTransitionEnd={handler}\r\n    >\r\n      <div className=\"content\" ref={wrapper}>\r\n        {children}\r\n      </div>\r\n      <div className=\"button\" onClick={handleClick} style={{ height }}>\r\n        Delete\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { FC, useEffect, useState } from \"react\";\r\nimport {\r\n  MenuOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  SettingOutlined,\r\n  ContainerOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Button, Input, Popconfirm, Select } from \"antd\";\r\nimport { deleteTag, editTag, NoteTag, addNewTag } from \"lib/note/archive\";\r\nimport { colors, getColorPalette, getRandomColor } from \"lib/color\";\r\nimport { Setter, useAsideOpen } from \"lib/hooks\";\r\nimport { SwipeDelete, SwipeDeleteProvider } from \"component/SwipeDelete\";\r\nimport { ColorCirle } from \"component/ColorCircle\";\r\nimport { MenuProps } from \"../Menu\";\r\n\r\nconst TagInput: FC<{\r\n  tagName: string;\r\n  setTagName: Setter<string>;\r\n  tagColor: string;\r\n  setTagColor: Setter<string>;\r\n}> = ({ tagName, setTagName, tagColor, setTagColor }) => {\r\n  const colorSelector = (\r\n    <Select\r\n      value={tagColor}\r\n      onSelect={setTagColor}\r\n      listHeight={150}\r\n      virtual={false}\r\n    >\r\n      {colors.map((c) => (\r\n        <Select.Option value={c} key={c}>\r\n          <ColorCirle className=\"tag-circle\" color={c} />\r\n        </Select.Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n\r\n  return (\r\n    <Input\r\n      placeholder=\"Tag name...\"\r\n      className=\"tag-name-input\"\r\n      addonBefore={colorSelector}\r\n      value={tagName}\r\n      onChange={(e) => setTagName(e.target.value)}\r\n    />\r\n  );\r\n};\r\n\r\nconst TagItem: FC<{ noteTag: NoteTag } & MenuProps> = ({\r\n  noteTag,\r\n  currTagID,\r\n  setAllTags,\r\n  setCurrTagID,\r\n}) => {\r\n  const { uid, color, name, notes } = noteTag;\r\n  const [tagName, setTagName] = useState(name);\r\n  const [tagColor, setTagColor] = useState(color);\r\n  const [tagEditing, setTagEditing] = useState(false);\r\n  const curr = currTagID === uid;\r\n  useEffect(() => setTagEditing(false), [curr]);\r\n\r\n  async function removeTag() {\r\n    const tags = await deleteTag(uid);\r\n    setCurrTagID(\"DEFAULT\");\r\n    setAllTags(tags);\r\n  }\r\n\r\n  const cancelEditing = () => {\r\n    setTagName(name);\r\n    setTagColor(color);\r\n    setTagEditing(false);\r\n  };\r\n\r\n  const finishEditing = async () => {\r\n    const newTag: NoteTag = {\r\n      ...noteTag,\r\n      name: tagName,\r\n      color: tagColor,\r\n    };\r\n\r\n    const newAllTags = await editTag(newTag);\r\n    setAllTags(newAllTags);\r\n    setTagEditing(false);\r\n  };\r\n\r\n  const displayPanel = (\r\n    <>\r\n      <ColorCirle className=\"tag-circle\" color={tagColor} />\r\n      <span className=\"tag-name\">{tagName}</span>\r\n      {curr ? (\r\n        <Button\r\n          size=\"small\"\r\n          type=\"text\"\r\n          onClick={() => setTagEditing(true)}\r\n          icon={<SettingOutlined />}\r\n        />\r\n      ) : (\r\n        <span className=\"tag-num\">{notes.length}</span>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const editingPanel = (\r\n    <>\r\n      <TagInput\r\n        tagName={tagName}\r\n        setTagName={setTagName}\r\n        tagColor={tagColor}\r\n        setTagColor={setTagColor}\r\n      />\r\n      <div className=\"buttons\">\r\n        <Popconfirm\r\n          title=\"This tag will be deleted.\"\r\n          onConfirm={removeTag}\r\n          placement=\"left\"\r\n          cancelText=\"Cancel\"\r\n          icon={<DeleteOutlined />}\r\n          okText=\"Delete\"\r\n          okType=\"danger\"\r\n          okButtonProps={{ type: \"primary\" }}\r\n        >\r\n          <Button danger>Delete</Button>\r\n        </Popconfirm>\r\n        <Button onClick={cancelEditing}>Cancel</Button>\r\n        <Button type=\"primary\" disabled={!tagName} onClick={finishEditing}>\r\n          OK\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <SwipeDelete\r\n      className=\"tag-wrapper\"\r\n      onDelete={removeTag}\r\n      disable={tagEditing}\r\n    >\r\n      <div\r\n        className=\"tag-item\"\r\n        data-curr={curr}\r\n        data-editing={tagEditing}\r\n        onClick={() => setCurrTagID(uid)}\r\n        style={getColorPalette(color)}\r\n      >\r\n        {tagEditing ? editingPanel : displayPanel}\r\n      </div>\r\n    </SwipeDelete>\r\n  );\r\n};\r\n\r\nconst NewTagItem: FC<{ setAdding: Setter<boolean> } & MenuProps> = ({\r\n  setAdding,\r\n  setAllTags,\r\n}) => {\r\n  const [tagName, setTagName] = useState(\"\");\r\n  const [tagColor, setTagColor] = useState(getRandomColor());\r\n\r\n  const addTag = () => {\r\n    const name = tagName.trim();\r\n    if (!name) return;\r\n    addNewTag(name, tagColor).then(setAllTags);\r\n    setAdding(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tag-wrapper\">\r\n      <div className=\"tag-item\" data-curr data-editing>\r\n        <TagInput\r\n          tagName={tagName}\r\n          setTagName={setTagName}\r\n          tagColor={tagColor}\r\n          setTagColor={setTagColor}\r\n        />\r\n        <div className=\"buttons\">\r\n          <Button onClick={() => setAdding(false)}>Cancel</Button>\r\n          <Button type=\"primary\" disabled={!tagName} onClick={addTag}>\r\n            OK\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const SideMenu: FC<MenuProps> = (props) => {\r\n  const { allTags, currTagID, allNotes, setCurrTagID } = props;\r\n  const [adding, setAdding] = useState(false);\r\n  const [asideOpen, setAsideOpen] = useAsideOpen();\r\n\r\n  const allNoteTag = (\r\n    <div className=\"tag-wrapper\">\r\n      <div\r\n        className=\"tag-item\"\r\n        data-curr={currTagID === \"DEFAULT\"}\r\n        onClick={() => setCurrTagID(\"DEFAULT\")}\r\n      >\r\n        <ContainerOutlined className=\"all-note-icon\" />\r\n        <span className=\"tag-name\">All Notes</span>\r\n        <span className=\"tag-num\">{Object.keys(allNotes).length}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const header = (\r\n    <header>\r\n      <Button\r\n        className=\"aside-btn\"\r\n        type=\"text\"\r\n        icon={<MenuOutlined />}\r\n        onClick={() => setAsideOpen(false)}\r\n      />\r\n      <h2 className=\"logo\">Multibility</h2>\r\n      <Button\r\n        className=\"new-tag-btn\"\r\n        type=\"text\"\r\n        icon={<PlusOutlined />}\r\n        onClick={() => setAdding(true)}\r\n        disabled={adding}\r\n      />\r\n    </header>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <aside className=\"side-menu\" data-open={asideOpen}>\r\n        {header}\r\n        <div className=\"tag-list\">\r\n          {allNoteTag}\r\n          <SwipeDeleteProvider>\r\n            {Object.values(allTags).map((tag) => (\r\n              <TagItem key={tag.uid} noteTag={tag} {...props} />\r\n            ))}\r\n          </SwipeDeleteProvider>\r\n          {adding && <NewTagItem setAdding={setAdding} {...props} />}\r\n        </div>\r\n      </aside>\r\n      <div\r\n        className=\"aside-mask\"\r\n        onClick={() => setAsideOpen(false)}\r\n        data-open={asideOpen}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, FC, useEffect } from \"react\";\r\nimport {\r\n  Menu,\r\n  Input,\r\n  Button,\r\n  message,\r\n  Popover,\r\n  Progress,\r\n  Popconfirm,\r\n} from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  SyncOutlined,\r\n  ClearOutlined,\r\n  InboxOutlined,\r\n  FilePdfOutlined,\r\n  SettingOutlined,\r\n  CaretDownOutlined,\r\n  ArrowLeftOutlined,\r\n} from \"@ant-design/icons\";\r\nimport * as serviceWorkerRegistration from \"serviceWorkerRegistration\";\r\nimport { CSSTransitionProps } from \"react-transition-group/CSSTransition\";\r\nimport { ActiveKeyProvider, useActiveKey } from \"lib/hooks\";\r\nimport { getUserName, saveUserName } from \"lib/user\";\r\nimport { clearImageCache } from \"lib/note/imgCache\";\r\nimport { createNewNote } from \"lib/note/archive\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport localforage from \"localforage\";\r\nimport \"./others.sass\";\r\nimport { MenuProps } from \"../Menu\";\r\n\r\nconst SeconaryMenu: FC<\r\n  {\r\n    title: string;\r\n    keyName: string;\r\n  } & CSSTransitionProps\r\n> = ({ children, title, keyName, ...cssTransProps }) => {\r\n  const [active, setActive] = useActiveKey();\r\n  return (\r\n    <CSSTransition in={active === keyName} {...cssTransProps}>\r\n      <div className=\"secondary\">\r\n        <nav>\r\n          <Button\r\n            type=\"text\"\r\n            shape=\"circle\"\r\n            onClick={() => setActive(\"MENU\")}\r\n            icon={<ArrowLeftOutlined />}\r\n          />\r\n          <h3>{title}</h3>\r\n        </nav>\r\n        {children}\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nconst UploadPdfPage: FC<MenuProps> = ({\r\n  currTagID,\r\n  setAllTags,\r\n  setAllNotes,\r\n}) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [percent, setPercent] = useState(0);\r\n\r\n  async function handleFile(file: File) {\r\n    if (file.type !== \"application/pdf\") return;\r\n    setLoading(true);\r\n    const { LoadPDF } = await import(\"lib/note/pdfImage\");\r\n    const note = await LoadPDF(file, setPercent);\r\n    note.tagID = currTagID;\r\n    const { tags, allNotes } = await createNewNote(note);\r\n    setAllTags(tags);\r\n    setAllNotes(allNotes);\r\n    setLoading(false);\r\n    message.success(\"PDF Loaded\");\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <label>\r\n      <div className=\"pdf-upload\">\r\n        <div className=\"icon-wrapper\">\r\n          {loading ? (\r\n            <Progress width={48} type=\"circle\" percent={percent} />\r\n          ) : (\r\n            <InboxOutlined className=\"inbox-icon\" />\r\n          )}\r\n        </div>\r\n        <p className=\"hint\">Click to upload a pdf file.</p>\r\n      </div>\r\n      <input\r\n        type=\"file\"\r\n        multiple={false}\r\n        accept=\".pdf\"\r\n        onChange={({ target: { files } }) => {\r\n          const file = files && files[0];\r\n          if (!file) return;\r\n          handleFile(file);\r\n        }}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst ProfilePage = () => {\r\n  const [, setActive] = useActiveKey();\r\n  const userName = getUserName();\r\n  const [name, setName] = useState(userName);\r\n  const handleEnter = () => {\r\n    if (!name) return;\r\n    saveUserName(name);\r\n    setActive(\"MENU\");\r\n  };\r\n  return (\r\n    <div className=\"profile-page\">\r\n      <Input\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        prefix={<UserOutlined />}\r\n        allowClear\r\n      />\r\n      <Button\r\n        disabled={userName === name || !name}\r\n        onClick={handleEnter}\r\n        type=\"primary\"\r\n        block\r\n      >\r\n        OK\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SettingsPage: FC = () => {\r\n  const clearAll = async () => {\r\n    await localforage.clear();\r\n    await clearImageCache();\r\n    window.location.reload();\r\n  };\r\n\r\n  const clearServiceWorker = async () => {\r\n    await serviceWorkerRegistration.unregister();\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div className=\"setting-menu\">\r\n      <Button icon={<SyncOutlined />} onClick={clearServiceWorker} block>\r\n        Update\r\n      </Button>\r\n      <Popconfirm\r\n        title=\"Everything will be deleted.\"\r\n        onConfirm={clearAll}\r\n        icon={<ClearOutlined />}\r\n        okText=\"Delete\"\r\n        okType=\"danger\"\r\n        okButtonProps={{ type: \"primary\" }}\r\n        cancelText=\"Cancel\"\r\n        placement=\"bottom\"\r\n      >\r\n        <Button icon={<ClearOutlined />} danger block>\r\n          Clear all\r\n        </Button>\r\n      </Popconfirm>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst menuItems = [\r\n  {\r\n    key: \"PDF\",\r\n    label: \"Import PDF\",\r\n    icon: <FilePdfOutlined />,\r\n  },\r\n  {\r\n    key: \"PROFILE\",\r\n    label: \"My profile\",\r\n    icon: <UserOutlined />,\r\n  },\r\n  {\r\n    key: \"SETTINGS\",\r\n    label: \"Settings\",\r\n    icon: <SettingOutlined />,\r\n  },\r\n];\r\n\r\nconst PrimaryMenu = () => {\r\n  const [, setActive] = useActiveKey();\r\n  return (\r\n    <div className=\"primary-menu\">\r\n      <Menu onClick={({ key }) => setActive(key)} items={menuItems} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OthersPage: FC<MenuProps> = (props) => {\r\n  const [height, setHeight] = useState(0);\r\n  const [active, setActive] = useActiveKey();\r\n\r\n  const calcHeight = (el: HTMLElement) => {\r\n    setHeight(el.clientHeight);\r\n  };\r\n\r\n  const cssTransProps = {\r\n    timeout: 300,\r\n    onEnter: calcHeight,\r\n    unmountOnExit: true,\r\n  };\r\n\r\n  useEffect(() => setActive(\"MENU\"), [setActive]);\r\n\r\n  const components: Record<string, React.ReactNode> = {\r\n    PDF: <UploadPdfPage {...props} />,\r\n    PROFILE: <ProfilePage />,\r\n    SETTINGS: <SettingsPage />,\r\n  };\r\n\r\n  return (\r\n    <section className=\"others-menu\" style={{ height }}>\r\n      <CSSTransition in={active === \"MENU\"} {...cssTransProps}>\r\n        <PrimaryMenu />\r\n      </CSSTransition>\r\n      {menuItems.map(({ key, label }) => (\r\n        <SeconaryMenu key={key} keyName={key} title={label} {...cssTransProps}>\r\n          {components[key]}\r\n        </SeconaryMenu>\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport const OthersMenu: FC<MenuProps> = (props) => {\r\n  return (\r\n    <Popover\r\n      placement=\"bottomRight\"\r\n      trigger=\"click\"\r\n      content={\r\n        <ActiveKeyProvider initKey=\"\">\r\n          <OthersPage {...props} />\r\n        </ActiveKeyProvider>\r\n      }\r\n      zIndex={900}\r\n    >\r\n      <Button className=\"small\" type=\"text\" icon={<CaretDownOutlined />} />\r\n      <Button className=\"large\" shape=\"circle\" icon={<CaretDownOutlined />} />\r\n    </Popover>\r\n  );\r\n};\r\n","import { Button, Popover } from \"antd\";\r\nimport { MenuOutlined, FormOutlined, TeamOutlined } from \"@ant-design/icons\";\r\nimport { FC, useState } from \"react\";\r\nimport { createEmptyNote } from \"lib/note/note\";\r\nimport { createNewNote } from \"lib/note/archive\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getNoteID } from \"lib/network/http\";\r\nimport { PasscodeInput } from \"antd-mobile\";\r\nimport { OthersMenu } from \"./Others\";\r\nimport { useAsideOpen } from \"lib/hooks\";\r\nimport { MenuProps } from \"../Menu\";\r\n\r\nexport const NoteNav: FC<MenuProps> = (props) => {\r\n  return (\r\n    <nav>\r\n      <Left {...props} />\r\n      <Right {...props} />\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst Left: FC<MenuProps> = ({ allTags, currTagID }) => {\r\n  const [, setAsideOpen] = useAsideOpen();\r\n\r\n  const title = allTags[currTagID]?.name ?? \"All notes\";\r\n  return (\r\n    <div className=\"nav-left\">\r\n      <Button\r\n        className=\"aside-btn small\"\r\n        type=\"text\"\r\n        icon={<MenuOutlined />}\r\n        onClick={() => setAsideOpen(true)}\r\n      />\r\n      <h2>\r\n        <b>{title}</b>\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Right: FC<MenuProps> = (props) => {\r\n  return (\r\n    <div className=\"nav-right\">\r\n      <NewNoteButton {...props} />\r\n      <JoinTeamButton />\r\n      <OthersMenu {...props} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NewNoteButton: FC<MenuProps> = ({\r\n  currTagID,\r\n  setAllTags,\r\n  setAllNotes,\r\n}) => {\r\n  async function addNewNote() {\r\n    const note = createEmptyNote();\r\n    note.tagID = currTagID;\r\n    const { tags, allNotes } = await createNewNote(note);\r\n    setAllTags(tags);\r\n    setAllNotes(allNotes);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        className=\"new-note large\"\r\n        type=\"primary\"\r\n        shape=\"round\"\r\n        onClick={addNewNote}\r\n        icon={<FormOutlined />}\r\n      >\r\n        New\r\n      </Button>\r\n      <Button\r\n        className=\"new-note small\"\r\n        type=\"link\"\r\n        onClick={addNewNote}\r\n        icon={<FormOutlined />}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst JoinTeamButton = () => {\r\n  const [roomCode, setRoomCode] = useState(\"\");\r\n  const [wrong, setWrong] = useState(false);\r\n\r\n  const nav = useNavigate();\r\n  async function handleSubmit(code: string) {\r\n    const noteID = await getNoteID(code);\r\n    if (noteID) return nav(`/team/${noteID}`);\r\n    setRoomCode(\"\");\r\n    setWrong(true);\r\n  }\r\n\r\n  return (\r\n    <Popover\r\n      placement=\"bottomRight\"\r\n      trigger=\"click\"\r\n      title=\"Join a team note\"\r\n      destroyTooltipOnHide\r\n      onVisibleChange={() => setWrong(false)}\r\n      content={\r\n        <PasscodeInput\r\n          plain\r\n          length={4}\r\n          error={wrong}\r\n          value={roomCode}\r\n          onChange={(v) => {\r\n            setWrong(false);\r\n            setRoomCode(v);\r\n          }}\r\n          onFill={handleSubmit}\r\n        />\r\n      }\r\n    >\r\n      <Button className=\"team-btn large\" shape=\"round\" icon={<TeamOutlined />}>\r\n        Team\r\n      </Button>\r\n      <Button className=\"team-btn small\" type=\"text\" icon={<TeamOutlined />} />\r\n    </Popover>\r\n  );\r\n};\r\n","import { Button, ButtonProps, Dropdown, Input, Menu, Popconfirm } from \"antd\";\r\nimport { FC } from \"react\";\r\nimport {\r\n  SwapOutlined,\r\n  TagsOutlined,\r\n  FileOutlined,\r\n  DeleteOutlined,\r\n  SearchOutlined,\r\n  SelectOutlined,\r\n  FileTextOutlined,\r\n  ArrowLeftOutlined,\r\n  SortAscendingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Setter } from \"lib/hooks\";\r\nimport { ColorCirle } from \"component/ColorCircle\";\r\nimport { deleteNote, moveNoteTag, NoteTag } from \"lib/note/archive\";\r\nimport { Set } from \"immutable\";\r\nimport { MenuProps } from \"../Menu\";\r\nimport { NoteInfo } from \"lib/note/note\";\r\n\r\nexport const ListTools: FC<\r\n  {\r\n    sortType: string;\r\n    setSortType: Setter<string>;\r\n    editing: boolean;\r\n    setEditing: Setter<boolean>;\r\n    searchText: string;\r\n    setSearchText: Setter<string>;\r\n    selectedNotes: Set<string>;\r\n  } & MenuProps\r\n> = ({\r\n  sortType,\r\n  setSortType,\r\n  editing,\r\n  setEditing,\r\n  searchText,\r\n  setSearchText,\r\n  selectedNotes,\r\n  setAllNotes,\r\n  setAllTags,\r\n  allTags,\r\n}) => {\r\n  const sortMenu = (\r\n    <Menu\r\n      onClick={({ key }) => setSortType(key)}\r\n      selectedKeys={[sortType]}\r\n      items={[\r\n        {\r\n          type: \"group\",\r\n          label: \"Sort by\",\r\n          className: \"sort-drop\",\r\n          children: [\r\n            { icon: <FileOutlined />, key: \"CREATE\", label: \"Date created\" },\r\n            { icon: <FileTextOutlined />, key: \"LAST\", label: \"Date modified\" },\r\n            { icon: <SortAscendingOutlined />, key: \"NAME\", label: \"Name\" },\r\n          ],\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n\r\n  const btnProps: ButtonProps = { type: \"text\", shape: \"circle\" };\r\n  const sortButton = (\r\n    <Dropdown overlay={sortMenu} trigger={[\"click\"]} placement=\"bottomRight\">\r\n      <Button\r\n        className=\"sort-btn\"\r\n        icon={<SwapOutlined rotate={90} />}\r\n        {...btnProps}\r\n      />\r\n    </Dropdown>\r\n  );\r\n  const disabled = selectedNotes.size === 0;\r\n\r\n  const deleteNotes = async () => {\r\n    let tags: Record<string, NoteTag> | undefined;\r\n    let allNotes: Record<string, NoteInfo> | undefined;\r\n    for (let uid of selectedNotes.toArray()) {\r\n      const res = await deleteNote(uid);\r\n      tags = res.tags;\r\n      allNotes = res.allNotes;\r\n    }\r\n    tags && setAllTags(tags);\r\n    allNotes && setAllNotes(allNotes);\r\n  };\r\n\r\n  const moveNotes = async (tagID: string) => {\r\n    let tags: Record<string, NoteTag> | undefined;\r\n    let allNotes: Record<string, NoteInfo> | undefined;\r\n    for (let noteID of selectedNotes.toArray()) {\r\n      const res = await moveNoteTag(noteID, tagID);\r\n      tags = res.tags;\r\n      allNotes = res.allNotes;\r\n    }\r\n    tags && setAllTags(tags);\r\n    allNotes && setAllNotes(allNotes);\r\n  };\r\n\r\n  const deleteButton = (\r\n    <Popconfirm\r\n      title=\"Notes will be deleted.\"\r\n      onConfirm={deleteNotes}\r\n      icon={<DeleteOutlined />}\r\n      placement=\"bottom\"\r\n      cancelText=\"Cancel\"\r\n      disabled={disabled}\r\n      okText=\"Delete\"\r\n      okType=\"danger\"\r\n      okButtonProps={{ type: \"primary\" }}\r\n    >\r\n      <Button\r\n        className=\"del-btn\"\r\n        shape=\"round\"\r\n        type=\"text\"\r\n        disabled={disabled}\r\n        danger={!disabled}\r\n        icon={<DeleteOutlined />}\r\n      >\r\n        Delete\r\n      </Button>\r\n    </Popconfirm>\r\n  );\r\n\r\n  const ColorLabel: FC<{\r\n    color: string;\r\n    name: string;\r\n  }> = ({ color, name }) => (\r\n    <div className=\"tag-select\">\r\n      <ColorCirle color={color} className=\"tag-circle\" />\r\n      <span className=\"name\">{name}</span>\r\n    </div>\r\n  );\r\n\r\n  const overlay = (\r\n    <Menu\r\n      onClick={({ key }) => moveNotes(key)}\r\n      items={[\r\n        {\r\n          key: \"DEFAULT\",\r\n          label: <ColorLabel color=\"#eee\" name=\"No tag\" />,\r\n        },\r\n        ...Object.values(allTags).map((t) => ({\r\n          key: t.uid,\r\n          label: <ColorLabel color={t.color} name={t.name} />,\r\n        })),\r\n      ]}\r\n    />\r\n  );\r\n\r\n  const tagButton = (\r\n    <Dropdown\r\n      overlayClassName=\"tag-drop\"\r\n      disabled={disabled}\r\n      overlay={overlay}\r\n      trigger={[\"click\"]}\r\n      placement=\"bottom\"\r\n    >\r\n      <Button\r\n        shape=\"round\"\r\n        type=\"text\"\r\n        className=\"tag-btn\"\r\n        icon={<TagsOutlined />}\r\n        style={{ transition: \"none\" }}\r\n      >\r\n        Tag\r\n      </Button>\r\n    </Dropdown>\r\n  );\r\n\r\n  return (\r\n    <div className=\"list-tools\" data-editing={editing}>\r\n      {editing ? (\r\n        <>\r\n          <Button\r\n            onClick={() => setEditing(false)}\r\n            icon={<ArrowLeftOutlined />}\r\n            {...btnProps}\r\n          />\r\n          {tagButton}\r\n          {deleteButton}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Button\r\n            onClick={() => setEditing(true)}\r\n            icon={<SelectOutlined />}\r\n            {...btnProps}\r\n          />\r\n          <Input\r\n            value={searchText}\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n            className=\"search-input\"\r\n            prefix={<SearchOutlined />}\r\n            bordered={false}\r\n            allowClear\r\n          />\r\n          {sortButton}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, useMemo, useState, useEffect, Suspense } from \"react\";\r\nimport { deleteNote, editNoteData, loadNote } from \"lib/note/archive\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { CloudTwoTone, CheckCircleFilled } from \"@ant-design/icons\";\r\nimport { SwipeDelete, SwipeDeleteProvider } from \"component/SwipeDelete\";\r\nimport { NoteInfo, NotePage } from \"lib/note/note\";\r\nimport { DrawState } from \"lib/draw/DrawState\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Setter } from \"lib/hooks\";\r\nimport { List, Map, Set } from \"immutable\";\r\nimport { Input } from \"antd\";\r\nimport { getCachedTeamState } from \"lib/network/http\";\r\nimport { TeamState } from \"lib/draw/TeamState\";\r\nimport { getColorPalette } from \"lib/color\";\r\nimport classNames from \"classnames\";\r\nimport { NoteNav, ListTools } from \"../header\";\r\nimport dayjs from \"dayjs\";\r\nimport calender from \"dayjs/plugin/calendar\";\r\nimport { MenuProps } from \"../Menu\";\r\ndayjs.extend(calender);\r\n\r\nexport const NoteList: FC<MenuProps> = (props) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [sortType, setSortType] = useState(\"LAST\");\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [selectedNotes, setSelectNotes] = useState(Set<string>());\r\n\r\n  const { setAllTags, setAllNotes } = props;\r\n  const removeNote = async (uid: string) => {\r\n    const { tags, allNotes } = await deleteNote(uid);\r\n    setAllNotes(allNotes);\r\n    setAllTags(tags);\r\n  };\r\n\r\n  const { currTagID, allNotes, allTags } = props;\r\n  const noteList = useMemo(\r\n    () =>\r\n      List(\r\n        (allTags[currTagID]?.notes ?? Object.keys(allNotes))\r\n          .map((uid) => allNotes[uid])\r\n          .filter((n): n is NoteInfo => n !== undefined)\r\n      ),\r\n    [allNotes, allTags, currTagID]\r\n  );\r\n\r\n  const sortedList = useMemo(() => {\r\n    const comparator = (t0: number, t1: number) => t1 - t0;\r\n    switch (sortType) {\r\n      case \"CREATE\":\r\n        return noteList.sortBy((n) => n.createTime, comparator);\r\n      case \"LAST\":\r\n        return noteList.sortBy((n) => n.lastTime, comparator);\r\n      case \"NAME\":\r\n        return noteList.sortBy((n) => n.name.toUpperCase());\r\n      default:\r\n        return noteList;\r\n    }\r\n  }, [noteList, sortType]);\r\n\r\n  const filterdList = useMemo(\r\n    () =>\r\n      sortedList.filter((n) =>\r\n        n.name.toUpperCase().includes(searchText.trim().toUpperCase())\r\n      ),\r\n    [searchText, sortedList]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setSearchText(\"\");\r\n    setSelectNotes(Set());\r\n  }, [noteList, editing]);\r\n\r\n  return (\r\n    <SwipeDeleteProvider>\r\n      <div className=\"note-list\">\r\n        <header>\r\n          <NoteNav {...props} />\r\n          <ListTools\r\n            sortType={sortType}\r\n            setSortType={setSortType}\r\n            editing={editing}\r\n            setEditing={setEditing}\r\n            searchText={searchText}\r\n            setSearchText={setSearchText}\r\n            selectedNotes={selectedNotes}\r\n            {...props}\r\n          />\r\n        </header>\r\n        <TransitionGroup component={null}>\r\n          {filterdList.map((noteInfo, index) => {\r\n            const { uid } = noteInfo;\r\n            const selected = selectedNotes.has(uid);\r\n            const nextUid = filterdList.get(index + 1)?.uid;\r\n            const last = (nextUid && selectedNotes.has(nextUid)) !== selected;\r\n            return (\r\n              <CSSTransition key={uid} timeout={300}>\r\n                <SwipeDelete\r\n                  className={classNames(\"note-wrapper\", { selected, last })}\r\n                  onDelete={() => removeNote(uid)}\r\n                  disable={editing}\r\n                >\r\n                  <NoteItem\r\n                    noteInfo={noteInfo}\r\n                    selected={selected}\r\n                    editing={editing}\r\n                    setSelectNotes={setSelectNotes}\r\n                    {...props}\r\n                  />\r\n                </SwipeDelete>\r\n              </CSSTransition>\r\n            );\r\n          })}\r\n        </TransitionGroup>\r\n      </div>\r\n    </SwipeDeleteProvider>\r\n  );\r\n};\r\n\r\nconst NoteItem: FC<\r\n  {\r\n    noteInfo: NoteInfo;\r\n    selected: boolean;\r\n    editing: boolean;\r\n    setSelectNotes: Setter<Set<string>>;\r\n  } & MenuProps\r\n> = ({ noteInfo, selected, editing, setSelectNotes, ...props }) => {\r\n  const { team, uid, name, lastTime, tagID } = noteInfo;\r\n  const date = useMemo(() => dayjs(lastTime).calendar(), [lastTime]);\r\n  const href = `${team ? \"team\" : \"reader\"}/${uid}`;\r\n\r\n  const { setAllNotes } = props;\r\n  const [noteName, setNoteName] = useState(name);\r\n  const nav = useNavigate();\r\n\r\n  const saveNoteName = () => {\r\n    const newName = noteName.trim();\r\n    if (!newName || newName === name) return setNoteName(name);\r\n    editNoteData(uid, { name: newName });\r\n    setAllNotes((prev) => ({ ...prev, [uid]: { ...noteInfo, name: newName } }));\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (!editing) return nav(href);\r\n    setSelectNotes((prev) => {\r\n      if (prev.has(uid)) return prev.delete(uid);\r\n      return prev.add(uid);\r\n    });\r\n  };\r\n\r\n  const { allTags, currTagID } = props;\r\n  const tag = allTags[tagID];\r\n\r\n  return (\r\n    <div className=\"note-item\" data-selected={selected} onClick={handleClick}>\r\n      <NoteTimg uid={uid} team={team} />\r\n      <div className=\"content\">\r\n        {editing && !selected ? (\r\n          <Input\r\n            className=\"name-input\"\r\n            value={noteName}\r\n            onChange={(e) => setNoteName(e.target.value)}\r\n            onClick={(e) => e.stopPropagation()}\r\n            onBlur={saveNoteName}\r\n          />\r\n        ) : (\r\n          <p className=\"name\">{name}</p>\r\n        )}\r\n        <p className=\"info\">\r\n          <span className=\"date\">{date}</span>\r\n          {tag && currTagID === \"DEFAULT\" && (\r\n            <span className=\"tag\" style={getColorPalette(tag.color)}>\r\n              {tag.name}\r\n            </span>\r\n          )}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PageWrapper = React.lazy(() => import(\"component/PageWrapper\"));\r\n\r\nconst NoteTimg: FC<{ uid: string; team: boolean }> = ({ uid, team }) => {\r\n  const [firstPage, setFirstPage] = useState<NotePage>();\r\n  const drawState = useMemo(() => {\r\n    if (!firstPage) return;\r\n    const { state, ratio } = firstPage;\r\n    return DrawState.loadFromFlat(state, ratio);\r\n  }, [firstPage]);\r\n  const [teamStateMap, setTeamStateMap] = useState<Map<string, DrawState>>();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const stored = await loadNote(uid);\r\n      if (!stored) return;\r\n      const { pageRec, pageOrder } = stored;\r\n      const firstID = pageOrder[0];\r\n      if (!firstID) return;\r\n      setFirstPage(pageRec[firstID]);\r\n      const teamNote = await getCachedTeamState(uid);\r\n      if (!teamNote) return;\r\n      setTeamStateMap(\r\n        TeamState.createFromTeamPages(teamNote).getOnePageStateMap(firstID)\r\n      );\r\n    })();\r\n  }, [uid]);\r\n\r\n  return (\r\n    <div\r\n      className=\"timg-wrapper\"\r\n      data-landscape={(firstPage?.ratio ?? 1.5) < 1}\r\n    >\r\n      {firstPage && drawState && (\r\n        <Suspense fallback={null}>\r\n          <PageWrapper\r\n            drawState={drawState}\r\n            teamStateMap={teamStateMap}\r\n            thumbnail={firstPage.image}\r\n            preview\r\n          />\r\n        </Suspense>\r\n      )}\r\n      {team && <CloudTwoTone className=\"cloud-icon\" />}\r\n      <CheckCircleFilled className=\"checked-icon\" />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getAllNotes, getAllTags, NoteTag } from \"lib/note/archive\";\r\nimport { NoteInfo } from \"lib/note/note\";\r\nimport { AsideOpenProvider, Setter } from \"lib/hooks\";\r\nimport { SideMenu } from \"./aside\";\r\nimport { NoteList } from \"./notes\";\r\n\r\nexport interface MenuProps {\r\n  currTagID: string;\r\n  allNotes: Record<string, NoteInfo>;\r\n  allTags: Record<string, NoteTag>;\r\n  setAllNotes: Setter<Record<string, NoteInfo>>;\r\n  setAllTags: Setter<Record<string, NoteTag>>;\r\n  setCurrTagID: Setter<string>;\r\n}\r\n\r\nexport default function MainMenu() {\r\n  const [allNotes, setAllNotes] = useState<Record<string, NoteInfo>>({});\r\n  const [allTags, setAllTags] = useState<Record<string, NoteTag>>({});\r\n  const [currTagID, setCurrTagID] = useState(\"DEFAULT\");\r\n\r\n  useEffect(() => {\r\n    getAllNotes().then(setAllNotes);\r\n    getAllTags().then(setAllTags);\r\n    document.title = \"Multibility\";\r\n  }, []);\r\n\r\n  const menuProps: MenuProps = {\r\n    allNotes,\r\n    allTags,\r\n    setAllNotes,\r\n    setAllTags,\r\n    currTagID,\r\n    setCurrTagID,\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-menu container\">\r\n      <AsideOpenProvider>\r\n        <SideMenu {...menuProps} />\r\n        <NoteList {...menuProps} />\r\n      </AsideOpenProvider>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["imageForage","localforage","name","getImageCache","noteID","index","getItem","cacheList","key","includes","filter","id","setItem","setImageCache","data","length","slice","removeUnusedCache","set","Set","keys","allKeys","has","removeItem","clearImageCache","clear","SwipeCtx","createContext","SwipeDeleteProvider","children","tuple","useState","Provider","value","SwipeDelete","onDelete","disable","className","getUid","uid","useContext","nowSwiped","setNowSwiped","swiped","setSwiped","deleting","deleted","setDeleted","height","setHeight","wrapper","useRef","useEffect","swipeHandler","useSwipeable","onSwipedLeft","current","clientHeight","onSwipedRight","undefined","trackTouch","useTransitionEnd","propertyName","active","transDidEnd","handler","handleClick","classNames","style","onTransitionEnd","ref","onClick","TagInput","tagName","setTagName","tagColor","setTagColor","colorSelector","onSelect","listHeight","virtual","colors","c","color","placeholder","addonBefore","onChange","e","target","TagItem","noteTag","currTagID","setAllTags","setCurrTagID","notes","tagEditing","setTagEditing","curr","removeTag","deleteTag","tags","finishEditing","newTag","editTag","newAllTags","displayPanel","size","type","icon","SettingOutlined","editingPanel","title","onConfirm","placement","cancelText","DeleteOutlined","okText","okType","okButtonProps","danger","disabled","getColorPalette","NewTagItem","setAdding","getRandomColor","trim","addNewTag","then","SideMenu","props","allTags","allNotes","adding","useAsideOpen","asideOpen","setAsideOpen","allNoteTag","ContainerOutlined","Object","header","MenuOutlined","PlusOutlined","values","map","tag","SeconaryMenu","keyName","cssTransProps","useActiveKey","setActive","CSSTransition","in","shape","ArrowLeftOutlined","UploadPdfPage","setAllNotes","loading","setLoading","percent","setPercent","file","LoadPDF","note","tagID","createNewNote","message","width","InboxOutlined","multiple","accept","files","handleFile","ProfilePage","userName","getUserName","setName","prefix","UserOutlined","allowClear","saveUserName","block","SettingsPage","clearAll","window","location","reload","clearServiceWorker","serviceWorkerRegistration","SyncOutlined","ClearOutlined","menuItems","label","FilePdfOutlined","PrimaryMenu","items","OthersPage","timeout","onEnter","el","unmountOnExit","components","PDF","PROFILE","SETTINGS","OthersMenu","trigger","content","initKey","zIndex","CaretDownOutlined","NoteNav","Left","Right","NewNoteButton","JoinTeamButton","addNewNote","createEmptyNote","FormOutlined","roomCode","setRoomCode","wrong","setWrong","nav","useNavigate","code","getNoteID","destroyTooltipOnHide","onVisibleChange","plain","error","v","onFill","TeamOutlined","ListTools","sortType","setSortType","editing","setEditing","searchText","setSearchText","selectedNotes","sortMenu","selectedKeys","FileOutlined","FileTextOutlined","SortAscendingOutlined","btnProps","sortButton","overlay","SwapOutlined","rotate","deleteNotes","toArray","deleteNote","res","moveNotes","moveNoteTag","deleteButton","ColorLabel","t","tagButton","overlayClassName","TagsOutlined","transition","SelectOutlined","SearchOutlined","bordered","dayjs","calender","NoteList","setSelectNotes","removeNote","noteList","useMemo","List","n","sortedList","comparator","t0","t1","sortBy","createTime","lastTime","toUpperCase","filterdList","TransitionGroup","component","noteInfo","selected","nextUid","get","last","NoteItem","team","date","calendar","href","noteName","setNoteName","prev","delete","add","NoteTimg","stopPropagation","onBlur","newName","editNoteData","PageWrapper","React","firstPage","setFirstPage","drawState","state","ratio","DrawState","teamStateMap","setTeamStateMap","loadNote","stored","pageRec","pageOrder","firstID","getCachedTeamState","teamNote","TeamState","getOnePageStateMap","Suspense","fallback","thumbnail","image","preview","CloudTwoTone","CheckCircleFilled","MainMenu","getAllNotes","getAllTags","document","menuProps"],"sourceRoot":""}