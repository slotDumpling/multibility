{"version":3,"file":"static/js/829.f40eb031.chunk.js","mappings":"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","sources":["lib/draw/DrawCtrl.tsx","lib/draw/StateSet.ts","component/draw/touch.ts","component/draw/Draw.tsx","component/draw/cursor.ts","component/reader/ReaderUtils.tsx","component/ui/IconFont.tsx","component/reader/tools/PenPanel.tsx","component/reader/tools/DrawTools.tsx","component/reader/lib/scroll.ts","component/reader/lib/array.ts","component/reader/header/Left.tsx","component/reader/header/Middle.tsx","component/widgets/UserAvatar.tsx","component/reader/PageNav.tsx","component/reader/header/Right.tsx","component/reader/header/index.tsx","component/reader/Reader.tsx","lib/network/io.ts","component/reader/Team.tsx","component/widgets/ColorCircle.tsx","lib/color.ts","lib/draw/DrawState.ts","lib/draw/TeamState.ts","lib/draw/canvas.ts","lib/hooks.tsx","lib/network/http.ts","lib/note/archive.ts","lib/note/note.ts","lib/user.ts"],"sourcesContent":["import localforage from \"localforage\";\r\nimport React, {\r\n  FC,\r\n  useContext,\r\n  useDebugValue,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nexport interface DrawCtrl {\r\n  mode: \"draw\" | \"erase\" | \"select\" | \"text\";\r\n  finger: boolean;\r\n  lineWidth: number;\r\n  eraserWidth: number;\r\n  color: string;\r\n  highlight: boolean;\r\n  lasso: boolean;\r\n  pixelEraser: boolean;\r\n  widthList: number[];\r\n}\r\n\r\nexport const defaultWidthList = [10, 20, 30, 50];\r\nexport const defaultDrawCtrl: Readonly<DrawCtrl> = {\r\n  mode: \"draw\",\r\n  finger: true,\r\n  lineWidth: 10,\r\n  eraserWidth: 10,\r\n  color: \"#000000\",\r\n  highlight: false,\r\n  lasso: true,\r\n  pixelEraser: false,\r\n  widthList: defaultWidthList,\r\n};\r\n\r\nasync function getDrawCtrl() {\r\n  let drawCtrl = await localforage.getItem<DrawCtrl>(\"DRAW_CTRL\");\r\n  if (!drawCtrl) {\r\n    drawCtrl = defaultDrawCtrl;\r\n    await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n  }\r\n  return drawCtrl;\r\n}\r\n\r\nasync function saveDrawCtrl(drawCtrl: DrawCtrl) {\r\n  await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n}\r\n\r\nconst DrawCtrlContext = React.createContext({\r\n  drawCtrl: defaultDrawCtrl,\r\n  updateDrawCtrl: (() => {}) as (updated: Partial<DrawCtrl>) => void,\r\n});\r\n\r\nexport function useDrawCtrl() {\r\n  const { drawCtrl } = useContext(DrawCtrlContext);\r\n  useDebugValue(drawCtrl);\r\n  return drawCtrl;\r\n}\r\n\r\nexport function useUpdateDrawCtrl() {\r\n  const { updateDrawCtrl } = useContext(DrawCtrlContext);\r\n  return updateDrawCtrl;\r\n}\r\n\r\nexport const DrawCtrlProvider: FC = ({ children }) => {\r\n  const [drawCtrl, setDrawCtrl] = useState(defaultDrawCtrl);\r\n  useEffect(() => {\r\n    getDrawCtrl().then(setDrawCtrl);\r\n  }, []);\r\n\r\n  const updateDrawCtrl = (updated: Partial<DrawCtrl>) => {\r\n    setDrawCtrl((prev) => {\r\n      const newCtrl = { ...prev, ...updated };\r\n      saveDrawCtrl(newCtrl);\r\n      return newCtrl;\r\n    });\r\n  };\r\n  return (\r\n    <DrawCtrlContext.Provider value={{ drawCtrl, updateDrawCtrl }}>\r\n      {children}\r\n    </DrawCtrlContext.Provider>\r\n  );\r\n};\r\n","import { DrawState, Operation, Stroke } from \"./DrawState\";\r\nimport { List, Map, Record } from \"immutable\";\r\nimport { NotePage } from \"../note/note\";\r\n\r\ninterface StateSetRecordType {\r\n  states: Map<string, DrawState>;\r\n  editStack: List<string>;\r\n  undoStack: List<string>;\r\n}\r\n\r\nconst defaultRecord: Readonly<StateSetRecordType> = {\r\n  states: Map(),\r\n  editStack: List(),\r\n  undoStack: List(),\r\n};\r\n\r\ntype StateSetRecord = Record<StateSetRecordType>;\r\nconst defaultFactory = Record(defaultRecord);\r\n\r\nexport type SetOperation = Operation & { pageID: string };\r\n\r\nexport class StateSet {\r\n  constructor(\r\n    private immutable: StateSetRecord,\r\n    public lastOp?: SetOperation\r\n  ) {}\r\n\r\n  static createFromPages(pageRec: globalThis.Record<string, NotePage>) {\r\n    return new StateSet(\r\n      defaultFactory().set(\r\n        \"states\",\r\n        Map(pageRec).map(({ state, ratio }) =>\r\n          DrawState.loadFromFlat(state, ratio)\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  getImmutable() {\r\n    return this.immutable;\r\n  }\r\n\r\n  getStates() {\r\n    return this.getImmutable().get(\"states\");\r\n  }\r\n\r\n  getOneState(pageID: string) {\r\n    return this.getStates().get(pageID);\r\n  }\r\n\r\n  getEditStack() {\r\n    return this.getImmutable().get(\"editStack\");\r\n  }\r\n\r\n  getUndoStack() {\r\n    return this.getImmutable().get(\"undoStack\");\r\n  }\r\n\r\n  setState(pageID: string, drawState: DrawState) {\r\n    const prevDS = this.getOneState(pageID);\r\n    if (!prevDS || prevDS === drawState) return this;\r\n    let currRecord = this.getImmutable()\r\n      .update(\"states\", (s) => s.set(pageID, drawState))\r\n      .update(\"editStack\", (l) => l.push(pageID))\r\n      .delete(\"undoStack\");\r\n\r\n    const { lastOp } = drawState;\r\n    const lastSetOp = lastOp && { ...lastOp, pageID };\r\n\r\n    return new StateSet(currRecord, lastSetOp);\r\n  }\r\n\r\n  // sync with mutation.\r\n  syncStrokeTime(pageID: string, stroke: Stroke) {\r\n    const prevDS = this.getOneState(pageID);\r\n    prevDS && DrawState.syncStrokeTime(prevDS, stroke);\r\n    return this;\r\n  }\r\n\r\n  addState(pageID: string, notePage: NotePage) {\r\n    const { state, ratio } = notePage;\r\n    const newDS = DrawState.loadFromFlat(state, ratio);\r\n    const currRecord = this.getImmutable().update(\"states\", (s) =>\r\n      s.set(pageID, newDS)\r\n    );\r\n    return new StateSet(currRecord);\r\n  }\r\n\r\n  deleteState(pageID: string) {\r\n    return new StateSet(\r\n      this.getImmutable().update(\"states\", (s) => s.delete(pageID))\r\n    );\r\n  }\r\n\r\n  isUndoable() {\r\n    return this.getEditStack().size > 0;\r\n  }\r\n\r\n  isRedoable() {\r\n    return this.getUndoStack().size > 0;\r\n  }\r\n\r\n  undo() {\r\n    if (!this.isUndoable()) return this;\r\n    const lastUid = this.getEditStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.undo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"editStack\", (s) => s.pop())\r\n        .update(\"undoStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  redo() {\r\n    if (!this.isRedoable()) return this;\r\n    const lastUid = this.getUndoStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.redo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"undoStack\", (s) => s.pop())\r\n        .update(\"editStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  getLastDS(): [string, DrawState] | undefined {\r\n    const pageID = this.lastOp?.pageID;\r\n    const ds = pageID && this.getOneState(pageID);\r\n    if (ds) return [pageID, ds];\r\n  }\r\n}\r\n","import { PointerEvent, TouchEvent, useEffect, useRef } from \"react\";\r\n\r\ntype iOSTouch = Touch & {\r\n  force?: number;\r\n  touchType?: \"stylus\" | \"direct\";\r\n};\r\n\r\nexport function isApplePencil(e: TouchEvent) {\r\n  const touch = e.touches[0] as iOSTouch;\r\n  return touch?.touchType === \"stylus\";\r\n}\r\n\r\nexport function usePreventTouch(\r\n  allowFinger: boolean\r\n): React.HTMLAttributes<HTMLDivElement> {\r\n  const isTouch = useRef(false);\r\n  const checkPoniter = (e: PointerEvent) =>\r\n    e.isPrimary && (isTouch.current = e.pointerType === \"touch\");\r\n\r\n  const isEventValid = (e: TouchEvent) =>\r\n    !isTouch.current ||\r\n    isApplePencil(e) ||\r\n    (allowFinger && e.touches.length === 1);\r\n\r\n  const preventTouch = (e: TouchEvent) =>\r\n    isEventValid(e) || e.stopPropagation();\r\n\r\n  return {\r\n    onPointerDownCapture: checkPoniter,\r\n    onPointerMoveCapture: checkPoniter,\r\n    onTouchStartCapture: preventTouch,\r\n    onTouchMoveCapture: preventTouch,\r\n  };\r\n}\r\n\r\nexport function usePreventGesture() {\r\n  useEffect(() => {\r\n    const handler = (e: Event) => e.preventDefault();\r\n    document.addEventListener(\"gesturestart\", handler);\r\n    document.addEventListener(\"gesturechange\", handler);\r\n    document.addEventListener(\"gestureend\", handler);\r\n    return () => {\r\n      document.removeEventListener(\"gesturestart\", handler);\r\n      document.removeEventListener(\"gesturechange\", handler);\r\n      document.removeEventListener(\"gestureend\", handler);\r\n    };\r\n  }, []);\r\n}\r\n","import React, {\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  Dispatch,\r\n  useEffect,\r\n  useCallback,\r\n  useDebugValue,\r\n  SetStateAction,\r\n  useImperativeHandle,\r\n} from \"react\";\r\nimport {\r\n  DrawState,\r\n  Mutation,\r\n  Splitter,\r\n  Stroke,\r\n} from \"../../lib/draw/DrawState\";\r\nimport { defaultDrawCtrl, DrawCtrl } from \"../../lib/draw/DrawCtrl\";\r\nimport { usePreventTouch, usePreventGesture } from \"./touch\";\r\nimport { releaseCanvas } from \"../../lib/draw/canvas\";\r\nimport { usePinch } from \"@use-gesture/react\";\r\nimport { getCursorStyle } from \"./cursor\";\r\nimport useSize from \"@react-hook/size\";\r\nimport paper from \"paper\";\r\nimport \"./draw.sass\";\r\n\r\nconst { Path, Size, Point, Group, Color, Raster, Layer } = paper;\r\n\r\nexport type ActiveToolKey = \"\" | \"select\" | \"text\";\r\nexport interface DrawRefType {\r\n  deleteSelected: () => void;\r\n  duplicateSelected: () => void;\r\n  mutateStyle: (updated: Partial<DrawCtrl>) => void;\r\n  rasterize: () => string;\r\n  submitText: (text: string, color?: string, justification?: string) => void;\r\n  cancelText: () => void;\r\n  pointText?: paper.PointText;\r\n}\r\ninterface DrawPropType {\r\n  drawState: DrawState;\r\n  otherStates?: DrawState[];\r\n  onChange?: Dispatch<SetStateAction<DrawState>>;\r\n  setActiveTool?: Dispatch<SetStateAction<ActiveToolKey>>;\r\n  drawCtrl?: DrawCtrl;\r\n  readonly?: boolean;\r\n  imgSrc?: string;\r\n}\r\n\r\nconst Draw = React.forwardRef<DrawRefType, DrawPropType>(\r\n  (\r\n    {\r\n      drawState,\r\n      otherStates,\r\n      onChange = () => {},\r\n      drawCtrl = defaultDrawCtrl,\r\n      readonly = false,\r\n      imgSrc,\r\n      setActiveTool = () => {},\r\n    },\r\n    ref\r\n  ) => {\r\n    const { width, height } = drawState;\r\n    const { mode, finger, lasso, eraserWidth } = drawCtrl;\r\n\r\n    const canvasEl = useRef<HTMLCanvasElement>(null);\r\n    const scope = useRef(new paper.PaperScope());\r\n    const [group, setGroup] = useState<paper.Item[]>([]);\r\n    const [path, setPath] = usePaperItem<paper.Path>();\r\n    const [rect, setRect] = usePaperItem<paper.Path.Rectangle>();\r\n    const [rotateHandle, setRotateHandle] = usePaperItem<paper.Path>();\r\n\r\n    useEffect(() => {\r\n      const cvs = canvasEl.current;\r\n      const scp = scope.current;\r\n      if (!cvs) return;\r\n\r\n      scp.setup(cvs);\r\n      scp.settings.handleSize = 10;\r\n      scp.settings.hitTolerance = 20;\r\n      [0, 1, 2].forEach(() => scp.project.addLayer(new Layer()));\r\n      scp.project.layers[2]?.activate();\r\n      new scp.Tool();\r\n\r\n      return () => {\r\n        scp.remove();\r\n        releaseCanvas(cvs);\r\n      };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      const bgRect = paintBackground(scope.current, width, height);\r\n      return () => void bgRect.remove();\r\n    }, [width, height]);\r\n\r\n    const [canvasWidth] = useSize(canvasEl);\r\n    const ratio = canvasWidth / width;\r\n    useEffect(() => {\r\n      if (!ratio) return;\r\n      const scp = scope.current;\r\n      scp.view.viewSize = new Size(width, height).multiply(ratio);\r\n      scp.view.scale(ratio, new Point(0, 0));\r\n      scp.view.update();\r\n\r\n      return () => {\r\n        scp.view?.scale(1 / ratio, new Point(0, 0));\r\n      };\r\n    }, [width, height, ratio]);\r\n\r\n    useEffect(() => {\r\n      if (!imgSrc) return;\r\n      scope.current.activate();\r\n      const raster = new Raster(imgSrc);\r\n      raster.project.layers[0]?.addChild(raster);\r\n      raster.sendToBack();\r\n      raster.onLoad = () => {\r\n        raster.view.update();\r\n        raster.fitBounds(new paper.Rectangle(0, 0, width, height));\r\n        raster.bringToFront();\r\n      };\r\n\r\n      return () => void raster?.remove();\r\n    }, [imgSrc, width, height]);\r\n\r\n    const mergedStrokes = useMemo(\r\n      () =>\r\n        otherStates\r\n          ? DrawState.mergeStates(drawState, ...otherStates)\r\n          : drawState.getStrokeList(),\r\n      [drawState, otherStates]\r\n    );\r\n    useEffect(() => {\r\n      const tempGroup: paper.Item[] = [];\r\n      const layer = scope.current.project.layers[1];\r\n      if (!layer) return;\r\n\r\n      scope.current.activate();\r\n      mergedStrokes.forEach((stroke) => {\r\n        const self = drawState.hasStroke(stroke.uid);\r\n        const item = paintStroke(stroke, layer, !self);\r\n        if (!item) return;\r\n        if (self) tempGroup.push(item);\r\n      });\r\n      setGroup(tempGroup);\r\n\r\n      return () => void layer.removeChildren();\r\n    }, [mergedStrokes, drawState]);\r\n\r\n    const hitRef = useRef<paper.HitResult>();\r\n    const [selected, setSelected] = useState(false);\r\n    const paperMode = mode === \"select\" && selected ? \"selected\" : mode;\r\n    const [chosenIDs, setChosenIDs] = useState<string[]>([]);\r\n    const chosenItems = useMemo(() => {\r\n      const IDSet = new Set(chosenIDs);\r\n      return group.filter((item) => IDSet.has(item.name));\r\n    }, [group, chosenIDs]);\r\n\r\n    const resetSelect = useCallback(() => {\r\n      setSelected(false);\r\n      setPath(undefined);\r\n      setRect(undefined);\r\n      setRotateHandle(undefined);\r\n    }, [setPath, setRect, setRotateHandle]);\r\n\r\n    useEffect(() => {\r\n      if (mode === \"select\") return resetSelect;\r\n    }, [mode, resetSelect]);\r\n    useEffect(() => resetSelect, [lasso, resetSelect]);\r\n\r\n    useEffect(() => {\r\n      if (!selected) return;\r\n      return () => {\r\n        setChosenIDs([]);\r\n        setActiveTool(\"\");\r\n      };\r\n    }, [selected, setActiveTool]);\r\n\r\n    const downPath = () => setPath(startStroke(drawCtrl));\r\n    const downRect = (e: paper.MouseEvent) => setRect(startRect(e.point));\r\n\r\n    const handleDown = {\r\n      draw: downPath,\r\n      erase: downPath,\r\n      select: lasso ? downPath : downRect,\r\n      selected(e: paper.MouseEvent) {\r\n        if (lasso) {\r\n          // if the point is outside of selection, reset selection\r\n          if (path?.contains(e.point)) return;\r\n          downPath();\r\n          setSelected(false);\r\n        } else {\r\n          // check if the point hit the segment point.\r\n          let hitRes =\r\n            rect?.hitTest(e.point, { segments: true }) ??\r\n            rotateHandle?.hitTest(e.point, { segments: true, selected: true });\r\n          hitRef.current = hitRes;\r\n          if (hitRes) return;\r\n\r\n          // if the point is outside of selection, reset selection\r\n          if (rect?.contains(e.point)) return;\r\n          downRect(e);\r\n          setRotateHandle(undefined);\r\n          setSelected(false);\r\n        }\r\n      },\r\n      text(e: paper.MouseEvent) {\r\n        const layer = scope.current.project.layers[1];\r\n        if (!layer) return;\r\n        const t = getClickedText(layer, e.point) ?? startText(e.point);\r\n        setPointText(t);\r\n      },\r\n    }[paperMode];\r\n\r\n    const dragPath = (e: paper.MouseEvent) => {\r\n      path?.add(e.point);\r\n      path?.smooth();\r\n    };\r\n    const resizeRect = (e: paper.MouseEvent) => {\r\n      if (!rect) return;\r\n      const { x, y } = e.point;\r\n      const [, s1, s2, s3] = rect.segments;\r\n      if (!s1 || !s2 || !s3) return;\r\n      s1.point.x = x;\r\n      s2.point = e.point;\r\n      s3.point.y = y;\r\n      rect.selected = true;\r\n    };\r\n\r\n    const handleDrag = {\r\n      draw: dragPath,\r\n      erase: dragPath,\r\n      select: lasso ? dragPath : resizeRect,\r\n      selected(e: paper.MouseEvent) {\r\n        const hitRes = hitRef.current;\r\n        if (hitRes?.segment && rect) {\r\n          const segment = hitRes.segment;\r\n          const rotating = segment.selected;\r\n          if (rotating) {\r\n            // rotate select items\r\n            const { center } = rect.bounds;\r\n            const axis = segment.point.subtract(center);\r\n            const line = e.point.subtract(center);\r\n            const angle = line.angle - axis.angle;\r\n            rect.rotate(angle, center);\r\n            rotateHandle?.rotate(angle, center);\r\n            chosenItems.forEach((item) => item?.rotate(angle, center));\r\n          } else {\r\n            // resize selected items\r\n            const moveP = segment.point;\r\n            const baseP = segment.next.next.point;\r\n            const diagonal = moveP.subtract(baseP);\r\n            const projection = e.point.subtract(baseP).project(diagonal);\r\n            const scale = projection.x / diagonal.x;\r\n            if (scale < 0) return;\r\n\r\n            rect.scale(scale, baseP);\r\n            rotateHandle?.scale(scale, baseP);\r\n            chosenItems.forEach((item) => {\r\n              item.scale(scale, baseP);\r\n              item.strokeWidth *= scale;\r\n            });\r\n          }\r\n        } else {\r\n          // move selected items\r\n          chosenItems.forEach((item) => item.translate(e.delta));\r\n          path?.translate(e.delta);\r\n          rect?.translate(e.delta);\r\n          rotateHandle?.translate(e.delta);\r\n        }\r\n      },\r\n      text(e: paper.MouseEvent) {\r\n        if (!pointText || pointText.name) return;\r\n        const { topCenter, bottomRight } = pointText.bounds;\r\n        const diagonal = bottomRight.subtract(topCenter);\r\n        const projection = e.point.subtract(topCenter).project(diagonal);\r\n        const scale = projection.x / diagonal.x;\r\n        if (scale < 0) return;\r\n        pointText.scale(scale, topCenter);\r\n      },\r\n    }[paperMode];\r\n\r\n    useEffect(() => {\r\n      scope.current.tool.maxDistance = eraserWidth;\r\n    }, [eraserWidth]);\r\n    const erased = useRef(new Set<string>());\r\n    const replaced = useRef(new Map<string, paper.Item>());\r\n\r\n    const handelToolDrag = (e: paper.ToolEvent) => {\r\n      if (paperMode !== \"erase\") return;\r\n      const layer = scope.current.project.layers[1];\r\n      const hitRes = layer?.hitTestAll(e.point, {\r\n        class: paper.Path,\r\n        stroke: true,\r\n        tolerance: eraserWidth / 2,\r\n      });\r\n\r\n      hitRes?.forEach(({ item }) => {\r\n        if (!(item instanceof paper.Path)) return;\r\n        let topItem: paper.PathItem = item;\r\n        while (topItem.parent !== layer) {\r\n          if (!(topItem.parent instanceof paper.PathItem)) break;\r\n          topItem = topItem.parent;\r\n        }\r\n        const { name } = topItem;\r\n\r\n        if (drawCtrl.pixelEraser) {\r\n          const radius = (eraserWidth + item.strokeWidth) / 2;\r\n          const circle = new Path.Circle(e.point, radius);\r\n          circle.remove();\r\n\r\n          const sub = item.subtract(circle, { trace: false });\r\n          item.replaceWith(sub);\r\n          if (topItem === item) topItem = sub;\r\n          replaced.current.set(name, topItem);\r\n        } else {\r\n          topItem.opacity = 0.5;\r\n          topItem.guide = true;\r\n          erased.current.add(name);\r\n        }\r\n      });\r\n    };\r\n\r\n    const handleUp = {\r\n      draw() {\r\n        if (!path || path.isEmpty()) return;\r\n        path.simplify();\r\n        const pathData = path.exportJSON();\r\n        setPath(undefined);\r\n        onChange((prev) => DrawState.addStroke(prev, pathData));\r\n      },\r\n      erase() {\r\n        setPath(undefined);\r\n        if (drawCtrl.pixelEraser) {\r\n          const items = Array.from(replaced.current);\r\n          replaced.current.clear();\r\n          const splitters: Splitter[] = items.map(([uid, item]) => {\r\n            const paths = flattenCP(item);\r\n            return [uid, paths.map((i) => i.exportJSON())];\r\n          });\r\n          if (!splitters.length) return;\r\n          onChange((prev) => DrawState.splitStrokes(prev, splitters));\r\n        } else {\r\n          const erasedList = Array.from(erased.current);\r\n          erased.current.clear();\r\n          if (!erasedList.length) return;\r\n          onChange((prev) => DrawState.eraseStrokes(prev, erasedList));\r\n        }\r\n      },\r\n      select() {\r\n        let selection: string[];\r\n        if (lasso) {\r\n          if (!path || Math.abs(path.area) < 1_000) return setPath(undefined);\r\n          path.closePath();\r\n          path.simplify();\r\n          moveDash(path);\r\n          selection = checkLasso(group, path);\r\n        } else {\r\n          if (!rect || Math.abs(rect.area) < 1_000) return setRect(undefined);\r\n          selection = checkLasso(group, rect);\r\n          const link = new Path();\r\n          const { topCenter } = rect.bounds;\r\n          link.add(topCenter, topCenter.subtract(new Point(0, 100)));\r\n          link.lastSegment.selected = true;\r\n          setRotateHandle(link);\r\n        }\r\n        setSelected(true);\r\n        setChosenIDs(selection);\r\n        setActiveTool(\"select\");\r\n      },\r\n      selected() {\r\n        updateMutation();\r\n      },\r\n      text() {\r\n        setActiveTool(\"text\");\r\n      },\r\n    }[paperMode];\r\n\r\n    const [cursor, setCursor] = useState(\"auto\");\r\n    useEffect(() => {\r\n      if (paperMode === \"text\" || paperMode === \"select\") {\r\n        setCursor(\"crosshair\");\r\n      } else if (paperMode === \"selected\") {\r\n        setCursor(lasso ? \"crosshair\" : \"nwse-resize\");\r\n      } else if (paperMode === \"draw\" || paperMode === \"erase\") {\r\n        setCursor(getCursorStyle(drawCtrl, ratio));\r\n      }\r\n    }, [paperMode, lasso, drawCtrl, ratio]);\r\n\r\n    const handleMove = {\r\n      selected(e: paper.MouseEvent) {\r\n        const hitRes =\r\n          rect?.hitTest(e.point, { segments: true }) ??\r\n          rotateHandle?.hitTest(e.point, { segments: true, selected: true });\r\n        if (hitRes?.segment) {\r\n          if (hitRes.segment.selected) return setCursor(\"move\");\r\n          const moveP = hitRes.segment.point;\r\n          const baseP = hitRes.segment.next.next.point;\r\n          const diagonal = moveP.subtract(baseP);\r\n          const { x, y } = diagonal;\r\n          setCursor(x * y < 0 ? \"nesw-resize\" : \"nwse-resize\");\r\n        } else if (rect?.contains(e.point) || path?.contains(e.point)) {\r\n          setCursor(\"move\");\r\n        } else {\r\n          setCursor(\"crosshair\");\r\n        }\r\n      },\r\n      text(e: paper.MouseEvent) {\r\n        const layer = scope.current.project.layers[1];\r\n        if (!layer) return;\r\n        if (getClickedText(layer, e.point)) setCursor(\"text\");\r\n        else setCursor(\"crosshair\");\r\n      },\r\n      select: null,\r\n      draw: null,\r\n      erase: null,\r\n    }[paperMode];\r\n\r\n    const handleViewEvent = () => {\r\n      if (readonly) return;\r\n\r\n      type Handler<E> = ((e: E) => boolean | void) | null;\r\n      const activate = <E,>(handler: Handler<E>): Handler<E> => {\r\n        return (e) => {\r\n          scope.current.activate();\r\n          if (handler) return handler(e);\r\n        };\r\n      };\r\n      const { view, tool } = scope.current;\r\n      view.onMouseDown = activate(handleDown);\r\n      view.onMouseDrag = activate(handleDrag);\r\n      view.onMouseUp = activate(handleUp);\r\n      view.onMouseMove = activate(handleMove);\r\n      tool.onMouseDrag = activate(handelToolDrag);\r\n    };\r\n    useEffect(handleViewEvent);\r\n\r\n    const updateMutation = () => {\r\n      if (!chosenItems?.length) return;\r\n      const mutations: Mutation[] = chosenItems.map((p) => [\r\n        p.name,\r\n        p.exportJSON(),\r\n      ]);\r\n      onChange((prev) => DrawState.mutateStrokes(prev, mutations));\r\n    };\r\n\r\n    const deleteSelected = () => {\r\n      setChosenIDs([]);\r\n      resetSelect();\r\n      if (!chosenIDs.length) return;\r\n      onChange((prev) => DrawState.eraseStrokes(prev, chosenIDs));\r\n    };\r\n\r\n    const mutateStyle = (updated: Partial<DrawCtrl>) => {\r\n      scope.current.activate();\r\n      updateGroupStyle(chosenItems, updated);\r\n      updateMutation();\r\n    };\r\n\r\n    const duplicateSelected = () => {\r\n      scope.current.activate();\r\n      const size = (rect || path)?.bounds.size;\r\n      if (!size || !chosenItems.length) return;\r\n      const { width, height } = size;\r\n      const transP = new Point(width, height).divide(10);\r\n      const copies = chosenItems.map((item) => item.clone());\r\n      copies.forEach((item) => item.translate(transP));\r\n      rect?.translate(transP);\r\n      path?.translate(transP);\r\n\r\n      const mutations: Mutation[] = copies.map((item) => [\r\n        DrawState.getUid(),\r\n        item.exportJSON(),\r\n      ]);\r\n      onChange((prev) => DrawState.mutateStrokes(prev, mutations));\r\n      setChosenIDs(mutations.map(([uid]) => uid));\r\n    };\r\n\r\n    const rasterize = () => {\r\n      const g = new Group(chosenItems);\r\n      const layer = scope.current.project.layers[1];\r\n      if (!layer) return \"\";\r\n      g.addTo(layer);\r\n      return g.rasterize({ insert: false }).toDataURL();\r\n    };\r\n\r\n    const [pointText, setPointText] = usePaperItem<paper.PointText>();\r\n    const cancelText = useCallback(() => {\r\n      setPointText(undefined);\r\n      setActiveTool(\"\");\r\n    }, [setPointText, setActiveTool]);\r\n\r\n    useEffect(() => {\r\n      if (mode === \"text\") return cancelText;\r\n    }, [mode, cancelText]);\r\n\r\n    const submitText = (\r\n      text: string,\r\n      color = \"#000\",\r\n      justification = \"center\"\r\n    ) => {\r\n      if (!pointText) return;\r\n      pointText.content = text;\r\n      pointText.fillColor = new Color(color);\r\n      pointText.justification = justification;\r\n      const pathData = pointText.exportJSON();\r\n      const { name } = pointText;\r\n      cancelText();\r\n      if (!name) return onChange((prev) => DrawState.addStroke(prev, pathData));\r\n      onChange((prev) => DrawState.mutateStrokes(prev, [[name, pathData]]));\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      deleteSelected,\r\n      duplicateSelected,\r\n      cancelText,\r\n      submitText,\r\n      mutateStyle,\r\n      rasterize,\r\n      pointText,\r\n    }));\r\n\r\n    usePreventGesture();\r\n    usePinch(\r\n      ({ memo, offset: [scale], first, last, origin }) => {\r\n        scope.current.activate();\r\n        const { view } = scope.current;\r\n        const originRawP = new Point(origin);\r\n\r\n        let lastScale: number;\r\n        let lastOrigin, elPos: paper.Point;\r\n        if (first || !memo) {\r\n          const { x, y } = canvasEl.current!.getBoundingClientRect();\r\n          lastScale = 1;\r\n          elPos = new Point(x, y);\r\n          lastOrigin = originRawP.subtract(elPos);\r\n        } else {\r\n          [lastScale, lastOrigin, elPos] = memo;\r\n        }\r\n\r\n        const originViewP = originRawP.subtract(elPos);\r\n        const originPorjP = view.viewToProject(originViewP);\r\n\r\n        if (Math.abs(1 - scale) < 0.05) scale = 1;\r\n        let dScale = first ? 1 : scale / lastScale;\r\n        let aniCount = last ? 10 : 1;\r\n        dScale = Math.pow(dScale, 1 / aniCount);\r\n        const scaleView = () => {\r\n          view.scale(dScale, originPorjP);\r\n          if (--aniCount > 0) requestAnimationFrame(scaleView);\r\n          else if (last) putCenterBack(view, new Size(width, height));\r\n        };\r\n        scaleView();\r\n\r\n        const deltaP = originViewP.subtract(lastOrigin);\r\n        const transP = deltaP.divide(view.zoom);\r\n        view.translate(transP);\r\n\r\n        if (!last) return [scale, originViewP, elPos];\r\n      },\r\n      {\r\n        scaleBounds: { max: 10, min: 0.3 },\r\n        rubberband: 0.5,\r\n        target: canvasEl,\r\n      }\r\n    );\r\n\r\n    const touchHandler = usePreventTouch(finger);\r\n    return (\r\n      <div\r\n        className=\"draw-wrapper\"\r\n        style={{ cursor }}\r\n        data-readonly={readonly}\r\n        {...touchHandler}\r\n      >\r\n        <canvas ref={canvasEl} className=\"draw-canvas\" />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nDraw.displayName = \"Draw\";\r\nexport default React.memo(Draw);\r\n\r\nfunction usePaperItem<T extends paper.Item>() {\r\n  const tuple = useState<T | undefined>();\r\n  const [item] = tuple;\r\n  useDebugValue(item);\r\n  useEffect(\r\n    () => () => {\r\n      if (!item?.name) item?.remove();\r\n    },\r\n    [item]\r\n  );\r\n  return tuple;\r\n}\r\n\r\nconst paintStroke = (stroke: Stroke, layer: paper.Layer, readonly = false) => {\r\n  let { pathData, uid } = stroke;\r\n  try {\r\n    const item = layer.importJSON(pathData);\r\n    if (!item) return;\r\n    item.name = uid;\r\n    item.guide = readonly;\r\n    return item;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst paintBackground = (\r\n  scope: paper.PaperScope,\r\n  width: number,\r\n  height: number\r\n) => {\r\n  scope.activate();\r\n  const bgRect = new Path.Rectangle(new Point(0, 0), new Point(width, height));\r\n  bgRect.fillColor = new Color(\"#fff\");\r\n  scope.project.layers[0]?.addChild(bgRect);\r\n  return bgRect;\r\n};\r\n\r\nconst startRect = (point: paper.Point) => {\r\n  const rect = new Path.Rectangle(point, new Size(0, 0));\r\n  rect.onFrame = () => {}; // the handle size bug\r\n  return rect;\r\n};\r\n\r\nconst startStroke = (drawCtrl: DrawCtrl) => {\r\n  let { mode, lineWidth, eraserWidth, color, highlight } = drawCtrl;\r\n  const path = new Path();\r\n  if (mode === \"erase\") {\r\n    color = \"#ccc\";\r\n    lineWidth = eraserWidth;\r\n  }\r\n  if (mode === \"select\") {\r\n    color = \"#1890ff\";\r\n    lineWidth = 5;\r\n  }\r\n  const strokeColor = new Color(color);\r\n  if (highlight || mode === \"erase\") {\r\n    strokeColor.alpha = 0.5;\r\n    path.blendMode = \"multiply\";\r\n  }\r\n  path.strokeColor = strokeColor;\r\n  path.strokeWidth = lineWidth;\r\n  path.strokeJoin = \"round\";\r\n  path.strokeCap = \"round\";\r\n  path.guide = true;\r\n  return path;\r\n};\r\n\r\nconst moveDash = (item: paper.Item) => {\r\n  item.dashOffset = 0;\r\n  item.dashArray = [30, 20];\r\n  item.onFrame = () => (item.dashOffset += 3);\r\n};\r\n\r\nconst getCenterTranslate = (\r\n  view: paper.View,\r\n  projSize: paper.Size\r\n): [number, number] => {\r\n  const { x, y } = view.center;\r\n  const { width: viewW, height: viewH } = view.size;\r\n  const { width: projW, height: projH } = projSize;\r\n\r\n  const [minX, minY] = [Math.min(viewW, projW) / 2, Math.min(viewH, projH) / 2];\r\n  const [maxX, maxY] = [projW - minX, projH - minY];\r\n\r\n  const deltaX = x < minX ? minX - x : x > maxX ? maxX - x : 0;\r\n  const deltaY = y < minY ? minY - y : y > maxY ? maxY - y : 0;\r\n\r\n  return [deltaX, deltaY];\r\n};\r\n\r\nconst putCenterBack = (view: paper.View, projSize: paper.Size) => {\r\n  const [deltaX, deltaY] = getCenterTranslate(view, projSize);\r\n  let aniCount = 10;\r\n  const dP = new Point(deltaX, deltaY).divide(-aniCount);\r\n  const move = () => {\r\n    view.translate(dP);\r\n    if (--aniCount > 0) requestAnimationFrame(move);\r\n  };\r\n  move();\r\n};\r\n\r\nconst checkLasso = (items: paper.Item[], selection: paper.Path) => {\r\n  const isInside = (p: paper.Path) => {\r\n    const res = p.subtract(selection, { insert: false, trace: false });\r\n    res.remove();\r\n    return !res.compare(p);\r\n  };\r\n  return items\r\n    .filter((item) => {\r\n      if (!item.name) return false;\r\n      if (!item.bounds.intersects(selection.bounds)) return false;\r\n      if (item instanceof paper.Path) {\r\n        return isInside(item);\r\n      } else {\r\n        const checkedP = new Path.Rectangle(item.bounds);\r\n        checkedP.remove();\r\n        return isInside(checkedP) || selection.isInside(item.bounds);\r\n      }\r\n    })\r\n    .map(({ name }) => name);\r\n};\r\n\r\nconst updateGroupStyle = (items: paper.Item[], updated: Partial<DrawCtrl>) => {\r\n  const { lineWidth, color, highlight } = updated;\r\n  items.forEach((item) => {\r\n    if (item instanceof paper.PointText && color) {\r\n      const newColor = new Color(color);\r\n      item.fillColor = newColor;\r\n    }\r\n\r\n    if (!(item instanceof paper.Path)) return;\r\n\r\n    if (color) {\r\n      const newColor = new Color(color);\r\n      if (item.blendMode === \"multiply\") newColor.alpha = 0.5;\r\n      item.strokeColor = newColor;\r\n    }\r\n\r\n    if (lineWidth) item.strokeWidth = lineWidth;\r\n\r\n    if (!item.strokeColor || highlight === undefined) return;\r\n    item.strokeColor.alpha = highlight ? 0.5 : 1;\r\n    item.blendMode = highlight ? \"multiply\" : \"normal\";\r\n  });\r\n};\r\n\r\nconst getClickedText = (layer: paper.Layer, point: paper.Point) => {\r\n  const hitRes = layer.hitTest(point, {\r\n    class: paper.PointText,\r\n    fill: true,\r\n  });\r\n  if (hitRes?.item instanceof paper.PointText) return hitRes?.item;\r\n};\r\n\r\nconst startText = (point: paper.Point) => {\r\n  return new paper.PointText({\r\n    point: point.add(new Point(0, 50)),\r\n    content: \"Insert text...\",\r\n    fontSize: 50,\r\n    justification: \"center\",\r\n    fillColor: \"#1890ff55\",\r\n  });\r\n};\r\n\r\nconst flattenCP = (cp: paper.Item): paper.Path[] => {\r\n  if (cp instanceof paper.Path) {\r\n    return cp.isEmpty() ? [] : [cp];\r\n  }\r\n  if (cp instanceof paper.CompoundPath) {\r\n    return cp.children.map(flattenCP).flat();\r\n  }\r\n  return [];\r\n};\r\n","import { DrawCtrl } from \"../../lib/draw/DrawCtrl\";\r\n\r\nexport const getCursorStyle = (drawCtrl: DrawCtrl, ratio: number) => {\r\n  const { lineWidth, eraserWidth, mode } = drawCtrl;\r\n  const size = ratio * (mode === \"erase\" ? eraserWidth : lineWidth);\r\n  if (size < 5) return \"crosshair\";\r\n  const half = size / 2;\r\n  return `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"%23FFF7\" width=\"${size}\" height=\"${size}\" viewBox=\"0 0 10 10\"><circle cx=\"5\" cy=\"5\" r=\"5\"/></svg>') ${half} ${half}, auto`;\r\n};\r\n","import { Button, message } from \"antd\";\r\nimport { useContext } from \"react\";\r\nimport { ReaderMethodCtx } from \"./Reader\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nexport const AddPageButton = () => {\r\n  const { addFinalPage } = useContext(ReaderMethodCtx);\r\n  return (\r\n    <div className=\"add-btn-wrapper\">\r\n      <Button\r\n        type=\"dashed\"\r\n        icon={<PlusOutlined />}\r\n        block\r\n        onClick={addFinalPage}\r\n      >\r\n        New page\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const showPageDelMsg = (onUndo: () => void) => {\r\n  message.warning({\r\n    content: (\r\n      <>\r\n        One page was deleted.\r\n        <Button\r\n          size=\"small\"\r\n          type=\"link\"\r\n          onClick={() => {\r\n            message.destroy(\"DELETE\");\r\n            onUndo();\r\n          }}\r\n        >\r\n          Undo\r\n        </Button>\r\n      </>\r\n    ),\r\n    key: \"DELETE\",\r\n    duration: 10,\r\n  });\r\n};\r\n","import { createFromIconfontCN } from \"@ant-design/icons\";\r\n\r\nexport default createFromIconfontCN({\r\n  scriptUrl: \"//at.alicdn.com/t/font_3181679_yo844n7qgns.js\",\r\n});\r\n","import { CSSProperties, FC, useEffect, useMemo, useState } from \"react\";\r\nimport { defaultWidthList, DrawCtrl } from \"../../../lib/draw/DrawCtrl\";\r\nimport { ColorCirle } from \"../../widgets/ColorCircle\";\r\nimport { WIDTH } from \"../../../lib/draw/DrawState\";\r\nimport { Popover, Segmented, Slider } from \"antd\";\r\nimport { allColors } from \"../../../lib/color\";\r\nimport { Setter } from \"../../../lib/hooks\";\r\nimport IconFont from \"../../ui/IconFont\";\r\nimport { List } from \"immutable\";\r\nimport \"./penPanel.sass\";\r\nimport { useForceLight } from \"../../../lib/Dark\";\r\n\r\nexport const PenPanel: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n  drawCtrl: Partial<DrawCtrl>;\r\n}> = ({ updateDrawCtrl, drawCtrl }) => {\r\n  const { highlight, color } = drawCtrl;\r\n  const [panelBlur, setPanelBlur] = useState(false);\r\n\r\n  return (\r\n    <div className=\"pen-panel\" data-blur={panelBlur} data-hi={highlight}>\r\n      <div className=\"pen-status\">\r\n        <WidthSelect\r\n          updateDrawCtrl={updateDrawCtrl}\r\n          drawCtrl={drawCtrl}\r\n          setPanelBlur={setPanelBlur}\r\n        />\r\n        <HighlightSwitch checked={highlight} updateDrawCtrl={updateDrawCtrl} />\r\n      </div>\r\n      <ColorSelect\r\n        color={color || \"\"}\r\n        setColor={(c) => updateDrawCtrl({ color: c })}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const WidthSelect: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n  drawCtrl: Partial<DrawCtrl>;\r\n  setPanelBlur?: Setter<boolean>;\r\n  field?: \"lineWidth\" | \"eraserWidth\";\r\n}> = ({\r\n  updateDrawCtrl,\r\n  drawCtrl,\r\n  setPanelBlur = () => {},\r\n  field = \"lineWidth\",\r\n}) => {\r\n  const currWidth = drawCtrl[field];\r\n  const widthList = drawCtrl.widthList ?? defaultWidthList;\r\n  const color = field === \"lineWidth\" ? drawCtrl.color ?? \"#aaa\" : \"#aaa\";\r\n\r\n  const chosen = useMemo(\r\n    () => widthList.indexOf(currWidth ?? -1),\r\n    [currWidth, widthList]\r\n  );\r\n\r\n  const [popShow, setPopShow] = useState(List([false, false, false, false]));\r\n  useEffect(() => {\r\n    if (popShow.includes(true)) setPanelBlur(true);\r\n    else setPanelBlur(false);\r\n  }, [popShow, setPanelBlur]);\r\n\r\n  const realSizeStyle = (width: number) =>\r\n    ({\r\n      \"--real-size\": `calc(${100 / WIDTH}vw * ${width})`,\r\n    } as CSSProperties);\r\n\r\n  const options = [\r\n    { value: -1, label: null },\r\n    ...widthList.map((width, index) => ({\r\n      value: index,\r\n      label: (\r\n        <Popover\r\n          visible={popShow.get(index)}\r\n          onVisibleChange={(v) => setPopShow((prev) => prev.set(index, v))}\r\n          trigger={chosen === index ? [\"click\"] : []}\r\n          placement=\"bottom\"\r\n          destroyTooltipOnHide\r\n          content={\r\n            <Slider\r\n              min={5}\r\n              max={100}\r\n              className=\"ctrl-slider\"\r\n              defaultValue={width}\r\n              onAfterChange={(w) => {\r\n                if (widthList.includes(w)) {\r\n                  setPopShow((prev) => prev.set(index, false));\r\n                  return updateDrawCtrl({ [field]: w });\r\n                }\r\n                const newWL = widthList.slice();\r\n                newWL[index] = w;\r\n                updateDrawCtrl({ widthList: newWL, [field]: w });\r\n              }}\r\n            />\r\n          }\r\n        >\r\n          <div className=\"circle-wrapper\" style={realSizeStyle(width)}>\r\n            <ColorCirle className={\"width-circle \" + field} color={color} />\r\n          </div>\r\n        </Popover>\r\n      ),\r\n    })),\r\n  ];\r\n\r\n  return (\r\n    <Segmented\r\n      className=\"width-seg\"\r\n      value={chosen}\r\n      options={options}\r\n      onChange={(i) => updateDrawCtrl({ [field]: widthList[+i] ?? 10 })}\r\n    />\r\n  );\r\n};\r\n\r\nconst HighlightSwitch: FC<{\r\n  checked?: boolean;\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ checked = false, updateDrawCtrl }) => {\r\n  return (\r\n    <label className=\"hi-wrapper\">\r\n      <input\r\n        type=\"checkbox\"\r\n        name=\"highlight\"\r\n        checked={checked}\r\n        onChange={(e) => updateDrawCtrl({ highlight: e.target.checked })}\r\n      />\r\n      <div className=\"hi-switch\">\r\n        <IconFont type=\"icon-Highlight\" />\r\n      </div>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport const ColorSelect: FC<{\r\n  color: string;\r\n  setColor: (color: string) => void;\r\n}> = ({ setColor, color }) => {\r\n  const [forceLight] = useForceLight();\r\n  return (\r\n    <div className=\"color-select\" data-force-light={forceLight}>\r\n      {allColors.map((c) => (\r\n        <label key={c}>\r\n          <input\r\n            checked={color === c}\r\n            type=\"radio\"\r\n            name=\"color\"\r\n            onChange={(e) => e.target.checked && setColor(c)}\r\n          />\r\n          <div\r\n            data-color={c}\r\n            className=\"circle\"\r\n            style={{ backgroundColor: c, borderColor: c }}\r\n          />\r\n        </label>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import { FC, RefObject, useEffect, useState } from \"react\";\r\nimport {\r\n  CopyOutlined,\r\n  DeleteOutlined,\r\n  PictureOutlined,\r\n  BgColorsOutlined,\r\n  AlignLeftOutlined,\r\n  FontColorsOutlined,\r\n  AlignRightOutlined,\r\n  AlignCenterOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Button, ButtonProps, Modal, Popover, Radio } from \"antd\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { DrawCtrl } from \"../../../lib/draw/DrawCtrl\";\r\nimport { ColorSelect, PenPanel } from \"./PenPanel\";\r\nimport { useForceLight } from \"../../../lib/Dark\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { allColors } from \"../../../lib/color\";\r\nimport { DrawRefType } from \"../../draw/Draw\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { saveAs } from \"file-saver\";\r\nimport \"./drawTools.sass\";\r\n\r\nexport const SelectTool: FC<{\r\n  drawRef: RefObject<DrawRefType>;\r\n  visible: boolean;\r\n}> = ({ drawRef, visible }) => (\r\n  <CSSTransition timeout={300} in={visible} unmountOnExit>\r\n    <SelectToolContent drawRef={drawRef} />\r\n  </CSSTransition>\r\n);\r\n\r\nexport const SelectToolContent: FC<{\r\n  drawRef: RefObject<DrawRefType>;\r\n}> = ({ drawRef }) => {\r\n  const btnProps: ButtonProps = {\r\n    type: \"text\",\r\n    shape: \"round\",\r\n    size: \"small\",\r\n  };\r\n\r\n  const [currDrawCtrl, setCurrDrawCtrl] = useState<Partial<DrawCtrl>>({});\r\n\r\n  const getRaster = () => {\r\n    if (!drawRef.current) return;\r\n    const imageData = drawRef.current.rasterize();\r\n    Modal.confirm({\r\n      title: \"Screenshot\",\r\n      content: <img className=\"raster\" src={imageData} alt=\"raster\" />,\r\n      className: \"raster-modal\",\r\n      icon: <PictureOutlined />,\r\n      okText: \"Save\",\r\n      onOk: () => saveAs(imageData, \"screenshot\"),\r\n    });\r\n  };\r\n\r\n  return createPortal(\r\n    <div className=\"select-tool\">\r\n      <Popover\r\n        trigger=\"click\"\r\n        placement=\"bottom\"\r\n        getPopupContainer={(e) => e.parentElement!}\r\n        destroyTooltipOnHide\r\n        content={\r\n          <PenPanel\r\n            updateDrawCtrl={(updated) => {\r\n              setCurrDrawCtrl((prev) => ({ ...prev, ...updated }));\r\n              drawRef.current?.mutateStyle(updated);\r\n            }}\r\n            drawCtrl={currDrawCtrl}\r\n          />\r\n        }\r\n      >\r\n        <Button icon={<BgColorsOutlined />} {...btnProps} />\r\n      </Popover>\r\n      <Button\r\n        icon={<CopyOutlined />}\r\n        onClick={() => drawRef.current?.duplicateSelected()}\r\n        {...btnProps}\r\n      />\r\n      <Button icon={<PictureOutlined />} onClick={getRaster} {...btnProps} />\r\n      <Button\r\n        danger\r\n        icon={<DeleteOutlined />}\r\n        onClick={() => drawRef.current?.deleteSelected()}\r\n        {...btnProps}\r\n      />\r\n    </div>,\r\n    document.querySelector(\".reader.container > header\")!\r\n  );\r\n};\r\n\r\nexport const TextTool: FC<{\r\n  drawRef: RefObject<DrawRefType>;\r\n  visible: boolean;\r\n}> = ({ visible, drawRef }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [color, setColor] = useState(allColors[0]!);\r\n  const [align, setAlign] = useState(\"center\");\r\n  const [forceLight] = useForceLight();\r\n\r\n  useEffect(() => {\r\n    const pointText = drawRef.current?.pointText;\r\n    if (!pointText || !visible) return;\r\n    const { name, content, justification, fillColor } = pointText;\r\n    setAlign(justification);\r\n    if (name) {\r\n      setText(content);\r\n      setColor(fillColor?.toCSS(true) ?? allColors[0]!);\r\n    } else {\r\n      setText(\"\");\r\n      setColor(allColors[0]!);\r\n    }\r\n  }, [visible, drawRef]);\r\n\r\n  const fontColorBtn = (\r\n    <Popover\r\n      content={<ColorSelect color={color} setColor={setColor} />}\r\n      overlayStyle={{ width: 200 }}\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e.parentElement!}\r\n    >\r\n      <Button\r\n        size=\"small\"\r\n        icon={<FontColorsOutlined className=\"font-icon\" style={{ color }} />}\r\n      />\r\n    </Popover>\r\n  );\r\n\r\n  const alignRadio = (\r\n    <Radio.Group\r\n      size=\"small\"\r\n      optionType=\"button\"\r\n      value={align}\r\n      buttonStyle=\"solid\"\r\n      onChange={(e) => setAlign(e.target.value)}\r\n      options={[\r\n        { label: <AlignLeftOutlined />, value: \"left\" },\r\n        { label: <AlignCenterOutlined />, value: \"center\" },\r\n        { label: <AlignRightOutlined />, value: \"right\" },\r\n      ]}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      title=\"Insert text\"\r\n      onCancel={() => drawRef.current?.cancelText()}\r\n      onOk={() => {\r\n        const content = text.trim();\r\n        if (!content) return drawRef.current?.cancelText();\r\n        drawRef.current?.submitText(content, color, align);\r\n      }}\r\n      bodyStyle={{ paddingTop: 0 }}\r\n      destroyOnClose\r\n    >\r\n      <div className=\"insert-option\" data-force-light={forceLight}>\r\n        {fontColorBtn}\r\n        {alignRadio}\r\n      </div>\r\n      <TextArea\r\n        size=\"large\"\r\n        rows={3}\r\n        autoFocus\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n","import { useDebugValue, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport localforage from \"localforage\";\r\nimport { Map } from \"immutable\";\r\n\r\nconst scrollForage = localforage.createInstance({ name: \"scroll\" });\r\n\r\nexport function useScrollPage(noteID: string, pageOrder = [] as string[]) {\r\n  const [refMap, setRefMap] = useState(Map<string, HTMLElement>());\r\n  const scrolled = useRef(false);\r\n  const [prevPageID, setPrevPageID] = useState(\"\");\r\n  const [inviewRatios, setInviewRatios] = useState(Map<string, number>());\r\n  const currPageID = useMemo(\r\n    () => largestKey(inviewRatios, pageOrder),\r\n    [inviewRatios, pageOrder]\r\n  );\r\n  useDebugValue(currPageID);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const stored = await scrollForage.getItem<string>(noteID);\r\n      if (!stored) return (scrolled.current = true);\r\n      setPrevPageID(stored);\r\n    })();\r\n  }, [noteID]);\r\n\r\n  useEffect(() => {\r\n    if (scrolled.current || !refMap.has(prevPageID)) return;\r\n    requestAnimationFrame(() => {\r\n      refMap.get(prevPageID)?.scrollIntoView();\r\n      scrolled.current = true;\r\n    });\r\n  }, [prevPageID, refMap]);\r\n\r\n  useEffect(() => {\r\n    if (!scrolled.current) return;\r\n    scrollForage.setItem(noteID, currPageID);\r\n  }, [noteID, currPageID]);\r\n\r\n  const sectionRef = (pageID: string) => (el: HTMLElement | null) => {\r\n    if (!el) return;\r\n    setRefMap((prev) => prev.set(pageID, el));\r\n  };\r\n\r\n  const scrollPage = (pageID: string) => {\r\n    refMap.get(pageID)?.scrollIntoView();\r\n  };\r\n\r\n  return { scrollPage, setInviewRatios, sectionRef, currPageID };\r\n}\r\n\r\nconst largestKey = (map: Map<string, number>, order: string[]) => {\r\n  let result = \"\";\r\n  let maxRatio = 0;\r\n  for (let key of order) {\r\n    const ratio = map.get(key);\r\n    if (!ratio) continue;\r\n    if (ratio === 1) return key;\r\n    if (ratio > maxRatio) {\r\n      result = key;\r\n      maxRatio = ratio;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n","export function exchange<T>(list: T[], fromIndex: number, toIndex: number) {\r\n  const result = list.slice();\r\n  const [removed] = result.splice(fromIndex, 1);\r\n  if (!removed) return list;\r\n  result.splice(toIndex, 0, removed);\r\n  return result;\r\n}\r\n\r\nexport function insertAfter<T>(list: T[], prevItem: T, newItem: T) {\r\n  const prevIndex = list.indexOf(prevItem);\r\n  const curr = list.slice();\r\n  if (prevIndex === -1) return curr;\r\n  curr.splice(prevIndex + 1, 0, newItem);\r\n  return curr;\r\n}\r\n","import { FC } from \"react\";\nimport { Button } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport { HomeFilled, SaveOutlined } from \"@ant-design/icons\";\n\nexport const HeaderLeft: FC<{\n  saved: boolean;\n  instantSave: () => Promise<void> | undefined;\n}> = ({ saved, instantSave }) => {\n  const nav = useNavigate();\n  return (\n    <div className=\"left\">\n      <Button\n        type=\"text\"\n        onClick={async () => {\n          await instantSave();\n          nav(\"/\");\n        }}\n        icon={<HomeFilled style={{ opacity: 0.8 }} />}\n      />\n      <Button\n        type=\"text\"\n        className=\"save\"\n        onClick={instantSave}\n        disabled={saved}\n        icon={<SaveOutlined />}\n      />\n    </div>\n  );\n};\n","import { FC, useContext } from \"react\";\r\nimport { Button, message, Popover, ButtonProps, Segmented } from \"antd\";\r\nimport { ReaderStateCtx } from \"../Reader\";\r\nimport {\r\n  BulbFilled,\r\n  BulbOutlined,\r\n  UndoOutlined,\r\n  RedoOutlined,\r\n  GatewayOutlined,\r\n  HighlightOutlined,\r\n} from \"@ant-design/icons\";\r\nimport IconFont from \"../../ui/IconFont\";\r\nimport { PenPanel, WidthSelect } from \"../tools/PenPanel\";\r\nimport { useForceLight } from \"../../../lib/Dark\";\r\nimport { useDrawCtrl, useUpdateDrawCtrl } from \"../../../lib/draw/DrawCtrl\";\r\n\r\nexport const HeaderMiddle: FC<{\r\n  handleUndo: () => void;\r\n  handleRedo: () => void;\r\n}> = ({ handleUndo, handleRedo }) => {\r\n  const { stateSet } = useContext(ReaderStateCtx);\r\n  const { mode, finger } = useDrawCtrl();\r\n  const updateDrawCtrl = useUpdateDrawCtrl();\r\n  const [forceLight, setForceLight] = useForceLight();\r\n\r\n  return (\r\n    <div className=\"middle\">\r\n      <Button\r\n        type=\"text\"\r\n        shape=\"circle\"\r\n        icon={<UndoOutlined />}\r\n        onClick={handleUndo}\r\n        disabled={!stateSet?.isUndoable()}\r\n      />\r\n      <Button\r\n        type=\"text\"\r\n        shape=\"circle\"\r\n        icon={<RedoOutlined />}\r\n        onClick={handleRedo}\r\n        disabled={!stateSet?.isRedoable()}\r\n      />\r\n      <Button\r\n        type={finger ? \"default\" : \"text\"}\r\n        shape=\"circle\"\r\n        onClick={() => {\r\n          updateDrawCtrl({ finger: !finger });\r\n          message.destroy(\"FINGER\");\r\n          message.open({\r\n            content: finger ? \"Pencil only\" : \"Draw with finger\",\r\n            key: \"FINGER\",\r\n          });\r\n        }}\r\n        icon={<IconFont type=\"icon-finger\" />}\r\n      />\r\n      <Button\r\n        className=\"force-light-btn\"\r\n        type=\"text\"\r\n        shape=\"circle\"\r\n        icon={forceLight ? <BulbFilled /> : <BulbOutlined />}\r\n        onClick={() => setForceLight((prev) => !prev)}\r\n      />\r\n      <PenButton />\r\n      <EraserButton />\r\n      <Button\r\n        type={mode === \"text\" ? \"default\" : \"text\"}\r\n        shape=\"circle\"\r\n        onClick={() => updateDrawCtrl({ mode: \"text\" })}\r\n        icon={<IconFont type=\"icon-text1\" />}\r\n      />\r\n      <SelectButton />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PenButton = () => {\r\n  const drawCtrl = useDrawCtrl();\r\n  const updateDrawCtrl = useUpdateDrawCtrl();\r\n\r\n  const btnProps: ButtonProps = {\r\n    shape: \"circle\",\r\n    icon: <HighlightOutlined />,\r\n  };\r\n  return drawCtrl.mode === \"draw\" ? (\r\n    <Popover\r\n      content={<PenPanel updateDrawCtrl={updateDrawCtrl} drawCtrl={drawCtrl} />}\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e.parentElement!}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button type=\"default\" {...btnProps} />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      onClick={() => updateDrawCtrl({ mode: \"draw\" })}\r\n      {...btnProps}\r\n    />\r\n  );\r\n};\r\n\r\nconst EraserButton = () => {\r\n  const drawCtrl = useDrawCtrl();\r\n  const { mode, pixelEraser } = drawCtrl;\r\n  const updateDrawCtrl = useUpdateDrawCtrl();\r\n\r\n  const btnProps: ButtonProps = {\r\n    shape: \"circle\",\r\n    icon: <IconFont type=\"icon-eraser\" />,\r\n  };\r\n\r\n  return mode === \"erase\" ? (\r\n    <Popover\r\n      content={\r\n        <div className=\"width-seg-wrapper\">\r\n          <Segmented\r\n            block\r\n            size=\"small\"\r\n            className=\"pixel-seg\"\r\n            options={[\"Pixel\", \"Object\"]}\r\n            value={pixelEraser ? \"Pixel\" : \"Object\"}\r\n            onChange={(value) => {\r\n              if (value === \"Pixel\") updateDrawCtrl({ pixelEraser: true });\r\n              else updateDrawCtrl({ pixelEraser: false });\r\n            }}\r\n          />\r\n          <WidthSelect\r\n            drawCtrl={drawCtrl}\r\n            updateDrawCtrl={updateDrawCtrl}\r\n            field=\"eraserWidth\"\r\n          />\r\n        </div>\r\n      }\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e.parentElement!}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button type=\"default\" {...btnProps} />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      onClick={() => updateDrawCtrl({ mode: \"erase\" })}\r\n      {...btnProps}\r\n    />\r\n  );\r\n};\r\n\r\nconst SelectButton = () => {\r\n  const { lasso, mode } = useDrawCtrl();\r\n  const updateDrawCtrl = useUpdateDrawCtrl();\r\n\r\n  const icon = lasso ? <IconFont type=\"icon-lasso1\" /> : <GatewayOutlined />;\r\n\r\n  return mode === \"select\" ? (\r\n    <Button\r\n      type=\"default\"\r\n      shape=\"circle\"\r\n      icon={icon}\r\n      onClick={() => updateDrawCtrl({ lasso: !lasso })}\r\n    />\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      shape=\"circle\"\r\n      icon={icon}\r\n      onClick={() => updateDrawCtrl({ mode: \"select\" })}\r\n    />\r\n  );\r\n};\r\n","import { Avatar } from \"antd\";\nimport { AvatarSize } from \"antd/lib/avatar/SizeContext\";\nimport { FC, useContext, useMemo } from \"react\";\nimport { getHashedColor } from \"../../lib/color\";\nimport { TeamCtx } from \"../reader/Team\";\n\nexport const UserAvatar: FC<{\n  userID: string;\n  size?: AvatarSize;\n  onClick?: () => void;\n  chosen?: boolean;\n  className?: string;\n}> = ({\n  userID,\n  size = \"default\",\n  onClick = () => {},\n  chosen = false,\n  className,\n}) => {\n  const { userRec } = useContext(TeamCtx);\n  const color = useMemo(() => getHashedColor(userID), [userID]);\n  const userInfo = userRec[userID];\n  if (!userInfo) return null;\n  const { userName } = userInfo;\n\n  return (\n    <Avatar\n      className={className}\n      data-chosen={chosen}\n      size={size}\n      style={{ backgroundColor: color }}\n    >\n      <div className=\"avatar-wrapper\" onClick={onClick}>\n        {userName?.slice(0, 3)}\n      </div>\n    </Avatar>\n  );\n};\n","import { FC, useRef, useMemo, useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  MoreOutlined,\r\n  PlusOutlined,\r\n  CopyOutlined,\r\n  DeleteOutlined,\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  Draggable,\r\n  Droppable,\r\n  DropResult,\r\n  DragDropContext,\r\n} from \"react-beautiful-dnd\";\r\nimport { ActiveKeyProvider, Setter, useActiveKey } from \"../../lib/hooks\";\r\nimport { PageWrapper, ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport { Avatar, Button, Drawer, Menu, Popover, Tabs } from \"antd\";\r\nimport { UserAvatar } from \"../widgets/UserAvatar\";\r\nimport { useForceLight } from \"../../lib/Dark\";\r\nimport { AddPageButton } from \"./ReaderUtils\";\r\nimport { exchange } from \"./lib/array\";\r\nimport IconFont from \"../ui/IconFont\";\r\nimport classNames from \"classnames\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport \"./preview.sass\";\r\n\r\nconst PageNavContent = () => {\r\n  const { pageOrder, currPageID } = useContext(ReaderStateCtx);\r\n  const { scrollPage, saveReorder } = useContext(ReaderMethodCtx);\r\n  const [forceLight] = useForceLight();\r\n  const [activeKey] = useActiveKey();\r\n  const refRec = useRef<Record<string, HTMLElement>>({});\r\n\r\n  const onDragEnd = ({ source, destination }: DropResult) => {\r\n    if (!destination || !pageOrder) return;\r\n    const { index: fromIndex } = source;\r\n    const { index: toIndex } = destination;\r\n    const pageID = pageOrder[fromIndex];\r\n    if (fromIndex === toIndex || !pageID) return;\r\n    const newOrder = exchange(pageOrder, fromIndex, toIndex);\r\n    saveReorder(newOrder, true);\r\n    requestAnimationFrame(() => scrollPage(pageID));\r\n  };\r\n\r\n  const title = {\r\n    ALL: \"All Pages\",\r\n    MARKED: \"Bookmarks\",\r\n    WRITTEN: \"Notes\",\r\n  }[activeKey];\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => refRec.current[currPageID]?.scrollIntoView(), []);\r\n\r\n  return (\r\n    <div className=\"preview-container\" data-force-light={forceLight}>\r\n      <PreviewTabs />\r\n      <h3>{title}</h3>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"preview-list\">\r\n          {({ droppableProps, innerRef, placeholder }) => (\r\n            <div className=\"page-list\" ref={innerRef} {...droppableProps}>\r\n              {pageOrder?.map((uid, index) => (\r\n                <PagePreview\r\n                  key={uid}\r\n                  uid={uid}\r\n                  pageIndex={index}\r\n                  refRec={refRec.current}\r\n                />\r\n              ))}\r\n              {placeholder}\r\n              {activeKey === \"ALL\" && <AddPageButton />}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PagePreview: FC<{\r\n  uid: string;\r\n  pageIndex: number;\r\n  refRec: Record<string, HTMLElement>;\r\n}> = ({ uid, pageIndex, refRec }) => {\r\n  const { stateSet, pageRec, currPageID } = useContext(ReaderStateCtx);\r\n  const { teamState } = useContext(TeamCtx);\r\n  const { scrollPage } = useContext(ReaderMethodCtx);\r\n  const [activeKey] = useActiveKey();\r\n  const [chosen, setChosen] = useState(\"\");\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n\r\n  if (!page || !drawState) return null;\r\n  const { image, marked } = page;\r\n\r\n  if (\r\n    activeKey === \"WRITTEN\" &&\r\n    drawState.isEmpty() &&\r\n    (!teamStateMap || teamStateMap.every((ds) => ds.isEmpty()))\r\n  ) {\r\n    return null;\r\n  }\r\n  if (activeKey === \"MARKED\" && !marked) return null;\r\n  const curr = currPageID === uid;\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={uid}\r\n      index={pageIndex}\r\n      isDragDisabled={activeKey !== \"ALL\"}\r\n    >\r\n      {(\r\n        { innerRef, draggableProps, dragHandleProps },\r\n        { isDragging: dragged }\r\n      ) => (\r\n        <div\r\n          ref={(e) => {\r\n            innerRef(e);\r\n            if (e) refRec[uid] = e;\r\n          }}\r\n          className=\"page\"\r\n          data-curr={curr}\r\n          data-dragged={dragged}\r\n          onClick={() => scrollPage(uid)}\r\n          {...draggableProps}\r\n          {...dragHandleProps}\r\n        >\r\n          <PageWrapper\r\n            drawState={teamStateMap?.get(chosen) || drawState}\r\n            teamStateMap={chosen ? undefined : teamStateMap}\r\n            thumbnail={image}\r\n            preview\r\n          />\r\n          <PreviewTools\r\n            uid={uid}\r\n            index={pageIndex}\r\n            chosen={chosen}\r\n            setChosen={setChosen}\r\n          />\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst PreviewTools: FC<{\r\n  uid: string;\r\n  index: number;\r\n  chosen: string;\r\n  setChosen: Setter<string>;\r\n}> = ({ uid, index, chosen, setChosen }) => {\r\n  const { switchPageMarked } = useContext(ReaderMethodCtx);\r\n  const { pageRec } = useContext(ReaderStateCtx);\r\n  const { ignores, teamState } = useContext(TeamCtx);\r\n  const userIDs = useMemo(\r\n    () =>\r\n      teamState\r\n        ?.getPageValidUsers(uid)\r\n        .filter((userID) => !ignores.has(userID)) || [],\r\n    [teamState, ignores, uid]\r\n  );\r\n  const page = pageRec?.get(uid);\r\n  if (!page) return null;\r\n  const { marked } = page;\r\n\r\n  return (\r\n    <div className=\"tools\" onClick={(e) => e.stopPropagation()}>\r\n      <div\r\n        className=\"bookmark\"\r\n        data-marked={marked}\r\n        onClick={() => switchPageMarked(uid)}\r\n      />\r\n      <div className=\"index\">{index + 1}</div>\r\n      <PreviewOption uid={uid} />\r\n      <TeamAvatars userIDs={userIDs} chosen={chosen} setChosen={setChosen} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TeamAvatars: FC<{\r\n  userIDs: string[];\r\n  chosen: string;\r\n  setChosen: Setter<string>;\r\n}> = ({ userIDs, chosen, setChosen }) => {\r\n  return (\r\n    <Avatar.Group\r\n      maxCount={2}\r\n      size=\"default\"\r\n      className={classNames(\"team-group\", { chosen })}\r\n      maxPopoverPlacement=\"bottom\"\r\n    >\r\n      {userIDs.map((userID) => (\r\n        <UserAvatar\r\n          key={userID}\r\n          size=\"default\"\r\n          userID={userID}\r\n          className=\"preview-avatar\"\r\n          chosen={chosen === userID}\r\n          onClick={() => setChosen((prev) => (prev === userID ? \"\" : userID))}\r\n        />\r\n      ))}\r\n    </Avatar.Group>\r\n  );\r\n};\r\n\r\nconst PreviewOption = ({ uid }: { uid: string }) => {\r\n  const { addPage, deletePage } = useContext(ReaderMethodCtx);\r\n\r\n  const menu = (\r\n    <Menu\r\n      onClick={({ key }) => {\r\n        if (key === \"ADD\") {\r\n          addPage(uid);\r\n        } else if (key === \"COPY\") {\r\n          addPage(uid, true);\r\n        } else if (key === \"DELETE\") {\r\n          deletePage(uid);\r\n        }\r\n      }}\r\n      items={[\r\n        { key: \"ADD\", icon: <PlusOutlined />, label: \"Add page\" },\r\n        { key: \"COPY\", icon: <CopyOutlined />, label: \"Duplicate\" },\r\n        {\r\n          key: \"DELETE\",\r\n          icon: <DeleteOutlined />,\r\n          label: \"Delete\",\r\n          danger: true,\r\n        },\r\n      ]}\r\n    ></Menu>\r\n  );\r\n  return (\r\n    <Popover\r\n      content={menu}\r\n      trigger=\"click\"\r\n      placement=\"left\"\r\n      destroyTooltipOnHide\r\n    >\r\n      <div className=\"option\">\r\n        <MoreOutlined />\r\n      </div>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst PreviewTabs = () => {\r\n  const [activeKey, setActiveKey] = useActiveKey();\r\n  const { TabPane } = Tabs;\r\n  return (\r\n    <Tabs\r\n      className=\"tabs\"\r\n      activeKey={activeKey}\r\n      onChange={setActiveKey}\r\n      tabBarGutter={10}\r\n      size=\"small\"\r\n      centered\r\n    >\r\n      <TabPane tab={<IconFont type=\"icon-uf_paper\" />} key=\"ALL\" />\r\n      <TabPane tab={<IconFont type=\"icon-bookmark2\" />} key=\"MARKED\" />\r\n      <TabPane tab={<IconFont type=\"icon-write\" />} key=\"WRITTEN\" />\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default function PageNav() {\r\n  const [navOn, setNavOn] = useState(false);\r\n\r\n  return (\r\n    <ActiveKeyProvider initKey=\"ALL\">\r\n      <Button\r\n        type=\"text\"\r\n        icon={navOn ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\r\n        onClick={() => setNavOn((prev) => !prev)}\r\n      />\r\n      <Drawer\r\n        visible={navOn}\r\n        onClose={() => setNavOn(false)}\r\n        width={200}\r\n        closable={false}\r\n        zIndex={800}\r\n        className=\"preview-drawer\"\r\n        bodyStyle={{ padding: 0, overflow: \"hidden\" }}\r\n        headerStyle={{ textAlign: \"center\" }}\r\n        destroyOnClose\r\n      >\r\n        <PageNavContent />\r\n      </Drawer>\r\n    </ActiveKeyProvider>\r\n  );\r\n}\r\n","import { FC, useMemo, useState, useEffect, useContext } from \"react\";\r\nimport { Badge, Alert, Modal, Button, Divider, message, Popover } from \"antd\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { PasscodeInput } from \"antd-mobile\";\r\nimport { ReaderStateCtx } from \"../Reader\";\r\nimport { TeamCtx } from \"../Team\";\r\nimport { getUserID, saveUserName } from \"../../../lib/user\";\r\nimport PageNav from \"../PageNav\";\r\nimport {\r\n  EyeOutlined,\r\n  FormOutlined,\r\n  TeamOutlined,\r\n  CopyOutlined,\r\n  CheckOutlined,\r\n  ReloadOutlined,\r\n  ShareAltOutlined,\r\n  DisconnectOutlined,\r\n  EyeInvisibleOutlined,\r\n  UsergroupAddOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { editNoteData } from \"../../../lib/note/archive\";\r\nimport { UserAvatar } from \"../../widgets/UserAvatar\";\r\nimport { putNote } from \"../../../lib/network/http\";\r\nimport copy from \"clipboard-copy\";\r\n\r\nexport const HeaderRight: FC<{\r\n  instantSave: () => Promise<void> | undefined;\r\n}> = ({ instantSave }) => {\r\n  const { teamOn } = useContext(TeamCtx);\r\n  return (\r\n    <div className=\"right\">\r\n      {teamOn ? <RoomInfo /> : <JoinRoom instantSave={instantSave} />}\r\n      <PageNav />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst UserCard: FC<{ userID: string }> = ({ userID }) => {\r\n  const [renaming, setRenaming] = useState(false);\r\n  const { ignores, setIgnores, resetIO, userRec } = useContext(TeamCtx);\r\n  const userInfo = userRec[userID];\r\n  useEffect(() => setRenaming(false), [userInfo]);\r\n  if (!userInfo) return null;\r\n\r\n  const { userName, online } = userInfo;\r\n  const self = userID === getUserID();\r\n  const ignored = ignores.has(userID) && !self;\r\n\r\n  const switchIgnore = () => {\r\n    setIgnores((prev) => {\r\n      if (prev.has(userID)) return prev.delete(userID);\r\n      return prev.add(userID);\r\n    });\r\n  };\r\n\r\n  const submitRename = (value: string) => {\r\n    const name = value.trim();\r\n    if (!name || name === userName) return setRenaming(false);\r\n    saveUserName(name);\r\n    resetIO();\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-item\" data-online={online}>\r\n      <UserAvatar userID={userID} size=\"small\" className=\"room-avatar\" />\r\n      {renaming || <span className=\"user-name\">{userName}</span>}\r\n      {renaming && (\r\n        <Search\r\n          autoFocus\r\n          className=\"rename-input\"\r\n          defaultValue={userName}\r\n          onSearch={submitRename}\r\n          enterButton={<Button icon={<CheckOutlined />} />}\r\n        />\r\n      )}\r\n      {self ? (\r\n        renaming || (\r\n          <Button\r\n            type=\"text\"\r\n            icon={<FormOutlined />}\r\n            onClick={() => setRenaming(true)}\r\n          />\r\n        )\r\n      ) : (\r\n        <Button\r\n          type=\"text\"\r\n          icon={ignored ? <EyeInvisibleOutlined /> : <EyeOutlined />}\r\n          onClick={switchIgnore}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RoomInfo: FC = () => {\r\n  const { code, userRec, connected, loadInfo, loadState, resetIO } =\r\n    useContext(TeamCtx);\r\n  const { noteInfo } = useContext(ReaderStateCtx);\r\n  const link = window.location.href;\r\n  const share = async () => {\r\n    const selfName = userRec[getUserID()]?.userName;\r\n    try {\r\n      if (!noteInfo) return;\r\n      await copy(`${noteInfo.name} - ${selfName} - Multibility\\n${link}`);\r\n      message.destroy(\"copy\");\r\n      message.success({\r\n        content: \"Link copied!\",\r\n        icon: <CopyOutlined />,\r\n        key: \"copy\",\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const userList = useMemo(() => {\r\n    const selfID = getUserID();\r\n    const { [selfID]: selfInfo, ...otherUsers } = userRec;\r\n    const list = selfInfo ? [selfInfo] : [];\r\n    const values = Object.values(otherUsers);\r\n    list.push(\r\n      ...values.filter(({ online }) => online),\r\n      ...values.filter(({ online }) => !online)\r\n    );\r\n    return list;\r\n  }, [userRec]);\r\n\r\n  const onlineNum = useMemo(\r\n    () => userList.filter(({ online }) => online).length,\r\n    [userList]\r\n  );\r\n\r\n  const teamPop = (\r\n    <div className=\"team-popover\">\r\n      {connected || (\r\n        <Alert\r\n          className=\"disconn-alert\"\r\n          message=\"Network failed.\"\r\n          icon={<DisconnectOutlined />}\r\n          type=\"error\"\r\n          showIcon\r\n          banner\r\n        />\r\n      )}\r\n      <PasscodeInput\r\n        className=\"code-display\"\r\n        value={String(code)}\r\n        length={4}\r\n        plain\r\n      />\r\n      <Button\r\n        icon={<ShareAltOutlined />}\r\n        className=\"share-btn\"\r\n        onClick={share}\r\n        block\r\n      >\r\n        Share\r\n      </Button>\r\n      <Divider />\r\n      <div className=\"user-list\">\r\n        {userList.map((u) => (\r\n          <UserCard key={u.userID} userID={u.userID} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const [reloading, setReloading] = useState(false);\r\n  const title = (\r\n    <div className=\"team-title\">\r\n      <span>Team info</span>\r\n      <Button\r\n        shape=\"circle\"\r\n        type=\"text\"\r\n        size=\"small\"\r\n        loading={reloading}\r\n        icon={<ReloadOutlined />}\r\n        onClick={async () => {\r\n          setReloading(true);\r\n          await loadInfo();\r\n          await loadState();\r\n          setReloading(false);\r\n          resetIO();\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Popover\r\n      content={teamPop}\r\n      trigger=\"click\"\r\n      placement=\"bottomRight\"\r\n      title={title}\r\n      getPopupContainer={(e) => e.parentElement!}\r\n    >\r\n      <Button\r\n        type=\"text\"\r\n        icon={\r\n          <Badge\r\n            status={connected ? \"success\" : \"error\"}\r\n            count={connected ? onlineNum : \"!\"}\r\n            size=\"small\"\r\n          >\r\n            <TeamOutlined />\r\n          </Badge>\r\n        }\r\n      />\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst JoinRoom: FC<{\r\n  instantSave: () => Promise<void> | undefined;\r\n}> = ({ instantSave }) => {\r\n  const { noteID } = useContext(ReaderStateCtx);\r\n  const nav = useNavigate();\r\n\r\n  const createRoom = async () => {\r\n    await instantSave();\r\n    const res = await putNote(noteID);\r\n    if (!res) return message.error(\"Can't create room.\");\r\n    await editNoteData(noteID, { team: true });\r\n    nav(\"/team/\" + noteID);\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      type=\"text\"\r\n      icon={<UsergroupAddOutlined />}\r\n      onClick={() => {\r\n        Modal.confirm({\r\n          title: \"Enable team editing\",\r\n          content: \"This will make your note public to anyone with the link.\",\r\n          icon: <TeamOutlined style={{ color: \"#555\" }} />,\r\n          onOk: createRoom,\r\n        });\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import { HeaderLeft } from \"./Left\";\r\nimport { HeaderMiddle } from \"./Middle\";\r\nimport { HeaderRight } from \"./Right\";\r\nimport \"./header.sass\";\r\n\r\nexport default function ReaderHeader({\r\n  saved,\r\n  handleUndo,\r\n  handleRedo,\r\n  instantSave,\r\n}: {\r\n  saved: boolean;\r\n  handleUndo: () => void;\r\n  handleRedo: () => void;\r\n  instantSave: () => Promise<void> | undefined;\r\n}) {\r\n  return (\r\n    <header>\r\n      <HeaderLeft saved={saved} instantSave={instantSave} />\r\n      <HeaderMiddle handleUndo={handleUndo} handleRedo={handleRedo} />\r\n      <HeaderRight instantSave={instantSave} />\r\n    </header>\r\n  );\r\n}\r\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useCallback,\r\n} from \"react\";\r\nimport {\r\n  NoteInfo,\r\n  NotePage,\r\n  createPage,\r\n  defaultNotePage,\r\n} from \"../../lib/note/note\";\r\nimport { DrawCtrlProvider, useDrawCtrl } from \"../../lib/draw/DrawCtrl\";\r\nimport { NewPageInfo, ReorderInfo, SyncInfo } from \"../../lib/network/io\";\r\nimport { DarkModeProvider, useForceLight } from \"../../lib/Dark\";\r\nimport { useMemoizedFn as useEvent, useSafeState } from \"ahooks\";\r\nimport { SetOperation, StateSet } from \"../../lib/draw/StateSet\";\r\nimport Draw, { ActiveToolKey, DrawRefType } from \"../draw/Draw\";\r\nimport { loadNote, editNoteData } from \"../../lib/note/archive\";\r\nimport { AddPageButton, showPageDelMsg } from \"./ReaderUtils\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { SelectTool, TextTool } from \"./tools/DrawTools\";\r\nimport { debounce, last, once, range } from \"lodash-es\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { DrawState } from \"../../lib/draw/DrawState\";\r\nimport { useScrollPage } from \"./lib/scroll\";\r\nimport { insertAfter } from \"./lib/array\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport ReaderHeader from \"./header\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport { Map } from \"immutable\";\r\nimport { message } from \"antd\";\r\nimport \"./reader.sass\";\r\n\r\nexport const ReaderStateCtx = React.createContext<{\r\n  noteID: string;\r\n  noteInfo?: NoteInfo;\r\n  stateSet?: StateSet;\r\n  pageRec?: Map<string, NotePage>;\r\n  pageOrder?: string[];\r\n  currPageID: string;\r\n}>({ noteID: \"\", currPageID: \"\" });\r\n\r\nexport const ReaderMethodCtx = React.createContext({\r\n  scrollPage: (pageID: string) => {},\r\n  switchPageMarked: (pageID: string) => {},\r\n  addPage: (prevPageID: string, copy?: boolean) => {},\r\n  addFinalPage: () => {},\r\n  deletePage: (pageID: string) => {},\r\n  saveReorder: async (order: string[], push: boolean) => {},\r\n});\r\n\r\nexport default function Reader() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const nav = useNavigate();\r\n\r\n  const [pageRec, setPageRec] = useState<Map<string, NotePage>>();\r\n  const [noteInfo, setNoteInfo] = useState<NoteInfo>();\r\n  const [stateSet, setStateSet] = useState<StateSet>();\r\n  const [pageOrder, setPageOrder] = useState<string[]>();\r\n  const [saved, setSaved] = useSafeState(true);\r\n\r\n  const { io, teamOn, addTeamStatePage } = useContext(TeamCtx);\r\n  const { setInviewRatios, scrollPage, sectionRef, currPageID } = useScrollPage(\r\n    noteID,\r\n    pageOrder\r\n  );\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const storedNote = await loadNote(noteID);\r\n      if (!storedNote) {\r\n        message.error(\"Note not found\");\r\n        return nav(\"/\");\r\n      }\r\n      const { pageRec, pdf, pageOrder, ...noteInfo } = storedNote;\r\n      setPageRec(Map(pageRec));\r\n      setPageOrder(pageOrder);\r\n      setNoteInfo(noteInfo);\r\n      setStateSet(StateSet.createFromPages(pageRec));\r\n    })();\r\n  }, [nav, noteID, teamOn]);\r\n\r\n  useEffect(() => {\r\n    if (!noteInfo) return;\r\n    document.title = noteInfo.name + \" - Multibility\";\r\n  }, [noteInfo]);\r\n\r\n  const saver = useEvent(async () => {\r\n    const pr = pageRec?.toObject();\r\n    await editNoteData(noteID, { pageRec: pr });\r\n    setSaved(true);\r\n  });\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const debouncedSave = useCallback(debounce(saver, 2000), [saver]);\r\n  const instantSave = debouncedSave.flush;\r\n\r\n  const savePageRec = (pageID: string, cb: (prev: NotePage) => NotePage) => {\r\n    setPageRec((prev) => prev?.update(pageID, defaultNotePage, cb));\r\n    setSaved(false);\r\n    debouncedSave();\r\n  };\r\n\r\n  const saveReorder = async (pageOrder: string[], push = false) => {\r\n    setPageOrder(pageOrder);\r\n    await editNoteData(noteID, { pageOrder });\r\n    await instantSave();\r\n    push && pushReorder(pageOrder);\r\n  };\r\n\r\n  const pushReorder = (pageOrder: string[]) =>\r\n    io?.emit(\"reorder\", { pageOrder });\r\n\r\n  const handleReorder = useEvent(\r\n    ({ deleted, pageOrder, prevOrder }: ReorderInfo) => {\r\n      saveReorder(pageOrder);\r\n      if (!deleted) return;\r\n      showPageDelMsg(() => saveReorder(prevOrder, true));\r\n    }\r\n  );\r\n\r\n  const handleNewPage = useEvent(\r\n    ({ pageOrder, pageID, newPage }: NewPageInfo) => {\r\n      saveReorder(pageOrder);\r\n      savePageRec(pageID, () => newPage);\r\n      setStateSet((prev) => prev?.addState(pageID, newPage));\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    io?.on(\"reorder\", handleReorder);\r\n    io?.on(\"newPage\", handleNewPage);\r\n    return () => void io?.removeAllListeners();\r\n  }, [io, handleReorder, handleNewPage]);\r\n\r\n  const pushOperation = (operation: SetOperation) => {\r\n    const handleSync = ({ pageID, stroke }: SyncInfo) =>\r\n      setStateSet((prev) => prev?.syncStrokeTime(pageID, stroke));\r\n\r\n    io?.emit(\"push\", { operation }, handleSync);\r\n  };\r\n\r\n  const pushNewPage = (\r\n    pageOrder: string[],\r\n    pageID: string,\r\n    newPage: NotePage\r\n  ) => {\r\n    const { image, marked, ...newTeamPage } = newPage;\r\n    io?.emit(\"newPage\", { pageOrder, pageID, newPage: newTeamPage });\r\n    addTeamStatePage(pageID, newPage);\r\n  };\r\n\r\n  const updatePageRec = (pageID: string, ds: DrawState) => {\r\n    const state = DrawState.flaten(ds);\r\n    savePageRec(pageID, (prev) => ({ ...prev, state }));\r\n  };\r\n\r\n  const updateStateSet = (cb: (prevSS: StateSet) => StateSet) => {\r\n    if (!stateSet) return;\r\n    const newSS = cb(stateSet);\r\n    if (newSS === stateSet) return;\r\n    setStateSet(newSS);\r\n    const lastDS = newSS.getLastDS();\r\n    const lastOp = newSS.lastOp;\r\n    if (!lastDS || !lastOp) return;\r\n    updatePageRec(...lastDS);\r\n    pushOperation(lastOp);\r\n  };\r\n\r\n  const switchPageMarked = (pageID: string) =>\r\n    savePageRec(pageID, (prev) => ({ ...prev, marked: !prev.marked }));\r\n\r\n  const addPage = (prevPageID: string, copy = false) => {\r\n    if (!pageOrder) return;\r\n    const prevPage = copy ? pageRec?.get(prevPageID) : undefined;\r\n    const [pageID, newPage] = createPage(prevPage);\r\n    const newOrder = insertAfter(pageOrder, prevPageID, pageID);\r\n    pushNewPage(newOrder, pageID, newPage);\r\n    saveReorder(newOrder);\r\n    savePageRec(pageID, () => newPage);\r\n    setStateSet((prev) => prev?.addState(pageID, newPage));\r\n  };\r\n\r\n  const addFinalPage = () => {\r\n    const lastPageID = last(pageOrder);\r\n    lastPageID && addPage(lastPageID);\r\n  };\r\n\r\n  const deletePage = (pageID: string) => {\r\n    const newOrder = pageOrder?.filter((id) => id !== pageID);\r\n    newOrder?.length && saveReorder(newOrder, true);\r\n  };\r\n\r\n  const renderResult = (\r\n    <div className=\"reader container\">\r\n      <ReaderHeader\r\n        saved={saved}\r\n        instantSave={instantSave}\r\n        handleUndo={() => updateStateSet((prev) => prev.undo())}\r\n        handleRedo={() => updateStateSet((prev) => prev.redo())}\r\n      />\r\n      <main>\r\n        {pageOrder?.map((uid) => (\r\n          <section key={uid} className=\"note-page\" ref={sectionRef(uid)}>\r\n            <PageContainer\r\n              uid={uid}\r\n              updateStateSet={updateStateSet}\r\n              setInviewRatios={setInviewRatios}\r\n            />\r\n          </section>\r\n        ))}\r\n        <AddPageButton />\r\n      </main>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <DarkModeProvider>\r\n      <ReaderStateCtx.Provider\r\n        value={{\r\n          noteID,\r\n          pageRec,\r\n          noteInfo,\r\n          stateSet,\r\n          pageOrder,\r\n          currPageID,\r\n        }}\r\n      >\r\n        <ReaderMethodCtx.Provider\r\n          value={{\r\n            addPage,\r\n            scrollPage,\r\n            deletePage,\r\n            saveReorder,\r\n            addFinalPage,\r\n            switchPageMarked,\r\n          }}\r\n        >\r\n          <DrawCtrlProvider>{renderResult}</DrawCtrlProvider>\r\n        </ReaderMethodCtx.Provider>\r\n      </ReaderStateCtx.Provider>\r\n    </DarkModeProvider>\r\n  );\r\n}\r\n\r\nconst PageContainer: FC<{\r\n  uid: string;\r\n  updateStateSet: (cb: (prevSS: StateSet) => StateSet) => void;\r\n  setInviewRatios: Setter<Map<string, number>>;\r\n}> = ({ uid, updateStateSet, setInviewRatios }) => {\r\n  const { pageRec, stateSet, currPageID, pageOrder } =\r\n    useContext(ReaderStateCtx);\r\n  const { teamState } = useContext(TeamCtx);\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n  const updateState = (ds: DrawState) => {\r\n    updateStateSet((prev) => prev.setState(uid, ds));\r\n  };\r\n\r\n  const onViewChange = (visible: boolean, ratio: number) => {\r\n    if (!visible) return setInviewRatios((prev) => prev.delete(uid));\r\n    setInviewRatios((prev) => prev.set(uid, ratio));\r\n  };\r\n\r\n  const preload = useMemo(() => {\r\n    if (!pageOrder) return false;\r\n    const currIndex = pageOrder.indexOf(currPageID);\r\n    const selfIndex = pageOrder.indexOf(uid);\r\n    return Math.abs(selfIndex - currIndex) <= 1;\r\n  }, [currPageID, uid, pageOrder]);\r\n\r\n  if (!page || !drawState) return null;\r\n  return (\r\n    <PageWrapper\r\n      drawState={drawState}\r\n      teamStateMap={teamStateMap}\r\n      updateState={updateState}\r\n      pdfIndex={page.pdfIndex}\r\n      onViewChange={onViewChange}\r\n      preload={preload}\r\n    />\r\n  );\r\n};\r\n\r\nexport const PageWrapper: FC<{\r\n  drawState: DrawState;\r\n  teamStateMap?: Map<string, DrawState>;\r\n  thumbnail?: string;\r\n  pdfIndex?: number;\r\n  updateState?: (ds: DrawState) => void;\r\n  onViewChange?: (visible: boolean, ratio: number) => void;\r\n  preview?: boolean;\r\n  preload?: boolean;\r\n}> = ({\r\n  thumbnail,\r\n  drawState,\r\n  teamStateMap,\r\n  updateState,\r\n  pdfIndex,\r\n  preview = false,\r\n  onViewChange = () => {},\r\n  preload = false,\r\n}) => {\r\n  const [ref, visible, entry] = useInView({ threshold: range(0, 1.1, 0.1) });\r\n  useEffect(() => {\r\n    if (!entry || !visible) return onViewChange(false, 0);\r\n    onViewChange(true, entry.intersectionRatio);\r\n  }, [visible, entry, onViewChange]);\r\n\r\n  const { noteID } = useContext(ReaderStateCtx);\r\n  const [fullImg, setFullImg] = useState<string>();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const loadImage = useCallback(\r\n    once(async () => {\r\n      if (!pdfIndex) return;\r\n      const { getNotePageImage } = await import(\"../../lib/note/pdfImage\");\r\n      setFullImg(await getNotePageImage(noteID, pdfIndex));\r\n    }),\r\n    [pdfIndex, noteID]\r\n  );\r\n\r\n  const show = visible || preload;\r\n  useEffect(() => {\r\n    if (!preview && show) loadImage();\r\n  }, [show, preview, loadImage]);\r\n\r\n  const { ignores } = useContext(TeamCtx);\r\n  const otherStates = useMemo(\r\n    () => teamStateMap?.deleteAll(ignores).toList().toArray(),\r\n    [teamStateMap, ignores]\r\n  );\r\n\r\n  const imageLoaded = Boolean(fullImg || !pdfIndex);\r\n  const drawShow = show && imageLoaded;\r\n\r\n  const { height, width } = drawState;\r\n  const ratio = height / width;\r\n  const [forceLight] = useForceLight();\r\n\r\n  return (\r\n    <div ref={ref} className=\"page-wrapper\" data-force-light={forceLight}>\r\n      <svg viewBox={`0 0 100 ${ratio * 100}`} />\r\n      {drawShow && (\r\n        <DrawWrapper\r\n          drawState={drawState}\r\n          otherStates={otherStates}\r\n          updateState={updateState}\r\n          imgSrc={fullImg || thumbnail}\r\n          preview={preview}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DrawWrapper: FC<{\r\n  drawState: DrawState;\r\n  otherStates?: DrawState[];\r\n  updateState?: (ds: DrawState) => void;\r\n  preview?: boolean;\r\n  imgSrc?: string;\r\n}> = ({ drawState, updateState, otherStates, preview = false, imgSrc }) => {\r\n  const drawCtrl = useDrawCtrl();\r\n  const [activeTool, setActiveTool] = useState<ActiveToolKey>(\"\");\r\n  const drawRef = useRef<DrawRefType>(null);\r\n\r\n  const handleChange = useEvent(\r\n    (arg: ((s: DrawState) => DrawState) | DrawState) => {\r\n      if (!updateState) return;\r\n      const newDS = arg instanceof DrawState ? arg : arg(drawState);\r\n      if (newDS === drawState) return;\r\n      updateState(newDS);\r\n    }\r\n  );\r\n\r\n  return preview ? (\r\n    <Draw\r\n      drawState={drawState}\r\n      otherStates={otherStates}\r\n      imgSrc={imgSrc}\r\n      readonly\r\n    />\r\n  ) : (\r\n    <>\r\n      <Draw\r\n        drawState={drawState}\r\n        otherStates={otherStates}\r\n        onChange={handleChange}\r\n        imgSrc={imgSrc}\r\n        drawCtrl={drawCtrl}\r\n        ref={drawRef}\r\n        setActiveTool={setActiveTool}\r\n      />\r\n      <SelectTool drawRef={drawRef} visible={activeTool === \"select\"} />\r\n      <TextTool drawRef={drawRef} visible={activeTool === \"text\"} />\r\n    </>\r\n  );\r\n};\r\nDrawWrapper.displayName = \"DrawWrapper\";\r\n","import { io } from \"socket.io-client\";\r\nimport { Stroke } from \"../draw/DrawState\";\r\nimport { NotePage } from \"../note/note\";\r\nimport { getUserID, getUserName } from \"../user\";\r\nimport { BASE_URL } from \"./http\";\r\n\r\nexport const IoFactory = (noteID: string) => () =>\r\n  io(BASE_URL, {\r\n    query: {\r\n      userID: getUserID(),\r\n      userName: getUserName(),\r\n      noteID,\r\n    },\r\n  });\r\n\r\nexport interface ReorderInfo {\r\n  pageOrder: string[];\r\n  prevOrder: string[];\r\n  deleted: boolean;\r\n}\r\n\r\nexport interface NewPageInfo {\r\n  pageOrder: string[];\r\n  pageID: string;\r\n  newPage: NotePage;\r\n}\r\n\r\nexport interface SyncInfo {\r\n  stroke: Stroke;\r\n  pageID: string;\r\n}\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  getTeamNoteState,\r\n  loadTeamNoteInfo,\r\n  updatePages,\r\n} from \"../../lib/network/http\";\r\nimport { LoginOutlined, LogoutOutlined } from \"@ant-design/icons\";\r\nimport { IoFactory, NewPageInfo } from \"../../lib/network/io\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { TeamState } from \"../../lib/draw/TeamState\";\r\nimport { getUserID, UserInfo } from \"../../lib/user\";\r\nimport { NotePage } from \"../../lib/note/note\";\r\nimport { Socket } from \"socket.io-client\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { Loading } from \"../ui/Loading\";\r\nimport { message } from \"antd\";\r\nimport { Set } from \"immutable\";\r\nimport Reader from \"./Reader\";\r\n\r\nexport const TeamCtx = React.createContext({\r\n  io: undefined as Socket | undefined,\r\n  code: 0,\r\n  teamOn: false,\r\n  connected: false,\r\n  ignores: Set<string>(),\r\n  userRec: {} as Record<string, UserInfo>,\r\n  teamState: undefined as TeamState | undefined,\r\n  resetIO: () => {},\r\n  loadInfo: async () => false,\r\n  loadState: async () => false,\r\n  setIgnores: (() => {}) as Setter<Set<string>>,\r\n  addTeamStatePage: (pageID: string, newPage: NotePage) => {},\r\n});\r\n\r\nexport default function Team() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const [teamState, setTeamState] = useState<TeamState>();\r\n  const [code, setCode] = useState(-2);\r\n  const [userRec, setUserRec] = useState<Record<string, UserInfo>>({});\r\n  const [ignores, setIgnores] = useState(Set<string>());\r\n  const [io, setIO] = useState(IoFactory(noteID));\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [connected, setConnected] = useState(false);\r\n  const nav = useNavigate();\r\n\r\n  const loadInfo = useCallback(async () => {\r\n    const info = await loadTeamNoteInfo(noteID);\r\n    if (!info) {\r\n      message.error(\"Failed loading the team note info\");\r\n      return false;\r\n    }\r\n    setCode(info.code);\r\n    return true;\r\n  }, [noteID]);\r\n\r\n  const loadState = useCallback(async () => {\r\n    const teamNote = await getTeamNoteState(noteID);\r\n    if (!teamNote) {\r\n      message.error(\"Failed loading the team note state\");\r\n      return false;\r\n    }\r\n    setTeamState(TeamState.createFromTeamPages(teamNote));\r\n    return true;\r\n  }, [noteID]);\r\n\r\n  const updateSelfState = useCallback(() => {\r\n    updatePages(noteID);\r\n  }, [noteID]);\r\n\r\n  useEffect(() => {\r\n    const roomInit = async () => {\r\n      const infoLoaded = await loadInfo();\r\n      const stateLoaded = await loadState();\r\n      if (!infoLoaded || !stateLoaded) return nav(\"/\");\r\n      setLoaded(true);\r\n      updateSelfState();\r\n    };\r\n    roomInit();\r\n    return updateSelfState;\r\n  }, [loadInfo, loadState, nav, updateSelfState]);\r\n\r\n  useEffect(() => {\r\n    io.on(\"push\", ({ operation, userID }) => {\r\n      setTeamState((prev) => prev?.pushOperation(operation, userID));\r\n    });\r\n\r\n    io.on(\"join\", ({ joined, members }) => {\r\n      const { userID, userName } = joined;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return;\r\n      showJoinMsg(userID, userName);\r\n    });\r\n\r\n    io.on(\"leave\", ({ leaved, members }) => {\r\n      const { userID, userName } = leaved;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return io.emit(\"join\");\r\n      showLeaveMsg(userID, userName);\r\n    });\r\n\r\n    io.on(\"newPage\", (info: NewPageInfo) => {\r\n      const { pageID, newPage } = info;\r\n      setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n    });\r\n\r\n    io.on(\"reset\", ({ userID, pageRec }) => {\r\n      if (userID === getUserID()) return;\r\n      setTeamState((prev) => prev?.resetUser(userID, pageRec));\r\n    });\r\n\r\n    io.on(\"connect_error\", console.error);\r\n    io.on(\"connect\", () => setConnected(true));\r\n    io.on(\"disconnect\", () => setConnected(false));\r\n\r\n    return () => {\r\n      io.removeAllListeners();\r\n      io.close();\r\n    };\r\n  }, [io]);\r\n\r\n  const addTeamStatePage = (pageID: string, newPage: NotePage) => {\r\n    setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n  };\r\n\r\n  const resetIO = () => setIO(IoFactory(noteID));\r\n\r\n  return (\r\n    <Loading loading={!loaded}>\r\n      <TeamCtx.Provider\r\n        value={{\r\n          io,\r\n          code,\r\n          teamOn: true,\r\n          ignores,\r\n          userRec,\r\n          connected,\r\n          teamState,\r\n          resetIO,\r\n          loadInfo,\r\n          loadState,\r\n          setIgnores,\r\n          addTeamStatePage,\r\n        }}\r\n      >\r\n        <Reader />\r\n      </TeamCtx.Provider>\r\n    </Loading>\r\n  );\r\n}\r\n\r\nconst showJoinMsg = (userID: string, userName: string) => {\r\n  message.destroy(userID);\r\n  message.success({\r\n    content: `${userName} joined room`,\r\n    icon: <LoginOutlined />,\r\n    key: userID,\r\n  });\r\n};\r\n\r\nconst showLeaveMsg = (userID: string, userName: string) => {\r\n  message.destroy(userID);\r\n  message.warning({\r\n    content: `${userName} leaved room`,\r\n    icon: <LogoutOutlined />,\r\n    key: userID,\r\n  });\r\n};\r\n","import classNames from \"classnames\";\nimport { FC } from \"react\";\nimport './circle.sass'\n\nexport const ColorCirle: FC<{ color: string; className?: string }> = ({\n  color,\n  className,\n}) => {\n  const style = { backgroundColor: color };\n  return (\n    <div className={classNames(\"color-circle\", className)} style={style} />\n  );\n};\n","import { CSSProperties } from \"react\";\r\nimport hash from \"string-hash\";\r\nexport const colors = [\r\n  \"#f97316\",\r\n  \"#eab308\",\r\n  \"#84cc16\",\r\n  \"#22c55e\",\r\n  \"#10b981\",\r\n  \"#14b8a6\",\r\n  \"#06b6d4\",\r\n  \"#0ea5e9\",\r\n  \"#3b82f6\",\r\n  \"#6366f1\",\r\n  \"#8b5cf6\",\r\n  \"#a855f7\",\r\n  \"#d946ef\",\r\n  \"#ec4899\",\r\n  \"#f43f5e\",\r\n  \"#ef4444\",\r\n];\r\n\r\nexport const grayColors = [\"#000000\", \"#9ca3af\", \"#64748b\", \"#78716c\"];\r\nexport const allColors = [...grayColors, ...colors];\r\n\r\nexport const getRandomColor = () => {\r\n  const index = Math.floor(Math.random() * colors.length);\r\n  return colors[index]!;\r\n};\r\n\r\nexport const getHashedColor = (str: string) => {\r\n  const index = hash(str) % colors.length;\r\n  return colors[index];\r\n};\r\n\r\nconst colorPalette: Record<string, { light: string; dark: string }> = {\r\n  \"#f97316\": { light: \"#FFEDD5\", dark: \"#9A3412\" },\r\n  \"#eab308\": { light: \"#FEF9C3\", dark: \"#854D0E\" },\r\n  \"#84cc16\": { light: \"#ECFCCB\", dark: \"#3F6212\" },\r\n  \"#22c55e\": { light: \"#DCFCE7\", dark: \"#166534\" },\r\n  \"#10b981\": { light: \"#D1FAE5\", dark: \"#065F46\" },\r\n  \"#14b8a6\": { light: \"#CCFBF1\", dark: \"#115E59\" },\r\n  \"#06b6d4\": { light: \"#CFFAFE\", dark: \"#155E75\" },\r\n  \"#0ea5e9\": { light: \"#E0F2FE\", dark: \"#075985\" },\r\n  \"#3b82f6\": { light: \"#DBEAFE\", dark: \"#1E40AF\" },\r\n  \"#6366f1\": { light: \"#E0E7FF\", dark: \"#3730A3\" },\r\n  \"#8b5cf6\": { light: \"#EDE9FE\", dark: \"#5B21B6\" },\r\n  \"#a855f7\": { light: \"#F3E8FF\", dark: \"#6B21A8\" },\r\n  \"#d946ef\": { light: \"#FAE8FF\", dark: \"#86198F\" },\r\n  \"#ec4899\": { light: \"#FCE7F3\", dark: \"#9D174D\" },\r\n  \"#f43f5e\": { light: \"#FFE4E6\", dark: \"#9F1239\" },\r\n  \"#ef4444\": { light: \"#FEE2E2\", dark: \"#991B1B\" },\r\n};\r\n\r\nexport const getColorPalette = (color: string) => {\r\n  const palette = colorPalette[color] ?? { light: \"#E5E7EB\", dark: \"#374151\" };\r\n  return {\r\n    \"--light-color\": palette.light,\r\n    \"--dark-color\": palette.dark,\r\n  } as CSSProperties;\r\n};\r\n","import { List, Record, OrderedMap, Map } from \"immutable\";\r\nimport { v4 } from \"uuid\";\r\nimport Heap from \"heap\";\r\n\r\nexport const WIDTH = 2000;\r\n\r\nexport interface Stroke {\r\n  uid: string;\r\n  pathData: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport type StrokeRecord = globalThis.Record<string, Stroke>;\r\nexport type Mutation = [string, string];\r\nexport type Splitter = [string, string[]];\r\n\r\nexport type Operation =\r\n  | {\r\n      type: \"add\";\r\n      stroke: Stroke;\r\n    }\r\n  | {\r\n      type: \"erase\";\r\n      erased: string[];\r\n    }\r\n  | {\r\n      type: \"mutate\";\r\n      mutations: Mutation[];\r\n    }\r\n  | {\r\n      type: \"split\";\r\n      splitters: Splitter[];\r\n    }\r\n  | {\r\n      type: \"undo\";\r\n    }\r\n  | {\r\n      type: \"redo\";\r\n    };\r\n\r\ninterface DrawStateRecordType {\r\n  strokes: OrderedMap<string, Stroke>;\r\n  undoStack: List<DrawStateRecord>;\r\n  historyStack: List<DrawStateRecord>;\r\n}\r\n\r\ntype DrawStateRecord = Record<DrawStateRecordType>;\r\n\r\nconst defaultRecord: Readonly<DrawStateRecordType> = {\r\n  strokes: OrderedMap(),\r\n  undoStack: List(),\r\n  historyStack: List(),\r\n};\r\n\r\nconst defaultFactory = Record(defaultRecord);\r\n\r\nexport interface FlatState {\r\n  strokes: StrokeRecord;\r\n  operations?: Operation[];\r\n}\r\n\r\nexport const getDefaultFlatState = (): FlatState => {\r\n  return { strokes: {} };\r\n};\r\n\r\nexport class DrawState {\r\n  constructor(\r\n    private immutable: DrawStateRecord,\r\n    public readonly width: number,\r\n    public readonly height: number,\r\n    public lastOp?: Operation\r\n  ) {}\r\n\r\n  getImmutable() {\r\n    return this.immutable;\r\n  }\r\n\r\n  getUndoStack() {\r\n    return this.getImmutable().get(\"undoStack\");\r\n  }\r\n\r\n  getHistoryStack() {\r\n    return this.getImmutable().get(\"historyStack\");\r\n  }\r\n\r\n  getStrokeMap() {\r\n    return this.getImmutable().get(\"strokes\");\r\n  }\r\n\r\n  getStrokeList(): Stroke[] {\r\n    return this.getStrokeMap()\r\n      .toArray()\r\n      .map(([_, stroke]) => stroke);\r\n  }\r\n\r\n  getLastStroke() {\r\n    return this.getStrokeMap().last();\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.getStrokeMap().size === 0;\r\n  }\r\n\r\n  hasStroke(uid: string) {\r\n    return this.getStrokeMap().has(uid);\r\n  }\r\n\r\n  static createEmpty(ratio: number, width = WIDTH) {\r\n    return new DrawState(defaultFactory(), width, width * ratio);\r\n  }\r\n\r\n  static undo(drawState: DrawState) {\r\n    const lastOp: Operation = { type: \"undo\" };\r\n    const lastRecord = drawState.getHistoryStack().last();\r\n    if (!lastRecord) return drawState;\r\n    const undoStack = drawState\r\n      .getUndoStack()\r\n      .unshift(drawState.getImmutable());\r\n    return new DrawState(\r\n      lastRecord.set(\"undoStack\", undoStack),\r\n      drawState.width,\r\n      drawState.height,\r\n      lastOp\r\n    );\r\n  }\r\n\r\n  static redo(drawState: DrawState) {\r\n    const lastOp: Operation = { type: \"redo\" };\r\n\r\n    const nextRecord = drawState.getUndoStack().first();\r\n    if (!nextRecord) return drawState;\r\n    return new DrawState(nextRecord, drawState.width, drawState.height, lastOp);\r\n  }\r\n\r\n  static addStroke(drawState: DrawState, pathData: string) {\r\n    const uid = DrawState.getUid();\r\n    const timestamp = Date.now();\r\n    const stroke = { pathData, uid, timestamp };\r\n    return DrawState.pushStroke(drawState, stroke);\r\n  }\r\n\r\n  static pushStroke(drawState: DrawState, stroke: Stroke) {\r\n    const { uid } = stroke;\r\n    const prevRecord = drawState.getImmutable();\r\n    const currRecord = prevRecord\r\n      .update(\"strokes\", (s) => s.set(uid, stroke))\r\n      .update(\"historyStack\", (s) => s.push(prevRecord))\r\n      .delete(\"undoStack\");\r\n\r\n    const lastOp: Operation = { type: \"add\", stroke };\r\n\r\n    return new DrawState(currRecord, drawState.width, drawState.height, lastOp);\r\n  }\r\n\r\n  static eraseStrokes(drawState: DrawState, erased: string[]) {\r\n    if (erased.length === 0) return drawState;\r\n    const prevRecord = drawState.getImmutable();\r\n    const currRecord = prevRecord\r\n      .update(\"strokes\", (m) => m.deleteAll(erased))\r\n      .update(\"historyStack\", (s) => s.push(prevRecord))\r\n      .delete(\"undoStack\");\r\n\r\n    const lastOp: Operation = { type: \"erase\", erased };\r\n\r\n    return new DrawState(currRecord, drawState.width, drawState.height, lastOp);\r\n  }\r\n\r\n  static mutateStrokes(drawState: DrawState, mutations: Mutation[]) {\r\n    if (mutations.length === 0) return drawState;\r\n    const prevRecord = drawState.getImmutable();\r\n    let strokes = drawState.getStrokeMap();\r\n    mutations.forEach(\r\n      ([uid, pathData]) =>\r\n        (strokes = strokes.update(\r\n          uid,\r\n          { uid, pathData, timestamp: Date.now() },\r\n          (s) => ({ ...s, pathData })\r\n        ))\r\n    );\r\n    const currRecord = prevRecord\r\n      .set(\"strokes\", strokes)\r\n      .update(\"historyStack\", (s) => s.push(prevRecord))\r\n      .delete(\"undoStack\");\r\n\r\n    const lastOp: Operation = { type: \"mutate\", mutations };\r\n\r\n    return new DrawState(currRecord, drawState.width, drawState.height, lastOp);\r\n  }\r\n\r\n  static splitStrokes(drawState: DrawState, splitters: Splitter[]) {\r\n    if (splitters.length === 0) return drawState;\r\n    const splitMap = Map(splitters);\r\n    let strokes = OrderedMap<string, Stroke>();\r\n    const prevStrokes = drawState.getStrokeMap();\r\n    prevStrokes.forEach((stroke, prevUid) => {\r\n      const splitStrokes = splitMap.get(prevUid);\r\n      if (splitStrokes) {\r\n        splitStrokes.forEach((pathData, index) => {\r\n          const uid = prevUid + \"-\" + index;\r\n          const { timestamp } = stroke;\r\n          strokes = strokes.set(uid, { pathData, timestamp, uid });\r\n        });\r\n      } else {\r\n        strokes = strokes.set(prevUid, stroke);\r\n      }\r\n    });\r\n    const prevRecord = drawState.getImmutable();\r\n    const currRecord = prevRecord\r\n      .set(\"strokes\", strokes)\r\n      .update(\"historyStack\", (s) => s.push(prevRecord));\r\n    const lastOp: Operation = { type: \"split\", splitters };\r\n    return new DrawState(currRecord, drawState.width, drawState.height, lastOp);\r\n  }\r\n\r\n  // sync with mutation.\r\n  static syncStrokeTime(drawState: DrawState, stroke: Stroke) {\r\n    const { uid, timestamp } = stroke;\r\n    const prevStroke = drawState.getStrokeMap().get(uid);\r\n    if (!prevStroke) return;\r\n    prevStroke.timestamp = timestamp;\r\n  }\r\n\r\n  static pushOperation(drawState: DrawState, op: Operation) {\r\n    switch (op.type) {\r\n      case \"add\":\r\n        return DrawState.pushStroke(drawState, op.stroke);\r\n      case \"erase\":\r\n        return DrawState.eraseStrokes(drawState, op.erased);\r\n      case \"mutate\":\r\n        return DrawState.mutateStrokes(drawState, op.mutations);\r\n      case \"undo\":\r\n        return DrawState.undo(drawState);\r\n      case \"redo\":\r\n        return DrawState.redo(drawState);\r\n      case \"split\":\r\n        return DrawState.splitStrokes(drawState, op.splitters);\r\n    }\r\n  }\r\n\r\n  static flaten(drawState: DrawState): FlatState {\r\n    const strokes = drawState.getImmutable().get(\"strokes\").toObject();\r\n    return { strokes };\r\n  }\r\n\r\n  static loadFromFlat(\r\n    flatState: FlatState,\r\n    ratio: number,\r\n    width = WIDTH\r\n  ): DrawState {\r\n    const { strokes, operations } = flatState;\r\n    let ds = new DrawState(\r\n      defaultFactory().set(\"strokes\", OrderedMap(strokes)),\r\n      width,\r\n      width * ratio\r\n    );\r\n    operations?.forEach((op) => (ds = DrawState.pushOperation(ds, op)));\r\n    return ds;\r\n  }\r\n\r\n  static mergeStates(...states: DrawState[]): Stroke[] {\r\n    const iterators = states.map((ds) => ds.getStrokeMap().values());\r\n    const mergedStrokes = [];\r\n    const heap = new Heap<[Stroke, number]>(\r\n      ([s0], [s1]) => s0.timestamp - s1.timestamp\r\n    );\r\n\r\n    iterators.forEach((iter, index) => {\r\n      const { value, done } = iter.next();\r\n      done || heap.push([value, index]);\r\n    });\r\n\r\n    while (heap.size() > 0) {\r\n      const record = heap.pop();\r\n      if (!record) break;\r\n      const [stroke, index] = record;\r\n      mergedStrokes.push(stroke);\r\n\r\n      const iterator = iterators[index];\r\n      if (!iterator) break;\r\n      const { value, done } = iterator.next();\r\n      done || heap.push([value, index]);\r\n    }\r\n    return mergedStrokes;\r\n  }\r\n\r\n  static getUid() {\r\n    return v4();\r\n  }\r\n}\r\n","import { NotePage, TeamPage, TeamPageInfo } from \"../note/note\";\nimport { DrawState } from \"./DrawState\";\nimport { SetOperation } from \"./StateSet\";\nimport { Map, Record } from \"immutable\";\n\ninterface TeamStateRecordType {\n  pageStates: Map<string, Map<string, DrawState>>;\n  pageInfos: Map<string, TeamPageInfo>;\n}\n\nconst defaultRecord: Readonly<TeamStateRecordType> = {\n  pageStates: Map(),\n  pageInfos: Map(),\n};\n\ntype TeamStateRecord = Record<TeamStateRecordType>;\nconst defaultFactory = Record(defaultRecord);\n\nexport class TeamState {\n  constructor(private immutable: TeamStateRecord) {}\n\n  getImmutable() {\n    return this.immutable;\n  }\n\n  getPageStates() {\n    return this.getImmutable().get(\"pageStates\");\n  }\n\n  getPageInfos() {\n    return this.getImmutable().get(\"pageInfos\");\n  }\n\n  getOneState(pageID: string, userID: string) {\n    return this.getPageStates().get(pageID)?.get(userID);\n  }\n\n  getOnePageStateMap(pageID: string) {\n    return this.getPageStates().get(pageID);\n  }\n\n  getPageValidUsers(pageID: string) {\n    const map = this.getOnePageStateMap(pageID);\n    if (!map) return [];\n    return Array.from(map.filter((ds) => !ds.isEmpty()).keys());\n  }\n\n  getPageRatio(pageID: string) {\n    return this.getPageInfos().get(pageID)?.ratio;\n  }\n\n  includesPage(pageID: string) {\n    return this.getPageStates().has(pageID);\n  }\n\n  setState(pageID: string, userID: string, drawState: DrawState) {\n    const pageMap = this.getPageStates().get(pageID);\n    if (!pageMap) return this;\n    return new TeamState(\n      this.getImmutable().update(\"pageStates\", (m) =>\n        m.set(pageID, pageMap.set(userID, drawState))\n      )\n    );\n  }\n\n  static createFromTeamPages(teamPages: globalThis.Record<string, TeamPage>) {\n    let record = defaultFactory();\n    Object.entries(teamPages).forEach(([pageID, teamPage]) => {\n      const { states, ratio } = teamPage;\n      const pageMap = Map(\n        Object.entries(states).map(([userID, flatState]) => [\n          userID,\n          DrawState.loadFromFlat(flatState, ratio),\n        ])\n      );\n      record = record\n        .update(\"pageStates\", (m) => m.set(pageID, pageMap))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }));\n    });\n    return new TeamState(record);\n  }\n\n  addPage(pageID: string, notePage: NotePage) {\n    const { ratio } = notePage;\n    return new TeamState(\n      this.getImmutable()\n        .update(\"pageStates\", (m) => m.set(pageID, Map()))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }))\n    );\n  }\n\n  pushOperation(setOp: SetOperation, userID: string) {\n    const { pageID, ...op } = setOp;\n    const ratio = this.getPageRatio(pageID);\n    if (!this.includesPage(pageID) || !ratio) return this;\n    const prevDs =\n      this.getOneState(pageID, userID) || DrawState.createEmpty(ratio);\n\n    const ds = DrawState.pushOperation(prevDs, op);\n    return this.setState(pageID, userID, ds);\n  }\n\n  resetUser(userID: string, pageRec: globalThis.Record<string, NotePage>) {\n    let newTS: TeamState = this;\n    for (let [pageID, { state, ratio }] of Object.entries(pageRec)) {\n      const prevDS = newTS.getOneState(pageID, userID);\n      if (!prevDS) continue;\n      newTS = newTS.setState(\n        pageID,\n        userID,\n        DrawState.loadFromFlat(state, ratio)\n      );\n    }\n    return newTS;\n  }\n}\n","export function createVirtualCanvas(width: number, height: number) {\r\n  const canvas = document.createElement(\"canvas\");\r\n  const context = canvas.getContext(\"2d\");\r\n  if (!context) {\r\n    throw new Error(\"can't get virtual canvas context\");\r\n  }\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n  return { canvas, context };\r\n}\r\n\r\nexport function releaseCanvas(canvas: HTMLCanvasElement) {\r\n  canvas.width = 1;\r\n  canvas.height = 1;\r\n  const ctx = canvas.getContext('2d');\r\n  ctx?.clearRect(0, 0, 1, 1);\r\n}\r\n","import React, {\r\n  createContext,\r\n  Dispatch,\r\n  FC,\r\n  SetStateAction,\r\n  TransitionEventHandler,\r\n  useContext,\r\n  useDebugValue,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\n\r\nexport type Setter<T> = Dispatch<SetStateAction<T>>;\r\n\r\nexport function useTransitionEnd({\r\n  propertyName,\r\n  active = true,\r\n}: {\r\n  propertyName: string;\r\n  active?: boolean;\r\n}): [Promise<void>, TransitionEventHandler] {\r\n  const resRef = useRef(() => {});\r\n  const [promise] = useState(\r\n    () => new Promise<void>((res) => (resRef.current = res))\r\n  );\r\n  return [\r\n    promise,\r\n    (e) => {\r\n      if (e.propertyName === propertyName && active) resRef.current();\r\n    },\r\n  ];\r\n}\r\n\r\nconst ActiveKeyCtx = createContext<[string, Setter<string>]>([\"\", () => {}]);\r\nexport function useActiveKey() {\r\n  const tuple = useContext(ActiveKeyCtx);\r\n  useDebugValue(tuple[0]);\r\n  return tuple;\r\n}\r\n\r\nexport const ActiveKeyProvider: FC<{ initKey: string }> = ({\r\n  children,\r\n  initKey,\r\n}) => {\r\n  const tuple = useState(initKey);\r\n  return (\r\n    <ActiveKeyCtx.Provider value={tuple}>{children}</ActiveKeyCtx.Provider>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  removePageTimg,\r\n  TeamNoteInfo,\r\n  TeamPage,\r\n  TeamPageInfo,\r\n} from \"../note/note\";\r\nimport { loadNote, saveTeamNote, updateTeamNote } from \"../note/archive\";\r\nimport { getUserID } from \"../user\";\r\nimport localforage from \"localforage\";\r\n\r\nexport let BASE_URL = \"https://api.slotdumpling.top/paint\";\r\n// BASE_URL = \"http://192.168.1.14:8090/paint\";\r\naxios.defaults.baseURL = BASE_URL;\r\n\r\nexport async function getNoteID(roomCode: string) {\r\n  try {\r\n    const { data } = await axios.get(`code/${roomCode}`);\r\n    console.log({ data });\r\n    if (data.statusCode !== 200) return null;\r\n    return data.noteID as string;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n}\r\n\r\ninterface InfoRes {\r\n  statusCode: number;\r\n  code: number;\r\n  noteInfo: TeamNoteInfo;\r\n  pageInfos: Record<string, TeamPageInfo>;\r\n}\r\n\r\nexport async function getTeamNoteInfo(noteID: string) {\r\n  try {\r\n    const { data } = await axios.get(`info/${noteID}`);\r\n    const { statusCode, ...res } = data as InfoRes;\r\n    if (statusCode !== 200) return null;\r\n    return res;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function loadTeamNoteInfo(noteID: string) {\r\n  try {\r\n    const infoRes = await getTeamNoteInfo(noteID);\r\n    if (!infoRes) return null;\r\n    const { noteInfo, pageInfos } = infoRes;\r\n\r\n    if (await updateTeamNote(noteID, noteInfo, pageInfos)) return infoRes;\r\n\r\n    if (noteInfo.withImg) {\r\n      const { data } = await axios({\r\n        method: \"GET\",\r\n        url: noteID,\r\n        responseType: \"blob\",\r\n      });\r\n      const file = new Blob([data], { type: \"application/pdf\" });\r\n      await saveTeamNote(noteID, noteInfo, pageInfos, file);\r\n    } else {\r\n      await saveTeamNote(noteID, noteInfo, pageInfos);\r\n    }\r\n    return infoRes;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function putNote(noteID: string) {\r\n  const note = await loadNote(noteID);\r\n  if (!note) return false;\r\n  const { uid, name, withImg, pdf, pageOrder, pageRec } = note;\r\n  removePageTimg(pageRec);\r\n\r\n  try {\r\n    const { data } = await axios.put(`create/${noteID}`, {\r\n      userID: getUserID(),\r\n      pageRec,\r\n      noteInfo: { uid, name, withImg, pageOrder },\r\n    });\r\n\r\n    if (pdf) {\r\n      const formData = new FormData();\r\n      const ab = await pdf.arrayBuffer();\r\n      const file = new Blob([ab]);\r\n      formData.append(\"file\", file, noteID);\r\n      await axios({\r\n        method: \"POST\",\r\n        url: \"upload\",\r\n        data: formData,\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n    }\r\n\r\n    if (data.statusCode !== 201) return false;\r\n    return true;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function updatePages(noteID: string) {\r\n  const note = await loadNote(noteID);\r\n  if (!note) return null;\r\n  const { uid, name, withImg, pageOrder, pageRec } = note;\r\n  removePageTimg(pageRec);\r\n\r\n  try {\r\n    const { data } = await axios.put(`update/${noteID}`, {\r\n      userID: getUserID(),\r\n      pageRec,\r\n      noteInfo: { uid, name, withImg, pageOrder },\r\n    });\r\n    if (data.statusCode === 201) return true;\r\n    else return false;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return false;\r\n  }\r\n}\r\n\r\nconst teamForage = localforage.createInstance({ name: \"teamState\" });\r\nexport async function getTeamNoteState(noteID: string) {\r\n  try {\r\n    const { data } = await axios.get(`state/${noteID}`, {\r\n      params: { userID: getUserID() },\r\n    });\r\n    if (data.statusCode !== 200) return null;\r\n    const { teamPages } = data;\r\n    teamForage.setItem(noteID, teamPages);\r\n    return teamPages as Record<string, TeamPage>;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function getCachedTeamState(noteID: string) {\r\n  return teamForage.getItem<Record<string, TeamPage>>(noteID);\r\n}\r\n","import { Note, NoteInfo, NotePage, TeamNoteInfo, TeamPageInfo } from \"./note\";\r\nimport { getDefaultFlatState } from \"../draw/DrawState\";\r\nimport localforage from \"localforage\";\r\nimport { v4 as getUid } from \"uuid\";\r\nimport { pickBy } from \"lodash-es\";\r\n\r\nexport interface NoteTag {\r\n  uid: string;\r\n  name: string;\r\n  color: string;\r\n  notes: string[];\r\n}\r\n\r\nexport async function getAllNotes() {\r\n  const allNotes = await localforage.getItem<Record<string, NoteInfo>>(\r\n    \"ALL_NOTES\"\r\n  );\r\n  if (allNotes) return allNotes;\r\n  localforage.setItem(\"ALL_NOTES\", {});\r\n  return {};\r\n}\r\n\r\nexport async function getAllTags() {\r\n  const tags = await localforage.getItem<Record<string, NoteTag>>(\"ALL_TAGS\");\r\n  if (tags) return tags;\r\n  localforage.setItem(\"ALL_TAGS\", {});\r\n  return {};\r\n}\r\n\r\nexport async function addNewTag(name: string, color: string) {\r\n  const uid = getUid();\r\n  const newTag: NoteTag = {\r\n    uid,\r\n    name,\r\n    color,\r\n    notes: [],\r\n  };\r\n  const prevTags = await getAllTags();\r\n  const tags = { ...prevTags, [uid]: newTag };\r\n  await localforage.setItem(\"ALL_TAGS\", tags);\r\n\r\n  return tags;\r\n}\r\n\r\nexport async function deleteTag(uid: string) {\r\n  const prevTags = await getAllTags();\r\n  const { [uid]: _, ...tags } = prevTags;\r\n  await localforage.setItem(\"ALL_TAGS\", tags);\r\n\r\n  return tags;\r\n}\r\n\r\nexport async function editTag(tag: NoteTag) {\r\n  const prevTags = await getAllTags();\r\n  const tags = { ...prevTags, [tag.uid]: tag };\r\n  await localforage.setItem(\"ALL_TAGS\", tags);\r\n  return tags;\r\n}\r\n\r\nexport async function loadNote(uid: string) {\r\n  const note = await localforage.getItem<Note>(uid);\r\n  if (!note) return;\r\n  const pdf = await localforage.getItem<Blob>(`PDF_${uid}`);\r\n  if (pdf) return { ...note, pdf };\r\n  else return note;\r\n}\r\n\r\nexport async function editNoteData(uid: string, noteData: Partial<Note>) {\r\n  noteData = pickBy(noteData, (v) => v !== undefined);\r\n  if (\"pageRec\" in noteData) noteData.lastTime = Date.now();\r\n\r\n  const allNotes = await getAllNotes();\r\n  const { pageRec, pageOrder, ...noteInfo } = noteData;\r\n  const prevNoteInfo = allNotes[uid];\r\n  if (!prevNoteInfo) return;\r\n  allNotes[uid] = { ...prevNoteInfo, ...noteInfo };\r\n\r\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\r\n  const prevNote = await loadNote(uid);\r\n  if (!prevNote) return;\r\n  await localforage.setItem(uid, { ...prevNote, ...noteData });\r\n}\r\n\r\nexport async function saveNoteInfo(noteInfo: NoteInfo) {\r\n  const { uid, tagID } = noteInfo;\r\n  const allNotes = await getAllNotes();\r\n  allNotes[uid] = noteInfo;\r\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\r\n  const tags = await getAllTags();\r\n  const tag = tags[tagID];\r\n  if (tag) {\r\n    tag.notes.push(noteInfo.uid);\r\n    await localforage.setItem(\"ALL_TAGS\", tags);\r\n  }\r\n  return { tags, allNotes };\r\n}\r\n\r\nexport async function createNewNote(noteWithPdf: Note) {\r\n  const { pdf, ...note } = noteWithPdf;\r\n  await localforage.setItem(note.uid, note);\r\n  if (pdf) await localforage.setItem(`PDF_${note.uid}`, pdf);\r\n  const { pageRec, pageOrder, ...noteInfo } = note;\r\n  return await saveNoteInfo(noteInfo);\r\n}\r\n\r\nexport async function deleteNote(uid: string) {\r\n  const note = await loadNote(uid);\r\n  const allNotes = await getAllNotes();\r\n  const tags = await getAllTags();\r\n  if (!note) return { tags, allNotes };\r\n  await localforage.removeItem(uid);\r\n  await localforage.removeItem(`PDF_${uid}`);\r\n  delete allNotes[uid];\r\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\r\n\r\n  const { tagID } = note;\r\n  const prevTag = tags[tagID];\r\n  if (prevTag) {\r\n    prevTag.notes = prevTag.notes.filter((id) => id !== uid);\r\n    await localforage.setItem(\"ALL_TAGS\", tags);\r\n  }\r\n  return { tags, allNotes };\r\n}\r\n\r\nexport async function moveNoteTag(noteID: string, tagID: string) {\r\n  const note = await loadNote(noteID);\r\n  const allNotes = await getAllNotes();\r\n  const tags = await getAllTags();\r\n  const noteInfo = allNotes[noteID];\r\n  if (!note || !noteInfo) return { tags, allNotes };\r\n\r\n  const { tagID: prevTagId } = note;\r\n  note.tagID = tagID;\r\n  await localforage.setItem(noteID, note);\r\n  noteInfo.tagID = tagID;\r\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\r\n\r\n  const prevTag = tags[prevTagId];\r\n  if (prevTag) {\r\n    prevTag.notes = prevTag.notes.filter((id) => id !== noteID);\r\n  }\r\n  tags[tagID]?.notes.push(noteID);\r\n  await localforage.setItem(\"ALL_TAGS\", tags);\r\n  return { tags, allNotes };\r\n}\r\n\r\nexport async function saveTeamNote(\r\n  noteID: string,\r\n  noteInfo: TeamNoteInfo,\r\n  teamPages: Record<string, TeamPageInfo>,\r\n  file?: Blob\r\n) {\r\n  let note = await loadNote(noteID);\r\n  if (note) return;\r\n  const time = Date.now();\r\n  const pageRec: Record<string, NotePage> = {};\r\n  note = {\r\n    ...noteInfo,\r\n    tagID: \"DEFAULT\",\r\n    team: true,\r\n    pageRec,\r\n    pdf: file,\r\n    createTime: time,\r\n    lastTime: time,\r\n  };\r\n\r\n  // set empty state for each page\r\n  Object.entries(teamPages).forEach(([pageID, page]) => {\r\n    pageRec[pageID] = { ...page, state: getDefaultFlatState() };\r\n  });\r\n\r\n  // parse timg for each page\r\n  if (file) {\r\n    const { getPDFImages } = await import(\"../note/pdfImage\");\r\n    const { images } = await getPDFImages(file, 0.5);\r\n    Object.values(pageRec).forEach((page) => {\r\n      const { pdfIndex } = page;\r\n      if (!pdfIndex) return;\r\n      page.image = images[pdfIndex - 1];\r\n    });\r\n  }\r\n\r\n  await createNewNote(note);\r\n}\r\n\r\nexport async function updateTeamNote(\r\n  noteID: string,\r\n  noteInfo: TeamNoteInfo,\r\n  pageInfos: Record<string, TeamPageInfo>\r\n) {\r\n  let note = await loadNote(noteID);\r\n  if (!note) return false;\r\n  const { pageOrder } = noteInfo;\r\n  if (pageOrder.length < note.pageOrder.length) return true;\r\n  const { pageRec, pdf } = note;\r\n  const { getOneImage } = await import(\"./pdfImage\");\r\n\r\n  // parse timgs & set empty states for new pages.\r\n  for (let [pageID, teamPage] of Object.entries(pageInfos)) {\r\n    if (pageID in pageRec) continue;\r\n    const { pdfIndex } = teamPage;\r\n    const state = getDefaultFlatState();\r\n    const notePage: NotePage = { ...teamPage, state };\r\n    if (!pdf || !pdfIndex) continue;\r\n    notePage.image = await getOneImage(pdf, pdfIndex, 0.5);\r\n    pageRec[pageID] = notePage;\r\n  }\r\n  await editNoteData(noteID, { pageOrder, pageRec });\r\n  return true;\r\n}\r\n","import { getDefaultFlatState, FlatState } from \"../draw/DrawState\";\r\nimport { v4 as getUid } from \"uuid\";\r\nimport dayjs from \"dayjs\";\r\n\r\nexport interface NotePage {\r\n  ratio: number;\r\n  state: FlatState;\r\n  image?: string;\r\n  marked?: boolean;\r\n  pdfIndex?: number;\r\n}\r\n\r\nexport const defaultNotePage: Readonly<NotePage> = {\r\n  ratio: 1.5,\r\n  state: { strokes: {} },\r\n};\r\n\r\nexport interface TeamPageState {\r\n  states: Record<string, FlatState>;\r\n}\r\n\r\nexport interface TeamPageInfo {\r\n  ratio: number;\r\n  pdfIndex?: number;\r\n}\r\n\r\nexport type TeamPage = TeamPageInfo & TeamPageState;\r\n\r\nexport interface TeamNote {\r\n  uid: string;\r\n  pageRec: Record<string, TeamPage>;\r\n}\r\n\r\nexport interface NoteInfo {\r\n  uid: string;\r\n  name: string;\r\n  tagID: string;\r\n  team: boolean;\r\n  withImg: boolean;\r\n  createTime: number;\r\n  lastTime: number;\r\n}\r\n\r\nexport type Note = NoteInfo & {\r\n  pdf?: Blob;\r\n  pageRec: Record<string, NotePage>;\r\n  pageOrder: string[];\r\n};\r\n\r\nexport interface TeamNoteInfo {\r\n  uid: string;\r\n  name: string;\r\n  pageOrder: string[];\r\n  withImg: boolean;\r\n}\r\n\r\nexport function createEmptyNote(): Note {\r\n  const pageID = getUid();\r\n  const time = Date.now();\r\n  return {\r\n    uid: getUid(),\r\n    name: `Note ${dayjs(time).format(\"HH:mm, ddd MMM D\")}`,\r\n    tagID: \"DEFAULT\",\r\n    team: false,\r\n    withImg: false,\r\n    createTime: time,\r\n    lastTime: time,\r\n    pageRec: {\r\n      [pageID]: {\r\n        ratio: 1.5,\r\n        state: getDefaultFlatState(),\r\n      },\r\n    },\r\n    pageOrder: [pageID],\r\n  };\r\n}\r\n\r\nexport function createPage(page?: NotePage): [string, NotePage] {\r\n  const pageID = getUid();\r\n  const newPage = page ?? {\r\n    ratio: 1.5,\r\n    state: getDefaultFlatState(),\r\n  };\r\n  return [pageID, newPage];\r\n}\r\n\r\nexport function removePageTimg(pageRec: Record<string, NotePage>) {\r\n  Object.values(pageRec).forEach((page) => {\r\n    delete page.image;\r\n    delete page.marked;\r\n  });\r\n}\r\n","import { v4 as getUid } from \"uuid\";\r\n\r\nexport interface UserInfo {\r\n  userID: string;\r\n  userName: string;\r\n  online: boolean;\r\n}\r\n\r\nexport const getUserID = (() => {\r\n  let cached: string;\r\n  return () => {\r\n    if (cached) return cached;\r\n    let userID = localStorage.getItem(\"USER_ID\");\r\n    if (!userID) {\r\n      userID = getUid();\r\n      localStorage.setItem(\"USER_ID\", userID);\r\n    }\r\n    cached = userID;\r\n    return userID;\r\n  };\r\n})();\r\n\r\nexport const getUserName = () => {\r\n  let name = localStorage.getItem(\"USER_NAME\");\r\n  if (!name) {\r\n    name = getUid().slice(0, 8);\r\n    localStorage.setItem(\"USER_NAME\", name);\r\n  }\r\n  return name;\r\n};\r\n\r\nexport const saveUserName = (name: string) => {\r\n  name = name.trim();\r\n  if (!name) return false;\r\n  else localStorage.setItem(\"USER_NAME\", name);\r\n  return true;\r\n};\r\n"],"names":["defaultWidthList","defaultDrawCtrl","mode","finger","lineWidth","eraserWidth","color","highlight","lasso","pixelEraser","widthList","getDrawCtrl","localforage","drawCtrl","saveDrawCtrl","DrawCtrlContext","React","updateDrawCtrl","useDrawCtrl","useContext","useDebugValue","useUpdateDrawCtrl","DrawCtrlProvider","children","useState","setDrawCtrl","useEffect","then","Provider","value","updated","prev","newCtrl","defaultRecord","states","Map","editStack","List","undoStack","defaultFactory","Record","StateSet","immutable","lastOp","this","getImmutable","get","pageID","getStates","drawState","prevDS","getOneState","currRecord","update","s","set","l","push","delete","stroke","DrawState","notePage","state","ratio","newDS","getEditStack","size","getUndoStack","isUndoable","lastUid","last","lastSetOp","pop","isRedoable","ds","pageRec","map","usePreventTouch","allowFinger","isTouch","useRef","checkPoniter","e","isPrimary","current","pointerType","preventTouch","touch","touches","touchType","isApplePencil","length","isEventValid","stopPropagation","onPointerDownCapture","onPointerMoveCapture","onTouchStartCapture","onTouchMoveCapture","Path","paper","Size","Point","Group","Color","Raster","Layer","Draw","ref","otherStates","onChange","readonly","imgSrc","setActiveTool","width","height","canvasEl","scope","group","setGroup","usePaperItem","path","setPath","rect","setRect","rotateHandle","setRotateHandle","cvs","scp","setup","settings","handleSize","hitTolerance","forEach","project","addLayer","layers","activate","Tool","remove","releaseCanvas","bgRect","paintBackground","useSize","view","viewSize","multiply","scale","raster","addChild","sendToBack","onLoad","fitBounds","bringToFront","mergedStrokes","useMemo","getStrokeList","tempGroup","layer","self","hasStroke","uid","item","paintStroke","removeChildren","hitRef","selected","setSelected","paperMode","chosenIDs","setChosenIDs","chosenItems","IDSet","Set","filter","has","name","resetSelect","useCallback","undefined","downPath","startStroke","downRect","startRect","point","handleDown","draw","erase","select","contains","hitRes","hitTest","segments","text","t","getClickedText","startText","setPointText","dragPath","add","smooth","handleDrag","x","y","s1","s2","s3","segment","center","bounds","axis","subtract","angle","rotate","moveP","baseP","next","diagonal","strokeWidth","translate","delta","pointText","topCenter","bottomRight","tool","maxDistance","erased","replaced","handelToolDrag","hitTestAll","class","tolerance","topItem","parent","radius","circle","Circle","sub","trace","replaceWith","opacity","guide","handleUp","isEmpty","simplify","pathData","exportJSON","items","Array","from","clear","splitters","flattenCP","i","erasedList","selection","Math","abs","area","closePath","moveDash","checkLasso","link","lastSegment","updateMutation","cursor","setCursor","half","getCursorStyle","handleMove","handler","onMouseDown","onMouseDrag","onMouseUp","onMouseMove","mutations","p","deleteSelected","mutateStyle","updateGroupStyle","duplicateSelected","transP","divide","copies","clone","rasterize","g","addTo","insert","toDataURL","cancelText","submitText","justification","content","fillColor","useImperativeHandle","preventDefault","document","addEventListener","removeEventListener","usePinch","memo","offset","first","origin","lastScale","lastOrigin","elPos","originRawP","getBoundingClientRect","originViewP","originPorjP","viewToProject","dScale","aniCount","pow","scaleView","requestAnimationFrame","putCenterBack","zoom","scaleBounds","max","min","rubberband","target","touchHandler","className","style","displayName","tuple","importJSON","console","error","Rectangle","onFrame","strokeColor","alpha","blendMode","strokeJoin","strokeCap","dashOffset","dashArray","projSize","viewW","viewH","projW","projH","minX","minY","maxX","maxY","getCenterTranslate","deltaX","deltaY","dP","move","isInside","res","compare","intersects","checkedP","newColor","fill","fontSize","cp","flat","AddPageButton","addFinalPage","ReaderMethodCtx","type","icon","PlusOutlined","block","onClick","createFromIconfontCN","scriptUrl","PenPanel","panelBlur","setPanelBlur","WidthSelect","HighlightSwitch","checked","ColorSelect","setColor","c","field","currWidth","chosen","indexOf","popShow","setPopShow","includes","realSizeStyle","WIDTH","options","label","index","visible","onVisibleChange","v","trigger","placement","destroyTooltipOnHide","defaultValue","onAfterChange","w","newWL","slice","useForceLight","forceLight","allColors","backgroundColor","borderColor","SelectTool","drawRef","CSSTransition","timeout","in","unmountOnExit","SelectToolContent","btnProps","shape","currDrawCtrl","setCurrDrawCtrl","createPortal","getPopupContainer","parentElement","BgColorsOutlined","CopyOutlined","PictureOutlined","imageData","Modal","title","src","alt","okText","onOk","saveAs","danger","DeleteOutlined","querySelector","TextTool","setText","align","setAlign","toCSS","fontColorBtn","overlayStyle","FontColorsOutlined","alignRadio","optionType","buttonStyle","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","onCancel","trim","bodyStyle","paddingTop","destroyOnClose","TextArea","rows","autoFocus","scrollForage","largestKey","order","result","maxRatio","key","insertAfter","list","prevItem","newItem","prevIndex","curr","splice","HeaderLeft","saved","instantSave","nav","useNavigate","HomeFilled","disabled","SaveOutlined","HeaderMiddle","handleUndo","handleRedo","stateSet","ReaderStateCtx","setForceLight","UndoOutlined","RedoOutlined","message","BulbFilled","BulbOutlined","PenButton","EraserButton","SelectButton","HighlightOutlined","GatewayOutlined","UserAvatar","userID","userRec","TeamCtx","getHashedColor","userInfo","userName","PageNavContent","pageOrder","currPageID","scrollPage","saveReorder","useActiveKey","activeKey","refRec","ALL","MARKED","WRITTEN","scrollIntoView","PreviewTabs","onDragEnd","source","destination","fromIndex","toIndex","newOrder","removed","exchange","droppableId","droppableProps","innerRef","placeholder","PagePreview","pageIndex","teamState","setChosen","page","teamStateMap","getOnePageStateMap","image","marked","every","draggableId","isDragDisabled","draggableProps","dragHandleProps","dragged","isDragging","PageWrapper","thumbnail","preview","PreviewTools","switchPageMarked","ignores","userIDs","getPageValidUsers","PreviewOption","TeamAvatars","maxCount","classNames","maxPopoverPlacement","addPage","deletePage","menu","MoreOutlined","setActiveKey","TabPane","Tabs","tabBarGutter","centered","tab","PageNav","navOn","setNavOn","initKey","MenuUnfoldOutlined","MenuFoldOutlined","onClose","closable","zIndex","padding","overflow","headerStyle","textAlign","HeaderRight","teamOn","RoomInfo","JoinRoom","UserCard","renaming","setRenaming","setIgnores","resetIO","online","getUserID","ignored","Search","onSearch","saveUserName","enterButton","CheckOutlined","FormOutlined","EyeInvisibleOutlined","EyeOutlined","code","connected","loadInfo","loadState","noteInfo","window","location","href","share","selfName","copy","log","userList","selfID","selfInfo","otherUsers","values","Object","onlineNum","teamPop","DisconnectOutlined","showIcon","banner","String","plain","ShareAltOutlined","u","reloading","setReloading","loading","ReloadOutlined","status","count","TeamOutlined","noteID","createRoom","putNote","editNoteData","team","UsergroupAddOutlined","ReaderHeader","prevPageID","Reader","useParams","setPageRec","setNoteInfo","setStateSet","setPageOrder","useSafeState","setSaved","io","addTeamStatePage","refMap","setRefMap","scrolled","setPrevPageID","inviewRatios","setInviewRatios","getItem","stored","setItem","sectionRef","el","useScrollPage","loadNote","storedNote","pdf","createFromPages","saver","useEvent","pr","toObject","debouncedSave","debounce","flush","savePageRec","cb","defaultNotePage","pushReorder","emit","handleReorder","onUndo","deleted","prevOrder","duration","handleNewPage","newPage","addState","on","removeAllListeners","pushNewPage","newTeamPage","updatePageRec","updateStateSet","newSS","operation","lastDS","getLastDS","syncStrokeTime","prevPage","createPage","renderResult","undo","redo","PageContainer","Dark","id","lastPageID","preload","currIndex","selfIndex","updateState","setState","pdfIndex","onViewChange","useInView","threshold","range","entry","intersectionRatio","fullImg","setFullImg","loadImage","once","getNotePageImage","show","deleteAll","toList","toArray","imageLoaded","Boolean","drawShow","viewBox","DrawWrapper","activeTool","handleChange","arg","IoFactory","BASE_URL","query","getUserName","Team","setTeamState","setCode","setUserRec","setIO","loaded","setLoaded","setConnected","loadTeamNoteInfo","info","getTeamNoteState","teamNote","TeamState","updateSelfState","updatePages","roomInit","infoLoaded","stateLoaded","pushOperation","joined","members","showJoinMsg","leaved","showLeaveMsg","resetUser","close","Loading","LoginOutlined","LogoutOutlined","ColorCirle","colors","getRandomColor","floor","random","str","hash","colorPalette","light","dark","getColorPalette","palette","strokes","OrderedMap","historyStack","getDefaultFlatState","getStrokeMap","lastRecord","getHistoryStack","unshift","nextRecord","getUid","timestamp","Date","now","pushStroke","prevRecord","m","splitMap","prevUid","splitStrokes","prevStroke","op","eraseStrokes","mutateStrokes","flatState","operations","iterators","heap","Heap","s0","iter","done","record","iterator","v4","pageStates","pageInfos","getPageStates","keys","getPageInfos","pageMap","setOp","getPageRatio","includesPage","prevDs","newTS","entries","teamPages","teamPage","createVirtualCanvas","canvas","createElement","context","getContext","Error","ctx","clearRect","useTransitionEnd","propertyName","active","resRef","Promise","ActiveKeyCtx","createContext","ActiveKeyProvider","getNoteID","roomCode","axios","data","statusCode","getTeamNoteInfo","infoRes","updateTeamNote","withImg","method","url","responseType","file","Blob","saveTeamNote","note","removePageTimg","formData","FormData","arrayBuffer","ab","append","headers","teamForage","params","getCachedTeamState","getAllNotes","allNotes","getAllTags","tags","addNewTag","newTag","notes","prevTags","deleteTag","editTag","tag","noteData","pickBy","lastTime","prevNoteInfo","prevNote","saveNoteInfo","tagID","createNewNote","noteWithPdf","deleteNote","prevTag","moveNoteTag","prevTagId","time","createTime","getPDFImages","images","getOneImage","createEmptyNote","dayjs","format","cached","localStorage"],"sourceRoot":""}