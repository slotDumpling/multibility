{"version":3,"file":"static/js/587.eaa939bf.chunk.js","mappings":"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","sources":["lib/draw/drawCtrl.ts","lib/draw/StateSet.ts","component/reader/ReaderUtils.tsx","lib/array.ts","component/ui/IconFont.tsx","component/reader/PageNav.tsx","component/reader/ReaderHeader.tsx","component/reader/DrawTools.tsx","lib/touch/touch.ts","component/draw/Draw.tsx","component/reader/Reader.tsx","lib/network/io.ts","lib/draw/TeamState.ts","component/reader/Team.tsx","lib/draw/canvas.ts"],"sourcesContent":["import localforage from \"localforage\";\r\n\r\nexport interface DrawCtrl {\r\n  mode: \"draw\" | \"erase\" | \"select\" | \"text\";\r\n  finger: boolean;\r\n  lineWidth: number;\r\n  eraserWidth: number;\r\n  color: string;\r\n  highlight: boolean;\r\n  lasso: boolean;\r\n}\r\n\r\nexport const defaultDrawCtrl: Readonly<DrawCtrl> = {\r\n  mode: \"draw\",\r\n  finger: true,\r\n  lineWidth: 10,\r\n  eraserWidth: 10,\r\n  color: \"#000000\",\r\n  highlight: false,\r\n  lasso: true,\r\n};\r\n\r\nexport async function getDrawCtrl() {\r\n  let drawCtrl = (await localforage.getItem(\"DRAW_CTRL\")) as DrawCtrl | null;\r\n  if (!drawCtrl) {\r\n    drawCtrl = defaultDrawCtrl;\r\n    await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n  }\r\n  return drawCtrl;\r\n}\r\n\r\nexport async function saveDrawCtrl(drawCtrl: DrawCtrl) {\r\n  await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n}\r\n","import { DrawState, Operation, Stroke, WIDTH } from \"./DrawState\";\r\nimport { List, Map, Record } from \"immutable\";\r\nimport { NotePage } from \"../note/note\";\r\n\r\ninterface StateSetRecordType {\r\n  states: Map<string, DrawState>;\r\n  editStack: List<string>;\r\n  undoStack: List<string>;\r\n}\r\n\r\nconst defaultRecord: Readonly<StateSetRecordType> = {\r\n  states: Map(),\r\n  editStack: List(),\r\n  undoStack: List(),\r\n};\r\n\r\ntype StateSetRecord = Record<StateSetRecordType>;\r\nconst defaultFactory = Record(defaultRecord);\r\n\r\nexport type SetOperation = Operation & { pageID: string };\r\n\r\nexport class StateSet {\r\n  constructor(\r\n    private immutable: StateSetRecord,\r\n    public lastOp?: SetOperation\r\n  ) {}\r\n\r\n  static createFromPages(\r\n    pageRec: globalThis.Record<string, NotePage>,\r\n    width = WIDTH\r\n  ) {\r\n    return new StateSet(\r\n      defaultFactory().set(\r\n        \"states\",\r\n        Map(pageRec).map(({ state, ratio }) =>\r\n          DrawState.loadFromFlat(state, width, width * ratio)\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  getImmutable() {\r\n    return this.immutable;\r\n  }\r\n\r\n  getStates() {\r\n    return this.getImmutable().get(\"states\");\r\n  }\r\n\r\n  getOneState(pageID: string) {\r\n    return this.getStates().get(pageID);\r\n  }\r\n\r\n  getEditStack() {\r\n    return this.getImmutable().get(\"editStack\");\r\n  }\r\n\r\n  getUndoStack() {\r\n    return this.getImmutable().get(\"undoStack\");\r\n  }\r\n\r\n  setState(pageID: string, drawState: DrawState) {\r\n    const prevDS = this.getOneState(pageID);\r\n    if (!prevDS || prevDS === drawState) return this;\r\n    let currRecord = this.getImmutable()\r\n      .update(\"states\", (s) => s.set(pageID, drawState))\r\n      .update(\"editStack\", (l) => l.push(pageID))\r\n      .delete(\"undoStack\");\r\n\r\n    const { lastOp } = drawState;\r\n    const lastSetOp = lastOp && { ...lastOp, pageID };\r\n\r\n    return new StateSet(currRecord, lastSetOp);\r\n  }\r\n\r\n  // sync with mutation.\r\n  syncStrokeTime(pageID: string, stroke: Stroke) {\r\n    const prevDS = this.getOneState(pageID);\r\n    prevDS && DrawState.syncStrokeTime(prevDS, stroke);\r\n    return this;\r\n  }\r\n\r\n  addState(pageID: string, notePage: NotePage, width = WIDTH) {\r\n    const { state, ratio } = notePage;\r\n    const newDS = DrawState.loadFromFlat(state, width, width * ratio);\r\n    const currRecord = this.getImmutable().update(\"states\", (s) =>\r\n      s.set(pageID, newDS)\r\n    );\r\n    return new StateSet(currRecord);\r\n  }\r\n\r\n  deleteState(pageID: string) {\r\n    return new StateSet(\r\n      this.getImmutable().update(\"states\", (s) => s.delete(pageID))\r\n    );\r\n  }\r\n\r\n  isUndoable() {\r\n    return this.getEditStack().size > 0;\r\n  }\r\n\r\n  isRedoable() {\r\n    return this.getUndoStack().size > 0;\r\n  }\r\n\r\n  undo() {\r\n    if (!this.isUndoable()) return this;\r\n    const lastUid = this.getEditStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.undo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"editStack\", (s) => s.pop())\r\n        .update(\"undoStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  redo() {\r\n    if (!this.isRedoable()) return this;\r\n    const lastUid = this.getUndoStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.redo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"undoStack\", (s) => s.pop())\r\n        .update(\"editStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  getLastDS(): [string, DrawState] | undefined {\r\n    const pageID = this.lastOp?.pageID;\r\n    const ds = pageID && this.getOneState(pageID);\r\n    if (ds) return [pageID, ds];\r\n  }\r\n}\r\n","import { Button, message } from \"antd\";\r\nimport React, { useContext } from \"react\";\r\nimport { ReaderMethodCtx } from \"./Reader\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nexport const AddPageButton = () => {\r\n  const { addFinalPage } = useContext(ReaderMethodCtx);\r\n  return (\r\n    <div className=\"add-btn-wrapper\">\r\n      <Button\r\n        type=\"dashed\"\r\n        icon={<PlusOutlined />}\r\n        block\r\n        onClick={addFinalPage}\r\n      >\r\n        New page\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const showPageDelMsg = (onUndo: () => void) => {\r\n  message.warning({\r\n    content: (\r\n      <>\r\n        One page was deleted.\r\n        <Button\r\n          size=\"small\"\r\n          type=\"link\"\r\n          onClick={() => {\r\n            message.destroy(\"DELETE\");\r\n            onUndo();\r\n          }}\r\n        >\r\n          Undo\r\n        </Button>\r\n      </>\r\n    ),\r\n    key: \"DELETE\",\r\n    duration: 10,\r\n  });\r\n};\r\n","export function exchange<T>(list: T[], fromIndex: number, toIndex: number) {\r\n  const result = list.slice();\r\n  const [removed] = result.splice(fromIndex, 1);\r\n  result.splice(toIndex, 0, removed);\r\n  return result;\r\n}\r\n\r\nexport function insertAfter<T>(list: T[], prevItem: T, newItem: T) {\r\n  const prevIndex = list.indexOf(prevItem);\r\n  const curr = list.slice();\r\n  if (prevIndex === -1) return curr;\r\n  curr.splice(prevIndex + 1, 0, newItem);\r\n  return curr;\r\n}\r\n","import { createFromIconfontCN } from \"@ant-design/icons\";\r\n\r\nexport default createFromIconfontCN({\r\n  scriptUrl: \"//at.alicdn.com/t/font_3181679_yo844n7qgns.js\",\r\n});\r\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n} from \"react\";\r\nimport {\r\n  MoreOutlined,\r\n  PlusOutlined,\r\n  CopyOutlined,\r\n  DeleteOutlined,\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  Draggable,\r\n  Droppable,\r\n  DropResult,\r\n  DragDropContext,\r\n} from \"react-beautiful-dnd\";\r\nimport { PageWrapper, ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport { Avatar, Button, Drawer, Menu, Popover, Tabs } from \"antd\";\r\nimport { AddPageButton } from \"./ReaderUtils\";\r\nimport { exchange } from \"../../lib/array\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { UserAvatar } from \"./ReaderHeader\";\r\nimport IconFont from \"../ui/IconFont\";\r\nimport classNames from \"classnames\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport \"./preview.sass\";\r\n\r\nconst PageNavContent = ({\r\n  activeKey,\r\n  setActiveKey,\r\n}: {\r\n  activeKey: string;\r\n  setActiveKey: Setter<string>;\r\n}) => {\r\n  const { pageOrder, inviewPages } = useContext(ReaderStateCtx);\r\n  const { scrollPage, saveReorder } = useContext(ReaderMethodCtx);\r\n  const refRec = useRef<Record<string, HTMLElement>>({});\r\n  const listEl = useRef<HTMLDivElement>();\r\n\r\n  const onDragEnd = ({ source, destination }: DropResult) => {\r\n    if (!destination || !pageOrder) return;\r\n    const { index: fromIndex } = source;\r\n    const { index: toIndex } = destination;\r\n    if (fromIndex === toIndex) return;\r\n    const pageID = pageOrder[fromIndex];\r\n    const newOrder = exchange(pageOrder, fromIndex, toIndex);\r\n    saveReorder(newOrder, true);\r\n    requestAnimationFrame(() => scrollPage(pageID));\r\n  };\r\n\r\n  const currpageID = useMemo(\r\n    () => pageOrder?.find((pageID) => inviewPages.has(pageID)) || \"\",\r\n    [pageOrder, inviewPages]\r\n  );\r\n\r\n  useEffect(() => {\r\n    refRec.current[currpageID]?.scrollIntoView();\r\n    const itemHeight = refRec.current[currpageID]?.clientHeight || 0;\r\n    const listHeight = listEl.current?.clientHeight || 0;\r\n    listEl.current?.scrollBy(0, -listHeight / 2 + itemHeight / 2);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"preview-container\">\r\n      <PreviewTabs activeKey={activeKey} setActiveKey={setActiveKey} />\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"preview-list\">\r\n          {({ droppableProps, innerRef, placeholder }) => (\r\n            <div\r\n              className=\"page-list\"\r\n              ref={(e) => {\r\n                innerRef(e);\r\n                if (e) listEl.current = e;\r\n              }}\r\n              {...droppableProps}\r\n            >\r\n              {pageOrder?.map((uid, index) => (\r\n                <PagePreview\r\n                  key={uid}\r\n                  uid={uid}\r\n                  mode={activeKey}\r\n                  pageIndex={index}\r\n                  currpageID={currpageID}\r\n                  refRec={refRec.current}\r\n                />\r\n              ))}\r\n              {placeholder}\r\n              {activeKey === \"ALL\" && <AddPageButton />}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PagePreview: FC<{\r\n  uid: string;\r\n  mode: string;\r\n  pageIndex: number;\r\n  currpageID: string;\r\n  refRec: Record<string, HTMLElement>;\r\n}> = ({ uid, pageIndex, mode, currpageID, refRec }) => {\r\n  const { stateSet, teamState, pageRec } = useContext(ReaderStateCtx);\r\n  const { scrollPage, switchPageMarked } = useContext(ReaderMethodCtx);\r\n  const { ignores } = useContext(TeamCtx);\r\n  const [chosen, setChosen] = useState(\"\");\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n  const userIDs = useMemo(\r\n    () =>\r\n      teamState\r\n        ?.getPageValidUsers(uid)\r\n        .filter((userID) => !ignores.has(userID)) || [],\r\n    [teamState, ignores, uid]\r\n  );\r\n  if (!page || !drawState) return null;\r\n  const { image, marked } = page;\r\n\r\n  if (\r\n    mode === \"WRITTEN\" &&\r\n    drawState.isEmpty() &&\r\n    (!teamStateMap || teamStateMap.every((ds) => ds.isEmpty()))\r\n  ) {\r\n    return null;\r\n  }\r\n  if (mode === \"MARKED\" && !marked) return null;\r\n  const curr = currpageID === uid;\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={uid}\r\n      index={pageIndex}\r\n      isDragDisabled={mode !== \"ALL\"}\r\n    >\r\n      {(\r\n        { innerRef, draggableProps, dragHandleProps },\r\n        { isDragging: drag }\r\n      ) => (\r\n        <div\r\n          ref={(e) => {\r\n            innerRef(e);\r\n            if (e) refRec[uid] = e;\r\n          }}\r\n          className={classNames(\"page\", { curr, drag })}\r\n          onClick={() => scrollPage(uid)}\r\n          {...draggableProps}\r\n          {...dragHandleProps}\r\n        >\r\n          <PageWrapper\r\n            uid={uid}\r\n            drawState={teamStateMap?.get(chosen) || drawState}\r\n            teamStateMap={chosen ? undefined : teamStateMap}\r\n            thumbnail={image}\r\n            preview\r\n          />\r\n          <div className=\"cover\" onClick={(e) => e.stopPropagation()}>\r\n            <span\r\n              className={classNames(\"bookmark\", { marked })}\r\n              onClick={() => switchPageMarked(uid)}\r\n            />\r\n            <span className=\"index\">{pageIndex + 1}</span>\r\n            <PreviewOption uid={uid} />\r\n            <TeamAvatars\r\n              userIDs={userIDs}\r\n              chosen={chosen}\r\n              setChosen={setChosen}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst TeamAvatars: FC<{\r\n  userIDs: string[];\r\n  chosen: string;\r\n  setChosen: Setter<string>;\r\n}> = ({ userIDs, chosen, setChosen }) => {\r\n  return (\r\n    <Avatar.Group\r\n      maxCount={2}\r\n      size=\"default\"\r\n      className={classNames(\"team-group\", { chosen })}\r\n    >\r\n      {userIDs.map((userID) => (\r\n        <UserAvatar\r\n          key={userID}\r\n          size=\"default\"\r\n          userID={userID}\r\n          className=\"preview-avatar\"\r\n          chosen={chosen === userID}\r\n          onClick={() => setChosen((prev) => (prev === userID ? \"\" : userID))}\r\n        />\r\n      ))}\r\n    </Avatar.Group>\r\n  );\r\n};\r\n\r\nconst PreviewOption = ({ uid }: { uid: string }) => {\r\n  const { addPage, deletePage } = useContext(ReaderMethodCtx);\r\n\r\n  const menu = (\r\n    <Menu\r\n      onClick={({ key }) => {\r\n        if (key === \"ADD\") {\r\n          addPage(uid);\r\n        } else if (key === \"COPY\") {\r\n          addPage(uid, true);\r\n        } else if (key === \"DELETE\") {\r\n          deletePage(uid);\r\n        }\r\n      }}\r\n      items={[\r\n        { key: \"ADD\", icon: <PlusOutlined />, label: \"Add page\" },\r\n        { key: \"COPY\", icon: <CopyOutlined />, label: \"Duplicate\" },\r\n        {\r\n          key: \"DELETE\",\r\n          icon: <DeleteOutlined />,\r\n          label: \"Delete\",\r\n          danger: true,\r\n        },\r\n      ]}\r\n    ></Menu>\r\n  );\r\n  return (\r\n    <Popover\r\n      content={menu}\r\n      trigger=\"click\"\r\n      placement=\"left\"\r\n      destroyTooltipOnHide\r\n    >\r\n      <span className=\"option\">\r\n        <MoreOutlined />\r\n      </span>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst PreviewTabs = ({\r\n  activeKey,\r\n  setActiveKey,\r\n}: {\r\n  activeKey: string;\r\n  setActiveKey: (key: string) => void;\r\n}) => {\r\n  const { TabPane } = Tabs;\r\n  return (\r\n    <Tabs\r\n      className=\"tabs\"\r\n      activeKey={activeKey}\r\n      onChange={setActiveKey}\r\n      tabBarGutter={10}\r\n      size=\"small\"\r\n      centered\r\n    >\r\n      <TabPane tab={<IconFont type=\"icon-uf_paper\" />} key=\"ALL\" />\r\n      <TabPane tab={<IconFont type=\"icon-bookmark2\" />} key=\"MARKED\" />\r\n      <TabPane tab={<IconFont type=\"icon-write\" />} key=\"WRITTEN\" />\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default function PageNav() {\r\n  const [navOn, setNavOn] = useState(false);\r\n  const [activeKey, setActiveKey] = useState<string>(\"ALL\");\r\n  const title = {\r\n    ALL: \"All Pages\",\r\n    MARKED: \"Bookmarks\",\r\n    WRITTEN: \"Notes\",\r\n  }[activeKey];\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        type=\"text\"\r\n        icon={navOn ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\r\n        onClick={() => setNavOn((prev) => !prev)}\r\n      />\r\n      <Drawer\r\n        visible={navOn}\r\n        onClose={() => setNavOn(false)}\r\n        width={200}\r\n        title={title}\r\n        closable={false}\r\n        className=\"preview-drawer\"\r\n        contentWrapperStyle={{ boxShadow: \"none\" }}\r\n        bodyStyle={{ padding: 0, overflow: \"hidden\" }}\r\n        headerStyle={{ textAlign: \"center\", borderTop: \"1px solid #eee\" }}\r\n        destroyOnClose\r\n      >\r\n        <PageNavContent activeKey={activeKey} setActiveKey={setActiveKey} />\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","import React, {\r\n  FC,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  CSSProperties,\r\n} from \"react\";\r\nimport {\r\n  Badge,\r\n  Alert,\r\n  Modal,\r\n  Avatar,\r\n  Button,\r\n  Slider,\r\n  Divider,\r\n  message,\r\n  Popover,\r\n  ButtonProps,\r\n} from \"antd\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { PasscodeInput } from \"antd-mobile\";\r\nimport { ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport { colors, getHashedColor } from \"../../lib/color\";\r\nimport { getUserID, saveUserName } from \"../../lib/user\";\r\nimport { DrawCtrl, saveDrawCtrl } from \"../../lib/draw/drawCtrl\";\r\nimport PageNav from \"./PageNav\";\r\nimport {\r\n  HomeFilled,\r\n  EyeOutlined,\r\n  FormOutlined,\r\n  UndoOutlined,\r\n  RedoOutlined,\r\n  SaveOutlined,\r\n  TeamOutlined,\r\n  CopyOutlined,\r\n  CheckOutlined,\r\n  ReloadOutlined,\r\n  GatewayOutlined,\r\n  ShareAltOutlined,\r\n  HighlightOutlined,\r\n  DisconnectOutlined,\r\n  EyeInvisibleOutlined,\r\n  UsergroupAddOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { AvatarSize } from \"antd/lib/avatar/SizeContext\";\r\nimport { editNoteData } from \"../../lib/note/archive\";\r\nimport { putNote } from \"../../lib/network/http\";\r\nimport IconFont from \"../ui/IconFont\";\r\nimport classNames from \"classnames\";\r\nimport copy from \"clipboard-copy\";\r\nimport \"./readerHeader.sass\";\r\n\r\nexport default function DrawTools({\r\n  handleUndo,\r\n  handleRedo,\r\n  instantSave,\r\n}: {\r\n  handleUndo: () => void;\r\n  handleRedo: () => void;\r\n  instantSave: () => Promise<void> | undefined;\r\n}) {\r\n  const { saved, stateSet, drawCtrl } = useContext(ReaderStateCtx);\r\n  const { setDrawCtrl } = useContext(ReaderMethodCtx);\r\n  const { teamOn } = useContext(TeamCtx);\r\n  const { mode, finger } = drawCtrl;\r\n\r\n  const nav = useNavigate();\r\n\r\n  const updateDrawCtrl = (updated: Partial<DrawCtrl>) => {\r\n    setDrawCtrl((prev) => {\r\n      const newCtrl = { ...prev, ...updated };\r\n      saveDrawCtrl(newCtrl);\r\n      return newCtrl;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"left\">\r\n        <Button\r\n          type=\"text\"\r\n          onClick={async () => {\r\n            await instantSave();\r\n            nav(\"/\");\r\n          }}\r\n          icon={<HomeFilled style={{ opacity: 0.8 }} />}\r\n        />\r\n        <div className=\"br\" />\r\n        <Button\r\n          type=\"text\"\r\n          className=\"save\"\r\n          onClick={instantSave}\r\n          disabled={saved}\r\n          icon={<SaveOutlined />}\r\n        />\r\n      </div>\r\n      <div className=\"middle\">\r\n        <Button\r\n          type=\"text\"\r\n          shape=\"circle\"\r\n          icon={<UndoOutlined />}\r\n          onClick={handleUndo}\r\n          disabled={!stateSet?.isUndoable()}\r\n        />\r\n        <Button\r\n          type=\"text\"\r\n          shape=\"circle\"\r\n          icon={<RedoOutlined />}\r\n          onClick={handleRedo}\r\n          disabled={!stateSet?.isRedoable()}\r\n        />\r\n        <Button\r\n          type={finger ? \"default\" : \"text\"}\r\n          shape=\"circle\"\r\n          onClick={() => {\r\n            updateDrawCtrl({ finger: !finger });\r\n            message.destroy(\"FINGER\");\r\n            message.open({\r\n              content: finger ? \"Pencil only\" : \"Draw with finger\",\r\n              key: \"FINGER\",\r\n            });\r\n          }}\r\n          icon={<IconFont type=\"icon-finger\" />}\r\n        />\r\n        <div className=\"br\" />\r\n        <PenButton updateDrawCtrl={updateDrawCtrl} />\r\n        <EraserButton updateDrawCtrl={updateDrawCtrl} />\r\n        <Button\r\n          type={mode === \"text\" ? \"default\" : \"text\"}\r\n          shape=\"circle\"\r\n          onClick={() => updateDrawCtrl({ mode: \"text\" })}\r\n          icon={<IconFont type=\"icon-text1\" />}\r\n        />\r\n        <SelectButton updateDrawCtrl={updateDrawCtrl} />\r\n      </div>\r\n      <div className=\"right\">\r\n        {teamOn && <RoomInfo />}\r\n        {teamOn || <JoinRoom instantSave={instantSave} />}\r\n        <div className=\"br\" />\r\n        <PageNav />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nconst PenButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const { drawCtrl } = useContext(ReaderStateCtx);\r\n  const { mode } = drawCtrl;\r\n\r\n  const btnProps: ButtonProps = {\r\n    className: \"pen\",\r\n    shape: \"circle\",\r\n    icon: <HighlightOutlined />,\r\n  };\r\n  return mode === \"draw\" ? (\r\n    <Popover\r\n      content={<PenPanel updateDrawCtrl={updateDrawCtrl} drawCtrl={drawCtrl} />}\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button type=\"default\" {...btnProps} />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      onClick={() => updateDrawCtrl({ mode: \"draw\" })}\r\n      {...btnProps}\r\n    />\r\n  );\r\n};\r\n\r\nexport const PenPanel: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n  drawCtrl: Partial<DrawCtrl>;\r\n}> = ({ updateDrawCtrl, drawCtrl }) => {\r\n  const { lineWidth, highlight, color } = drawCtrl;\r\n  const [tempLineWidth, setTempLineWidth] = useState(lineWidth);\r\n\r\n  return (\r\n    <div className=\"pen-panel\">\r\n      <div className=\"pen-status\">\r\n        <Slider\r\n          min={5}\r\n          max={100}\r\n          defaultValue={tempLineWidth}\r\n          onChange={setTempLineWidth}\r\n          onAfterChange={(lineWidth) => updateDrawCtrl({ lineWidth })}\r\n        />\r\n        <Button\r\n          type={highlight ? \"primary\" : \"text\"}\r\n          ghost={highlight}\r\n          shape=\"circle\"\r\n          icon={<IconFont type=\"icon-Highlight\" />}\r\n          onClick={() => updateDrawCtrl({ highlight: !highlight })}\r\n        />\r\n      </div>\r\n      <ColorSelect\r\n        color={color || \"\"}\r\n        setColor={(c) => updateDrawCtrl({ color: c })}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ColorSelect: FC<{\r\n  color: string;\r\n  setColor: (color: string) => void;\r\n}> = ({ setColor, color }) => {\r\n  return (\r\n    <div className=\"color-select\">\r\n      {colors.map((c) => (\r\n        <label key={c}>\r\n          <input\r\n            checked={color === c}\r\n            type=\"radio\"\r\n            name=\"color\"\r\n            onChange={() => setColor(c)}\r\n          />\r\n          <div\r\n            className=\"circle\"\r\n            style={{ \"--circle-color\": c } as CSSProperties}\r\n          ></div>\r\n        </label>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EraserButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const {\r\n    drawCtrl: { eraserWidth, mode },\r\n  } = useContext(ReaderStateCtx);\r\n  const [tempEraserWidth, setTempEraserWidth] = useState(eraserWidth);\r\n\r\n  const content = (\r\n    <div className=\"pen-panel\">\r\n      <Slider\r\n        min={5}\r\n        max={100}\r\n        defaultValue={tempEraserWidth}\r\n        onChange={setTempEraserWidth}\r\n        onAfterChange={(eraserWidth) => updateDrawCtrl({ eraserWidth })}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const btnProps: ButtonProps = {\r\n    shape: \"circle\",\r\n    icon: <IconFont type=\"icon-eraser\" />,\r\n  };\r\n\r\n  return mode === \"erase\" ? (\r\n    <Popover\r\n      content={content}\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button type=\"default\" {...btnProps} />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      onClick={() => updateDrawCtrl({ mode: \"erase\" })}\r\n      {...btnProps}\r\n    />\r\n  );\r\n};\r\n\r\nconst SelectButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const {\r\n    drawCtrl: { lasso, mode },\r\n  } = useContext(ReaderStateCtx);\r\n\r\n  const icon = lasso ? <IconFont type=\"icon-lasso1\" /> : <GatewayOutlined />;\r\n\r\n  return mode === \"select\" ? (\r\n    <Button\r\n      type=\"default\"\r\n      shape=\"circle\"\r\n      icon={icon}\r\n      onClick={() => updateDrawCtrl({ lasso: !lasso })}\r\n    />\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      shape=\"circle\"\r\n      icon={icon}\r\n      onClick={() => updateDrawCtrl({ mode: \"select\" })}\r\n    />\r\n  );\r\n};\r\n\r\nconst UserCard: FC<{ userID: string }> = ({ userID }) => {\r\n  const [renaming, setRenaming] = useState(false);\r\n  const { ignores, setIgnores, resetIO, userRec } = useContext(TeamCtx);\r\n  const userInfo = userRec[userID];\r\n  useEffect(() => setRenaming(false), [userInfo]);\r\n  if (!userInfo) return null;\r\n\r\n  const { userName, online } = userInfo;\r\n  const self = userID === getUserID();\r\n  const ignored = ignores.has(userID) && !self;\r\n\r\n  const switchIgnore = () => {\r\n    setIgnores((prev) => {\r\n      if (prev.has(userID)) return prev.delete(userID);\r\n      return prev.add(userID);\r\n    });\r\n  };\r\n\r\n  const submitRename = (value: string) => {\r\n    const name = value.trim();\r\n    if (!name || name === userName) return setRenaming(false);\r\n    saveUserName(name);\r\n    resetIO();\r\n  };\r\n\r\n  return (\r\n    <div className={classNames(\"user-item\", { online })}>\r\n      <UserAvatar userID={userID} size=\"small\" className=\"room-avatar\" />\r\n      {renaming || <span className=\"user-name\">{userName}</span>}\r\n      {renaming && (\r\n        <Search\r\n          autoFocus\r\n          className=\"rename-input\"\r\n          defaultValue={userName}\r\n          onSearch={submitRename}\r\n          enterButton={<Button icon={<CheckOutlined />} />}\r\n        />\r\n      )}\r\n      {self ? (\r\n        renaming || (\r\n          <Button\r\n            type=\"text\"\r\n            icon={<FormOutlined />}\r\n            onClick={() => setRenaming(true)}\r\n          />\r\n        )\r\n      ) : (\r\n        <Button\r\n          type=\"text\"\r\n          icon={ignored ? <EyeInvisibleOutlined /> : <EyeOutlined />}\r\n          onClick={switchIgnore}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const UserAvatar: FC<{\r\n  userID: string;\r\n  size?: AvatarSize;\r\n  onClick?: () => void;\r\n  chosen?: boolean;\r\n  className?: string;\r\n}> = ({\r\n  userID,\r\n  size = \"default\",\r\n  onClick = () => {},\r\n  chosen = false,\r\n  className,\r\n}) => {\r\n  const { userRec } = useContext(TeamCtx);\r\n  const color = useMemo(() => getHashedColor(userID), [userID]);\r\n  const userInfo = userRec[userID];\r\n  if (!userInfo) return null;\r\n  const { userName } = userInfo;\r\n\r\n  return (\r\n    <Avatar\r\n      className={classNames(className, { chosen })}\r\n      size={size}\r\n      style={{ backgroundColor: color }}\r\n    >\r\n      <div className=\"avatar-wrapper\" onClick={onClick}>\r\n        {userName?.slice(0, 3)}\r\n      </div>\r\n    </Avatar>\r\n  );\r\n};\r\n\r\nconst RoomInfo: FC = () => {\r\n  const { code, userRec, connected, loadInfo, loadState, resetIO } =\r\n    useContext(TeamCtx);\r\n  const { noteInfo } = useContext(ReaderStateCtx);\r\n  const link = window.location.href;\r\n  const share = async () => {\r\n    const selfName = userRec[getUserID()]?.userName;\r\n    try {\r\n      if (!noteInfo) return;\r\n      await copy(`${noteInfo.name} - ${selfName} - Multibility\\n${link}`);\r\n      message.destroy(\"copy\");\r\n      message.success({\r\n        content: \"Link copied!\",\r\n        icon: <CopyOutlined />,\r\n        key: \"copy\",\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const userList = useMemo(() => {\r\n    const selfID = getUserID();\r\n    const { [selfID]: selfInfo, ...otherUsers } = userRec;\r\n    const list = selfInfo ? [selfInfo] : [];\r\n    const values = Object.values(otherUsers);\r\n    list.push(\r\n      ...values.filter(({ online }) => online),\r\n      ...values.filter(({ online }) => !online)\r\n    );\r\n    return list;\r\n  }, [userRec]);\r\n\r\n  const onlineNum = useMemo(\r\n    () => userList.filter(({ online }) => online).length,\r\n    [userList]\r\n  );\r\n\r\n  const content = (\r\n    <div className=\"team-popover\">\r\n      {connected || (\r\n        <Alert\r\n          className=\"disconn-alert\"\r\n          message=\"Network failed.\"\r\n          icon={<DisconnectOutlined />}\r\n          type=\"error\"\r\n          showIcon\r\n          banner\r\n        />\r\n      )}\r\n      <PasscodeInput\r\n        className=\"code-display\"\r\n        value={String(code)}\r\n        length={4}\r\n        plain\r\n      />\r\n      <Button\r\n        icon={<ShareAltOutlined />}\r\n        className=\"share-btn\"\r\n        onClick={share}\r\n        block\r\n      >\r\n        Share\r\n      </Button>\r\n      <Divider />\r\n      <div className=\"user-list\">\r\n        {userList.map((u) => (\r\n          <UserCard key={u.userID} userID={u.userID} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const title = (\r\n    <div className=\"team-title\">\r\n      <span>Team info</span>\r\n      <Button\r\n        shape=\"circle\"\r\n        type=\"text\"\r\n        size=\"small\"\r\n        icon={<ReloadOutlined />}\r\n        onClick={async () => {\r\n          await loadInfo();\r\n          await loadState();\r\n          resetIO();\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Popover\r\n      content={content}\r\n      trigger=\"click\"\r\n      placement=\"bottomRight\"\r\n      title={title}\r\n      getPopupContainer={(e) => e}\r\n    >\r\n      <Button\r\n        type=\"text\"\r\n        icon={\r\n          <Badge\r\n            status={connected ? \"success\" : \"error\"}\r\n            count={connected ? onlineNum : \"!\"}\r\n            size=\"small\"\r\n          >\r\n            <TeamOutlined />\r\n          </Badge>\r\n        }\r\n      />\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst JoinRoom: FC<{ instantSave: () => Promise<void> | undefined }> = ({\r\n  instantSave,\r\n}) => {\r\n  const { noteID } = useContext(ReaderStateCtx);\r\n  const nav = useNavigate();\r\n\r\n  const createRoom = async () => {\r\n    await instantSave();\r\n    const res = await putNote(noteID);\r\n    if (!res) return message.error(\"Can't create room.\");\r\n    await editNoteData(noteID, { team: true });\r\n    nav(\"/team/\" + noteID);\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      type=\"text\"\r\n      icon={<UsergroupAddOutlined />}\r\n      onClick={() => {\r\n        Modal.confirm({\r\n          title: \"Enable team editing\",\r\n          content: \"This will make your note public.\",\r\n          icon: <TeamOutlined style={{ color: \"#555\" }} />,\r\n          onOk: createRoom,\r\n        });\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import React, { FC, RefObject, useRef, useState } from \"react\";\r\nimport {\r\n  CopyOutlined,\r\n  DeleteOutlined,\r\n  LoadingOutlined,\r\n  BgColorsOutlined,\r\n  FontSizeOutlined,\r\n  CaretLeftOutlined,\r\n  FontColorsOutlined,\r\n  CaretRightOutlined,\r\n  RotateRightOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Button, ButtonProps, InputNumber, Modal, Popover } from \"antd\";\r\nimport { ColorSelect, PenPanel } from \"./ReaderHeader\";\r\nimport { createWorker, Worker } from \"tesseract.js\";\r\nimport { DrawCtrl } from \"../../lib/draw/drawCtrl\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { useDrag } from \"@use-gesture/react\";\r\nimport { DrawRefType } from \"../draw/Draw\";\r\nimport { colors } from \"../../lib/color\";\r\nimport { createPortal } from \"react-dom\";\r\nimport IconFont from \"../ui/IconFont\";\r\nimport classNames from \"classnames\";\r\nimport copy from \"clipboard-copy\";\r\nimport \"./drawTools.sass\";\r\n\r\nconst getOcrWorker = (() => {\r\n  let worker: Worker;\r\n  return async () => {\r\n    if (worker) return worker;\r\n    worker = createWorker({ logger: console.log });\r\n    await worker.load();\r\n    await worker.loadLanguage(\"eng+chi_sim\");\r\n    await worker.initialize(\"eng+chi_sim\");\r\n    return worker;\r\n  };\r\n})();\r\n\r\nexport const SelectTool: FC<{\r\n  drawRef: RefObject<DrawRefType>;\r\n  visible: boolean;\r\n}> = ({ drawRef, visible }) => {\r\n  const btnProps: ButtonProps = {\r\n    type: \"text\",\r\n    shape: \"round\",\r\n    size: \"small\",\r\n  };\r\n\r\n  const [currDrawCtrl, setCurrDrawCtrl] = useState<Partial<DrawCtrl>>({});\r\n  const rotateEl = useRef<HTMLDivElement>(null);\r\n  const [dragged, setDragged] = useState(false);\r\n  const [transX, setTransX] = useState(0);\r\n  const gearStyle = { transform: `translateX(${transX}px)` };\r\n\r\n  useDrag(\r\n    ({ first, last, offset, delta }) => {\r\n      setTransX(offset[0]);\r\n      drawRef.current?.rotateSelected(delta[0] / 2, last);\r\n      first && setDragged(true);\r\n      last && setDragged(false);\r\n    },\r\n    {\r\n      target: rotateEl,\r\n      filterTaps: true,\r\n      rubberband: 0.05,\r\n      bounds: { left: -90, right: 90 },\r\n    }\r\n  );\r\n\r\n  const [recoginzing, setRecoginzing] = useState(false);\r\n  const recognizeText = async () => {\r\n    setRecoginzing(true);\r\n    if (!drawRef.current) return;\r\n    const imageData = drawRef.current.rasterize();\r\n    try {\r\n      const worker = await getOcrWorker();\r\n      const { text } = (await worker.recognize(imageData)).data;\r\n      Modal.confirm({\r\n        title: \"OCR Result\",\r\n        content: <TextArea defaultValue={text} />,\r\n        icon: <IconFont type=\"icon-OCR\" />,\r\n        okText: \"Copy\",\r\n        onOk: () => copy(text),\r\n      });\r\n    } catch (e) {\r\n      console.error(e);\r\n    } finally {\r\n      setRecoginzing(false);\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={classNames(\"select-tool\", { visible })}>\r\n      <Popover\r\n        trigger=\"click\"\r\n        placement=\"bottom\"\r\n        getPopupContainer={(e) => e}\r\n        destroyTooltipOnHide\r\n        content={\r\n          <PenPanel\r\n            updateDrawCtrl={(updated) => {\r\n              setCurrDrawCtrl((prev) => ({ ...prev, ...updated }));\r\n              drawRef.current?.mutateStyle(updated);\r\n            }}\r\n            drawCtrl={currDrawCtrl}\r\n          />\r\n        }\r\n      >\r\n        <Button icon={<BgColorsOutlined />} {...btnProps} />\r\n      </Popover>\r\n      <div className={classNames(\"rotate-wrapper\", { dragged })} ref={rotateEl}>\r\n        <Button\r\n          icon={<RotateRightOutlined />}\r\n          onClick={() => drawRef.current?.rotateSelected(90, true)}\r\n          {...btnProps}\r\n        />\r\n        <CaretLeftOutlined className=\"arrow left\" />\r\n        <CaretRightOutlined className=\"arrow right\" />\r\n        <div className=\"gear\" style={gearStyle} />\r\n      </div>\r\n      <Button\r\n        icon={<CopyOutlined />}\r\n        onClick={drawRef.current?.duplicateSelected}\r\n        {...btnProps}\r\n      />\r\n      <Button\r\n        icon={recoginzing ? <LoadingOutlined /> : <IconFont type=\"icon-OCR\" />}\r\n        onClick={recognizeText}\r\n        {...btnProps}\r\n      />\r\n      <Button\r\n        danger\r\n        icon={<DeleteOutlined />}\r\n        onClick={drawRef.current?.deleteSelected}\r\n        {...btnProps}\r\n      />\r\n    </div>,\r\n    document.body\r\n  );\r\n};\r\n\r\nexport const TextTool: FC<{\r\n  drawRef: RefObject<DrawRefType>;\r\n  visible: boolean;\r\n}> = ({ visible, drawRef }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [fontSize, setFontSize] = useState(5);\r\n  const [color, setColor] = useState(colors[0]);\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      title=\"Insert text\"\r\n      onCancel={drawRef.current?.cancelText}\r\n      onOk={() => {\r\n        const content = text.trim();\r\n        if (!content) return drawRef.current?.cancelText();\r\n        drawRef.current?.submitText(content, fontSize, color);\r\n      }}\r\n      bodyStyle={{ paddingTop: 0 }}\r\n      destroyOnClose\r\n    >\r\n      <div className=\"insert-option\">\r\n        <span className=\"font-size\">\r\n          <FontSizeOutlined />\r\n          <span>Font size: </span>\r\n          <InputNumber\r\n            min={1}\r\n            size=\"small\"\r\n            value={fontSize}\r\n            onChange={setFontSize}\r\n          />\r\n        </span>\r\n        <Popover\r\n          content={<ColorSelect color={color} setColor={setColor} />}\r\n          overlayStyle={{ width: 200 }}\r\n          placement=\"bottom\"\r\n        >\r\n          <Button\r\n            className=\"tag-btn\"\r\n            size=\"small\"\r\n            icon={<FontColorsOutlined />}\r\n          >\r\n            Font color\r\n          </Button>\r\n        </Popover>\r\n      </div>\r\n      <TextArea\r\n        autoFocus\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n","import { PointerEvent, TouchEvent, useEffect, useRef } from \"react\";\r\n\r\ntype iOSTouch = Touch & {\r\n  force?: number;\r\n  touchType?: \"stylus\" | \"direct\";\r\n};\r\n\r\nexport function isApplePencil(e: TouchEvent) {\r\n  const touch = e.touches[0] as iOSTouch;\r\n  return touch?.touchType === \"stylus\";\r\n}\r\n\r\nexport function usePreventTouch(\r\n  allowFinger: boolean\r\n): React.CanvasHTMLAttributes<HTMLCanvasElement> {\r\n  const isTouch = useRef(false);\r\n  const checkPoniter = (e: PointerEvent) =>\r\n    e.isPrimary && (isTouch.current = e.pointerType === \"touch\");\r\n\r\n  const isEventValid = (e: TouchEvent) =>\r\n    !isTouch.current ||\r\n    isApplePencil(e) ||\r\n    (allowFinger && e.touches.length === 1);\r\n\r\n  const preventTouch = (e: TouchEvent) =>\r\n    isEventValid(e) || e.stopPropagation();\r\n\r\n  return {\r\n    onPointerDownCapture: checkPoniter,\r\n    onPointerMoveCapture: checkPoniter,\r\n    onTouchStartCapture: preventTouch,\r\n    onTouchMoveCapture: preventTouch,\r\n  };\r\n}\r\n\r\nexport function usePreventGesture() {\r\n  useEffect(() => {\r\n    const handler = (e: Event) => e.preventDefault();\r\n    document.addEventListener(\"gesturestart\", handler);\r\n    document.addEventListener(\"gesturechange\", handler);\r\n    document.addEventListener(\"gestureend\", handler);\r\n    return () => {\r\n      document.removeEventListener(\"gesturestart\", handler);\r\n      document.removeEventListener(\"gesturechange\", handler);\r\n      document.removeEventListener(\"gestureend\", handler);\r\n    };\r\n  }, []);\r\n}\r\n","import React, {\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  Dispatch,\r\n  useEffect,\r\n  useCallback,\r\n  SetStateAction,\r\n  useDebugValue,\r\n  useImperativeHandle,\r\n} from \"react\";\r\nimport { usePreventTouch, usePreventGesture } from \"../../lib/touch/touch\";\r\nimport { DrawState, Mutation, Stroke } from \"../../lib/draw/DrawState\";\r\nimport { defaultDrawCtrl, DrawCtrl } from \"../../lib/draw/drawCtrl\";\r\nimport { releaseCanvas } from \"../../lib/draw/canvas\";\r\nimport { usePinch } from \"@use-gesture/react\";\r\nimport { v4 as getUid } from \"uuid\";\r\nimport { Set } from \"immutable\";\r\nimport paper from \"paper\";\r\nimport \"./draw.sass\";\r\n\r\nexport interface DrawRefType {\r\n  deleteSelected: () => void;\r\n  rotateSelected: (angle: number, last?: boolean) => void;\r\n  duplicateSelected: () => void;\r\n  mutateStyle: (updated: Partial<DrawCtrl>) => void;\r\n  rasterize: () => string;\r\n  submitText: (text: string, fontSize: number, color: string) => void;\r\n  cancelText: () => void;\r\n}\r\n\r\nconst PREVIEW_WIDTH = 200;\r\nconst {\r\n  Path,\r\n  Size,\r\n  Point,\r\n  Group,\r\n  Color,\r\n  Raster,\r\n  Shape: { Rectangle },\r\n} = paper;\r\n\r\nconst Draw = React.forwardRef<\r\n  DrawRefType,\r\n  {\r\n    drawState: DrawState;\r\n    otherStates?: DrawState[];\r\n    onChange?: Dispatch<SetStateAction<DrawState>>;\r\n    drawCtrl?: DrawCtrl;\r\n    readonly?: boolean;\r\n    preview?: boolean;\r\n    imgSrc?: string;\r\n    setActiveTool?: Dispatch<SetStateAction<\"\" | \"select\" | \"text\">>;\r\n  }\r\n>(\r\n  (\r\n    {\r\n      drawState,\r\n      otherStates,\r\n      onChange = () => {},\r\n      drawCtrl = defaultDrawCtrl,\r\n      preview = false,\r\n      readonly = preview,\r\n      imgSrc,\r\n      setActiveTool,\r\n    },\r\n    ref\r\n  ) => {\r\n    const { width, height } = drawState;\r\n    const { mode, color, finger, lineWidth, highlight, eraserWidth, lasso } =\r\n      drawCtrl;\r\n\r\n    const canvasEl = useRef<HTMLCanvasElement>(null);\r\n    const scope = useRef(new paper.PaperScope());\r\n    const [group, setGroup] = useState<paper.Item[]>([]);\r\n    const [erased, setErased] = useState(Set<string>());\r\n    const [path, setPath] = usePaperItem<paper.Path>();\r\n    const [rect, setRect] = usePaperItem<paper.Shape.Rectangle>();\r\n\r\n    useEffect(() => {\r\n      const setupPaper = () => {\r\n        if (!canvasEl.current) return;\r\n        scope.current.setup(canvasEl.current);\r\n\r\n        const r = preview ? PREVIEW_WIDTH / width : 1;\r\n        scope.current.view.viewSize = new Size(width, height).multiply(r);\r\n        scope.current.view.scale(r, new Point(0, 0));\r\n        paintBackground(scope.current, width, height);\r\n      };\r\n\r\n      setupPaper();\r\n      const cvs = canvasEl.current;\r\n      return () => void (cvs && releaseCanvas(cvs));\r\n    }, [width, height, preview]);\r\n\r\n    useEffect(() => {\r\n      if (!imgSrc) return;\r\n      const img = new Image();\r\n      img.src = imgSrc;\r\n      let raster: paper.Raster;\r\n\r\n      img.onload = () => {\r\n        scope.current.activate();\r\n        raster = new Raster(img);\r\n        scope.current.project.layers[0].addChild(raster);\r\n        raster.position = scope.current.view.center;\r\n        let r = width / img.width;\r\n        raster.scale(r);\r\n      };\r\n\r\n      return () => void raster?.remove();\r\n    }, [imgSrc, width]);\r\n\r\n    const mergedStrokes = useMemo(\r\n      () =>\r\n        otherStates\r\n          ? DrawState.mergeStates(drawState, ...otherStates)\r\n          : drawState.getStrokeList(),\r\n      [drawState, otherStates]\r\n    );\r\n\r\n    useEffect(() => {\r\n      const tempGroup: paper.Item[] = [];\r\n      const othersGroup: paper.Item[] = [];\r\n\r\n      mergedStrokes.forEach((stroke) =>\r\n        paintStroke(\r\n          stroke,\r\n          scope.current,\r\n          drawState.hasStroke(stroke.uid) ? tempGroup : othersGroup,\r\n          erased.has(stroke.uid)\r\n        )\r\n      );\r\n      setGroup(tempGroup);\r\n\r\n      return () => {\r\n        tempGroup.forEach((item) => item.remove());\r\n        othersGroup.forEach((item) => item.remove());\r\n      };\r\n    }, [mergedStrokes, erased, drawState]);\r\n\r\n    const [selected, setSelected] = useState(false);\r\n    const paperMode = mode === \"select\" && selected ? \"selected\" : mode;\r\n    const [selectedIDs, setSelectedIDs] = useState<string[]>([]);\r\n    const selectedItems = useMemo(() => {\r\n      const IDSet = Set(selectedIDs);\r\n      return group.filter((item) => IDSet.has(item.name));\r\n    }, [group, selectedIDs]);\r\n\r\n    const resetSelect = useCallback(() => {\r\n      setSelected(false);\r\n      setPath(undefined);\r\n      setRect(undefined);\r\n    }, [setPath, setRect]);\r\n\r\n    useEffect(() => {\r\n      if (mode === \"select\") return resetSelect;\r\n    }, [mode, resetSelect]);\r\n\r\n    useEffect(() => {\r\n      if (selected)\r\n        return () => {\r\n          setSelectedIDs([]);\r\n          // setCurrDrawCtrl({});\r\n        };\r\n    }, [selected]);\r\n\r\n    useEffect(resetSelect, [lasso, resetSelect]);\r\n\r\n    const ratio = useRef(1);\r\n    const updateRatio = () => {\r\n      const clientWidth = canvasEl.current?.clientWidth;\r\n      if (clientWidth) ratio.current = width / clientWidth;\r\n      scope.current.activate();\r\n    };\r\n\r\n    const setNewRect = (e: paper.MouseEvent) => {\r\n      const point = transformPoint(e.point);\r\n      const rectangle = startSelectRect(point);\r\n      setRect(rectangle);\r\n    };\r\n\r\n    const transformPoint = (projP: paper.Point) => {\r\n      scope.current.activate();\r\n      const { center, zoom } = scope.current.view;\r\n      const viewP = scope.current.view.projectToView(projP);\r\n      const absoluteP = viewP.multiply(ratio.current);\r\n      const offsetP = new Point(width, height)\r\n        .divide(2)\r\n        .subtract(center.multiply(zoom));\r\n      return absoluteP.subtract(offsetP).divide(zoom);\r\n    };\r\n\r\n    const handleDown = {\r\n      draw() {\r\n        updateRatio();\r\n        setPath(startStroke(color, lineWidth, highlight));\r\n      },\r\n      erase() {\r\n        updateRatio();\r\n        setPath(startStroke(\"#0003\", eraserWidth));\r\n      },\r\n      select(e: paper.MouseEvent) {\r\n        updateRatio();\r\n        if (lasso) setPath(startStroke(\"#1890ff\", 5));\r\n        else setNewRect(e);\r\n      },\r\n      selected(e: paper.MouseEvent) {\r\n        updateRatio();\r\n        const point = transformPoint(e.point);\r\n        // check if point is outside of selection\r\n        if (lasso) {\r\n          if (path?.contains(point)) return;\r\n          setPath(startStroke(\"#1890ff\", 5));\r\n        } else {\r\n          if (rect?.contains(point)) return;\r\n          setNewRect(e);\r\n        }\r\n        setSelected(false);\r\n      },\r\n      text(e: paper.MouseEvent) {\r\n        updateRatio();\r\n        const point = transformPoint(e.point);\r\n        const t = new paper.PointText(point);\r\n        setPointText(t);\r\n      },\r\n    }[paperMode];\r\n\r\n    const handleDrag = {\r\n      draw(e: paper.MouseEvent) {\r\n        if (!path) return;\r\n        scope.current.activate();\r\n        path.add(transformPoint(e.point));\r\n        path.smooth();\r\n      },\r\n      erase(e: paper.MouseEvent) {\r\n        if (!path) return;\r\n        scope.current.activate();\r\n        path.add(transformPoint(e.point));\r\n        path.smooth();\r\n\r\n        const newErased = group\r\n          .filter((p) => !erased.has(p.name))\r\n          .filter((p) => checkErase(p, path))\r\n          .map((p) => p.name);\r\n        setErased((prev) => prev.concat(newErased));\r\n      },\r\n      select(e: paper.MouseEvent) {\r\n        scope.current.activate();\r\n        if (lasso) {\r\n          if (!path) return;\r\n          path.add(transformPoint(e.point));\r\n          path.smooth();\r\n        } else {\r\n          if (!rect) return;\r\n          const delta = e.delta.multiply(ratio.current);\r\n          rect.size = rect.size.add(new Size(delta.x, delta.y));\r\n          rect.translate(delta.divide(2));\r\n        }\r\n      },\r\n      selected(e: paper.MouseEvent) {\r\n        scope.current.activate();\r\n        const delta = e.delta.multiply(ratio.current);\r\n        selectedItems.forEach((item) => item.translate(delta));\r\n        path?.translate(delta);\r\n        rect?.translate(delta);\r\n      },\r\n      text: null,\r\n    }[paperMode];\r\n\r\n    const handleUp = {\r\n      draw() {\r\n        if (!path || path.segments.length === 0) return;\r\n        scope.current.activate();\r\n        path.simplify();\r\n        const pathData = path.exportJSON();\r\n        onChange((prev) => DrawState.addStroke(prev, pathData));\r\n        setPath(undefined);\r\n      },\r\n      erase() {\r\n        if (!path) return;\r\n        scope.current.activate();\r\n        onChange((prev) => DrawState.eraseStrokes(prev, erased.toArray()));\r\n        setErased(Set());\r\n        setPath(undefined);\r\n      },\r\n      select() {\r\n        scope.current.activate();\r\n        let items: paper.Item[];\r\n        if (lasso) {\r\n          if (!path || path.length < 50) return setPath(undefined);\r\n          path.closePath();\r\n          path.simplify();\r\n          moveDash(path);\r\n          items = checkPathSelection(path, group);\r\n        } else {\r\n          if (!rect) return;\r\n          const { width, height } = rect.size.abs();\r\n          if (width * height < 100) return setRect(undefined);\r\n          moveDash(rect);\r\n          items = checkRectSelection(rect, group);\r\n        }\r\n        setSelectedIDs(items.map((item) => item.name));\r\n        setSelected(true);\r\n      },\r\n      selected() {\r\n        updateMutation();\r\n      },\r\n      text: null,\r\n    }[paperMode];\r\n\r\n    const handlePaper = () => {\r\n      if (readonly) return;\r\n      scope.current.view.onMouseDown = handleDown;\r\n      scope.current.view.onMouseDrag = handleDrag;\r\n      scope.current.view.onMouseUp = handleUp;\r\n    };\r\n    useEffect(handlePaper);\r\n\r\n    const updateMutation = () => {\r\n      if (!selectedItems?.length) return;\r\n      const mutations = selectedItems.map(\r\n        (p) => [p.name, p.exportJSON()] as Mutation\r\n      );\r\n      onChange((prev) => DrawState.mutateStrokes(prev, mutations));\r\n    };\r\n\r\n    const deleteSelected = () => {\r\n      if (!selectedIDs.length) return;\r\n      onChange((prev) => DrawState.eraseStrokes(prev, selectedIDs));\r\n      setSelectedIDs([]);\r\n      resetSelect();\r\n    };\r\n\r\n    const rotateSelected = (angle: number, last = false) => {\r\n      let aniCount = last ? 10 : 1;\r\n      const dAngle = angle / aniCount;\r\n      const center = (rect || path)?.position;\r\n      const rotate = () => {\r\n        selectedItems.forEach((item) => item.rotate(dAngle, center));\r\n        rect?.rotate(dAngle, center);\r\n        path?.rotate(dAngle, center);\r\n        if (--aniCount > 0) requestAnimationFrame(rotate);\r\n        else last && updateMutation();\r\n      };\r\n      rotate();\r\n    };\r\n\r\n    const mutateStyle = (updated: Partial<DrawCtrl>) => {\r\n      scope.current.activate();\r\n      updateGroupStyle(selectedItems, updated);\r\n      // setCurrDrawCtrl((prev) => ({ ...prev, ...updated }));\r\n      updateMutation();\r\n    };\r\n\r\n    const duplicateSelected = () => {\r\n      scope.current.activate();\r\n      const size = (rect || path)?.bounds.size;\r\n      if (!size) return;\r\n      const { width, height } = size;\r\n      const transP = new Point(width, height).divide(10);\r\n      const newSG = new Group(selectedItems).clone({ insert: false });\r\n      newSG.translate(transP);\r\n      rect?.translate(transP);\r\n      path?.translate(transP);\r\n\r\n      const mutations = newSG.children.map(\r\n        (item) => [getUid(), item.exportJSON()] as Mutation\r\n      );\r\n      onChange((prev) => DrawState.mutateStrokes(prev, mutations));\r\n      setSelectedIDs(mutations.map((m) => m[0]));\r\n    };\r\n\r\n    const rasterize = () =>\r\n      new Group(selectedItems).rasterize({ insert: false }).toDataURL();\r\n\r\n    const [pointText, setPointText] = usePaperItem<paper.PointText>();\r\n    const cancelText = useCallback(\r\n      () => setPointText(undefined),\r\n      [setPointText]\r\n    );\r\n\r\n    useEffect(() => {\r\n      if (mode === \"text\") return cancelText;\r\n    }, [mode, cancelText]);\r\n\r\n    const submitText = (text: string, fontSize: number, color = \"#000\") => {\r\n      if (!pointText) return;\r\n      pointText.content = text;\r\n      pointText.fontSize = fontSize * 10;\r\n      pointText.fillColor = new Color(color);\r\n      const pathData = pointText.exportJSON();\r\n      onChange((prev) => DrawState.addStroke(prev, pathData));\r\n      cancelText();\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      deleteSelected,\r\n      duplicateSelected,\r\n      cancelText,\r\n      rotateSelected,\r\n      submitText,\r\n      mutateStyle,\r\n      rasterize,\r\n    }));\r\n    useEffect(() => {\r\n      if (!setActiveTool) return;\r\n      if (paperMode === \"selected\") {\r\n        setActiveTool(\"select\");\r\n      } else if (paperMode === \"text\") {\r\n        setActiveTool(pointText ? \"text\" : \"\");\r\n      } else {\r\n        setActiveTool(\"\");\r\n      }\r\n    }, [paperMode, pointText, setActiveTool]);\r\n\r\n    usePreventGesture();\r\n    usePinch(\r\n      ({ memo, offset: [scale], first, last, origin }) => {\r\n        const { view } = scope.current;\r\n\r\n        let lastScale, lastOX, lastOY, elX, elY: number;\r\n        if (first || !memo) {\r\n          updateRatio();\r\n          if (!canvasEl.current) return;\r\n          const { x, y } = canvasEl.current.getBoundingClientRect();\r\n          lastScale = 1;\r\n          [lastOX, lastOY] = [origin[0] - x, origin[1] - y];\r\n          [elX, elY] = [x, y];\r\n        } else {\r\n          [lastScale, [lastOX, lastOY], [elX, elY]] = memo;\r\n        }\r\n\r\n        const r = ratio.current;\r\n        const [oX, oY] = [origin[0] - elX, origin[1] - elY];\r\n        const originViewP = new Point(oX, oY).multiply(r);\r\n        const originProjP = view.viewToProject(originViewP);\r\n\r\n        if (Math.abs(1 - scale) < 0.05) scale = 1;\r\n        let dScale = first ? 1 : scale / lastScale;\r\n        let aniCount = last ? 10 : 1;\r\n        dScale = Math.pow(dScale, 1 / aniCount);\r\n        const scaleView = () => {\r\n          view.scale(dScale, originProjP);\r\n          if (--aniCount > 0) requestAnimationFrame(scaleView);\r\n        };\r\n        scaleView();\r\n\r\n        const [dX, dY] = [oX - lastOX, oY - lastOY];\r\n        const transP = new Point(dX, dY).multiply(r / scale);\r\n        view.translate(transP);\r\n\r\n        if (!last) return [scale, [oX, oY], [elX, elY]];\r\n        putCenterBack(view);\r\n      },\r\n      {\r\n        scaleBounds: { max: 5, min: 0.3 },\r\n        rubberband: 0.5,\r\n        target: canvasEl,\r\n      }\r\n    );\r\n\r\n    const touchHandler = usePreventTouch(finger);\r\n    return (\r\n      <div className=\"draw-wrapper\">\r\n        <canvas\r\n          ref={canvasEl}\r\n          className=\"draw-canvas\"\r\n          data-paper-hidpi={false}\r\n          {...touchHandler}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default React.memo(Draw);\r\n\r\nfunction usePaperItem<T extends paper.Item>(init?: T) {\r\n  const stateArray = useState<T | undefined>(init);\r\n  const [item] = stateArray;\r\n  useDebugValue(item);\r\n  useEffect(() => () => void item?.remove(), [item]);\r\n  return stateArray;\r\n}\r\n\r\nconst paintStroke = (\r\n  stroke: Stroke,\r\n  scope: paper.PaperScope,\r\n  group?: paper.Item[],\r\n  erased = false\r\n) => {\r\n  let { pathData, uid } = stroke;\r\n  try {\r\n    scope.activate();\r\n    const item = scope.project.activeLayer.importJSON(pathData);\r\n    if (!item) return;\r\n    item.name = uid;\r\n    if (erased) item.opacity = 0.5;\r\n    group?.push(item);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getCheckPoints = (() => {\r\n  const cache = new WeakMap<paper.Segment, paper.Point[]>();\r\n  return (segment: paper.Segment, width: number) => {\r\n    const cached = cache.get(segment);\r\n    if (cached) return cached;\r\n\r\n    const { point } = segment;\r\n    const prevPoint = segment.previous?.point;\r\n    if (!prevPoint) return [];\r\n    const delta = point.subtract(prevPoint);\r\n    const times = (delta.length / width) * 2;\r\n    const checkPoints: paper.Point[] = [];\r\n    for (let i = 0; i < times; i += 1) {\r\n      checkPoints.push(point.subtract(delta.multiply(i / times)));\r\n    }\r\n    cache.set(segment, checkPoints);\r\n    return checkPoints;\r\n  };\r\n})();\r\n\r\nconst checkErase = (item: paper.Item, eraserPath: paper.Path) => {\r\n  const curveBound = eraserPath.lastSegment.curve?.strokeBounds;\r\n  if (!(item instanceof paper.Path)) return false;\r\n  if (!curveBound?.intersects(item.strokeBounds)) return false;\r\n\r\n  if (eraserPath.intersects(item)) return true;\r\n\r\n  const { strokeWidth, lastSegment } = eraserPath;\r\n  const checkPoints = getCheckPoints(lastSegment, strokeWidth);\r\n  return checkPoints.some((cPoint) => {\r\n    const d = item.getNearestPoint(cPoint)?.getDistance(cPoint);\r\n    return d && d * 2 < item.strokeWidth + strokeWidth;\r\n  });\r\n};\r\n\r\nconst paintBackground = (\r\n  scope: paper.PaperScope,\r\n  width: number,\r\n  height: number\r\n) => {\r\n  scope.activate();\r\n  const bgRect = new Rectangle(new Point(0, 0), new Point(width, height));\r\n  bgRect.fillColor = new Color(\"#fff\");\r\n  const bgLayer = new paper.Layer(bgRect);\r\n  scope.project.insertLayer(0, bgLayer);\r\n  return bgRect;\r\n};\r\n\r\nconst startSelectRect = (point: paper.Point) => {\r\n  const rect = new Rectangle(point, new Size(0, 0));\r\n  rect.strokeColor = new Color(\"#1890ff\");\r\n  rect.strokeWidth = 5;\r\n  return rect;\r\n};\r\n\r\nconst startStroke = (color: string, lineWidth: number, highlight = false) => {\r\n  const path = new Path();\r\n  const strokeColor = new Color(color);\r\n  if (highlight) {\r\n    strokeColor.alpha = 0.5;\r\n    path.blendMode = \"multiply\";\r\n  }\r\n  path.strokeColor = strokeColor;\r\n  path.strokeWidth = lineWidth;\r\n  path.strokeJoin = \"round\";\r\n  path.strokeCap = \"round\";\r\n  return path;\r\n};\r\n\r\nconst moveDash = (item: paper.Item) => {\r\n  if (item.strokeColor) item.strokeColor.alpha = 0.5;\r\n  item.dashOffset = 0;\r\n  item.dashArray = [30, 20];\r\n  item.onFrame = () => (item.dashOffset += 3);\r\n};\r\n\r\nconst getCenterTranslate = (view: paper.View) => {\r\n  const { center, zoom } = view;\r\n  const { height, width } = view.viewSize;\r\n  const { x, y } = center;\r\n  if (zoom <= 1) return [width / 2 - x, height / 2 - y];\r\n\r\n  const dX = (width * (zoom - 1)) / zoom / 2;\r\n  const dY = (height * (zoom - 1)) / zoom / 2;\r\n  const [minX, maxX, minY, maxY] = [\r\n    width / 2 - dX,\r\n    width / 2 + dX,\r\n    height / 2 - dY,\r\n    height / 2 + dY,\r\n  ];\r\n\r\n  const deltaX = x < minX ? minX - x : x > maxX ? maxX - x : 0;\r\n  const deltaY = y < minY ? minY - y : y > maxY ? maxY - y : 0;\r\n  return [deltaX, deltaY];\r\n};\r\n\r\nconst putCenterBack = (view: paper.View) => {\r\n  const [deltaX, deltaY] = getCenterTranslate(view);\r\n  let aniCount = 10;\r\n  const dP = new Point(deltaX, deltaY).divide(-aniCount);\r\n  const move = () => {\r\n    view.translate(dP);\r\n    if (--aniCount > 0) requestAnimationFrame(move);\r\n  };\r\n  move();\r\n};\r\n\r\nconst checkRectSelection = (rect: paper.Shape.Rectangle, items: paper.Item[]) =>\r\n  items.filter((item) =>\r\n    item instanceof paper.Path\r\n      ? item.intersects(rect) || item.isInside(rect.bounds)\r\n      : item.bounds.intersects(rect.bounds)\r\n  );\r\n\r\nconst checkPathSelection = (selection: paper.Path, items: paper.Item[]) => {\r\n  const isInside = (p: paper.Path) => {\r\n    const res = p.subtract(selection, { insert: false, trace: false });\r\n    res.remove();\r\n    return res.isEmpty();\r\n  };\r\n\r\n  return items.filter((item) => {\r\n    if (!item.bounds.intersects(selection.bounds)) return false;\r\n    let checkedP: paper.Path;\r\n    if (item instanceof paper.Path) {\r\n      checkedP = item;\r\n    } else {\r\n      checkedP = new Path.Rectangle(item.bounds);\r\n      checkedP.remove();\r\n    }\r\n    return checkedP.intersects(selection) || isInside(checkedP);\r\n  });\r\n};\r\n\r\nconst updateGroupStyle = (items: paper.Item[], updated: Partial<DrawCtrl>) => {\r\n  const { lineWidth, color, highlight } = updated;\r\n  items.forEach((item) => {\r\n    if (item instanceof paper.PointText) {\r\n      if (color) {\r\n        const newColor = new Color(color);\r\n        item.fillColor = newColor;\r\n      }\r\n    }\r\n\r\n    if (!(item instanceof paper.Path)) return;\r\n\r\n    if (color) {\r\n      const newColor = new Color(color);\r\n      if (item.blendMode === \"multiply\") newColor.alpha = 0.5;\r\n      item.strokeColor = newColor;\r\n    }\r\n\r\n    if (lineWidth) item.strokeWidth = lineWidth;\r\n\r\n    if (!item.strokeColor || highlight === undefined) return;\r\n    item.strokeColor.alpha = highlight ? 0.5 : 1;\r\n    item.blendMode = highlight ? \"multiply\" : \"normal\";\r\n  });\r\n};\r\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useCallback,\r\n  createContext,\r\n} from \"react\";\r\nimport {\r\n  DrawCtrl,\r\n  getDrawCtrl,\r\n  defaultDrawCtrl,\r\n} from \"../../lib/draw/drawCtrl\";\r\nimport {\r\n  NoteInfo,\r\n  NotePage,\r\n  createPage,\r\n  defaultNotePage,\r\n} from \"../../lib/note/note\";\r\nimport { useInViewport, useMemoizedFn as useEvent, useSafeState } from \"ahooks\";\r\nimport { NewPageInfo, ReorderInfo, SyncInfo } from \"../../lib/network/io\";\r\nimport { SetOperation, StateSet } from \"../../lib/draw/StateSet\";\r\nimport { loadNote, editNoteData } from \"../../lib/note/archive\";\r\nimport { AddPageButton, showPageDelMsg } from \"./ReaderUtils\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { DrawState } from \"../../lib/draw/DrawState\";\r\nimport { updatePages } from \"../../lib/network/http\";\r\nimport { TeamState } from \"../../lib/draw/TeamState\";\r\nimport { SelectTool, TextTool } from \"./DrawTools\";\r\nimport { insertAfter } from \"../../lib/array\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { debounce, once } from \"lodash-es\";\r\nimport { Map, Set } from \"immutable\";\r\nimport DrawTools from \"./ReaderHeader\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport Draw, { DrawRefType } from \"../draw/Draw\";\r\nimport { message } from \"antd\";\r\nimport \"./reader.sass\";\r\n\r\nexport const ReaderStateCtx = createContext({\r\n  noteID: \"\",\r\n  noteInfo: undefined as NoteInfo | undefined,\r\n  stateSet: undefined as StateSet | undefined,\r\n  teamState: undefined as TeamState | undefined,\r\n  pageRec: undefined as Map<string, NotePage> | undefined,\r\n  pageOrder: undefined as string[] | undefined,\r\n  saved: true,\r\n  inviewPages: Set<string>(),\r\n  drawCtrl: defaultDrawCtrl,\r\n});\r\n\r\nexport const ReaderMethodCtx = createContext({\r\n  scrollPage: (pageID: string) => {},\r\n  switchPageMarked: (pageID: string) => {},\r\n  updateStateSet: (cb: (prevSS: StateSet) => StateSet) => {},\r\n  addPage: (prevPageID: string, copy?: boolean) => {},\r\n  addFinalPage: () => {},\r\n  deletePage: (pageID: string) => {},\r\n  saveReorder: async (order: string[], push: boolean) => {},\r\n  setInviewPages: (() => {}) as Setter<Set<string>>,\r\n  setDrawCtrl: (() => {}) as Setter<DrawCtrl>,\r\n});\r\n\r\nexport default function Reader() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const nav = useNavigate();\r\n\r\n  const [pageRec, setPageRec] = useState<Map<string, NotePage>>();\r\n  const [noteInfo, setNoteInfo] = useState<NoteInfo>();\r\n  const [stateSet, setStateSet] = useState<StateSet>();\r\n  const [drawCtrl, setDrawCtrl] = useState(defaultDrawCtrl);\r\n  const [inviewPages, setInviewPages] = useState(Set<string>());\r\n  const [pageOrder, setPageOrder] = useState<string[]>();\r\n  const [saved, setSaved] = useSafeState(true);\r\n\r\n  const refRec = useRef<Record<string, HTMLElement>>({});\r\n\r\n  const { io, teamOn, teamState, addTeamStatePage } = useContext(TeamCtx);\r\n\r\n  useEffect(() => {\r\n    const loadNotePages = async () => {\r\n      const storedNote = await loadNote(noteID);\r\n      if (!storedNote) {\r\n        message.error(\"Note not found\");\r\n        return nav(\"/\");\r\n      }\r\n      const { pageRec, pdf, pageOrder, ...noteInfo } = storedNote;\r\n      setPageRec(Map(pageRec));\r\n      setPageOrder(pageOrder);\r\n      setNoteInfo(noteInfo);\r\n      setStateSet(StateSet.createFromPages(pageRec));\r\n      setDrawCtrl(await getDrawCtrl());\r\n      if (teamOn) updatePages(noteID);\r\n    };\r\n    loadNotePages();\r\n  }, [nav, noteID, teamOn]);\r\n\r\n  useEffect(() => {\r\n    if (!noteInfo) return;\r\n    document.title = noteInfo.name + \" - Multibility\";\r\n  }, [noteInfo]);\r\n\r\n  const saver = useEvent(async () => {\r\n    const pr = pageRec?.toObject();\r\n    const canvas = document.querySelector(\"canvas\");\r\n    const thumbnail = canvas?.toDataURL();\r\n    await editNoteData(noteID, { pageRec: pr, thumbnail });\r\n    setSaved(true);\r\n  });\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const debouncedSave = useCallback(debounce(saver, 2000), [saver]);\r\n  const instantSave = debouncedSave.flush;\r\n\r\n  const savePageRec = (pageID: string, cb: (prev: NotePage) => NotePage) => {\r\n    setPageRec((prev) => prev?.update(pageID, defaultNotePage, cb));\r\n    setSaved(false);\r\n    debouncedSave();\r\n  };\r\n\r\n  const saveReorder = async (pageOrder: string[], push = false) => {\r\n    setPageOrder(pageOrder);\r\n    await editNoteData(noteID, { pageOrder });\r\n    await instantSave();\r\n    push && pushReorder(pageOrder);\r\n  };\r\n\r\n  const pushReorder = (pageOrder: string[]) => {\r\n    io?.emit(\"reorder\", { pageOrder });\r\n  };\r\n\r\n  const handleReorder = useEvent(\r\n    ({ deleted, pageOrder, prevOrder }: ReorderInfo) => {\r\n      saveReorder(pageOrder);\r\n      if (!deleted) return;\r\n      showPageDelMsg(() => saveReorder(prevOrder, true));\r\n    }\r\n  );\r\n\r\n  const handleNewPage = useEvent(\r\n    ({ pageOrder, pageID, newPage }: NewPageInfo) => {\r\n      saveReorder(pageOrder);\r\n      savePageRec(pageID, () => newPage);\r\n      setStateSet((prev) => prev?.addState(pageID, newPage));\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    io?.on(\"reorder\", handleReorder);\r\n    io?.on(\"newPage\", handleNewPage);\r\n    return () => void io?.removeAllListeners();\r\n  }, [io, handleReorder, handleNewPage]);\r\n\r\n  const pushOperation = (operation: SetOperation) => {\r\n    const handleSync = ({ pageID, stroke }: SyncInfo) =>\r\n      setStateSet((prev) => prev?.syncStrokeTime(pageID, stroke));\r\n\r\n    io?.emit(\"push\", { operation }, handleSync);\r\n  };\r\n\r\n  const pushNewPage = (\r\n    pageOrder: string[],\r\n    pageID: string,\r\n    newPage: NotePage\r\n  ) => {\r\n    const { image, marked, ...newTeamPage } = newPage;\r\n    io?.emit(\"newPage\", { pageOrder, pageID, newPage: newTeamPage });\r\n    addTeamStatePage(pageID, newPage);\r\n  };\r\n\r\n  const updatePageRec = (pageID: string, ds: DrawState) => {\r\n    const state = DrawState.flaten(ds);\r\n    savePageRec(pageID, (prev) => ({ ...prev, state }));\r\n  };\r\n\r\n  const updateStateSet = (cb: (prevSS: StateSet) => StateSet) => {\r\n    if (!stateSet) return;\r\n    const newSS = cb(stateSet);\r\n    setStateSet(newSS);\r\n    const lastDS = newSS.getLastDS();\r\n    const lastOp = newSS.lastOp;\r\n    if (!lastDS || !lastOp) return;\r\n    updatePageRec(...lastDS);\r\n    pushOperation(lastOp);\r\n  };\r\n\r\n  const switchPageMarked = (pageID: string) => {\r\n    savePageRec(pageID, (prev) => ({ ...prev, marked: !prev.marked }));\r\n  };\r\n\r\n  const scrollPage = (pageID: string) => {\r\n    refRec.current[pageID]?.scrollIntoView();\r\n  };\r\n\r\n  const addPage = (prevPageID: string, copy = false) => {\r\n    if (!pageOrder) return;\r\n    const prevPage = copy ? pageRec?.get(prevPageID) : undefined;\r\n    const [pageID, newPage] = createPage(prevPage);\r\n    const newOrder = insertAfter(pageOrder, prevPageID, pageID);\r\n    pushNewPage(newOrder, pageID, newPage);\r\n    saveReorder(newOrder);\r\n    savePageRec(pageID, () => newPage);\r\n    setStateSet((prev) => prev?.addState(pageID, newPage));\r\n  };\r\n\r\n  const addFinalPage = () => {\r\n    const lastPageID = pageOrder?.at(-1);\r\n    lastPageID && addPage(lastPageID);\r\n  };\r\n\r\n  const deletePage = (pageID: string) => {\r\n    const newOrder = pageOrder?.filter((id) => id !== pageID);\r\n    newOrder?.length && saveReorder(newOrder, true);\r\n  };\r\n\r\n  const renderResult = (\r\n    <div className=\"reader container\">\r\n      <DrawTools\r\n        handleUndo={() => updateStateSet((prev) => prev.undo())}\r\n        handleRedo={() => updateStateSet((prev) => prev.redo())}\r\n        instantSave={instantSave}\r\n      />\r\n      <main>\r\n        {pageOrder?.map((uid) => (\r\n          <section\r\n            key={uid}\r\n            className=\"note-page\"\r\n            ref={(e) => e && (refRec.current[uid] = e)}\r\n          >\r\n            <PageContainer uid={uid} />\r\n          </section>\r\n        ))}\r\n        <AddPageButton />\r\n      </main>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ReaderStateCtx.Provider\r\n      value={{\r\n        saved,\r\n        noteID,\r\n        pageRec,\r\n        drawCtrl,\r\n        noteInfo,\r\n        stateSet,\r\n        teamState,\r\n        pageOrder,\r\n        inviewPages,\r\n      }}\r\n    >\r\n      <ReaderMethodCtx.Provider\r\n        value={{\r\n          addPage,\r\n          scrollPage,\r\n          deletePage,\r\n          setDrawCtrl,\r\n          saveReorder,\r\n          addFinalPage,\r\n          updateStateSet,\r\n          setInviewPages,\r\n          switchPageMarked,\r\n        }}\r\n      >\r\n        {renderResult}\r\n      </ReaderMethodCtx.Provider>\r\n    </ReaderStateCtx.Provider>\r\n  );\r\n}\r\n\r\nconst PageContainer: FC<{ uid: string }> = ({ uid }) => {\r\n  const { pageRec, stateSet, teamState } = useContext(ReaderStateCtx);\r\n  const { updateStateSet } = useContext(ReaderMethodCtx);\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n  const updateState = (ds: DrawState) => {\r\n    updateStateSet((prev) => prev.setState(uid, ds));\r\n  };\r\n\r\n  if (!page || !drawState) return null;\r\n  return (\r\n    <PageWrapper\r\n      drawState={drawState}\r\n      teamStateMap={teamStateMap}\r\n      updateState={updateState}\r\n      pdfIndex={page.pdfIndex}\r\n      uid={uid}\r\n    />\r\n  );\r\n};\r\n\r\nexport const PageWrapper = ({\r\n  thumbnail,\r\n  drawState,\r\n  teamStateMap,\r\n  updateState,\r\n  pdfIndex,\r\n  preview = false,\r\n  uid,\r\n}: {\r\n  uid: string;\r\n  drawState: DrawState;\r\n  teamStateMap?: Map<string, DrawState>;\r\n  thumbnail?: string;\r\n  pdfIndex?: number;\r\n  updateState?: (ds: DrawState) => void;\r\n  preview?: boolean;\r\n}) => {\r\n  const { setInviewPages } = useContext(ReaderMethodCtx);\r\n  const { noteID } = useContext(ReaderStateCtx);\r\n  const [fullImg, setFullImg] = useState<string>();\r\n  const wrapperEl = useRef<HTMLDivElement>(null);\r\n  const [visible] = useInViewport(wrapperEl);\r\n\r\n  const { height, width } = drawState;\r\n  const ratio = height / width;\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const loadImage = useCallback(\r\n    once(async () => {\r\n      if (!pdfIndex) return;\r\n      const { getOnePageImage } = await import(\"../../lib/note/pdfImage\");\r\n      setFullImg(await getOnePageImage(noteID, pdfIndex));\r\n    }),\r\n    [pdfIndex, noteID]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (preview) return;\r\n    if (visible) {\r\n      loadImage();\r\n      setInviewPages((prev) => prev.add(uid));\r\n    } else {\r\n      setInviewPages((prev) => prev.delete(uid));\r\n    }\r\n  }, [visible, preview, uid, loadImage, setInviewPages]);\r\n\r\n  const { ignores } = useContext(TeamCtx);\r\n  const otherStates = useMemo(\r\n    () => teamStateMap?.deleteAll(ignores).toList().toArray(),\r\n    [teamStateMap, ignores]\r\n  );\r\n\r\n  const imageLoaded = fullImg || !pdfIndex;\r\n  const drawShow = visible && imageLoaded;\r\n  const maskShow = Boolean(preview || !drawShow);\r\n\r\n  return (\r\n    <div\r\n      ref={wrapperEl}\r\n      className=\"page-wrapper\"\r\n      style={{ paddingTop: `${ratio * 100}%` }}\r\n    >\r\n      {drawShow && (\r\n        <DrawWrapper\r\n          drawState={drawState}\r\n          otherStates={otherStates}\r\n          updateState={updateState}\r\n          imgSrc={fullImg || thumbnail}\r\n          preview={preview}\r\n        />\r\n      )}\r\n      {maskShow && <div className=\"mask\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DrawWrapper = ({\r\n  drawState,\r\n  updateState,\r\n  otherStates,\r\n  preview = false,\r\n  imgSrc,\r\n}: {\r\n  drawState: DrawState;\r\n  otherStates?: DrawState[];\r\n  updateState?: (ds: DrawState) => void;\r\n  preview?: boolean;\r\n  imgSrc?: string;\r\n}) => {\r\n  const { drawCtrl } = useContext(ReaderStateCtx);\r\n  const [activeTool, setActiveTool] = useState<\"\" | \"select\" | \"text\">(\"\");\r\n  const drawRef = useRef<DrawRefType>(null);\r\n\r\n  const handleChange = useEvent(\r\n    (arg: ((s: DrawState) => DrawState) | DrawState) => {\r\n      if (!updateState) return;\r\n      const newDS = arg instanceof DrawState ? arg : arg(drawState);\r\n      updateState(newDS);\r\n    }\r\n  );\r\n\r\n  return preview ? (\r\n    <Draw\r\n      drawState={drawState}\r\n      otherStates={otherStates}\r\n      imgSrc={imgSrc}\r\n      readonly\r\n      preview\r\n    />\r\n  ) : (\r\n    <>\r\n      <Draw\r\n        drawState={drawState}\r\n        otherStates={otherStates}\r\n        onChange={handleChange}\r\n        imgSrc={imgSrc}\r\n        drawCtrl={drawCtrl}\r\n        ref={drawRef}\r\n        setActiveTool={setActiveTool}\r\n      />\r\n      <SelectTool drawRef={drawRef} visible={activeTool === \"select\"} />\r\n      <TextTool drawRef={drawRef} visible={activeTool === \"text\"} />\r\n    </>\r\n  );\r\n};\r\nDrawWrapper.displayName = \"DrawWrapper\";\r\n","import { io } from \"socket.io-client\";\r\nimport { Stroke } from \"../draw/DrawState\";\r\nimport { NotePage } from \"../note/note\";\r\nimport { getUserID, getUserName } from \"../user\";\r\nimport { BASE_URL } from \"./http\";\r\n\r\nexport const IoFactory = (noteID: string) => () =>\r\n  io(BASE_URL, {\r\n    query: {\r\n      userID: getUserID(),\r\n      userName: getUserName(),\r\n      noteID,\r\n    },\r\n  });\r\n\r\nexport interface ReorderInfo {\r\n  pageOrder: string[];\r\n  prevOrder: string[];\r\n  deleted: boolean;\r\n}\r\n\r\nexport interface NewPageInfo {\r\n  pageOrder: string[];\r\n  pageID: string;\r\n  newPage: NotePage;\r\n}\r\n\r\nexport interface SyncInfo {\r\n  stroke: Stroke;\r\n  pageID: string;\r\n}\r\n","import { NotePage, TeamPage, TeamPageInfo } from \"../note/note\";\nimport { DrawState, WIDTH } from \"./DrawState\";\nimport { SetOperation } from \"./StateSet\";\nimport { Map, Record } from \"immutable\";\n\ninterface TeamStateRecordType {\n  pageStates: Map<string, Map<string, DrawState>>;\n  pageInfos: Map<string, TeamPageInfo>;\n}\n\nconst defaultRecord: Readonly<TeamStateRecordType> = {\n  pageStates: Map(),\n  pageInfos: Map(),\n};\n\ntype TeamStateRecord = Record<TeamStateRecordType>;\nconst defaultFactory = Record(defaultRecord);\n\nexport class TeamState {\n  constructor(private immutable: TeamStateRecord) {}\n\n  getImmutable() {\n    return this.immutable;\n  }\n\n  getPageStates() {\n    return this.getImmutable().get(\"pageStates\");\n  }\n\n  getPageInfos() {\n    return this.getImmutable().get(\"pageInfos\");\n  }\n\n  getOneState(pageID: string, userID: string) {\n    return this.getPageStates().get(pageID)?.get(userID);\n  }\n\n  getOnePageStateMap(pageID: string) {\n    return this.getPageStates().get(pageID);\n  }\n\n  getPageValidUsers(pageID: string) {\n    const map = this.getOnePageStateMap(pageID);\n    if (!map) return [];\n    return Array.from(map?.filter((ds) => !ds.isEmpty()).keys());\n  }\n\n  getPageRatio(pageID: string) {\n    return this.getPageInfos().get(pageID)?.ratio;\n  }\n\n  includesPage(pageID: string) {\n    return this.getPageStates().has(pageID);\n  }\n\n  setState(pageID: string, userID: string, drawState: DrawState) {\n    const pageMap = this.getPageStates().get(pageID);\n    if (!pageMap) return this;\n    return new TeamState(\n      this.getImmutable().update(\"pageStates\", (m) =>\n        m.set(pageID, pageMap.set(userID, drawState))\n      )\n    );\n  }\n\n  static createFromTeamPages(\n    teamPages: globalThis.Record<string, TeamPage>,\n    width = WIDTH\n  ) {\n    let record = defaultFactory();\n    Object.entries(teamPages).forEach(([pageID, teamPage]) => {\n      const { states, ratio } = teamPage;\n      const pageMap = Map(\n        Object.entries(states).map(([userID, flatState]) => [\n          userID,\n          DrawState.loadFromFlat(flatState, width, width * ratio),\n        ])\n      );\n      record = record\n        .update(\"pageStates\", (m) => m.set(pageID, pageMap))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }));\n    });\n    return new TeamState(record);\n  }\n\n  addPage(pageID: string, notePage: NotePage) {\n    const { ratio } = notePage;\n    return new TeamState(\n      this.getImmutable()\n        .update(\"pageStates\", (m) => m.set(pageID, Map()))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }))\n    );\n  }\n\n  pushOperation(setOp: SetOperation, userID: string, width = WIDTH) {\n    const { pageID, ...op } = setOp;\n    const ratio = this.getPageRatio(pageID);\n    if (!this.includesPage(pageID) || !ratio) return this;\n    const prevDs =\n      this.getOneState(pageID, userID) ||\n      DrawState.createEmpty(width, width * ratio);\n\n    const ds = DrawState.pushOperation(prevDs, op);\n    return this.setState(pageID, userID, ds);\n  }\n\n  resetUser(userID: string, pageRec: globalThis.Record<string, NotePage>) {\n    let newTS: TeamState = this;\n    for (let [pageID, { state, ratio }] of Object.entries(pageRec)) {\n      const prevDS = newTS.getOneState(pageID, userID);\n      if (!prevDS) continue;\n      const { width } = prevDS;\n      newTS = newTS.setState(\n        pageID,\n        userID,\n        DrawState.loadFromFlat(state, width, width * ratio)\n      );\n    }\n    return newTS;\n  }\n}\n","import React, { useState, useEffect, createContext, useCallback } from \"react\";\r\nimport { getTeamNoteState, loadTeamNoteInfo } from \"../../lib/network/http\";\r\nimport { LoginOutlined, LogoutOutlined } from \"@ant-design/icons\";\r\nimport { IoFactory, NewPageInfo } from \"../../lib/network/io\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { TeamState } from \"../../lib/draw/TeamState\";\r\nimport { getUserID, UserInfo } from \"../../lib/user\";\r\nimport { NotePage } from \"../../lib/note/note\";\r\nimport { Socket } from \"socket.io-client\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { Loading } from \"../ui/Loading\";\r\nimport { message } from \"antd\";\r\nimport { Set } from \"immutable\";\r\nimport Reader from \"./Reader\";\r\n\r\nexport const TeamCtx = createContext({\r\n  io: undefined as Socket | undefined,\r\n  code: 0,\r\n  teamOn: false,\r\n  connected: false,\r\n  ignores: Set<string>(),\r\n  userRec: {} as Record<string, UserInfo>,\r\n  teamState: undefined as TeamState | undefined,\r\n  resetIO: () => {},\r\n  loadInfo: async () => false,\r\n  loadState: async () => false,\r\n  setIgnores: (() => {}) as Setter<Set<string>>,\r\n  addTeamStatePage: (pageID: string, newPage: NotePage) => {},\r\n});\r\n\r\nexport default function Team() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const [teamState, setTeamState] = useState<TeamState>();\r\n  const [code, setCode] = useState(-2);\r\n  const [userRec, setUserRec] = useState<Record<string, UserInfo>>({});\r\n  const [ignores, setIgnores] = useState(Set<string>());\r\n  const [io, setIO] = useState(IoFactory(noteID));\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [connected, setConnected] = useState(false);\r\n  const nav = useNavigate();\r\n\r\n  const loadInfo = useCallback(async () => {\r\n    const info = await loadTeamNoteInfo(noteID);\r\n    if (!info) {\r\n      message.error(\"Failed loading the team note info\");\r\n      return false;\r\n    }\r\n    setCode(info.code);\r\n    return true;\r\n  }, [noteID]);\r\n\r\n  const loadState = useCallback(async () => {\r\n    const teamNote = await getTeamNoteState(noteID);\r\n    if (!teamNote) {\r\n      message.error(\"Failed loading the team note state\");\r\n      return false;\r\n    }\r\n    setTeamState(TeamState.createFromTeamPages(teamNote));\r\n    return true;\r\n  }, [noteID]);\r\n\r\n  useEffect(() => {\r\n    const roomInit = async () => {\r\n      const infoLoaded = await loadInfo();\r\n      const stateLoaded = await loadState();\r\n      if (infoLoaded && stateLoaded) return setLoaded(true);\r\n      nav(\"/\");\r\n    };\r\n    roomInit();\r\n  }, [loadInfo, loadState, nav]);\r\n\r\n  useEffect(() => {\r\n    io.on(\"push\", ({ operation, userID }) => {\r\n      setTeamState((prev) => prev?.pushOperation(operation, userID));\r\n    });\r\n\r\n    io.on(\"join\", ({ joined, members }) => {\r\n      const { userID, userName } = joined;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return;\r\n      showJoinMsg(userID, userName);\r\n    });\r\n\r\n    io.on(\"leave\", ({ leaved, members }) => {\r\n      const { userID, userName } = leaved;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return io.emit(\"join\");\r\n      showLeaveMsg(userID, userName);\r\n    });\r\n\r\n    io.on(\"newPage\", (info: NewPageInfo) => {\r\n      const { pageID, newPage } = info;\r\n      setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n    });\r\n\r\n    io.on(\"reset\", ({ userID, pageRec }) => {\r\n      if (userID === getUserID()) return;\r\n      setTeamState((prev) => prev?.resetUser(userID, pageRec));\r\n    });\r\n\r\n    io.on(\"connect_error\", console.error);\r\n    io.on(\"connect\", () => setConnected(true));\r\n    io.on(\"disconnect\", () => setConnected(false));\r\n\r\n    return () => {\r\n      io.removeAllListeners();\r\n      io.close();\r\n    };\r\n  }, [io]);\r\n\r\n  const addTeamStatePage = (pageID: string, newPage: NotePage) => {\r\n    setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n  };\r\n\r\n  const resetIO = () => setIO(IoFactory(noteID));\r\n\r\n  return (\r\n    <Loading loading={!loaded}>\r\n      <TeamCtx.Provider\r\n        value={{\r\n          io,\r\n          code,\r\n          teamOn: true,\r\n          ignores,\r\n          userRec,\r\n          connected,\r\n          teamState,\r\n          resetIO,\r\n          loadInfo,\r\n          loadState,\r\n          setIgnores,\r\n          addTeamStatePage,\r\n        }}\r\n      >\r\n        <Reader />\r\n      </TeamCtx.Provider>\r\n    </Loading>\r\n  );\r\n}\r\n\r\nconst showJoinMsg = (userID: string, userName: string) => {\r\n  message.destroy(userID);\r\n  message.success({\r\n    content: `${userName} joined room`,\r\n    icon: <LoginOutlined />,\r\n    key: userID,\r\n  });\r\n};\r\n\r\nconst showLeaveMsg = (userID: string, userName: string) => {\r\n  message.destroy(userID);\r\n  message.warning({\r\n    content: `${userName} leaved room`,\r\n    icon: <LogoutOutlined />,\r\n    key: userID,\r\n  });\r\n};\r\n","export function createVirtualCanvas(width: number, height: number) {\r\n  const canvas = document.createElement(\"canvas\");\r\n  const context = canvas.getContext(\"2d\");\r\n  if (!context) {\r\n    throw new Error(\"can't get virtual canvas context\");\r\n  }\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n  return { canvas, context };\r\n}\r\n\r\nexport function releaseCanvas(canvas: HTMLCanvasElement) {\r\n  canvas.width = 1;\r\n  canvas.height = 1;\r\n  const ctx = canvas.getContext('2d');\r\n  ctx?.clearRect(0, 0, 1, 1);\r\n}\r\n"],"names":["defaultDrawCtrl","mode","finger","lineWidth","eraserWidth","color","highlight","lasso","getDrawCtrl","localforage","drawCtrl","defaultRecord","states","Map","editStack","List","undoStack","defaultFactory","Record","StateSet","immutable","lastOp","this","getImmutable","get","pageID","getStates","drawState","prevDS","getOneState","currRecord","update","s","set","l","push","delete","stroke","DrawState","notePage","width","WIDTH","state","ratio","newDS","getEditStack","size","getUndoStack","isUndoable","lastUid","last","lastSetOp","pop","isRedoable","ds","pageRec","map","AddPageButton","addFinalPage","useContext","ReaderMethodCtx","className","type","icon","PlusOutlined","block","onClick","insertAfter","list","prevItem","newItem","prevIndex","indexOf","curr","slice","splice","createFromIconfontCN","scriptUrl","PageNavContent","activeKey","setActiveKey","ReaderStateCtx","pageOrder","inviewPages","scrollPage","saveReorder","refRec","useRef","listEl","currpageID","useMemo","find","has","useEffect","current","scrollIntoView","itemHeight","clientHeight","listHeight","scrollBy","PreviewTabs","onDragEnd","source","destination","fromIndex","index","toIndex","newOrder","result","removed","exchange","requestAnimationFrame","droppableId","droppableProps","innerRef","placeholder","ref","e","uid","PagePreview","pageIndex","stateSet","teamState","switchPageMarked","ignores","TeamCtx","useState","chosen","setChosen","page","teamStateMap","getOnePageStateMap","userIDs","getPageValidUsers","filter","userID","image","marked","isEmpty","every","draggableId","isDragDisabled","draggableProps","dragHandleProps","drag","isDragging","classNames","PageWrapper","undefined","thumbnail","preview","stopPropagation","PreviewOption","TeamAvatars","maxCount","UserAvatar","prev","addPage","deletePage","menu","key","items","label","CopyOutlined","DeleteOutlined","danger","content","trigger","placement","destroyTooltipOnHide","MoreOutlined","TabPane","Tabs","onChange","tabBarGutter","centered","tab","PageNav","navOn","setNavOn","title","ALL","MARKED","WRITTEN","MenuUnfoldOutlined","MenuFoldOutlined","visible","onClose","closable","contentWrapperStyle","boxShadow","bodyStyle","padding","overflow","headerStyle","textAlign","borderTop","destroyOnClose","DrawTools","handleUndo","handleRedo","instantSave","saved","setDrawCtrl","teamOn","nav","useNavigate","updateDrawCtrl","updated","newCtrl","saveDrawCtrl","HomeFilled","style","opacity","disabled","SaveOutlined","shape","UndoOutlined","RedoOutlined","message","PenButton","EraserButton","SelectButton","RoomInfo","JoinRoom","btnProps","HighlightOutlined","PenPanel","getPopupContainer","tempLineWidth","setTempLineWidth","min","max","defaultValue","onAfterChange","ghost","ColorSelect","setColor","c","colors","checked","name","tempEraserWidth","setTempEraserWidth","GatewayOutlined","UserCard","renaming","setRenaming","setIgnores","resetIO","userInfo","userRec","userName","online","self","getUserID","ignored","Search","autoFocus","onSearch","value","trim","saveUserName","enterButton","CheckOutlined","FormOutlined","EyeInvisibleOutlined","EyeOutlined","add","getHashedColor","backgroundColor","code","connected","loadInfo","loadState","noteInfo","link","window","location","href","share","selfName","copy","console","log","userList","selfID","selfInfo","otherUsers","values","Object","onlineNum","length","DisconnectOutlined","showIcon","banner","String","plain","ShareAltOutlined","u","ReloadOutlined","status","count","TeamOutlined","noteID","createRoom","putNote","editNoteData","team","UsergroupAddOutlined","Modal","onOk","getOcrWorker","worker","createWorker","logger","load","loadLanguage","initialize","SelectTool","drawRef","currDrawCtrl","setCurrDrawCtrl","rotateEl","dragged","setDragged","transX","setTransX","gearStyle","transform","useDrag","first","offset","delta","rotateSelected","target","filterTaps","rubberband","bounds","left","right","recoginzing","setRecoginzing","recognizeText","imageData","rasterize","recognize","text","data","TextArea","okText","error","createPortal","mutateStyle","BgColorsOutlined","RotateRightOutlined","CaretLeftOutlined","CaretRightOutlined","duplicateSelected","LoadingOutlined","deleteSelected","document","body","TextTool","setText","fontSize","setFontSize","onCancel","cancelText","submitText","paddingTop","FontSizeOutlined","overlayStyle","FontColorsOutlined","usePreventTouch","allowFinger","isTouch","checkPoniter","isPrimary","pointerType","preventTouch","touch","touches","touchType","isApplePencil","isEventValid","onPointerDownCapture","onPointerMoveCapture","onTouchStartCapture","onTouchMoveCapture","Path","paper","Size","Point","Group","Color","Raster","Rectangle","Draw","React","otherStates","readonly","imgSrc","setActiveTool","height","canvasEl","scope","group","setGroup","Set","erased","setErased","usePaperItem","path","setPath","rect","setRect","setup","r","view","viewSize","multiply","scale","paintBackground","setupPaper","cvs","releaseCanvas","raster","img","Image","src","onload","activate","project","layers","addChild","position","center","remove","mergedStrokes","getStrokeList","tempGroup","othersGroup","forEach","paintStroke","hasStroke","item","selected","setSelected","paperMode","selectedIDs","setSelectedIDs","selectedItems","IDSet","resetSelect","useCallback","updateRatio","clientWidth","setNewRect","point","transformPoint","rectangle","startSelectRect","projP","zoom","absoluteP","projectToView","offsetP","divide","subtract","handleDown","draw","startStroke","erase","select","contains","t","setPointText","handleDrag","smooth","newErased","p","checkErase","concat","x","y","translate","handleUp","segments","simplify","pathData","exportJSON","toArray","closePath","moveDash","checkPathSelection","abs","checkRectSelection","updateMutation","onMouseDown","onMouseDrag","onMouseUp","mutations","angle","aniCount","dAngle","rotate","updateGroupStyle","transP","newSG","clone","insert","children","getUid","m","toDataURL","pointText","fillColor","useImperativeHandle","handler","preventDefault","addEventListener","removeEventListener","usePinch","lastScale","lastOX","lastOY","elX","elY","memo","origin","getBoundingClientRect","oX","oY","originViewP","originProjP","viewToProject","Math","dScale","pow","scaleView","putCenterBack","scaleBounds","touchHandler","init","stateArray","useDebugValue","activeLayer","importJSON","getCheckPoints","cache","WeakMap","segment","cached","prevPoint","previous","times","checkPoints","i","eraserPath","curveBound","lastSegment","curve","strokeBounds","intersects","strokeWidth","some","cPoint","d","getNearestPoint","getDistance","bgRect","bgLayer","insertLayer","strokeColor","alpha","blendMode","strokeJoin","strokeCap","dashOffset","dashArray","onFrame","dX","dY","minX","maxX","minY","maxY","getCenterTranslate","deltaX","deltaY","dP","move","isInside","selection","checkedP","res","trace","newColor","createContext","updateStateSet","cb","prevPageID","order","setInviewPages","Reader","useParams","setPageRec","setNoteInfo","setStateSet","setPageOrder","useSafeState","setSaved","io","addTeamStatePage","loadNotePages","loadNote","storedNote","pdf","createFromPages","updatePages","saver","useEvent","pr","toObject","canvas","querySelector","debouncedSave","debounce","flush","savePageRec","defaultNotePage","pushReorder","emit","handleReorder","onUndo","deleted","prevOrder","duration","handleNewPage","newPage","addState","on","removeAllListeners","pushNewPage","newTeamPage","updatePageRec","newSS","operation","lastDS","getLastDS","syncStrokeTime","prevPage","createPage","renderResult","undo","redo","PageContainer","Provider","id","lastPageID","at","updateState","setState","pdfIndex","fullImg","setFullImg","wrapperEl","useInViewport","loadImage","once","getOnePageImage","deleteAll","toList","drawShow","maskShow","Boolean","DrawWrapper","activeTool","handleChange","arg","displayName","IoFactory","BASE_URL","query","getUserName","pageStates","pageInfos","TeamState","getPageStates","Array","from","keys","getPageInfos","pageMap","setOp","op","getPageRatio","includesPage","prevDs","newTS","entries","teamPages","record","teamPage","flatState","Team","setTeamState","setCode","setUserRec","setIO","loaded","setLoaded","setConnected","loadTeamNoteInfo","info","getTeamNoteState","teamNote","createFromTeamPages","roomInit","infoLoaded","stateLoaded","pushOperation","joined","members","showJoinMsg","leaved","showLeaveMsg","resetUser","close","Loading","loading","LoginOutlined","LogoutOutlined","createVirtualCanvas","createElement","context","getContext","Error","ctx","clearRect"],"sourceRoot":""}