{"version":3,"sources":["lib/draw/DrawState.ts","lib/socket/io.ts","lib/http/http.ts","component/ui/color.ts","lib/note/archive.ts","lib/note/pdfImage.ts","lib/note/note.ts","component/ui/DigitInput.tsx","component/menu/RightTools.tsx","component/menu/LeftTools.tsx","component/menu/SideMenu.tsx","component/menu/NoteList.tsx","component/menu/MainMenu.tsx","lib/draw/drawer.ts","component/draw/DrawDisplay.tsx","component/draw/DrawInput.tsx","component/draw/Draw.tsx","lib/draw/StateSet.ts","component/ui/DigitDisplay.tsx","component/reader/Team.tsx","component/reader/Reader.tsx","component/Test.tsx","index.tsx"],"names":["defaultRecord","state","strokes","List","uidStack","undoStack","OrderedSet","eraseStack","deleted","Set","position","defaultFactory","Record","defaultFlatState","DrawState","immutable","width","height","this","getImmutable","get","getDeleted","undo","getUndoStack","getEraseStack","filter","uid","has","erase","getValidEraseStack","getStrokes","some","s","erased","last","drawState","getUidStack","set","update","add","pop","butLast","push","imageData","points","getUid","pushedState","mergeUndo","d","concat","getPosition","data","len","length","i","updatePosition","stroke","getErasedStrokes","mergedRecord","reduce","prev","e","deletedAll","toArray","map","arr","drawStateRecord","BASE_URL","getIO","io","axios","defaults","baseURL","interceptors","request","use","config","console","log","method","url","getUserId","cached","userId","localStorage","getItem","setItem","getNoteId","roomCode","a","statusCode","noteId","pageInfos","noteInfo","saveTeamNote","error","deletePagesPosition","pageRecord","pages","cloneDeep","Object","keys","putNote","name","put","code","getTeamNote","teamPages","info","convertTeamPage","colors","getRandomColor","index","Math","floor","random","getAllNotes","localforage","allNotes","getTagList","tagList","getAllTags","tags","storeTag","newTag","color","notes","deleteTag","t","editTag","tag","editedTag","loadNote","editNoteData","note","pdf","prevNote","saveNoteInfo","tagId","createNewNote","deleteNote","removeItem","id","notePages","entries","key","page","ratio","states","values","flat","team","getCanvasBlob","canvas","Promise","res","toBlob","getPageImage","pageNum","scale","getPage","viewport","getViewport","document","createElement","context","getContext","Error","render","canvasContext","transform","promise","blob","getImages","pdfjs","numPages","blobs","ratios","thumbnail","images","LoadPDF","file","URL","createObjectURL","forEach","image","idx","replace","workerSrc","pdfjsWorker","createEmptyNote","Date","now","DigitInput","value","digitNum","onChange","onSubmit","num2digits","num","Array","fill","String","slice","padEnd","split","useState","nowFocused","setNowFocused","digits","setDigits","focus","inputRefs","current","el","blur","useEffect","newDigits","findIndex","newValue","Number","join","useRef","handleKeyUp","max","className","ref","pattern","val","test","handleChange","target","onKeyUp","onClick","RightTools","JoinTeamButton","UploadPdfButton","NewNoteButton","loading","setLoading","fakeUpload","tagUid","useContext","MenuStateCtx","MenuStateUpdateCtx","setAllTags","setAllNotes","files","type","message","success","accept","multiple","click","shape","disabled","icon","LoadingOutlined","DownloadOutlined","FormOutlined","setRoomCode","nav","useNavigate","trigger","title","content","TeamOutlined","LeftTools","adding","setAdding","tagName","setTagName","editing","setTagList","setEditing","trim","block","placeholder","style","size","CheckOutlined","CloseOutlined","TagOutlined","TagItem","allTags","setTagUid","tagEditing","setTagEditing","tagColor","setTagColor","newAllTags","newTagList","TagCircle","backgroundColor","colorSelector","onSelect","c","Option","TagNameInput","addonBefore","onConfirm","placement","okText","cancelText","danger","MinusCircleOutlined","SettingOutlined","SideMenu","Item","Menu","htmlFor","MenuOutlined","defaultSelectedKeys","defaultOpenKeys","mode","ProfileOutlined","NoteList","noteList","NoteItem","href","noteName","setNoteName","useMemo","prevUrl","revokeObjectURL","to","src","alt","CloudOutlined","onBlur","DeleteOutlined","createContext","MainMenu","selectedTag","then","Provider","level","Drawer","point","x","y","lineWidth","beginPath","moveTo","toP","fromP","xc","yc","strokeStyle","lineCap","lineJoin","quadraticCurveTo","getImageData","MIRROR_SIZE","DualDrawer","mainDrawer","mirrorDrawer","createRaw","drawBegin","computeMirrorPoint","drawCurve","pressure","React","memo","canvasEl","addEventListener","preventDefault","passive","ctx","clearRect","getValidStrokes","drawer","clonedPs","firstP","shift","p","drawPoints","Drawinput","setDrawState","finger","even","clientWidth","clientHeight","isDrawing","getCanvasEl","clientRect","getBoundingClientRect","offsetX","clientX","left","offsetY","clientY","top","updateClientSize","isFinger","touches","touchType","handleEnd","updateInput","getMirrorImageData","requestAnimationFrame","cvs","touchPrevent","removeEventListener","onTouchStart","touch","force","newP","computeLineWidth","onMouseDown","onTouchMove","onMouseMove","onTouchEnd","onMouseUp","onMouseLeave","Draw","erasing","eraseStrokes","pushStroke","OrderedMap","editStack","Rec","StateSet","newImmu","getStates","getEditStack","isUndoable","lastUid","isRedoable","redo","prevDs","ds","simplePush","setState","list","item","createFromList","loadFromFlat","DigitDisplay","randomNum","setRandomNum","padStart","resetRandom","timer","setTimeout","clearTimeout","Digit","digit","TeamStateCtx","Team","teamStateSet","setTeamStateSet","setCode","ws","useParams","loadTeamPages","createFromPages","WIDTH","joinRoom","emit","roomInit","on","pageId","roomDestroy","off","Reader","teamOn","RoomCode","defaultDrawCtrl","DrawCtrlCtx","StateCtx","stateSet","undefined","saved","StateUpdateCtx","setSaved","setPageRecord","setNoteInfo","setStateSet","drawCtrl","setDrawCtrl","storedNote","debouncedSave","useCallback","debounce","pr","instantSave","flush","createRoom","noteInit","loadNotePages","noteDestroy","setPageState","flaten","getLastStroke","handleUndo","handleRedo","getKeys","getOneState","teamState","PageWrapper","updateState","imageBlob","DrawTools","updateDrawCtrl","updated","PenPanel","min","PenButton","HighlightOutlined","HighlightFilled","LeftOutlined","SaveOutlined","UndoOutlined","RedoOutlined","FormatPainterFilled","FormatPainterOutlined","JoinRoom","loaded","setLoaded","onLoad","DrawDisplay","DrawWrapper","fn","Test","text","setText","placeholderEl","padding","ReactDOM","path","element","getElementById"],"mappings":"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","file":"static/js/main.da428a50.chunk.js","sourcesContent":["import { List, OrderedSet, Record, Set } from \"immutable\";\nimport { Dispatch, SetStateAction } from \"react\";\nimport { Point } from \"./draw\";\nimport { v4 as getUid } from \"uuid\";\n\nexport interface Stroke {\n  uid: string;\n  points: Point[];\n}\n\ninterface DrawStateRecordType {\n  state: \"drawing\" | \"revoking\";\n  strokes: List<Stroke>;\n  uidStack: List<string>;\n  undoStack: OrderedSet<string>;\n  eraseStack: List<{\n    uid: string;\n    erased: Set<string>;\n  }>;\n  deleted: Set<string>;\n  position: List<Set<string>>;\n}\n\ntype DrawStateRecord = Record<DrawStateRecordType>;\n\nconst defaultRecord: Readonly<DrawStateRecordType> = {\n  state: \"drawing\",\n  strokes: List(),\n  uidStack: List(),\n  undoStack: OrderedSet(),\n  eraseStack: List(),\n  deleted: Set(),\n  position: List<Set<string>>(),\n};\n\nconst defaultFactory = Record(defaultRecord);\n\n\n\nexport interface FlatState {\n  strokes: Stroke[];\n  position?: string[][];\n}\n\nexport const defaultFlatState: FlatState = {\n  strokes: [],\n  position: []\n}\n\nexport class DrawState {\n  constructor(\n    private immutable: DrawStateRecord,\n    public readonly width: number,\n    public readonly height: number\n  ) {}\n\n  getImmutable() {\n    return this.immutable;\n  }\n\n  getUidStack() {\n    return this.getImmutable().get(\"uidStack\");\n  }\n\n  getUndoStack() {\n    return this.getImmutable().get(\"undoStack\");\n  }\n\n  getEraseStack() {\n    return this.getImmutable().get(\"eraseStack\");\n  }\n\n  getValidEraseStack() {\n    const deleted = this.getDeleted();\n    const undo = this.getUndoStack();\n    return this.getEraseStack().filter(\n      ({ uid }) => !deleted.has(uid) && !undo.has(uid)\n    );\n  }\n\n  getStrokes() {\n    return this.getImmutable().get(\"strokes\");\n  }\n\n  getValidStrokes() {\n    const deleted = this.getDeleted();\n    const undo = this.getUndoStack();\n    const erase = this.getValidEraseStack();\n    return this.getStrokes().filter(\n      ({ uid }) =>\n        !deleted.has(uid) &&\n        !undo.has(uid) &&\n        !erase.some((s) => s.erased.has(uid))\n    );\n  }\n\n  getDeleted() {\n    return this.getImmutable().get(\"deleted\");\n  }\n\n  getState() {\n    return this.getImmutable().get(\"state\");\n  }\n\n  getPosition() {\n    return this.getImmutable().get(\"position\");\n  }\n\n  getLastStroke() {\n    return this.getImmutable().get('strokes').last();\n  }\n\n  static createEmpty(width: number, height: number) {\n    return new DrawState(defaultFactory(), width, height);\n  }\n\n  static createFromStored() {}\n\n  static undo(drawState: DrawState) {\n    const uid = drawState.getUidStack().last();\n\n    if (!uid) {\n      return drawState;\n    }\n\n    return new DrawState(\n      drawState\n        .getImmutable()\n        .set(\"state\", \"revoking\")\n        .update(\"undoStack\", (s) => s.add(uid))\n        .update(\"uidStack\", (s) => s.pop()),\n      drawState.width,\n      drawState.height\n    );\n  }\n\n  static redo(drawState: DrawState) {\n    const undo = drawState.getUndoStack();\n    const uid = undo.last();\n    if (!uid) return drawState;\n    return new DrawState(\n      drawState\n        .getImmutable()\n        .update(\"undoStack\", (s) => s.butLast())\n        .update(\"uidStack\", (s) => s.push(uid)),\n      drawState.width,\n      drawState.height\n    );\n  }\n\n  static pushStroke(\n    drawState: DrawState,\n    imageData: ImageData,\n    points: Point[]\n  ) {\n    const uid = getUid();\n    const undo = drawState.getUndoStack();\n\n    const pushedState = mergeUndo(\n      drawState\n        .getImmutable()\n        .set(\"state\", \"drawing\")\n        .update(\"deleted\", (d) => d.concat(undo))\n        .set(\"undoStack\", OrderedSet())\n        .update(\"strokes\", (s) => s.push({ uid, points }))\n        .update(\"uidStack\", (s) => s.push(uid))\n    );\n\n    let position = drawState.getPosition();\n    position = updatePosition(position, imageData, uid);\n\n    return new DrawState(\n      pushedState.set(\"position\", position),\n      drawState.width,\n      drawState.height\n    );\n  }\n\n  static simplePush(\n    drawState: DrawState,\n    stroke: Stroke,\n  ) {\n    return new DrawState(\n      drawState.getImmutable()\n        .update('strokes', s => s.push(stroke)),\n      drawState.width,\n      drawState.height\n    )\n  }\n\n  static eraseStrokes(drawState: DrawState, imageData: ImageData) {\n    const position = drawState.getPosition();\n    if (!position) {\n      return drawState;\n    }\n\n    const uid = getUid();\n    const erased = getErasedStrokes(position, imageData);\n\n    return new DrawState(\n      mergeUndo(\n        drawState\n          .getImmutable()\n          .update(\"eraseStack\", (s) => s.push({ uid, erased }))\n          .update(\"uidStack\", (s) => s.push(uid))\n      ),\n      drawState.width,\n      drawState.height\n    );\n  }\n\n  static flaten(drawState: DrawState): FlatState {\n    const mergedRecord = mergeUndo(drawState.getImmutable());\n    const deleted = mergedRecord.get(\"deleted\");\n    const erased = drawState.getValidEraseStack().reduce((prev, e) => {\n      return prev.concat(e.erased);\n    }, Set<string>());\n\n    const deletedAll = deleted.concat(erased);\n    const strokes = mergedRecord\n      .get(\"strokes\")\n      .filter((s) => !deletedAll.has(s.uid))\n      .toArray();\n    const position = mergedRecord\n      .get(\"position\")\n      .map((set) => (!set ? set : set.toArray()))\n      .toArray();\n    return { strokes, position };\n  }\n\n  static loadFromFlat(\n    { strokes, position }: FlatState,\n    width: number,\n    height: number\n  ): DrawState {\n    return new DrawState(\n      defaultFactory()\n        .set(\"strokes\", List(strokes))\n        .set(\"position\", List(position?.map((arr) => (!arr ? arr : Set(arr))))),\n      width,\n      height\n    );\n  }\n}\n\nfunction mergeUndo(drawStateRecord: DrawStateRecord) {\n  const undo = drawStateRecord.get(\"undoStack\");\n  return drawStateRecord\n    .update(\"deleted\", (d) => d.concat(undo))\n    .set(\"undoStack\", OrderedSet())\n    .update(\"uidStack\", (s) => s.filter((uid) => !undo.has(uid)));\n}\n\nfunction updatePosition(\n  position: List<Set<string>>,\n  { data }: ImageData,\n  uid: string\n) {\n  const len = data.length;\n  for (let i = 0; i < len; i += 4) {\n    if (data[i + 3]) {\n      position = position.update(i / 4, Set(), (s) => (s ?? Set()).add(uid));\n    }\n  }\n  return position;\n}\n\nfunction getErasedStrokes(position: List<Set<string>>, { data }: ImageData) {\n  let erased = Set<string>();\n\n  const len = data.length;\n  for (let i = 0; i < len; i += 4) {\n    if (data[i + 3]) {\n      erased = erased.concat(position.get(i / 4) ?? Set());\n    }\n  }\n\n  return erased;\n}\n\nexport type SetDrawState = Dispatch<SetStateAction<DrawState>>;\n\nexport type DrawStateMethod = (\n  drawState: DrawState,\n  imageData: ImageData,\n  points: Point[]\n) => DrawState;\n","import { io, Socket } from \"socket.io-client\";\n\nexport const BASE_URL = \"https://api.slotdumpling.top/paint\";\n\nexport const getIO = (() => {\n  let ioIns: Socket\n  return () => {\n    return ioIns ?? io(BASE_URL)\n  };\n})();\n","import { BASE_URL } from \"../socket/io\";\nimport { v4 as getUid } from \"uuid\";\nimport axios from \"axios\";\nimport { NoteInfo, NotePage } from \"../note/note\";\nimport { convertTeamPage, saveTeamNote } from \"../note/archive\";\nimport { cloneDeep } from \"lodash\";\naxios.defaults.baseURL = BASE_URL;\naxios.interceptors.request.use((config) => {\n  console.log(config.method, config.url);\n  return config;\n});\n\nexport const getUserId = (() => {\n  let cached: string;\n  return () => {\n    if (cached) return cached;\n    let userId = localStorage.getItem(\"user_id\");\n    if (!userId) {\n      userId = getUid();\n      localStorage.setItem(\"user_id\", userId);\n    }\n    cached = userId;\n    return userId;\n  };\n})();\n\nexport async function getNoteId(roomCode: number) {\n  try {\n    const { data } = await axios.get(`code/${roomCode}`);\n    if (data.statusCode === 200) {\n      const { noteId, pageInfos, noteInfo } = data;\n      await saveTeamNote(noteId, noteInfo, pageInfos);\n      return noteId as string;\n    } else {\n      return null;\n    }\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n}\n\nconst deletePagesPosition = (pageRecord: Record<string, NotePage>) => {\n  const pages = cloneDeep(pageRecord);\n  for (let key of Object.keys(pages)) {\n    delete pages[key].state.position;\n  }\n  return pages;\n};\n\nexport async function putNote(\n  noteId: string,\n  noteInfo: NoteInfo,\n  pageRecord: Record<string, NotePage>\n) {\n  pageRecord = deletePagesPosition(pageRecord);\n  const { uid, name } = noteInfo;\n\n  try {\n    const { data } = await axios.put(`create/${noteId}`, {\n      userId: getUserId(),\n      pageRecord,\n      noteInfo: { uid, name },\n    });\n    if (data.statusCode === 201) {\n      return data.code as number;\n    } else {\n      return null;\n    }\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n}\n\nexport async function updatePages(\n  noteId: string,\n  pageRecord: Record<string, NotePage>\n) {\n  try {\n    const { data } = await axios.put(`pages/${noteId}`, {\n      userId: getUserId(),\n      pageRecord,\n    });\n    if (data.statusCode === 201) return true;\n    else return false;\n  } catch (e) {\n    console.error(e);\n    return false;\n  }\n}\n\nexport async function getTeamNote(noteId: string) {\n  try {\n    const { data } = await axios.get(`room/${noteId}`);\n    if (data.statusCode === 200) {\n      const { teamPages, code, noteInfo: info } = data;\n      const pages = await convertTeamPage(teamPages);\n      return { code, pages, info };\n    } else {\n      return null;\n    }\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n}\n","export const colors = [\n  \"#64748b\",\n  \"#78716c\",\n  \"#ef4444\",\n  \"#f97316\",\n  \"#eab308\",\n  \"#84cc16\",\n  \"#22c55e\",\n  \"#10b981\",\n  \"#14b8a6\",\n  \"#06b6d4\",\n  \"#0ea5e9\",\n  \"#3b82f6\",\n  \"#6366f1\",\n  \"#8b5cf6\",\n  \"#a855f7\",\n  \"#d946ef\",\n  \"#ec4899\",\n  \"#f43f5e\",\n];\n","import localforage from \"localforage\";\nimport { NoteInfo, Note, NotePage, TeamPage } from \"./note\";\nimport { v4 as getUid } from \"uuid\";\nimport { defaultFlatState } from \"../draw/DrawState\";\nimport { getUserId } from \"../http/http\";\nimport { colors } from \"../../component/ui/color\";\n\nexport interface NoteTag {\n  uid: string;\n  name: string;\n  color: string;\n  notes: string[];\n}\n\nfunction getRandomColor() {\n  const index = Math.floor(Math.random() * colors.length);\n  return colors[index];\n}\n\nexport async function getAllNotes() {\n  const allNotes = await localforage.getItem(\"ALL_NOTES\");\n  if (allNotes) {\n    return allNotes as Record<string, NoteInfo>;\n  } else {\n    localforage.setItem(\"ALL_NOTES\", {});\n    return {};\n  }\n}\n\nexport async function getTagList(): Promise<string[]> {\n  const tagList = await localforage.getItem(\"TAG_LIST\");\n  if (tagList) {\n    return tagList as string[];\n  } else {\n    localforage.setItem(\"TAG_LIST\", []);\n    return [];\n  }\n}\n\nexport async function getAllTags() {\n  const tags = await localforage.getItem(\"ALL_TAGS\");\n  if (tags) {\n    return tags as Record<string, NoteTag>;\n  } else {\n    localforage.setItem(\"ALL_TAGS\", {});\n    return {};\n  }\n}\n\nexport async function storeTag(\n  name: string\n): Promise<[Record<string, NoteTag>, string[]]> {\n  const uid = getUid();\n  const newTag: NoteTag = {\n    uid,\n    name,\n    color: getRandomColor(),\n    notes: [],\n  };\n  const tags: Record<string, NoteTag> = {\n    ...(await getAllTags()),\n    [uid]: newTag,\n  };\n  await localforage.setItem(\"ALL_TAGS\", tags);\n\n  const tagList = await getTagList();\n  tagList.push(uid);\n  await localforage.setItem(\"TAG_LIST\", tagList);\n\n  return [tags, tagList];\n}\n\nexport async function deleteTag(\n  uid: string\n): Promise<[Record<string, NoteTag>, string[]]> {\n  const tags = await getAllTags();\n  delete tags[uid];\n  await localforage.setItem(\"ALL_TAGS\", tags);\n\n  let tagList = await getTagList();\n  tagList = tagList.filter((t) => t !== uid);\n  await localforage.setItem(\"TAG_LIST\", tagList);\n\n  return [tags, tagList];\n}\n\nexport async function editTag(tag: NoteTag) {\n  const tags = await getAllTags();\n  const editedTag = tags[tag.uid];\n  editedTag.name = tag.name;\n  editedTag.color = tag.color;\n  editedTag.notes = tag.notes;\n  await localforage.setItem(\"ALL_TAGS\", tags);\n  return tags;\n}\n\nexport async function loadNote(uid: string) {\n  return (await localforage.getItem(uid)) as Note | undefined;\n}\n\nexport async function editNoteData(uid: string, note: Partial<Note>) {\n  const allNotes = await getAllNotes();\n  const { pages, pdf, ...noteInfo } = note;\n  allNotes[uid] = { ...allNotes[uid], ...noteInfo };\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\n  const prevNote = await loadNote(uid);\n  if (!prevNote) return;\n  await localforage.setItem(uid, { ...prevNote, ...note });\n}\n\nexport async function saveNoteInfo(noteInfo: NoteInfo) {\n  const { uid, tagId } = noteInfo;\n  const allNotes = await getAllNotes();\n  allNotes[uid] = noteInfo;\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\n  const tags = await getAllTags();\n  if (tagId !== \"DEFAULT\") {\n    tags[tagId].notes.push(noteInfo.uid);\n    await localforage.setItem(\"ALL_TAGS\", tags);\n  }\n  return { tags, allNotes };\n}\n\nexport async function createNewNote(note: Note) {\n  await localforage.setItem(note.uid, note);\n  const { pdf, pages, ...noteInfo } = note;\n  return await saveNoteInfo(noteInfo);\n}\n\nexport async function deleteNote(uid: string) {\n  const note = await loadNote(uid);\n  const allNotes = await getAllNotes();\n  const tags = await getAllTags();\n  if (!note) return { tags, allNotes };\n  await localforage.removeItem(uid);\n  const { pdf, pages, ...noteInfo } = note;\n  delete allNotes[uid];\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\n\n  const { tagId } = noteInfo;\n  if (tagId !== \"DEFAULT\") {\n    const { notes } = tags[tagId];\n    tags[tagId].notes = notes.filter((id) => id !== uid);\n    await localforage.setItem(\"ALL_TAGS\", tags);\n  }\n  return { tags, allNotes };\n}\n\nexport async function convertTeamPage(teamPages: Record<string, TeamPage>) {\n  const notePages: Record<string, NotePage> = {};\n  for (let [key, page] of Object.entries(teamPages)) {\n    const { ratio, states } = page;\n    delete states[getUserId()];\n    notePages[key] = {\n      ratio,\n      state: {\n        strokes: Object.values(states).flat(1),\n      },\n    };\n  }\n  return notePages;\n}\n\nexport async function saveTeamNote(\n  noteId: string,\n  noteInfo: { name: string; uid: string },\n  teamPages: Record<string, Omit<NotePage, \"state\">>\n) {\n  let note = await loadNote(noteId);\n  if (!note) {\n    const pages: Record<string, NotePage> = {};\n    for (let [key, { ratio }] of Object.entries(teamPages)) {\n      pages[key] = {\n        ratio,\n        state: defaultFlatState,\n      };\n    }\n    note = {\n      ...noteInfo,\n      tagId: \"DEFAULT\",\n      team: true,\n      pages,\n    };\n    createNewNote(note);\n  }\n}\n","import * as pdfjs from \"pdfjs-dist/legacy/build/pdf\";\n// @ts-ignore\nimport pdfjsWorker from \"pdfjs-dist/legacy/build/pdf.worker.entry\";\nimport { PDFDocumentProxy } from \"pdfjs-dist/types/src/display/api\";\nimport { v4 as getUid } from \"uuid\";\nimport { Note, NotePage } from \"./note\";\npdfjs.GlobalWorkerOptions.workerSrc = pdfjsWorker;\n\nfunction getCanvasBlob(canvas: HTMLCanvasElement): Promise<Blob | null> {\n  return new Promise((res: BlobCallback) => {\n    canvas.toBlob(res);\n  });\n}\n\nasync function getPageImage(\n  pdf: PDFDocumentProxy,\n  pageNum: number,\n  scale: number\n): Promise<[Blob, number]> {\n  const page = await pdf.getPage(pageNum);\n  const viewport = page.getViewport({ scale });\n  console.log(viewport);\n\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  if (!context) {\n    throw new Error(\"can't get virtual canvas context\");\n  }\n\n  const { height, width } = viewport;\n  const ratio = height / width;\n  canvas.width = Math.floor(width * scale);\n  canvas.height = Math.floor(height * scale);\n\n  await page.render({\n    canvasContext: context,\n    viewport: viewport,\n    transform: [scale, 0, 0, scale, 0, 0],\n  }).promise;\n\n  const blob = await getCanvasBlob(canvas);\n  if (!blob) {\n    throw new Error(\"can't get canvas image blob\");\n  }\n  return [blob, ratio];\n}\n\nexport async function getImages(url: string, scale = 2) {\n  const pdf = await pdfjs.getDocument(url).promise;\n  const numPages = pdf.numPages;\n  const blobs: Blob[] = [];\n  const ratios: number[] = [];\n\n  for (let i = 1; i <= numPages; i += 1) {\n    const [blob, ratio] = await getPageImage(pdf, i, scale);\n    blobs.push(blob);\n    ratios.push(ratio);\n  }\n\n  const [thumbnail] = await getPageImage(pdf, 1, 0.5);\n\n  return {\n    images: blobs,\n    ratios,\n    thumbnail,\n  };\n}\n\n\nexport async function LoadPDF(file: File): Promise<Note> {\n  const url = URL.createObjectURL(file);\n  const { images, ratios, thumbnail } = await getImages(url);\n  const pages: Record<string, NotePage> = {};\n  images.forEach((image, idx) => {\n    pages[getUid()] = {\n      image,\n      ratio: ratios[idx],\n      state: {\n        strokes: [],\n        position: [],\n      },\n    };\n  });\n  const name = file.name.replace('.pdf', '');\n  return {\n    uid: getUid(),\n    name,\n    tagId: 'DEFAULT',\n    team: false,\n    pdf: file,\n    thumbnail,\n    pages,\n  };\n}","import { defaultFlatState, FlatState, Stroke } from \"../draw/DrawState\";\nimport { v4 as getUid } from \"uuid\";\n\nexport interface NotePage {\n  image?: Blob;\n  ratio: number;\n  state: FlatState;\n}\n\nexport interface TeamPage {\n  ratio: number;\n  states: Record<string, Stroke[]>\n}\n\nexport interface TeamNote {\n  uid: string;\n  pages: Record<string, TeamPage>\n}\n\nexport interface NoteInfo {\n  uid: string;\n  name: string;\n  tagId: string;\n  team: boolean;\n  createTime?: Date;\n  lastTime?: Date;\n  thumbnail?: Blob;\n}\n\nexport type Note = NoteInfo & {\n  pdf?: File;\n  pages: Record<string, NotePage>;\n};\n\nexport function createEmptyNote(): Note {\n  return {\n    uid: getUid(),\n    name: `New note ${Date.now()}`,\n    tagId: \"DEFAULT\",\n    team: false,\n    pages: {\n      [getUid()]: {\n        ratio: 1.5,\n        state: defaultFlatState,\n      },\n    },\n  };\n}\n","import React, {\n  KeyboardEvent,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport \"./digitInput.css\";\n\nexport default function DigitInput({\n  value = 0,\n  digitNum = 4,\n  onChange = () => {},\n  onSubmit,\n}: {\n  value?: number;\n  digitNum?: number;\n  onChange?: (val: number) => void;\n  onSubmit: (val: number) => void;\n}) {\n  function num2digits(num: number): string[] {\n    if (num === 0) return new Array(digitNum).fill(\"\");\n    return String(num)\n      .slice(0, digitNum)\n      .padEnd(digitNum, \"x\")\n      .split(\"\")\n      .map((s) => (s === \"x\" ? \"\" : s));\n  }\n\n  const [nowFocused, setNowFocused] = useState(0);\n  const [digits, setDigits] = useState(num2digits(value));\n  useEffect(() => {\n    const newDigits = num2digits(value);\n    setDigits(newDigits);\n  }, [value]);\n\n  useEffect(() => {\n    const idx = digits.findIndex((d) => d === \"\");\n    setNowFocused(idx);\n    const newValue = Number(digits.join(\"\"));\n    if (newValue === value) return;\n    onChange(newValue);\n    if (idx === -1) {\n      onSubmit(newValue);\n    }\n  }, [digits]);\n\n  function focus() {\n    if (nowFocused === -1) {\n      inputRefs.current.forEach((el) => el.blur());\n    } else {\n      inputRefs.current[nowFocused].focus();\n    }\n  }\n\n  useEffect(() => {\n    focus();\n  }, [nowFocused]);\n\n  function handleChange(val: string, idx: number) {\n    if (!/^[0-9]$/.test(val)) return;\n    setDigits(prev => {\n      const newDigits = prev.slice();\n      newDigits[idx] = val;\n      return newDigits;\n    });\n  }\n\n  const inputRefs = useRef<HTMLInputElement[]>([]);\n  useEffect(() => {\n    inputRefs.current = inputRefs.current.slice(0, digitNum);\n  }, [digitNum]);\n\n  function handleKeyUp(e: KeyboardEvent<HTMLInputElement>) {\n    if (e.key === \"Backspace\") {\n      const idx = Math.max(0, nowFocused - 1);\n      setNowFocused(idx);\n      setDigits(prev => {\n        const newDigits = prev.slice();\n        newDigits[idx] = '';\n        return newDigits;\n      });\n    }\n  }\n\n  return (\n    <div className=\"digit-input\">\n      {digits.map((d, idx) => (\n        <input\n          key={idx}\n          ref={(el) => {\n            if (!el) return;\n            inputRefs.current[idx] = el;\n          }}\n          value={d}\n          pattern=\"\\d*\"\n          onChange={(e) => handleChange(e.target.value, idx)}\n          onKeyUp={handleKeyUp}\n        />\n      ))}\n      <div className=\"click-area\" onClick={focus}></div>\n    </div>\n  );\n}\n","import { Button, message, Popover } from \"antd\";\nimport { ChangeEvent, useContext, useRef, useState } from \"react\";\nimport { createNewNote } from \"../../lib/note/archive\";\nimport { LoadPDF } from \"../../lib/note/pdfImage\";\nimport { MenuStateCtx, MenuStateUpdateCtx } from \"./MainMenu\";\nimport {\n  LoadingOutlined,\n  DownloadOutlined,\n  FormOutlined,\n  TeamOutlined,\n} from \"@ant-design/icons\";\nimport { createEmptyNote } from \"../../lib/note/note\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getNoteId } from \"../../lib/http/http\";\nimport DigitInput from \"../ui/DigitInput\";\n\nexport default function RightTools() {\n  return (\n    <div id=\"right-tools\">\n      <JoinTeamButton />\n      <UploadPdfButton />\n      <NewNoteButton />\n    </div>\n  );\n};\n\nfunction UploadPdfButton() {\n  const [loading, setLoading] = useState(false);\n  const fakeUpload = useRef<HTMLInputElement>(null);\n  const { tagUid } = useContext(MenuStateCtx);\n  const { setAllTags, setAllNotes } = useContext(MenuStateUpdateCtx);\n\n  function handleClick() {\n    fakeUpload.current?.click();\n  }\n\n  async function inputChange(e: ChangeEvent<HTMLInputElement>) {\n    const files = e.target.files;\n    if (!files || files.length !== 1) return;\n    const file = files[0];\n    if (file.type !== \"application/pdf\") return;\n\n    setLoading(true);\n    const note = await LoadPDF(file);\n    note.tagId = tagUid;\n    const { tags, allNotes } = await createNewNote(note);\n    setAllTags(tags);\n    setAllNotes(allNotes);\n    setLoading(false);\n    message.success(\"PDF Loaded\");\n  }\n\n  return (\n    <>\n      <input\n        ref={fakeUpload}\n        type=\"file\"\n        onChange={inputChange}\n        accept=\"application/pdf\"\n        multiple={false}\n      />\n      <Button\n        onClick={handleClick}\n        type=\"text\"\n        shape=\"circle\"\n        disabled={loading}\n        icon={loading ? <LoadingOutlined /> : <DownloadOutlined />}\n      />\n    </>\n  );\n}\n\nfunction NewNoteButton() {\n  const { tagUid } = useContext(MenuStateCtx);\n  const { setAllTags, setAllNotes } = useContext(MenuStateUpdateCtx);\n\n  async function addNewNote() {\n    const note = createEmptyNote();\n    note.tagId = tagUid;\n    const { tags, allNotes } = await createNewNote(note);\n    setAllTags(tags);\n    setAllNotes(allNotes);\n  }\n\n  return (\n    <Button\n      type=\"primary\"\n      shape=\"circle\"\n      onClick={addNewNote}\n      icon={<FormOutlined />}\n    />\n  );\n}\n\nfunction JoinTeamButton() {\n  const [roomCode, setRoomCode] = useState(0);\n\n  const nav = useNavigate();\n  async function handleSubmit(code: number) {\n    const noteId = await getNoteId(code);\n    if (!noteId) {\n      setRoomCode(0);\n      message.error(\"Room doesn't exist.\");\n    } else {\n      nav(`/team/${noteId}`);\n    }\n  }\n\n  return (\n    <Popover\n      trigger=\"click\"\n      title=\"Join a team note.\"\n      content={\n        <DigitInput\n          value={roomCode}\n          onChange={setRoomCode}\n          onSubmit={handleSubmit}\n        />\n      }\n    >\n      <Button icon={<TeamOutlined />} type=\"text\" shape=\"circle\" />\n    </Popover>\n  );\n}\n","import { Button, Input } from \"antd\";\nimport { useContext, useState } from \"react\";\nimport { storeTag } from \"../../lib/note/archive\";\nimport { MenuStateCtx, MenuStateUpdateCtx } from \"./MainMenu\";\nimport {\n  CheckOutlined,\n  CloseOutlined,\n  TagOutlined,\n} from \"@ant-design/icons\";\n\nexport default function LeftTools() {\n  const [adding, setAdding] = useState(false);\n  const [tagName, setTagName] = useState(\"\");\n  const { editing } = useContext(MenuStateCtx);\n  const { setAllTags, setTagList, setEditing } = useContext(MenuStateUpdateCtx);\n\n  async function addTag() {\n    const name = tagName.trim();\n    if (!name) {\n      return;\n    } else {\n      const [tags, tagList] = await storeTag(name);\n      setAllTags(tags);\n      setTagList(tagList);\n      setAdding(false);\n      setTagName(\"\");\n    }\n  }\n\n  function cancelAdding() {\n    setTagName(\"\");\n    setAdding(false);\n  }\n\n  function swichEditing() {\n    setEditing((prev) => !prev);\n  }\n\n  return (\n    <div id=\"left-tools\">\n      <span id=\"edit-button\">\n        <Button\n          onClick={swichEditing}\n          type={editing ? \"primary\" : \"text\"}\n          block\n        >\n          {editing ? \"Done\" : \"Edit\"}\n        </Button>\n      </span>\n      {adding ? (\n        <>\n          <Input\n            placeholder=\"Tag name...\"\n            style={{ width: 150 }}\n            value={tagName}\n            onChange={(e) => {\n              setTagName(e.target.value);\n            }}\n          />\n          <Button\n            disabled={tagName === \"\" ? true : false}\n            type=\"link\"\n            size=\"small\"\n            onClick={addTag}\n            icon={<CheckOutlined />}\n          />\n          <Button\n            type=\"text\"\n            size=\"small\"\n            onClick={cancelAdding}\n            icon={<CloseOutlined />}\n          />\n        </>\n      ) : (\n        <Button\n          type=\"text\"\n          onClick={() => void setAdding(true)}\n          icon={<TagOutlined />}\n        />\n      )}\n    </div>\n  );\n}","import { Button, Input, Menu, Popconfirm, Select, Tag } from \"antd\";\nimport { useContext, useState } from \"react\";\nimport { deleteTag, editTag, NoteTag } from \"../../lib/note/archive\";\nimport { colors } from \"../ui/color\";\nimport { MenuStateCtx, MenuStateUpdateCtx } from \"./MainMenu\";\nimport {\n  MinusCircleOutlined,\n  CheckOutlined,\n  CloseOutlined,\n  SettingOutlined,\n  MenuOutlined,\n  ProfileOutlined,\n} from \"@ant-design/icons\";\n\nfunction TagItem({ uid }: { uid: string }) {\n  const { editing, allTags } = useContext(MenuStateCtx);\n  const { setTagUid, setTagList, setAllTags } = useContext(MenuStateUpdateCtx);\n  const tag = allTags[uid];\n  const [tagEditing, setTagEditing] = useState(false);\n  const [tagName, setTagName] = useState(tag?.name ?? \"\");\n  const [tagColor, setTagColor] = useState(tag?.color ?? \"\");\n\n  if (!tag) return <></>;\n\n  function cancelEditing() {\n    setTagName(tag.name);\n    setTagColor(tag.color);\n    setTagEditing(false);\n  }\n\n  async function removeTag() {\n    const [newAllTags, newTagList] = await deleteTag(uid);\n    setTagUid(\"DEFAULT\");\n    setTagList(newTagList);\n    setAllTags(newAllTags);\n  }\n\n  async function finishEditing() {\n    const newTag: NoteTag = {\n      uid,\n      name: tagName,\n      color: tagColor,\n      notes: tag.notes,\n    };\n\n    const newAllTags = await editTag(newTag);\n    setAllTags(newAllTags);\n    setTagEditing(false);\n  }\n\n  const TagCircle = ({ color }: { color: string }) => {\n    const style = { backgroundColor: color };\n    return <div className=\"tag-circle\" style={style} />;\n  };\n\n  const colorSelector = (\n    <Select value={tagColor} onSelect={setTagColor}>\n      {colors.map((c) => (\n        <Select.Option value={c} key={c}>\n          <TagCircle color={c} />\n        </Select.Option>\n      ))}\n    </Select>\n  );\n\n  const TagNameInput = () => (\n    <Input\n      size=\"small\"\n      className=\"tag-name-input\"\n      addonBefore={colorSelector}\n      value={tagName}\n      onChange={(e) => setTagName(e.target.value)}\n    />\n  );\n\n  return (\n    <div className=\"menu-item\">\n      {editing && tagEditing ? (\n        <>\n          <Popconfirm\n            title=\"Delete this tag?\"\n            onConfirm={removeTag}\n            placement=\"left\"\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <Button\n              type=\"text\"\n              danger\n              size=\"small\"\n              icon={<MinusCircleOutlined />}\n            />\n          </Popconfirm>\n          <TagNameInput />\n        </>\n      ) : (\n        <>\n          <TagCircle color={tagColor} />\n          <span>{tagName}</span>\n        </>\n      )}\n      {editing && tagEditing && (\n        <>\n          <Button\n            disabled={tagName === \"\"}\n            size=\"small\"\n            type=\"link\"\n            onClick={finishEditing}\n            icon={<CheckOutlined />}\n          />\n          <Button\n            size=\"small\"\n            type=\"text\"\n            onClick={cancelEditing}\n            icon={<CloseOutlined />}\n          />\n        </>\n      )}\n      {editing && !tagEditing && (\n        <Button\n          size=\"small\"\n          type=\"text\"\n          onClick={() => setTagEditing(true)}\n          icon={<SettingOutlined />}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default function SideMenu() {\n  const { tagList } = useContext(MenuStateCtx);\n  const { setTagUid } = useContext(MenuStateUpdateCtx);\n\n  function menuClicked({ key }: { key: string }) {\n    setTagUid(key);\n  }\n\n  const { Item } = Menu;\n\n  return (\n    <aside>\n      <label htmlFor=\"aside-checkbox\" id=\"aside-label\">\n        <Tag>\n          <MenuOutlined />\n        </Tag>\n      </label>\n      <input type=\"checkbox\" id=\"aside-checkbox\" />\n      <Menu\n        onClick={menuClicked}\n        id=\"side-menu\"\n        defaultSelectedKeys={[\"DEFAULT\"]}\n        defaultOpenKeys={[\"sub1\"]}\n        mode=\"inline\"\n      >\n        <Item key={\"DEFAULT\"}>\n          <ProfileOutlined id=\"all-note-icon\" />\n          <span>All Notes</span>\n        </Item>\n        {tagList.map((uid) => (\n          <Item key={uid}>\n            <TagItem uid={uid} />\n          </Item>\n        ))}\n      </Menu>\n    </aside>\n  );\n}","import { Button, Input, Popconfirm, Tag } from \"antd\";\nimport { useContext, useEffect, useMemo, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteNote, editNoteData } from \"../../lib/note/archive\";\nimport { NoteInfo } from \"../../lib/note/note\";\nimport { MenuStateCtx, MenuStateUpdateCtx } from \"./MainMenu\";\nimport { CloudOutlined, DeleteOutlined } from \"@ant-design/icons\";\n\nexport default function NoteList({ noteList }: { noteList: NoteInfo[] }) {\n  return (\n    <div id=\"note-list\">\n      {noteList.map((noteInfo) => (\n        <NoteItem key={noteInfo.uid} noteInfo={noteInfo} />\n      ))}\n    </div>\n  );\n}\n\nconst NoteItem = ({ noteInfo }: { noteInfo: NoteInfo }) => {\n  const { editing } = useContext(MenuStateCtx);\n  const { team, uid, name, thumbnail } = noteInfo;\n  const href = editing ? \"#\" : `${team ? \"team\" : \"reader\"}/${uid}`;\n  const { setAllTags, setAllNotes } = useContext(MenuStateUpdateCtx);\n  const [noteName, setNoteName] = useState(name);\n\n  async function removeNote() {\n    const { tags, allNotes } = await deleteNote(uid);\n    setAllTags(tags);\n    setAllNotes(allNotes);\n  }\n\n  const url = useMemo(\n    () => (thumbnail ? URL.createObjectURL(thumbnail) : null),\n    [thumbnail]\n  );\n\n  useEffect(() => {\n    const prevUrl = url || \"\";\n    return () => URL.revokeObjectURL(prevUrl);\n  }, [url]);\n\n  const saveNoteName = () => {\n    editNoteData(uid, { name: noteName });\n    setAllNotes((prev) => ({\n      ...prev,\n      [uid]: { ...prev[uid], name: noteName },\n    }));\n  };\n\n  return (\n    <Link to={href}>\n      <div className=\"list-item\">\n        <div className=\"thumbnail-wrapper\">\n          <img src={url || \"/default.png\"} alt={name} className=\"thumbnail\" />\n          {team && (\n            <Tag color=\"blue\" className=\"cloud-icon\">\n              <CloudOutlined />\n            </Tag>\n          )}\n        </div>\n        {editing || <p className=\"note-name\">{name}</p>}\n        {editing && (\n          <Input\n            className=\"note-name-input\"\n            value={noteName}\n            onChange={(e) => setNoteName(e.target.value)}\n            onBlur={saveNoteName}\n          />\n        )}\n        {editing && (\n          <Popconfirm\n            title=\"Delete this note?\"\n            onConfirm={removeNote}\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <Button\n              className=\"note-delete\"\n              type=\"text\"\n              danger\n              icon={<DeleteOutlined />}\n            />\n          </Popconfirm>\n        )}\n      </div>\n    </Link>\n  );\n};\n","import React, {\n  createContext,\n  Dispatch,\n  SetStateAction,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport \"./menu.css\";\nimport { NoteInfo } from \"../../lib/note/note\";\nimport {\n  getAllNotes,\n  getAllTags,\n  getTagList,\n  NoteTag,\n} from \"../../lib/note/archive\";\nimport RightTools from \"./RightTools\";\nimport LeftTools from \"./LeftTools\";\nimport SideMenu from \"./SideMenu\";\nimport NoteList from \"./NoteList\";\nimport Title from \"antd/lib/typography/Title\";\n\nexport const MenuStateCtx = createContext({\n  tagUid: \"DEFAULT\",\n  editing: false,\n  tagList: [] as string[],\n  allNotes: {} as Record<string, NoteInfo>,\n  allTags: {} as Record<string, NoteTag>,\n});\n\nexport const MenuStateUpdateCtx = createContext({\n  setTagList: (() => {}) as Dispatch<SetStateAction<string[]>>,\n  setAllNotes: (() => {}) as Dispatch<SetStateAction<Record<string, NoteInfo>>>,\n  setAllTags: (() => {}) as Dispatch<SetStateAction<Record<string, NoteTag>>>,\n  setTagUid: (() => {}) as Dispatch<SetStateAction<string>>,\n  setEditing: (() => {}) as Dispatch<SetStateAction<boolean>>,\n});\n\n\n\nexport default function MainMenu() {\n  const [tagList, setTagList] = useState<string[]>([]);\n  const [allNotes, setAllNotes] = useState<Record<string, NoteInfo>>({});\n  const [allTags, setAllTags] = useState<Record<string, NoteTag>>({});\n  const [tagUid, setTagUid] = useState(\"DEFAULT\");\n  const [editing, setEditing] = useState(false);\n\n  const selectedTag = useMemo<NoteTag>(() => {\n    if (tagUid === \"DEFAULT\") {\n      return {\n        uid: \"\",\n        name: \"All Notes\",\n        color: \"#000\",\n        notes: Object.keys(allNotes),\n      };\n    } else {\n      return allTags[tagUid];\n    }\n  }, [tagUid, allTags, allNotes]);\n\n  const noteList = useMemo<NoteInfo[]>(\n    () =>\n      selectedTag.notes\n        .filter((uid) => uid in allNotes)\n        .map((uid) => allNotes[uid]),\n    [selectedTag, allNotes]\n  );\n\n  useEffect(() => {\n    getAllNotes().then(setAllNotes);\n    getAllTags().then(setAllTags);\n    getTagList().then(setTagList);\n  }, []);\n\n  return (\n    <MenuStateCtx.Provider value={{ tagUid, editing, allNotes, allTags, tagList }}>\n      <MenuStateUpdateCtx.Provider\n        value={{ setAllNotes, setAllTags, setEditing, setTagList, setTagUid }}\n      >\n        <div id=\"container\">\n          <div id=\"header\">\n            <LeftTools />\n            <Title level={4}>{selectedTag.name}</Title>\n            <RightTools />\n          </div>\n          <div id=\"main\">\n            <SideMenu />\n            <NoteList noteList={noteList} />\n          </div>\n        </div>\n      </MenuStateUpdateCtx.Provider>\n    </MenuStateCtx.Provider>\n  );\n}\n","import { Point } from \"./draw\";\n\nexport class Drawer {\n  public points: Point[] = [];\n\n  constructor(\n    private context: CanvasRenderingContext2D,\n    private width: number,\n    private height: number\n  ) {}\n\n  drawBegin(point: Point) {\n    this.points.push(point);\n    const { x, y, lineWidth } = point;\n    this.context.lineWidth = lineWidth;\n    this.context.beginPath();\n    this.context.moveTo(x, y);\n    this.context.stroke();\n  }\n\n  drawCurve(toP: Point, color = \"black\") {\n    const fromP = this.points.slice(-1)[0];\n    this.points.push(toP);\n    if (this.points.length < 3) return;\n\n    const xc = (toP.x + fromP.x) / 2;\n    const yc = (toP.y + fromP.y) / 2;\n    this.context.strokeStyle = color;\n    this.context.lineCap = \"round\";\n    this.context.lineJoin = \"round\";\n    this.context.lineWidth = fromP.lineWidth;\n    this.context.quadraticCurveTo(fromP.x, fromP.y, xc, yc);\n    this.context.stroke();\n    this.context.beginPath();\n    this.context.moveTo(xc, yc);\n  }\n\n  getImageData(): ImageData {\n    return this.context.getImageData(0, 0, this.width, this.height);\n  }\n\n  static createRaw(width: number, height: number) {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    const context = canvas.getContext(\"2d\");\n    if (!context) {\n      throw Error(\"can't get canvas context\");\n    }\n    return new Drawer(context, width, height);\n  }\n}\n\nconst MIRROR_SIZE = 100;\n\nexport class DualDrawer {\n  public points: Point[] = [];\n  private mainDrawer: Drawer;\n  private mirrorDrawer: Drawer;\n  private ratio: number;\n\n  constructor(\n    private context: CanvasRenderingContext2D,\n    private width: number,\n    private height: number\n  ) {\n    this.mainDrawer = new Drawer(context, width, height);\n\n    if (width <= MIRROR_SIZE && height <= MIRROR_SIZE) {\n      this.ratio = 1;\n      this.mirrorDrawer = Drawer.createRaw(width, height);\n    } else if (width > height) {\n      this.ratio = width / MIRROR_SIZE;\n      this.mirrorDrawer = Drawer.createRaw(\n        MIRROR_SIZE,\n        height / this.ratio\n      );\n    } else {\n      this.ratio = height / MIRROR_SIZE;\n      this.mirrorDrawer = Drawer.createRaw(\n        width / this.ratio,\n        MIRROR_SIZE\n      );\n    }\n  }\n\n  drawBegin(point: Point) {\n    this.points.push(point);\n    this.mainDrawer.drawBegin(point);\n    this.mirrorDrawer.drawBegin(this.computeMirrorPoint(point));\n  }\n\n  drawCurve(toP: Point, color = \"black\") {\n    this.points.push(toP);\n    this.mainDrawer.drawCurve(toP, color);\n    this.mirrorDrawer.drawCurve(this.computeMirrorPoint(toP), 'black');\n  }\n\n  computeLineWidth(pressure: number) {\n    return (\n      Math.log(pressure + 1) * 5 +\n      (this.points.slice(-1)[0]?.lineWidth ?? 0) * 0.8\n    );\n  }\n\n  getMirrorImageData(): ImageData {\n    return this.mirrorDrawer.getImageData();\n  }\n\n  private computeMirrorPoint(point: Point) {\n    return {\n      x: point.x / this.ratio,\n      y: point.y / this.ratio,\n      lineWidth: point.lineWidth / this.ratio,\n    };\n  }\n}\n\nexport function drawPoints(\n  context: CanvasRenderingContext2D,\n  points: Point[],\n  color = \"black\",\n  width: number,\n  height: number\n) {\n  const drawer = new Drawer(context, width, height);\n  const clonedPs = points.slice();\n  const firstP = clonedPs.shift();\n  if (!firstP) return;\n  drawer.drawBegin(firstP);\n  clonedPs.forEach((p) => void drawer.drawCurve(p, color));\n}\n","import React, { useEffect, useRef } from \"react\";\nimport { drawPoints } from \"../../lib/draw/drawer\";\nimport { DrawState } from \"../../lib/draw/DrawState\";\n\nexport default React.memo(({ drawState }: { drawState: DrawState }) => {\n  const canvasEl = useRef<HTMLCanvasElement>(null);\n  const context = useRef<CanvasRenderingContext2D>();\n  const { width, height } = drawState;\n\n  useEffect(() => {\n    if (!canvasEl.current) return;\n    canvasEl.current.addEventListener(\n      \"touchstart\",\n      (e) => {\n        e.preventDefault();\n      },\n      { passive: false }\n    );\n\n    const ctx = canvasEl.current.getContext(\"2d\");\n    if (!ctx) return;\n    context.current = ctx;\n  }, []);\n\n  useEffect(() => {\n    console.log(\"display rerender\");\n    context.current?.clearRect(0, 0, width, height);\n\n    drawState.getValidStrokes().forEach((stroke) => {\n      if (!context.current) return;\n      drawPoints(context.current, stroke.points, \"black\", width, height);\n    });\n  });\n\n  return <canvas width={width} height={height} ref={canvasEl} />;\n});\n","import React, { MouseEvent, TouchEvent, useEffect, useRef } from \"react\";\nimport { iOSTouch } from \"../../lib/draw/draw\";\nimport { DualDrawer } from \"../../lib/draw/drawer\";\nimport { DrawState, DrawStateMethod, SetDrawState } from \"../../lib/draw/DrawState\";\n\nexport default function Drawinput({\n  drawState,\n  setDrawState,\n  method,\n  finger,\n  even,\n  lineWidth,\n}: {\n  drawState: DrawState;\n  setDrawState: SetDrawState;\n  method: DrawStateMethod;\n  finger: boolean;\n  even: boolean;\n  lineWidth: number;\n}) {\n  const { width, height } = drawState;\n  const canvasEl = useRef<HTMLCanvasElement>(null);\n  const clientWidth = useRef(width);\n  const clientHeight = useRef(height);\n\n  const isDrawing = useRef(false);\n  const drawer = useRef<DualDrawer>();\n\n  useEffect(() => {\n    const cvs = getCanvasEl();\n\n    const touchPrevent = (e: globalThis.TouchEvent) => {\n      if (!finger && isFinger(e)) {\n        return;\n      }\n      e.preventDefault();\n    };\n\n    cvs.addEventListener(\"touchstart\", touchPrevent, {\n      passive: false,\n    });\n\n    return () => {\n      cvs.removeEventListener(\"touchstart\", touchPrevent);\n    };\n  }, [finger]);\n\n  useEffect(updateClientSize, []);\n\n  useEffect(() => {\n    getContext().clearRect(0, 0, width, height);\n  }, [drawState, width, height]);\n\n  function getCanvasEl() {\n    if (!canvasEl.current) {\n      throw Error(\"can't get canvas element\");\n    }\n    return canvasEl.current;\n  }\n\n  function getContext() {\n    const context = getCanvasEl().getContext(\"2d\");\n    if (!context) {\n      throw Error(\"can't get canvas context\");\n    }\n    return context;\n  }\n\n  function getPosition(\n    e: iOSTouch | MouseEvent<HTMLCanvasElement>\n  ): [number, number] {\n    const clientRect = getCanvasEl().getBoundingClientRect();\n    const offsetX = e.clientX - clientRect.left;\n    const offsetY = e.clientY - clientRect.top;\n    const x = (offsetX / clientWidth.current) * width;\n    const y = (offsetY / clientHeight.current) * height;\n    return [x, y];\n  }\n\n  function updateClientSize() {\n    clientWidth.current = getCanvasEl().clientWidth;\n    clientHeight.current = getCanvasEl().clientHeight;\n  }\n\n  function isFinger(e: TouchEvent<HTMLCanvasElement> | globalThis.TouchEvent) {\n    const touch = e.touches[0] as iOSTouch;\n    return touch.touchType === \"direct\";\n  }\n\n  function handleTouchStart(e: TouchEvent<HTMLCanvasElement>) {\n    isDrawing.current = true;\n    updateClientSize();\n\n    drawer.current = new DualDrawer(getContext(), width, height);\n\n    const touch = e.touches[0] as iOSTouch;\n    if (!finger && isFinger(e)) {\n      return;\n    }\n    const pressure = (touch.force ?? 0) * lineWidth;\n    const [x, y] = getPosition(touch);\n    const lw = even\n      ? lineWidth\n      : drawer.current.computeLineWidth(pressure);\n\n    const newP = { x, y, lineWidth: lw };\n\n    drawer.current.drawBegin(newP);\n  }\n\n  function handleMouseStart(e: MouseEvent<HTMLCanvasElement>) {\n    isDrawing.current = true;\n    updateClientSize();\n\n    const [x, y] = getPosition(e);\n\n    drawer.current = new DualDrawer(getContext(), width, height);\n    const newP = { x, y, lineWidth };\n    drawer.current.drawBegin(newP);\n  }\n\n  function handleTouchMove(e: TouchEvent<HTMLCanvasElement>) {\n    if (!isDrawing.current || !drawer.current) return;\n\n    const touch = e.touches[0] as iOSTouch;\n    if (!finger && touch.touchType === \"direct\") {\n      return;\n    }\n    const pressure = (touch.force ?? 0) * lineWidth;\n    const [x, y] = getPosition(touch);\n\n    const lw = even\n      ? lineWidth\n      : drawer.current.computeLineWidth(pressure);\n\n    const newP = { x, y, lineWidth: lw };\n    drawer.current.drawCurve(newP);\n  }\n\n  function handleMouseMove(e: MouseEvent<HTMLCanvasElement>) {\n    if (!isDrawing.current || !drawer.current) return;\n\n    const [x, y] = getPosition(e);\n    const newP = { x, y, lineWidth };\n    drawer.current.drawCurve(newP);\n  }\n\n  function handleEnd() {\n    const d = drawer.current;\n    if (!isDrawing.current || !d) return;\n\n    const points = d.points;\n\n    const updateInput = () => {\n      isDrawing.current = false;\n      setDrawState((prev) => method(prev, d.getMirrorImageData(), points));\n    };\n\n    requestAnimationFrame(() => {\n      requestAnimationFrame(updateInput);\n    });\n  }\n\n  return (\n    <canvas\n      width={width}\n      height={height}\n      ref={canvasEl}\n      onTouchStart={handleTouchStart}\n      onMouseDown={handleMouseStart}\n      onTouchMove={handleTouchMove}\n      onMouseMove={handleMouseMove}\n      onTouchEnd={handleEnd}\n      onMouseUp={handleEnd}\n      onMouseLeave={handleEnd}\n    />\n  );\n}\n","import Drawdisplay from \"./DrawDisplay\";\nimport Drawinput from \"./DrawInput\";\nimport { DrawState, SetDrawState } from \"../../lib/draw/DrawState\";\nimport \"./draw.css\";\n\nexport interface DrawCtrl {\n  erasing: boolean;\n  finger: boolean;\n  even: boolean;\n  lineWidth: number;\n  color: string;\n}\n\nexport default function Draw({\n  drawState,\n  onChange,\n  erasing = false,\n  finger = false,\n  even = true,\n  lineWidth = 10,\n}: {\n  drawState: DrawState;\n  onChange: SetDrawState;\n  erasing?: boolean;\n  finger?: boolean;\n  even?: boolean;\n  lineWidth?: number;\n}) {\n  const method = erasing ? DrawState.eraseStrokes : DrawState.pushStroke;\n\n  return (\n    <div className=\"draw-wrapper\">\n      <Drawdisplay drawState={drawState} />\n      <Drawinput\n        drawState={drawState}\n        method={method}\n        finger={finger}\n        even={even}\n        lineWidth={lineWidth}\n        setDrawState={onChange}\n      />\n    </div>\n  );\n}\n","import { List, OrderedMap, Record as Rec } from \"immutable\";\nimport { NotePage } from \"../note/note\";\nimport { DrawState, Stroke } from \"./DrawState\";\n\ninterface StateSetRecordType {\n  states: OrderedMap<string, DrawState>;\n  keys: List<string>;\n  editStack: List<string>;\n  undoStack: List<string>;\n}\n\ntype StateSetRecord = Rec<StateSetRecordType>;\n\nconst defaultRecord: Readonly<StateSetRecordType> = {\n  states: OrderedMap(),\n  keys: List(),\n  editStack: List(),\n  undoStack: List(),\n};\n\nconst defaultFactory = Rec(defaultRecord);\n\nexport class StateSet {\n  constructor(private immutable: StateSetRecord) {}\n\n  static createEmpty() {\n    return new StateSet(defaultFactory());\n  }\n\n  static createKeyed(keys: string[]) {\n    return new StateSet(defaultFactory().set(\"keys\", List(keys)));\n  }\n\n  static createFromList(list: [string, DrawState][]) {\n    return new StateSet(\n      defaultFactory()\n        .set(\"keys\", List(list.map((item) => item[0])))\n        .set(\"states\", OrderedMap(list))\n    );\n  }\n\n  static createFromPages(pageRecord: Record<string, NotePage>, width: number) {\n    const entries = Object.entries(pageRecord);\n    return StateSet.createFromList(\n      entries.map(([key, { state, ratio }]) => [\n        key,\n        DrawState.loadFromFlat(state, width, width * ratio),\n      ])\n    );\n  }\n\n  getImmutable() {\n    return this.immutable;\n  }\n\n  getStates() {\n    return this.getImmutable().get(\"states\");\n  }\n\n  getKeys() {\n    return this.getImmutable().get(\"keys\");\n  }\n\n  getEditStack() {\n    return this.getImmutable().get(\"editStack\");\n  }\n\n  getUndoStack() {\n    return this.getImmutable().get(\"undoStack\");\n  }\n\n  setState(uid: string, drawState: DrawState) {\n    let newImmu = this.getImmutable().update(\"states\", (s) =>\n      s.set(uid, drawState)\n    );\n\n    if (this.getStates().has(uid)) {\n      newImmu = newImmu.update(\"editStack\", (s) => s.push(uid));\n    }\n    return new StateSet(newImmu);\n  }\n\n  getOneState(uid: string) {\n    return this.getImmutable().get(\"states\").get(uid);\n  }\n\n  isUndoable() {\n    return this.getEditStack().size > 0;\n  }\n\n  isRedoable() {\n    return this.getUndoStack().size > 0;\n  }\n\n  undo() {\n    if (this.isUndoable()) {\n      const lastUid = this.getImmutable().get(\"editStack\").last();\n      if (!lastUid) return this;\n      return new StateSet(\n        this.getImmutable()\n          .update(\"states\", (s) =>\n            s.update(lastUid, (state) => {\n              if (!state) throw new Error(\"undo wrong uid\");\n              return DrawState.undo(state);\n            })\n          )\n          .update(\"editStack\", (s) => s.pop())\n          .update(\"undoStack\", (s) => s.push(lastUid))\n      );\n    } else {\n      return this;\n    }\n  }\n\n  redo() {\n    if (this.isRedoable()) {\n      const lastUid = this.getImmutable().get(\"undoStack\").last();\n      if (!lastUid) return this;\n      return new StateSet(\n        this.getImmutable()\n          .update(\"states\", (s) =>\n            s.update(lastUid, (state) => {\n              if (!state) throw new Error(\"redo wrong uid\");\n              return DrawState.redo(state);\n            })\n          )\n          .update(\"undoStack\", (s) => s.pop())\n          .update(\"editStack\", (s) => s.push(lastUid))\n      );\n    } else {\n      return this;\n    }\n  }\n\n  pushStroke(uid: string, stroke: Stroke) {\n    const prevDs = this.getImmutable().get(\"states\").get(uid);\n    if (!prevDs) return this;\n    const ds = DrawState.simplePush(prevDs, stroke);\n    return this.setState(uid, ds);\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./digitDisplay.css\";\n\nfunction num2digits(num: number): number[] {\n  return String(num)\n    .padStart(4, \"0\")\n    .split(\"\")\n    .map((s) => Number(s));\n}\n\nexport default function DigitDisplay({ value }: { value: number }) {\n  const [randomNum, setRandomNum] = useState(9999);\n  const displayNum = value >= 0 ? value : randomNum;\n  const digits = num2digits(displayNum);\n\n  function resetRandom() {\n    setRandomNum(Math.floor(Math.random() * 10000));\n  }\n  useEffect(() => {\n    if (value !== -1) return setRandomNum(9999);\n    const timer = setTimeout(resetRandom, 100);\n    return () => clearTimeout(timer);\n  }, [value]);\n\n  return (\n    <div className={`digit-display ${value === -2 ? \"disabled\" : \"\"}`}>\n      {digits.map((d, idx) => (\n        <Digit key={idx} digit={d} />\n      ))}\n    </div>\n  );\n}\n\nfunction Digit({ digit }: { digit: number }) {\n  if (!(digit <= 9 && digit >= 0)) {\n    return <div className=\"digit\">*</div>;\n  }\n  return <div className=\"digit\">{digit}</div>;\n}\n","import { Button, Divider, Popover } from \"antd\";\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Stroke } from \"../../lib/draw/DrawState\";\nimport { StateSet } from \"../../lib/draw/StateSet\";\nimport { getTeamNote, getUserId } from \"../../lib/http/http\";\nimport { getIO } from \"../../lib/socket/io\";\nimport DigitDisplay from \"../ui/DigitDisplay\";\nimport Reader, { WIDTH } from \"./Reader\";\nimport { TeamOutlined } from \"@ant-design/icons\";\nimport './reader.css';\n\nconst TeamStateCtx = createContext({\n  code: -2,\n});\n\nexport default function Team() {\n  const [teamStateSet, setTeamStateSet] = useState<StateSet>();\n  const [code, setCode] = useState(-2);\n  const [ws] = useState(getIO);\n  const noteId = useParams().noteId ?? \"\";\n\n  async function loadTeamPages() {\n    const res = await getTeamNote(noteId);\n    if (!res) return;\n    const { code, pages } = res;\n    setCode(code);\n    setTeamStateSet(StateSet.createFromPages(pages, WIDTH));\n  }\n\n  const joinRoom = () => {\n    ws.emit(\"joinRoom\", {\n      noteId,\n      userId: getUserId(),\n    });\n  };\n\n  const leavRoom = () => {\n    ws.emit(\"leaveRoom\", {\n      noteId,\n      userId: getUserId(),\n    });\n  };\n\n  const roomInit = async () => {\n    await loadTeamPages();\n    joinRoom();\n    ws.on(\"connect\", () => {\n      console.log(\"on-conn\");\n      joinRoom();\n    });\n    ws.on(\"addStroke\", ({ pageId, stroke }) => {\n      console.log(\"on-add\");\n      setTeamStateSet((prev) => prev?.pushStroke(pageId, stroke));\n    });\n  };\n\n  const roomDestroy = () => {\n    leavRoom();\n    ws.off(\"connect\");\n    ws.off(\"addStroke\");\n  };\n\n  useEffect(() => {\n    roomInit();\n    return roomDestroy;\n  }, [noteId]);\n\n  const pushStroke = (pageId: string, stroke: Stroke) => {\n    ws.emit(\"pushStroke\", {\n      pageId,\n      userId: getUserId(),\n      stroke,\n    });\n  };\n\n  return (\n    <TeamStateCtx.Provider value={{ code }}>\n      <Reader\n        teamOn={true}\n        teamStateSet={teamStateSet}\n        pushStroke={pushStroke}\n      />\n    </TeamStateCtx.Provider>\n  );\n}\n\nexport function RoomCode() {\n  const { code } = useContext(TeamStateCtx);\n\n  const content = (\n    <div className=\"team-popover\">\n      <p>Room Code:</p>\n      <DigitDisplay value={code} />\n      <Divider />\n    </div>\n  );\n\n  return (\n    <Popover content={content} trigger=\"click\" placement=\"bottomRight\" title=\"Team info\">\n      <Button type=\"text\" icon={<TeamOutlined />} />\n    </Popover>\n  );\n}\n","import { Button, message, Popconfirm, Popover, Slider } from \"antd\";\nimport {\n  LeftOutlined,\n  UndoOutlined,\n  RedoOutlined,\n  HighlightOutlined,\n  TeamOutlined,\n  HighlightFilled,\n  FormatPainterFilled,\n  FormatPainterOutlined,\n  SaveOutlined,\n} from \"@ant-design/icons\";\nimport React, {\n  createContext,\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport Draw, { DrawCtrl } from \"../draw/Draw\";\nimport { DrawState, Stroke } from \"../../lib/draw/DrawState\";\nimport { NoteInfo, NotePage } from \"../../lib/note/note\";\nimport \"./reader.css\";\nimport { StateSet } from \"../../lib/draw/StateSet\";\nimport { loadNote, editNoteData } from \"../../lib/note/archive\";\nimport { debounce } from \"lodash\";\nimport DrawDisplay from \"../draw/DrawDisplay\";\nimport { putNote } from \"../../lib/http/http\";\nimport { RoomCode } from \"./Team\";\nexport const WIDTH = 2000;\n\nconst defaultDrawCtrl: DrawCtrl = {\n  erasing: false,\n  finger: false,\n  even: true,\n  lineWidth: 5,\n  color: \"#000\",\n};\nconst DrawCtrlCtx = createContext(defaultDrawCtrl);\nconst StateCtx = createContext({\n  noteId: \"\",\n  stateSet: undefined as StateSet | undefined,\n  saved: true,\n  teamOn: false,\n});\nconst StateUpdateCtx = createContext({\n  setSaved: (() => {}) as Dispatch<SetStateAction<boolean>>,\n});\n\nexport default function Reader({\n  teamOn,\n  teamStateSet,\n  pushStroke,\n}: {\n  teamOn: boolean;\n  teamStateSet?: StateSet;\n  pushStroke?: (pageId: string, stroke: Stroke) => void\n}) {\n  const noteId = useParams().noteId ?? \"\";\n  const nav = useNavigate();\n\n  const [pageRecord, setPageRecord] = useState<Record<string, NotePage>>({});\n  const [noteInfo, setNoteInfo] = useState<NoteInfo>();\n  const [stateSet, setStateSet] = useState<StateSet>();\n  const [drawCtrl, setDrawCtrl] = useState(defaultDrawCtrl);\n  const [saved, setSaved] = useState(true);\n\n  async function loadNotePages() {\n    const storedNote = await loadNote(noteId);\n    if (!storedNote) {\n      message.error(\"Note not found\");\n      return nav(\"/\");\n    }\n    const { pages, pdf, ...noteInfo } = storedNote;\n    setPageRecord(pages);\n    setNoteInfo(noteInfo);\n    setStateSet(StateSet.createFromPages(pages, WIDTH));\n  }\n\n  const debouncedSave = useCallback(\n    debounce(async (pr: Record<string, NotePage>) => {\n      await editNoteData(noteId, { pages: pr });\n      setSaved(true);\n    }, 5000),\n    []\n  );\n  const instantSave = debouncedSave.flush;\n\n  const createRoom = async () => {\n    if (!noteInfo) return;\n    const resCode = await putNote(noteId, noteInfo, pageRecord);\n    if (!resCode) return message.error(\"Can't create room.\");\n    await editNoteData(noteId, { team: true });\n    nav(\"/team/\" + noteId);\n  };\n\n  const noteInit = () => {\n    loadNotePages();\n  };\n\n  const noteDestroy = () => {\n    instantSave();\n  };\n\n  useEffect(() => {\n    noteInit();\n    return noteDestroy;\n  }, [noteId, teamOn]);\n\n  const setPageState = useCallback(\n    (uid: string, ds: DrawState) => {\n      setStateSet((prev) => prev?.setState(uid, ds));\n      setPageRecord((prev) => {\n        const pr = {\n          ...prev,\n          [uid]: {\n            ...prev[uid],\n            state: DrawState.flaten(ds),\n          },\n        };\n        debouncedSave(pr);\n        return pr;\n      });\n      setSaved(false);\n\n      const stroke = ds.getLastStroke();\n      if (stroke && pushStroke) pushStroke(uid, stroke);\n    },\n    [debouncedSave]\n  );\n\n  function handleUndo() {\n    setStateSet((prev) => prev?.undo());\n  }\n\n  function handleRedo() {\n    setStateSet((prev) => prev?.redo());\n  }\n\n  return (\n    <DrawCtrlCtx.Provider value={drawCtrl}>\n      <StateCtx.Provider\n        value={{ noteId, stateSet, saved, teamOn }}\n      >\n        <StateUpdateCtx.Provider value={{ setSaved }}>\n          <div className=\"reader-wrapper\">\n            <DrawTools\n              setDrawCtrl={setDrawCtrl}\n              handleUndo={handleUndo}\n              handleRedo={handleRedo}\n              instantSave={instantSave}\n              createRoom={createRoom}\n            />\n            {stateSet?.getKeys().map((uid) => {\n              const page = pageRecord[uid];\n              const drawState = stateSet.getOneState(uid);\n              const teamState = teamStateSet?.getOneState(uid);\n              if (!page || !drawState) return <></>;\n              return (\n                <PageWrapper\n                  drawState={drawState}\n                  teamState={teamState}\n                  updateState={setPageState}\n                  imageBlob={page.image}\n                  uid={uid}\n                  key={uid}\n                />\n              );\n            })}\n          </div>\n        </StateUpdateCtx.Provider>\n      </StateCtx.Provider>\n    </DrawCtrlCtx.Provider>\n  );\n}\n\nconst DrawTools = ({\n  setDrawCtrl,\n  handleUndo,\n  handleRedo,\n  instantSave,\n  createRoom,\n}: {\n  setDrawCtrl: Dispatch<SetStateAction<DrawCtrl>>;\n  handleUndo: () => void;\n  handleRedo: () => void;\n  instantSave: () => void;\n  createRoom: () => void;\n}) => {\n  const drawCtrl = useContext(DrawCtrlCtx);\n  const nav = useNavigate();\n\n  function updateDrawCtrl(updated: Partial<DrawCtrl>) {\n    setDrawCtrl((prev) => ({ ...prev, ...updated }));\n  }\n\n  const { saved, stateSet, teamOn } = useContext(StateCtx);\n\n  const PenPanel = (\n    <div id=\"pen-panel\">\n      <Slider\n        min={1}\n        max={20}\n        value={drawCtrl.lineWidth}\n        onChange={(lineWidth) => updateDrawCtrl({ lineWidth })}\n      />\n    </div>\n  );\n\n  const PenButton = drawCtrl.erasing ? (\n    <Button\n      type=\"text\"\n      onClick={() => updateDrawCtrl({ erasing: false })}\n      icon={<HighlightOutlined />}\n    />\n  ) : (\n    <Popover content={PenPanel} trigger=\"click\" placement=\"bottom\">\n      <Button type=\"text\" icon={<HighlightFilled />} />\n    </Popover>\n  );\n\n  return (\n    <div id=\"tool-bar\">\n      <div id=\"left-buttons\">\n        <Button type=\"text\" onClick={() => nav(\"/\")} icon={<LeftOutlined />}>\n          Back\n        </Button>\n        <Button\n          type=\"text\"\n          onClick={instantSave}\n          disabled={saved}\n          icon={<SaveOutlined />}\n        />\n      </div>\n      <div id=\"middle-buttons\">\n        <Button\n          type=\"text\"\n          icon={<UndoOutlined />}\n          onClick={handleUndo}\n          disabled={!stateSet?.isUndoable()}\n        />\n        <Button\n          id=\"redo-button\"\n          type=\"text\"\n          icon={<RedoOutlined />}\n          onClick={handleRedo}\n          disabled={!stateSet?.isRedoable()}\n        />\n        {PenButton}\n        <Button\n          type=\"text\"\n          onClick={() => updateDrawCtrl({ erasing: true })}\n          icon={\n            drawCtrl.erasing ? (\n              <FormatPainterFilled />\n            ) : (\n              <FormatPainterOutlined />\n            )\n          }\n        />\n      </div>\n      <div id=\"right-buttons\">\n        {teamOn && <RoomCode />}\n        {teamOn || <JoinRoom createRoom={createRoom} />}\n      </div>\n    </div>\n  );\n};\n\n\n\nconst JoinRoom = ({ createRoom }: { createRoom: () => void }) => {\n  return (\n    <Popconfirm\n      placement=\"bottomRight\"\n      title=\"Enable team editing?\"\n      onConfirm={createRoom}\n      okText=\"Yes\"\n      cancelText=\"No\"\n    >\n      <Button shape=\"round\" icon={<TeamOutlined />}>\n        Team\n      </Button>\n    </Popconfirm>\n  );\n};\n\nconst PageWrapper = React.memo(\n  ({\n    imageBlob,\n    drawState,\n    teamState,\n    uid,\n    updateState,\n  }: {\n    imageBlob?: Blob;\n    drawState: DrawState;\n    teamState: DrawState | undefined;\n    uid: string;\n    updateState: (uid: string, ds: DrawState) => void;\n  }) => {\n    const [loaded, setLoaded] = useState(false);\n\n    const url = useMemo(\n      () => (imageBlob ? URL.createObjectURL(imageBlob) : null),\n      [imageBlob]\n    );\n\n    useEffect(() => {\n      const prevUrl = url || \"\";\n      return () => URL.revokeObjectURL(prevUrl);\n    }, [url]);\n\n    return (\n      <div className={`pdf-page${loaded ? \" loaded\" : \"\"}`}>\n        <img\n          src={url || \"/default.png\"}\n          alt=\"pdf-page\"\n          onLoad={() => setLoaded(true)}\n        />\n        <div className=\"page-draw\">\n          {teamState && <DrawDisplay drawState={teamState} />}\n          <DrawWrapper\n            updateState={updateState}\n            drawState={drawState}\n            uid={uid}\n          />\n        </div>\n      </div>\n    );\n  }\n);\n\nconst DrawWrapper = ({\n  drawState,\n  uid,\n  updateState,\n}: {\n  drawState: DrawState;\n  uid: string;\n  updateState: (uid: string, ds: DrawState) => void;\n}) => {\n  const drawCtrl = useContext(DrawCtrlCtx);\n\n  function handleChange(fn: ((s: DrawState) => DrawState) | DrawState) {\n    let ds = fn instanceof DrawState ? fn : fn(drawState);\n    updateState(uid, ds);\n  }\n\n  return (\n    <Draw\n      drawState={drawState}\n      onChange={handleChange}\n      erasing={drawCtrl.erasing}\n      lineWidth={drawCtrl.lineWidth}\n    />\n  );\n};\n","import { Input } from \"antd\";\nimport React, { useState } from \"react\";\n\nexport default function Test() {\n  const [text, setText] = useState(\"\");\n  return (\n    <>\n      <h1>{text}</h1>\n      <Input value={text} onChange={(e) => setText(e.target.value)} />\n      <input value={text} onChange={(e) => setText(e.target.value)} />\n      <input type=\"text\" />\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport MainMenu from \"./component/menu/MainMenu\";\nimport Reader from \"./component/reader/Reader\";\nimport Test from \"./component/Test\";\nimport Team from \"./component/reader/Team\";\n\nconst placeholderEl = (\n  <main style={{ padding: \"1rem\" }}>\n    <p>There's nothing here!</p>\n  </main>\n);\n\nReactDOM.render(\n  <BrowserRouter>\n    <Routes>\n      <Route path=\"/\" element={<MainMenu />} />\n      <Route path=\"/reader\">\n        <Route path=\":noteId\" element={<Reader teamOn={false} />} />\n      </Route>\n      <Route path=\"/team\">\n        <Route path=\":noteId\" element={<Team />} />\n      </Route>\n      <Route path=\"/test\" element={<Test />} />\n      <Route path=\"*\" element={placeholderEl} />\n    </Routes>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}