{"version":3,"file":"static/js/350.e2d7c708.chunk.js","mappings":"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","sources":["lib/draw/drawCtrl.ts","lib/draw/StateSet.ts","lib/array.ts","component/reader/ReaderTools.tsx","component/ui/DigitDisplay.tsx","component/ui/IconFont.tsx","component/reader/PageNav.tsx","component/reader/DrawTools.tsx","component/draw/Draw.tsx","lib/touch/touch.ts","component/reader/Reader.tsx","lib/hooks.ts","lib/draw/TeamState.ts","component/reader/Team.tsx","lib/network/io.ts","lib/draw/drawer.ts"],"sourcesContent":["import localforage from \"localforage\";\r\n\r\nexport type CtrlMode = \"draw\" | \"erase\" | \"select\" | \"selected\" | \"delete\";\r\n\r\nexport interface DrawCtrl {\r\n  finger: boolean;\r\n  lineWidth: number;\r\n  eraserWidth: number;\r\n  color: string;\r\n  highlight: boolean;\r\n}\r\n\r\nexport const defaultDrawCtrl: Readonly<DrawCtrl> = {\r\n  finger: false,\r\n  lineWidth: 10,\r\n  eraserWidth: 10,\r\n  color: \"#000000\",\r\n  highlight: false,\r\n};\r\n\r\nexport async function getDrawCtrl() {\r\n  let drawCtrl = (await localforage.getItem(\"DRAW_CTRL\")) as DrawCtrl | null;\r\n  if (!drawCtrl) {\r\n    drawCtrl = defaultDrawCtrl;\r\n    await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n  }\r\n  return drawCtrl;\r\n}\r\n\r\nexport async function saveDrawCtrl(drawCtrl: DrawCtrl) {\r\n  await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n}\r\n","import { List, Map, Record } from \"immutable\";\r\nimport { DrawState, Operation } from \"./DrawState\";\r\nimport { NotePage } from \"../note/note\";\r\n\r\ninterface StateSetRecordType {\r\n  states: Map<string, DrawState>;\r\n  editStack: List<string>;\r\n  undoStack: List<string>;\r\n}\r\n\r\nconst defaultRecord: Readonly<StateSetRecordType> = {\r\n  states: Map(),\r\n  editStack: List(),\r\n  undoStack: List(),\r\n};\r\n\r\ntype StateSetRecord = Record<StateSetRecordType>;\r\nconst defaultFactory = Record(defaultRecord);\r\n\r\nexport type SetOperation = Operation & { pageID: string };\r\n\r\nexport class StateSet {\r\n  constructor(\r\n    private immutable: StateSetRecord,\r\n    public lastOp?: SetOperation\r\n  ) {}\r\n\r\n  static createFromList(list: [string, DrawState][]) {\r\n    return new StateSet(defaultFactory().set(\"states\", Map(list)));\r\n  }\r\n\r\n  static createFromPages(\r\n    pageRec: globalThis.Record<string, NotePage>,\r\n    width: number\r\n  ) {\r\n    const entries = Object.entries(pageRec);\r\n    return StateSet.createFromList(\r\n      entries.map(([key, { state, ratio }]) => [\r\n        key,\r\n        DrawState.loadFromFlat(state, width, width * ratio),\r\n      ])\r\n    );\r\n  }\r\n\r\n  getImmutable() {\r\n    return this.immutable;\r\n  }\r\n\r\n  getStates() {\r\n    return this.getImmutable().get(\"states\");\r\n  }\r\n\r\n  getOneState(pageID: string) {\r\n    return this.getStates().get(pageID);\r\n  }\r\n\r\n  getEditStack() {\r\n    return this.getImmutable().get(\"editStack\");\r\n  }\r\n\r\n  getUndoStack() {\r\n    return this.getImmutable().get(\"undoStack\");\r\n  }\r\n\r\n  setState(pageID: string, drawState: DrawState) {\r\n    const prevDS = this.getOneState(pageID);\r\n    if (!prevDS || prevDS === drawState) return this;\r\n    let currRecord = this.getImmutable()\r\n      .update(\"states\", (s) => s.set(pageID, drawState))\r\n      .update(\"editStack\", (l) => l.push(pageID))\r\n      .delete(\"undoStack\");\r\n\r\n    const { lastOp } = drawState;\r\n    const lastSetOp = lastOp && { ...lastOp, pageID };\r\n\r\n    return new StateSet(currRecord, lastSetOp);\r\n  }\r\n\r\n  addState(pageID: string, notePage: NotePage, width: number) {\r\n    const { state, ratio } = notePage;\r\n    const newDS = DrawState.loadFromFlat(state, width, width * ratio);\r\n    const currRecord = this.getImmutable().update(\"states\", (s) =>\r\n      s.set(pageID, newDS)\r\n    );\r\n    return new StateSet(currRecord);\r\n  }\r\n\r\n  deleteState(pageID: string) {\r\n    return new StateSet(\r\n      this.getImmutable().update(\"states\", (s) => s.delete(pageID))\r\n    );\r\n  }\r\n\r\n  isUndoable() {\r\n    return this.getEditStack().size > 0;\r\n  }\r\n\r\n  isRedoable() {\r\n    return this.getUndoStack().size > 0;\r\n  }\r\n\r\n  undo() {\r\n    if (!this.isUndoable()) return this;\r\n    const lastUid = this.getEditStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.undo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"editStack\", (s) => s.pop())\r\n        .update(\"undoStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  redo() {\r\n    if (!this.isRedoable()) return this;\r\n    const lastUid = this.getUndoStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.redo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"undoStack\", (s) => s.pop())\r\n        .update(\"editStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  getLastDS(): [string, DrawState] | undefined {\r\n    const pageID = this.lastOp?.pageID;\r\n    const ds = pageID && this.getOneState(pageID);\r\n    return ds ? [pageID, ds] : undefined;\r\n  }\r\n}\r\n","export function exchange<T>(list: T[], fromIndex: number, toIndex: number) {\r\n  const result = list.slice();\r\n  const [removed] = result.splice(fromIndex, 1);\r\n  result.splice(toIndex, 0, removed);\r\n  return result;\r\n}\r\n\r\nexport function insertAfter<T>(list: T[], prevItem: T, newItem: T) {\r\n  const prevIndex = list.indexOf(prevItem);\r\n  const curr = list.slice();\r\n  if (prevIndex === -1) return curr;\r\n  curr.splice(prevIndex + 1, 0, newItem);\r\n  return curr;\r\n}\r\n","import { Button, Input } from \"antd\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport classNames from \"classnames\";\r\n\r\nexport const AddPageButton = () => {\r\n  const { addFinalPage } = useContext(ReaderMethodCtx);\r\n  const { pageOrder } = useContext(ReaderStateCtx);\r\n  const empty = Boolean(pageOrder && !pageOrder.length);\r\n  return (\r\n    <div className={classNames(\"add-btn-wrapper\", { empty })}>\r\n      <Button\r\n        type=\"dashed\"\r\n        icon={<PlusOutlined />}\r\n        block\r\n        onClick={addFinalPage}\r\n      >\r\n        Add page\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const NoteHeader = () => {\r\n  const { noteInfo } = useContext(ReaderStateCtx);\r\n  const [noteName, setNoteName] = useState(\"\");\r\n  useEffect(() => {\r\n    if (!noteInfo) return;\r\n    setNoteName(noteInfo?.name);\r\n  }, [noteInfo]);\r\n\r\n  if (!noteInfo) return null;\r\n\r\n  return (\r\n    <div className=\"note-header\">\r\n      <Input value={noteName} bordered={false} />\r\n    </div>\r\n  );\r\n};\r\n","import classNames from \"classnames\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./digitDisplay.sass\";\r\n\r\nfunction num2digits(num: number): number[] {\r\n  return String(num)\r\n    .padStart(4, \"0\")\r\n    .split(\"\")\r\n    .map((s) => Number(s));\r\n}\r\n\r\nexport default function DigitDisplay({ value }: { value: number }) {\r\n  const [randomNum, setRandomNum] = useState(9999);\r\n  const displayNum = value >= 0 ? value : randomNum;\r\n  const digits = num2digits(displayNum);\r\n\r\n  function resetRandom() {\r\n    setRandomNum(Math.floor(Math.random() * 10000));\r\n  }\r\n  useEffect(() => {\r\n    if (value !== -1) return setRandomNum(9999);\r\n    const timer = setTimeout(resetRandom, 100);\r\n    return () => clearTimeout(timer);\r\n  }, [value]);\r\n\r\n  return (\r\n    <div className={classNames(\"digit-display\", { disabled: value === -2 })}>\r\n      {digits.map((d, idx) => (\r\n        <Digit key={idx} digit={d} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Digit({ digit }: { digit: number }) {\r\n  if (!(digit <= 9 && digit >= 0)) {\r\n    return <div className=\"digit\">*</div>;\r\n  }\r\n  return <div className=\"digit\">{digit}</div>;\r\n}\r\n","import { createFromIconfontCN } from \"@ant-design/icons\";\r\n\r\nexport default createFromIconfontCN({\r\n  scriptUrl: \"//at.alicdn.com/t/font_3181679_eb02zt96p4p.js\",\r\n});\r\n","import { Button, Drawer, Menu, Popover, Tabs } from \"antd\";\r\nimport React, {\r\n  FC,\r\n  useMemo,\r\n  Dispatch,\r\n  useState,\r\n  useContext,\r\n  MouseEvent,\r\n  SetStateAction,\r\n  useEffect,\r\n  useRef,\r\n} from \"react\";\r\nimport { PageWrapper, ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport {\r\n  MoreOutlined,\r\n  PlusOutlined,\r\n  CopyOutlined,\r\n  DeleteOutlined,\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n} from \"@ant-design/icons\";\r\nimport IconFont from \"../ui/IconFont\";\r\nimport {\r\n  Draggable,\r\n  Droppable,\r\n  DropResult,\r\n  DragDropContext,\r\n} from \"react-beautiful-dnd\";\r\nimport { AddPageButton } from \"./ReaderTools\";\r\nimport { exchange } from \"../../lib/array\";\r\nimport classNames from \"classnames\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport \"./preview.sass\";\r\n\r\nconst PageNavContent = ({\r\n  activeKey,\r\n  setActiveKey,\r\n}: {\r\n  activeKey: string;\r\n  setActiveKey: Dispatch<SetStateAction<string>>;\r\n}) => {\r\n  const { pageOrder, inviewPages } = useContext(ReaderStateCtx);\r\n  const { setPageOrder, scrollPage } = useContext(ReaderMethodCtx);\r\n  const { updateReorder } = useContext(TeamCtx);\r\n  const refRec = useRef<Record<string, HTMLElement>>({});\r\n  const listEl = useRef<HTMLDivElement>();\r\n\r\n  const onDragEnd = ({ source, destination }: DropResult) => {\r\n    if (!destination || !pageOrder) return;\r\n    const { index: fromIndex } = source;\r\n    const { index: toIndex } = destination;\r\n    const pageID = pageOrder[fromIndex];\r\n    setPageOrder((prev) => {\r\n      if (!prev) return;\r\n      const newOrder = exchange(prev, fromIndex, toIndex);\r\n      updateReorder && updateReorder(newOrder);\r\n      return newOrder;\r\n    });\r\n    requestAnimationFrame(() => scrollPage(pageID));\r\n  };\r\n\r\n  const currpageID = useMemo(\r\n    () => pageOrder?.find((pageID) => inviewPages.has(pageID)) || \"\",\r\n    [pageOrder, inviewPages]\r\n  );\r\n\r\n  useEffect(() => {\r\n    refRec.current[currpageID]?.scrollIntoView();\r\n    const itemHeight = refRec.current[currpageID]?.clientHeight || 0;\r\n    const listHeight = listEl.current?.clientHeight || 0;\r\n    listEl.current?.scrollBy(0, -listHeight / 2 + itemHeight / 2);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"preview-container\">\r\n      <PreviewTabs activeKey={activeKey} setActiveKey={setActiveKey} />\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"droppable\">\r\n          {({ droppableProps, innerRef, placeholder }) => (\r\n            <div\r\n              className=\"page-list\"\r\n              ref={(e) => {\r\n                innerRef(e);\r\n                if (e) listEl.current = e;\r\n              }}\r\n              {...droppableProps}\r\n            >\r\n              {pageOrder?.map((uid, index) => (\r\n                <PagePreview\r\n                  key={uid}\r\n                  uid={uid}\r\n                  mode={activeKey}\r\n                  pageIndex={index}\r\n                  currpageID={currpageID}\r\n                  refRec={refRec.current}\r\n                />\r\n              ))}\r\n              {placeholder}\r\n              {activeKey === \"ALL\" && <AddPageButton />}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PagePreview: FC<{\r\n  uid: string;\r\n  mode: string;\r\n  pageIndex: number;\r\n  currpageID: string;\r\n  refRec: Record<string, HTMLElement>;\r\n}> = ({ uid, pageIndex, mode, currpageID, refRec }) => {\r\n  const { stateSet, teamState, pageRec } = useContext(ReaderStateCtx);\r\n  const { scrollPage, switchPageMarked } = useContext(ReaderMethodCtx);\r\n  const page = pageRec && pageRec[uid];\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageState(uid);\r\n  if (!page || !drawState) return null;\r\n\r\n  if (\r\n    mode === \"WRITTEN\" &&\r\n    drawState.isEmpty() &&\r\n    (!teamStateMap || teamStateMap.every((ds) => ds.isEmpty()))\r\n  ) {\r\n    return null;\r\n  } else if (mode === \"MARKED\" && !page.marked) {\r\n    return null;\r\n  }\r\n\r\n  const switchMarked = (e: MouseEvent<HTMLSpanElement>) => {\r\n    switchPageMarked(uid);\r\n    e.stopPropagation();\r\n  };\r\n  const curr = currpageID === uid;\r\n  const dragDisabled = mode !== \"ALL\";\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={uid}\r\n      index={pageIndex}\r\n      isDragDisabled={dragDisabled}\r\n    >\r\n      {(\r\n        { innerRef, draggableProps, dragHandleProps },\r\n        { isDragging: drag }\r\n      ) => {\r\n        const { image, marked } = page;\r\n        return (\r\n          <div\r\n            ref={(e) => {\r\n              innerRef(e);\r\n              if (e) refRec[uid] = e;\r\n            }}\r\n            className={classNames(\"page\", { curr, drag })}\r\n            onClick={() => scrollPage(uid)}\r\n            {...draggableProps}\r\n            {...dragHandleProps}\r\n          >\r\n            <PageWrapper\r\n              uid={uid}\r\n              drawState={drawState}\r\n              teamStateMap={teamStateMap}\r\n              thumbnail={image}\r\n              preview\r\n            />\r\n            <span\r\n              className={classNames(\"bookmark\", { marked })}\r\n              onClickCapture={switchMarked}\r\n            />\r\n            <span className=\"index\">{pageIndex + 1}</span>\r\n            <PreviewOption uid={uid} />\r\n          </div>\r\n        );\r\n      }}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst PreviewOption = ({ uid }: { uid: string }) => {\r\n  const [popShow, setPopShow] = useState(false);\r\n  const { addPage, deletePage } = useContext(ReaderMethodCtx);\r\n  const { teamOn } = useContext(ReaderStateCtx);\r\n  const { Item } = Menu;\r\n\r\n  const menu = (\r\n    <Menu\r\n      onClick={({ key, domEvent }) => {\r\n        if (key === \"ADD\") {\r\n          addPage(uid);\r\n        } else if (key === \"COPY\") {\r\n          addPage(uid, true);\r\n        } else if (key === \"DELETE\") {\r\n          deletePage(uid);\r\n        }\r\n        domEvent.stopPropagation();\r\n        setPopShow(false);\r\n      }}\r\n    >\r\n      <Item key=\"ADD\" icon={<PlusOutlined />}>\r\n        Add page\r\n      </Item>\r\n      <Item key=\"COPY\" icon={<CopyOutlined />}>\r\n        Duplicate\r\n      </Item>\r\n      <Item key=\"DELETE\" danger icon={<DeleteOutlined />} disabled={teamOn}>\r\n        Delete\r\n      </Item>\r\n    </Menu>\r\n  );\r\n  return (\r\n    <Popover\r\n      content={menu}\r\n      trigger=\"click\"\r\n      placement=\"left\"\r\n      visible={popShow}\r\n      onVisibleChange={setPopShow}\r\n      destroyTooltipOnHide\r\n    >\r\n      <span\r\n        className=\"option\"\r\n        onClickCapture={(e) => {\r\n          setPopShow((prev) => !prev);\r\n          e.stopPropagation();\r\n        }}\r\n      >\r\n        <MoreOutlined />\r\n      </span>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst PreviewTabs = ({\r\n  activeKey,\r\n  setActiveKey,\r\n}: {\r\n  activeKey: string;\r\n  setActiveKey: (key: string) => void;\r\n}) => {\r\n  const { TabPane } = Tabs;\r\n  return (\r\n    <Tabs\r\n      className=\"tabs\"\r\n      activeKey={activeKey}\r\n      onChange={setActiveKey}\r\n      tabBarGutter={10}\r\n      size=\"small\"\r\n      centered\r\n    >\r\n      <TabPane tab={<IconFont type=\"icon-uf_paper\" />} key=\"ALL\" />\r\n      <TabPane tab={<IconFont type=\"icon-bookmark2\" />} key=\"MARKED\" />\r\n      <TabPane tab={<IconFont type=\"icon-write\" />} key=\"WRITTEN\" />\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default function PageNav() {\r\n  const [navOn, setNavOn] = useState(false);\r\n  const [activeKey, setActiveKey] = useState<string>(\"ALL\");\r\n  const title = {\r\n    ALL: \"All Pages\",\r\n    MARKED: \"Bookmarks\",\r\n    WRITTEN: \"Notes\",\r\n  }[activeKey];\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        type=\"text\"\r\n        icon={<MenuFoldOutlined />}\r\n        onClick={() => setNavOn((prev) => !prev)}\r\n      />\r\n      <Drawer\r\n        visible={navOn}\r\n        onClose={() => setNavOn(false)}\r\n        width={200}\r\n        title={title}\r\n        closeIcon={<MenuUnfoldOutlined />}\r\n        bodyStyle={{ padding: 0, overflow: \"hidden\" }}\r\n        destroyOnClose\r\n      >\r\n        <PageNavContent activeKey={activeKey} setActiveKey={setActiveKey} />\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","import React, {\r\n  FC,\r\n  useMemo,\r\n  useState,\r\n  Dispatch,\r\n  useEffect,\r\n  useContext,\r\n  CSSProperties,\r\n  SetStateAction,\r\n} from \"react\";\r\nimport {\r\n  Badge,\r\n  Avatar,\r\n  Button,\r\n  Slider,\r\n  Divider,\r\n  message,\r\n  Popover,\r\n  Popconfirm,\r\n  ButtonProps,\r\n  Tag,\r\n  Alert,\r\n} from \"antd\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport DigitDisplay from \"../ui/DigitDisplay\";\r\nimport { colors, getHashedColor } from \"../../lib/color\";\r\nimport { getUserID, UserInfo } from \"../../lib/user\";\r\nimport { CtrlMode, DrawCtrl } from \"../../lib/draw/drawCtrl\";\r\nimport PageNav from \"./PageNav\";\r\nimport {\r\n  HomeFilled,\r\n  EyeOutlined,\r\n  UndoOutlined,\r\n  RedoOutlined,\r\n  SaveOutlined,\r\n  TeamOutlined,\r\n  CopyOutlined,\r\n  DragOutlined,\r\n  ExpandOutlined,\r\n  ReloadOutlined,\r\n  DeleteOutlined,\r\n  HighlightOutlined,\r\n  DisconnectOutlined,\r\n  RotateLeftOutlined,\r\n  RotateRightOutlined,\r\n  EyeInvisibleOutlined,\r\n  UsergroupAddOutlined,\r\n} from \"@ant-design/icons\";\r\nimport IconFont from \"../ui/IconFont\";\r\nimport \"./drawTools.sass\";\r\n\r\nexport default function DrawTools({\r\n  handleUndo,\r\n  handleRedo,\r\n  instantSave,\r\n}: {\r\n  handleUndo: () => void;\r\n  handleRedo: () => void;\r\n  instantSave: () => void;\r\n}) {\r\n  const { saved, stateSet, teamOn, mode, drawCtrl } =\r\n    useContext(ReaderStateCtx);\r\n  const { setDrawCtrl, setMode } = useContext(ReaderMethodCtx);\r\n  const { finger } = drawCtrl;\r\n\r\n  const nav = useNavigate();\r\n\r\n  const updateDrawCtrl = (updated: Partial<DrawCtrl>) => {\r\n    setDrawCtrl((prev) => ({ ...prev, ...updated }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (mode === \"selected\") {\r\n      message.info({\r\n        className: \"select-message\",\r\n        icon: <DragOutlined style={{ display: \"none\" }} />,\r\n        content: <SelectMenu setMode={setMode} />,\r\n        duration: 0,\r\n        key: \"selected\",\r\n      });\r\n      return () => message.destroy(\"selected\");\r\n    }\r\n  }, [mode]);\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"left\">\r\n        <Button\r\n          type=\"text\"\r\n          onClick={() => nav(\"/\")}\r\n          icon={<HomeFilled style={{ opacity: 0.8 }} />}\r\n        />\r\n        <br />\r\n        <Button\r\n          type=\"text\"\r\n          className=\"save\"\r\n          onClick={instantSave}\r\n          disabled={saved}\r\n          icon={<SaveOutlined />}\r\n        />\r\n      </div>\r\n      <div className=\"middle\">\r\n        <Button\r\n          type=\"text\"\r\n          shape=\"circle\"\r\n          icon={<UndoOutlined />}\r\n          onClick={handleUndo}\r\n          disabled={!stateSet?.isUndoable()}\r\n        />\r\n        <Button\r\n          className=\"redo\"\r\n          type=\"text\"\r\n          shape=\"circle\"\r\n          icon={<RedoOutlined />}\r\n          onClick={handleRedo}\r\n          disabled={!stateSet?.isRedoable()}\r\n        />\r\n        <br />\r\n        <PenButton updateDrawCtrl={updateDrawCtrl} />\r\n        <EraserButton updateDrawCtrl={updateDrawCtrl} />\r\n        <Button\r\n          type={[\"select\", \"selected\"].includes(mode) ? \"default\" : \"text\"}\r\n          shape=\"circle\"\r\n          onClick={() => setMode(\"select\")}\r\n          icon={<ExpandOutlined />}\r\n        />\r\n        <Button\r\n          className=\"finger\"\r\n          type={finger ? \"primary\" : \"text\"}\r\n          ghost={finger}\r\n          shape=\"circle\"\r\n          onClick={() => updateDrawCtrl({ finger: !finger })}\r\n          icon={<IconFont type=\"icon-finger\" />}\r\n        />\r\n      </div>\r\n      <div className=\"right\">\r\n        {teamOn && <RoomInfo />}\r\n        {teamOn || <JoinRoom />}\r\n        <br />\r\n        <PageNav />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nconst PenButton = ({\r\n  updateDrawCtrl,\r\n}: {\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}) => {\r\n  const { mode } = useContext(ReaderStateCtx);\r\n  const { setMode } = useContext(ReaderMethodCtx);\r\n  return mode === \"draw\" ? (\r\n    <Popover\r\n      content={<PenPanel updateDrawCtrl={updateDrawCtrl} />}\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button type=\"default\" shape=\"circle\" icon={<HighlightOutlined />} />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      shape=\"circle\"\r\n      onClick={() => setMode(\"draw\")}\r\n      icon={<HighlightOutlined />}\r\n    />\r\n  );\r\n};\r\n\r\nconst PenPanel = ({\r\n  updateDrawCtrl,\r\n}: {\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}) => {\r\n  const {\r\n    drawCtrl: { lineWidth, highlight },\r\n  } = useContext(ReaderStateCtx);\r\n  const [tempLineWidth, setTempLineWidth] = useState(lineWidth);\r\n\r\n  return (\r\n    <div className=\"pen-panel\">\r\n      <div className=\"pen-status\">\r\n        <Slider\r\n          min={5}\r\n          max={100}\r\n          value={tempLineWidth}\r\n          onChange={setTempLineWidth}\r\n          onAfterChange={(lineWidth) => updateDrawCtrl({ lineWidth })}\r\n        />\r\n        <Button\r\n          type={highlight ? \"primary\" : \"text\"}\r\n          ghost={highlight}\r\n          shape=\"circle\"\r\n          icon={<IconFont type=\"icon-Highlight\" />}\r\n          onClick={() => updateDrawCtrl({ highlight: !highlight })}\r\n        />\r\n      </div>\r\n      <ColorSelect updateDrawCtrl={updateDrawCtrl} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ColorSelect = ({\r\n  updateDrawCtrl,\r\n}: {\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}) => {\r\n  const {\r\n    drawCtrl: { color },\r\n  } = useContext(ReaderStateCtx);\r\n\r\n  return (\r\n    <div className=\"color-select\">\r\n      {colors.map((c) => (\r\n        <label key={c}>\r\n          <input\r\n            checked={color === c}\r\n            type=\"radio\"\r\n            name=\"color\"\r\n            onChange={() => updateDrawCtrl({ color: c })}\r\n          />\r\n          <div\r\n            className=\"circle\"\r\n            style={{ \"--circle-color\": c } as CSSProperties}\r\n          ></div>\r\n        </label>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EraserButton = ({\r\n  updateDrawCtrl,\r\n}: {\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}) => {\r\n  const { setMode } = useContext(ReaderMethodCtx);\r\n  const {\r\n    mode,\r\n    drawCtrl: { eraserWidth },\r\n  } = useContext(ReaderStateCtx);\r\n  const [tempEraserWidth, setTempEraserWidth] = useState(eraserWidth);\r\n\r\n  const content = (\r\n    <div className=\"pen-panel\">\r\n      <Slider\r\n        min={5}\r\n        max={100}\r\n        value={tempEraserWidth}\r\n        onChange={setTempEraserWidth}\r\n        onAfterChange={(eraserWidth) => updateDrawCtrl({ eraserWidth })}\r\n      />\r\n    </div>\r\n  );\r\n  return mode === \"erase\" ? (\r\n    <Popover\r\n      content={content}\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button\r\n        type=\"default\"\r\n        shape=\"circle\"\r\n        icon={<IconFont type=\"icon-eraser\" />}\r\n      />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      shape=\"circle\"\r\n      onClick={() => setMode(\"erase\")}\r\n      icon={<IconFont type=\"icon-eraser\" />}\r\n    />\r\n  );\r\n};\r\n\r\nconst SelectMenu: FC<{\r\n  setMode: Dispatch<SetStateAction<CtrlMode>>;\r\n}> = ({ setMode }) => {\r\n  const buttonProps: ButtonProps = {\r\n    type: \"text\",\r\n    shape: \"round\",\r\n  };\r\n  return (\r\n    <>\r\n      <Button icon={<RotateLeftOutlined />} {...buttonProps} />\r\n      <Button icon={<RotateRightOutlined />} {...buttonProps} />\r\n      <Button\r\n        danger\r\n        icon={<DeleteOutlined />}\r\n        onClick={() => setMode(\"delete\")}\r\n        {...buttonProps}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst UserCard: FC<{ userInfo: UserInfo }> = ({ userInfo }) => {\r\n  const { userName, userID } = userInfo;\r\n  const { ignores, setIgnores } = useContext(TeamCtx);\r\n  const color = useMemo(() => getHashedColor(userID), [userID]);\r\n  const self = userID === getUserID();\r\n  const ignored = ignores.has(userID) && !self;\r\n\r\n  const switchIgnore = () => {\r\n    setIgnores((prev) => {\r\n      if (prev.has(userID)) return prev.delete(userID);\r\n      return prev.add(userID);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-item\">\r\n      <Avatar\r\n        className=\"avatar\"\r\n        size=\"small\"\r\n        style={{ backgroundColor: color }}\r\n      >\r\n        {userName.slice(0, 4)}\r\n      </Avatar>\r\n      <span className=\"user-name\">{userName}</span>\r\n      {self ? (\r\n        <Tag className=\"me-tag\">Me</Tag>\r\n      ) : (\r\n        <Button\r\n          disabled={self}\r\n          type=\"text\"\r\n          icon={ignored ? <EyeInvisibleOutlined /> : <EyeOutlined />}\r\n          onClick={switchIgnore}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction RoomInfo() {\r\n  const { code, userList, loadInfo, connected } = useContext(TeamCtx);\r\n  const link = window.location.href;\r\n  const copy = () => {\r\n    navigator.clipboard.writeText(link);\r\n    message.destroy(\"copy\");\r\n    message.success({\r\n      content: \"Share link copied!\",\r\n      icon: <CopyOutlined />,\r\n      key: \"copy\",\r\n    });\r\n  };\r\n\r\n  const content = (\r\n    <div className=\"team-popover\">\r\n      {connected || (\r\n        <Alert\r\n          className=\"disconn-alert\"\r\n          message=\"Network failed.\"\r\n          icon={<DisconnectOutlined />}\r\n          type=\"error\"\r\n          showIcon\r\n          banner\r\n        />\r\n      )}\r\n      <DigitDisplay value={code} />\r\n      <Search\r\n        className=\"copy-link code-font\"\r\n        value={link}\r\n        enterButton={<Button icon={<CopyOutlined />} />}\r\n        onSearch={copy}\r\n      />\r\n      <Divider />\r\n      <div className=\"user-list\">\r\n        {userList.map((u) => (\r\n          <UserCard key={u.userID} userInfo={u} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const title = (\r\n    <div className=\"team-title\">\r\n      <span>Team info</span>\r\n      <Button\r\n        shape=\"circle\"\r\n        type=\"text\"\r\n        size=\"small\"\r\n        icon={<ReloadOutlined />}\r\n        onClick={loadInfo}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Popover\r\n      content={content}\r\n      trigger=\"click\"\r\n      placement=\"bottomRight\"\r\n      title={title}\r\n      defaultVisible\r\n      getPopupContainer={(e) => e}\r\n    >\r\n      <Button\r\n        type=\"text\"\r\n        icon={\r\n          <Badge\r\n            status={connected ? \"success\" : \"error\"}\r\n            count={connected ? userList.length : \"!\"}\r\n            size=\"small\"\r\n          >\r\n            <TeamOutlined />\r\n          </Badge>\r\n        }\r\n      />\r\n    </Popover>\r\n  );\r\n}\r\n\r\nconst JoinRoom = () => {\r\n  const { createRoom } = useContext(ReaderMethodCtx);\r\n  return (\r\n    <Popconfirm\r\n      placement=\"bottomRight\"\r\n      title=\"Enable team editing?\"\r\n      onConfirm={createRoom}\r\n      okText=\"Yes\"\r\n      cancelText=\"No\"\r\n    >\r\n      <Button type=\"text\" icon={<UsergroupAddOutlined />} />\r\n    </Popconfirm>\r\n  );\r\n};\r\n","import React, {\r\n  useRef,\r\n  Dispatch,\r\n  useState,\r\n  useEffect,\r\n  TouchEvent,\r\n  SetStateAction,\r\n} from \"react\";\r\nimport { CtrlMode, defaultDrawCtrl, DrawCtrl } from \"../../lib/draw/drawCtrl\";\r\nimport { DrawState, SetDrawState, Stroke } from \"../../lib/draw/DrawState\";\r\nimport { releaseCanvas } from \"../../lib/draw/drawer\";\r\nimport { isStylus } from \"../../lib/touch/touch\";\r\nimport { Set } from \"immutable\";\r\nimport paper from \"paper\";\r\nimport \"./draw.sass\";\r\n\r\nconst PREVIEW_WIDTH = 200;\r\n\r\nconst Draw = ({\r\n  drawState,\r\n  onChange = () => {},\r\n  otherStates,\r\n  drawCtrl = defaultDrawCtrl,\r\n  mode = \"draw\",\r\n  setMode = () => {},\r\n  readonly = false,\r\n  preview = false,\r\n  imgSrc,\r\n}: {\r\n  drawState: DrawState;\r\n  otherStates?: DrawState[];\r\n  onChange?: SetDrawState;\r\n  drawCtrl?: DrawCtrl;\r\n  mode?: CtrlMode;\r\n  setMode?: Dispatch<SetStateAction<CtrlMode>>;\r\n  readonly?: boolean;\r\n  preview?: boolean;\r\n  imgSrc?: string;\r\n}) => {\r\n  const { width, height } = drawState;\r\n  const canvasEl = useRef<HTMLCanvasElement>(null);\r\n  const scope = useRef(new paper.PaperScope());\r\n  const group = useRef<paper.Path[]>();\r\n  const ratio = useRef(1);\r\n  const path = useRef<paper.Path>();\r\n  const [rect, setRect] = useState<paper.Shape.Rectangle>();\r\n  const selectGroup = useRef<paper.Group>();\r\n  const [erased, setErased] = useState(Set<string>());\r\n\r\n  let { color, finger, lineWidth, highlight, eraserWidth } = drawCtrl;\r\n\r\n  const isEventValid = (e: TouchEvent<HTMLCanvasElement>) => {\r\n    return finger || isStylus(e);\r\n  };\r\n\r\n  const updateRatio = () => {\r\n    const clientWidth = canvasEl.current?.clientWidth;\r\n    if (clientWidth) ratio.current = width / clientWidth;\r\n  };\r\n\r\n  const setupPaper = () => {\r\n    if (!canvasEl.current) return;\r\n    scope.current.setup(canvasEl.current);\r\n\r\n    const r = preview ? PREVIEW_WIDTH / width : 1;\r\n    scope.current.view.viewSize.width = width * r;\r\n    scope.current.view.viewSize.height = height * r;\r\n    scope.current.view.scale(r, new paper.Point(0, 0));\r\n  };\r\n\r\n  const setNewRect = (e: paper.MouseEvent) => {\r\n    updateRatio();\r\n    scope.current.activate();\r\n    const point = e.point.multiply(ratio.current);\r\n    const rectangle = new paper.Shape.Rectangle(point, new paper.Size(0, 0));\r\n    rectangle.strokeColor = new paper.Color(\"#1890ff\");\r\n    rectangle.strokeWidth = 3;\r\n    rectangle.dashOffset = 0;\r\n    rectangle.dashArray = [30, 20];\r\n    setRect(rectangle);\r\n  };\r\n\r\n  const handleDown = {\r\n    draw() {\r\n      updateRatio();\r\n      scope.current.activate();\r\n      path.current = new scope.current.Path();\r\n      const strokeColor = new paper.Color(color);\r\n      if (highlight) {\r\n        strokeColor.alpha /= 2;\r\n        path.current.blendMode = \"multiply\";\r\n      }\r\n      path.current.strokeColor = strokeColor;\r\n      path.current.strokeWidth = lineWidth;\r\n      path.current.strokeJoin = \"round\";\r\n      path.current.strokeCap = \"round\";\r\n    },\r\n    erase() {\r\n      updateRatio();\r\n      scope.current.activate();\r\n      path.current = new scope.current.Path();\r\n      const strokeColor = new paper.Color(\"#0003\");\r\n      path.current.strokeColor = strokeColor;\r\n      path.current.strokeWidth = eraserWidth;\r\n      path.current.strokeJoin = \"round\";\r\n      path.current.strokeCap = \"round\";\r\n    },\r\n    select(e: paper.MouseEvent) {\r\n      setNewRect(e);\r\n    },\r\n    selected(e: paper.MouseEvent) {\r\n      scope.current.activate();\r\n      const point = e.point.multiply(ratio.current);\r\n      if (!rect) return;\r\n      if (!point.isInside(rect.strokeBounds)) {\r\n        setNewRect(e);\r\n        setMode(\"select\");\r\n      }\r\n    },\r\n    delete() {},\r\n  }[mode];\r\n\r\n  const handleDrag = {\r\n    draw(e: paper.MouseEvent) {\r\n      if (!path.current) return;\r\n      scope.current.activate();\r\n      const point = e.point.multiply(ratio.current);\r\n      path.current.add(point);\r\n      path.current.smooth();\r\n    },\r\n    erase(e: paper.MouseEvent) {\r\n      const eraserPath = path.current;\r\n      if (!eraserPath) return;\r\n      scope.current.activate();\r\n      const point = e.point.multiply(ratio.current);\r\n      eraserPath.add(point);\r\n      eraserPath.smooth();\r\n\r\n      const newErased = group.current\r\n        ?.filter((p) => !erased.has(p.name))\r\n        .filter((p) => checkErase(p, eraserPath, e, ratio.current, eraserWidth))\r\n        .map((p) => p.name);\r\n      newErased && setErased((prev) => prev.concat(newErased));\r\n    },\r\n    select(e: paper.MouseEvent) {\r\n      if (!rect) return;\r\n      scope.current.activate();\r\n      const delta = e.delta.multiply(ratio.current);\r\n      rect.size = rect.size.add(new paper.Size(delta.x, delta.y));\r\n      rect.position = rect.position.add(delta.divide(2));\r\n    },\r\n    selected(e: paper.MouseEvent) {\r\n      const sGroup = selectGroup.current;\r\n      if (!rect || !sGroup) return;\r\n      const delta = e.delta.multiply(ratio.current);\r\n      rect.position = rect.position.add(delta);\r\n      sGroup.position = sGroup.position.add(delta);\r\n    },\r\n    delete() {},\r\n  }[mode];\r\n\r\n  const handleUp = {\r\n    erase() {\r\n      if (!path.current) return;\r\n      scope.current.activate();\r\n      path.current.remove();\r\n      onChange((prev) => DrawState.eraseStrokes(prev, erased.toArray()));\r\n      setErased(Set());\r\n    },\r\n    draw() {\r\n      if (!path.current || path.current.segments.length === 0) return;\r\n      path.current.simplify();\r\n      if (path.current.segments.length === 0) return;\r\n      const pathData = path.current.exportJSON();\r\n      path.current.remove();\r\n      onChange((prev) => DrawState.addStroke(prev, pathData));\r\n    },\r\n    select() {\r\n      if (!rect || rect.size.width < 10 || rect.size.height < 10) {\r\n        return setRect(undefined);\r\n      }\r\n      scope.current.activate();\r\n\r\n      const bounds = rect.strokeBounds;\r\n      selectGroup.current = new paper.Group();\r\n      group.current?.forEach((p) => {\r\n        if (!(p instanceof paper.Path)) return;\r\n        if (p.isInside(bounds) || p.intersects(rect)) {\r\n          selectGroup.current?.addChild(p);\r\n        }\r\n      });\r\n      setMode(\"selected\");\r\n    },\r\n    selected() {},\r\n    delete() {},\r\n  }[mode];\r\n\r\n  useEffect(() => {\r\n    setupPaper();\r\n    scope.current.activate();\r\n    const cvs = canvasEl.current;\r\n    return () => void (cvs && releaseCanvas(cvs));\r\n  }, []);\r\n\r\n  const handlePaper = () => {\r\n    if (readonly) return;\r\n    scope.current.view.onMouseDown = handleDown;\r\n    scope.current.view.onMouseDrag = handleDrag;\r\n    scope.current.view.onMouseUp = handleUp;\r\n  };\r\n  useEffect(handlePaper);\r\n\r\n  const preventTouch = (e: TouchEvent<HTMLCanvasElement>) => {\r\n    isEventValid(e) || e.stopPropagation();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!imgSrc) return;\r\n    const img = new Image();\r\n    img.src = imgSrc;\r\n    let raster: paper.Raster;\r\n\r\n    img.onload = () => {\r\n      scope.current.activate();\r\n      raster = new paper.Raster(img);\r\n      raster.position = scope.current.view.center;\r\n      let r = width / img.width;\r\n      raster.scale(r);\r\n      raster.sendToBack();\r\n    };\r\n\r\n    return () => void raster?.remove();\r\n  }, [imgSrc]);\r\n\r\n  useEffect(() => {\r\n    scope.current.activate();\r\n    group.current = [];\r\n\r\n    drawState.getValidStrokes().forEach((stroke) => {\r\n      paintStroke(stroke, group.current, erased);\r\n    });\r\n\r\n    return () => group.current?.forEach((item) => item.remove());\r\n  }, [drawState, erased]);\r\n\r\n  useEffect(() => {\r\n    scope.current.activate();\r\n    const otherGroup: paper.Path[] = [];\r\n\r\n    otherStates?.forEach((ds) => {\r\n      ds.getValidStrokes().forEach((stroke) => {\r\n        paintStroke(stroke, otherGroup);\r\n      });\r\n    });\r\n\r\n    return () => otherGroup.forEach((item) => item.remove());\r\n  }, [otherStates]);\r\n\r\n  const updateMutation = () => {\r\n    const list = selectGroup.current?.children;\r\n    if (!list?.length) return;\r\n    const mutations: [string, string][] = list.map((p) => [\r\n      p.name,\r\n      p.exportJSON(),\r\n    ]);\r\n    onChange((prev) => DrawState.mutateStroke(prev, mutations));\r\n  };\r\n\r\n  const deleteSelected = () => {\r\n    const list = selectGroup.current?.children;\r\n    if (!list?.length) return;\r\n    const deleted = list.map((item) => item.name);\r\n    onChange((prev) => DrawState.eraseStrokes(prev, deleted));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (mode === \"select\") {\r\n      //\r\n    } else if (mode === \"selected\") {\r\n      if (rect?.strokeColor) rect.strokeColor.alpha /= 2;\r\n      scope.current.activate();\r\n      return updateMutation;\r\n    } else if (mode === \"delete\") {\r\n      deleteSelected();\r\n      setMode(\"select\");\r\n      setRect(undefined);\r\n    } else {\r\n      setRect(undefined);\r\n    }\r\n  }, [mode]);\r\n\r\n  useEffect(() => {\r\n    if (!rect) return;\r\n    let id = 0;\r\n    const moveDash = () => {\r\n      id = requestAnimationFrame(() => {\r\n        rect.dashOffset += 3;\r\n        moveDash();\r\n      });\r\n    };\r\n    moveDash();\r\n    return () => {\r\n      rect.remove();\r\n      cancelAnimationFrame(id);\r\n    };\r\n  }, [rect]);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasEl}\r\n      className=\"draw-canvas\"\r\n      data-paper-hidpi={false}\r\n      onTouchStartCapture={preventTouch}\r\n      onTouchMoveCapture={preventTouch}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(Draw);\r\n\r\nconst paintStroke = (\r\n  stroke: Stroke,\r\n  group?: paper.Path[],\r\n  erased?: Set<string>\r\n) => {\r\n  let { pathData, uid } = stroke;\r\n  try {\r\n    const path = new paper.Path();\r\n    path.importJSON(pathData);\r\n    path.name = uid;\r\n    if (erased?.has(uid)) path.opacity /= 2;\r\n    group?.push(path);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getCheckPoints = (() => {\r\n  const cache = new WeakMap<paper.MouseEvent, paper.Point[]>();\r\n  return (e: paper.MouseEvent, ratio: number, eraserWidth: number) => {\r\n    const cached = cache.get(e);\r\n    if (cached) return cached;\r\n\r\n    const point = e.point.multiply(ratio);\r\n    const delta = e.delta.multiply(ratio);\r\n    const times = (delta.length / eraserWidth) * 2;\r\n    const checkPoints: paper.Point[] = [];\r\n    for (let i = 0; i < times; i += 1) {\r\n      checkPoints.push(point.subtract(delta.multiply(i / times)));\r\n    }\r\n    cache.set(e, checkPoints);\r\n    return checkPoints;\r\n  };\r\n})();\r\n\r\nconst checkErase = (\r\n  checkedPath: paper.Path,\r\n  eraserPath: paper.Path,\r\n  e: paper.MouseEvent,\r\n  ratio: number,\r\n  eraserWidth: number\r\n) => {\r\n  const curveBound = eraserPath.lastSegment.curve?.strokeBounds;\r\n  if (\r\n    !(checkedPath instanceof paper.Path) ||\r\n    !curveBound?.intersects(checkedPath.strokeBounds)\r\n  ) {\r\n    return false;\r\n  }\r\n\r\n  if (eraserPath.intersects(checkedPath)) return true;\r\n\r\n  const checkPoints = getCheckPoints(e, ratio, eraserWidth);\r\n  return checkPoints.some((cPoint) => {\r\n    const d = checkedPath.getNearestPoint(cPoint)?.getDistance(cPoint);\r\n    return d && d < (checkedPath.strokeWidth + eraserWidth) / 2;\r\n  });\r\n};\r\n","import { TouchEvent } from \"react\";\r\n\r\nexport type iOSTouch = Touch & {\r\n  force?: number;\r\n  touchType?: \"stylus\" | \"direct\";\r\n};\r\n\r\nexport function isStylus(e: TouchEvent<HTMLCanvasElement> | globalThis.TouchEvent) {\r\n  const touch = e.touches[0] as iOSTouch;\r\n  return touch?.touchType === \"stylus\";\r\n}\r\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  Dispatch,\r\n  useEffect,\r\n  useContext,\r\n  useCallback,\r\n  createContext,\r\n  SetStateAction,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport {\r\n  DrawCtrl,\r\n  CtrlMode,\r\n  getDrawCtrl,\r\n  saveDrawCtrl,\r\n  defaultDrawCtrl,\r\n} from \"../../lib/draw/drawCtrl\";\r\nimport { createPage, NoteInfo, NotePage } from \"../../lib/note/note\";\r\nimport { loadNote, editNoteData } from \"../../lib/note/archive\";\r\nimport { putNote, updatePages } from \"../../lib/network/http\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { useBeforeunload } from \"react-beforeunload\";\r\nimport { TeamState } from \"../../lib/draw/TeamState\";\r\nimport { DrawState } from \"../../lib/draw/DrawState\";\r\nimport { StateSet } from \"../../lib/draw/StateSet\";\r\nimport { debounce, last, omit } from \"lodash\";\r\nimport { insertAfter } from \"../../lib/array\";\r\nimport { AddPageButton } from \"./ReaderTools\";\r\nimport { useMounted } from \"../../lib/hooks\";\r\nimport { Map, Set } from \"immutable\";\r\nimport DrawTools from \"./DrawTools\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport Draw from \"../draw/Draw\";\r\nimport { message } from \"antd\";\r\nimport \"./reader.sass\";\r\n\r\nexport const WIDTH = 2000;\r\n\r\nexport const ReaderStateCtx = createContext({\r\n  noteID: \"\",\r\n  noteInfo: undefined as NoteInfo | undefined,\r\n  stateSet: undefined as StateSet | undefined,\r\n  teamState: undefined as TeamState | undefined,\r\n  pageRec: undefined as Record<string, NotePage> | undefined,\r\n  pageOrder: undefined as string[] | undefined,\r\n  saved: true,\r\n  teamOn: false,\r\n  inviewPages: Set<string>(),\r\n  refRec: {} as Record<string, HTMLElement>,\r\n  drawCtrl: defaultDrawCtrl,\r\n  mode: \"draw\" as CtrlMode,\r\n});\r\n\r\nexport const ReaderMethodCtx = createContext({\r\n  createRoom: () => {},\r\n  scrollPage: (() => {}) as (pageID: string) => void,\r\n  setInviewPages: (() => {}) as Dispatch<SetStateAction<Set<string>>>,\r\n  switchPageMarked: (() => {}) as (pageID: string) => void,\r\n  setPageOrder: (() => {}) as Dispatch<SetStateAction<string[] | undefined>>,\r\n  setPageState: (() => {}) as (uid: string, ds: DrawState) => void,\r\n  addPage: (() => {}) as (prevpageID: string, copy?: boolean) => void,\r\n  addFinalPage: () => {},\r\n  deletePage: (() => {}) as (pageID: string) => void,\r\n  setMode: (() => {}) as Dispatch<SetStateAction<CtrlMode>>,\r\n  setDrawCtrl: (() => {}) as Dispatch<SetStateAction<DrawCtrl>>,\r\n});\r\n\r\nexport default function Reader({ teamOn }: { teamOn: boolean }) {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const nav = useNavigate();\r\n\r\n  const [pageRec, setPageRec] = useState<Record<string, NotePage>>();\r\n  const [noteInfo, setNoteInfo] = useState<NoteInfo>();\r\n  const [stateSet, setStateSet] = useState<StateSet>();\r\n  const [drawCtrl, setDrawCtrl] = useState(defaultDrawCtrl);\r\n  const [mode, setMode] = useState<CtrlMode>(\"draw\");\r\n  const [saved, setSaved] = useState(true);\r\n  const [inviewPages, setInviewPages] = useState(Set<string>());\r\n  const [pageOrder, setPageOrder] = useState<string[]>();\r\n  const [loaded, setLoaded] = useState(false);\r\n  const refRec = useRef<Record<string, HTMLElement>>({});\r\n  const mounted = useMounted();\r\n\r\n  const { teamState, pushOperation, teamUpdate, updateNewPage } =\r\n    useContext(TeamCtx);\r\n\r\n  const loadNotePages = async () => {\r\n    const storedNote = await loadNote(noteID);\r\n    if (!storedNote) {\r\n      message.error(\"Note not found\");\r\n      return nav(\"/\");\r\n    }\r\n    const { pageRec, pdf, pageOrder, ...noteInfo } = storedNote;\r\n    setPageRec(pageRec);\r\n    setPageOrder(pageOrder);\r\n    setNoteInfo(noteInfo);\r\n    setStateSet(StateSet.createFromPages(pageRec, WIDTH));\r\n    setDrawCtrl(await getDrawCtrl());\r\n    setLoaded(true);\r\n    if (teamOn) updatePages(noteID);\r\n  };\r\n\r\n  const debouncedSave = useCallback(\r\n    debounce(async (pr: Record<string, NotePage>) => {\r\n      await editNoteData(noteID, { pageRec: pr });\r\n      const canvas = document.querySelector(\"canvas\");\r\n      const data = canvas?.toDataURL();\r\n      data && editNoteData(noteID, { thumbnail: data });\r\n      mounted.current && setSaved(true);\r\n    }, 5000),\r\n    []\r\n  );\r\n  const instantSave = debouncedSave.flush;\r\n\r\n  const createRoom = async () => {\r\n    await instantSave();\r\n    const resCode = await putNote(noteID);\r\n    if (!resCode) {\r\n      message.error(\"Can't create room.\");\r\n      return;\r\n    }\r\n    await editNoteData(noteID, { team: true });\r\n    nav(\"/team/\" + noteID);\r\n  };\r\n\r\n  const noteInit = () => {\r\n    loadNotePages();\r\n  };\r\n\r\n  const noteDestroy = () => {\r\n    instantSave();\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    noteInit();\r\n    return noteDestroy;\r\n  }, [noteID, teamOn]);\r\n\r\n  useBeforeunload(noteDestroy);\r\n\r\n  useEffect(() => {\r\n    if (!noteInfo) return;\r\n    document.title = noteInfo.name + \" - Multibility\";\r\n  }, [noteInfo]);\r\n\r\n  useEffect(() => {\r\n    loaded && saveDrawCtrl(drawCtrl);\r\n  }, [drawCtrl]);\r\n\r\n  useEffect(() => {\r\n    if (!stateSet?.lastOp || !pushOperation) return;\r\n    pushOperation(stateSet.lastOp);\r\n  }, [stateSet]);\r\n\r\n  useEffect(() => {\r\n    if (!pageRec || !loaded) return;\r\n    debouncedSave(pageRec);\r\n    setSaved(false);\r\n  }, [pageRec]);\r\n\r\n  useEffect(() => {\r\n    const handleReorder = async () => {\r\n      if (!pageOrder || !loaded) return;\r\n      await editNoteData(noteID, { pageOrder });\r\n      await instantSave();\r\n      const teamOrder = teamUpdate?.pageOrder;\r\n      if (teamOn && JSON.stringify(pageOrder) !== JSON.stringify(teamOrder)) {\r\n        updatePages(noteID);\r\n      }\r\n    };\r\n    handleReorder();\r\n  }, [pageOrder]);\r\n\r\n  useEffect(() => {\r\n    if (!teamUpdate) return;\r\n    const { type, pageOrder } = teamUpdate;\r\n    if (type === \"reorder\") {\r\n      setPageOrder(pageOrder);\r\n    } else if (type === \"newPage\") {\r\n      setPageOrder(pageOrder);\r\n      let { pageID, newPage } = teamUpdate;\r\n      setPageRec((prev) => prev && { ...prev, [pageID]: newPage });\r\n      setStateSet((prev) => prev?.addState(pageID, newPage, WIDTH));\r\n    }\r\n  }, [teamUpdate]);\r\n\r\n  const updatePageRec = (pageID: string, ds: DrawState) => {\r\n    const state = DrawState.flaten(ds);\r\n    setPageRec(\r\n      (prev) => prev && { ...prev, [pageID]: { ...prev[pageID], state } }\r\n    );\r\n  };\r\n\r\n  const setPageState = useCallback((uid: string, ds: DrawState) => {\r\n    setStateSet((prev) => prev?.setState(uid, ds));\r\n    updatePageRec(uid, ds);\r\n  }, []);\r\n\r\n  const switchPageMarked = (pageID: string) => {\r\n    const page = pageRec && pageRec[pageID];\r\n    if (!page) return;\r\n    const marked = !Boolean(page.marked);\r\n    setPageRec(\r\n      (prev) => prev && { ...prev, [pageID]: { ...prev[pageID], marked } }\r\n    );\r\n  };\r\n\r\n  const handleUndo = () => {\r\n    setStateSet((prev) => {\r\n      if (!prev) return;\r\n      const newSS = prev.undo();\r\n      const lastDS = newSS.getLastDS();\r\n      lastDS && updatePageRec(...lastDS);\r\n      return newSS;\r\n    });\r\n  };\r\n\r\n  const handleRedo = () => {\r\n    setStateSet((prev) => {\r\n      if (!prev) return;\r\n      const newSS = prev.redo();\r\n      const lastDS = newSS.getLastDS();\r\n      lastDS && updatePageRec(...lastDS);\r\n      return newSS;\r\n    });\r\n  };\r\n\r\n  const scrollPage = (pageID: string) => {\r\n    refRec.current[pageID]?.scrollIntoView();\r\n  };\r\n\r\n  const addPage = (prevpageID: string, copy = false) => {\r\n    const prevPage = copy ? pageRec && pageRec[prevpageID] : undefined;\r\n    const [pageID, newPage] = createPage(prevPage);\r\n    setPageOrder((prev) => {\r\n      if (!prev) return;\r\n      const newOrder = insertAfter(prev, prevpageID, pageID);\r\n      updateNewPage && updateNewPage(newOrder, pageID, newPage);\r\n      return newOrder;\r\n    });\r\n    setPageRec((prev) => prev && { ...prev, [pageID]: newPage });\r\n    setStateSet((prev) => prev?.addState(pageID, newPage, WIDTH));\r\n  };\r\n\r\n  const addFinalPage = () => {\r\n    const lastpageID = last(pageOrder);\r\n    lastpageID && addPage(lastpageID);\r\n  };\r\n\r\n  const deletePage = (pageID: string) => {\r\n    if (teamOn) {\r\n      message.error(\"You can't delete pages from a team note.\");\r\n      return;\r\n    }\r\n    setPageOrder((prev) => prev?.filter((id) => id !== pageID));\r\n    setPageRec((prev) => prev && omit(prev, pageID));\r\n    setStateSet((prev) => prev?.deleteState(pageID));\r\n  };\r\n\r\n  const renderResult = (\r\n    <div className=\"reader container\">\r\n      <DrawTools\r\n        instantSave={instantSave}\r\n        handleUndo={handleUndo}\r\n        handleRedo={handleRedo}\r\n      />\r\n      <main>\r\n        {pageOrder?.map((uid) => (\r\n          <PageContainer uid={uid} key={uid} />\r\n        ))}\r\n        <AddPageButton />\r\n      </main>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ReaderStateCtx.Provider\r\n      value={{\r\n        noteID,\r\n        noteInfo,\r\n        stateSet,\r\n        teamState,\r\n        saved,\r\n        teamOn,\r\n        pageRec,\r\n        pageOrder,\r\n        inviewPages,\r\n        refRec: refRec.current,\r\n        mode,\r\n        drawCtrl,\r\n      }}\r\n    >\r\n      <ReaderMethodCtx.Provider\r\n        value={{\r\n          createRoom,\r\n          scrollPage,\r\n          setInviewPages,\r\n          switchPageMarked,\r\n          setPageOrder,\r\n          setPageState,\r\n          addPage,\r\n          addFinalPage,\r\n          deletePage,\r\n          setMode,\r\n          setDrawCtrl,\r\n        }}\r\n      >\r\n        {renderResult}\r\n      </ReaderMethodCtx.Provider>\r\n    </ReaderStateCtx.Provider>\r\n  );\r\n}\r\n\r\nconst PageContainer: FC<{ uid: string }> = ({ uid }) => {\r\n  const { pageRec, stateSet, teamState } = useContext(ReaderStateCtx);\r\n  const { setPageState } = useContext(ReaderMethodCtx);\r\n\r\n  const page = pageRec && pageRec[uid];\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageState(uid);\r\n  const updateState = useCallback(\r\n    (ds: DrawState) => setPageState(uid, ds),\r\n    [uid, setPageState]\r\n  );\r\n  if (!page || !drawState) return null;\r\n\r\n  return (\r\n    <PageWrapper\r\n      drawState={drawState}\r\n      teamStateMap={teamStateMap}\r\n      updateState={updateState}\r\n      pdfIndex={page.pdfIndex}\r\n      uid={uid}\r\n    />\r\n  );\r\n};\r\n\r\nexport const PageWrapper = ({\r\n  thumbnail,\r\n  drawState,\r\n  teamStateMap,\r\n  updateState,\r\n  pdfIndex,\r\n  preview = false,\r\n  uid,\r\n}: {\r\n  uid: string;\r\n  drawState: DrawState;\r\n  teamStateMap?: Map<string, DrawState>;\r\n  thumbnail?: string;\r\n  pdfIndex?: number;\r\n  updateState?: (ds: DrawState) => void;\r\n  preview?: boolean;\r\n}) => {\r\n  const { setInviewPages } = useContext(ReaderMethodCtx);\r\n  const { refRec, noteID } = useContext(ReaderStateCtx);\r\n  const [fullImg, setFullImg] = useState<string>();\r\n  const [visibleRef, visible] = useInView({ delay: 100 });\r\n\r\n  const { height, width } = drawState;\r\n  const ratio = height / width;\r\n\r\n  const handleRef = useCallback(\r\n    (e: HTMLDivElement | null) => {\r\n      if (!e) return;\r\n      visibleRef(e);\r\n      if (!preview && refRec) refRec[uid] = e;\r\n    },\r\n    [refRec]\r\n  );\r\n\r\n  const loadImage = useCallback(\r\n    (() => {\r\n      let called = false;\r\n      return async () => {\r\n        if (preview || !pdfIndex || called) return;\r\n        called = true;\r\n        const { getOnePageImage } = await import(\"../../lib/note/pdfImage\");\r\n        setFullImg(await getOnePageImage(noteID, pdfIndex));\r\n      };\r\n    })(),\r\n    [preview, pdfIndex]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (preview) return;\r\n    if (visible) {\r\n      loadImage();\r\n      setInviewPages((prev) => prev.add(uid));\r\n    } else {\r\n      setInviewPages((prev) => prev.delete(uid));\r\n    }\r\n  }, [visible, loadImage, preview]);\r\n\r\n  const { ignores } = useContext(TeamCtx);\r\n  const otherStates = useMemo(\r\n    () => teamStateMap && Array.from(teamStateMap.deleteAll(ignores).values()),\r\n    [teamStateMap, ignores]\r\n  );\r\n\r\n  const imageLoaded = fullImg || !pdfIndex;\r\n  const drawShow = visible && imageLoaded;\r\n  const maskShow = Boolean(preview || !imageLoaded);\r\n\r\n  return (\r\n    <section\r\n      ref={handleRef}\r\n      className=\"note-page\"\r\n      style={{ paddingTop: `${ratio * 100}%` }}\r\n    >\r\n      {drawShow && (\r\n        <DrawWrapper\r\n          drawState={drawState}\r\n          otherStates={otherStates}\r\n          updateState={updateState}\r\n          imgSrc={fullImg || thumbnail || undefined}\r\n          preview={preview}\r\n        />\r\n      )}\r\n      {maskShow && <div className=\"mask\" />}\r\n    </section>\r\n  );\r\n};\r\nPageWrapper.displayName = \"PageWrapper\";\r\n\r\nconst DrawWrapper = ({\r\n  drawState,\r\n  updateState,\r\n  otherStates,\r\n  preview = false,\r\n  imgSrc,\r\n}: {\r\n  drawState: DrawState;\r\n  otherStates?: DrawState[];\r\n  updateState?: (ds: DrawState) => void;\r\n  preview?: boolean;\r\n  imgSrc?: string;\r\n}) => {\r\n  const { mode, drawCtrl } = useContext(ReaderStateCtx);\r\n  const { setMode } = useContext(ReaderMethodCtx);\r\n\r\n  const handleChange = useCallback(\r\n    (arg: ((s: DrawState) => DrawState) | DrawState) => {\r\n      if (!updateState) return;\r\n      let ds = arg instanceof DrawState ? arg : arg(drawState);\r\n      updateState(ds);\r\n    },\r\n    [updateState, drawState]\r\n  );\r\n\r\n  return (\r\n    <div className=\"page-draw\">\r\n      {preview ? (\r\n        <Draw\r\n          drawState={drawState}\r\n          otherStates={otherStates}\r\n          imgSrc={imgSrc}\r\n          readonly\r\n          preview\r\n        />\r\n      ) : (\r\n        <Draw\r\n          drawState={drawState}\r\n          otherStates={otherStates}\r\n          onChange={handleChange}\r\n          imgSrc={imgSrc}\r\n          drawCtrl={drawCtrl}\r\n          mode={mode}\r\n          setMode={setMode}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nDrawWrapper.displayName = \"DrawWrapper\";\r\n","import { useEffect, useMemo, useRef } from \"react\";\r\n\r\nexport function useObjectUrl(obj: Blob | MediaSource | undefined) {\r\n  const url = useMemo(() => (obj ? URL.createObjectURL(obj) : undefined), [obj]);\r\n\r\n  useEffect(() => {\r\n    const prevUrl = url || \"\";\r\n    return () => URL.revokeObjectURL(prevUrl);\r\n  }, [url]);\r\n\r\n  return url;\r\n}\r\n\r\nexport function useMounted() {\r\n  const _mounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    _mounted.current = true;\r\n    return () => {\r\n      _mounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  return _mounted;\r\n}\r\n","import { Map, Record } from \"immutable\";\nimport { NotePage, TeamNote, TeamPageInfo } from \"../note/note\";\nimport { DrawState } from \"./DrawState\";\nimport { SetOperation } from \"./StateSet\";\n\ninterface TeamStateRecordType {\n  pageStates: Map<string, Map<string, DrawState>>;\n  pageInfos: Map<string, TeamPageInfo>;\n}\n\nconst defaultRecord: Readonly<TeamStateRecordType> = {\n  pageStates: Map(),\n  pageInfos: Map(),\n};\n\ntype TeamStateRecord = Record<TeamStateRecordType>;\nconst defaultFactory = Record(defaultRecord);\n\nexport class TeamState {\n  constructor(private immutable: TeamStateRecord) {}\n\n  getImmutable() {\n    return this.immutable;\n  }\n\n  getPageStates() {\n    return this.getImmutable().get(\"pageStates\");\n  }\n\n  getPageInfos() {\n    return this.getImmutable().get(\"pageInfos\");\n  }\n\n  getOneState(pageID: string, userID: string) {\n    return this.getPageStates().get(pageID)?.get(userID);\n  }\n\n  getOnePageState(pageID: string) {\n    return this.getPageStates().get(pageID);\n  }\n\n  getPageRatio(pageID: string) {\n    return this.getPageInfos().get(pageID)?.ratio;\n  }\n\n  includesPage(pageID: string) {\n    return this.getPageStates().has(pageID);\n  }\n\n  setState(pageID: string, userID: string, drawState: DrawState) {\n    const pageMap = this.getPageStates().get(pageID);\n    if (!pageMap) return this;\n    return new TeamState(\n      this.getImmutable().update(\"pageStates\", (m) =>\n        m.set(pageID, pageMap.set(userID, drawState))\n      )\n    );\n  }\n\n  static createFromTeamPages(teamNote: TeamNote, width: number) {\n    const { pageRec } = teamNote;\n    let record = defaultFactory();\n    Object.entries(pageRec).forEach(([pageID, teamPage]) => {\n      const { states, ratio } = teamPage;\n      const pageMap = Map(\n        Object.entries(states).map(([userID, flatState]) => [\n          userID,\n          DrawState.loadFromFlat(flatState, width, width * ratio),\n        ])\n      );\n      record = record\n        .update(\"pageStates\", (m) => m.set(pageID, pageMap))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }));\n    });\n    return new TeamState(record);\n  }\n\n  addPage(pageID: string, notePage: NotePage) {\n    const { ratio } = notePage;\n    return new TeamState(\n      this.getImmutable()\n        .update(\"pageStates\", (m) => m.set(pageID, Map()))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }))\n    );\n  }\n\n  pushOperation(setOp: SetOperation, userID: string, width: number) {\n    const { pageID, ...op } = setOp;\n    const ratio = this.getPageRatio(pageID);\n    if (!this.includesPage(pageID) || !ratio) return this;\n    const prevDs =\n      this.getOneState(pageID, userID) ||\n      DrawState.createEmpty(width, width * ratio);\n\n    const ds = DrawState.pushOperation(prevDs, op);\n    return this.setState(pageID, userID, ds);\n  }\n\n  resetUser(userID: string, pageRec: globalThis.Record<string, NotePage>) {\n    let newTS: TeamState = this;\n    for (let [pageID, { state, ratio }] of Object.entries(pageRec)) {\n      const prevDS = newTS.getOneState(pageID, userID);\n      if (!prevDS) continue;\n      const { width } = prevDS;\n      newTS = newTS.setState(\n        pageID,\n        userID,\n        DrawState.loadFromFlat(state, width, width * ratio)\n      );\n    }\n    return newTS;\n  }\n}\n","import { message } from \"antd\";\r\nimport React, {\r\n  useState,\r\n  Dispatch,\r\n  useEffect,\r\n  createContext,\r\n  SetStateAction,\r\n} from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { SetOperation } from \"../../lib/draw/StateSet\";\r\nimport { getTeamNoteState, loadTeamNoteInfo } from \"../../lib/network/http\";\r\nimport { IoFactory } from \"../../lib/network/io\";\r\nimport Reader, { WIDTH } from \"./Reader\";\r\nimport { getUserID, UserInfo } from \"../../lib/user\";\r\nimport { LoginOutlined, LogoutOutlined } from \"@ant-design/icons\";\r\nimport { createTeamPage, NotePage } from \"../../lib/note/note\";\r\nimport { TeamState } from \"../../lib/draw/TeamState\";\r\nimport { Set } from \"immutable\";\r\n\r\nexport const TeamCtx = createContext({\r\n  code: -2,\r\n  userList: [] as UserInfo[],\r\n  ignores: Set<string>(),\r\n  setIgnores: (() => {}) as Dispatch<SetStateAction<Set<string>>>,\r\n  loadInfo: undefined as undefined | (() => Promise<boolean>),\r\n  teamState: undefined as TeamState | undefined,\r\n  pushOperation: undefined as undefined | ((op: SetOperation) => void),\r\n  teamUpdate: undefined as undefined | TeamUpdate,\r\n  updateReorder: (() => {}) as undefined | ((pageOrder: string[]) => void),\r\n  updateNewPage: (() => {}) as\r\n    | undefined\r\n    | ((pageOrder: string[], pageID: string, newPage: NotePage) => void),\r\n  connected: false,\r\n});\r\n\r\ntype TeamUpdate =\r\n  | {\r\n      type: \"reorder\";\r\n      pageOrder: string[];\r\n    }\r\n  | {\r\n      type: \"newPage\";\r\n      pageOrder: string[];\r\n      pageID: string;\r\n      newPage: NotePage;\r\n    };\r\n\r\nexport default function Team() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const [teamState, setTeamState] = useState<TeamState>();\r\n  const [code, setCode] = useState(-2);\r\n  const [userList, setUserList] = useState<UserInfo[]>([]);\r\n  const [ignores, setIgnores] = useState(Set<string>());\r\n  const [ws] = useState(IoFactory(noteID));\r\n  const [teamUpdate, setTeamUpdate] = useState<TeamUpdate>();\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [connected, setConnected] = useState(true);\r\n  const nav = useNavigate();\r\n\r\n  const loadState = async () => {\r\n    const teamNote = await getTeamNoteState(noteID);\r\n    if (!teamNote) {\r\n      message.error(\"Failed loading the team note state\");\r\n      return false;\r\n    }\r\n    setTeamState(TeamState.createFromTeamPages(teamNote, WIDTH));\r\n    return true;\r\n  };\r\n\r\n  const loadInfo = async () => {\r\n    const info = await loadTeamNoteInfo(noteID);\r\n    if (!info) {\r\n      message.error(\"Failed loading the team note info\");\r\n      return false;\r\n    }\r\n    setCode(info.code);\r\n    return true;\r\n  };\r\n\r\n  const roomInit = async () => {\r\n    const dismiss = message.loading(\"Loading team note...\", 0);\r\n    if (!((await loadInfo()) && (await loadState()))) {\r\n      dismiss();\r\n      return nav(\"/\");\r\n    }\r\n    dismiss();\r\n    setLoaded(true);\r\n    ws.on(\"push\", ({ operation, userID }) => {\r\n      setTeamState((prev) => prev?.pushOperation(operation, userID, WIDTH));\r\n    });\r\n\r\n    ws.on(\"joined\", ({ joined, members }) => {\r\n      const { userID, userName } = joined;\r\n      setUserList(members);\r\n      if (userID === getUserID()) return;\r\n      message.destroy(userID);\r\n      message.success({\r\n        icon: <LoginOutlined />,\r\n        content: `${userName} joined room`,\r\n        key: userID,\r\n      });\r\n    });\r\n\r\n    ws.on(\"leaved\", ({ leaved, members }) => {\r\n      const { userID, userName } = leaved;\r\n      setUserList(members);\r\n      if (userID === getUserID()) return;\r\n      message.destroy(userID);\r\n      message.warning({\r\n        icon: <LogoutOutlined />,\r\n        content: `${userName} leaved room`,\r\n        key: userID,\r\n      });\r\n    });\r\n\r\n    ws.on(\"reorder\", ({ pageOrder }: { pageOrder: string[] }) => {\r\n      setTeamUpdate({ type: \"reorder\", pageOrder });\r\n    });\r\n\r\n    ws.on(\r\n      \"newPage\",\r\n      ({\r\n        pageID,\r\n        newPage,\r\n        pageOrder,\r\n      }: {\r\n        userID: string;\r\n        pageOrder: string[];\r\n        pageID: string;\r\n        newPage: NotePage;\r\n      }) => {\r\n        setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n        newPage = createTeamPage(newPage);\r\n        setTeamUpdate({\r\n          type: \"newPage\",\r\n          pageOrder,\r\n          pageID,\r\n          newPage,\r\n        });\r\n      }\r\n    );\r\n\r\n    ws.on(\"reset\", ({ userID, pageRec }) => {\r\n      if (userID === getUserID()) return;\r\n      setTeamState((prev) => prev?.resetUser(userID, pageRec));\r\n    });\r\n\r\n    ws.on(\"connect\", () => setConnected(true));\r\n    ws.on(\"disconnect\", () => setConnected(false));\r\n\r\n    ws.connect();\r\n  };\r\n\r\n  const roomDestroy = () => {\r\n    ws.removeAllListeners();\r\n    ws.disconnect();\r\n  };\r\n\r\n  useEffect(() => {\r\n    roomInit();\r\n    return roomDestroy;\r\n  }, [noteID]);\r\n\r\n  const pushOperation = (op: SetOperation) => {\r\n    ws.emit(\"push\", { operation: op });\r\n  };\r\n\r\n  const updateReorder = (pageOrder: string[]) => {\r\n    ws.emit(\"reorder\", { pageOrder });\r\n  };\r\n\r\n  const updateNewPage = (\r\n    pageOrder: string[],\r\n    pageID: string,\r\n    newPage: NotePage\r\n  ) => {\r\n    setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n    const { image, marked, ...newTeamPage } = newPage;\r\n    ws.emit(\"newPage\", { pageOrder, pageID, newPage: newTeamPage });\r\n  };\r\n\r\n  if (!loaded) return null;\r\n  return (\r\n    <TeamCtx.Provider\r\n      value={{\r\n        code,\r\n        ignores,\r\n        userList,\r\n        loadInfo,\r\n        connected,\r\n        setIgnores,\r\n        teamUpdate,\r\n        teamState,\r\n        pushOperation,\r\n        updateReorder,\r\n        updateNewPage,\r\n      }}\r\n    >\r\n      <Reader teamOn />\r\n    </TeamCtx.Provider>\r\n  );\r\n}\r\n","import { io } from \"socket.io-client\";\r\nimport { getUserID, getUserName } from \"../user\";\r\nimport { BASE_URL } from \"./http\";\r\n\r\nexport const IoFactory = (noteID: string) => {\r\n  return () =>\r\n    io(BASE_URL, {\r\n      autoConnect: false,\r\n      query: {\r\n        userID: getUserID(),\r\n        userName: getUserName(),\r\n        noteID,\r\n      },\r\n    });\r\n};\r\n","export function createVirtualCanvas(width: number, height: number) {\r\n  const canvas = document.createElement(\"canvas\");\r\n  const context = canvas.getContext(\"2d\");\r\n  if (!context) {\r\n    throw new Error(\"can't get virtual canvas context\");\r\n  }\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n  return { canvas, context };\r\n}\r\n\r\nexport function releaseCanvas(canvas: HTMLCanvasElement) {\r\n  canvas.width = 1;\r\n  canvas.height = 1;\r\n  const ctx = canvas.getContext('2d');\r\n  ctx?.clearRect(0, 0, 1, 1);\r\n}\r\n"],"names":["defaultDrawCtrl","finger","lineWidth","eraserWidth","color","highlight","getDrawCtrl","localforage","drawCtrl","defaultRecord","states","Map","editStack","List","undoStack","defaultFactory","Record","StateSet","immutable","lastOp","this","getImmutable","get","pageID","getStates","drawState","prevDS","getOneState","currRecord","update","s","set","l","push","delete","notePage","width","state","ratio","newDS","DrawState","getEditStack","size","getUndoStack","isUndoable","lastUid","last","lastSetOp","pop","isRedoable","ds","undefined","list","pageRec","entries","Object","createFromList","map","key","insertAfter","prevItem","newItem","prevIndex","indexOf","curr","slice","splice","AddPageButton","addFinalPage","useContext","ReaderMethodCtx","pageOrder","ReaderStateCtx","empty","Boolean","length","className","classNames","type","icon","PlusOutlined","block","onClick","DigitDisplay","value","useState","randomNum","setRandomNum","digits","String","padStart","split","Number","resetRandom","Math","floor","random","useEffect","timer","setTimeout","clearTimeout","disabled","d","idx","Digit","digit","createFromIconfontCN","scriptUrl","PageNavContent","activeKey","setActiveKey","inviewPages","setPageOrder","scrollPage","updateReorder","TeamCtx","refRec","useRef","listEl","currpageID","useMemo","find","has","current","scrollIntoView","itemHeight","clientHeight","listHeight","scrollBy","PreviewTabs","onDragEnd","source","destination","fromIndex","index","toIndex","prev","newOrder","result","removed","exchange","requestAnimationFrame","droppableId","droppableProps","innerRef","placeholder","ref","e","uid","PagePreview","mode","pageIndex","stateSet","teamState","switchPageMarked","page","teamStateMap","getOnePageState","isEmpty","every","marked","switchMarked","stopPropagation","dragDisabled","draggableId","isDragDisabled","draggableProps","dragHandleProps","drag","isDragging","image","PageWrapper","thumbnail","preview","onClickCapture","PreviewOption","popShow","setPopShow","addPage","deletePage","teamOn","Item","Menu","menu","domEvent","CopyOutlined","danger","DeleteOutlined","content","trigger","placement","visible","onVisibleChange","destroyTooltipOnHide","MoreOutlined","TabPane","Tabs","onChange","tabBarGutter","centered","tab","PageNav","navOn","setNavOn","title","ALL","MARKED","WRITTEN","MenuFoldOutlined","onClose","closeIcon","MenuUnfoldOutlined","bodyStyle","padding","overflow","destroyOnClose","DrawTools","handleUndo","handleRedo","instantSave","saved","setDrawCtrl","setMode","nav","useNavigate","updateDrawCtrl","updated","message","DragOutlined","style","display","SelectMenu","duration","HomeFilled","opacity","SaveOutlined","shape","UndoOutlined","RedoOutlined","PenButton","EraserButton","includes","ExpandOutlined","ghost","RoomInfo","JoinRoom","PenPanel","getPopupContainer","HighlightOutlined","tempLineWidth","setTempLineWidth","min","max","onAfterChange","ColorSelect","colors","c","checked","name","tempEraserWidth","setTempEraserWidth","buttonProps","RotateLeftOutlined","RotateRightOutlined","UserCard","userInfo","userName","userID","ignores","setIgnores","getHashedColor","self","getUserID","ignored","backgroundColor","EyeInvisibleOutlined","EyeOutlined","add","code","userList","loadInfo","connected","link","window","location","href","DisconnectOutlined","showIcon","banner","Search","enterButton","onSearch","navigator","clipboard","writeText","u","ReloadOutlined","defaultVisible","status","count","TeamOutlined","createRoom","onConfirm","okText","cancelText","UsergroupAddOutlined","Draw","otherStates","readonly","imgSrc","height","canvasEl","scope","paper","group","path","rect","setRect","selectGroup","Set","erased","setErased","updateRatio","clientWidth","setNewRect","activate","point","multiply","rectangle","strokeColor","strokeWidth","dashOffset","dashArray","handleDown","draw","Path","alpha","blendMode","strokeJoin","strokeCap","erase","select","selected","isInside","strokeBounds","handleDrag","smooth","eraserPath","newErased","filter","p","checkErase","concat","delta","x","y","position","divide","sGroup","handleUp","remove","toArray","segments","simplify","pathData","exportJSON","bounds","forEach","intersects","addChild","setup","r","view","viewSize","scale","setupPaper","cvs","releaseCanvas","onMouseDown","onMouseDrag","onMouseUp","preventTouch","touch","touches","touchType","isStylus","isEventValid","raster","img","Image","src","onload","center","sendToBack","getValidStrokes","stroke","paintStroke","item","otherGroup","updateMutation","children","mutations","deleted","deleteSelected","id","moveDash","cancelAnimationFrame","onTouchStartCapture","onTouchMoveCapture","React","importJSON","console","error","getCheckPoints","cache","WeakMap","cached","times","checkPoints","i","subtract","checkedPath","curveBound","lastSegment","curve","some","cPoint","getNearestPoint","getDistance","WIDTH","createContext","noteID","noteInfo","setInviewPages","setPageState","Reader","useParams","setPageRec","setNoteInfo","setStateSet","setSaved","loaded","setLoaded","mounted","_mounted","useMounted","pushOperation","teamUpdate","updateNewPage","loadNotePages","loadNote","storedNote","pdf","createFromPages","updatePages","debouncedSave","useCallback","debounce","pr","editNoteData","canvas","document","querySelector","data","toDataURL","flush","putNote","team","noteDestroy","useLayoutEffect","useBeforeunload","saveDrawCtrl","handleReorder","teamOrder","JSON","stringify","newPage","addState","updatePageRec","setState","prevpageID","copy","prevPage","createPage","renderResult","newSS","undo","lastDS","getLastDS","redo","PageContainer","Provider","lastpageID","omit","deleteState","updateState","pdfIndex","fullImg","setFullImg","useInView","delay","visibleRef","handleRef","loadImage","called","getOnePageImage","Array","from","deleteAll","values","imageLoaded","drawShow","maskShow","paddingTop","DrawWrapper","displayName","handleChange","arg","pageStates","pageInfos","TeamState","getPageStates","getPageInfos","pageMap","m","setOp","op","getPageRatio","includesPage","prevDs","newTS","teamNote","record","teamPage","flatState","Team","setTeamState","setCode","setUserList","io","BASE_URL","autoConnect","query","getUserName","IoFactory","ws","setTeamUpdate","setConnected","loadState","getTeamNoteState","createFromTeamPages","loadTeamNoteInfo","info","roomInit","dismiss","on","operation","joined","members","LoginOutlined","leaved","LogoutOutlined","createTeamPage","resetUser","connect","roomDestroy","removeAllListeners","disconnect","emit","newTeamPage","createVirtualCanvas","createElement","context","getContext","Error","ctx","clearRect"],"sourceRoot":""}