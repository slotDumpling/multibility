{"version":3,"file":"static/js/274.2842df69.chunk.js","mappings":"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","sources":["lib/draw/drawCtrl.ts","lib/draw/StateSet.ts","component/reader/ReaderTools.tsx","lib/array.ts","component/ui/DigitDisplay.tsx","component/ui/IconFont.tsx","component/reader/PageNav.tsx","component/reader/DrawTools.tsx","component/draw/SelectTool.tsx","component/draw/Draw.tsx","lib/hooks.ts","lib/touch/touch.ts","component/reader/Reader.tsx","lib/network/io.ts","lib/draw/TeamState.ts","component/reader/Team.tsx","lib/draw/drawer.ts"],"sourcesContent":["import localforage from \"localforage\";\r\n\r\nexport interface DrawCtrl {\r\n  mode: \"draw\" | \"erase\" | \"select\"\r\n  finger: boolean;\r\n  lineWidth: number;\r\n  eraserWidth: number;\r\n  color: string;\r\n  highlight: boolean;\r\n}\r\n\r\nexport const defaultDrawCtrl: Readonly<DrawCtrl> = {\r\n  mode: 'draw',\r\n  finger: true,\r\n  lineWidth: 10,\r\n  eraserWidth: 10,\r\n  color: \"#000000\",\r\n  highlight: false,\r\n};\r\n\r\nexport async function getDrawCtrl() {\r\n  let drawCtrl = (await localforage.getItem(\"DRAW_CTRL\")) as DrawCtrl | null;\r\n  if (!drawCtrl) {\r\n    drawCtrl = defaultDrawCtrl;\r\n    await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n  }\r\n  return drawCtrl;\r\n}\r\n\r\nexport async function saveDrawCtrl(drawCtrl: DrawCtrl) {\r\n  await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n}\r\n","import { List, Map, Record } from \"immutable\";\r\nimport { DrawState, Operation, WIDTH } from \"./DrawState\";\r\nimport { NotePage } from \"../note/note\";\r\n\r\ninterface StateSetRecordType {\r\n  states: Map<string, DrawState>;\r\n  editStack: List<string>;\r\n  undoStack: List<string>;\r\n}\r\n\r\nconst defaultRecord: Readonly<StateSetRecordType> = {\r\n  states: Map(),\r\n  editStack: List(),\r\n  undoStack: List(),\r\n};\r\n\r\ntype StateSetRecord = Record<StateSetRecordType>;\r\nconst defaultFactory = Record(defaultRecord);\r\n\r\nexport type SetOperation = Operation & { pageID: string };\r\n\r\nexport class StateSet {\r\n  constructor(\r\n    private immutable: StateSetRecord,\r\n    public lastOp?: SetOperation\r\n  ) {}\r\n\r\n  static createFromList(list: [string, DrawState][]) {\r\n    return new StateSet(defaultFactory().set(\"states\", Map(list)));\r\n  }\r\n\r\n  static createFromPages(\r\n    pageRec: globalThis.Record<string, NotePage>,\r\n    width = WIDTH\r\n  ) {\r\n    const entries = Object.entries(pageRec);\r\n    return StateSet.createFromList(\r\n      entries.map(([key, { state, ratio }]) => [\r\n        key,\r\n        DrawState.loadFromFlat(state, width, width * ratio),\r\n      ])\r\n    );\r\n  }\r\n\r\n  getImmutable() {\r\n    return this.immutable;\r\n  }\r\n\r\n  getStates() {\r\n    return this.getImmutable().get(\"states\");\r\n  }\r\n\r\n  getOneState(pageID: string) {\r\n    return this.getStates().get(pageID);\r\n  }\r\n\r\n  getEditStack() {\r\n    return this.getImmutable().get(\"editStack\");\r\n  }\r\n\r\n  getUndoStack() {\r\n    return this.getImmutable().get(\"undoStack\");\r\n  }\r\n\r\n  setState(pageID: string, drawState: DrawState) {\r\n    const prevDS = this.getOneState(pageID);\r\n    if (!prevDS || prevDS === drawState) return this;\r\n    let currRecord = this.getImmutable()\r\n      .update(\"states\", (s) => s.set(pageID, drawState))\r\n      .update(\"editStack\", (l) => l.push(pageID))\r\n      .delete(\"undoStack\");\r\n\r\n    const { lastOp } = drawState;\r\n    const lastSetOp = lastOp && { ...lastOp, pageID };\r\n\r\n    return new StateSet(currRecord, lastSetOp);\r\n  }\r\n\r\n  updateState(pageID: string, cb: (prevDS: DrawState) => DrawState) {\r\n    const prevDS = this.getOneState(pageID);\r\n    if (!prevDS) return this;\r\n    const currDS = cb(prevDS);\r\n    return new StateSet(\r\n      this.getImmutable().update(\"states\", (s) => s.set(pageID, currDS))\r\n    );\r\n  }\r\n\r\n  addState(pageID: string, notePage: NotePage, width = WIDTH) {\r\n    const { state, ratio } = notePage;\r\n    const newDS = DrawState.loadFromFlat(state, width, width * ratio);\r\n    const currRecord = this.getImmutable().update(\"states\", (s) =>\r\n      s.set(pageID, newDS)\r\n    );\r\n    return new StateSet(currRecord);\r\n  }\r\n\r\n  deleteState(pageID: string) {\r\n    return new StateSet(\r\n      this.getImmutable().update(\"states\", (s) => s.delete(pageID))\r\n    );\r\n  }\r\n\r\n  isUndoable() {\r\n    return this.getEditStack().size > 0;\r\n  }\r\n\r\n  isRedoable() {\r\n    return this.getUndoStack().size > 0;\r\n  }\r\n\r\n  undo() {\r\n    if (!this.isUndoable()) return this;\r\n    const lastUid = this.getEditStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.undo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"editStack\", (s) => s.pop())\r\n        .update(\"undoStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  redo() {\r\n    if (!this.isRedoable()) return this;\r\n    const lastUid = this.getUndoStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.redo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"undoStack\", (s) => s.pop())\r\n        .update(\"editStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  getLastDS(): [string, DrawState] | undefined {\r\n    const pageID = this.lastOp?.pageID;\r\n    const ds = pageID && this.getOneState(pageID);\r\n    return ds ? [pageID, ds] : undefined;\r\n  }\r\n}\r\n","import { Button, Input, message } from \"antd\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nexport const AddPageButton = () => {\r\n  const { addFinalPage } = useContext(ReaderMethodCtx);\r\n  return (\r\n    <div className=\"add-btn-wrapper\">\r\n      <Button\r\n        type=\"dashed\"\r\n        icon={<PlusOutlined />}\r\n        block\r\n        onClick={addFinalPage}\r\n      >\r\n        New page\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const NoteHeader = () => {\r\n  const { noteInfo } = useContext(ReaderStateCtx);\r\n  const [noteName, setNoteName] = useState(\"\");\r\n  useEffect(() => {\r\n    if (!noteInfo) return;\r\n    setNoteName(noteInfo?.name);\r\n  }, [noteInfo]);\r\n\r\n  if (!noteInfo) return null;\r\n\r\n  return (\r\n    <div className=\"note-header\">\r\n      <Input value={noteName} bordered={false} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const showPageDelMsg = (onUndo: () => void) => {\r\n  message.warning({\r\n    content: (\r\n      <>\r\n        One page was deleted.\r\n        <Button\r\n          size=\"small\"\r\n          type=\"link\"\r\n          onClick={() => {\r\n            message.destroy(\"DELETE\");\r\n            onUndo();\r\n          }}\r\n        >\r\n          Undo\r\n        </Button>\r\n      </>\r\n    ),\r\n    key: \"DELETE\",\r\n    duration: 10,\r\n  });\r\n};\r\n","export function exchange<T>(list: T[], fromIndex: number, toIndex: number) {\r\n  const result = list.slice();\r\n  const [removed] = result.splice(fromIndex, 1);\r\n  result.splice(toIndex, 0, removed);\r\n  return result;\r\n}\r\n\r\nexport function insertAfter<T>(list: T[], prevItem: T, newItem: T) {\r\n  const prevIndex = list.indexOf(prevItem);\r\n  const curr = list.slice();\r\n  if (prevIndex === -1) return curr;\r\n  curr.splice(prevIndex + 1, 0, newItem);\r\n  return curr;\r\n}\r\n","import classNames from \"classnames\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./digitDisplay.sass\";\r\n\r\nfunction num2digits(num: number): number[] {\r\n  return String(num)\r\n    .padStart(4, \"0\")\r\n    .split(\"\")\r\n    .map((s) => Number(s));\r\n}\r\n\r\nexport default function DigitDisplay({ value }: { value: number }) {\r\n  const [randomNum, setRandomNum] = useState(9999);\r\n  const displayNum = value >= 0 ? value : randomNum;\r\n  const digits = num2digits(displayNum);\r\n\r\n  function resetRandom() {\r\n    setRandomNum(Math.floor(Math.random() * 10000));\r\n  }\r\n  useEffect(() => {\r\n    if (value !== -1) return setRandomNum(9999);\r\n    const timer = setTimeout(resetRandom, 100);\r\n    return () => clearTimeout(timer);\r\n  }, [value]);\r\n\r\n  return (\r\n    <div className={classNames(\"digit-display\", { disabled: value === -2 })}>\r\n      {digits.map((d, idx) => (\r\n        <Digit key={idx} digit={d} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Digit({ digit }: { digit: number }) {\r\n  if (!(digit <= 9 && digit >= 0)) {\r\n    return <div className=\"digit\">*</div>;\r\n  }\r\n  return <div className=\"digit\">{digit}</div>;\r\n}\r\n","import { createFromIconfontCN } from \"@ant-design/icons\";\r\n\r\nexport default createFromIconfontCN({\r\n  scriptUrl: \"//at.alicdn.com/t/font_3181679_eb02zt96p4p.js\",\r\n});\r\n","import { Avatar, Button, Drawer, Menu, Popover, Tabs } from \"antd\";\r\nimport React, {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  MouseEvent,\r\n} from \"react\";\r\nimport { PageWrapper, ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport {\r\n  MoreOutlined,\r\n  PlusOutlined,\r\n  CopyOutlined,\r\n  DeleteOutlined,\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  Draggable,\r\n  Droppable,\r\n  DropResult,\r\n  DragDropContext,\r\n} from \"react-beautiful-dnd\";\r\nimport { AddPageButton } from \"./ReaderTools\";\r\nimport { exchange } from \"../../lib/array\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { UserAvatar } from \"./DrawTools\";\r\nimport IconFont from \"../ui/IconFont\";\r\nimport classNames from \"classnames\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport \"./preview.sass\";\r\n\r\nconst PageNavContent = ({\r\n  activeKey,\r\n  setActiveKey,\r\n}: {\r\n  activeKey: string;\r\n  setActiveKey: Setter<string>;\r\n}) => {\r\n  const { pageOrder, inviewPages } = useContext(ReaderStateCtx);\r\n  const { scrollPage, saveReorder } = useContext(ReaderMethodCtx);\r\n  const refRec = useRef<Record<string, HTMLElement>>({});\r\n  const listEl = useRef<HTMLDivElement>();\r\n\r\n  const onDragEnd = ({ source, destination }: DropResult) => {\r\n    if (!destination || !pageOrder) return;\r\n    const { index: fromIndex } = source;\r\n    const { index: toIndex } = destination;\r\n    if (fromIndex === toIndex) return;\r\n    const pageID = pageOrder[fromIndex];\r\n    const newOrder = exchange(pageOrder, fromIndex, toIndex);\r\n    saveReorder(newOrder, true);\r\n    requestAnimationFrame(() => scrollPage(pageID));\r\n  };\r\n\r\n  const currpageID = useMemo(\r\n    () => pageOrder?.find((pageID) => inviewPages.has(pageID)) || \"\",\r\n    [pageOrder, inviewPages]\r\n  );\r\n\r\n  useEffect(() => {\r\n    refRec.current[currpageID]?.scrollIntoView();\r\n    const itemHeight = refRec.current[currpageID]?.clientHeight || 0;\r\n    const listHeight = listEl.current?.clientHeight || 0;\r\n    listEl.current?.scrollBy(0, -listHeight / 2 + itemHeight / 2);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"preview-container\">\r\n      <PreviewTabs activeKey={activeKey} setActiveKey={setActiveKey} />\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"droppable\">\r\n          {({ droppableProps, innerRef, placeholder }) => (\r\n            <div\r\n              className=\"page-list\"\r\n              ref={(e) => {\r\n                innerRef(e);\r\n                if (e) listEl.current = e;\r\n              }}\r\n              {...droppableProps}\r\n            >\r\n              {pageOrder?.map((uid, index) => (\r\n                <PagePreview\r\n                  key={uid}\r\n                  uid={uid}\r\n                  mode={activeKey}\r\n                  pageIndex={index}\r\n                  currpageID={currpageID}\r\n                  refRec={refRec.current}\r\n                />\r\n              ))}\r\n              {placeholder}\r\n              {activeKey === \"ALL\" && <AddPageButton />}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PagePreview: FC<{\r\n  uid: string;\r\n  mode: string;\r\n  pageIndex: number;\r\n  currpageID: string;\r\n  refRec: Record<string, HTMLElement>;\r\n}> = ({ uid, pageIndex, mode, currpageID, refRec }) => {\r\n  const { stateSet, teamState, pageRec } = useContext(ReaderStateCtx);\r\n  const { scrollPage, switchPageMarked } = useContext(ReaderMethodCtx);\r\n  const { ignores } = useContext(TeamCtx);\r\n  const [chosen, setChosen] = useState(\"\");\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n  const userIDs = useMemo(\r\n    () =>\r\n      teamState\r\n        ?.getPageValidUsers(uid)\r\n        .filter((userID) => !ignores.has(userID)),\r\n    [teamState, ignores, uid]\r\n  );\r\n  if (!page || !drawState) return null;\r\n\r\n  if (\r\n    mode === \"WRITTEN\" &&\r\n    drawState.isEmpty() &&\r\n    (!teamStateMap || teamStateMap.every((ds) => ds.isEmpty()))\r\n  ) {\r\n    return null;\r\n  } else if (mode === \"MARKED\" && !page.marked) {\r\n    return null;\r\n  }\r\n\r\n  const switchMarked = (e: MouseEvent<HTMLSpanElement>) => {\r\n    switchPageMarked(uid);\r\n    e.stopPropagation();\r\n  };\r\n  const curr = currpageID === uid;\r\n  const dragDisabled = mode !== \"ALL\";\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={uid}\r\n      index={pageIndex}\r\n      isDragDisabled={dragDisabled}\r\n    >\r\n      {(\r\n        { innerRef, draggableProps, dragHandleProps },\r\n        { isDragging: drag }\r\n      ) => {\r\n        const { image, marked } = page;\r\n        return (\r\n          <div\r\n            ref={(e) => {\r\n              innerRef(e);\r\n              if (e) refRec[uid] = e;\r\n            }}\r\n            className={classNames(\"page\", { curr, drag })}\r\n            onClick={() => scrollPage(uid)}\r\n            {...draggableProps}\r\n            {...dragHandleProps}\r\n          >\r\n            <PageWrapper\r\n              uid={uid}\r\n              drawState={teamStateMap?.get(chosen) || drawState}\r\n              teamStateMap={chosen ? undefined : teamStateMap}\r\n              thumbnail={image}\r\n              preview\r\n            />\r\n            <span\r\n              className={classNames(\"bookmark\", { marked })}\r\n              onClickCapture={switchMarked}\r\n            />\r\n            <span className=\"index\">{pageIndex + 1}</span>\r\n            <TeamAvatars\r\n              userIDs={userIDs}\r\n              chosen={chosen}\r\n              setChosen={setChosen}\r\n            />\r\n            <PreviewOption uid={uid} />\r\n          </div>\r\n        );\r\n      }}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst TeamAvatars: FC<{\r\n  userIDs?: string[];\r\n  chosen: string;\r\n  setChosen: Setter<string>;\r\n}> = ({ userIDs, chosen, setChosen }) => {\r\n  return (\r\n    <Avatar.Group\r\n      maxCount={2}\r\n      size=\"default\"\r\n      className={classNames(\"team-group\", { chosen })}\r\n    >\r\n      {userIDs?.map((userID) => (\r\n        <UserAvatar\r\n          key={userID}\r\n          size=\"default\"\r\n          userID={userID}\r\n          className=\"preview-avatar\"\r\n          chosen={chosen === userID}\r\n          onClick={() => setChosen((prev) => (prev === userID ? \"\" : userID))}\r\n        />\r\n      ))}\r\n    </Avatar.Group>\r\n  );\r\n};\r\n\r\nconst PreviewOption = ({ uid }: { uid: string }) => {\r\n  const [popShow, setPopShow] = useState(false);\r\n  const { addPage, deletePage } = useContext(ReaderMethodCtx);\r\n\r\n  const menu = (\r\n    <Menu\r\n      onClick={({ key, domEvent }) => {\r\n        if (key === \"ADD\") {\r\n          addPage(uid);\r\n        } else if (key === \"COPY\") {\r\n          addPage(uid, true);\r\n        } else if (key === \"DELETE\") {\r\n          deletePage(uid);\r\n        }\r\n        domEvent.stopPropagation();\r\n        setPopShow(false);\r\n      }}\r\n      items={[\r\n        { key: \"ADD\", icon: <PlusOutlined />, label: \"Add page\" },\r\n        { key: \"COPY\", icon: <CopyOutlined />, label: \"Duplicate\" },\r\n        {\r\n          key: \"DELETE\",\r\n          icon: <DeleteOutlined />,\r\n          label: \"Delete\",\r\n          danger: true,\r\n        },\r\n      ]}\r\n    ></Menu>\r\n  );\r\n  return (\r\n    <Popover\r\n      content={menu}\r\n      trigger=\"click\"\r\n      placement=\"left\"\r\n      visible={popShow}\r\n      onVisibleChange={setPopShow}\r\n      destroyTooltipOnHide\r\n    >\r\n      <span\r\n        className=\"option\"\r\n        onClickCapture={(e) => {\r\n          setPopShow((prev) => !prev);\r\n          e.stopPropagation();\r\n        }}\r\n      >\r\n        <MoreOutlined />\r\n      </span>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst PreviewTabs = ({\r\n  activeKey,\r\n  setActiveKey,\r\n}: {\r\n  activeKey: string;\r\n  setActiveKey: (key: string) => void;\r\n}) => {\r\n  const { TabPane } = Tabs;\r\n  return (\r\n    <Tabs\r\n      className=\"tabs\"\r\n      activeKey={activeKey}\r\n      onChange={setActiveKey}\r\n      tabBarGutter={10}\r\n      size=\"small\"\r\n      centered\r\n    >\r\n      <TabPane tab={<IconFont type=\"icon-uf_paper\" />} key=\"ALL\" />\r\n      <TabPane tab={<IconFont type=\"icon-bookmark2\" />} key=\"MARKED\" />\r\n      <TabPane tab={<IconFont type=\"icon-write\" />} key=\"WRITTEN\" />\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default function PageNav() {\r\n  const [navOn, setNavOn] = useState(false);\r\n  const [activeKey, setActiveKey] = useState<string>(\"ALL\");\r\n  const title = {\r\n    ALL: \"All Pages\",\r\n    MARKED: \"Bookmarks\",\r\n    WRITTEN: \"Notes\",\r\n  }[activeKey];\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        type=\"text\"\r\n        icon={navOn ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\r\n        onClick={() => setNavOn((prev) => !prev)}\r\n      />\r\n      <Drawer\r\n        visible={navOn}\r\n        onClose={() => setNavOn(false)}\r\n        width={200}\r\n        title={title}\r\n        closable={false}\r\n        className=\"preview-drawer\"\r\n        contentWrapperStyle={{ boxShadow: \"none\" }}\r\n        bodyStyle={{ padding: 0, overflow: \"hidden\" }}\r\n        headerStyle={{ textAlign: \"center\", borderTop: \"1px solid #eee\" }}\r\n        destroyOnClose\r\n      >\r\n        <PageNavContent activeKey={activeKey} setActiveKey={setActiveKey} />\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","import React, {\r\n  FC,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  CSSProperties,\r\n} from \"react\";\r\nimport {\r\n  Badge,\r\n  Alert,\r\n  Avatar,\r\n  Button,\r\n  Slider,\r\n  Divider,\r\n  message,\r\n  Popover,\r\n  Popconfirm,\r\n} from \"antd\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport DigitDisplay from \"../ui/DigitDisplay\";\r\nimport { colors, getHashedColor } from \"../../lib/color\";\r\nimport { getUserID, saveUserName } from \"../../lib/user\";\r\nimport { DrawCtrl, saveDrawCtrl } from \"../../lib/draw/drawCtrl\";\r\nimport PageNav from \"./PageNav\";\r\nimport {\r\n  HomeFilled,\r\n  EyeOutlined,\r\n  FormOutlined,\r\n  UndoOutlined,\r\n  RedoOutlined,\r\n  SaveOutlined,\r\n  TeamOutlined,\r\n  CopyOutlined,\r\n  CheckOutlined,\r\n  ExpandOutlined,\r\n  ReloadOutlined,\r\n  ShareAltOutlined,\r\n  HighlightOutlined,\r\n  DisconnectOutlined,\r\n  EyeInvisibleOutlined,\r\n  UsergroupAddOutlined,\r\n} from \"@ant-design/icons\";\r\nimport IconFont from \"../ui/IconFont\";\r\nimport \"./drawTools.sass\";\r\nimport { putNote } from \"../../lib/network/http\";\r\nimport { editNoteData } from \"../../lib/note/archive\";\r\nimport classNames from \"classnames\";\r\nimport { AvatarSize } from \"antd/lib/avatar/SizeContext\";\r\nimport copy from \"clipboard-copy\";\r\n\r\nexport default function DrawTools({\r\n  handleUndo,\r\n  handleRedo,\r\n  instantSave,\r\n}: {\r\n  handleUndo: () => void;\r\n  handleRedo: () => void;\r\n  instantSave: () => Promise<void> | undefined;\r\n}) {\r\n  const { saved, stateSet, teamOn, drawCtrl } = useContext(ReaderStateCtx);\r\n  const { mode } = drawCtrl;\r\n  const { setDrawCtrl } = useContext(ReaderMethodCtx);\r\n  const { finger } = drawCtrl;\r\n\r\n  const nav = useNavigate();\r\n\r\n  const updateDrawCtrl = (updated: Partial<DrawCtrl>) => {\r\n    setDrawCtrl((prev) => {\r\n      const newCtrl = { ...prev, ...updated };\r\n      saveDrawCtrl(newCtrl);\r\n      return newCtrl;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"left\">\r\n        <Button\r\n          type=\"text\"\r\n          onClick={async () => {\r\n            await instantSave();\r\n            nav(\"/\");\r\n          }}\r\n          icon={<HomeFilled style={{ opacity: 0.8 }} />}\r\n        />\r\n        <br />\r\n        <Button\r\n          type=\"text\"\r\n          className=\"save\"\r\n          onClick={instantSave}\r\n          disabled={saved}\r\n          icon={<SaveOutlined />}\r\n        />\r\n      </div>\r\n      <div className=\"middle\">\r\n        <Button\r\n          type=\"text\"\r\n          shape=\"circle\"\r\n          icon={<UndoOutlined />}\r\n          onClick={handleUndo}\r\n          disabled={!stateSet?.isUndoable()}\r\n        />\r\n        <Button\r\n          className=\"redo\"\r\n          type=\"text\"\r\n          shape=\"circle\"\r\n          icon={<RedoOutlined />}\r\n          onClick={handleRedo}\r\n          disabled={!stateSet?.isRedoable()}\r\n        />\r\n        <br />\r\n        <PenButton updateDrawCtrl={updateDrawCtrl} />\r\n        <EraserButton updateDrawCtrl={updateDrawCtrl} />\r\n        <Button\r\n          type={[\"select\", \"selected\"].includes(mode) ? \"default\" : \"text\"}\r\n          shape=\"circle\"\r\n          onClick={() => updateDrawCtrl({ mode: \"select\" })}\r\n          icon={<ExpandOutlined />}\r\n        />\r\n        <Button\r\n          className=\"finger\"\r\n          type={finger ? \"primary\" : \"text\"}\r\n          ghost={finger}\r\n          shape=\"circle\"\r\n          onClick={() => updateDrawCtrl({ finger: !finger })}\r\n          icon={<IconFont type=\"icon-finger\" />}\r\n        />\r\n      </div>\r\n      <div className=\"right\">\r\n        {teamOn && <RoomInfo />}\r\n        {teamOn || <JoinRoom instantSave={instantSave} />}\r\n        <br />\r\n        <PageNav />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nconst PenButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const { drawCtrl } = useContext(ReaderStateCtx);\r\n  const { mode } = drawCtrl;\r\n  return mode === \"draw\" ? (\r\n    <Popover\r\n      content={<PenPanel updateDrawCtrl={updateDrawCtrl} drawCtrl={drawCtrl} />}\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button type=\"default\" shape=\"circle\" icon={<HighlightOutlined />} />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      shape=\"circle\"\r\n      onClick={() => updateDrawCtrl({ mode: \"draw\" })}\r\n      icon={<HighlightOutlined />}\r\n    />\r\n  );\r\n};\r\n\r\nexport const PenPanel: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n  drawCtrl: DrawCtrl;\r\n}> = ({ updateDrawCtrl, drawCtrl }) => {\r\n  const { lineWidth, highlight, color } = drawCtrl;\r\n  const [tempLineWidth, setTempLineWidth] = useState(lineWidth);\r\n\r\n  return (\r\n    <div className=\"pen-panel\">\r\n      <div className=\"pen-status\">\r\n        <Slider\r\n          min={5}\r\n          max={100}\r\n          defaultValue={tempLineWidth}\r\n          onChange={setTempLineWidth}\r\n          onAfterChange={(lineWidth) => updateDrawCtrl({ lineWidth })}\r\n        />\r\n        <Button\r\n          type={highlight ? \"primary\" : \"text\"}\r\n          ghost={highlight}\r\n          shape=\"circle\"\r\n          icon={<IconFont type=\"icon-Highlight\" />}\r\n          onClick={() => updateDrawCtrl({ highlight: !highlight })}\r\n        />\r\n      </div>\r\n      <ColorSelect updateDrawCtrl={updateDrawCtrl} color={color} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ColorSelect: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n  color: string;\r\n}> = ({ updateDrawCtrl, color }) => {\r\n  return (\r\n    <div className=\"color-select\">\r\n      {colors.map((c) => (\r\n        <label key={c}>\r\n          <input\r\n            checked={color === c}\r\n            type=\"radio\"\r\n            name=\"color\"\r\n            onChange={() => updateDrawCtrl({ color: c })}\r\n          />\r\n          <div\r\n            className=\"circle\"\r\n            style={{ \"--circle-color\": c } as CSSProperties}\r\n          ></div>\r\n        </label>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EraserButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const {\r\n    drawCtrl: { eraserWidth, mode },\r\n  } = useContext(ReaderStateCtx);\r\n  const [tempEraserWidth, setTempEraserWidth] = useState(eraserWidth);\r\n\r\n  const content = (\r\n    <div className=\"pen-panel\">\r\n      <Slider\r\n        min={5}\r\n        max={100}\r\n        defaultValue={tempEraserWidth}\r\n        onChange={setTempEraserWidth}\r\n        onAfterChange={(eraserWidth) => updateDrawCtrl({ eraserWidth })}\r\n      />\r\n    </div>\r\n  );\r\n  return mode === \"erase\" ? (\r\n    <Popover\r\n      content={content}\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button\r\n        type=\"default\"\r\n        shape=\"circle\"\r\n        icon={<IconFont type=\"icon-eraser\" />}\r\n      />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      shape=\"circle\"\r\n      onClick={() => updateDrawCtrl({ mode: \"erase\" })}\r\n      icon={<IconFont type=\"icon-eraser\" />}\r\n    />\r\n  );\r\n};\r\n\r\nconst UserCard: FC<{ userID: string }> = ({ userID }) => {\r\n  const [renaming, setRenaming] = useState(false);\r\n  const { ignores, setIgnores, resetIO, userRec } = useContext(TeamCtx);\r\n  const userInfo = userRec[userID];\r\n  useEffect(() => setRenaming(false), [userInfo]);\r\n  if (!userInfo) return null;\r\n\r\n  const { userName, online } = userInfo;\r\n  const self = userID === getUserID();\r\n  const ignored = ignores.has(userID) && !self;\r\n\r\n  const switchIgnore = () => {\r\n    setIgnores((prev) => {\r\n      if (prev.has(userID)) return prev.delete(userID);\r\n      return prev.add(userID);\r\n    });\r\n  };\r\n\r\n  const submitRename = (value: string) => {\r\n    const name = value.trim();\r\n    if (!name || name === userName) return setRenaming(false);\r\n    saveUserName(name);\r\n    resetIO();\r\n  };\r\n\r\n  return (\r\n    <div className={classNames(\"user-item\", { online })}>\r\n      <UserAvatar userID={userID} size=\"small\" className=\"room-avatar\" />\r\n      {renaming || <span className=\"user-name\">{userName}</span>}\r\n      {renaming && (\r\n        <Search\r\n          autoFocus\r\n          className=\"rename-input\"\r\n          defaultValue={userName}\r\n          onSearch={submitRename}\r\n          enterButton={<Button icon={<CheckOutlined />} />}\r\n        />\r\n      )}\r\n      {self ? (\r\n        renaming || (\r\n          <Button\r\n            type=\"text\"\r\n            icon={<FormOutlined />}\r\n            onClick={() => setRenaming(true)}\r\n          />\r\n        )\r\n      ) : (\r\n        <Button\r\n          type=\"text\"\r\n          icon={ignored ? <EyeInvisibleOutlined /> : <EyeOutlined />}\r\n          onClick={switchIgnore}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const UserAvatar: FC<{\r\n  userID: string;\r\n  size?: AvatarSize;\r\n  onClick?: () => void;\r\n  chosen?: boolean;\r\n  className?: string;\r\n}> = ({\r\n  userID,\r\n  size = \"default\",\r\n  onClick = () => {},\r\n  chosen = false,\r\n  className,\r\n}) => {\r\n  const { userRec } = useContext(TeamCtx);\r\n  const color = useMemo(() => getHashedColor(userID), [userID]);\r\n  const userInfo = userRec[userID];\r\n  if (!userInfo) return null;\r\n  const { userName } = userInfo;\r\n\r\n  return (\r\n    <Avatar\r\n      className={classNames(className, { chosen })}\r\n      size={size}\r\n      style={{ backgroundColor: color }}\r\n    >\r\n      <div\r\n        className=\"avatar-wrapper\"\r\n        onClickCapture={(e) => {\r\n          e.stopPropagation();\r\n          onClick();\r\n        }}\r\n      >\r\n        {userName?.slice(0, 3)}\r\n      </div>\r\n    </Avatar>\r\n  );\r\n};\r\n\r\nconst RoomInfo: FC = () => {\r\n  const { code, userRec, connected, loadInfo, resetIO } = useContext(TeamCtx);\r\n  const link = window.location.href;\r\n  const share = async () => {\r\n    const selfName = userRec[getUserID()]?.userName;\r\n    try {\r\n      await copy(`${selfName} shared a note with you at 𝐌𝐮𝐥𝐭𝐢𝐛𝐢𝐥𝐢𝐭𝐲.\\n${link}`);\r\n      message.destroy(\"copy\");\r\n      message.success({\r\n        content: \"Share link copied!\",\r\n        icon: <CopyOutlined />,\r\n        key: \"copy\",\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const userList = useMemo(() => {\r\n    const values = Object.values(userRec);\r\n    const selfID = getUserID();\r\n    const selfInfo = userRec[selfID];\r\n    const list = selfInfo ? [selfInfo] : [];\r\n    list.push(\r\n      ...values.filter(({ online, userID }) => online && userID !== selfID),\r\n      ...values.filter(({ online, userID }) => !online && userID !== selfID)\r\n    );\r\n    return list;\r\n  }, [userRec]);\r\n  const onlineNum = userList.filter((u) => u.online).length;\r\n\r\n  const content = (\r\n    <div className=\"team-popover\">\r\n      {connected || (\r\n        <Alert\r\n          className=\"disconn-alert\"\r\n          message=\"Network failed.\"\r\n          icon={<DisconnectOutlined />}\r\n          type=\"error\"\r\n          showIcon\r\n          banner\r\n        />\r\n      )}\r\n      <DigitDisplay value={code} />\r\n      <Button\r\n        icon={<ShareAltOutlined />}\r\n        className=\"share-btn\"\r\n        onClick={share}\r\n        block\r\n      >\r\n        Share\r\n      </Button>\r\n      <Divider />\r\n      <div className=\"user-list\">\r\n        {userList.map((u) => (\r\n          <UserCard key={u.userID} userID={u.userID} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const title = (\r\n    <div className=\"team-title\">\r\n      <span>Team info</span>\r\n      <Button\r\n        shape=\"circle\"\r\n        type=\"text\"\r\n        size=\"small\"\r\n        icon={<ReloadOutlined />}\r\n        onClick={() => {\r\n          loadInfo();\r\n          resetIO();\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Popover\r\n      content={content}\r\n      trigger=\"click\"\r\n      placement=\"bottomRight\"\r\n      title={title}\r\n      defaultVisible\r\n      getPopupContainer={(e) => e}\r\n    >\r\n      <Button\r\n        type=\"text\"\r\n        icon={\r\n          <Badge\r\n            status={connected ? \"success\" : \"error\"}\r\n            count={connected ? onlineNum : \"!\"}\r\n            size=\"small\"\r\n          >\r\n            <TeamOutlined />\r\n          </Badge>\r\n        }\r\n      />\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst JoinRoom: FC<{ instantSave: () => Promise<void> | undefined }> = ({\r\n  instantSave,\r\n}) => {\r\n  const { noteID } = useContext(ReaderStateCtx);\r\n  const nav = useNavigate();\r\n  const createRoom = async () => {\r\n    await instantSave();\r\n    const resCode = await putNote(noteID);\r\n    if (!resCode) {\r\n      message.error(\"Can't create room.\");\r\n      return;\r\n    }\r\n    await editNoteData(noteID, { team: true });\r\n    nav(\"/team/\" + noteID);\r\n  };\r\n  return (\r\n    <Popconfirm\r\n      placement=\"bottomRight\"\r\n      title=\"Enable team editing?\"\r\n      onConfirm={createRoom}\r\n      okText=\"Yes\"\r\n      cancelText=\"No\"\r\n    >\r\n      <Button type=\"text\" icon={<UsergroupAddOutlined />} />\r\n    </Popconfirm>\r\n  );\r\n};\r\n","import React, { useRef, useState } from \"react\";\nimport {\n  CopyOutlined,\n  DeleteOutlined,\n  BgColorsOutlined,\n  RotateRightOutlined,\n} from \"@ant-design/icons\";\nimport { Button, ButtonProps, Popover } from \"antd\";\nimport { PenPanel } from \"../reader/DrawTools\";\nimport { useDrag } from \"@use-gesture/react\";\nimport { SelectToolType } from \"./Draw\";\nimport classNames from \"classnames\";\nimport \"./tools.sass\";\nimport \"animate.css\";\n\nconst SelectTool: SelectToolType = ({\n  onDelete,\n  onRotate,\n  onDuplicate,\n  mutateStyle,\n  currDrawCtrl,\n}) => {\n  const btnProps: ButtonProps = {\n    type: \"text\",\n    shape: \"round\",\n    size: \"small\",\n  };\n\n  const rotateEl = useRef<HTMLDivElement>(null);\n  const [dragged, setDragged] = useState(false);\n  const [transX, setTransX] = useState(0);\n  const gearStyle = { transform: `translateX(${transX}px)` }\n\n  const [rotateCount, setRotateCount] = useState(0);\n  const shakeShow = rotateCount % 4 === 1;\n  const btnClass = shakeShow\n    ? \"animate__animated animate__headShake\"\n    : undefined;\n\n  useDrag(\n    ({ first, last, offset, delta }) => {\n      setTransX(offset[0]);\n      onRotate(delta[0] / 2, last);\n      first && setDragged(true);\n      last && setDragged(false);\n    },\n    {\n      target: rotateEl,\n      filterTaps: true,\n      rubberband: 0.05,\n      bounds: { left: -90, right: 90 },\n    }\n  );\n\n  return (\n    <div className=\"select-tool\">\n      <Popover\n        trigger=\"click\"\n        placement=\"bottom\"\n        getPopupContainer={(e) => e}\n        destroyTooltipOnHide\n        content={\n          <PenPanel updateDrawCtrl={mutateStyle} drawCtrl={currDrawCtrl} />\n        }\n      >\n        <Button icon={<BgColorsOutlined />} {...btnProps} />\n      </Popover>\n      <div className={classNames(\"rotate-wrapper\", { dragged })} ref={rotateEl}>\n        <Button\n          className={btnClass}\n          icon={<RotateRightOutlined />}\n          onClick={() => {\n            setRotateCount((prev) => prev + 1);\n            onRotate(90, true);\n          }}\n          {...btnProps}\n        />\n        <div className=\"gear\" style={gearStyle} />\n      </div>\n      <Button icon={<CopyOutlined />} onClick={onDuplicate} {...btnProps} />\n      <Button\n        danger\n        icon={<DeleteOutlined />}\n        onClick={onDelete}\n        {...btnProps}\n      />\n    </div>\n  );\n};\n\nexport default SelectTool;\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  TouchEvent,\r\n} from \"react\";\r\nimport { DrawState, Mutation, Stroke } from \"../../lib/draw/DrawState\";\r\nimport { defaultDrawCtrl, DrawCtrl } from \"../../lib/draw/drawCtrl\";\r\nimport { Setter, usePreventGesture } from \"../../lib/hooks\";\r\nimport { releaseCanvas } from \"../../lib/draw/drawer\";\r\nimport { isStylus } from \"../../lib/touch/touch\";\r\nimport { usePinch } from \"@use-gesture/react\";\r\nimport { v4 as getUid } from \"uuid\";\r\nimport { Set } from \"immutable\";\r\nimport paper from \"paper\";\r\nimport \"./draw.sass\";\r\n\r\nexport type SelectToolType = FC<{\r\n  onDelete: () => void;\r\n  onRotate: (angle: number, smooth?: boolean) => void;\r\n  onDuplicate: () => void;\r\n  mutateStyle: (updated: Partial<DrawCtrl>) => void;\r\n  currDrawCtrl: DrawCtrl;\r\n}>;\r\n\r\nconst PREVIEW_WIDTH = 200;\r\nconst {\r\n  Point,\r\n  Path,\r\n  Group,\r\n  Shape: { Rectangle },\r\n  Color,\r\n  Size,\r\n  Raster,\r\n} = paper;\r\n\r\nconst Draw: FC<{\r\n  drawState: DrawState;\r\n  otherStates?: DrawState[];\r\n  onChange?: Setter<DrawState>;\r\n  drawCtrl?: DrawCtrl;\r\n  readonly?: boolean;\r\n  preview?: boolean;\r\n  imgSrc?: string;\r\n  SelectTool?: SelectToolType;\r\n}> = ({\r\n  drawState,\r\n  onChange = () => {},\r\n  otherStates,\r\n  drawCtrl = defaultDrawCtrl,\r\n  preview = false,\r\n  readonly = preview,\r\n  imgSrc,\r\n  SelectTool,\r\n}) => {\r\n  const { width, height } = drawState;\r\n  let { mode, color, finger, lineWidth, highlight, eraserWidth } = drawCtrl;\r\n\r\n  const canvasEl = useRef<HTMLCanvasElement>(null);\r\n  const scope = useRef(new paper.PaperScope());\r\n  const group = useRef<paper.Path[]>([]);\r\n  const path = useRef<paper.Path>();\r\n  const [erased, setErased] = useState(Set<string>());\r\n  const [currDrawCtrl, setCurrDrawCtrl] = useState(defaultDrawCtrl);\r\n\r\n  const [rect, setRect] = useState<paper.Shape.Rectangle>();\r\n  useEffect(() => {\r\n    if (!rect) return;\r\n    rect.onFrame = () => (rect.dashOffset += 3);\r\n    return () => void rect.remove();\r\n  }, [rect]);\r\n\r\n  const [selectedGroup, setSelectedGroup] = useState<paper.Group>();\r\n  useEffect(() => () => void selectedGroup?.remove(), [selectedGroup]);\r\n\r\n  const [selected, setSelected] = useState(false);\r\n  const paperMode = mode === \"select\" && selected ? \"selected\" : mode;\r\n  useEffect(() => {\r\n    if (mode !== \"select\") {\r\n      setSelected(false);\r\n      setRect(undefined);\r\n    }\r\n  }, [mode]);\r\n  useEffect(() => {\r\n    if (selected) {\r\n      if (!rect?.strokeColor) return;\r\n      rect.strokeColor.alpha /= 2;\r\n    } else {\r\n      updateMutation();\r\n      setSelectedGroup(undefined);\r\n      setCurrDrawCtrl(defaultDrawCtrl);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selected]);\r\n\r\n  const ratio = useRef(1);\r\n  const updateRatio = () => {\r\n    const clientWidth = canvasEl.current?.clientWidth;\r\n    if (clientWidth) ratio.current = width / clientWidth;\r\n  };\r\n\r\n  const transformPoint = (projP: paper.Point) => {\r\n    scope.current.activate();\r\n    const { center, zoom } = scope.current.view;\r\n    const viewP = scope.current.view.projectToView(projP);\r\n    const absoluteP = viewP.multiply(ratio.current);\r\n    const offsetP = new Point(width, height)\r\n      .divide(2)\r\n      .subtract(center.multiply(zoom));\r\n    return absoluteP.subtract(offsetP).divide(zoom);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const setupPaper = () => {\r\n      if (!canvasEl.current) return;\r\n      scope.current.setup(canvasEl.current);\r\n\r\n      const r = preview ? PREVIEW_WIDTH / width : 1;\r\n      scope.current.view.viewSize = new Size(width, height).multiply(r);\r\n      scope.current.view.scale(r, new Point(0, 0));\r\n      paintBackground(width, height);\r\n    };\r\n\r\n    setupPaper();\r\n    scope.current.activate();\r\n    const cvs = canvasEl.current;\r\n    return () => void (cvs && releaseCanvas(cvs));\r\n  }, [height, width, preview]);\r\n\r\n  const setNewRect = (e: paper.MouseEvent) => {\r\n    updateRatio();\r\n    scope.current.activate();\r\n    const point = transformPoint(e.point);\r\n    const rectangle = startSelectRect(point);\r\n    setRect(rectangle);\r\n  };\r\n\r\n  const handleDown = {\r\n    draw() {\r\n      updateRatio();\r\n      scope.current.activate();\r\n      path.current = startStroke(color, lineWidth, highlight);\r\n    },\r\n    erase() {\r\n      updateRatio();\r\n      scope.current.activate();\r\n      path.current = startStroke(\"#0003\", eraserWidth);\r\n    },\r\n    select(e: paper.MouseEvent) {\r\n      setNewRect(e);\r\n    },\r\n    selected(e: paper.MouseEvent) {\r\n      const point = transformPoint(e.point);\r\n      if (rect && point.isInside(rect.strokeBounds)) return;\r\n      setNewRect(e);\r\n      setSelected(false);\r\n    },\r\n  }[paperMode];\r\n\r\n  const handleDrag = {\r\n    draw(e: paper.MouseEvent) {\r\n      if (!path.current) return;\r\n      scope.current.activate();\r\n      const point = transformPoint(e.point);\r\n      path.current.add(point);\r\n      path.current.smooth();\r\n    },\r\n    erase(e: paper.MouseEvent) {\r\n      const eraserPath = path.current;\r\n      if (!eraserPath) return;\r\n      scope.current.activate();\r\n      const point = transformPoint(e.point);\r\n      eraserPath.add(point);\r\n      eraserPath.smooth();\r\n\r\n      const newErased = group.current\r\n        .filter((p) => !erased.has(p.name))\r\n        .filter((p) => checkErase(p, eraserPath))\r\n        .map((p) => p.name);\r\n      setErased((prev) => prev.concat(newErased));\r\n    },\r\n    select(e: paper.MouseEvent) {\r\n      if (!rect) return;\r\n      scope.current.activate();\r\n      const delta = e.delta.multiply(ratio.current);\r\n      rect.size = rect.size.add(new Size(delta.x, delta.y));\r\n      rect.translate(delta.divide(2));\r\n    },\r\n    selected(e: paper.MouseEvent) {\r\n      if (!rect || !selectedGroup) return;\r\n      scope.current.activate();\r\n      const delta = e.delta.multiply(ratio.current);\r\n      rect.translate(delta);\r\n      selectedGroup.translate(delta);\r\n    },\r\n  }[paperMode];\r\n\r\n  const handleUp = {\r\n    draw() {\r\n      if (!path.current || path.current.segments.length === 0) return;\r\n      scope.current.activate();\r\n      path.current.simplify();\r\n      const pathData = path.current.exportJSON();\r\n      path.current.remove();\r\n      onChange((prev) => DrawState.addStroke(prev, pathData));\r\n    },\r\n    erase() {\r\n      if (!path.current) return;\r\n      scope.current.activate();\r\n      path.current.remove();\r\n      onChange((prev) => DrawState.eraseStrokes(prev, erased.toArray()));\r\n      setErased(Set());\r\n    },\r\n    select() {\r\n      if (!rect) return;\r\n      const { width, height } = rect.size.abs();\r\n      if (width < 10 || height < 10) return setRect(undefined);\r\n\r\n      scope.current.activate();\r\n      const paths = group.current;\r\n      const newSG = new Group(checkSelection(rect, paths));\r\n      setSelectedGroup(newSG);\r\n      const tempStyle = parseGroupStyle(newSG);\r\n      setCurrDrawCtrl((prev) => ({ ...prev, ...tempStyle }));\r\n      setSelected(true);\r\n    },\r\n    selected() {},\r\n  }[paperMode];\r\n\r\n  const handlePaper = () => {\r\n    if (readonly) return;\r\n    scope.current.view.onMouseDown = handleDown;\r\n    scope.current.view.onMouseDrag = handleDrag;\r\n    scope.current.view.onMouseUp = handleUp;\r\n  };\r\n  useEffect(handlePaper);\r\n\r\n  useEffect(() => {\r\n    if (!imgSrc) return;\r\n    const img = new Image();\r\n    img.src = imgSrc;\r\n    let raster: paper.Raster;\r\n\r\n    img.onload = () => {\r\n      scope.current.activate();\r\n      raster = new Raster(img);\r\n      raster.position = scope.current.view.center;\r\n      let r = width / img.width;\r\n      raster.scale(r);\r\n      raster.sendToBack();\r\n      raster.parent.getItem({ name: \"BGRECT\" })?.sendToBack();\r\n    };\r\n\r\n    return () => void raster?.remove();\r\n  }, [imgSrc, width]);\r\n\r\n  const mergedStrokes = useMemo(\r\n    () =>\r\n      otherStates\r\n        ? DrawState.mergeStates([drawState, ...otherStates])\r\n        : drawState.getStrokeList(),\r\n    [drawState, otherStates]\r\n  );\r\n\r\n  useEffect(() => {\r\n    scope.current.activate();\r\n    group.current = [];\r\n    const otherGroup: paper.Path[] = [];\r\n\r\n    mergedStrokes.forEach((stroke) =>\r\n      paintStroke(\r\n        stroke,\r\n        drawState.hasStroke(stroke.uid) ? group.current : otherGroup,\r\n        erased.has(stroke.uid)\r\n      )\r\n    );\r\n\r\n    return () => {\r\n      group.current.forEach((item) => item.remove());\r\n      otherGroup.forEach((item) => item.remove());\r\n    };\r\n  }, [mergedStrokes, erased, drawState]);\r\n\r\n  const updateMutation = () => {\r\n    const list = selectedGroup?.children;\r\n    if (!list?.length) return;\r\n    const mutations: Mutation[] = list.map((p) => [p.name, p.exportJSON()]);\r\n    onChange((prev) => DrawState.mutateStrokes(prev, mutations));\r\n  };\r\n\r\n  const deleteSelected = () => {\r\n    const list = selectedGroup?.children;\r\n    if (!list?.length) return;\r\n\r\n    const deleted = list.map((item) => item.name);\r\n    onChange((prev) => DrawState.eraseStrokes(prev, deleted));\r\n    setRect(undefined);\r\n    setSelectedGroup(undefined);\r\n    setSelected(false);\r\n  };\r\n\r\n  const rotateSelected = (angle: number, smooth = false) => {\r\n    if (!selectedGroup) return;\r\n    let count = smooth ? 10 : 1;\r\n    const dAngle = angle / count;\r\n    const rotate = () => {\r\n      selectedGroup.rotate(dAngle, rect?.position);\r\n      rect?.rotate(dAngle, rect.position);\r\n      if (--count > 0) requestAnimationFrame(rotate);\r\n    };\r\n    rotate();\r\n  };\r\n\r\n  const mutateStyle = (updated: Partial<DrawCtrl>) => {\r\n    if (!selectedGroup) return;\r\n    scope.current.activate();\r\n    updateGroupStyle(selectedGroup, updated, currDrawCtrl.highlight);\r\n    setCurrDrawCtrl((prev) => ({ ...prev, ...updated }));\r\n  };\r\n\r\n  const duplicateSelected = () => {\r\n    scope.current.activate();\r\n    if (!rect || !selectedGroup) return;\r\n    const newSG = selectedGroup.clone();\r\n    updateMutation();\r\n    setSelectedGroup(newSG);\r\n\r\n    const { width, height } = rect.size;\r\n    const transP = new Point(width, height).divide(10);\r\n    newSG.translate(transP);\r\n    rect.translate(transP);\r\n    newSG?.children.forEach((p) => (p.name = getUid()));\r\n  };\r\n\r\n  usePreventGesture();\r\n  usePinch(\r\n    ({ memo, offset, last, first, origin }) => {\r\n      if (!canvasEl.current) return;\r\n\r\n      let lastScale, lastOX, lastOY, osX, osY: number;\r\n      if (first || !memo) {\r\n        updateRatio();\r\n        scope.current.activate();\r\n        const { x, y } = canvasEl.current.getBoundingClientRect();\r\n        [lastScale, [lastOX, lastOY], [osX, osY]] = [\r\n          1,\r\n          [origin[0] - x, origin[1] - y],\r\n          [x, y],\r\n        ];\r\n      } else [lastScale, [lastOX, lastOY], [osX, osY]] = memo;\r\n\r\n      const { view } = scope.current;\r\n      if (Math.abs(1 - offset[0]) < 0.05) offset[0] = 1;\r\n\r\n      let scale = first ? 1 : offset[0] / lastScale;\r\n      const r = ratio.current;\r\n      const [oX, oY] = [origin[0] - osX, origin[1] - osY];\r\n      const originViewP = new Point(oX, oY).multiply(r);\r\n      const originProjP = view.viewToProject(originViewP);\r\n\r\n      let aniCount = last ? 10 : 1;\r\n      scale = Math.pow(scale, 1 / aniCount);\r\n      const scaleView = () => {\r\n        view.scale(scale, originProjP);\r\n        if (--aniCount > 0) requestAnimationFrame(scaleView);\r\n      };\r\n      scaleView();\r\n\r\n      const [dX, dY] = [oX - lastOX, oY - lastOY];\r\n      const transP = new Point(dX, dY).multiply(r / offset[0]);\r\n      view.translate(transP);\r\n\r\n      if (!last) return [offset[0], [oX, oY], [osX, osY]];\r\n      putCenterBack(view);\r\n    },\r\n    {\r\n      scaleBounds: { max: 5, min: 0.3 },\r\n      rubberband: 0.5,\r\n      target: canvasEl,\r\n    }\r\n  );\r\n\r\n  const isEventValid = (e: TouchEvent) =>\r\n    isStylus(e) || (finger && e.touches.length === 1);\r\n  const preventTouch = (e: TouchEvent) =>\r\n    isEventValid(e) || e.stopPropagation();\r\n\r\n  return (\r\n    <div className=\"draw-wrapper\">\r\n      <canvas\r\n        ref={canvasEl}\r\n        className=\"draw-canvas\"\r\n        data-paper-hidpi={false}\r\n        onTouchStartCapture={preventTouch}\r\n        onTouchMoveCapture={preventTouch}\r\n      />\r\n      {SelectTool && paperMode === \"selected\" && (\r\n        <SelectTool\r\n          onDelete={deleteSelected}\r\n          onRotate={rotateSelected}\r\n          onDuplicate={duplicateSelected}\r\n          mutateStyle={mutateStyle}\r\n          currDrawCtrl={currDrawCtrl}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Draw);\r\n\r\nconst paintStroke = (stroke: Stroke, group?: paper.Path[], erased = false) => {\r\n  let { pathData, uid } = stroke;\r\n  try {\r\n    const path = new Path();\r\n    path.importJSON(pathData);\r\n    path.name = uid;\r\n    if (erased) path.opacity /= 2;\r\n    group?.push(path);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getCheckPoints = (() => {\r\n  const cache = new WeakMap<paper.Segment, paper.Point[]>();\r\n  return (segment: paper.Segment, width: number) => {\r\n    const cached = cache.get(segment);\r\n    if (cached) return cached;\r\n\r\n    const { point } = segment;\r\n    const prevPoint = segment.previous?.point;\r\n    if (!prevPoint) return [];\r\n    const delta = point.subtract(prevPoint);\r\n    const times = (delta.length / width) * 2;\r\n    const checkPoints: paper.Point[] = [];\r\n    for (let i = 0; i < times; i += 1) {\r\n      checkPoints.push(point.subtract(delta.multiply(i / times)));\r\n    }\r\n    cache.set(segment, checkPoints);\r\n    return checkPoints;\r\n  };\r\n})();\r\n\r\nconst checkErase = (checkedPath: paper.Path, eraserPath: paper.Path) => {\r\n  const curveBound = eraserPath.lastSegment.curve?.strokeBounds;\r\n  if (\r\n    !(checkedPath instanceof paper.Path) ||\r\n    !curveBound?.intersects(checkedPath.strokeBounds)\r\n  ) {\r\n    return false;\r\n  }\r\n\r\n  if (eraserPath.intersects(checkedPath)) return true;\r\n\r\n  const { strokeWidth, lastSegment } = eraserPath;\r\n  const checkPoints = getCheckPoints(lastSegment, strokeWidth);\r\n  return checkPoints.some((cPoint) => {\r\n    const d = checkedPath.getNearestPoint(cPoint)?.getDistance(cPoint);\r\n    return d && d < (checkedPath.strokeWidth + strokeWidth) / 2;\r\n  });\r\n};\r\n\r\nconst paintBackground = (width: number, height: number) => {\r\n  const bgRect = new Rectangle(new Point(0, 0), new Point(width, height));\r\n  bgRect.fillColor = new Color(\"#fff\");\r\n  bgRect.name = \"BGRECT\";\r\n  bgRect.sendToBack();\r\n  return bgRect;\r\n};\r\n\r\nconst startSelectRect = (point: paper.Point) => {\r\n  const rect = new Rectangle(point, new Size(0, 0));\r\n  rect.strokeColor = new Color(\"#1890ff\");\r\n  rect.strokeWidth = 3;\r\n  rect.dashOffset = 0;\r\n  rect.dashArray = [30, 20];\r\n  return rect;\r\n};\r\n\r\nconst startStroke = (color: string, lineWidth: number, highlight = false) => {\r\n  const path = new Path();\r\n  const strokeColor = new Color(color);\r\n  if (highlight) {\r\n    strokeColor.alpha /= 2;\r\n    path.blendMode = \"multiply\";\r\n  }\r\n  path.strokeColor = strokeColor;\r\n  path.strokeWidth = lineWidth;\r\n  path.strokeJoin = \"round\";\r\n  path.strokeCap = \"round\";\r\n  return path;\r\n};\r\n\r\nconst getCenterTranslate = (view: paper.View) => {\r\n  const { center, zoom } = view;\r\n  const { height, width } = view.viewSize;\r\n  const { x, y } = center;\r\n  if (zoom <= 1) return [width / 2 - x, height / 2 - y];\r\n\r\n  const dX = (width * (zoom - 1)) / zoom / 2;\r\n  const dY = (height * (zoom - 1)) / zoom / 2;\r\n  const [minX, maxX, minY, maxY] = [\r\n    width / 2 - dX,\r\n    width / 2 + dX,\r\n    height / 2 - dY,\r\n    height / 2 + dY,\r\n  ];\r\n\r\n  const deltaX = x < minX ? minX - x : x > maxX ? maxX - x : 0;\r\n  const deltaY = y < minY ? minY - y : y > maxY ? maxY - y : 0;\r\n  return [deltaX, deltaY];\r\n};\r\n\r\nconst putCenterBack = (view: paper.View) => {\r\n  const [deltaX, deltaY] = getCenterTranslate(view);\r\n  let count = 10;\r\n  const dP = new Point(deltaX, deltaY).divide(-count);\r\n  const move = () => {\r\n    view.translate(dP);\r\n    if (--count > 0) requestAnimationFrame(move);\r\n  };\r\n  move();\r\n};\r\n\r\nconst parseGroupStyle = (group: paper.Group) => {\r\n  const tempStyle: Partial<DrawCtrl> = {};\r\n  if (group.strokeColor) tempStyle.color = group.strokeColor.toCSS(true);\r\n  if (group.strokeWidth) tempStyle.lineWidth = group.strokeWidth;\r\n  if (group.children.every((p) => p.strokeColor?.alpha === 0.5))\r\n    tempStyle.highlight = true;\r\n  return tempStyle;\r\n};\r\n\r\nconst checkSelection = (rect: paper.Shape.Rectangle, paths: paper.Path[]) => {\r\n  const bounds = rect.strokeBounds;\r\n  return paths.filter((p) => p.isInside(bounds) || p.intersects(rect));\r\n};\r\n\r\nconst updateGroupStyle = (\r\n  group: paper.Group,\r\n  updated: Partial<DrawCtrl>,\r\n  prevHighLighted: boolean\r\n) => {\r\n  const { lineWidth, color, highlight } = updated;\r\n  if (color) group.strokeColor = new Color(color);\r\n  if (lineWidth) group.strokeWidth = lineWidth;\r\n  if (highlight === true || prevHighLighted === true) {\r\n    group.children.forEach((p) => {\r\n      const { strokeColor } = p;\r\n      if (!strokeColor) return;\r\n      if (strokeColor.alpha === 1) strokeColor.alpha /= 2;\r\n      p.blendMode = \"multiply\";\r\n    });\r\n  }\r\n  if (highlight === false) {\r\n    group.children.forEach((p) => {\r\n      const { strokeColor } = p;\r\n      if (!strokeColor) return;\r\n      strokeColor.alpha = 1;\r\n      p.blendMode = \"normal\";\r\n    });\r\n  }\r\n};\r\n","import { Dispatch, SetStateAction, useEffect, useMemo, useRef } from \"react\";\r\n\r\nexport function useObjectUrl(obj: Blob | MediaSource | undefined) {\r\n  const url = useMemo(\r\n    () => (obj ? URL.createObjectURL(obj) : undefined),\r\n    [obj]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const prevUrl = url || \"\";\r\n    return () => URL.revokeObjectURL(prevUrl);\r\n  }, [url]);\r\n\r\n  return url;\r\n}\r\n\r\nexport function useMounted() {\r\n  const _mounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    _mounted.current = true;\r\n    return () => {\r\n      _mounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  return _mounted;\r\n}\r\n\r\nexport function usePreventGesture() {\r\n  useEffect(() => {\r\n    const handler = (e: Event) => e.preventDefault();\r\n    document.addEventListener(\"gesturestart\", handler);\r\n    document.addEventListener(\"gesturechange\", handler);\r\n    document.addEventListener(\"gestureend\", handler);\r\n    return () => {\r\n      document.removeEventListener(\"gesturestart\", handler);\r\n      document.removeEventListener(\"gesturechange\", handler);\r\n      document.removeEventListener(\"gestureend\", handler);\r\n    };\r\n  }, []);\r\n}\r\n\r\nexport type Setter<T> = Dispatch<SetStateAction<T>>;\r\n","import { TouchEvent } from \"react\";\r\n\r\nexport type iOSTouch = Touch & {\r\n  force?: number;\r\n  touchType?: \"stylus\" | \"direct\";\r\n};\r\n\r\nexport function isStylus(e: TouchEvent) {\r\n  const touch = e.touches[0] as iOSTouch;\r\n  return touch?.touchType === \"stylus\";\r\n}\r\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useCallback,\r\n  createContext,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport {\r\n  DrawCtrl,\r\n  getDrawCtrl,\r\n  defaultDrawCtrl,\r\n} from \"../../lib/draw/drawCtrl\";\r\nimport {\r\n  createPage,\r\n  defaultNotePage,\r\n  NoteInfo,\r\n  NotePage,\r\n} from \"../../lib/note/note\";\r\nimport { SetOperation, StateSet } from \"../../lib/draw/StateSet\";\r\nimport { loadNote, editNoteData } from \"../../lib/note/archive\";\r\nimport { NewPageInfo, ReorderInfo, SyncInfo } from \"../../lib/network/io\";\r\nimport { AddPageButton, showPageDelMsg } from \"./ReaderTools\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { DrawState } from \"../../lib/draw/DrawState\";\r\nimport { updatePages } from \"../../lib/network/http\";\r\nimport { useBeforeunload } from \"react-beforeunload\";\r\nimport { TeamState } from \"../../lib/draw/TeamState\";\r\nimport { Setter, useMounted } from \"../../lib/hooks\";\r\nimport { insertAfter } from \"../../lib/array\";\r\nimport SelectTool from \"../draw/SelectTool\";\r\nimport { debounce, last } from \"lodash\";\r\nimport { Map, Set } from \"immutable\";\r\nimport DrawTools from \"./DrawTools\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport Draw from \"../draw/Draw\";\r\nimport { message } from \"antd\";\r\nimport \"./reader.sass\";\r\n\r\nexport const ReaderStateCtx = createContext({\r\n  noteID: \"\",\r\n  noteInfo: undefined as NoteInfo | undefined,\r\n  stateSet: undefined as StateSet | undefined,\r\n  teamState: undefined as TeamState | undefined,\r\n  pageRec: undefined as Map<string, NotePage> | undefined,\r\n  pageOrder: undefined as string[] | undefined,\r\n  saved: true,\r\n  teamOn: false,\r\n  inviewPages: Set<string>(),\r\n  refRec: {} as Record<string, HTMLElement>,\r\n  drawCtrl: defaultDrawCtrl,\r\n});\r\n\r\nexport const ReaderMethodCtx = createContext({\r\n  scrollPage: (pageID: string) => {},\r\n  switchPageMarked: (pageID: string) => {},\r\n  updateStateSet: (cb: (prevSS: StateSet) => StateSet) => {},\r\n  addPage: (prevPageID: string, copy?: boolean) => {},\r\n  addFinalPage: () => {},\r\n  deletePage: (pageID: string) => {},\r\n  saveReorder: async (order: string[], push: boolean) => {},\r\n  setInviewPages: (() => {}) as Setter<Set<string>>,\r\n  setDrawCtrl: (() => {}) as Setter<DrawCtrl>,\r\n});\r\n\r\nexport default function Reader({ teamOn }: { teamOn: boolean }) {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const nav = useNavigate();\r\n\r\n  const [pageRec, setPageRec] = useState<Map<string, NotePage>>();\r\n  const [noteInfo, setNoteInfo] = useState<NoteInfo>();\r\n  const [stateSet, setStateSet] = useState<StateSet>();\r\n  const [drawCtrl, setDrawCtrl] = useState(defaultDrawCtrl);\r\n  const [inviewPages, setInviewPages] = useState(Set<string>());\r\n  const [pageOrder, setPageOrder] = useState<string[]>();\r\n  const [saved, setSaved] = useState(true);\r\n\r\n  const refRec = useRef<Record<string, HTMLElement>>({});\r\n  const mounted = useMounted();\r\n\r\n  const { io, teamState, addTeamStatePage } = useContext(TeamCtx);\r\n\r\n  useEffect(() => {\r\n    const loadNotePages = async () => {\r\n      const storedNote = await loadNote(noteID);\r\n      if (!storedNote) {\r\n        message.error(\"Note not found\");\r\n        return nav(\"/\");\r\n      }\r\n      const { pageRec, pdf, pageOrder, ...noteInfo } = storedNote;\r\n      setPageRec(Map(pageRec));\r\n      setPageOrder(pageOrder);\r\n      setNoteInfo(noteInfo);\r\n      setStateSet(StateSet.createFromPages(pageRec));\r\n      setDrawCtrl(await getDrawCtrl());\r\n      if (teamOn) updatePages(noteID);\r\n    };\r\n    loadNotePages();\r\n  }, [nav, noteID, teamOn]);\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const debouncedSave = useCallback(\r\n    debounce(async (pr: Record<string, NotePage>) => {\r\n      const canvas = document.querySelector(\"canvas\");\r\n      const data = canvas?.toDataURL();\r\n      await editNoteData(noteID, { pageRec: pr, thumbnail: data });\r\n      mounted.current && setSaved(true);\r\n    }, 2000),\r\n    []\r\n  );\r\n  const instantSave = debouncedSave.flush;\r\n  useLayoutEffect(() => () => void instantSave(), [instantSave]);\r\n  useBeforeunload(instantSave);\r\n\r\n  const prRef = useRef(pageRec);\r\n  prRef.current = pageRec;\r\n  const savePageRec = useCallback(\r\n    (pageID: string, cb: (prev: NotePage) => NotePage) => {\r\n      const newRec = prRef.current?.update(pageID, defaultNotePage, cb);\r\n      if (!newRec) return;\r\n      setPageRec(newRec);\r\n      setSaved(false);\r\n      debouncedSave(newRec.toObject());\r\n    },\r\n    [debouncedSave]\r\n  );\r\n\r\n  const pushReorder = useCallback(\r\n    (pageOrder: string[]) => {\r\n      io?.emit(\"reorder\", { pageOrder });\r\n    },\r\n    [io]\r\n  );\r\n\r\n  const saveReorder = useCallback(\r\n    async (newOrder: string[], push = false) => {\r\n      setPageOrder(newOrder);\r\n      await editNoteData(noteID, { pageOrder: newOrder });\r\n      await instantSave();\r\n      push && pushReorder(newOrder);\r\n    },\r\n    [noteID, instantSave, pushReorder]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!noteInfo) return;\r\n    document.title = noteInfo.name + \" - Multibility\";\r\n  }, [noteInfo]);\r\n\r\n  useEffect(() => {\r\n    io?.on(\"reorder\", ({ deleted, pageOrder, prevOrder }: ReorderInfo) => {\r\n      saveReorder(pageOrder);\r\n      if (deleted) showPageDelMsg(() => saveReorder(prevOrder, true));\r\n    });\r\n\r\n    io?.on(\"newPage\", ({ pageOrder, pageID, newPage }: NewPageInfo) => {\r\n      saveReorder(pageOrder);\r\n      savePageRec(pageID, () => newPage);\r\n      setStateSet((prev) => prev?.addState(pageID, newPage));\r\n    });\r\n\r\n    return () => void io?.removeAllListeners();\r\n  }, [io, savePageRec, saveReorder]);\r\n\r\n  const pushOperation = useCallback(\r\n    (operation: SetOperation) => {\r\n      const handleSync = ({ stroke, pageID }: SyncInfo) =>\r\n        setStateSet((prevSS) =>\r\n          prevSS?.updateState(pageID, (prevDS) =>\r\n            DrawState.updateStroke(prevDS, stroke)\r\n          )\r\n        );\r\n\r\n      io?.emit(\"push\", { operation }, handleSync);\r\n    },\r\n    [io]\r\n  );\r\n\r\n  const pushNewPage = (\r\n    pageOrder: string[],\r\n    pageID: string,\r\n    newPage: NotePage\r\n  ) => {\r\n    const { image, marked, ...newTeamPage } = newPage;\r\n    io?.emit(\"newPage\", { pageOrder, pageID, newPage: newTeamPage });\r\n    addTeamStatePage(pageID, newPage);\r\n  };\r\n\r\n  const updatePageRec = useCallback(\r\n    (pageID: string, ds: DrawState) => {\r\n      const state = DrawState.flaten(ds);\r\n      savePageRec(pageID, (prev) => ({ ...prev, state }));\r\n    },\r\n    [savePageRec]\r\n  );\r\n\r\n  const ssRef = useRef(stateSet);\r\n  ssRef.current = stateSet;\r\n  const updateStateSet = useCallback(\r\n    (cb: (prevSS: StateSet) => StateSet) => {\r\n      if (!ssRef.current) return;\r\n      const newSS = cb(ssRef.current);\r\n      setStateSet(newSS);\r\n      const lastDS = newSS.getLastDS();\r\n      const lastOp = newSS.lastOp;\r\n      if (!lastDS || !lastOp) return;\r\n      updatePageRec(...lastDS);\r\n      pushOperation(lastOp);\r\n    },\r\n    [updatePageRec, pushOperation]\r\n  );\r\n\r\n  const switchPageMarked = (pageID: string) => {\r\n    savePageRec(pageID, (prev) => ({ ...prev, marked: !prev.marked }));\r\n  };\r\n\r\n  const scrollPage = (pageID: string) => {\r\n    refRec.current[pageID]?.scrollIntoView();\r\n  };\r\n\r\n  const addPage = (prevPageID: string, copy = false) => {\r\n    if (!pageOrder) return;\r\n    const prevPage = copy ? pageRec?.get(prevPageID) : undefined;\r\n    const [pageID, newPage] = createPage(prevPage);\r\n    const newOrder = insertAfter(pageOrder, prevPageID, pageID);\r\n    pushNewPage(newOrder, pageID, newPage);\r\n    saveReorder(newOrder);\r\n    savePageRec(pageID, () => newPage);\r\n    setStateSet((prev) => prev?.addState(pageID, newPage));\r\n  };\r\n\r\n  const addFinalPage = () => {\r\n    const lastPageID = last(pageOrder);\r\n    lastPageID && addPage(lastPageID);\r\n  };\r\n\r\n  const deletePage = (pageID: string) => {\r\n    const newOrder = pageOrder?.filter((id) => id !== pageID);\r\n    newOrder?.length && saveReorder(newOrder, true);\r\n  };\r\n\r\n  const renderResult = (\r\n    <div className=\"reader container\">\r\n      <DrawTools\r\n        handleUndo={() => updateStateSet((prev) => prev.undo())}\r\n        handleRedo={() => updateStateSet((prev) => prev.redo())}\r\n        instantSave={instantSave}\r\n      />\r\n      <main>\r\n        {pageOrder?.map((uid) => (\r\n          <PageContainer uid={uid} key={uid} />\r\n        ))}\r\n        <AddPageButton />\r\n      </main>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ReaderStateCtx.Provider\r\n      value={{\r\n        saved,\r\n        teamOn,\r\n        noteID,\r\n        pageRec,\r\n        drawCtrl,\r\n        noteInfo,\r\n        stateSet,\r\n        teamState,\r\n        pageOrder,\r\n        inviewPages,\r\n        refRec: refRec.current,\r\n      }}\r\n    >\r\n      <ReaderMethodCtx.Provider\r\n        value={{\r\n          addPage,\r\n          scrollPage,\r\n          deletePage,\r\n          setDrawCtrl,\r\n          saveReorder,\r\n          addFinalPage,\r\n          updateStateSet,\r\n          setInviewPages,\r\n          switchPageMarked,\r\n        }}\r\n      >\r\n        {renderResult}\r\n      </ReaderMethodCtx.Provider>\r\n    </ReaderStateCtx.Provider>\r\n  );\r\n}\r\n\r\nconst PageContainer: FC<{ uid: string }> = ({ uid }) => {\r\n  const { pageRec, stateSet, teamState } = useContext(ReaderStateCtx);\r\n  const { updateStateSet } = useContext(ReaderMethodCtx);\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n  const updateState = useCallback(\r\n    (ds: DrawState) => updateStateSet((prev) => prev.setState(uid, ds)),\r\n    [uid, updateStateSet]\r\n  );\r\n\r\n  if (!page || !drawState) return null;\r\n  return (\r\n    <PageWrapper\r\n      drawState={drawState}\r\n      teamStateMap={teamStateMap}\r\n      updateState={updateState}\r\n      pdfIndex={page.pdfIndex}\r\n      uid={uid}\r\n    />\r\n  );\r\n};\r\n\r\nexport const PageWrapper = ({\r\n  thumbnail,\r\n  drawState,\r\n  teamStateMap,\r\n  updateState,\r\n  pdfIndex,\r\n  preview = false,\r\n  uid,\r\n}: {\r\n  uid: string;\r\n  drawState: DrawState;\r\n  teamStateMap?: Map<string, DrawState>;\r\n  thumbnail?: string;\r\n  pdfIndex?: number;\r\n  updateState?: (ds: DrawState) => void;\r\n  preview?: boolean;\r\n}) => {\r\n  const { setInviewPages } = useContext(ReaderMethodCtx);\r\n  const { refRec, noteID } = useContext(ReaderStateCtx);\r\n  const [fullImg, setFullImg] = useState<string>();\r\n  const [visibleRef, visible] = useInView({ delay: 100 });\r\n\r\n  const { height, width } = drawState;\r\n  const ratio = height / width;\r\n\r\n  const handleRef = useCallback(\r\n    (e: HTMLDivElement | null) => {\r\n      if (!e) return;\r\n      visibleRef(e);\r\n      if (!preview && refRec) refRec[uid] = e;\r\n    },\r\n    [preview, refRec, uid, visibleRef]\r\n  );\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const loadImage = useCallback(\r\n    (() => {\r\n      let called = false;\r\n      return async () => {\r\n        if (!pdfIndex || called) return;\r\n        called = true;\r\n        const { getOnePageImage } = await import(\"../../lib/note/pdfImage\");\r\n        setFullImg(await getOnePageImage(noteID, pdfIndex));\r\n      };\r\n    })(),\r\n    [pdfIndex, noteID]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (preview) return;\r\n    if (visible) {\r\n      loadImage();\r\n      setInviewPages((prev) => prev.add(uid));\r\n    } else {\r\n      setInviewPages((prev) => prev.delete(uid));\r\n    }\r\n  }, [visible, loadImage, preview, setInviewPages, uid]);\r\n\r\n  const { ignores } = useContext(TeamCtx);\r\n  const otherStates = useMemo(\r\n    () => teamStateMap && Array.from(teamStateMap.deleteAll(ignores).values()),\r\n    [teamStateMap, ignores]\r\n  );\r\n\r\n  const imageLoaded = fullImg || !pdfIndex;\r\n  const drawShow = visible && imageLoaded;\r\n  const maskShow = Boolean(preview || !imageLoaded);\r\n\r\n  return (\r\n    <section\r\n      ref={handleRef}\r\n      className=\"note-page\"\r\n      style={{ paddingTop: `${ratio * 100}%` }}\r\n    >\r\n      {drawShow && (\r\n        <DrawWrapper\r\n          drawState={drawState}\r\n          otherStates={otherStates}\r\n          updateState={updateState}\r\n          imgSrc={fullImg || thumbnail}\r\n          preview={preview}\r\n        />\r\n      )}\r\n      {maskShow && <div className=\"mask\" />}\r\n    </section>\r\n  );\r\n};\r\nPageWrapper.displayName = \"PageWrapper\";\r\n\r\nconst DrawWrapper = ({\r\n  drawState,\r\n  updateState,\r\n  otherStates,\r\n  preview = false,\r\n  imgSrc,\r\n}: {\r\n  drawState: DrawState;\r\n  otherStates?: DrawState[];\r\n  updateState?: (ds: DrawState) => void;\r\n  preview?: boolean;\r\n  imgSrc?: string;\r\n}) => {\r\n  const { drawCtrl } = useContext(ReaderStateCtx);\r\n\r\n  const dsRef = useRef(drawState);\r\n  dsRef.current = drawState;\r\n  const handleChange = useCallback(\r\n    (arg: ((s: DrawState) => DrawState) | DrawState) => {\r\n      if (!updateState) return;\r\n      const newDS = arg instanceof DrawState ? arg : arg(dsRef.current);\r\n      updateState(newDS);\r\n    },\r\n    [updateState]\r\n  );\r\n\r\n  return preview ? (\r\n    <Draw\r\n      drawState={drawState}\r\n      otherStates={otherStates}\r\n      imgSrc={imgSrc}\r\n      readonly\r\n      preview\r\n    />\r\n  ) : (\r\n    <Draw\r\n      drawState={drawState}\r\n      otherStates={otherStates}\r\n      onChange={handleChange}\r\n      imgSrc={imgSrc}\r\n      drawCtrl={drawCtrl}\r\n      SelectTool={SelectTool}\r\n    />\r\n  );\r\n};\r\nDrawWrapper.displayName = \"DrawWrapper\";\r\n","import { io } from \"socket.io-client\";\r\nimport { Stroke } from \"../draw/DrawState\";\r\nimport { NotePage } from \"../note/note\";\r\nimport { getUserID, getUserName } from \"../user\";\r\nimport { BASE_URL } from \"./http\";\r\n\r\nexport const IoFactory = (noteID: string) => {\r\n  return () =>\r\n    io(BASE_URL, {\r\n      query: {\r\n        userID: getUserID(),\r\n        userName: getUserName(),\r\n        noteID,\r\n      },\r\n    });\r\n};\r\n\r\nexport interface ReorderInfo {\r\n  pageOrder: string[];\r\n  prevOrder: string[];\r\n  deleted: boolean;\r\n}\r\n\r\nexport interface NewPageInfo {\r\n  pageOrder: string[];\r\n  pageID: string;\r\n  newPage: NotePage;\r\n}\r\n\r\nexport interface SyncInfo {\r\n  stroke: Stroke;\r\n  pageID: string;\r\n}\r\n","import { NotePage, TeamPage, TeamPageInfo } from \"../note/note\";\nimport { DrawState, WIDTH } from \"./DrawState\";\nimport { SetOperation } from \"./StateSet\";\nimport { Map, Record } from \"immutable\";\n\ninterface TeamStateRecordType {\n  pageStates: Map<string, Map<string, DrawState>>;\n  pageInfos: Map<string, TeamPageInfo>;\n}\n\nconst defaultRecord: Readonly<TeamStateRecordType> = {\n  pageStates: Map(),\n  pageInfos: Map(),\n};\n\ntype TeamStateRecord = Record<TeamStateRecordType>;\nconst defaultFactory = Record(defaultRecord);\n\nexport class TeamState {\n  constructor(private immutable: TeamStateRecord) {}\n\n  getImmutable() {\n    return this.immutable;\n  }\n\n  getPageStates() {\n    return this.getImmutable().get(\"pageStates\");\n  }\n\n  getPageInfos() {\n    return this.getImmutable().get(\"pageInfos\");\n  }\n\n  getOneState(pageID: string, userID: string) {\n    return this.getPageStates().get(pageID)?.get(userID);\n  }\n\n  getOnePageStateMap(pageID: string) {\n    return this.getPageStates().get(pageID);\n  }\n\n  getPageValidUsers(pageID: string) {\n    const map = this.getOnePageStateMap(pageID);\n    if (!map) return [];\n    return Array.from(map?.filter((ds) => !ds.isEmpty()).keys());\n  }\n\n  getPageRatio(pageID: string) {\n    return this.getPageInfos().get(pageID)?.ratio;\n  }\n\n  includesPage(pageID: string) {\n    return this.getPageStates().has(pageID);\n  }\n\n  setState(pageID: string, userID: string, drawState: DrawState) {\n    const pageMap = this.getPageStates().get(pageID);\n    if (!pageMap) return this;\n    return new TeamState(\n      this.getImmutable().update(\"pageStates\", (m) =>\n        m.set(pageID, pageMap.set(userID, drawState))\n      )\n    );\n  }\n\n  static createFromTeamPages(\n    teamPages: globalThis.Record<string, TeamPage>,\n    width = WIDTH\n  ) {\n    let record = defaultFactory();\n    Object.entries(teamPages).forEach(([pageID, teamPage]) => {\n      const { states, ratio } = teamPage;\n      const pageMap = Map(\n        Object.entries(states).map(([userID, flatState]) => [\n          userID,\n          DrawState.loadFromFlat(flatState, width, width * ratio),\n        ])\n      );\n      record = record\n        .update(\"pageStates\", (m) => m.set(pageID, pageMap))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }));\n    });\n    return new TeamState(record);\n  }\n\n  addPage(pageID: string, notePage: NotePage) {\n    const { ratio } = notePage;\n    return new TeamState(\n      this.getImmutable()\n        .update(\"pageStates\", (m) => m.set(pageID, Map()))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }))\n    );\n  }\n\n  pushOperation(setOp: SetOperation, userID: string, width = WIDTH) {\n    const { pageID, ...op } = setOp;\n    const ratio = this.getPageRatio(pageID);\n    if (!this.includesPage(pageID) || !ratio) return this;\n    const prevDs =\n      this.getOneState(pageID, userID) ||\n      DrawState.createEmpty(width, width * ratio);\n\n    const ds = DrawState.pushOperation(prevDs, op);\n    return this.setState(pageID, userID, ds);\n  }\n\n  resetUser(userID: string, pageRec: globalThis.Record<string, NotePage>) {\n    let newTS: TeamState = this;\n    for (let [pageID, { state, ratio }] of Object.entries(pageRec)) {\n      const prevDS = newTS.getOneState(pageID, userID);\n      if (!prevDS) continue;\n      const { width } = prevDS;\n      newTS = newTS.setState(\n        pageID,\n        userID,\n        DrawState.loadFromFlat(state, width, width * ratio)\n      );\n    }\n    return newTS;\n  }\n}\n","import { message } from \"antd\";\r\nimport React, { useState, useEffect, createContext } from \"react\";\r\nimport { getTeamNoteState, loadTeamNoteInfo } from \"../../lib/network/http\";\r\nimport { LoginOutlined, LogoutOutlined } from \"@ant-design/icons\";\r\nimport { IoFactory, NewPageInfo } from \"../../lib/network/io\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { TeamState } from \"../../lib/draw/TeamState\";\r\nimport { getUserID, UserInfo } from \"../../lib/user\";\r\nimport { NotePage } from \"../../lib/note/note\";\r\nimport { Socket } from \"socket.io-client\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { Set } from \"immutable\";\r\nimport Reader from \"./Reader\";\r\n\r\nexport const TeamCtx = createContext({\r\n  io: undefined as Socket | undefined,\r\n  code: -2,\r\n  connected: false,\r\n  ignores: Set<string>(),\r\n  userRec: {} as Record<string, UserInfo>,\r\n  teamState: undefined as TeamState | undefined,\r\n  resetIO: () => {},\r\n  loadInfo: async () => false,\r\n  setIgnores: (() => {}) as Setter<Set<string>>,\r\n  addTeamStatePage: (pageID: string, newPage: NotePage) => {},\r\n});\r\n\r\nexport default function Team() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const [teamState, setTeamState] = useState<TeamState>();\r\n  const [code, setCode] = useState(-2);\r\n  const [userRec, setUserRec] = useState<Record<string, UserInfo>>({});\r\n  const [ignores, setIgnores] = useState(Set<string>());\r\n  const [io, setIO] = useState(IoFactory(noteID));\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [connected, setConnected] = useState(false);\r\n  const nav = useNavigate();\r\n\r\n  const loadState = async () => {\r\n    const teamNote = await getTeamNoteState(noteID);\r\n    if (!teamNote) {\r\n      message.error(\"Failed loading the team note state\");\r\n      return false;\r\n    }\r\n    setTeamState(TeamState.createFromTeamPages(teamNote));\r\n    return true;\r\n  };\r\n\r\n  const loadInfo = async () => {\r\n    const info = await loadTeamNoteInfo(noteID);\r\n    if (!info) {\r\n      message.error(\"Failed loading the team note info\");\r\n      return false;\r\n    }\r\n    setCode(info.code);\r\n    return true;\r\n  };\r\n\r\n  const roomInit = async () => {\r\n    message.loading({\r\n      content: \"Loading team note...\",\r\n      key: \"TEAM_LOADING\",\r\n      duration: 0,\r\n    });\r\n    if (!((await loadInfo()) && (await loadState()))) {\r\n      message.destroy(\"TEAM_LOADING\");\r\n      return nav(\"/\");\r\n    }\r\n    message.destroy(\"TEAM_LOADING\");\r\n    setLoaded(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    io.on(\"push\", ({ operation, userID }) => {\r\n      setTeamState((prev) => prev?.pushOperation(operation, userID));\r\n    });\r\n\r\n    io.on(\"join\", ({ joined, members }) => {\r\n      const { userID, userName } = joined;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return;\r\n      message.destroy(userID);\r\n      message.success({\r\n        content: `${userName} joined room`,\r\n        icon: <LoginOutlined />,\r\n        key: userID,\r\n      });\r\n    });\r\n\r\n    io.on(\"leave\", ({ leaved, members }) => {\r\n      const { userID, userName } = leaved;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return io.emit(\"join\");\r\n      message.destroy(userID);\r\n      message.warning({\r\n        content: `${userName} leaved room`,\r\n        icon: <LogoutOutlined />,\r\n        key: userID,\r\n      });\r\n    });\r\n\r\n    io.on(\"newPage\", (info: NewPageInfo) => {\r\n      const { pageID, newPage } = info;\r\n      setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n    });\r\n\r\n    io.on(\"reset\", ({ userID, pageRec }) => {\r\n      if (userID === getUserID()) return;\r\n      setTeamState((prev) => prev?.resetUser(userID, pageRec));\r\n    });\r\n\r\n    io.on(\"connect_error\", console.error);\r\n    io.on(\"connect\", () => setConnected(true));\r\n    io.on(\"disconnect\", () => setConnected(false));\r\n\r\n    return () => {\r\n      io.removeAllListeners();\r\n      io.close();\r\n    };\r\n  }, [io]);\r\n\r\n  const roomDestroy = () => {\r\n    message.destroy(\"TEAM_LOADING\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    roomInit();\r\n    return roomDestroy;\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [noteID]);\r\n\r\n  const addTeamStatePage = (pageID: string, newPage: NotePage) => {\r\n    setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n  };\r\n\r\n  const resetIO = () => setIO(IoFactory(noteID));\r\n\r\n  if (!loaded) return null;\r\n  return (\r\n    <TeamCtx.Provider\r\n      value={{\r\n        io,\r\n        code,\r\n        ignores,\r\n        userRec,\r\n        connected,\r\n        teamState,\r\n        resetIO,\r\n        loadInfo,\r\n        setIgnores,\r\n        addTeamStatePage,\r\n      }}\r\n    >\r\n      <Reader teamOn />\r\n    </TeamCtx.Provider>\r\n  );\r\n}\r\n","export function createVirtualCanvas(width: number, height: number) {\r\n  const canvas = document.createElement(\"canvas\");\r\n  const context = canvas.getContext(\"2d\");\r\n  if (!context) {\r\n    throw new Error(\"can't get virtual canvas context\");\r\n  }\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n  return { canvas, context };\r\n}\r\n\r\nexport function releaseCanvas(canvas: HTMLCanvasElement) {\r\n  canvas.width = 1;\r\n  canvas.height = 1;\r\n  const ctx = canvas.getContext('2d');\r\n  ctx?.clearRect(0, 0, 1, 1);\r\n}\r\n"],"names":["defaultDrawCtrl","mode","finger","lineWidth","eraserWidth","color","highlight","getDrawCtrl","localforage","drawCtrl","defaultRecord","states","Map","editStack","List","undoStack","defaultFactory","Record","StateSet","immutable","lastOp","this","getImmutable","get","pageID","getStates","drawState","prevDS","getOneState","currRecord","update","s","set","l","push","delete","cb","currDS","notePage","width","WIDTH","state","ratio","newDS","DrawState","getEditStack","size","getUndoStack","isUndoable","lastUid","last","lastSetOp","pop","isRedoable","ds","undefined","list","pageRec","entries","Object","createFromList","map","key","AddPageButton","addFinalPage","useContext","ReaderMethodCtx","className","type","icon","PlusOutlined","block","onClick","insertAfter","prevItem","newItem","prevIndex","indexOf","curr","slice","splice","DigitDisplay","value","useState","randomNum","setRandomNum","digits","String","padStart","split","Number","resetRandom","Math","floor","random","useEffect","timer","setTimeout","clearTimeout","classNames","disabled","d","idx","Digit","digit","createFromIconfontCN","scriptUrl","PageNavContent","activeKey","setActiveKey","ReaderStateCtx","pageOrder","inviewPages","scrollPage","saveReorder","refRec","useRef","listEl","currpageID","useMemo","find","has","current","scrollIntoView","itemHeight","clientHeight","listHeight","scrollBy","PreviewTabs","onDragEnd","source","destination","fromIndex","index","toIndex","newOrder","result","removed","exchange","requestAnimationFrame","droppableId","droppableProps","innerRef","placeholder","ref","e","uid","PagePreview","pageIndex","stateSet","teamState","switchPageMarked","ignores","TeamCtx","chosen","setChosen","page","teamStateMap","getOnePageStateMap","userIDs","getPageValidUsers","filter","userID","isEmpty","every","marked","switchMarked","stopPropagation","dragDisabled","draggableId","isDragDisabled","draggableProps","dragHandleProps","drag","isDragging","image","PageWrapper","thumbnail","preview","onClickCapture","TeamAvatars","PreviewOption","maxCount","UserAvatar","prev","popShow","setPopShow","addPage","deletePage","menu","domEvent","items","label","CopyOutlined","DeleteOutlined","danger","content","trigger","placement","visible","onVisibleChange","destroyTooltipOnHide","MoreOutlined","TabPane","Tabs","onChange","tabBarGutter","centered","tab","PageNav","navOn","setNavOn","title","ALL","MARKED","WRITTEN","MenuUnfoldOutlined","MenuFoldOutlined","onClose","closable","contentWrapperStyle","boxShadow","bodyStyle","padding","overflow","headerStyle","textAlign","borderTop","destroyOnClose","DrawTools","handleUndo","handleRedo","instantSave","saved","teamOn","setDrawCtrl","nav","useNavigate","updateDrawCtrl","updated","newCtrl","saveDrawCtrl","HomeFilled","style","opacity","SaveOutlined","shape","UndoOutlined","RedoOutlined","PenButton","EraserButton","includes","ExpandOutlined","ghost","RoomInfo","JoinRoom","PenPanel","getPopupContainer","HighlightOutlined","tempLineWidth","setTempLineWidth","min","max","defaultValue","onAfterChange","ColorSelect","colors","c","checked","name","tempEraserWidth","setTempEraserWidth","UserCard","renaming","setRenaming","setIgnores","resetIO","userInfo","userRec","userName","online","self","getUserID","ignored","Search","autoFocus","onSearch","trim","saveUserName","enterButton","CheckOutlined","FormOutlined","EyeInvisibleOutlined","EyeOutlined","add","getHashedColor","backgroundColor","code","connected","loadInfo","link","window","location","href","share","selfName","copy","message","console","log","userList","values","selfID","selfInfo","onlineNum","u","length","DisconnectOutlined","showIcon","banner","ShareAltOutlined","ReloadOutlined","defaultVisible","status","count","TeamOutlined","noteID","createRoom","putNote","editNoteData","team","onConfirm","okText","cancelText","UsergroupAddOutlined","onDelete","onRotate","onDuplicate","mutateStyle","currDrawCtrl","btnProps","rotateEl","dragged","setDragged","transX","setTransX","gearStyle","transform","rotateCount","setRotateCount","btnClass","useDrag","first","offset","delta","target","filterTaps","rubberband","bounds","left","right","BgColorsOutlined","RotateRightOutlined","Point","paper","Path","Group","Rectangle","Color","Size","Raster","Draw","otherStates","readonly","imgSrc","SelectTool","height","canvasEl","scope","group","path","Set","erased","setErased","setCurrDrawCtrl","rect","setRect","onFrame","dashOffset","remove","selectedGroup","setSelectedGroup","selected","setSelected","paperMode","strokeColor","alpha","updateMutation","updateRatio","clientWidth","transformPoint","projP","activate","view","center","zoom","absoluteP","projectToView","multiply","offsetP","divide","subtract","setup","r","viewSize","scale","paintBackground","setupPaper","cvs","releaseCanvas","setNewRect","point","rectangle","startSelectRect","handleDown","draw","startStroke","erase","select","isInside","strokeBounds","handleDrag","smooth","eraserPath","newErased","p","checkErase","concat","x","y","translate","handleUp","segments","simplify","pathData","exportJSON","toArray","abs","paths","newSG","checkSelection","tempStyle","parseGroupStyle","onMouseDown","onMouseDrag","onMouseUp","raster","img","Image","src","onload","position","sendToBack","parent","getItem","mergedStrokes","getStrokeList","otherGroup","forEach","stroke","paintStroke","hasStroke","item","children","mutations","handler","preventDefault","document","addEventListener","removeEventListener","usePinch","memo","origin","lastScale","lastOX","lastOY","osX","osY","getBoundingClientRect","oX","oY","originViewP","originProjP","viewToProject","aniCount","pow","scaleView","transP","putCenterBack","scaleBounds","preventTouch","touch","touches","touchType","isStylus","isEventValid","onTouchStartCapture","onTouchMoveCapture","deleted","angle","dAngle","rotate","clone","getUid","updateGroupStyle","React","importJSON","error","getCheckPoints","cache","WeakMap","segment","cached","prevPoint","previous","times","checkPoints","i","checkedPath","curveBound","lastSegment","curve","intersects","strokeWidth","some","cPoint","getNearestPoint","getDistance","bgRect","fillColor","dashArray","blendMode","strokeJoin","strokeCap","dX","dY","minX","maxX","minY","maxY","getCenterTranslate","deltaX","deltaY","dP","move","toCSS","prevHighLighted","createContext","noteInfo","updateStateSet","prevPageID","order","setInviewPages","Reader","useParams","setPageRec","setNoteInfo","setStateSet","setPageOrder","setSaved","mounted","_mounted","useMounted","io","addTeamStatePage","loadNotePages","loadNote","storedNote","pdf","createFromPages","updatePages","debouncedSave","useCallback","debounce","pr","canvas","querySelector","data","toDataURL","flush","useLayoutEffect","useBeforeunload","prRef","savePageRec","newRec","defaultNotePage","toObject","pushReorder","emit","on","onUndo","prevOrder","duration","newPage","addState","removeAllListeners","pushOperation","operation","prevSS","updateState","pushNewPage","newTeamPage","updatePageRec","ssRef","newSS","lastDS","getLastDS","prevPage","createPage","renderResult","undo","redo","PageContainer","Provider","id","lastPageID","setState","pdfIndex","fullImg","setFullImg","useInView","delay","visibleRef","handleRef","loadImage","called","getOnePageImage","Array","from","deleteAll","imageLoaded","drawShow","maskShow","Boolean","paddingTop","DrawWrapper","displayName","dsRef","handleChange","arg","IoFactory","BASE_URL","query","getUserName","pageStates","pageInfos","TeamState","getPageStates","keys","getPageInfos","pageMap","m","setOp","op","getPageRatio","includesPage","prevDs","newTS","teamPages","record","teamPage","flatState","Team","setTeamState","setCode","setUserRec","setIO","loaded","setLoaded","setConnected","loadState","getTeamNoteState","teamNote","createFromTeamPages","loadTeamNoteInfo","info","roomInit","joined","members","LoginOutlined","leaved","LogoutOutlined","resetUser","close","roomDestroy","createVirtualCanvas","createElement","context","getContext","Error","ctx","clearRect"],"sourceRoot":""}