{"version":3,"file":"static/js/293.e83401d6.chunk.js","mappings":"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","sources":["lib/draw/DrawCtrl.tsx","lib/draw/StateSet.ts","component/draw/cursor/cursor.ts","component/draw/touch.ts","component/draw/Draw.tsx","component/reader/ReaderUtils.tsx","component/ui/IconFont.tsx","component/reader/tools/PenPanel.tsx","component/reader/tools/DrawTools.tsx","component/reader/lib/scroll.ts","component/reader/lib/array.ts","component/reader/header/Left.tsx","component/reader/header/Middle.tsx","component/widgets/UserAvatar.tsx","component/reader/PageNav.tsx","component/reader/header/Right.tsx","component/reader/header/index.tsx","component/reader/Reader.tsx","lib/network/io.ts","component/reader/Team.tsx","component/widgets/ColorCircle.tsx","lib/color.ts","lib/draw/DrawState.ts","lib/draw/TeamState.ts","lib/draw/canvas.ts","lib/hooks.tsx","lib/network/http.ts","lib/note/archive.ts","lib/note/note.ts","lib/user.ts"],"sourcesContent":["import localforage from \"localforage\";\r\nimport React, {\r\n  FC,\r\n  useContext,\r\n  useDebugValue,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nexport interface DrawCtrl {\r\n  mode: \"draw\" | \"erase\" | \"select\" | \"text\";\r\n  finger: boolean;\r\n  lineWidth: number;\r\n  eraserWidth: number;\r\n  color: string;\r\n  highlight: boolean;\r\n  lasso: boolean;\r\n  pixelEraser: boolean;\r\n  widthList: number[];\r\n}\r\n\r\nexport const defaultWidthList = [10, 20, 30, 50];\r\nexport const defaultDrawCtrl: Readonly<DrawCtrl> = {\r\n  mode: \"draw\",\r\n  finger: true,\r\n  lineWidth: 10,\r\n  eraserWidth: 10,\r\n  color: \"#000000\",\r\n  highlight: false,\r\n  lasso: true,\r\n  pixelEraser: false,\r\n  widthList: defaultWidthList,\r\n};\r\n\r\nasync function getDrawCtrl() {\r\n  let drawCtrl = await localforage.getItem<DrawCtrl>(\"DRAW_CTRL\");\r\n  if (!drawCtrl) {\r\n    drawCtrl = defaultDrawCtrl;\r\n    await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n  }\r\n  return drawCtrl;\r\n}\r\n\r\nasync function saveDrawCtrl(drawCtrl: DrawCtrl) {\r\n  await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n}\r\n\r\nconst DrawCtrlContext = React.createContext({\r\n  drawCtrl: defaultDrawCtrl,\r\n  updateDrawCtrl: (() => {}) as (updated: Partial<DrawCtrl>) => void,\r\n});\r\n\r\nexport function useDrawCtrl() {\r\n  const { drawCtrl } = useContext(DrawCtrlContext);\r\n  useDebugValue(drawCtrl);\r\n  return drawCtrl;\r\n}\r\n\r\nexport function useUpdateDrawCtrl() {\r\n  const { updateDrawCtrl } = useContext(DrawCtrlContext);\r\n  return updateDrawCtrl;\r\n}\r\n\r\nexport const DrawCtrlProvider: FC = ({ children }) => {\r\n  const [drawCtrl, setDrawCtrl] = useState(defaultDrawCtrl);\r\n  useEffect(() => {\r\n    getDrawCtrl().then(setDrawCtrl);\r\n  }, []);\r\n\r\n  const updateDrawCtrl = (updated: Partial<DrawCtrl>) => {\r\n    setDrawCtrl((prev) => {\r\n      const newCtrl = { ...prev, ...updated };\r\n      saveDrawCtrl(newCtrl);\r\n      return newCtrl;\r\n    });\r\n  };\r\n  return (\r\n    <DrawCtrlContext.Provider value={{ drawCtrl, updateDrawCtrl }}>\r\n      {children}\r\n    </DrawCtrlContext.Provider>\r\n  );\r\n};\r\n","import { DrawState, Operation, Stroke } from \"./DrawState\";\r\nimport { List, Map, Record } from \"immutable\";\r\nimport { NotePage } from \"../note/note\";\r\n\r\ninterface StateSetRecordType {\r\n  states: Map<string, DrawState>;\r\n  editStack: List<string>;\r\n  undoStack: List<string>;\r\n}\r\n\r\nconst defaultRecord: Readonly<StateSetRecordType> = {\r\n  states: Map(),\r\n  editStack: List(),\r\n  undoStack: List(),\r\n};\r\n\r\ntype StateSetRecord = Record<StateSetRecordType>;\r\nconst defaultFactory = Record(defaultRecord);\r\n\r\nexport type SetOperation = Operation & { pageID: string };\r\n\r\nexport class StateSet {\r\n  constructor(\r\n    private immutable: StateSetRecord,\r\n    public lastOp?: SetOperation\r\n  ) {}\r\n\r\n  static createFromPages(pageRec: globalThis.Record<string, NotePage>) {\r\n    return new StateSet(\r\n      defaultFactory().set(\r\n        \"states\",\r\n        Map(pageRec).map(({ state, ratio }) =>\r\n          DrawState.loadFromFlat(state, ratio)\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  getImmutable() {\r\n    return this.immutable;\r\n  }\r\n\r\n  getStates() {\r\n    return this.getImmutable().get(\"states\");\r\n  }\r\n\r\n  getOneState(pageID: string) {\r\n    return this.getStates().get(pageID);\r\n  }\r\n\r\n  getEditStack() {\r\n    return this.getImmutable().get(\"editStack\");\r\n  }\r\n\r\n  getUndoStack() {\r\n    return this.getImmutable().get(\"undoStack\");\r\n  }\r\n\r\n  setState(pageID: string, drawState: DrawState) {\r\n    const prevDS = this.getOneState(pageID);\r\n    if (!prevDS || prevDS === drawState) return this;\r\n    let currRecord = this.getImmutable()\r\n      .update(\"states\", (s) => s.set(pageID, drawState))\r\n      .update(\"editStack\", (l) => l.push(pageID))\r\n      .delete(\"undoStack\");\r\n\r\n    const { lastOp } = drawState;\r\n    const lastSetOp = lastOp && { ...lastOp, pageID };\r\n\r\n    return new StateSet(currRecord, lastSetOp);\r\n  }\r\n\r\n  // sync with mutation.\r\n  syncStrokeTime(pageID: string, stroke: Stroke) {\r\n    const prevDS = this.getOneState(pageID);\r\n    prevDS && DrawState.syncStrokeTime(prevDS, stroke);\r\n    return this;\r\n  }\r\n\r\n  addState(pageID: string, notePage: NotePage) {\r\n    const { state, ratio } = notePage;\r\n    const newDS = DrawState.loadFromFlat(state, ratio);\r\n    const currRecord = this.getImmutable().update(\"states\", (s) =>\r\n      s.set(pageID, newDS)\r\n    );\r\n    return new StateSet(currRecord);\r\n  }\r\n\r\n  deleteState(pageID: string) {\r\n    return new StateSet(\r\n      this.getImmutable().update(\"states\", (s) => s.delete(pageID))\r\n    );\r\n  }\r\n\r\n  isUndoable() {\r\n    return this.getEditStack().size > 0;\r\n  }\r\n\r\n  isRedoable() {\r\n    return this.getUndoStack().size > 0;\r\n  }\r\n\r\n  undo() {\r\n    if (!this.isUndoable()) return this;\r\n    const lastUid = this.getEditStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.undo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"editStack\", (s) => s.pop())\r\n        .update(\"undoStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  redo() {\r\n    if (!this.isRedoable()) return this;\r\n    const lastUid = this.getUndoStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.redo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"undoStack\", (s) => s.pop())\r\n        .update(\"editStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  getLastDS(): [string, DrawState] | undefined {\r\n    const pageID = this.lastOp?.pageID;\r\n    const ds = pageID && this.getOneState(pageID);\r\n    if (ds) return [pageID, ds];\r\n  }\r\n}\r\n","import { createVirtualCanvas } from \"../../../lib/draw/canvas\";\r\nimport { DrawCtrl } from \"../../../lib/draw/DrawCtrl\";\r\nimport rotateImg from \"./rotate.png\";\r\n\r\nexport const getCircleCursor = (drawCtrl: DrawCtrl, ratio: number) => {\r\n  const { lineWidth, eraserWidth, mode } = drawCtrl;\r\n  const size = ratio * (mode === \"erase\" ? eraserWidth : lineWidth);\r\n  if (size < 5) return \"crosshair\";\r\n  const half = size / 2;\r\n  return `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"%23FFF7\" width=\"${size}\" height=\"${size}\" viewBox=\"0 0 10 10\"><circle cx=\"5\" cy=\"5\" r=\"5\"/></svg>') ${half} ${half}, auto`;\r\n};\r\n\r\nconst getRotateCursorImage = (() => {\r\n  const cache = new Map<number, string>();\r\n  const { canvas, context } = createVirtualCanvas(44, 44);\r\n  const image = new Image();\r\n  image.src = rotateImg;\r\n  return (angle: number) => {\r\n    angle = Math.round(angle / 10) * 10;\r\n    const cached = cache.get(angle);\r\n    if (cached) return cached;\r\n    context.translate(22, 22);\r\n    context.rotate((angle * Math.PI) / 180);\r\n    context.drawImage(image, -22, -22);\r\n    const data = canvas.toDataURL();\r\n    context.clearRect(-22, -22, 44, 44);\r\n    context.resetTransform();\r\n    cache.set(angle, data);\r\n    return data;\r\n  };\r\n})();\r\n\r\nexport const getRotateCurcor = (angle: number) => {\r\n  return `url(${getRotateCursorImage(angle)}) 22 22, auto`;\r\n};\r\n","import { PointerEvent, TouchEvent, useEffect, useRef } from \"react\";\r\n\r\ntype iOSTouch = Touch & {\r\n  force?: number;\r\n  touchType?: \"stylus\" | \"direct\";\r\n};\r\n\r\nexport function isApplePencil(e: TouchEvent) {\r\n  const touch = e.touches[0] as iOSTouch;\r\n  return touch?.touchType === \"stylus\";\r\n}\r\n\r\nexport function usePreventTouch(\r\n  allowFinger: boolean\r\n): React.HTMLAttributes<HTMLDivElement> {\r\n  const isTouch = useRef(false);\r\n  const checkPoniter = (e: PointerEvent) =>\r\n    e.isPrimary && (isTouch.current = e.pointerType === \"touch\");\r\n\r\n  const isEventValid = (e: TouchEvent) =>\r\n    !isTouch.current ||\r\n    isApplePencil(e) ||\r\n    (allowFinger && e.touches.length === 1);\r\n\r\n  const preventTouch = (e: TouchEvent) =>\r\n    isEventValid(e) || e.stopPropagation();\r\n\r\n  return {\r\n    onPointerDownCapture: checkPoniter,\r\n    onPointerMoveCapture: checkPoniter,\r\n    onTouchStartCapture: preventTouch,\r\n    onTouchMoveCapture: preventTouch,\r\n  };\r\n}\r\n\r\nexport function usePreventGesture() {\r\n  useEffect(() => {\r\n    const handler = (e: Event) => e.preventDefault();\r\n    document.addEventListener(\"gesturestart\", handler);\r\n    document.addEventListener(\"gesturechange\", handler);\r\n    document.addEventListener(\"gestureend\", handler);\r\n    return () => {\r\n      document.removeEventListener(\"gesturestart\", handler);\r\n      document.removeEventListener(\"gesturechange\", handler);\r\n      document.removeEventListener(\"gestureend\", handler);\r\n    };\r\n  }, []);\r\n}\r\n","import React, {\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  Dispatch,\r\n  useEffect,\r\n  useCallback,\r\n  useDebugValue,\r\n  SetStateAction,\r\n  useImperativeHandle,\r\n} from \"react\";\r\nimport {\r\n  DrawState,\r\n  Mutation,\r\n  Splitter,\r\n  Stroke,\r\n} from \"../../lib/draw/DrawState\";\r\nimport { defaultDrawCtrl, DrawCtrl } from \"../../lib/draw/DrawCtrl\";\r\nimport { getCircleCursor, getRotateCurcor } from \"./cursor/cursor\";\r\nimport { usePreventTouch, usePreventGesture } from \"./touch\";\r\nimport { releaseCanvas } from \"../../lib/draw/canvas\";\r\nimport { usePinch } from \"@use-gesture/react\";\r\nimport useSize from \"@react-hook/size\";\r\nimport paper from \"paper\";\r\nimport \"./draw.sass\";\r\n\r\nconst { Path, Size, Point, Group, Color, Raster, Layer } = paper;\r\n\r\nexport type ActiveToolKey = \"\" | \"select\" | \"text\";\r\nexport interface DrawRefType {\r\n  deleteSelected: () => void;\r\n  duplicateSelected: () => void;\r\n  mutateStyle: (updated: Partial<DrawCtrl>) => void;\r\n  rasterize: () => string;\r\n  submitText: (text: string, color?: string, justification?: string) => void;\r\n  cancelText: () => void;\r\n  pointText?: paper.PointText;\r\n}\r\ninterface DrawPropType {\r\n  drawState: DrawState;\r\n  otherStates?: DrawState[];\r\n  onChange?: Dispatch<SetStateAction<DrawState>>;\r\n  setActiveTool?: Dispatch<SetStateAction<ActiveToolKey>>;\r\n  drawCtrl?: DrawCtrl;\r\n  readonly?: boolean;\r\n  imgSrc?: string;\r\n}\r\n\r\nconst Draw = React.forwardRef<DrawRefType, DrawPropType>(\r\n  (\r\n    {\r\n      drawState,\r\n      otherStates,\r\n      onChange = () => {},\r\n      drawCtrl = defaultDrawCtrl,\r\n      readonly = false,\r\n      imgSrc,\r\n      setActiveTool = () => {},\r\n    },\r\n    ref\r\n  ) => {\r\n    const { width, height } = drawState;\r\n    const { mode, finger, lasso, eraserWidth } = drawCtrl;\r\n\r\n    const canvasEl = useRef<HTMLCanvasElement>(null);\r\n    const scope = useRef(new paper.PaperScope());\r\n    const [group, setGroup] = useState<paper.Item[]>([]);\r\n    const [path, setPath] = usePaperItem<paper.Path>();\r\n    const [rect, setRect] = usePaperItem<paper.Path.Rectangle>();\r\n    const [rotateHandle, setRotateHandle] = usePaperItem<paper.Path>();\r\n\r\n    useEffect(() => {\r\n      const cvs = canvasEl.current;\r\n      const scp = scope.current;\r\n      if (!cvs) return;\r\n\r\n      scp.setup(cvs);\r\n      scp.settings.handleSize = 10;\r\n      scp.settings.hitTolerance = 20;\r\n      [0, 1, 2].forEach(() => scp.project.addLayer(new Layer()));\r\n      scp.project.layers.forEach((l) => (l.visible = false));\r\n      scp.project.layers[2]?.activate();\r\n      new scp.Tool();\r\n\r\n      return () => {\r\n        scp.remove();\r\n        releaseCanvas(cvs);\r\n      };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      const bgRect = paintBackground(scope.current, width, height);\r\n      return () => void bgRect.remove();\r\n    }, [width, height]);\r\n\r\n    const [canvasWidth] = useSize(canvasEl);\r\n    const ratio = canvasWidth / width;\r\n    useEffect(() => {\r\n      if (!ratio) return;\r\n      const scp = scope.current;\r\n      const zero = new Point(0, 0);\r\n      scp.view.viewSize = new Size(width, height).multiply(ratio);\r\n      scp.view.scale(ratio, zero);\r\n      scp.project.layers.forEach((l) => (l.visible = true));\r\n      scp.view.update();\r\n\r\n      return () => scp.view?.scale(1 / ratio, zero);\r\n    }, [width, height, ratio]);\r\n\r\n    useEffect(() => {\r\n      if (!imgSrc) return;\r\n      scope.current.activate();\r\n      const raster = new Raster(imgSrc);\r\n      raster.project.layers[0]?.addChild(raster);\r\n      raster.sendToBack();\r\n      raster.onLoad = () => {\r\n        raster.view.update();\r\n        raster.fitBounds(new paper.Rectangle(0, 0, width, height));\r\n        raster.bringToFront();\r\n      };\r\n\r\n      return () => void raster?.remove();\r\n    }, [imgSrc, width, height]);\r\n\r\n    const mergedStrokes = useMemo(\r\n      () =>\r\n        otherStates\r\n          ? DrawState.mergeStates(drawState, ...otherStates)\r\n          : drawState.getStrokeList(),\r\n      [drawState, otherStates]\r\n    );\r\n    useEffect(() => {\r\n      const tempGroup: paper.Item[] = [];\r\n      const layer = scope.current.project.layers[1];\r\n      if (!layer) return;\r\n\r\n      scope.current.activate();\r\n      mergedStrokes.forEach((stroke) => {\r\n        const self = drawState.hasStroke(stroke.uid);\r\n        const item = paintStroke(stroke, layer, !self);\r\n        if (self) tempGroup.push(item);\r\n      });\r\n      setGroup(tempGroup);\r\n\r\n      return () => void layer.removeChildren();\r\n    }, [mergedStrokes, drawState]);\r\n\r\n    const hitRef = useRef<paper.HitResult>();\r\n    const [selected, setSelected] = useState(false);\r\n    const paperMode = mode === \"select\" && selected ? \"selected\" : mode;\r\n    const [chosenIDs, setChosenIDs] = useState<string[]>([]);\r\n    const chosenItems = useMemo(() => {\r\n      const IDSet = new Set(chosenIDs);\r\n      return group.filter((item) => IDSet.has(item.name));\r\n    }, [group, chosenIDs]);\r\n\r\n    const resetSelect = useCallback(() => {\r\n      setSelected(false);\r\n      setPath(undefined);\r\n      setRect(undefined);\r\n      setRotateHandle(undefined);\r\n    }, [setPath, setRect, setRotateHandle]);\r\n\r\n    useEffect(() => {\r\n      if (mode === \"select\") return resetSelect;\r\n    }, [mode, resetSelect]);\r\n    useEffect(() => resetSelect, [lasso, resetSelect]);\r\n\r\n    useEffect(() => {\r\n      if (!selected) return;\r\n      return () => {\r\n        setChosenIDs([]);\r\n        setActiveTool(\"\");\r\n      };\r\n    }, [selected, setActiveTool]);\r\n\r\n    const downPath = () => setPath(startStroke(drawCtrl));\r\n    const downRect = (e: paper.MouseEvent) => setRect(startRect(e.point));\r\n\r\n    const handleDown = {\r\n      draw: downPath,\r\n      erase: downPath,\r\n      select: lasso ? downPath : downRect,\r\n      selected(e: paper.MouseEvent) {\r\n        if (lasso) {\r\n          // if the point is outside of selection, reset selection\r\n          if (path?.contains(e.point)) return;\r\n          downPath();\r\n          setSelected(false);\r\n        } else {\r\n          // check if the point hit the segment point.\r\n          let hitRes =\r\n            rect?.hitTest(e.point, { segments: true }) ??\r\n            rotateHandle?.hitTest(e.point, { segments: true, selected: true });\r\n          hitRef.current = hitRes;\r\n          if (hitRes) return;\r\n\r\n          // if the point is outside of selection, reset selection\r\n          if (rect?.contains(e.point)) return;\r\n          downRect(e);\r\n          setRotateHandle(undefined);\r\n          setSelected(false);\r\n        }\r\n      },\r\n      text(e: paper.MouseEvent) {\r\n        const layer = scope.current.project.layers[1];\r\n        if (!layer) return;\r\n        const t = getClickedText(layer, e.point) ?? startText(e.point);\r\n        setPointText(t);\r\n      },\r\n    }[paperMode];\r\n\r\n    const dragPath = (e: paper.MouseEvent) => {\r\n      path?.add(e.point);\r\n      path?.smooth();\r\n    };\r\n    const resizeRect = (e: paper.MouseEvent) => {\r\n      if (!rect) return;\r\n      const { x, y } = e.point;\r\n      const [, s1, s2, s3] = rect.segments;\r\n      if (!s1 || !s2 || !s3) return;\r\n      s1.point.x = x;\r\n      s2.point = e.point;\r\n      s3.point.y = y;\r\n      rect.selected = true;\r\n    };\r\n\r\n    const handleDrag = {\r\n      draw: dragPath,\r\n      erase: dragPath,\r\n      select: lasso ? dragPath : resizeRect,\r\n      selected(e: paper.MouseEvent) {\r\n        const hitRes = hitRef.current;\r\n        if (hitRes?.segment && rect) {\r\n          const segment = hitRes.segment;\r\n          const rotating = segment.selected;\r\n          if (rotating) {\r\n            // rotate select items\r\n            const { center } = rect.bounds;\r\n            const axis = segment.point.subtract(center);\r\n            const line = e.point.subtract(center);\r\n            setCursor(getRotateCurcor(line.angle));\r\n            const angle = line.angle - axis.angle;\r\n            rect.rotate(angle, center);\r\n            rotateHandle?.rotate(angle, center);\r\n            chosenItems.forEach((item) => item?.rotate(angle, center));\r\n          } else {\r\n            // resize selected items\r\n            const moveP = segment.point;\r\n            const baseP = segment.next.next.point;\r\n            const diagonal = moveP.subtract(baseP);\r\n            const projection = e.point.subtract(baseP).project(diagonal);\r\n            const scale = projection.x / diagonal.x;\r\n            if (scale < 0) return;\r\n\r\n            rect.scale(scale, baseP);\r\n            rotateHandle?.scale(scale, baseP);\r\n            chosenItems.forEach((item) => {\r\n              item.scale(scale, baseP);\r\n              item.strokeWidth *= scale;\r\n            });\r\n          }\r\n        } else {\r\n          // move selected items\r\n          chosenItems.forEach((item) => item.translate(e.delta));\r\n          path?.translate(e.delta);\r\n          rect?.translate(e.delta);\r\n          rotateHandle?.translate(e.delta);\r\n        }\r\n      },\r\n      text(e: paper.MouseEvent) {\r\n        if (!pointText || pointText.name) return;\r\n        const { topCenter, bottomRight } = pointText.bounds;\r\n        const diagonal = bottomRight.subtract(topCenter);\r\n        const projection = e.point.subtract(topCenter).project(diagonal);\r\n        const scale = projection.x / diagonal.x;\r\n        if (scale < 0) return;\r\n        pointText.scale(scale, topCenter);\r\n      },\r\n    }[paperMode];\r\n\r\n    useEffect(() => {\r\n      scope.current.tool.maxDistance = eraserWidth;\r\n    }, [eraserWidth]);\r\n    const erased = useRef(new Set<string>());\r\n    const replaced = useRef(new Map<string, paper.Item>());\r\n\r\n    const handelToolDrag = (e: paper.ToolEvent) => {\r\n      if (paperMode !== \"erase\") return;\r\n      const layer = scope.current.project.layers[1];\r\n      const hitRes = layer?.hitTestAll(e.point, {\r\n        class: paper.Path,\r\n        stroke: true,\r\n        tolerance: eraserWidth / 2,\r\n      });\r\n\r\n      hitRes?.forEach(({ item }) => {\r\n        if (!(item instanceof paper.Path)) return;\r\n        let topItem: paper.PathItem = item;\r\n        while (topItem.parent !== layer) {\r\n          if (!(topItem.parent instanceof paper.PathItem)) break;\r\n          topItem = topItem.parent;\r\n        }\r\n        const { name } = topItem;\r\n\r\n        if (drawCtrl.pixelEraser) {\r\n          const radius = (eraserWidth + item.strokeWidth) / 2;\r\n          const circle = new Path.Circle(e.point, radius);\r\n          circle.remove();\r\n\r\n          const sub = item.subtract(circle, { trace: false });\r\n          item.replaceWith(sub);\r\n          if (topItem === item) topItem = sub;\r\n          replaced.current.set(name, topItem);\r\n        } else {\r\n          topItem.opacity = 0.5;\r\n          topItem.guide = true;\r\n          erased.current.add(name);\r\n        }\r\n      });\r\n    };\r\n\r\n    const handleUp = {\r\n      draw() {\r\n        if (!path || path.isEmpty()) return;\r\n        path.simplify();\r\n        const pathData = path.exportJSON();\r\n        setPath(undefined);\r\n        onChange((prev) => DrawState.addStroke(prev, pathData));\r\n      },\r\n      erase() {\r\n        setPath(undefined);\r\n        if (drawCtrl.pixelEraser) {\r\n          const items = Array.from(replaced.current);\r\n          replaced.current.clear();\r\n          const splitters: Splitter[] = items.map(([uid, item]) => {\r\n            const paths = flattenCP(item);\r\n            return [uid, paths.map((i) => i.exportJSON())];\r\n          });\r\n          if (!splitters.length) return;\r\n          onChange((prev) => DrawState.splitStrokes(prev, splitters));\r\n        } else {\r\n          const erasedList = Array.from(erased.current);\r\n          erased.current.clear();\r\n          if (!erasedList.length) return;\r\n          onChange((prev) => DrawState.eraseStrokes(prev, erasedList));\r\n        }\r\n      },\r\n      select() {\r\n        let selection: string[];\r\n        if (lasso) {\r\n          if (!path || Math.abs(path.area) < 1_000) return setPath(undefined);\r\n          path.closePath();\r\n          path.simplify();\r\n          moveDash(path);\r\n          selection = checkLasso(group, path);\r\n        } else {\r\n          if (!rect || Math.abs(rect.area) < 1_000) return setRect(undefined);\r\n          selection = checkLasso(group, rect);\r\n          const link = new Path();\r\n          const { topCenter } = rect.bounds;\r\n          link.add(topCenter, topCenter.subtract(new Point(0, 100)));\r\n          link.lastSegment.selected = true;\r\n          setRotateHandle(link);\r\n        }\r\n        setSelected(true);\r\n        setChosenIDs(selection);\r\n        setActiveTool(\"select\");\r\n      },\r\n      selected(e: paper.MouseEvent) {\r\n        updateMutation();\r\n        handleSelectedCursor(e);\r\n      },\r\n      text() {\r\n        setActiveTool(\"text\");\r\n      },\r\n    }[paperMode];\r\n\r\n    const [cursor, setCursor] = useState(\"auto\");\r\n    useEffect(() => {\r\n      if (paperMode === \"text\" || paperMode === \"select\") {\r\n        setCursor(\"crosshair\");\r\n      } else if (paperMode === \"selected\") {\r\n        setCursor(lasso ? \"crosshair\" : \"nwse-resize\");\r\n      } else if (paperMode === \"draw\" || paperMode === \"erase\") {\r\n        setCursor(getCircleCursor(drawCtrl, ratio));\r\n      }\r\n    }, [paperMode, lasso, drawCtrl, ratio]);\r\n\r\n    const handleSelectedCursor = (e: paper.MouseEvent) => {\r\n      const hitRes =\r\n        rect?.hitTest(e.point, { segments: true }) ??\r\n        rotateHandle?.hitTest(e.point, { segments: true, selected: true });\r\n      if (hitRes?.segment) {\r\n        if (hitRes.segment.selected) {\r\n          const center = rect?.bounds.center;\r\n          if (!center) return;\r\n          const line = hitRes.segment.point.subtract(center);\r\n          return setCursor(getRotateCurcor(line.angle));\r\n        }\r\n        const moveP = hitRes.segment.point;\r\n        const baseP = hitRes.segment.next.next.point;\r\n        const diagonal = moveP.subtract(baseP);\r\n        const { x, y } = diagonal;\r\n        setCursor(x * y < 0 ? \"nesw-resize\" : \"nwse-resize\");\r\n      } else if (rect?.contains(e.point) || path?.contains(e.point)) {\r\n        setCursor(\"move\");\r\n      } else {\r\n        setCursor(\"crosshair\");\r\n      }\r\n    };\r\n\r\n    const handleMove = {\r\n      selected: handleSelectedCursor,\r\n      text(e: paper.MouseEvent) {\r\n        const layer = scope.current.project.layers[1];\r\n        if (!layer) return;\r\n        if (getClickedText(layer, e.point)) setCursor(\"text\");\r\n        else setCursor(\"crosshair\");\r\n      },\r\n      select: null,\r\n      draw: null,\r\n      erase: null,\r\n    }[paperMode];\r\n\r\n    const handleViewEvent = () => {\r\n      if (readonly) return;\r\n\r\n      type Handler<E> = ((e: E) => boolean | void) | null;\r\n      const activate = <E,>(handler: Handler<E>): Handler<E> => {\r\n        return (e) => {\r\n          scope.current.activate();\r\n          if (handler) return handler(e);\r\n        };\r\n      };\r\n      const { view, tool } = scope.current;\r\n      view.onMouseDown = activate(handleDown);\r\n      view.onMouseDrag = activate(handleDrag);\r\n      view.onMouseUp = activate(handleUp);\r\n      view.onMouseMove = activate(handleMove);\r\n      tool.onMouseDrag = activate(handelToolDrag);\r\n    };\r\n    useEffect(handleViewEvent);\r\n\r\n    const updateMutation = () => {\r\n      if (!chosenItems?.length) return;\r\n      const mutations: Mutation[] = chosenItems.map((p) => [\r\n        p.name,\r\n        p.exportJSON(),\r\n      ]);\r\n      onChange((prev) => DrawState.mutateStrokes(prev, mutations));\r\n    };\r\n\r\n    const deleteSelected = () => {\r\n      setChosenIDs([]);\r\n      resetSelect();\r\n      if (!chosenIDs.length) return;\r\n      onChange((prev) => DrawState.eraseStrokes(prev, chosenIDs));\r\n    };\r\n\r\n    const mutateStyle = (updated: Partial<DrawCtrl>) => {\r\n      scope.current.activate();\r\n      updateGroupStyle(chosenItems, updated);\r\n      updateMutation();\r\n    };\r\n\r\n    const duplicateSelected = () => {\r\n      scope.current.activate();\r\n      const size = (rect || path)?.bounds.size;\r\n      if (!size || !chosenItems.length) return;\r\n      const { width, height } = size;\r\n      const transP = new Point(width, height).divide(10);\r\n      const copies = chosenItems.map((item) => item.clone());\r\n      copies.forEach((item) => item.translate(transP));\r\n      rect?.translate(transP);\r\n      path?.translate(transP);\r\n\r\n      const mutations: Mutation[] = copies.map((item) => [\r\n        DrawState.getUid(),\r\n        item.exportJSON(),\r\n      ]);\r\n      onChange((prev) => DrawState.mutateStrokes(prev, mutations));\r\n      setChosenIDs(mutations.map(([uid]) => uid));\r\n    };\r\n\r\n    const rasterize = () => {\r\n      const g = new Group(chosenItems);\r\n      const layer = scope.current.project.layers[1];\r\n      if (!layer) return \"\";\r\n      g.addTo(layer);\r\n      return g.rasterize({ insert: false }).toDataURL();\r\n    };\r\n\r\n    const [pointText, setPointText] = usePaperItem<paper.PointText>();\r\n    const cancelText = useCallback(() => {\r\n      setPointText(undefined);\r\n      setActiveTool(\"\");\r\n    }, [setPointText, setActiveTool]);\r\n\r\n    useEffect(() => {\r\n      if (mode === \"text\") return cancelText;\r\n    }, [mode, cancelText]);\r\n\r\n    const submitText = (\r\n      text: string,\r\n      color = \"#000\",\r\n      justification = \"center\"\r\n    ) => {\r\n      if (!pointText) return;\r\n      pointText.content = text;\r\n      pointText.fillColor = new Color(color);\r\n      pointText.justification = justification;\r\n      const pathData = pointText.exportJSON();\r\n      const { name } = pointText;\r\n      cancelText();\r\n      if (!name) return onChange((prev) => DrawState.addStroke(prev, pathData));\r\n      onChange((prev) => DrawState.mutateStrokes(prev, [[name, pathData]]));\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      deleteSelected,\r\n      duplicateSelected,\r\n      cancelText,\r\n      submitText,\r\n      mutateStyle,\r\n      rasterize,\r\n      pointText,\r\n    }));\r\n\r\n    usePreventGesture();\r\n    usePinch(\r\n      ({ memo, offset: [scale], first, last, origin }) => {\r\n        scope.current.activate();\r\n        const { view } = scope.current;\r\n        const originRawP = new Point(origin);\r\n\r\n        let lastScale: number;\r\n        let lastOrigin, elPos: paper.Point;\r\n        if (first || !memo) {\r\n          const { x, y } = canvasEl.current!.getBoundingClientRect();\r\n          lastScale = 1;\r\n          elPos = new Point(x, y);\r\n          lastOrigin = originRawP.subtract(elPos);\r\n        } else {\r\n          [lastScale, lastOrigin, elPos] = memo;\r\n        }\r\n\r\n        const originViewP = originRawP.subtract(elPos);\r\n        const originPorjP = view.viewToProject(originViewP);\r\n\r\n        if (Math.abs(1 - scale) < 0.05) scale = 1;\r\n        let dScale = first ? 1 : scale / lastScale;\r\n        let aniCount = last ? 10 : 1;\r\n        dScale = Math.pow(dScale, 1 / aniCount);\r\n        const scaleView = () => {\r\n          view.scale(dScale, originPorjP);\r\n          if (--aniCount > 0) requestAnimationFrame(scaleView);\r\n          else if (last) putCenterBack(view, new Size(width, height));\r\n        };\r\n        scaleView();\r\n\r\n        const deltaP = originViewP.subtract(lastOrigin);\r\n        const transP = deltaP.divide(view.zoom);\r\n        view.translate(transP);\r\n\r\n        if (!last) return [scale, originViewP, elPos];\r\n      },\r\n      {\r\n        scaleBounds: { max: 10, min: 0.3 },\r\n        rubberband: 0.5,\r\n        target: canvasEl,\r\n      }\r\n    );\r\n\r\n    const touchHandler = usePreventTouch(finger);\r\n    return (\r\n      <div\r\n        className=\"draw-wrapper\"\r\n        style={{ cursor }}\r\n        data-readonly={readonly}\r\n        {...touchHandler}\r\n      >\r\n        <canvas ref={canvasEl} className=\"draw-canvas\" />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nDraw.displayName = \"Draw\";\r\nexport default React.memo(Draw);\r\n\r\nfunction usePaperItem<T extends paper.Item>() {\r\n  const tuple = useState<T | undefined>();\r\n  const [item] = tuple;\r\n  useDebugValue(item);\r\n  useEffect(\r\n    () => () => {\r\n      if (!item?.name) item?.remove();\r\n    },\r\n    [item]\r\n  );\r\n  return tuple;\r\n}\r\n\r\nconst paintStroke = (stroke: Stroke, layer: paper.Layer, readonly = false) => {\r\n  let { pathData, uid } = stroke;\r\n  try {\r\n    const item = layer.importJSON(pathData);\r\n    if (!item) return new paper.Item();\r\n    item.name = uid;\r\n    item.guide = readonly;\r\n    return item;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return new paper.Item();\r\n  }\r\n};\r\n\r\nconst paintBackground = (\r\n  scope: paper.PaperScope,\r\n  width: number,\r\n  height: number\r\n) => {\r\n  scope.activate();\r\n  const bgRect = new Path.Rectangle(new Point(0, 0), new Point(width, height));\r\n  bgRect.fillColor = new Color(\"#fff\");\r\n  scope.project.layers[0]?.addChild(bgRect);\r\n  return bgRect;\r\n};\r\n\r\nconst startRect = (point: paper.Point) => {\r\n  const rect = new Path.Rectangle(point, new Size(0, 0));\r\n  rect.onFrame = () => {}; // the handle size bug\r\n  return rect;\r\n};\r\n\r\nconst startStroke = (drawCtrl: DrawCtrl) => {\r\n  let { mode, lineWidth, eraserWidth, color, highlight } = drawCtrl;\r\n  const path = new Path();\r\n  if (mode === \"erase\") {\r\n    color = \"#ccc\";\r\n    lineWidth = eraserWidth;\r\n  }\r\n  if (mode === \"select\") {\r\n    color = \"#1890ff\";\r\n    lineWidth = 5;\r\n  }\r\n  const strokeColor = new Color(color);\r\n  if (highlight || mode === \"erase\") {\r\n    strokeColor.alpha = 0.5;\r\n    path.blendMode = \"multiply\";\r\n  }\r\n  path.strokeColor = strokeColor;\r\n  path.strokeWidth = lineWidth;\r\n  path.strokeJoin = \"round\";\r\n  path.strokeCap = \"round\";\r\n  path.guide = true;\r\n  return path;\r\n};\r\n\r\nconst moveDash = (item: paper.Item) => {\r\n  item.dashOffset = 0;\r\n  item.dashArray = [30, 20];\r\n  item.onFrame = () => (item.dashOffset += 3);\r\n};\r\n\r\nconst getCenterTranslate = (\r\n  view: paper.View,\r\n  projSize: paper.Size\r\n): [number, number] => {\r\n  const { x, y } = view.center;\r\n  const { width: viewW, height: viewH } = view.size;\r\n  const { width: projW, height: projH } = projSize;\r\n\r\n  const [minX, minY] = [Math.min(viewW, projW) / 2, Math.min(viewH, projH) / 2];\r\n  const [maxX, maxY] = [projW - minX, projH - minY];\r\n\r\n  const deltaX = x < minX ? minX - x : x > maxX ? maxX - x : 0;\r\n  const deltaY = y < minY ? minY - y : y > maxY ? maxY - y : 0;\r\n\r\n  return [deltaX, deltaY];\r\n};\r\n\r\nconst putCenterBack = (view: paper.View, projSize: paper.Size) => {\r\n  const [deltaX, deltaY] = getCenterTranslate(view, projSize);\r\n  let aniCount = 10;\r\n  const dP = new Point(deltaX, deltaY).divide(-aniCount);\r\n  const move = () => {\r\n    view.translate(dP);\r\n    if (--aniCount > 0) requestAnimationFrame(move);\r\n  };\r\n  move();\r\n};\r\n\r\nconst checkLasso = (items: paper.Item[], selection: paper.Path) => {\r\n  const isInside = (p: paper.Path) => {\r\n    const res = p.subtract(selection, { insert: false, trace: false });\r\n    res.remove();\r\n    return !res.compare(p);\r\n  };\r\n  return items\r\n    .filter((item) => {\r\n      if (!item.name) return false;\r\n      if (!item.bounds.intersects(selection.bounds)) return false;\r\n      if (item instanceof paper.Path) {\r\n        return isInside(item);\r\n      } else {\r\n        const checkedP = new Path.Rectangle(item.bounds);\r\n        checkedP.remove();\r\n        return isInside(checkedP) || selection.isInside(item.bounds);\r\n      }\r\n    })\r\n    .map(({ name }) => name);\r\n};\r\n\r\nconst updateGroupStyle = (items: paper.Item[], updated: Partial<DrawCtrl>) => {\r\n  const { lineWidth, color, highlight } = updated;\r\n  items.forEach((item) => {\r\n    if (item instanceof paper.PointText && color) {\r\n      const newColor = new Color(color);\r\n      item.fillColor = newColor;\r\n    }\r\n\r\n    if (!(item instanceof paper.Path)) return;\r\n\r\n    if (color) {\r\n      const newColor = new Color(color);\r\n      if (item.blendMode === \"multiply\") newColor.alpha = 0.5;\r\n      item.strokeColor = newColor;\r\n    }\r\n\r\n    if (lineWidth) item.strokeWidth = lineWidth;\r\n\r\n    if (!item.strokeColor || highlight === undefined) return;\r\n    item.strokeColor.alpha = highlight ? 0.5 : 1;\r\n    item.blendMode = highlight ? \"multiply\" : \"normal\";\r\n  });\r\n};\r\n\r\nconst getClickedText = (layer: paper.Layer, point: paper.Point) => {\r\n  const hitRes = layer.hitTest(point, {\r\n    class: paper.PointText,\r\n    fill: true,\r\n  });\r\n  if (hitRes?.item instanceof paper.PointText) return hitRes?.item;\r\n};\r\n\r\nconst startText = (point: paper.Point) => {\r\n  return new paper.PointText({\r\n    point: point.add(new Point(0, 50)),\r\n    content: \"Insert text...\",\r\n    fontSize: 50,\r\n    justification: \"center\",\r\n    fillColor: \"#1890ff55\",\r\n  });\r\n};\r\n\r\nconst flattenCP = (cp: paper.Item): paper.Path[] => {\r\n  if (cp instanceof paper.Path) {\r\n    return cp.isEmpty() ? [] : [cp];\r\n  }\r\n  if (cp instanceof paper.CompoundPath) {\r\n    return cp.children.map(flattenCP).flat();\r\n  }\r\n  return [];\r\n};\r\n","import { Button, message } from \"antd\";\r\nimport { useContext } from \"react\";\r\nimport { ReaderMethodCtx } from \"./Reader\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nexport const AddPageButton = () => {\r\n  const { addFinalPage } = useContext(ReaderMethodCtx);\r\n  return (\r\n    <div className=\"add-btn-wrapper\">\r\n      <Button\r\n        type=\"dashed\"\r\n        icon={<PlusOutlined />}\r\n        block\r\n        onClick={addFinalPage}\r\n      >\r\n        New page\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const showPageDelMsg = (onUndo: () => void) => {\r\n  message.warning({\r\n    content: (\r\n      <>\r\n        One page was deleted.\r\n        <Button\r\n          size=\"small\"\r\n          type=\"link\"\r\n          onClick={() => {\r\n            message.destroy(\"DELETE\");\r\n            onUndo();\r\n          }}\r\n        >\r\n          Undo\r\n        </Button>\r\n      </>\r\n    ),\r\n    key: \"DELETE\",\r\n    duration: 10,\r\n  });\r\n};\r\n","import { createFromIconfontCN } from \"@ant-design/icons\";\r\n\r\nexport default createFromIconfontCN({\r\n  scriptUrl: \"//at.alicdn.com/t/font_3181679_yo844n7qgns.js\",\r\n});\r\n","import { CSSProperties, FC, useEffect, useMemo, useState } from \"react\";\r\nimport { defaultWidthList, DrawCtrl } from \"../../../lib/draw/DrawCtrl\";\r\nimport { ColorCirle } from \"../../widgets/ColorCircle\";\r\nimport { WIDTH } from \"../../../lib/draw/DrawState\";\r\nimport { Popover, Segmented, Slider } from \"antd\";\r\nimport { allColors } from \"../../../lib/color\";\r\nimport { Setter } from \"../../../lib/hooks\";\r\nimport IconFont from \"../../ui/IconFont\";\r\nimport { List } from \"immutable\";\r\nimport \"./penPanel.sass\";\r\nimport { useForceLight } from \"../../../lib/Dark\";\r\n\r\nexport const PenPanel: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n  drawCtrl: Partial<DrawCtrl>;\r\n}> = ({ updateDrawCtrl, drawCtrl }) => {\r\n  const { highlight, color } = drawCtrl;\r\n  const [panelBlur, setPanelBlur] = useState(false);\r\n\r\n  return (\r\n    <div className=\"pen-panel\" data-blur={panelBlur} data-hi={highlight}>\r\n      <div className=\"pen-status\">\r\n        <WidthSelect\r\n          updateDrawCtrl={updateDrawCtrl}\r\n          drawCtrl={drawCtrl}\r\n          setPanelBlur={setPanelBlur}\r\n        />\r\n        <HighlightSwitch checked={highlight} updateDrawCtrl={updateDrawCtrl} />\r\n      </div>\r\n      <ColorSelect\r\n        color={color || \"\"}\r\n        setColor={(c) => updateDrawCtrl({ color: c })}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const WidthSelect: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n  drawCtrl: Partial<DrawCtrl>;\r\n  setPanelBlur?: Setter<boolean>;\r\n  field?: \"lineWidth\" | \"eraserWidth\";\r\n}> = ({\r\n  updateDrawCtrl,\r\n  drawCtrl,\r\n  setPanelBlur = () => {},\r\n  field = \"lineWidth\",\r\n}) => {\r\n  const currWidth = drawCtrl[field];\r\n  const widthList = drawCtrl.widthList ?? defaultWidthList;\r\n  const color = field === \"lineWidth\" ? drawCtrl.color ?? \"#aaa\" : \"#aaa\";\r\n\r\n  const chosen = useMemo(\r\n    () => widthList.indexOf(currWidth ?? -1),\r\n    [currWidth, widthList]\r\n  );\r\n\r\n  const [popShow, setPopShow] = useState(List([false, false, false, false]));\r\n  useEffect(() => {\r\n    if (popShow.includes(true)) setPanelBlur(true);\r\n    else setPanelBlur(false);\r\n  }, [popShow, setPanelBlur]);\r\n\r\n  const realSizeStyle = (width: number) =>\r\n    ({\r\n      \"--real-size\": `calc(${100 / WIDTH}vw * ${width})`,\r\n    } as CSSProperties);\r\n\r\n  const options = [\r\n    { value: -1, label: null },\r\n    ...widthList.map((width, index) => ({\r\n      value: index,\r\n      label: (\r\n        <Popover\r\n          visible={popShow.get(index)}\r\n          onVisibleChange={(v) => setPopShow((prev) => prev.set(index, v))}\r\n          trigger={chosen === index ? [\"click\"] : []}\r\n          placement=\"bottom\"\r\n          destroyTooltipOnHide\r\n          content={\r\n            <Slider\r\n              min={5}\r\n              max={100}\r\n              className=\"ctrl-slider\"\r\n              defaultValue={width}\r\n              onAfterChange={(w) => {\r\n                if (widthList.includes(w)) {\r\n                  setPopShow((prev) => prev.set(index, false));\r\n                  return updateDrawCtrl({ [field]: w });\r\n                }\r\n                const newWL = widthList.slice();\r\n                newWL[index] = w;\r\n                updateDrawCtrl({ widthList: newWL, [field]: w });\r\n              }}\r\n            />\r\n          }\r\n        >\r\n          <div className=\"circle-wrapper\" style={realSizeStyle(width)}>\r\n            <ColorCirle className={\"width-circle \" + field} color={color} />\r\n          </div>\r\n        </Popover>\r\n      ),\r\n    })),\r\n  ];\r\n\r\n  return (\r\n    <Segmented\r\n      className=\"width-seg\"\r\n      value={chosen}\r\n      options={options}\r\n      onChange={(i) => updateDrawCtrl({ [field]: widthList[+i] ?? 10 })}\r\n    />\r\n  );\r\n};\r\n\r\nconst HighlightSwitch: FC<{\r\n  checked?: boolean;\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ checked = false, updateDrawCtrl }) => {\r\n  return (\r\n    <label className=\"hi-wrapper\">\r\n      <input\r\n        type=\"checkbox\"\r\n        name=\"highlight\"\r\n        checked={checked}\r\n        onChange={(e) => updateDrawCtrl({ highlight: e.target.checked })}\r\n      />\r\n      <div className=\"hi-switch\">\r\n        <IconFont type=\"icon-Highlight\" />\r\n      </div>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport const ColorSelect: FC<{\r\n  color: string;\r\n  setColor: (color: string) => void;\r\n}> = ({ setColor, color }) => {\r\n  const [forceLight] = useForceLight();\r\n  return (\r\n    <div className=\"color-select\" data-force-light={forceLight}>\r\n      {allColors.map((c) => (\r\n        <label key={c}>\r\n          <input\r\n            checked={color === c}\r\n            type=\"radio\"\r\n            name=\"color\"\r\n            onChange={(e) => e.target.checked && setColor(c)}\r\n          />\r\n          <div\r\n            data-color={c}\r\n            className=\"circle\"\r\n            style={{ backgroundColor: c, borderColor: c }}\r\n          />\r\n        </label>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import { FC, RefObject, useEffect, useState } from \"react\";\r\nimport {\r\n  CopyOutlined,\r\n  DeleteOutlined,\r\n  PictureOutlined,\r\n  BgColorsOutlined,\r\n  AlignLeftOutlined,\r\n  FontColorsOutlined,\r\n  AlignRightOutlined,\r\n  AlignCenterOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Button, ButtonProps, Modal, Popover, Radio } from \"antd\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { DrawCtrl } from \"../../../lib/draw/DrawCtrl\";\r\nimport { ColorSelect, PenPanel } from \"./PenPanel\";\r\nimport { useForceLight } from \"../../../lib/Dark\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { allColors } from \"../../../lib/color\";\r\nimport { DrawRefType } from \"../../draw/Draw\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { saveAs } from \"file-saver\";\r\nimport \"./drawTools.sass\";\r\n\r\nexport const SelectTool: FC<{\r\n  drawRef: RefObject<DrawRefType>;\r\n  visible: boolean;\r\n}> = ({ drawRef, visible }) => (\r\n  <CSSTransition timeout={300} in={visible} unmountOnExit>\r\n    <SelectToolContent drawRef={drawRef} />\r\n  </CSSTransition>\r\n);\r\n\r\nexport const SelectToolContent: FC<{\r\n  drawRef: RefObject<DrawRefType>;\r\n}> = ({ drawRef }) => {\r\n  const btnProps: ButtonProps = {\r\n    type: \"text\",\r\n    shape: \"round\",\r\n    size: \"small\",\r\n  };\r\n\r\n  const [currDrawCtrl, setCurrDrawCtrl] = useState<Partial<DrawCtrl>>({});\r\n\r\n  const getRaster = () => {\r\n    if (!drawRef.current) return;\r\n    const imageData = drawRef.current.rasterize();\r\n    Modal.confirm({\r\n      title: \"Screenshot\",\r\n      content: <img className=\"raster\" src={imageData} alt=\"raster\" />,\r\n      className: \"raster-modal\",\r\n      icon: <PictureOutlined />,\r\n      okText: \"Save\",\r\n      onOk: () => saveAs(imageData, \"screenshot\"),\r\n    });\r\n  };\r\n\r\n  return createPortal(\r\n    <div className=\"select-tool\">\r\n      <Popover\r\n        trigger=\"click\"\r\n        placement=\"bottom\"\r\n        getPopupContainer={(e) => e.parentElement!}\r\n        destroyTooltipOnHide\r\n        content={\r\n          <PenPanel\r\n            updateDrawCtrl={(updated) => {\r\n              setCurrDrawCtrl((prev) => ({ ...prev, ...updated }));\r\n              drawRef.current?.mutateStyle(updated);\r\n            }}\r\n            drawCtrl={currDrawCtrl}\r\n          />\r\n        }\r\n      >\r\n        <Button icon={<BgColorsOutlined />} {...btnProps} />\r\n      </Popover>\r\n      <Button\r\n        icon={<CopyOutlined />}\r\n        onClick={() => drawRef.current?.duplicateSelected()}\r\n        {...btnProps}\r\n      />\r\n      <Button icon={<PictureOutlined />} onClick={getRaster} {...btnProps} />\r\n      <Button\r\n        danger\r\n        icon={<DeleteOutlined />}\r\n        onClick={() => drawRef.current?.deleteSelected()}\r\n        {...btnProps}\r\n      />\r\n    </div>,\r\n    document.querySelector(\".reader.container > header\")!\r\n  );\r\n};\r\n\r\nexport const TextTool: FC<{\r\n  drawRef: RefObject<DrawRefType>;\r\n  visible: boolean;\r\n}> = ({ visible, drawRef }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [color, setColor] = useState(allColors[0]!);\r\n  const [align, setAlign] = useState(\"center\");\r\n  const [forceLight] = useForceLight();\r\n\r\n  useEffect(() => {\r\n    const pointText = drawRef.current?.pointText;\r\n    if (!pointText || !visible) return;\r\n    const { name, content, justification, fillColor } = pointText;\r\n    setAlign(justification);\r\n    if (name) {\r\n      setText(content);\r\n      setColor(fillColor?.toCSS(true) ?? allColors[0]!);\r\n    } else {\r\n      setText(\"\");\r\n      setColor(allColors[0]!);\r\n    }\r\n  }, [visible, drawRef]);\r\n\r\n  const fontColorBtn = (\r\n    <Popover\r\n      content={<ColorSelect color={color} setColor={setColor} />}\r\n      overlayStyle={{ width: 200 }}\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e.parentElement!}\r\n    >\r\n      <Button\r\n        size=\"small\"\r\n        icon={<FontColorsOutlined className=\"font-icon\" style={{ color }} />}\r\n      />\r\n    </Popover>\r\n  );\r\n\r\n  const alignRadio = (\r\n    <Radio.Group\r\n      size=\"small\"\r\n      optionType=\"button\"\r\n      value={align}\r\n      buttonStyle=\"solid\"\r\n      onChange={(e) => setAlign(e.target.value)}\r\n      options={[\r\n        { label: <AlignLeftOutlined />, value: \"left\" },\r\n        { label: <AlignCenterOutlined />, value: \"center\" },\r\n        { label: <AlignRightOutlined />, value: \"right\" },\r\n      ]}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      title=\"Insert text\"\r\n      onCancel={() => drawRef.current?.cancelText()}\r\n      onOk={() => {\r\n        const content = text.trim();\r\n        if (!content) return drawRef.current?.cancelText();\r\n        drawRef.current?.submitText(content, color, align);\r\n      }}\r\n      bodyStyle={{ paddingTop: 0 }}\r\n      destroyOnClose\r\n    >\r\n      <div className=\"insert-option\" data-force-light={forceLight}>\r\n        {fontColorBtn}\r\n        {alignRadio}\r\n      </div>\r\n      <TextArea\r\n        size=\"large\"\r\n        rows={3}\r\n        autoFocus\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n","import { useDebugValue, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport localforage from \"localforage\";\r\nimport { Map } from \"immutable\";\r\n\r\nconst scrollForage = localforage.createInstance({ name: \"scroll\" });\r\n\r\nexport function useScrollPage(noteID: string, pageOrder = [] as string[]) {\r\n  const [refMap, setRefMap] = useState(Map<string, HTMLElement>());\r\n  const scrolled = useRef(false);\r\n  const [prevPageID, setPrevPageID] = useState(\"\");\r\n  const [inviewRatios, setInviewRatios] = useState(Map<string, number>());\r\n  const currPageID = useMemo(\r\n    () => largestKey(inviewRatios, pageOrder),\r\n    [inviewRatios, pageOrder]\r\n  );\r\n  useDebugValue(currPageID);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const stored = await scrollForage.getItem<string>(noteID);\r\n      if (!stored) return (scrolled.current = true);\r\n      setPrevPageID(stored);\r\n    })();\r\n  }, [noteID]);\r\n\r\n  useEffect(() => {\r\n    if (scrolled.current || !refMap.has(prevPageID)) return;\r\n    requestAnimationFrame(() => {\r\n      refMap.get(prevPageID)?.scrollIntoView();\r\n      scrolled.current = true;\r\n    });\r\n  }, [prevPageID, refMap]);\r\n\r\n  useEffect(() => {\r\n    if (!scrolled.current) return;\r\n    scrollForage.setItem(noteID, currPageID);\r\n  }, [noteID, currPageID]);\r\n\r\n  const sectionRef = (pageID: string) => (el: HTMLElement | null) => {\r\n    if (!el) return;\r\n    setRefMap((prev) => prev.set(pageID, el));\r\n  };\r\n\r\n  const scrollPage = (pageID: string) => {\r\n    refMap.get(pageID)?.scrollIntoView();\r\n  };\r\n\r\n  return { scrollPage, setInviewRatios, sectionRef, currPageID };\r\n}\r\n\r\nconst largestKey = (map: Map<string, number>, order: string[]) => {\r\n  let result = \"\";\r\n  let maxRatio = 0;\r\n  for (let key of order) {\r\n    const ratio = map.get(key);\r\n    if (!ratio) continue;\r\n    if (ratio === 1) return key;\r\n    if (ratio > maxRatio) {\r\n      result = key;\r\n      maxRatio = ratio;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n","export function exchange<T>(list: T[], fromIndex: number, toIndex: number) {\r\n  const result = list.slice();\r\n  const [removed] = result.splice(fromIndex, 1);\r\n  if (!removed) return list;\r\n  result.splice(toIndex, 0, removed);\r\n  return result;\r\n}\r\n\r\nexport function insertAfter<T>(list: T[], prevItem: T, newItem: T) {\r\n  const prevIndex = list.indexOf(prevItem);\r\n  const curr = list.slice();\r\n  if (prevIndex === -1) return curr;\r\n  curr.splice(prevIndex + 1, 0, newItem);\r\n  return curr;\r\n}\r\n","import { FC } from \"react\";\nimport { Button } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport { HomeFilled, SaveOutlined } from \"@ant-design/icons\";\n\nexport const HeaderLeft: FC<{\n  saved: boolean;\n  instantSave: () => Promise<void> | undefined;\n}> = ({ saved, instantSave }) => {\n  const nav = useNavigate();\n  return (\n    <div className=\"left\">\n      <Button\n        type=\"text\"\n        onClick={async () => {\n          await instantSave();\n          nav(\"/\");\n        }}\n        icon={<HomeFilled style={{ opacity: 0.8 }} />}\n      />\n      <Button\n        type=\"text\"\n        className=\"save\"\n        onClick={instantSave}\n        disabled={saved}\n        icon={<SaveOutlined />}\n      />\n    </div>\n  );\n};\n","import { FC, useContext } from \"react\";\r\nimport { Button, message, Popover, ButtonProps, Segmented } from \"antd\";\r\nimport { ReaderStateCtx } from \"../Reader\";\r\nimport {\r\n  BulbFilled,\r\n  BulbOutlined,\r\n  UndoOutlined,\r\n  RedoOutlined,\r\n  GatewayOutlined,\r\n  HighlightOutlined,\r\n} from \"@ant-design/icons\";\r\nimport IconFont from \"../../ui/IconFont\";\r\nimport { PenPanel, WidthSelect } from \"../tools/PenPanel\";\r\nimport { useForceLight } from \"../../../lib/Dark\";\r\nimport { useDrawCtrl, useUpdateDrawCtrl } from \"../../../lib/draw/DrawCtrl\";\r\n\r\nexport const HeaderMiddle: FC<{\r\n  handleUndo: () => void;\r\n  handleRedo: () => void;\r\n}> = ({ handleUndo, handleRedo }) => {\r\n  const { stateSet } = useContext(ReaderStateCtx);\r\n  const { mode, finger } = useDrawCtrl();\r\n  const updateDrawCtrl = useUpdateDrawCtrl();\r\n  const [forceLight, setForceLight] = useForceLight();\r\n\r\n  return (\r\n    <div className=\"middle\">\r\n      <Button\r\n        type=\"text\"\r\n        shape=\"circle\"\r\n        icon={<UndoOutlined />}\r\n        onClick={handleUndo}\r\n        disabled={!stateSet?.isUndoable()}\r\n      />\r\n      <Button\r\n        type=\"text\"\r\n        shape=\"circle\"\r\n        icon={<RedoOutlined />}\r\n        onClick={handleRedo}\r\n        disabled={!stateSet?.isRedoable()}\r\n      />\r\n      <Button\r\n        type={finger ? \"default\" : \"text\"}\r\n        shape=\"circle\"\r\n        onClick={() => {\r\n          updateDrawCtrl({ finger: !finger });\r\n          message.destroy(\"FINGER\");\r\n          message.open({\r\n            content: finger ? \"Pencil only\" : \"Draw with finger\",\r\n            key: \"FINGER\",\r\n          });\r\n        }}\r\n        icon={<IconFont type=\"icon-finger\" />}\r\n      />\r\n      <Button\r\n        className=\"force-light-btn\"\r\n        type=\"text\"\r\n        shape=\"circle\"\r\n        icon={forceLight ? <BulbFilled /> : <BulbOutlined />}\r\n        onClick={() => setForceLight((prev) => !prev)}\r\n      />\r\n      <PenButton />\r\n      <EraserButton />\r\n      <Button\r\n        type={mode === \"text\" ? \"default\" : \"text\"}\r\n        shape=\"circle\"\r\n        onClick={() => updateDrawCtrl({ mode: \"text\" })}\r\n        icon={<IconFont type=\"icon-text1\" />}\r\n      />\r\n      <SelectButton />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PenButton = () => {\r\n  const drawCtrl = useDrawCtrl();\r\n  const updateDrawCtrl = useUpdateDrawCtrl();\r\n\r\n  const btnProps: ButtonProps = {\r\n    shape: \"circle\",\r\n    icon: <HighlightOutlined />,\r\n  };\r\n  return drawCtrl.mode === \"draw\" ? (\r\n    <Popover\r\n      content={<PenPanel updateDrawCtrl={updateDrawCtrl} drawCtrl={drawCtrl} />}\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e.parentElement!}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button type=\"default\" {...btnProps} />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      onClick={() => updateDrawCtrl({ mode: \"draw\" })}\r\n      {...btnProps}\r\n    />\r\n  );\r\n};\r\n\r\nconst EraserButton = () => {\r\n  const drawCtrl = useDrawCtrl();\r\n  const { mode, pixelEraser } = drawCtrl;\r\n  const updateDrawCtrl = useUpdateDrawCtrl();\r\n\r\n  const btnProps: ButtonProps = {\r\n    shape: \"circle\",\r\n    icon: <IconFont type=\"icon-eraser\" />,\r\n  };\r\n\r\n  return mode === \"erase\" ? (\r\n    <Popover\r\n      content={\r\n        <div className=\"width-seg-wrapper\">\r\n          <Segmented\r\n            block\r\n            size=\"small\"\r\n            className=\"pixel-seg\"\r\n            options={[\"Pixel\", \"Object\"]}\r\n            value={pixelEraser ? \"Pixel\" : \"Object\"}\r\n            onChange={(value) => {\r\n              if (value === \"Pixel\") updateDrawCtrl({ pixelEraser: true });\r\n              else updateDrawCtrl({ pixelEraser: false });\r\n            }}\r\n          />\r\n          <WidthSelect\r\n            drawCtrl={drawCtrl}\r\n            updateDrawCtrl={updateDrawCtrl}\r\n            field=\"eraserWidth\"\r\n          />\r\n        </div>\r\n      }\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e.parentElement!}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button type=\"default\" {...btnProps} />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      onClick={() => updateDrawCtrl({ mode: \"erase\" })}\r\n      {...btnProps}\r\n    />\r\n  );\r\n};\r\n\r\nconst SelectButton = () => {\r\n  const { lasso, mode } = useDrawCtrl();\r\n  const updateDrawCtrl = useUpdateDrawCtrl();\r\n\r\n  const icon = lasso ? <IconFont type=\"icon-lasso1\" /> : <GatewayOutlined />;\r\n\r\n  return mode === \"select\" ? (\r\n    <Button\r\n      type=\"default\"\r\n      shape=\"circle\"\r\n      icon={icon}\r\n      onClick={() => updateDrawCtrl({ lasso: !lasso })}\r\n    />\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      shape=\"circle\"\r\n      icon={icon}\r\n      onClick={() => updateDrawCtrl({ mode: \"select\" })}\r\n    />\r\n  );\r\n};\r\n","import { Avatar } from \"antd\";\nimport { AvatarSize } from \"antd/lib/avatar/SizeContext\";\nimport { FC, useContext, useMemo } from \"react\";\nimport { getHashedColor } from \"../../lib/color\";\nimport { TeamCtx } from \"../reader/Team\";\n\nexport const UserAvatar: FC<{\n  userID: string;\n  size?: AvatarSize;\n  onClick?: () => void;\n  chosen?: boolean;\n  className?: string;\n}> = ({\n  userID,\n  size = \"default\",\n  onClick = () => {},\n  chosen = false,\n  className,\n}) => {\n  const { userRec } = useContext(TeamCtx);\n  const color = useMemo(() => getHashedColor(userID), [userID]);\n  const userInfo = userRec[userID];\n  if (!userInfo) return null;\n  const { userName } = userInfo;\n\n  return (\n    <Avatar\n      className={className}\n      data-chosen={chosen}\n      size={size}\n      style={{ backgroundColor: color }}\n    >\n      <div className=\"avatar-wrapper\" onClick={onClick}>\n        {userName?.slice(0, 3)}\n      </div>\n    </Avatar>\n  );\n};\n","import { FC, useRef, useMemo, useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  MoreOutlined,\r\n  PlusOutlined,\r\n  CopyOutlined,\r\n  DeleteOutlined,\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  Draggable,\r\n  Droppable,\r\n  DropResult,\r\n  DragDropContext,\r\n} from \"react-beautiful-dnd\";\r\nimport { ActiveKeyProvider, Setter, useActiveKey } from \"../../lib/hooks\";\r\nimport { PageWrapper, ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport { Avatar, Button, Drawer, Menu, Popover, Tabs } from \"antd\";\r\nimport { UserAvatar } from \"../widgets/UserAvatar\";\r\nimport { useForceLight } from \"../../lib/Dark\";\r\nimport { AddPageButton } from \"./ReaderUtils\";\r\nimport { exchange } from \"./lib/array\";\r\nimport IconFont from \"../ui/IconFont\";\r\nimport classNames from \"classnames\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport \"./preview.sass\";\r\n\r\nconst PageNavContent = () => {\r\n  const { pageOrder, currPageID } = useContext(ReaderStateCtx);\r\n  const { scrollPage, saveReorder } = useContext(ReaderMethodCtx);\r\n  const [forceLight] = useForceLight();\r\n  const [activeKey] = useActiveKey();\r\n  const refRec = useRef<Record<string, HTMLElement>>({});\r\n\r\n  const onDragEnd = ({ source, destination }: DropResult) => {\r\n    if (!destination || !pageOrder) return;\r\n    const { index: fromIndex } = source;\r\n    const { index: toIndex } = destination;\r\n    const pageID = pageOrder[fromIndex];\r\n    if (fromIndex === toIndex || !pageID) return;\r\n    const newOrder = exchange(pageOrder, fromIndex, toIndex);\r\n    saveReorder(newOrder, true);\r\n    requestAnimationFrame(() => scrollPage(pageID));\r\n  };\r\n\r\n  const title = {\r\n    ALL: \"All Pages\",\r\n    MARKED: \"Bookmarks\",\r\n    WRITTEN: \"Notes\",\r\n  }[activeKey];\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => refRec.current[currPageID]?.scrollIntoView(), []);\r\n\r\n  return (\r\n    <div className=\"preview-container\" data-force-light={forceLight}>\r\n      <PreviewTabs />\r\n      <h3>{title}</h3>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"preview-list\">\r\n          {({ droppableProps, innerRef, placeholder }) => (\r\n            <div className=\"page-list\" ref={innerRef} {...droppableProps}>\r\n              {pageOrder?.map((uid, index) => (\r\n                <PagePreview\r\n                  key={uid}\r\n                  uid={uid}\r\n                  pageIndex={index}\r\n                  refRec={refRec.current}\r\n                />\r\n              ))}\r\n              {placeholder}\r\n              {activeKey === \"ALL\" && <AddPageButton />}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PagePreview: FC<{\r\n  uid: string;\r\n  pageIndex: number;\r\n  refRec: Record<string, HTMLElement>;\r\n}> = ({ uid, pageIndex, refRec }) => {\r\n  const { stateSet, pageRec, currPageID } = useContext(ReaderStateCtx);\r\n  const { teamState } = useContext(TeamCtx);\r\n  const { scrollPage } = useContext(ReaderMethodCtx);\r\n  const [activeKey] = useActiveKey();\r\n  const [chosen, setChosen] = useState(\"\");\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n\r\n  if (!page || !drawState) return null;\r\n  const { image, marked } = page;\r\n\r\n  if (\r\n    activeKey === \"WRITTEN\" &&\r\n    drawState.isEmpty() &&\r\n    (!teamStateMap || teamStateMap.every((ds) => ds.isEmpty()))\r\n  ) {\r\n    return null;\r\n  }\r\n  if (activeKey === \"MARKED\" && !marked) return null;\r\n  const curr = currPageID === uid;\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={uid}\r\n      index={pageIndex}\r\n      isDragDisabled={activeKey !== \"ALL\"}\r\n    >\r\n      {(\r\n        { innerRef, draggableProps, dragHandleProps },\r\n        { isDragging: dragged }\r\n      ) => (\r\n        <div\r\n          ref={(e) => {\r\n            innerRef(e);\r\n            if (e) refRec[uid] = e;\r\n          }}\r\n          className=\"page\"\r\n          data-curr={curr}\r\n          data-dragged={dragged}\r\n          onClick={() => scrollPage(uid)}\r\n          {...draggableProps}\r\n          {...dragHandleProps}\r\n        >\r\n          <PageWrapper\r\n            drawState={teamStateMap?.get(chosen) || drawState}\r\n            teamStateMap={chosen ? undefined : teamStateMap}\r\n            thumbnail={image}\r\n            preview\r\n          />\r\n          <PreviewTools\r\n            uid={uid}\r\n            index={pageIndex}\r\n            chosen={chosen}\r\n            setChosen={setChosen}\r\n          />\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst PreviewTools: FC<{\r\n  uid: string;\r\n  index: number;\r\n  chosen: string;\r\n  setChosen: Setter<string>;\r\n}> = ({ uid, index, chosen, setChosen }) => {\r\n  const { switchPageMarked } = useContext(ReaderMethodCtx);\r\n  const { pageRec } = useContext(ReaderStateCtx);\r\n  const { ignores, teamState } = useContext(TeamCtx);\r\n  const userIDs = useMemo(\r\n    () =>\r\n      teamState\r\n        ?.getPageValidUsers(uid)\r\n        .filter((userID) => !ignores.has(userID)) || [],\r\n    [teamState, ignores, uid]\r\n  );\r\n  const page = pageRec?.get(uid);\r\n  if (!page) return null;\r\n  const { marked } = page;\r\n\r\n  return (\r\n    <div className=\"tools\" onClick={(e) => e.stopPropagation()}>\r\n      <div\r\n        className=\"bookmark\"\r\n        data-marked={marked}\r\n        onClick={() => switchPageMarked(uid)}\r\n      />\r\n      <div className=\"index\">{index + 1}</div>\r\n      <PreviewOption uid={uid} />\r\n      <TeamAvatars userIDs={userIDs} chosen={chosen} setChosen={setChosen} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TeamAvatars: FC<{\r\n  userIDs: string[];\r\n  chosen: string;\r\n  setChosen: Setter<string>;\r\n}> = ({ userIDs, chosen, setChosen }) => {\r\n  return (\r\n    <Avatar.Group\r\n      maxCount={2}\r\n      size=\"default\"\r\n      className={classNames(\"team-group\", { chosen })}\r\n      maxPopoverPlacement=\"bottom\"\r\n    >\r\n      {userIDs.map((userID) => (\r\n        <UserAvatar\r\n          key={userID}\r\n          size=\"default\"\r\n          userID={userID}\r\n          className=\"preview-avatar\"\r\n          chosen={chosen === userID}\r\n          onClick={() => setChosen((prev) => (prev === userID ? \"\" : userID))}\r\n        />\r\n      ))}\r\n    </Avatar.Group>\r\n  );\r\n};\r\n\r\nconst PreviewOption = ({ uid }: { uid: string }) => {\r\n  const { addPage, deletePage } = useContext(ReaderMethodCtx);\r\n\r\n  const menu = (\r\n    <Menu\r\n      onClick={({ key }) => {\r\n        if (key === \"ADD\") {\r\n          addPage(uid);\r\n        } else if (key === \"COPY\") {\r\n          addPage(uid, true);\r\n        } else if (key === \"DELETE\") {\r\n          deletePage(uid);\r\n        }\r\n      }}\r\n      items={[\r\n        { key: \"ADD\", icon: <PlusOutlined />, label: \"Add page\" },\r\n        { key: \"COPY\", icon: <CopyOutlined />, label: \"Duplicate\" },\r\n        {\r\n          key: \"DELETE\",\r\n          icon: <DeleteOutlined />,\r\n          label: \"Delete\",\r\n          danger: true,\r\n        },\r\n      ]}\r\n    ></Menu>\r\n  );\r\n  return (\r\n    <Popover\r\n      content={menu}\r\n      trigger=\"click\"\r\n      placement=\"left\"\r\n      destroyTooltipOnHide\r\n    >\r\n      <div className=\"option\">\r\n        <MoreOutlined />\r\n      </div>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst PreviewTabs = () => {\r\n  const [activeKey, setActiveKey] = useActiveKey();\r\n  const { TabPane } = Tabs;\r\n  return (\r\n    <Tabs\r\n      className=\"tabs\"\r\n      activeKey={activeKey}\r\n      onChange={setActiveKey}\r\n      tabBarGutter={10}\r\n      size=\"small\"\r\n      centered\r\n    >\r\n      <TabPane tab={<IconFont type=\"icon-uf_paper\" />} key=\"ALL\" />\r\n      <TabPane tab={<IconFont type=\"icon-bookmark2\" />} key=\"MARKED\" />\r\n      <TabPane tab={<IconFont type=\"icon-write\" />} key=\"WRITTEN\" />\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default function PageNav() {\r\n  const [navOn, setNavOn] = useState(false);\r\n\r\n  return (\r\n    <ActiveKeyProvider initKey=\"ALL\">\r\n      <Button\r\n        type=\"text\"\r\n        icon={navOn ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\r\n        onClick={() => setNavOn((prev) => !prev)}\r\n      />\r\n      <Drawer\r\n        visible={navOn}\r\n        onClose={() => setNavOn(false)}\r\n        width={200}\r\n        closable={false}\r\n        zIndex={800}\r\n        className=\"preview-drawer\"\r\n        bodyStyle={{ padding: 0, overflow: \"hidden\" }}\r\n        headerStyle={{ textAlign: \"center\" }}\r\n        destroyOnClose\r\n      >\r\n        <PageNavContent />\r\n      </Drawer>\r\n    </ActiveKeyProvider>\r\n  );\r\n}\r\n","import { FC, useMemo, useState, useEffect, useContext } from \"react\";\r\nimport { Badge, Alert, Modal, Button, Divider, message, Popover } from \"antd\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { PasscodeInput } from \"antd-mobile\";\r\nimport { ReaderStateCtx } from \"../Reader\";\r\nimport { TeamCtx } from \"../Team\";\r\nimport { getUserID, saveUserName } from \"../../../lib/user\";\r\nimport PageNav from \"../PageNav\";\r\nimport {\r\n  EyeOutlined,\r\n  FormOutlined,\r\n  TeamOutlined,\r\n  CopyOutlined,\r\n  CheckOutlined,\r\n  ReloadOutlined,\r\n  ShareAltOutlined,\r\n  DisconnectOutlined,\r\n  EyeInvisibleOutlined,\r\n  UsergroupAddOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { editNoteData } from \"../../../lib/note/archive\";\r\nimport { UserAvatar } from \"../../widgets/UserAvatar\";\r\nimport { putNote } from \"../../../lib/network/http\";\r\nimport copy from \"clipboard-copy\";\r\n\r\nexport const HeaderRight: FC<{\r\n  instantSave: () => Promise<void> | undefined;\r\n}> = ({ instantSave }) => {\r\n  const { teamOn } = useContext(TeamCtx);\r\n  return (\r\n    <div className=\"right\">\r\n      {teamOn ? <RoomInfo /> : <JoinRoom instantSave={instantSave} />}\r\n      <PageNav />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst UserCard: FC<{ userID: string }> = ({ userID }) => {\r\n  const [renaming, setRenaming] = useState(false);\r\n  const { ignores, setIgnores, resetIO, userRec } = useContext(TeamCtx);\r\n  const userInfo = userRec[userID];\r\n  useEffect(() => setRenaming(false), [userInfo]);\r\n  if (!userInfo) return null;\r\n\r\n  const { userName, online } = userInfo;\r\n  const self = userID === getUserID();\r\n  const ignored = ignores.has(userID) && !self;\r\n\r\n  const switchIgnore = () => {\r\n    setIgnores((prev) => {\r\n      if (prev.has(userID)) return prev.delete(userID);\r\n      return prev.add(userID);\r\n    });\r\n  };\r\n\r\n  const submitRename = (value: string) => {\r\n    const name = value.trim();\r\n    if (!name || name === userName) return setRenaming(false);\r\n    saveUserName(name);\r\n    resetIO();\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-item\" data-online={online}>\r\n      <UserAvatar userID={userID} size=\"small\" className=\"room-avatar\" />\r\n      {renaming || <span className=\"user-name\">{userName}</span>}\r\n      {renaming && (\r\n        <Search\r\n          autoFocus\r\n          className=\"rename-input\"\r\n          defaultValue={userName}\r\n          onSearch={submitRename}\r\n          enterButton={<Button icon={<CheckOutlined />} />}\r\n        />\r\n      )}\r\n      {self ? (\r\n        renaming || (\r\n          <Button\r\n            type=\"text\"\r\n            icon={<FormOutlined />}\r\n            onClick={() => setRenaming(true)}\r\n          />\r\n        )\r\n      ) : (\r\n        <Button\r\n          type=\"text\"\r\n          icon={ignored ? <EyeInvisibleOutlined /> : <EyeOutlined />}\r\n          onClick={switchIgnore}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RoomInfo: FC = () => {\r\n  const { code, userRec, connected, loadInfo, loadState, resetIO } =\r\n    useContext(TeamCtx);\r\n  const { noteInfo } = useContext(ReaderStateCtx);\r\n  const link = window.location.href;\r\n  const share = async () => {\r\n    const selfName = userRec[getUserID()]?.userName;\r\n    try {\r\n      if (!noteInfo) return;\r\n      await copy(`${noteInfo.name} - ${selfName} - Multibility\\n${link}`);\r\n      message.destroy(\"copy\");\r\n      message.success({\r\n        content: \"Link copied!\",\r\n        icon: <CopyOutlined />,\r\n        key: \"copy\",\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const userList = useMemo(() => {\r\n    const selfID = getUserID();\r\n    const { [selfID]: selfInfo, ...otherUsers } = userRec;\r\n    const list = selfInfo ? [selfInfo] : [];\r\n    const values = Object.values(otherUsers);\r\n    list.push(\r\n      ...values.filter(({ online }) => online),\r\n      ...values.filter(({ online }) => !online)\r\n    );\r\n    return list;\r\n  }, [userRec]);\r\n\r\n  const onlineNum = useMemo(\r\n    () => userList.filter(({ online }) => online).length,\r\n    [userList]\r\n  );\r\n\r\n  const teamPop = (\r\n    <div className=\"team-popover\">\r\n      {connected || (\r\n        <Alert\r\n          className=\"disconn-alert\"\r\n          message=\"Network failed.\"\r\n          icon={<DisconnectOutlined />}\r\n          type=\"error\"\r\n          showIcon\r\n          banner\r\n        />\r\n      )}\r\n      <PasscodeInput\r\n        className=\"code-display\"\r\n        value={String(code)}\r\n        length={4}\r\n        plain\r\n      />\r\n      <Button\r\n        icon={<ShareAltOutlined />}\r\n        className=\"share-btn\"\r\n        onClick={share}\r\n        block\r\n      >\r\n        Share\r\n      </Button>\r\n      <Divider />\r\n      <div className=\"user-list\">\r\n        {userList.map((u) => (\r\n          <UserCard key={u.userID} userID={u.userID} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const [reloading, setReloading] = useState(false);\r\n  const title = (\r\n    <div className=\"team-title\">\r\n      <span>Team info</span>\r\n      <Button\r\n        shape=\"circle\"\r\n        type=\"text\"\r\n        size=\"small\"\r\n        loading={reloading}\r\n        icon={<ReloadOutlined />}\r\n        onClick={async () => {\r\n          setReloading(true);\r\n          await loadInfo();\r\n          await loadState();\r\n          setReloading(false);\r\n          resetIO();\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Popover\r\n      content={teamPop}\r\n      trigger=\"click\"\r\n      placement=\"bottomRight\"\r\n      title={title}\r\n      getPopupContainer={(e) => e.parentElement!}\r\n    >\r\n      <Button\r\n        type=\"text\"\r\n        icon={\r\n          <Badge\r\n            status={connected ? \"success\" : \"error\"}\r\n            count={connected ? onlineNum : \"!\"}\r\n            size=\"small\"\r\n          >\r\n            <TeamOutlined />\r\n          </Badge>\r\n        }\r\n      />\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst JoinRoom: FC<{\r\n  instantSave: () => Promise<void> | undefined;\r\n}> = ({ instantSave }) => {\r\n  const { noteID } = useContext(ReaderStateCtx);\r\n  const nav = useNavigate();\r\n\r\n  const createRoom = async () => {\r\n    await instantSave();\r\n    const res = await putNote(noteID);\r\n    if (!res) return message.error(\"Can't create room.\");\r\n    await editNoteData(noteID, { team: true });\r\n    nav(\"/team/\" + noteID);\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      type=\"text\"\r\n      icon={<UsergroupAddOutlined />}\r\n      onClick={() => {\r\n        Modal.confirm({\r\n          title: \"Enable team editing\",\r\n          content: \"This will make your note public to anyone with the link.\",\r\n          icon: <TeamOutlined style={{ color: \"#555\" }} />,\r\n          onOk: createRoom,\r\n        });\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import { HeaderLeft } from \"./Left\";\r\nimport { HeaderMiddle } from \"./Middle\";\r\nimport { HeaderRight } from \"./Right\";\r\nimport \"./header.sass\";\r\n\r\nexport default function ReaderHeader({\r\n  saved,\r\n  handleUndo,\r\n  handleRedo,\r\n  instantSave,\r\n}: {\r\n  saved: boolean;\r\n  handleUndo: () => void;\r\n  handleRedo: () => void;\r\n  instantSave: () => Promise<void> | undefined;\r\n}) {\r\n  return (\r\n    <header>\r\n      <HeaderLeft saved={saved} instantSave={instantSave} />\r\n      <HeaderMiddle handleUndo={handleUndo} handleRedo={handleRedo} />\r\n      <HeaderRight instantSave={instantSave} />\r\n    </header>\r\n  );\r\n}\r\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useCallback,\r\n} from \"react\";\r\nimport {\r\n  NoteInfo,\r\n  NotePage,\r\n  createPage,\r\n  defaultNotePage,\r\n} from \"../../lib/note/note\";\r\nimport { DrawCtrlProvider, useDrawCtrl } from \"../../lib/draw/DrawCtrl\";\r\nimport { NewPageInfo, ReorderInfo, SyncInfo } from \"../../lib/network/io\";\r\nimport { DarkModeProvider, useForceLight } from \"../../lib/Dark\";\r\nimport { useMemoizedFn as useEvent, useSafeState } from \"ahooks\";\r\nimport { SetOperation, StateSet } from \"../../lib/draw/StateSet\";\r\nimport Draw, { ActiveToolKey, DrawRefType } from \"../draw/Draw\";\r\nimport { loadNote, editNoteData } from \"../../lib/note/archive\";\r\nimport { AddPageButton, showPageDelMsg } from \"./ReaderUtils\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { SelectTool, TextTool } from \"./tools/DrawTools\";\r\nimport { debounce, last, once, range } from \"lodash-es\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { DrawState } from \"../../lib/draw/DrawState\";\r\nimport { useScrollPage } from \"./lib/scroll\";\r\nimport { insertAfter } from \"./lib/array\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport ReaderHeader from \"./header\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport { Map } from \"immutable\";\r\nimport { message } from \"antd\";\r\nimport \"./reader.sass\";\r\n\r\nexport const ReaderStateCtx = React.createContext<{\r\n  noteID: string;\r\n  noteInfo?: NoteInfo;\r\n  stateSet?: StateSet;\r\n  pageRec?: Map<string, NotePage>;\r\n  pageOrder?: string[];\r\n  currPageID: string;\r\n}>({ noteID: \"\", currPageID: \"\" });\r\n\r\nexport const ReaderMethodCtx = React.createContext({\r\n  scrollPage: (pageID: string) => {},\r\n  switchPageMarked: (pageID: string) => {},\r\n  addPage: (prevPageID: string, copy?: boolean) => {},\r\n  addFinalPage: () => {},\r\n  deletePage: (pageID: string) => {},\r\n  saveReorder: async (order: string[], push: boolean) => {},\r\n});\r\n\r\nexport default function Reader() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const nav = useNavigate();\r\n\r\n  const [pageRec, setPageRec] = useState<Map<string, NotePage>>();\r\n  const [noteInfo, setNoteInfo] = useState<NoteInfo>();\r\n  const [stateSet, setStateSet] = useState<StateSet>();\r\n  const [pageOrder, setPageOrder] = useState<string[]>();\r\n  const [saved, setSaved] = useSafeState(true);\r\n\r\n  const { io, teamOn, addTeamStatePage } = useContext(TeamCtx);\r\n  const { setInviewRatios, scrollPage, sectionRef, currPageID } = useScrollPage(\r\n    noteID,\r\n    pageOrder\r\n  );\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const storedNote = await loadNote(noteID);\r\n      if (!storedNote) {\r\n        message.error(\"Note not found\");\r\n        return nav(\"/\");\r\n      }\r\n      const { pageRec, pdf, pageOrder, ...noteInfo } = storedNote;\r\n      setPageRec(Map(pageRec));\r\n      setPageOrder(pageOrder);\r\n      setNoteInfo(noteInfo);\r\n      setStateSet(StateSet.createFromPages(pageRec));\r\n    })();\r\n  }, [nav, noteID, teamOn]);\r\n\r\n  useEffect(() => {\r\n    if (!noteInfo) return;\r\n    document.title = noteInfo.name + \" - Multibility\";\r\n  }, [noteInfo]);\r\n\r\n  const saver = useEvent(async () => {\r\n    const pr = pageRec?.toObject();\r\n    await editNoteData(noteID, { pageRec: pr });\r\n    setSaved(true);\r\n  });\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const debouncedSave = useCallback(debounce(saver, 2000), [saver]);\r\n  const instantSave = debouncedSave.flush;\r\n\r\n  const savePageRec = (pageID: string, cb: (prev: NotePage) => NotePage) => {\r\n    setPageRec((prev) => prev?.update(pageID, defaultNotePage, cb));\r\n    setSaved(false);\r\n    debouncedSave();\r\n  };\r\n\r\n  const saveReorder = async (pageOrder: string[], push = false) => {\r\n    setPageOrder(pageOrder);\r\n    await editNoteData(noteID, { pageOrder });\r\n    await instantSave();\r\n    push && pushReorder(pageOrder);\r\n  };\r\n\r\n  const pushReorder = (pageOrder: string[]) =>\r\n    io?.emit(\"reorder\", { pageOrder });\r\n\r\n  const handleReorder = useEvent(\r\n    ({ deleted, pageOrder, prevOrder }: ReorderInfo) => {\r\n      saveReorder(pageOrder);\r\n      if (!deleted) return;\r\n      showPageDelMsg(() => saveReorder(prevOrder, true));\r\n    }\r\n  );\r\n\r\n  const handleNewPage = useEvent(\r\n    ({ pageOrder, pageID, newPage }: NewPageInfo) => {\r\n      saveReorder(pageOrder);\r\n      savePageRec(pageID, () => newPage);\r\n      setStateSet((prev) => prev?.addState(pageID, newPage));\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    io?.on(\"reorder\", handleReorder);\r\n    io?.on(\"newPage\", handleNewPage);\r\n    return () => void io?.removeAllListeners();\r\n  }, [io, handleReorder, handleNewPage]);\r\n\r\n  const pushOperation = (operation: SetOperation) => {\r\n    const handleSync = ({ pageID, stroke }: SyncInfo) =>\r\n      setStateSet((prev) => prev?.syncStrokeTime(pageID, stroke));\r\n\r\n    io?.emit(\"push\", { operation }, handleSync);\r\n  };\r\n\r\n  const pushNewPage = (\r\n    pageOrder: string[],\r\n    pageID: string,\r\n    newPage: NotePage\r\n  ) => {\r\n    const { image, marked, ...newTeamPage } = newPage;\r\n    io?.emit(\"newPage\", { pageOrder, pageID, newPage: newTeamPage });\r\n    addTeamStatePage(pageID, newPage);\r\n  };\r\n\r\n  const updatePageRec = (pageID: string, ds: DrawState) => {\r\n    const state = DrawState.flaten(ds);\r\n    savePageRec(pageID, (prev) => ({ ...prev, state }));\r\n  };\r\n\r\n  const updateStateSet = (cb: (prevSS: StateSet) => StateSet) => {\r\n    if (!stateSet) return;\r\n    const newSS = cb(stateSet);\r\n    if (newSS === stateSet) return;\r\n    setStateSet(newSS);\r\n    const lastDS = newSS.getLastDS();\r\n    const lastOp = newSS.lastOp;\r\n    if (!lastDS || !lastOp) return;\r\n    updatePageRec(...lastDS);\r\n    pushOperation(lastOp);\r\n  };\r\n\r\n  const switchPageMarked = (pageID: string) =>\r\n    savePageRec(pageID, (prev) => ({ ...prev, marked: !prev.marked }));\r\n\r\n  const addPage = (prevPageID: string, copy = false) => {\r\n    if (!pageOrder) return;\r\n    const prevPage = copy ? pageRec?.get(prevPageID) : undefined;\r\n    const [pageID, newPage] = createPage(prevPage);\r\n    const newOrder = insertAfter(pageOrder, prevPageID, pageID);\r\n    pushNewPage(newOrder, pageID, newPage);\r\n    saveReorder(newOrder);\r\n    savePageRec(pageID, () => newPage);\r\n    setStateSet((prev) => prev?.addState(pageID, newPage));\r\n  };\r\n\r\n  const addFinalPage = () => {\r\n    const lastPageID = last(pageOrder);\r\n    lastPageID && addPage(lastPageID);\r\n  };\r\n\r\n  const deletePage = (pageID: string) => {\r\n    const newOrder = pageOrder?.filter((id) => id !== pageID);\r\n    newOrder?.length && saveReorder(newOrder, true);\r\n  };\r\n\r\n  const renderResult = (\r\n    <div className=\"reader container\">\r\n      <ReaderHeader\r\n        saved={saved}\r\n        instantSave={instantSave}\r\n        handleUndo={() => updateStateSet((prev) => prev.undo())}\r\n        handleRedo={() => updateStateSet((prev) => prev.redo())}\r\n      />\r\n      <main>\r\n        {pageOrder?.map((uid) => (\r\n          <section key={uid} className=\"note-page\" ref={sectionRef(uid)}>\r\n            <PageContainer\r\n              uid={uid}\r\n              updateStateSet={updateStateSet}\r\n              setInviewRatios={setInviewRatios}\r\n            />\r\n          </section>\r\n        ))}\r\n        <AddPageButton />\r\n      </main>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <DarkModeProvider>\r\n      <ReaderStateCtx.Provider\r\n        value={{\r\n          noteID,\r\n          pageRec,\r\n          noteInfo,\r\n          stateSet,\r\n          pageOrder,\r\n          currPageID,\r\n        }}\r\n      >\r\n        <ReaderMethodCtx.Provider\r\n          value={{\r\n            addPage,\r\n            scrollPage,\r\n            deletePage,\r\n            saveReorder,\r\n            addFinalPage,\r\n            switchPageMarked,\r\n          }}\r\n        >\r\n          <DrawCtrlProvider>{renderResult}</DrawCtrlProvider>\r\n        </ReaderMethodCtx.Provider>\r\n      </ReaderStateCtx.Provider>\r\n    </DarkModeProvider>\r\n  );\r\n}\r\n\r\nconst PageContainer: FC<{\r\n  uid: string;\r\n  updateStateSet: (cb: (prevSS: StateSet) => StateSet) => void;\r\n  setInviewRatios: Setter<Map<string, number>>;\r\n}> = ({ uid, updateStateSet, setInviewRatios }) => {\r\n  const { pageRec, stateSet, currPageID, pageOrder } =\r\n    useContext(ReaderStateCtx);\r\n  const { teamState } = useContext(TeamCtx);\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n  const updateState = (ds: DrawState) => {\r\n    updateStateSet((prev) => prev.setState(uid, ds));\r\n  };\r\n\r\n  const onViewChange = (visible: boolean, ratio: number) => {\r\n    if (!visible) return setInviewRatios((prev) => prev.delete(uid));\r\n    setInviewRatios((prev) => prev.set(uid, ratio));\r\n  };\r\n\r\n  const preload = useMemo(() => {\r\n    if (!pageOrder) return false;\r\n    const currIndex = pageOrder.indexOf(currPageID);\r\n    const selfIndex = pageOrder.indexOf(uid);\r\n    return Math.abs(selfIndex - currIndex) <= 1;\r\n  }, [currPageID, uid, pageOrder]);\r\n\r\n  if (!page || !drawState) return null;\r\n  return (\r\n    <PageWrapper\r\n      drawState={drawState}\r\n      teamStateMap={teamStateMap}\r\n      updateState={updateState}\r\n      pdfIndex={page.pdfIndex}\r\n      onViewChange={onViewChange}\r\n      preload={preload}\r\n    />\r\n  );\r\n};\r\n\r\nexport const PageWrapper: FC<{\r\n  drawState: DrawState;\r\n  teamStateMap?: Map<string, DrawState>;\r\n  thumbnail?: string;\r\n  pdfIndex?: number;\r\n  updateState?: (ds: DrawState) => void;\r\n  onViewChange?: (visible: boolean, ratio: number) => void;\r\n  preview?: boolean;\r\n  preload?: boolean;\r\n}> = ({\r\n  thumbnail,\r\n  drawState,\r\n  teamStateMap,\r\n  updateState,\r\n  pdfIndex,\r\n  preview = false,\r\n  onViewChange = () => {},\r\n  preload = false,\r\n}) => {\r\n  const [ref, visible, entry] = useInView({ threshold: range(0, 1.1, 0.1) });\r\n  useEffect(() => {\r\n    if (!entry || !visible) return onViewChange(false, 0);\r\n    onViewChange(true, entry.intersectionRatio);\r\n  }, [visible, entry, onViewChange]);\r\n\r\n  const { noteID } = useContext(ReaderStateCtx);\r\n  const [fullImg, setFullImg] = useState<string>();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const loadImage = useCallback(\r\n    once(async () => {\r\n      if (!pdfIndex) return;\r\n      const { getNotePageImage } = await import(\"../../lib/note/pdfImage\");\r\n      setFullImg(await getNotePageImage(noteID, pdfIndex));\r\n    }),\r\n    [pdfIndex, noteID]\r\n  );\r\n\r\n  const show = visible || preload;\r\n  useEffect(() => {\r\n    if (!preview && show) loadImage();\r\n  }, [show, preview, loadImage]);\r\n\r\n  const { ignores } = useContext(TeamCtx);\r\n  const otherStates = useMemo(\r\n    () => teamStateMap?.deleteAll(ignores).toList().toArray(),\r\n    [teamStateMap, ignores]\r\n  );\r\n\r\n  const imageLoaded = Boolean(fullImg || !pdfIndex);\r\n  const drawShow = show && imageLoaded;\r\n\r\n  const { height, width } = drawState;\r\n  const ratio = height / width;\r\n  const [forceLight] = useForceLight();\r\n\r\n  return (\r\n    <div ref={ref} className=\"page-wrapper\" data-force-light={forceLight}>\r\n      <svg viewBox={`0 0 100 ${ratio * 100}`} />\r\n      {drawShow && (\r\n        <DrawWrapper\r\n          drawState={drawState}\r\n          otherStates={otherStates}\r\n          updateState={updateState}\r\n          imgSrc={fullImg || thumbnail}\r\n          preview={preview}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DrawWrapper: FC<{\r\n  drawState: DrawState;\r\n  otherStates?: DrawState[];\r\n  updateState?: (ds: DrawState) => void;\r\n  preview?: boolean;\r\n  imgSrc?: string;\r\n}> = ({ drawState, updateState, otherStates, preview = false, imgSrc }) => {\r\n  const drawCtrl = useDrawCtrl();\r\n  const [activeTool, setActiveTool] = useState<ActiveToolKey>(\"\");\r\n  const drawRef = useRef<DrawRefType>(null);\r\n\r\n  const handleChange = useEvent(\r\n    (arg: ((s: DrawState) => DrawState) | DrawState) => {\r\n      if (!updateState) return;\r\n      const newDS = arg instanceof DrawState ? arg : arg(drawState);\r\n      if (newDS === drawState) return;\r\n      updateState(newDS);\r\n    }\r\n  );\r\n\r\n  return preview ? (\r\n    <Draw\r\n      drawState={drawState}\r\n      otherStates={otherStates}\r\n      imgSrc={imgSrc}\r\n      readonly\r\n    />\r\n  ) : (\r\n    <>\r\n      <Draw\r\n        drawState={drawState}\r\n        otherStates={otherStates}\r\n        onChange={handleChange}\r\n        imgSrc={imgSrc}\r\n        drawCtrl={drawCtrl}\r\n        ref={drawRef}\r\n        setActiveTool={setActiveTool}\r\n      />\r\n      <SelectTool drawRef={drawRef} visible={activeTool === \"select\"} />\r\n      <TextTool drawRef={drawRef} visible={activeTool === \"text\"} />\r\n    </>\r\n  );\r\n};\r\nDrawWrapper.displayName = \"DrawWrapper\";\r\n","import { io } from \"socket.io-client\";\r\nimport { Stroke } from \"../draw/DrawState\";\r\nimport { NotePage } from \"../note/note\";\r\nimport { getUserID, getUserName } from \"../user\";\r\nimport { BASE_URL } from \"./http\";\r\n\r\nexport const IoFactory = (noteID: string) => () =>\r\n  io(BASE_URL, {\r\n    query: {\r\n      userID: getUserID(),\r\n      userName: getUserName(),\r\n      noteID,\r\n    },\r\n  });\r\n\r\nexport interface ReorderInfo {\r\n  pageOrder: string[];\r\n  prevOrder: string[];\r\n  deleted: boolean;\r\n}\r\n\r\nexport interface NewPageInfo {\r\n  pageOrder: string[];\r\n  pageID: string;\r\n  newPage: NotePage;\r\n}\r\n\r\nexport interface SyncInfo {\r\n  stroke: Stroke;\r\n  pageID: string;\r\n}\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  getTeamNoteState,\r\n  loadTeamNoteInfo,\r\n  updatePages,\r\n} from \"../../lib/network/http\";\r\nimport { LoginOutlined, LogoutOutlined } from \"@ant-design/icons\";\r\nimport { IoFactory, NewPageInfo } from \"../../lib/network/io\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { TeamState } from \"../../lib/draw/TeamState\";\r\nimport { getUserID, UserInfo } from \"../../lib/user\";\r\nimport { NotePage } from \"../../lib/note/note\";\r\nimport { Socket } from \"socket.io-client\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { Loading } from \"../ui/Loading\";\r\nimport { message } from \"antd\";\r\nimport { Set } from \"immutable\";\r\nimport Reader from \"./Reader\";\r\n\r\nexport const TeamCtx = React.createContext({\r\n  io: undefined as Socket | undefined,\r\n  code: 0,\r\n  teamOn: false,\r\n  connected: false,\r\n  ignores: Set<string>(),\r\n  userRec: {} as Record<string, UserInfo>,\r\n  teamState: undefined as TeamState | undefined,\r\n  resetIO: () => {},\r\n  loadInfo: async () => false,\r\n  loadState: async () => false,\r\n  setIgnores: (() => {}) as Setter<Set<string>>,\r\n  addTeamStatePage: (pageID: string, newPage: NotePage) => {},\r\n});\r\n\r\nexport default function Team() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const [teamState, setTeamState] = useState<TeamState>();\r\n  const [code, setCode] = useState(-2);\r\n  const [userRec, setUserRec] = useState<Record<string, UserInfo>>({});\r\n  const [ignores, setIgnores] = useState(Set<string>());\r\n  const [io, setIO] = useState(IoFactory(noteID));\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [connected, setConnected] = useState(false);\r\n  const nav = useNavigate();\r\n\r\n  const loadInfo = useCallback(async () => {\r\n    const info = await loadTeamNoteInfo(noteID);\r\n    if (!info) {\r\n      message.error(\"Failed loading the team note info\");\r\n      return false;\r\n    }\r\n    setCode(info.code);\r\n    return true;\r\n  }, [noteID]);\r\n\r\n  const loadState = useCallback(async () => {\r\n    const teamNote = await getTeamNoteState(noteID);\r\n    if (!teamNote) {\r\n      message.error(\"Failed loading the team note state\");\r\n      return false;\r\n    }\r\n    setTeamState(TeamState.createFromTeamPages(teamNote));\r\n    return true;\r\n  }, [noteID]);\r\n\r\n  const updateSelfState = useCallback(() => {\r\n    updatePages(noteID);\r\n  }, [noteID]);\r\n\r\n  useEffect(() => {\r\n    const roomInit = async () => {\r\n      const infoLoaded = await loadInfo();\r\n      const stateLoaded = await loadState();\r\n      if (!infoLoaded || !stateLoaded) return nav(\"/\");\r\n      setLoaded(true);\r\n      updateSelfState();\r\n    };\r\n    roomInit();\r\n    return updateSelfState;\r\n  }, [loadInfo, loadState, nav, updateSelfState]);\r\n\r\n  useEffect(() => {\r\n    io.on(\"push\", ({ operation, userID }) => {\r\n      setTeamState((prev) => prev?.pushOperation(operation, userID));\r\n    });\r\n\r\n    io.on(\"join\", ({ joined, members }) => {\r\n      const { userID, userName } = joined;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return;\r\n      showJoinMsg(userID, userName);\r\n    });\r\n\r\n    io.on(\"leave\", ({ leaved, members }) => {\r\n      const { userID, userName } = leaved;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return io.emit(\"join\");\r\n      showLeaveMsg(userID, userName);\r\n    });\r\n\r\n    io.on(\"newPage\", (info: NewPageInfo) => {\r\n      const { pageID, newPage } = info;\r\n      setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n    });\r\n\r\n    io.on(\"reset\", ({ userID, pageRec }) => {\r\n      if (userID === getUserID()) return;\r\n      setTeamState((prev) => prev?.resetUser(userID, pageRec));\r\n    });\r\n\r\n    io.on(\"connect_error\", console.error);\r\n    io.on(\"connect\", () => setConnected(true));\r\n    io.on(\"disconnect\", () => setConnected(false));\r\n\r\n    return () => {\r\n      io.removeAllListeners();\r\n      io.close();\r\n    };\r\n  }, [io]);\r\n\r\n  const addTeamStatePage = (pageID: string, newPage: NotePage) => {\r\n    setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n  };\r\n\r\n  const resetIO = () => setIO(IoFactory(noteID));\r\n\r\n  return (\r\n    <Loading loading={!loaded}>\r\n      <TeamCtx.Provider\r\n        value={{\r\n          io,\r\n          code,\r\n          teamOn: true,\r\n          ignores,\r\n          userRec,\r\n          connected,\r\n          teamState,\r\n          resetIO,\r\n          loadInfo,\r\n          loadState,\r\n          setIgnores,\r\n          addTeamStatePage,\r\n        }}\r\n      >\r\n        <Reader />\r\n      </TeamCtx.Provider>\r\n    </Loading>\r\n  );\r\n}\r\n\r\nconst showJoinMsg = (userID: string, userName: string) => {\r\n  message.destroy(userID);\r\n  message.success({\r\n    content: `${userName} joined room`,\r\n    icon: <LoginOutlined />,\r\n    key: userID,\r\n  });\r\n};\r\n\r\nconst showLeaveMsg = (userID: string, userName: string) => {\r\n  message.destroy(userID);\r\n  message.warning({\r\n    content: `${userName} leaved room`,\r\n    icon: <LogoutOutlined />,\r\n    key: userID,\r\n  });\r\n};\r\n","import classNames from \"classnames\";\nimport { FC } from \"react\";\nimport './circle.sass'\n\nexport const ColorCirle: FC<{ color: string; className?: string }> = ({\n  color,\n  className,\n}) => {\n  const style = { backgroundColor: color };\n  return (\n    <div className={classNames(\"color-circle\", className)} style={style} />\n  );\n};\n","import { CSSProperties } from \"react\";\r\nimport hash from \"string-hash\";\r\nexport const colors = [\r\n  \"#f97316\",\r\n  \"#eab308\",\r\n  \"#84cc16\",\r\n  \"#22c55e\",\r\n  \"#10b981\",\r\n  \"#14b8a6\",\r\n  \"#06b6d4\",\r\n  \"#0ea5e9\",\r\n  \"#3b82f6\",\r\n  \"#6366f1\",\r\n  \"#8b5cf6\",\r\n  \"#a855f7\",\r\n  \"#d946ef\",\r\n  \"#ec4899\",\r\n  \"#f43f5e\",\r\n  \"#ef4444\",\r\n];\r\n\r\nexport const grayColors = [\"#000000\", \"#9ca3af\", \"#64748b\", \"#78716c\"];\r\nexport const allColors = [...grayColors, ...colors];\r\n\r\nexport const getRandomColor = () => {\r\n  const index = Math.floor(Math.random() * colors.length);\r\n  return colors[index]!;\r\n};\r\n\r\nexport const getHashedColor = (str: string) => {\r\n  const index = hash(str) % colors.length;\r\n  return colors[index];\r\n};\r\n\r\nconst colorPalette: Record<string, { light: string; dark: string }> = {\r\n  \"#f97316\": { light: \"#FFEDD5\", dark: \"#9A3412\" },\r\n  \"#eab308\": { light: \"#FEF9C3\", dark: \"#854D0E\" },\r\n  \"#84cc16\": { light: \"#ECFCCB\", dark: \"#3F6212\" },\r\n  \"#22c55e\": { light: \"#DCFCE7\", dark: \"#166534\" },\r\n  \"#10b981\": { light: \"#D1FAE5\", dark: \"#065F46\" },\r\n  \"#14b8a6\": { light: \"#CCFBF1\", dark: \"#115E59\" },\r\n  \"#06b6d4\": { light: \"#CFFAFE\", dark: \"#155E75\" },\r\n  \"#0ea5e9\": { light: \"#E0F2FE\", dark: \"#075985\" },\r\n  \"#3b82f6\": { light: \"#DBEAFE\", dark: \"#1E40AF\" },\r\n  \"#6366f1\": { light: \"#E0E7FF\", dark: \"#3730A3\" },\r\n  \"#8b5cf6\": { light: \"#EDE9FE\", dark: \"#5B21B6\" },\r\n  \"#a855f7\": { light: \"#F3E8FF\", dark: \"#6B21A8\" },\r\n  \"#d946ef\": { light: \"#FAE8FF\", dark: \"#86198F\" },\r\n  \"#ec4899\": { light: \"#FCE7F3\", dark: \"#9D174D\" },\r\n  \"#f43f5e\": { light: \"#FFE4E6\", dark: \"#9F1239\" },\r\n  \"#ef4444\": { light: \"#FEE2E2\", dark: \"#991B1B\" },\r\n};\r\n\r\nexport const getColorPalette = (color: string) => {\r\n  const palette = colorPalette[color] ?? { light: \"#E5E7EB\", dark: \"#374151\" };\r\n  return {\r\n    \"--light-color\": palette.light,\r\n    \"--dark-color\": palette.dark,\r\n  } as CSSProperties;\r\n};\r\n","import { List, Record, OrderedMap, Map } from \"immutable\";\r\nimport { v4 } from \"uuid\";\r\nimport Heap from \"heap\";\r\n\r\nexport const WIDTH = 2000;\r\n\r\nexport interface Stroke {\r\n  uid: string;\r\n  pathData: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport type StrokeRecord = globalThis.Record<string, Stroke>;\r\nexport type Mutation = [string, string];\r\nexport type Splitter = [string, string[]];\r\n\r\nexport type Operation =\r\n  | {\r\n      type: \"add\";\r\n      stroke: Stroke;\r\n    }\r\n  | {\r\n      type: \"erase\";\r\n      erased: string[];\r\n    }\r\n  | {\r\n      type: \"mutate\";\r\n      mutations: Mutation[];\r\n    }\r\n  | {\r\n      type: \"split\";\r\n      splitters: Splitter[];\r\n    }\r\n  | {\r\n      type: \"undo\";\r\n    }\r\n  | {\r\n      type: \"redo\";\r\n    };\r\n\r\ninterface DrawStateRecordType {\r\n  strokes: OrderedMap<string, Stroke>;\r\n  undoStack: List<DrawStateRecord>;\r\n  historyStack: List<DrawStateRecord>;\r\n}\r\n\r\ntype DrawStateRecord = Record<DrawStateRecordType>;\r\n\r\nconst defaultRecord: Readonly<DrawStateRecordType> = {\r\n  strokes: OrderedMap(),\r\n  undoStack: List(),\r\n  historyStack: List(),\r\n};\r\n\r\nconst defaultFactory = Record(defaultRecord);\r\n\r\nexport interface FlatState {\r\n  strokes: StrokeRecord;\r\n  operations?: Operation[];\r\n}\r\n\r\nexport const getDefaultFlatState = (): FlatState => {\r\n  return { strokes: {} };\r\n};\r\n\r\nexport class DrawState {\r\n  constructor(\r\n    private immutable: DrawStateRecord,\r\n    public readonly width: number,\r\n    public readonly height: number,\r\n    public lastOp?: Operation\r\n  ) {}\r\n\r\n  getImmutable() {\r\n    return this.immutable;\r\n  }\r\n\r\n  getUndoStack() {\r\n    return this.getImmutable().get(\"undoStack\");\r\n  }\r\n\r\n  getHistoryStack() {\r\n    return this.getImmutable().get(\"historyStack\");\r\n  }\r\n\r\n  getStrokeMap() {\r\n    return this.getImmutable().get(\"strokes\");\r\n  }\r\n\r\n  getStrokeList(): Stroke[] {\r\n    return this.getStrokeMap()\r\n      .toArray()\r\n      .map(([_, stroke]) => stroke);\r\n  }\r\n\r\n  getLastStroke() {\r\n    return this.getStrokeMap().last();\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.getStrokeMap().size === 0;\r\n  }\r\n\r\n  hasStroke(uid: string) {\r\n    return this.getStrokeMap().has(uid);\r\n  }\r\n\r\n  static createEmpty(ratio: number, width = WIDTH) {\r\n    return new DrawState(defaultFactory(), width, width * ratio);\r\n  }\r\n\r\n  static undo(drawState: DrawState) {\r\n    const lastOp: Operation = { type: \"undo\" };\r\n    const lastRecord = drawState.getHistoryStack().last();\r\n    if (!lastRecord) return drawState;\r\n    const undoStack = drawState\r\n      .getUndoStack()\r\n      .unshift(drawState.getImmutable());\r\n    return new DrawState(\r\n      lastRecord.set(\"undoStack\", undoStack),\r\n      drawState.width,\r\n      drawState.height,\r\n      lastOp\r\n    );\r\n  }\r\n\r\n  static redo(drawState: DrawState) {\r\n    const lastOp: Operation = { type: \"redo\" };\r\n\r\n    const nextRecord = drawState.getUndoStack().first();\r\n    if (!nextRecord) return drawState;\r\n    return new DrawState(nextRecord, drawState.width, drawState.height, lastOp);\r\n  }\r\n\r\n  static addStroke(drawState: DrawState, pathData: string) {\r\n    const uid = DrawState.getUid();\r\n    const timestamp = Date.now();\r\n    const stroke = { pathData, uid, timestamp };\r\n    return DrawState.pushStroke(drawState, stroke);\r\n  }\r\n\r\n  static pushStroke(drawState: DrawState, stroke: Stroke) {\r\n    const { uid } = stroke;\r\n    const prevRecord = drawState.getImmutable();\r\n    const currRecord = prevRecord\r\n      .update(\"strokes\", (s) => s.set(uid, stroke))\r\n      .update(\"historyStack\", (s) => s.push(prevRecord))\r\n      .delete(\"undoStack\");\r\n\r\n    const lastOp: Operation = { type: \"add\", stroke };\r\n\r\n    return new DrawState(currRecord, drawState.width, drawState.height, lastOp);\r\n  }\r\n\r\n  static eraseStrokes(drawState: DrawState, erased: string[]) {\r\n    if (erased.length === 0) return drawState;\r\n    const prevRecord = drawState.getImmutable();\r\n    const currRecord = prevRecord\r\n      .update(\"strokes\", (m) => m.deleteAll(erased))\r\n      .update(\"historyStack\", (s) => s.push(prevRecord))\r\n      .delete(\"undoStack\");\r\n\r\n    const lastOp: Operation = { type: \"erase\", erased };\r\n\r\n    return new DrawState(currRecord, drawState.width, drawState.height, lastOp);\r\n  }\r\n\r\n  static mutateStrokes(drawState: DrawState, mutations: Mutation[]) {\r\n    if (mutations.length === 0) return drawState;\r\n    const prevRecord = drawState.getImmutable();\r\n    let strokes = drawState.getStrokeMap();\r\n    mutations.forEach(\r\n      ([uid, pathData]) =>\r\n        (strokes = strokes.update(\r\n          uid,\r\n          { uid, pathData, timestamp: Date.now() },\r\n          (s) => ({ ...s, pathData })\r\n        ))\r\n    );\r\n    const currRecord = prevRecord\r\n      .set(\"strokes\", strokes)\r\n      .update(\"historyStack\", (s) => s.push(prevRecord))\r\n      .delete(\"undoStack\");\r\n\r\n    const lastOp: Operation = { type: \"mutate\", mutations };\r\n\r\n    return new DrawState(currRecord, drawState.width, drawState.height, lastOp);\r\n  }\r\n\r\n  static splitStrokes(drawState: DrawState, splitters: Splitter[]) {\r\n    if (splitters.length === 0) return drawState;\r\n    const splitMap = Map(splitters);\r\n    let strokes = OrderedMap<string, Stroke>();\r\n    const prevStrokes = drawState.getStrokeMap();\r\n    prevStrokes.forEach((stroke, prevUid) => {\r\n      const splitStrokes = splitMap.get(prevUid);\r\n      if (splitStrokes) {\r\n        splitStrokes.forEach((pathData, index) => {\r\n          const uid = prevUid + \"-\" + index;\r\n          const { timestamp } = stroke;\r\n          strokes = strokes.set(uid, { pathData, timestamp, uid });\r\n        });\r\n      } else {\r\n        strokes = strokes.set(prevUid, stroke);\r\n      }\r\n    });\r\n    const prevRecord = drawState.getImmutable();\r\n    const currRecord = prevRecord\r\n      .set(\"strokes\", strokes)\r\n      .update(\"historyStack\", (s) => s.push(prevRecord));\r\n    const lastOp: Operation = { type: \"split\", splitters };\r\n    return new DrawState(currRecord, drawState.width, drawState.height, lastOp);\r\n  }\r\n\r\n  // sync with mutation.\r\n  static syncStrokeTime(drawState: DrawState, stroke: Stroke) {\r\n    const { uid, timestamp } = stroke;\r\n    const prevStroke = drawState.getStrokeMap().get(uid);\r\n    if (!prevStroke) return;\r\n    prevStroke.timestamp = timestamp;\r\n  }\r\n\r\n  static pushOperation(drawState: DrawState, op: Operation) {\r\n    switch (op.type) {\r\n      case \"add\":\r\n        return DrawState.pushStroke(drawState, op.stroke);\r\n      case \"erase\":\r\n        return DrawState.eraseStrokes(drawState, op.erased);\r\n      case \"mutate\":\r\n        return DrawState.mutateStrokes(drawState, op.mutations);\r\n      case \"undo\":\r\n        return DrawState.undo(drawState);\r\n      case \"redo\":\r\n        return DrawState.redo(drawState);\r\n      case \"split\":\r\n        return DrawState.splitStrokes(drawState, op.splitters);\r\n    }\r\n  }\r\n\r\n  static flaten(drawState: DrawState): FlatState {\r\n    const strokes = drawState.getImmutable().get(\"strokes\").toObject();\r\n    return { strokes };\r\n  }\r\n\r\n  static loadFromFlat(\r\n    flatState: FlatState,\r\n    ratio: number,\r\n    width = WIDTH\r\n  ): DrawState {\r\n    const { strokes, operations } = flatState;\r\n    let ds = new DrawState(\r\n      defaultFactory().set(\"strokes\", OrderedMap(strokes)),\r\n      width,\r\n      width * ratio\r\n    );\r\n    operations?.forEach((op) => (ds = DrawState.pushOperation(ds, op)));\r\n    return ds;\r\n  }\r\n\r\n  static mergeStates(...states: DrawState[]): Stroke[] {\r\n    const iterators = states.map((ds) => ds.getStrokeMap().values());\r\n    const mergedStrokes = [];\r\n    const heap = new Heap<[Stroke, number]>(\r\n      ([s0], [s1]) => s0.timestamp - s1.timestamp\r\n    );\r\n\r\n    iterators.forEach((iter, index) => {\r\n      const { value, done } = iter.next();\r\n      done || heap.push([value, index]);\r\n    });\r\n\r\n    while (heap.size() > 0) {\r\n      const record = heap.pop();\r\n      if (!record) break;\r\n      const [stroke, index] = record;\r\n      mergedStrokes.push(stroke);\r\n\r\n      const iterator = iterators[index];\r\n      if (!iterator) break;\r\n      const { value, done } = iterator.next();\r\n      done || heap.push([value, index]);\r\n    }\r\n    return mergedStrokes;\r\n  }\r\n\r\n  static getUid() {\r\n    return v4();\r\n  }\r\n}\r\n","import { NotePage, TeamPage, TeamPageInfo } from \"../note/note\";\nimport { DrawState } from \"./DrawState\";\nimport { SetOperation } from \"./StateSet\";\nimport { Map, Record } from \"immutable\";\n\ninterface TeamStateRecordType {\n  pageStates: Map<string, Map<string, DrawState>>;\n  pageInfos: Map<string, TeamPageInfo>;\n}\n\nconst defaultRecord: Readonly<TeamStateRecordType> = {\n  pageStates: Map(),\n  pageInfos: Map(),\n};\n\ntype TeamStateRecord = Record<TeamStateRecordType>;\nconst defaultFactory = Record(defaultRecord);\n\nexport class TeamState {\n  constructor(private immutable: TeamStateRecord) {}\n\n  getImmutable() {\n    return this.immutable;\n  }\n\n  getPageStates() {\n    return this.getImmutable().get(\"pageStates\");\n  }\n\n  getPageInfos() {\n    return this.getImmutable().get(\"pageInfos\");\n  }\n\n  getOneState(pageID: string, userID: string) {\n    return this.getPageStates().get(pageID)?.get(userID);\n  }\n\n  getOnePageStateMap(pageID: string) {\n    return this.getPageStates().get(pageID);\n  }\n\n  getPageValidUsers(pageID: string) {\n    const map = this.getOnePageStateMap(pageID);\n    if (!map) return [];\n    return Array.from(map.filter((ds) => !ds.isEmpty()).keys());\n  }\n\n  getPageRatio(pageID: string) {\n    return this.getPageInfos().get(pageID)?.ratio;\n  }\n\n  includesPage(pageID: string) {\n    return this.getPageStates().has(pageID);\n  }\n\n  setState(pageID: string, userID: string, drawState: DrawState) {\n    const pageMap = this.getPageStates().get(pageID);\n    if (!pageMap) return this;\n    return new TeamState(\n      this.getImmutable().update(\"pageStates\", (m) =>\n        m.set(pageID, pageMap.set(userID, drawState))\n      )\n    );\n  }\n\n  static createFromTeamPages(teamPages: globalThis.Record<string, TeamPage>) {\n    let record = defaultFactory();\n    Object.entries(teamPages).forEach(([pageID, teamPage]) => {\n      const { states, ratio } = teamPage;\n      const pageMap = Map(\n        Object.entries(states).map(([userID, flatState]) => [\n          userID,\n          DrawState.loadFromFlat(flatState, ratio),\n        ])\n      );\n      record = record\n        .update(\"pageStates\", (m) => m.set(pageID, pageMap))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }));\n    });\n    return new TeamState(record);\n  }\n\n  addPage(pageID: string, notePage: NotePage) {\n    const { ratio } = notePage;\n    return new TeamState(\n      this.getImmutable()\n        .update(\"pageStates\", (m) => m.set(pageID, Map()))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }))\n    );\n  }\n\n  pushOperation(setOp: SetOperation, userID: string) {\n    const { pageID, ...op } = setOp;\n    const ratio = this.getPageRatio(pageID);\n    if (!this.includesPage(pageID) || !ratio) return this;\n    const prevDs =\n      this.getOneState(pageID, userID) || DrawState.createEmpty(ratio);\n\n    const ds = DrawState.pushOperation(prevDs, op);\n    return this.setState(pageID, userID, ds);\n  }\n\n  resetUser(userID: string, pageRec: globalThis.Record<string, NotePage>) {\n    let newTS: TeamState = this;\n    for (let [pageID, { state, ratio }] of Object.entries(pageRec)) {\n      const prevDS = newTS.getOneState(pageID, userID);\n      if (!prevDS) continue;\n      newTS = newTS.setState(\n        pageID,\n        userID,\n        DrawState.loadFromFlat(state, ratio)\n      );\n    }\n    return newTS;\n  }\n}\n","export function createVirtualCanvas(width: number, height: number) {\r\n  const canvas = document.createElement(\"canvas\");\r\n  const context = canvas.getContext(\"2d\");\r\n  if (!context) {\r\n    throw new Error(\"can't get virtual canvas context\");\r\n  }\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n  return { canvas, context };\r\n}\r\n\r\nexport function releaseCanvas(canvas: HTMLCanvasElement) {\r\n  canvas.width = 1;\r\n  canvas.height = 1;\r\n  const ctx = canvas.getContext('2d');\r\n  ctx?.clearRect(0, 0, 1, 1);\r\n}\r\n","import React, {\r\n  createContext,\r\n  Dispatch,\r\n  FC,\r\n  SetStateAction,\r\n  TransitionEventHandler,\r\n  useContext,\r\n  useDebugValue,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\n\r\nexport type Setter<T> = Dispatch<SetStateAction<T>>;\r\n\r\nexport function useTransitionEnd({\r\n  propertyName,\r\n  active = true,\r\n}: {\r\n  propertyName: string;\r\n  active?: boolean;\r\n}): [Promise<void>, TransitionEventHandler] {\r\n  const resRef = useRef(() => {});\r\n  const [promise] = useState(\r\n    () => new Promise<void>((res) => (resRef.current = res))\r\n  );\r\n  return [\r\n    promise,\r\n    (e) => {\r\n      if (e.propertyName === propertyName && active) resRef.current();\r\n    },\r\n  ];\r\n}\r\n\r\nconst ActiveKeyCtx = createContext<[string, Setter<string>]>([\"\", () => {}]);\r\nexport function useActiveKey() {\r\n  const tuple = useContext(ActiveKeyCtx);\r\n  useDebugValue(tuple[0]);\r\n  return tuple;\r\n}\r\n\r\nexport const ActiveKeyProvider: FC<{ initKey: string }> = ({\r\n  children,\r\n  initKey,\r\n}) => {\r\n  const tuple = useState(initKey);\r\n  return (\r\n    <ActiveKeyCtx.Provider value={tuple}>{children}</ActiveKeyCtx.Provider>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  removePageTimg,\r\n  TeamNoteInfo,\r\n  TeamPage,\r\n  TeamPageInfo,\r\n} from \"../note/note\";\r\nimport { loadNote, saveTeamNote, updateTeamNote } from \"../note/archive\";\r\nimport { getUserID } from \"../user\";\r\nimport localforage from \"localforage\";\r\n\r\nexport let BASE_URL = \"https://api.slotdumpling.top/paint\";\r\n// BASE_URL = \"http://192.168.1.14:8090/paint\";\r\naxios.defaults.baseURL = BASE_URL;\r\n\r\nexport async function getNoteID(roomCode: string) {\r\n  try {\r\n    const { data } = await axios.get(`code/${roomCode}`);\r\n    console.log({ data });\r\n    if (data.statusCode !== 200) return null;\r\n    return data.noteID as string;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n}\r\n\r\ninterface InfoRes {\r\n  statusCode: number;\r\n  code: number;\r\n  noteInfo: TeamNoteInfo;\r\n  pageInfos: Record<string, TeamPageInfo>;\r\n}\r\n\r\nexport async function getTeamNoteInfo(noteID: string) {\r\n  try {\r\n    const { data } = await axios.get(`info/${noteID}`);\r\n    const { statusCode, ...res } = data as InfoRes;\r\n    if (statusCode !== 200) return null;\r\n    return res;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function loadTeamNoteInfo(noteID: string) {\r\n  try {\r\n    const infoRes = await getTeamNoteInfo(noteID);\r\n    if (!infoRes) return null;\r\n    const { noteInfo, pageInfos } = infoRes;\r\n\r\n    if (await updateTeamNote(noteID, noteInfo, pageInfos)) return infoRes;\r\n\r\n    if (noteInfo.withImg) {\r\n      const { data } = await axios({\r\n        method: \"GET\",\r\n        url: noteID,\r\n        responseType: \"blob\",\r\n      });\r\n      const file = new Blob([data], { type: \"application/pdf\" });\r\n      await saveTeamNote(noteID, noteInfo, pageInfos, file);\r\n    } else {\r\n      await saveTeamNote(noteID, noteInfo, pageInfos);\r\n    }\r\n    return infoRes;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function putNote(noteID: string) {\r\n  const note = await loadNote(noteID);\r\n  if (!note) return false;\r\n  const { uid, name, withImg, pdf, pageOrder, pageRec } = note;\r\n  removePageTimg(pageRec);\r\n\r\n  try {\r\n    const { data } = await axios.put(`create/${noteID}`, {\r\n      userID: getUserID(),\r\n      pageRec,\r\n      noteInfo: { uid, name, withImg, pageOrder },\r\n    });\r\n\r\n    if (pdf) {\r\n      const formData = new FormData();\r\n      const ab = await pdf.arrayBuffer();\r\n      const file = new Blob([ab]);\r\n      formData.append(\"file\", file, noteID);\r\n      await axios({\r\n        method: \"POST\",\r\n        url: \"upload\",\r\n        data: formData,\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n    }\r\n\r\n    if (data.statusCode !== 201) return false;\r\n    return true;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function updatePages(noteID: string) {\r\n  const note = await loadNote(noteID);\r\n  if (!note) return null;\r\n  const { uid, name, withImg, pageOrder, pageRec } = note;\r\n  removePageTimg(pageRec);\r\n\r\n  try {\r\n    const { data } = await axios.put(`update/${noteID}`, {\r\n      userID: getUserID(),\r\n      pageRec,\r\n      noteInfo: { uid, name, withImg, pageOrder },\r\n    });\r\n    if (data.statusCode === 201) return true;\r\n    else return false;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return false;\r\n  }\r\n}\r\n\r\nconst teamForage = localforage.createInstance({ name: \"teamState\" });\r\nexport async function getTeamNoteState(noteID: string) {\r\n  try {\r\n    const { data } = await axios.get(`state/${noteID}`, {\r\n      params: { userID: getUserID() },\r\n    });\r\n    if (data.statusCode !== 200) return null;\r\n    const { teamPages } = data;\r\n    teamForage.setItem(noteID, teamPages);\r\n    return teamPages as Record<string, TeamPage>;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function getCachedTeamState(noteID: string) {\r\n  return teamForage.getItem<Record<string, TeamPage>>(noteID);\r\n}\r\n","import { Note, NoteInfo, NotePage, TeamNoteInfo, TeamPageInfo } from \"./note\";\r\nimport { getDefaultFlatState } from \"../draw/DrawState\";\r\nimport localforage from \"localforage\";\r\nimport { v4 as getUid } from \"uuid\";\r\nimport { pickBy } from \"lodash-es\";\r\n\r\nexport interface NoteTag {\r\n  uid: string;\r\n  name: string;\r\n  color: string;\r\n  notes: string[];\r\n}\r\n\r\nexport async function getAllNotes() {\r\n  const allNotes = await localforage.getItem<Record<string, NoteInfo>>(\r\n    \"ALL_NOTES\"\r\n  );\r\n  if (allNotes) return allNotes;\r\n  localforage.setItem(\"ALL_NOTES\", {});\r\n  return {};\r\n}\r\n\r\nexport async function getAllTags() {\r\n  const tags = await localforage.getItem<Record<string, NoteTag>>(\"ALL_TAGS\");\r\n  if (tags) return tags;\r\n  localforage.setItem(\"ALL_TAGS\", {});\r\n  return {};\r\n}\r\n\r\nexport async function addNewTag(name: string, color: string) {\r\n  const uid = getUid();\r\n  const newTag: NoteTag = {\r\n    uid,\r\n    name,\r\n    color,\r\n    notes: [],\r\n  };\r\n  const prevTags = await getAllTags();\r\n  const tags = { ...prevTags, [uid]: newTag };\r\n  await localforage.setItem(\"ALL_TAGS\", tags);\r\n\r\n  return tags;\r\n}\r\n\r\nexport async function deleteTag(uid: string) {\r\n  const prevTags = await getAllTags();\r\n  const { [uid]: _, ...tags } = prevTags;\r\n  await localforage.setItem(\"ALL_TAGS\", tags);\r\n\r\n  return tags;\r\n}\r\n\r\nexport async function editTag(tag: NoteTag) {\r\n  const prevTags = await getAllTags();\r\n  const tags = { ...prevTags, [tag.uid]: tag };\r\n  await localforage.setItem(\"ALL_TAGS\", tags);\r\n  return tags;\r\n}\r\n\r\nexport async function loadNote(uid: string) {\r\n  const note = await localforage.getItem<Note>(uid);\r\n  if (!note) return;\r\n  const pdf = await localforage.getItem<Blob>(`PDF_${uid}`);\r\n  if (pdf) return { ...note, pdf };\r\n  else return note;\r\n}\r\n\r\nexport async function editNoteData(uid: string, noteData: Partial<Note>) {\r\n  noteData = pickBy(noteData, (v) => v !== undefined);\r\n  if (\"pageRec\" in noteData) noteData.lastTime = Date.now();\r\n\r\n  const allNotes = await getAllNotes();\r\n  const { pageRec, pageOrder, ...noteInfo } = noteData;\r\n  const prevNoteInfo = allNotes[uid];\r\n  if (!prevNoteInfo) return;\r\n  allNotes[uid] = { ...prevNoteInfo, ...noteInfo };\r\n\r\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\r\n  const prevNote = await loadNote(uid);\r\n  if (!prevNote) return;\r\n  await localforage.setItem(uid, { ...prevNote, ...noteData });\r\n}\r\n\r\nexport async function saveNoteInfo(noteInfo: NoteInfo) {\r\n  const { uid, tagID } = noteInfo;\r\n  const allNotes = await getAllNotes();\r\n  allNotes[uid] = noteInfo;\r\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\r\n  const tags = await getAllTags();\r\n  const tag = tags[tagID];\r\n  if (tag) {\r\n    tag.notes.push(noteInfo.uid);\r\n    await localforage.setItem(\"ALL_TAGS\", tags);\r\n  }\r\n  return { tags, allNotes };\r\n}\r\n\r\nexport async function createNewNote(noteWithPdf: Note) {\r\n  const { pdf, ...note } = noteWithPdf;\r\n  await localforage.setItem(note.uid, note);\r\n  if (pdf) await localforage.setItem(`PDF_${note.uid}`, pdf);\r\n  const { pageRec, pageOrder, ...noteInfo } = note;\r\n  return await saveNoteInfo(noteInfo);\r\n}\r\n\r\nexport async function deleteNote(uid: string) {\r\n  const note = await loadNote(uid);\r\n  const allNotes = await getAllNotes();\r\n  const tags = await getAllTags();\r\n  if (!note) return { tags, allNotes };\r\n  await localforage.removeItem(uid);\r\n  await localforage.removeItem(`PDF_${uid}`);\r\n  delete allNotes[uid];\r\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\r\n\r\n  const { tagID } = note;\r\n  const prevTag = tags[tagID];\r\n  if (prevTag) {\r\n    prevTag.notes = prevTag.notes.filter((id) => id !== uid);\r\n    await localforage.setItem(\"ALL_TAGS\", tags);\r\n  }\r\n  return { tags, allNotes };\r\n}\r\n\r\nexport async function moveNoteTag(noteID: string, tagID: string) {\r\n  const note = await loadNote(noteID);\r\n  const allNotes = await getAllNotes();\r\n  const tags = await getAllTags();\r\n  const noteInfo = allNotes[noteID];\r\n  if (!note || !noteInfo) return { tags, allNotes };\r\n\r\n  const { tagID: prevTagId } = note;\r\n  note.tagID = tagID;\r\n  await localforage.setItem(noteID, note);\r\n  noteInfo.tagID = tagID;\r\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\r\n\r\n  const prevTag = tags[prevTagId];\r\n  if (prevTag) {\r\n    prevTag.notes = prevTag.notes.filter((id) => id !== noteID);\r\n  }\r\n  tags[tagID]?.notes.push(noteID);\r\n  await localforage.setItem(\"ALL_TAGS\", tags);\r\n  return { tags, allNotes };\r\n}\r\n\r\nexport async function saveTeamNote(\r\n  noteID: string,\r\n  noteInfo: TeamNoteInfo,\r\n  teamPages: Record<string, TeamPageInfo>,\r\n  file?: Blob\r\n) {\r\n  let note = await loadNote(noteID);\r\n  if (note) return;\r\n  const time = Date.now();\r\n  const pageRec: Record<string, NotePage> = {};\r\n  note = {\r\n    ...noteInfo,\r\n    tagID: \"DEFAULT\",\r\n    team: true,\r\n    pageRec,\r\n    pdf: file,\r\n    createTime: time,\r\n    lastTime: time,\r\n  };\r\n\r\n  // set empty state for each page\r\n  Object.entries(teamPages).forEach(([pageID, page]) => {\r\n    pageRec[pageID] = { ...page, state: getDefaultFlatState() };\r\n  });\r\n\r\n  // parse timg for each page\r\n  if (file) {\r\n    const { getPDFImages } = await import(\"../note/pdfImage\");\r\n    const { images } = await getPDFImages(file, 0.5);\r\n    Object.values(pageRec).forEach((page) => {\r\n      const { pdfIndex } = page;\r\n      if (!pdfIndex) return;\r\n      page.image = images[pdfIndex - 1];\r\n    });\r\n  }\r\n\r\n  await createNewNote(note);\r\n}\r\n\r\nexport async function updateTeamNote(\r\n  noteID: string,\r\n  noteInfo: TeamNoteInfo,\r\n  pageInfos: Record<string, TeamPageInfo>\r\n) {\r\n  let note = await loadNote(noteID);\r\n  if (!note) return false;\r\n  const { pageOrder } = noteInfo;\r\n  if (pageOrder.length < note.pageOrder.length) return true;\r\n  const { pageRec, pdf } = note;\r\n  const { getOneImage } = await import(\"./pdfImage\");\r\n\r\n  // parse timgs & set empty states for new pages.\r\n  for (let [pageID, teamPage] of Object.entries(pageInfos)) {\r\n    if (pageID in pageRec) continue;\r\n    const { pdfIndex } = teamPage;\r\n    const state = getDefaultFlatState();\r\n    const notePage: NotePage = { ...teamPage, state };\r\n    if (!pdf || !pdfIndex) continue;\r\n    notePage.image = await getOneImage(pdf, pdfIndex, 0.5);\r\n    pageRec[pageID] = notePage;\r\n  }\r\n  await editNoteData(noteID, { pageOrder, pageRec });\r\n  return true;\r\n}\r\n","import { getDefaultFlatState, FlatState } from \"../draw/DrawState\";\r\nimport { v4 as getUid } from \"uuid\";\r\nimport dayjs from \"dayjs\";\r\n\r\nexport interface NotePage {\r\n  ratio: number;\r\n  state: FlatState;\r\n  image?: string;\r\n  marked?: boolean;\r\n  pdfIndex?: number;\r\n}\r\n\r\nexport const defaultNotePage: Readonly<NotePage> = {\r\n  ratio: 1.5,\r\n  state: { strokes: {} },\r\n};\r\n\r\nexport interface TeamPageState {\r\n  states: Record<string, FlatState>;\r\n}\r\n\r\nexport interface TeamPageInfo {\r\n  ratio: number;\r\n  pdfIndex?: number;\r\n}\r\n\r\nexport type TeamPage = TeamPageInfo & TeamPageState;\r\n\r\nexport interface TeamNote {\r\n  uid: string;\r\n  pageRec: Record<string, TeamPage>;\r\n}\r\n\r\nexport interface NoteInfo {\r\n  uid: string;\r\n  name: string;\r\n  tagID: string;\r\n  team: boolean;\r\n  withImg: boolean;\r\n  createTime: number;\r\n  lastTime: number;\r\n}\r\n\r\nexport type Note = NoteInfo & {\r\n  pdf?: Blob;\r\n  pageRec: Record<string, NotePage>;\r\n  pageOrder: string[];\r\n};\r\n\r\nexport interface TeamNoteInfo {\r\n  uid: string;\r\n  name: string;\r\n  pageOrder: string[];\r\n  withImg: boolean;\r\n}\r\n\r\nexport function createEmptyNote(): Note {\r\n  const pageID = getUid();\r\n  const time = Date.now();\r\n  return {\r\n    uid: getUid(),\r\n    name: `Note ${dayjs(time).format(\"HH:mm, ddd MMM D\")}`,\r\n    tagID: \"DEFAULT\",\r\n    team: false,\r\n    withImg: false,\r\n    createTime: time,\r\n    lastTime: time,\r\n    pageRec: {\r\n      [pageID]: {\r\n        ratio: 1.5,\r\n        state: getDefaultFlatState(),\r\n      },\r\n    },\r\n    pageOrder: [pageID],\r\n  };\r\n}\r\n\r\nexport function createPage(page?: NotePage): [string, NotePage] {\r\n  const pageID = getUid();\r\n  const newPage = page ?? {\r\n    ratio: 1.5,\r\n    state: getDefaultFlatState(),\r\n  };\r\n  return [pageID, newPage];\r\n}\r\n\r\nexport function removePageTimg(pageRec: Record<string, NotePage>) {\r\n  Object.values(pageRec).forEach((page) => {\r\n    delete page.image;\r\n    delete page.marked;\r\n  });\r\n}\r\n","import { v4 as getUid } from \"uuid\";\r\n\r\nexport interface UserInfo {\r\n  userID: string;\r\n  userName: string;\r\n  online: boolean;\r\n}\r\n\r\nexport const getUserID = (() => {\r\n  let cached: string;\r\n  return () => {\r\n    if (cached) return cached;\r\n    let userID = localStorage.getItem(\"USER_ID\");\r\n    if (!userID) {\r\n      userID = getUid();\r\n      localStorage.setItem(\"USER_ID\", userID);\r\n    }\r\n    cached = userID;\r\n    return userID;\r\n  };\r\n})();\r\n\r\nexport const getUserName = () => {\r\n  let name = localStorage.getItem(\"USER_NAME\");\r\n  if (!name) {\r\n    name = getUid().slice(0, 8);\r\n    localStorage.setItem(\"USER_NAME\", name);\r\n  }\r\n  return name;\r\n};\r\n\r\nexport const saveUserName = (name: string) => {\r\n  name = name.trim();\r\n  if (!name) return false;\r\n  else localStorage.setItem(\"USER_NAME\", name);\r\n  return true;\r\n};\r\n"],"names":["defaultWidthList","defaultDrawCtrl","mode","finger","lineWidth","eraserWidth","color","highlight","lasso","pixelEraser","widthList","getDrawCtrl","localforage","drawCtrl","saveDrawCtrl","DrawCtrlContext","React","updateDrawCtrl","useDrawCtrl","useContext","useDebugValue","useUpdateDrawCtrl","DrawCtrlProvider","children","useState","setDrawCtrl","useEffect","then","Provider","value","updated","prev","newCtrl","defaultRecord","states","Map","editStack","List","undoStack","defaultFactory","Record","StateSet","immutable","lastOp","this","getImmutable","get","pageID","getStates","drawState","prevDS","getOneState","currRecord","update","s","set","l","push","delete","stroke","DrawState","notePage","state","ratio","newDS","getEditStack","size","getUndoStack","isUndoable","lastUid","last","lastSetOp","pop","isRedoable","ds","pageRec","map","getRotateCursorImage","cache","createVirtualCanvas","canvas","context","image","Image","src","rotateImg","angle","Math","round","cached","translate","rotate","PI","drawImage","data","toDataURL","clearRect","resetTransform","getRotateCurcor","usePreventTouch","allowFinger","isTouch","useRef","checkPoniter","e","isPrimary","current","pointerType","preventTouch","touch","touches","touchType","isApplePencil","length","isEventValid","stopPropagation","onPointerDownCapture","onPointerMoveCapture","onTouchStartCapture","onTouchMoveCapture","Path","paper","Size","Point","Group","Color","Raster","Layer","Draw","ref","otherStates","onChange","readonly","imgSrc","setActiveTool","width","height","canvasEl","scope","group","setGroup","usePaperItem","path","setPath","rect","setRect","rotateHandle","setRotateHandle","cvs","scp","setup","settings","handleSize","hitTolerance","forEach","project","addLayer","layers","visible","activate","Tool","remove","releaseCanvas","bgRect","paintBackground","useSize","zero","view","viewSize","multiply","scale","raster","addChild","sendToBack","onLoad","fitBounds","bringToFront","mergedStrokes","useMemo","getStrokeList","tempGroup","layer","self","hasStroke","uid","item","paintStroke","removeChildren","hitRef","selected","setSelected","paperMode","chosenIDs","setChosenIDs","chosenItems","IDSet","Set","filter","has","name","resetSelect","useCallback","undefined","downPath","startStroke","downRect","startRect","point","handleDown","draw","erase","select","contains","hitRes","hitTest","segments","text","t","getClickedText","startText","setPointText","dragPath","add","smooth","handleDrag","x","y","s1","s2","s3","segment","center","bounds","axis","subtract","line","setCursor","moveP","baseP","next","diagonal","strokeWidth","delta","pointText","topCenter","bottomRight","tool","maxDistance","erased","replaced","handelToolDrag","hitTestAll","class","tolerance","topItem","parent","radius","circle","Circle","sub","trace","replaceWith","opacity","guide","handleUp","isEmpty","simplify","pathData","exportJSON","items","Array","from","clear","splitters","flattenCP","i","erasedList","selection","abs","area","closePath","moveDash","checkLasso","link","lastSegment","updateMutation","handleSelectedCursor","cursor","half","getCircleCursor","handleMove","handler","onMouseDown","onMouseDrag","onMouseUp","onMouseMove","mutations","p","deleteSelected","mutateStyle","updateGroupStyle","duplicateSelected","transP","divide","copies","clone","rasterize","g","addTo","insert","cancelText","submitText","justification","content","fillColor","useImperativeHandle","preventDefault","document","addEventListener","removeEventListener","usePinch","memo","offset","first","origin","lastScale","lastOrigin","elPos","originRawP","getBoundingClientRect","originViewP","originPorjP","viewToProject","dScale","aniCount","pow","scaleView","requestAnimationFrame","putCenterBack","zoom","scaleBounds","max","min","rubberband","target","touchHandler","className","style","displayName","tuple","importJSON","console","error","Rectangle","onFrame","strokeColor","alpha","blendMode","strokeJoin","strokeCap","dashOffset","dashArray","projSize","viewW","viewH","projW","projH","minX","minY","maxX","maxY","getCenterTranslate","deltaX","deltaY","dP","move","isInside","res","compare","intersects","checkedP","newColor","fill","fontSize","cp","flat","AddPageButton","addFinalPage","ReaderMethodCtx","type","icon","PlusOutlined","block","onClick","createFromIconfontCN","scriptUrl","PenPanel","panelBlur","setPanelBlur","WidthSelect","HighlightSwitch","checked","ColorSelect","setColor","c","field","currWidth","chosen","indexOf","popShow","setPopShow","includes","realSizeStyle","WIDTH","options","label","index","onVisibleChange","v","trigger","placement","destroyTooltipOnHide","defaultValue","onAfterChange","w","newWL","slice","useForceLight","forceLight","allColors","backgroundColor","borderColor","SelectTool","drawRef","CSSTransition","timeout","in","unmountOnExit","SelectToolContent","btnProps","shape","currDrawCtrl","setCurrDrawCtrl","createPortal","getPopupContainer","parentElement","BgColorsOutlined","CopyOutlined","PictureOutlined","imageData","Modal","title","alt","okText","onOk","saveAs","danger","DeleteOutlined","querySelector","TextTool","setText","align","setAlign","toCSS","fontColorBtn","overlayStyle","FontColorsOutlined","alignRadio","optionType","buttonStyle","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","onCancel","trim","bodyStyle","paddingTop","destroyOnClose","TextArea","rows","autoFocus","scrollForage","largestKey","order","result","maxRatio","key","insertAfter","list","prevItem","newItem","prevIndex","curr","splice","HeaderLeft","saved","instantSave","nav","useNavigate","HomeFilled","disabled","SaveOutlined","HeaderMiddle","handleUndo","handleRedo","stateSet","ReaderStateCtx","setForceLight","UndoOutlined","RedoOutlined","message","BulbFilled","BulbOutlined","PenButton","EraserButton","SelectButton","HighlightOutlined","GatewayOutlined","UserAvatar","userID","userRec","TeamCtx","getHashedColor","userInfo","userName","PageNavContent","pageOrder","currPageID","scrollPage","saveReorder","useActiveKey","activeKey","refRec","ALL","MARKED","WRITTEN","scrollIntoView","PreviewTabs","onDragEnd","source","destination","fromIndex","toIndex","newOrder","removed","exchange","droppableId","droppableProps","innerRef","placeholder","PagePreview","pageIndex","teamState","setChosen","page","teamStateMap","getOnePageStateMap","marked","every","draggableId","isDragDisabled","draggableProps","dragHandleProps","dragged","isDragging","PageWrapper","thumbnail","preview","PreviewTools","switchPageMarked","ignores","userIDs","getPageValidUsers","PreviewOption","TeamAvatars","maxCount","classNames","maxPopoverPlacement","addPage","deletePage","menu","MoreOutlined","setActiveKey","TabPane","Tabs","tabBarGutter","centered","tab","PageNav","navOn","setNavOn","initKey","MenuUnfoldOutlined","MenuFoldOutlined","onClose","closable","zIndex","padding","overflow","headerStyle","textAlign","HeaderRight","teamOn","RoomInfo","JoinRoom","UserCard","renaming","setRenaming","setIgnores","resetIO","online","getUserID","ignored","Search","onSearch","saveUserName","enterButton","CheckOutlined","FormOutlined","EyeInvisibleOutlined","EyeOutlined","code","connected","loadInfo","loadState","noteInfo","window","location","href","share","selfName","copy","log","userList","selfID","selfInfo","otherUsers","values","Object","onlineNum","teamPop","DisconnectOutlined","showIcon","banner","String","plain","ShareAltOutlined","u","reloading","setReloading","loading","ReloadOutlined","status","count","TeamOutlined","noteID","createRoom","putNote","editNoteData","team","UsergroupAddOutlined","ReaderHeader","prevPageID","Reader","useParams","setPageRec","setNoteInfo","setStateSet","setPageOrder","useSafeState","setSaved","io","addTeamStatePage","refMap","setRefMap","scrolled","setPrevPageID","inviewRatios","setInviewRatios","getItem","stored","setItem","sectionRef","el","useScrollPage","loadNote","storedNote","pdf","createFromPages","saver","useEvent","pr","toObject","debouncedSave","debounce","flush","savePageRec","cb","defaultNotePage","pushReorder","emit","handleReorder","onUndo","deleted","prevOrder","duration","handleNewPage","newPage","addState","on","removeAllListeners","pushNewPage","newTeamPage","updatePageRec","updateStateSet","newSS","operation","lastDS","getLastDS","syncStrokeTime","prevPage","createPage","renderResult","undo","redo","PageContainer","Dark","id","lastPageID","preload","currIndex","selfIndex","updateState","setState","pdfIndex","onViewChange","useInView","threshold","range","entry","intersectionRatio","fullImg","setFullImg","loadImage","once","getNotePageImage","show","deleteAll","toList","toArray","imageLoaded","Boolean","drawShow","viewBox","DrawWrapper","activeTool","handleChange","arg","IoFactory","BASE_URL","query","getUserName","Team","setTeamState","setCode","setUserRec","setIO","loaded","setLoaded","setConnected","loadTeamNoteInfo","info","getTeamNoteState","teamNote","TeamState","updateSelfState","updatePages","roomInit","infoLoaded","stateLoaded","pushOperation","joined","members","showJoinMsg","leaved","showLeaveMsg","resetUser","close","Loading","LoginOutlined","LogoutOutlined","ColorCirle","colors","getRandomColor","floor","random","str","hash","colorPalette","light","dark","getColorPalette","palette","strokes","OrderedMap","historyStack","getDefaultFlatState","getStrokeMap","lastRecord","getHistoryStack","unshift","nextRecord","getUid","timestamp","Date","now","pushStroke","prevRecord","m","splitMap","prevUid","splitStrokes","prevStroke","op","eraseStrokes","mutateStrokes","flatState","operations","iterators","heap","Heap","s0","iter","done","record","iterator","v4","pageStates","pageInfos","getPageStates","keys","getPageInfos","pageMap","setOp","getPageRatio","includesPage","prevDs","newTS","entries","teamPages","teamPage","createElement","getContext","Error","ctx","useTransitionEnd","propertyName","active","resRef","Promise","ActiveKeyCtx","createContext","ActiveKeyProvider","getNoteID","roomCode","axios","statusCode","getTeamNoteInfo","infoRes","updateTeamNote","withImg","method","url","responseType","file","Blob","saveTeamNote","note","removePageTimg","formData","FormData","arrayBuffer","ab","append","headers","teamForage","params","getCachedTeamState","getAllNotes","allNotes","getAllTags","tags","addNewTag","newTag","notes","prevTags","deleteTag","editTag","tag","noteData","pickBy","lastTime","prevNoteInfo","prevNote","saveNoteInfo","tagID","createNewNote","noteWithPdf","deleteNote","prevTag","moveNoteTag","prevTagId","time","createTime","getPDFImages","images","getOneImage","createEmptyNote","dayjs","format","localStorage"],"sourceRoot":""}