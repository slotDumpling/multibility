{"version":3,"file":"static/js/318.37328ee4.chunk.js","mappings":"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","sources":["lib/draw/drawCtrl.ts","lib/draw/StateSet.ts","component/draw/touch.ts","component/draw/Draw.tsx","component/reader/ReaderUtils.tsx","component/ui/IconFont.tsx","component/reader/tools/PenPanel.tsx","component/reader/tools/DrawTools.tsx","component/reader/lib/scroll.ts","component/reader/header/Middle.tsx","component/reader/lib/array.ts","component/widgets/UserAvatar.tsx","component/reader/PageNav.tsx","component/reader/header/Right.tsx","component/reader/header/Header.tsx","component/reader/Reader.tsx","lib/network/io.ts","lib/draw/TeamState.ts","component/reader/Team.tsx","component/widgets/ColorCircle.tsx","lib/color.ts","lib/draw/DrawState.ts","lib/draw/canvas.ts","lib/network/http.ts","lib/note/archive.ts","lib/note/note.ts","lib/user.ts"],"sourcesContent":["import localforage from \"localforage\";\r\nexport interface DrawCtrl {\r\n  mode: \"draw\" | \"erase\" | \"select\" | \"text\";\r\n  finger: boolean;\r\n  lineWidth: number;\r\n  eraserWidth: number;\r\n  color: string;\r\n  highlight: boolean;\r\n  lasso: boolean;\r\n  pixelEraser: boolean;\r\n  widthList: number[];\r\n}\r\n\r\nexport const defaultWidthList = [10, 20, 30, 50];\r\nexport const defaultDrawCtrl: Readonly<DrawCtrl> = {\r\n  mode: \"draw\",\r\n  finger: true,\r\n  lineWidth: 10,\r\n  eraserWidth: 10,\r\n  color: \"#000000\",\r\n  highlight: false,\r\n  lasso: true,\r\n  pixelEraser: false,\r\n  widthList: defaultWidthList,\r\n};\r\n\r\nexport async function getDrawCtrl() {\r\n  let drawCtrl = await localforage.getItem<DrawCtrl>(\"DRAW_CTRL\");\r\n  if (!drawCtrl) {\r\n    drawCtrl = defaultDrawCtrl;\r\n    await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n  }\r\n  return drawCtrl;\r\n}\r\n\r\nexport async function saveDrawCtrl(drawCtrl: DrawCtrl) {\r\n  await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n}\r\n","import { DrawState, Operation, Stroke, WIDTH } from \"./DrawState\";\r\nimport { List, Map, Record } from \"immutable\";\r\nimport { NotePage } from \"../note/note\";\r\n\r\ninterface StateSetRecordType {\r\n  states: Map<string, DrawState>;\r\n  editStack: List<string>;\r\n  undoStack: List<string>;\r\n}\r\n\r\nconst defaultRecord: Readonly<StateSetRecordType> = {\r\n  states: Map(),\r\n  editStack: List(),\r\n  undoStack: List(),\r\n};\r\n\r\ntype StateSetRecord = Record<StateSetRecordType>;\r\nconst defaultFactory = Record(defaultRecord);\r\n\r\nexport type SetOperation = Operation & { pageID: string };\r\n\r\nexport class StateSet {\r\n  constructor(\r\n    private immutable: StateSetRecord,\r\n    public lastOp?: SetOperation\r\n  ) {}\r\n\r\n  static createFromPages(\r\n    pageRec: globalThis.Record<string, NotePage>,\r\n    width = WIDTH\r\n  ) {\r\n    return new StateSet(\r\n      defaultFactory().set(\r\n        \"states\",\r\n        Map(pageRec).map(({ state, ratio }) =>\r\n          DrawState.loadFromFlat(state, width, width * ratio)\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  getImmutable() {\r\n    return this.immutable;\r\n  }\r\n\r\n  getStates() {\r\n    return this.getImmutable().get(\"states\");\r\n  }\r\n\r\n  getOneState(pageID: string) {\r\n    return this.getStates().get(pageID);\r\n  }\r\n\r\n  getEditStack() {\r\n    return this.getImmutable().get(\"editStack\");\r\n  }\r\n\r\n  getUndoStack() {\r\n    return this.getImmutable().get(\"undoStack\");\r\n  }\r\n\r\n  setState(pageID: string, drawState: DrawState) {\r\n    const prevDS = this.getOneState(pageID);\r\n    if (!prevDS || prevDS === drawState) return this;\r\n    let currRecord = this.getImmutable()\r\n      .update(\"states\", (s) => s.set(pageID, drawState))\r\n      .update(\"editStack\", (l) => l.push(pageID))\r\n      .delete(\"undoStack\");\r\n\r\n    const { lastOp } = drawState;\r\n    const lastSetOp = lastOp && { ...lastOp, pageID };\r\n\r\n    return new StateSet(currRecord, lastSetOp);\r\n  }\r\n\r\n  // sync with mutation.\r\n  syncStrokeTime(pageID: string, stroke: Stroke) {\r\n    const prevDS = this.getOneState(pageID);\r\n    prevDS && DrawState.syncStrokeTime(prevDS, stroke);\r\n    return this;\r\n  }\r\n\r\n  addState(pageID: string, notePage: NotePage, width = WIDTH) {\r\n    const { state, ratio } = notePage;\r\n    const newDS = DrawState.loadFromFlat(state, width, width * ratio);\r\n    const currRecord = this.getImmutable().update(\"states\", (s) =>\r\n      s.set(pageID, newDS)\r\n    );\r\n    return new StateSet(currRecord);\r\n  }\r\n\r\n  deleteState(pageID: string) {\r\n    return new StateSet(\r\n      this.getImmutable().update(\"states\", (s) => s.delete(pageID))\r\n    );\r\n  }\r\n\r\n  isUndoable() {\r\n    return this.getEditStack().size > 0;\r\n  }\r\n\r\n  isRedoable() {\r\n    return this.getUndoStack().size > 0;\r\n  }\r\n\r\n  undo() {\r\n    if (!this.isUndoable()) return this;\r\n    const lastUid = this.getEditStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.undo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"editStack\", (s) => s.pop())\r\n        .update(\"undoStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  redo() {\r\n    if (!this.isRedoable()) return this;\r\n    const lastUid = this.getUndoStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.redo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"undoStack\", (s) => s.pop())\r\n        .update(\"editStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  getLastDS(): [string, DrawState] | undefined {\r\n    const pageID = this.lastOp?.pageID;\r\n    const ds = pageID && this.getOneState(pageID);\r\n    if (ds) return [pageID, ds];\r\n  }\r\n}\r\n","import { PointerEvent, TouchEvent, useEffect, useRef } from \"react\";\r\n\r\ntype iOSTouch = Touch & {\r\n  force?: number;\r\n  touchType?: \"stylus\" | \"direct\";\r\n};\r\n\r\nexport function isApplePencil(e: TouchEvent) {\r\n  const touch = e.touches[0] as iOSTouch;\r\n  return touch?.touchType === \"stylus\";\r\n}\r\n\r\nexport function usePreventTouch(\r\n  allowFinger: boolean\r\n): React.HTMLAttributes<HTMLDivElement> {\r\n  const isTouch = useRef(false);\r\n  const checkPoniter = (e: PointerEvent) =>\r\n    e.isPrimary && (isTouch.current = e.pointerType === \"touch\");\r\n\r\n  const isEventValid = (e: TouchEvent) =>\r\n    !isTouch.current ||\r\n    isApplePencil(e) ||\r\n    (allowFinger && e.touches.length === 1);\r\n\r\n  const preventTouch = (e: TouchEvent) =>\r\n    isEventValid(e) || e.stopPropagation();\r\n\r\n  return {\r\n    onPointerDownCapture: checkPoniter,\r\n    onPointerMoveCapture: checkPoniter,\r\n    onTouchStartCapture: preventTouch,\r\n    onTouchMoveCapture: preventTouch,\r\n  };\r\n}\r\n\r\nexport function usePreventGesture() {\r\n  useEffect(() => {\r\n    const handler = (e: Event) => e.preventDefault();\r\n    document.addEventListener(\"gesturestart\", handler);\r\n    document.addEventListener(\"gesturechange\", handler);\r\n    document.addEventListener(\"gestureend\", handler);\r\n    return () => {\r\n      document.removeEventListener(\"gesturestart\", handler);\r\n      document.removeEventListener(\"gesturechange\", handler);\r\n      document.removeEventListener(\"gestureend\", handler);\r\n    };\r\n  }, []);\r\n}\r\n","import React, {\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  Dispatch,\r\n  useEffect,\r\n  useCallback,\r\n  useDebugValue,\r\n  SetStateAction,\r\n  useImperativeHandle,\r\n} from \"react\";\r\nimport {\r\n  DrawState,\r\n  Mutation,\r\n  Splitter,\r\n  Stroke,\r\n} from \"../../lib/draw/DrawState\";\r\nimport { defaultDrawCtrl, DrawCtrl } from \"../../lib/draw/drawCtrl\";\r\nimport { usePreventTouch, usePreventGesture } from \"./touch\";\r\nimport { releaseCanvas } from \"../../lib/draw/canvas\";\r\nimport { usePinch } from \"@use-gesture/react\";\r\nimport useSize from \"@react-hook/size\";\r\nimport paper from \"paper\";\r\nimport \"./draw.sass\";\r\n\r\nconst { Path, Size, Point, Group, Color, Raster, Layer } = paper;\r\n\r\nexport type ActiveToolKey = \"\" | \"select\" | \"text\";\r\nexport interface DrawRefType {\r\n  deleteSelected: () => void;\r\n  rotateSelected: (angle: number, last?: boolean) => void;\r\n  duplicateSelected: () => void;\r\n  mutateStyle: (updated: Partial<DrawCtrl>) => void;\r\n  rasterize: () => string;\r\n  submitText: (text: string, color?: string, justification?: string) => void;\r\n  cancelText: () => void;\r\n  pointText?: paper.PointText;\r\n}\r\ninterface DrawPropType {\r\n  drawState: DrawState;\r\n  otherStates?: DrawState[];\r\n  onChange?: Dispatch<SetStateAction<DrawState>>;\r\n  setActiveTool?: Dispatch<SetStateAction<ActiveToolKey>>;\r\n  drawCtrl?: DrawCtrl;\r\n  readonly?: boolean;\r\n  imgSrc?: string;\r\n}\r\n\r\nconst Draw = React.forwardRef<DrawRefType, DrawPropType>(\r\n  (\r\n    {\r\n      drawState,\r\n      otherStates,\r\n      onChange = () => {},\r\n      drawCtrl = defaultDrawCtrl,\r\n      readonly = false,\r\n      imgSrc,\r\n      setActiveTool = () => {},\r\n    },\r\n    ref\r\n  ) => {\r\n    const { width, height } = drawState;\r\n    const { mode, finger, lasso, eraserWidth } = drawCtrl;\r\n\r\n    const canvasEl = useRef<HTMLCanvasElement>(null);\r\n    const scope = useRef(new paper.PaperScope());\r\n    const [group, setGroup] = useState<paper.Item[]>([]);\r\n    const [path, setPath] = usePaperItem<paper.Path>();\r\n    const [rect, setRect] = usePaperItem<paper.Path.Rectangle>();\r\n\r\n    useEffect(() => {\r\n      const cvs = canvasEl.current;\r\n      const scp = scope.current;\r\n      if (!cvs) return;\r\n\r\n      scp.setup(cvs);\r\n      scp.settings.handleSize = 10;\r\n      scp.settings.hitTolerance = 20;\r\n      scp.project.addLayer(new Layer());\r\n      scp.project.addLayer(new Layer());\r\n      scp.project.addLayer(new Layer());\r\n      scp.project.layers[2].activate();\r\n      scp.project.layers.forEach((l) => (l.visible = false));\r\n      new scp.Tool();\r\n\r\n      return () => {\r\n        scp.remove();\r\n        releaseCanvas(cvs);\r\n      };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      const bgRect = paintBackground(scope.current, width, height);\r\n      return () => void bgRect.remove();\r\n    }, [width, height]);\r\n\r\n    const [canvasWidth] = useSize(canvasEl);\r\n    const ratio = canvasWidth / width;\r\n    useEffect(() => {\r\n      if (!ratio) return;\r\n      const scp = scope.current;\r\n      scp.view.viewSize = new Size(width, height).multiply(ratio);\r\n      scp.view.scale(ratio, new Point(0, 0));\r\n      scp.project.layers.forEach((l) => (l.visible = true));\r\n\r\n      return () => {\r\n        scp.project?.layers.forEach((l) => (l.visible = false));\r\n        scp.view?.scale(1 / ratio, new Point(0, 0));\r\n      };\r\n    }, [width, height, ratio]);\r\n\r\n    useEffect(() => {\r\n      if (!imgSrc) return;\r\n      scope.current.activate();\r\n      const raster = new Raster(imgSrc);\r\n      raster.project.layers[0].addChild(raster);\r\n      raster.sendToBack();\r\n      raster.onLoad = () => {\r\n        // render the image in full size to prevent blurring.\r\n        requestAnimationFrame(() => {\r\n          raster.fitBounds(new paper.Rectangle(0, 0, width, height));\r\n          raster.bringToFront();\r\n        });\r\n      };\r\n\r\n      return () => void raster?.remove();\r\n    }, [imgSrc, width, height]);\r\n\r\n    const mergedStrokes = useMemo(\r\n      () =>\r\n        otherStates\r\n          ? DrawState.mergeStates(drawState, ...otherStates)\r\n          : drawState.getStrokeList(),\r\n      [drawState, otherStates]\r\n    );\r\n    useEffect(() => {\r\n      const tempGroup: paper.Item[] = [];\r\n      const layer = scope.current.project.layers[1];\r\n\r\n      scope.current.activate();\r\n      mergedStrokes.forEach((stroke) => {\r\n        const self = drawState.hasStroke(stroke.uid);\r\n        const item = paintStroke(stroke, layer, !self);\r\n        if (!item) return;\r\n        if (self) tempGroup.push(item);\r\n      });\r\n      setGroup(tempGroup);\r\n\r\n      return () => void layer.removeChildren();\r\n    }, [mergedStrokes, drawState]);\r\n\r\n    const hitRef = useRef<paper.HitResult>();\r\n    const [selected, setSelected] = useState(false);\r\n    const paperMode = mode === \"select\" && selected ? \"selected\" : mode;\r\n    const [chosenIDs, setChosenIDs] = useState<string[]>([]);\r\n    const chosenItems = useMemo(() => {\r\n      const IDSet = new Set(chosenIDs);\r\n      return group.filter((item) => IDSet.has(item.name));\r\n    }, [group, chosenIDs]);\r\n\r\n    const resetSelect = useCallback(() => {\r\n      setSelected(false);\r\n      setPath(undefined);\r\n      setRect(undefined);\r\n    }, [setPath, setRect]);\r\n\r\n    useEffect(() => {\r\n      if (mode === \"select\") return resetSelect;\r\n    }, [mode, resetSelect]);\r\n    useEffect(() => resetSelect, [lasso, resetSelect]);\r\n\r\n    useEffect(() => {\r\n      if (!selected) return;\r\n      return () => {\r\n        setChosenIDs([]);\r\n        setActiveTool(\"\");\r\n      };\r\n    }, [selected, setActiveTool]);\r\n\r\n    const downPath = () => setPath(startStroke(drawCtrl));\r\n    const downRect = (e: paper.MouseEvent) => setRect(startRect(e.point));\r\n\r\n    const handleDown = {\r\n      draw: downPath,\r\n      erase: downPath,\r\n      select: lasso ? downPath : downRect,\r\n      selected(e: paper.MouseEvent) {\r\n        if (lasso) {\r\n          // if the point is outside of selection, reset selection\r\n          if (path?.contains(e.point)) return;\r\n          downPath();\r\n          setSelected(false);\r\n        } else {\r\n          // check if the point hit the segment point.\r\n          const hitRes = rect?.hitTest(e.point, { segments: true });\r\n          hitRef.current = hitRes;\r\n          if (hitRes) return;\r\n          // if the point is outside of selection, reset selection\r\n          if (rect?.contains(e.point)) return;\r\n          downRect(e);\r\n          setSelected(false);\r\n        }\r\n      },\r\n      text(e: paper.MouseEvent) {\r\n        const layer = scope.current.project.layers[1];\r\n        const t =\r\n          getClickedText(layer, e.point) ??\r\n          new paper.PointText({\r\n            point: e.point.add(new Point(0, 50)),\r\n            content: \"Insert text...\",\r\n            fontSize: 50,\r\n            justification: \"center\",\r\n            fillColor: \"#1890ff55\",\r\n          });\r\n        setPointText(t as paper.PointText);\r\n      },\r\n    }[paperMode];\r\n\r\n    const dragPath = (e: paper.MouseEvent) => {\r\n      path?.add(e.point);\r\n      path?.smooth();\r\n    };\r\n    const resizeRect = (e: paper.MouseEvent) => {\r\n      if (!rect) return;\r\n      const { x, y } = e.point;\r\n      const [, s1, s2, s3] = rect.segments;\r\n      s1.point.x = x;\r\n      s2.point = e.point;\r\n      s3.point.y = y;\r\n    };\r\n\r\n    const handleDrag = {\r\n      draw: dragPath,\r\n      erase: dragPath,\r\n      select: lasso ? dragPath : resizeRect,\r\n      selected(e: paper.MouseEvent) {\r\n        const hitRes = hitRef.current;\r\n        if (hitRes?.segment) {\r\n          // resize selected items\r\n          const moveP = hitRes.segment.point;\r\n          const baseP = hitRes.segment.next.next.point;\r\n          const diagonal = moveP.subtract(baseP);\r\n          const projection = e.point.subtract(baseP).project(diagonal);\r\n          const scale = projection.x / diagonal.x;\r\n          if (scale < 0) return;\r\n\r\n          rect?.scale(scale, baseP);\r\n          chosenItems.forEach((item) => {\r\n            item.scale(scale, baseP);\r\n            item.strokeWidth *= scale;\r\n          });\r\n        } else {\r\n          // move selected items\r\n          chosenItems.forEach((item) => item.translate(e.delta));\r\n          path?.translate(e.delta);\r\n          rect?.translate(e.delta);\r\n        }\r\n      },\r\n      text(e: paper.MouseEvent) {\r\n        if (!pointText || pointText.name) return;\r\n        const { topCenter, bottomRight } = pointText.bounds;\r\n        const diagonal = bottomRight.subtract(topCenter);\r\n        const projection = e.point.subtract(topCenter).project(diagonal);\r\n        const scale = projection.x / diagonal.x;\r\n        if (scale < 0) return;\r\n        pointText.scale(scale, topCenter);\r\n      },\r\n    }[paperMode];\r\n\r\n    useEffect(() => {\r\n      scope.current.tool.maxDistance = eraserWidth;\r\n    }, [eraserWidth]);\r\n    const erased = useRef(new Set<string>());\r\n    const replaced = useRef(new Map<string, paper.Item>());\r\n\r\n    const handleEarserDrag =\r\n      paperMode === \"erase\"\r\n        ? (e: paper.ToolEvent) => {\r\n            const layer = scope.current.project.layers[1];\r\n            const hitRes = layer.hitTestAll(e.point, {\r\n              class: paper.Path,\r\n              stroke: true,\r\n              tolerance: eraserWidth / 2,\r\n            });\r\n\r\n            hitRes.forEach(({ item }) => {\r\n              if (!(item instanceof paper.Path)) return;\r\n              let topItem: paper.PathItem = item;\r\n              while (topItem.parent !== layer) {\r\n                if (!(topItem.parent instanceof paper.PathItem)) break;\r\n                topItem = topItem.parent;\r\n              }\r\n              const { name } = topItem;\r\n\r\n              if (drawCtrl.pixelEraser) {\r\n                const radius = (eraserWidth + item.strokeWidth) / 2;\r\n                const circle = new Path.Circle(e.point, radius);\r\n                circle.remove();\r\n\r\n                const sub = item.subtract(circle, { trace: false });\r\n                item.replaceWith(sub);\r\n                if (topItem === item) topItem = sub;\r\n                replaced.current.set(name, topItem);\r\n              } else {\r\n                topItem.opacity = 0.5;\r\n                topItem.guide = true;\r\n                erased.current.add(name);\r\n              }\r\n            });\r\n          }\r\n        : null;\r\n\r\n    const handleUp = {\r\n      draw() {\r\n        if (!path || path.isEmpty()) return;\r\n        path.simplify();\r\n        const pathData = path.exportJSON();\r\n        setPath(undefined);\r\n        onChange((prev) => DrawState.addStroke(prev, pathData));\r\n      },\r\n      erase() {\r\n        setPath(undefined);\r\n        if (drawCtrl.pixelEraser) {\r\n          const items = Array.from(replaced.current);\r\n          replaced.current.clear();\r\n          const splitters = items.map(([uid, item]) => {\r\n            const paths = flattenCP(item);\r\n            return [uid, paths.map((i) => i.exportJSON())] as Splitter;\r\n          });\r\n          console.log(splitters);\r\n          if (!splitters.length) return;\r\n          onChange((prev) => DrawState.splitStrokes(prev, splitters));\r\n        } else {\r\n          const erasedList = Array.from(erased.current);\r\n          erased.current.clear();\r\n          if (!erasedList.length) return;\r\n          onChange((prev) => DrawState.eraseStrokes(prev, erasedList));\r\n        }\r\n      },\r\n      select() {\r\n        let selection: string[];\r\n        if (lasso) {\r\n          if (!path || Math.abs(path.area) < 1_000) return setPath(undefined);\r\n          path.closePath();\r\n          path.simplify();\r\n          moveDash(path);\r\n          selection = checkLasso(group, path);\r\n        } else {\r\n          if (!rect || Math.abs(rect.area) < 1_000) return setRect(undefined);\r\n          selection = checkLasso(group, rect);\r\n        }\r\n        setChosenIDs(selection);\r\n        setSelected(true);\r\n        setActiveTool(\"select\");\r\n      },\r\n      selected() {\r\n        updateMutation();\r\n      },\r\n      text() {\r\n        setActiveTool(\"text\");\r\n      },\r\n    }[paperMode];\r\n\r\n    const [cursor, setCursor] = useState(\"auto\");\r\n    useEffect(() => {\r\n      if (paperMode === \"text\" || paperMode === \"select\") {\r\n        setCursor(\"crosshair\");\r\n      } else if (paperMode === \"selected\") {\r\n        setCursor(lasso ? \"crosshair\" : \"nwse-resize\");\r\n      } else if (paperMode === \"draw\" || paperMode === \"erase\") {\r\n        setCursor(cursorStyle(drawCtrl, ratio));\r\n      }\r\n    }, [paperMode, lasso, drawCtrl, ratio]);\r\n\r\n    const handleMove = {\r\n      selected(e: paper.MouseEvent) {\r\n        const hitRes = rect?.hitTest(e.point, { segments: true });\r\n        if (hitRes?.segment) {\r\n          const moveP = hitRes.segment.point;\r\n          const baseP = hitRes.segment.next.next.point;\r\n          const diagonal = moveP.subtract(baseP);\r\n          const { x, y } = diagonal;\r\n          setCursor(x * y < 0 ? \"nesw-resize\" : \"nwse-resize\");\r\n        } else if (rect?.contains(e.point) || path?.contains(e.point)) {\r\n          setCursor(\"move\");\r\n        } else {\r\n          setCursor(\"crosshair\");\r\n        }\r\n      },\r\n      text(e: paper.MouseEvent) {\r\n        const layer = scope.current.project.layers[1];\r\n        if (getClickedText(layer, e.point)) setCursor(\"text\");\r\n        else setCursor(\"crosshair\");\r\n      },\r\n      select: null,\r\n      draw: null,\r\n      erase: null,\r\n    }[paperMode];\r\n\r\n    const handleViewEvent = () => {\r\n      if (readonly) return;\r\n\r\n      type Handler<E> = ((e: E) => boolean | void) | null;\r\n      const activate = <E,>(handler: Handler<E>): Handler<E> => {\r\n        return (e) => {\r\n          scope.current.activate();\r\n          if (handler) return handler(e);\r\n        };\r\n      };\r\n      const { view, tool } = scope.current;\r\n      view.onMouseDown = activate(handleDown);\r\n      view.onMouseDrag = activate(handleDrag);\r\n      view.onMouseUp = activate(handleUp);\r\n      view.onMouseMove = activate(handleMove);\r\n      if (tool) tool.onMouseDrag = activate(handleEarserDrag);\r\n    };\r\n    useEffect(handleViewEvent);\r\n\r\n    const updateMutation = () => {\r\n      if (!chosenItems?.length) return;\r\n      const mutations = chosenItems.map(\r\n        (p) => [p.name, p.exportJSON()] as Mutation\r\n      );\r\n      onChange((prev) => DrawState.mutateStrokes(prev, mutations));\r\n    };\r\n\r\n    const deleteSelected = () => {\r\n      setChosenIDs([]);\r\n      resetSelect();\r\n      if (!chosenIDs.length) return;\r\n      onChange((prev) => DrawState.eraseStrokes(prev, chosenIDs));\r\n    };\r\n\r\n    const rotateSelected = (angle: number, last = false) => {\r\n      let aniCount = last ? 10 : 1;\r\n      const dAngle = angle / aniCount;\r\n      const center = (rect || path)?.position;\r\n      const rotate = () => {\r\n        chosenItems.forEach((item) => item.rotate(dAngle, center));\r\n        rect?.rotate(dAngle, center);\r\n        path?.rotate(dAngle, center);\r\n        if (--aniCount > 0) requestAnimationFrame(rotate);\r\n        else last && updateMutation();\r\n      };\r\n      rotate();\r\n    };\r\n\r\n    const mutateStyle = (updated: Partial<DrawCtrl>) => {\r\n      scope.current.activate();\r\n      updateGroupStyle(chosenItems, updated);\r\n      updateMutation();\r\n    };\r\n\r\n    const duplicateSelected = () => {\r\n      scope.current.activate();\r\n      const size = (rect || path)?.bounds.size;\r\n      if (!size || !chosenItems.length) return;\r\n      const { width, height } = size;\r\n      const transP = new Point(width, height).divide(10);\r\n      const copies = chosenItems.map((item) => item.clone());\r\n      copies.forEach((item) => item.translate(transP));\r\n      rect?.translate(transP);\r\n      path?.translate(transP);\r\n\r\n      const mutations = copies.map(\r\n        (item) => [DrawState.getUid(), item.exportJSON()] as Mutation\r\n      );\r\n      onChange((prev) => DrawState.mutateStrokes(prev, mutations));\r\n      setChosenIDs(mutations.map(([uid]) => uid));\r\n    };\r\n\r\n    const rasterize = () => {\r\n      const g = new Group(chosenItems);\r\n      g.addTo(scope.current.project.layers[1]);\r\n      return g.rasterize({ insert: false }).toDataURL();\r\n    };\r\n\r\n    const [pointText, setPointText] = usePaperItem<paper.PointText>();\r\n    const cancelText = useCallback(() => {\r\n      setPointText(undefined);\r\n      setActiveTool(\"\");\r\n    }, [setPointText, setActiveTool]);\r\n\r\n    useEffect(() => {\r\n      if (mode === \"text\") return cancelText;\r\n    }, [mode, cancelText]);\r\n\r\n    const submitText = (\r\n      text: string,\r\n      color = \"#000\",\r\n      justification = \"center\"\r\n    ) => {\r\n      if (!pointText) return;\r\n      pointText.content = text;\r\n      pointText.fillColor = new Color(color);\r\n      pointText.justification = justification;\r\n      const pathData = pointText.exportJSON();\r\n      const { name } = pointText;\r\n      cancelText();\r\n      if (!name) return onChange((prev) => DrawState.addStroke(prev, pathData));\r\n      onChange((prev) => DrawState.mutateStrokes(prev, [[name, pathData]]));\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      deleteSelected,\r\n      duplicateSelected,\r\n      cancelText,\r\n      rotateSelected,\r\n      submitText,\r\n      mutateStyle,\r\n      rasterize,\r\n      pointText,\r\n    }));\r\n\r\n    usePreventGesture();\r\n    usePinch(\r\n      ({ memo, offset: [scale], first, last, origin }) => {\r\n        scope.current.activate();\r\n        const { view } = scope.current;\r\n        const originRawP = new Point(origin);\r\n\r\n        let lastScale: number;\r\n        let lastOrigin, elPos: paper.Point;\r\n        if (first || !memo) {\r\n          const { x, y } = canvasEl.current!.getBoundingClientRect();\r\n          lastScale = 1;\r\n          elPos = new Point(x, y);\r\n          lastOrigin = originRawP.subtract(elPos);\r\n        } else {\r\n          [lastScale, lastOrigin, elPos] = memo;\r\n        }\r\n\r\n        const originViewP = originRawP.subtract(elPos);\r\n        const originPorjP = view.viewToProject(originViewP);\r\n\r\n        if (Math.abs(1 - scale) < 0.05) scale = 1;\r\n        let dScale = first ? 1 : scale / lastScale;\r\n        let aniCount = last ? 10 : 1;\r\n        dScale = Math.pow(dScale, 1 / aniCount);\r\n        const scaleView = () => {\r\n          view.scale(dScale, originPorjP);\r\n          if (--aniCount > 0) requestAnimationFrame(scaleView);\r\n          else if (last) putCenterBack(view, new Size(width, height));\r\n        };\r\n        scaleView();\r\n\r\n        const deltaP = originViewP.subtract(lastOrigin);\r\n        const transP = deltaP.divide(view.zoom);\r\n        view.translate(transP);\r\n\r\n        if (!last) return [scale, originViewP, elPos];\r\n      },\r\n      {\r\n        scaleBounds: { max: 10, min: 0.3 },\r\n        rubberband: 0.5,\r\n        target: canvasEl,\r\n      }\r\n    );\r\n\r\n    const touchHandler = usePreventTouch(finger);\r\n    return (\r\n      <div\r\n        className=\"draw-wrapper\"\r\n        style={{ cursor }}\r\n        data-readonly={readonly}\r\n        {...touchHandler}\r\n      >\r\n        <canvas ref={canvasEl} className=\"draw-canvas\" />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nDraw.displayName = \"Draw\";\r\nexport default React.memo(Draw);\r\n\r\nfunction usePaperItem<T extends paper.Item>() {\r\n  const tuple = useState<T | undefined>();\r\n  const [item] = tuple;\r\n  useDebugValue(item);\r\n  useEffect(\r\n    () => () => {\r\n      if (!item?.name) item?.remove();\r\n    },\r\n    [item]\r\n  );\r\n  return tuple;\r\n}\r\n\r\nconst paintStroke = (stroke: Stroke, layer: paper.Layer, readonly = false) => {\r\n  let { pathData, uid } = stroke;\r\n  try {\r\n    const item = layer.importJSON(pathData);\r\n    if (!item) return;\r\n    item.name = uid;\r\n    item.guide = readonly;\r\n    return item;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst paintBackground = (\r\n  scope: paper.PaperScope,\r\n  width: number,\r\n  height: number\r\n) => {\r\n  scope.activate();\r\n  const bgRect = new Path.Rectangle(new Point(0, 0), new Point(width, height));\r\n  bgRect.fillColor = new Color(\"#fff\");\r\n  scope.project.layers[0].addChild(bgRect);\r\n  return bgRect;\r\n};\r\n\r\nconst startRect = (point: paper.Point) => {\r\n  const rect = new Path.Rectangle(point, new Size(0, 0));\r\n  rect.onFrame = () => {}; // the handle size bug\r\n  rect.selected = true;\r\n  return rect;\r\n};\r\n\r\nconst startStroke = (drawCtrl: DrawCtrl) => {\r\n  let { mode, lineWidth, eraserWidth, color, highlight } = drawCtrl;\r\n  const path = new Path();\r\n  if (mode === \"erase\") {\r\n    color = \"#ccc\";\r\n    lineWidth = eraserWidth;\r\n  }\r\n  if (mode === \"select\") {\r\n    color = \"#1890ff\";\r\n    lineWidth = 5;\r\n  }\r\n  const strokeColor = new Color(color);\r\n  if (highlight || mode === \"erase\") {\r\n    strokeColor.alpha = 0.5;\r\n    path.blendMode = \"multiply\";\r\n  }\r\n  path.strokeColor = strokeColor;\r\n  path.strokeWidth = lineWidth;\r\n  path.strokeJoin = \"round\";\r\n  path.strokeCap = \"round\";\r\n  path.guide = true;\r\n  return path;\r\n};\r\n\r\nconst cursorStyle = (drawCtrl: DrawCtrl, ratio: number) => {\r\n  const { lineWidth, eraserWidth, mode } = drawCtrl;\r\n  const size = ratio * (mode === \"erase\" ? eraserWidth : lineWidth);\r\n  if (size < 5) return \"crosshair\";\r\n  const half = size / 2;\r\n  return `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"%23FFF7\" width=\"${size}\" height=\"${size}\" viewBox=\"0 0 10 10\"><circle cx=\"5\" cy=\"5\" r=\"5\"/></svg>') ${half} ${half}, auto`;\r\n};\r\n\r\nconst moveDash = (item: paper.Item) => {\r\n  item.dashOffset = 0;\r\n  item.dashArray = [30, 20];\r\n  item.onFrame = () => (item.dashOffset += 3);\r\n};\r\n\r\nconst getCenterTranslate = (view: paper.View, projSize: paper.Size) => {\r\n  const { x, y } = view.center;\r\n  const { width: viewW, height: viewH } = view.size;\r\n  const { width: projW, height: projH } = projSize;\r\n\r\n  const [minX, minY] = [Math.min(viewW, projW) / 2, Math.min(viewH, projH) / 2];\r\n  const [maxX, maxY] = [projW - minX, projH - minY];\r\n\r\n  const deltaX = x < minX ? minX - x : x > maxX ? maxX - x : 0;\r\n  const deltaY = y < minY ? minY - y : y > maxY ? maxY - y : 0;\r\n\r\n  return [deltaX, deltaY];\r\n};\r\n\r\nconst putCenterBack = (view: paper.View, projSize: paper.Size) => {\r\n  const [deltaX, deltaY] = getCenterTranslate(view, projSize);\r\n  let aniCount = 10;\r\n  const dP = new Point(deltaX, deltaY).divide(-aniCount);\r\n  const move = () => {\r\n    view.translate(dP);\r\n    if (--aniCount > 0) requestAnimationFrame(move);\r\n  };\r\n  move();\r\n};\r\n\r\nconst checkLasso = (items: paper.Item[], selection: paper.Path) => {\r\n  const isInside = (p: paper.Path) => {\r\n    const res = p.subtract(selection, { insert: false, trace: false });\r\n    res.remove();\r\n    return !res.compare(p);\r\n  };\r\n  return items\r\n    .filter((item) => {\r\n      if (!item.name) return false;\r\n      if (!item.bounds.intersects(selection.bounds)) return false;\r\n      if (item instanceof paper.Path) {\r\n        return isInside(item);\r\n      } else {\r\n        const checkedP = new Path.Rectangle(item.bounds);\r\n        checkedP.remove();\r\n        return isInside(checkedP);\r\n      }\r\n    })\r\n    .map(({ name }) => name);\r\n};\r\n\r\nconst updateGroupStyle = (items: paper.Item[], updated: Partial<DrawCtrl>) => {\r\n  const { lineWidth, color, highlight } = updated;\r\n  items.forEach((item) => {\r\n    if (item instanceof paper.PointText && color) {\r\n      const newColor = new Color(color);\r\n      item.fillColor = newColor;\r\n    }\r\n\r\n    if (!(item instanceof paper.Path)) return;\r\n\r\n    if (color) {\r\n      const newColor = new Color(color);\r\n      if (item.blendMode === \"multiply\") newColor.alpha = 0.5;\r\n      item.strokeColor = newColor;\r\n    }\r\n\r\n    if (lineWidth) item.strokeWidth = lineWidth;\r\n\r\n    if (!item.strokeColor || highlight === undefined) return;\r\n    item.strokeColor.alpha = highlight ? 0.5 : 1;\r\n    item.blendMode = highlight ? \"multiply\" : \"normal\";\r\n  });\r\n};\r\n\r\nconst getClickedText = (layer: paper.Layer, point: paper.Point) => {\r\n  const hitRes = layer.hitTest(point, {\r\n    class: paper.PointText,\r\n    fill: true,\r\n  });\r\n  return hitRes?.item;\r\n};\r\n\r\nconst flattenCP = (cp: paper.Item): paper.Path[] => {\r\n  if (cp instanceof paper.Path) {\r\n    return cp.isEmpty() ? [] : [cp];\r\n  }\r\n  if (cp instanceof paper.CompoundPath) {\r\n    return cp.children.map(flattenCP).flat();\r\n  }\r\n  return [];\r\n};\r\n","import { Button, message } from \"antd\";\r\nimport React, { useContext } from \"react\";\r\nimport { ReaderMethodCtx } from \"./Reader\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nexport const AddPageButton = () => {\r\n  const { addFinalPage } = useContext(ReaderMethodCtx);\r\n  return (\r\n    <div className=\"add-btn-wrapper\">\r\n      <Button\r\n        type=\"dashed\"\r\n        icon={<PlusOutlined />}\r\n        block\r\n        onClick={addFinalPage}\r\n      >\r\n        New page\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const showPageDelMsg = (onUndo: () => void) => {\r\n  message.warning({\r\n    content: (\r\n      <>\r\n        One page was deleted.\r\n        <Button\r\n          size=\"small\"\r\n          type=\"link\"\r\n          onClick={() => {\r\n            message.destroy(\"DELETE\");\r\n            onUndo();\r\n          }}\r\n        >\r\n          Undo\r\n        </Button>\r\n      </>\r\n    ),\r\n    key: \"DELETE\",\r\n    duration: 10,\r\n  });\r\n};\r\n","import { createFromIconfontCN } from \"@ant-design/icons\";\r\n\r\nexport default createFromIconfontCN({\r\n  scriptUrl: \"//at.alicdn.com/t/font_3181679_yo844n7qgns.js\",\r\n});\r\n","import { CSSProperties, FC, useEffect, useMemo, useState } from \"react\";\r\nimport { defaultWidthList, DrawCtrl } from \"../../../lib/draw/drawCtrl\";\r\nimport { ColorCirle } from \"../../widgets/ColorCircle\";\r\nimport { WIDTH } from \"../../../lib/draw/DrawState\";\r\nimport { Popover, Segmented, Slider } from \"antd\";\r\nimport { allColors } from \"../../../lib/color\";\r\nimport { Setter } from \"../../../lib/hooks\";\r\nimport IconFont from \"../../ui/IconFont\";\r\nimport { List } from \"immutable\";\r\nimport \"./penPanel.sass\";\r\n\r\nexport const PenPanel: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n  drawCtrl: Partial<DrawCtrl>;\r\n}> = ({ updateDrawCtrl, drawCtrl }) => {\r\n  const { highlight, color } = drawCtrl;\r\n  const [panelBlur, setPanelBlur] = useState(false);\r\n\r\n  return (\r\n    <div className=\"pen-panel\" data-blur={panelBlur} data-hi={highlight}>\r\n      <div className=\"pen-status\">\r\n        <WidthSelect\r\n          updateDrawCtrl={updateDrawCtrl}\r\n          drawCtrl={drawCtrl}\r\n          setPanelBlur={setPanelBlur}\r\n        />\r\n        <HighlightSwitch checked={highlight} updateDrawCtrl={updateDrawCtrl} />\r\n      </div>\r\n      <ColorSelect\r\n        color={color || \"\"}\r\n        setColor={(c) => updateDrawCtrl({ color: c })}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const WidthSelect: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n  drawCtrl: Partial<DrawCtrl>;\r\n  setPanelBlur?: Setter<boolean>;\r\n  field?: \"lineWidth\" | \"eraserWidth\";\r\n}> = ({\r\n  updateDrawCtrl,\r\n  drawCtrl,\r\n  setPanelBlur = () => {},\r\n  field = \"lineWidth\",\r\n}) => {\r\n  const currWidth = drawCtrl[field];\r\n  const widthList = drawCtrl.widthList ?? defaultWidthList;\r\n  const color = field === \"lineWidth\" ? drawCtrl.color ?? \"#aaa\" : \"#aaa\";\r\n\r\n  const chosen = useMemo(\r\n    () => widthList.indexOf(currWidth ?? -1),\r\n    [currWidth, widthList]\r\n  );\r\n\r\n  const [popShow, setPopShow] = useState(List([false, false, false, false]));\r\n  useEffect(() => {\r\n    if (popShow.includes(true)) setPanelBlur(true);\r\n    else setPanelBlur(false);\r\n  }, [popShow, setPanelBlur]);\r\n\r\n  const realSizeStyle = (width: number) =>\r\n    ({\r\n      \"--real-size\": `calc(${100 / WIDTH}vw * ${width})`,\r\n    } as CSSProperties);\r\n\r\n  const options = [\r\n    { value: -1, label: null },\r\n    ...widthList.map((width, index) => ({\r\n      value: index,\r\n      label: (\r\n        <Popover\r\n          visible={popShow.get(index)}\r\n          onVisibleChange={(v) => setPopShow((prev) => prev.set(index, v))}\r\n          trigger={chosen === index ? [\"click\"] : []}\r\n          placement=\"bottom\"\r\n          destroyTooltipOnHide\r\n          content={\r\n            <Slider\r\n              min={5}\r\n              max={100}\r\n              className=\"ctrl-slider\"\r\n              defaultValue={width}\r\n              onAfterChange={(w) => {\r\n                if (widthList.includes(w)) {\r\n                  setPopShow((prev) => prev.set(index, false));\r\n                  return updateDrawCtrl({ [field]: w });\r\n                }\r\n                const newWL = widthList.slice();\r\n                newWL[index] = w;\r\n                updateDrawCtrl({ widthList: newWL, [field]: w });\r\n              }}\r\n            />\r\n          }\r\n        >\r\n          <div className=\"circle-wrapper\" style={realSizeStyle(width)}>\r\n            <ColorCirle className={\"width-circle \" + field} color={color} />\r\n          </div>\r\n        </Popover>\r\n      ),\r\n    })),\r\n  ];\r\n\r\n  return (\r\n    <Segmented\r\n      className=\"width-seg\"\r\n      value={chosen}\r\n      options={options}\r\n      onChange={(i) => updateDrawCtrl({ [field]: widthList[+i] ?? 10 })}\r\n    />\r\n  );\r\n};\r\n\r\nconst HighlightSwitch: FC<{\r\n  checked?: boolean;\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ checked = false, updateDrawCtrl }) => {\r\n  return (\r\n    <label className=\"hi-wrapper\">\r\n      <input\r\n        type=\"checkbox\"\r\n        name=\"highlight\"\r\n        checked={checked}\r\n        onChange={(e) => updateDrawCtrl({ highlight: e.target.checked })}\r\n      />\r\n      <div className=\"hi-switch\">\r\n        <IconFont type=\"icon-Highlight\" />\r\n      </div>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport const ColorSelect: FC<{\r\n  color: string;\r\n  setColor: (color: string) => void;\r\n}> = ({ setColor, color }) => {\r\n  return (\r\n    <div className=\"color-select\">\r\n      {allColors.map((c) => (\r\n        <label key={c}>\r\n          <input\r\n            checked={color === c}\r\n            type=\"radio\"\r\n            name=\"color\"\r\n            onChange={(e) => e.target.checked && setColor(c)}\r\n          />\r\n          <div\r\n            data-color={c}\r\n            className=\"circle\"\r\n            style={{ backgroundColor: c, borderColor: c }}\r\n          />\r\n        </label>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import { FC, RefObject, useContext, useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  CopyOutlined,\r\n  DeleteOutlined,\r\n  PictureOutlined,\r\n  BgColorsOutlined,\r\n  CaretLeftOutlined,\r\n  AlignLeftOutlined,\r\n  FontColorsOutlined,\r\n  CaretRightOutlined,\r\n  AlignRightOutlined,\r\n  RotateRightOutlined,\r\n  AlignCenterOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Button, ButtonProps, Modal, Popover, Radio } from \"antd\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { DrawCtrl } from \"../../../lib/draw/drawCtrl\";\r\nimport { ColorSelect, PenPanel } from \"./PenPanel\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { DrawRefType } from \"../../draw/Draw\";\r\nimport { allColors } from \"../../../lib/color\";\r\nimport { useDrag } from \"@use-gesture/react\";\r\nimport { ReaderStateCtx } from \"../Reader\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { saveAs } from \"file-saver\";\r\nimport \"./drawTools.sass\";\r\n\r\nexport const SelectTool: FC<{\r\n  drawRef: RefObject<DrawRefType>;\r\n  visible: boolean;\r\n}> = ({ drawRef, visible }) => (\r\n  <CSSTransition timeout={300} in={visible} unmountOnExit>\r\n    <SelectToolContent drawRef={drawRef} />\r\n  </CSSTransition>\r\n);\r\n\r\nexport const SelectToolContent: FC<{\r\n  drawRef: RefObject<DrawRefType>;\r\n}> = ({ drawRef }) => {\r\n  const btnProps: ButtonProps = {\r\n    type: \"text\",\r\n    shape: \"round\",\r\n    size: \"small\",\r\n  };\r\n\r\n  const [currDrawCtrl, setCurrDrawCtrl] = useState<Partial<DrawCtrl>>({});\r\n  const rotateEl = useRef<HTMLDivElement>(null);\r\n  const [dragged, setDragged] = useState(false);\r\n  const [transX, setTransX] = useState(0);\r\n  const gearStyle = { transform: `translateX(${transX}px)` };\r\n\r\n  useDrag(\r\n    ({ first, last, offset, delta }) => {\r\n      setTransX(offset[0]);\r\n      drawRef.current?.rotateSelected(delta[0] / 2, last);\r\n      first && setDragged(true);\r\n      last && setDragged(false);\r\n    },\r\n    {\r\n      target: rotateEl,\r\n      filterTaps: true,\r\n      rubberband: 0.05,\r\n      bounds: { left: -90, right: 90 },\r\n    }\r\n  );\r\n\r\n  const getRaster = () => {\r\n    if (!drawRef.current) return;\r\n    const imageData = drawRef.current.rasterize();\r\n    Modal.confirm({\r\n      title: \"Screenshot\",\r\n      content: <img className=\"raster\" src={imageData} alt=\"raster\" />,\r\n      className: \"raster-modal\",\r\n      icon: <PictureOutlined />,\r\n      okText: \"Save\",\r\n      onOk: () => saveAs(imageData, \"screenshot\"),\r\n    });\r\n  };\r\n\r\n  return createPortal(\r\n    <div className=\"select-tool\">\r\n      <Popover\r\n        trigger=\"click\"\r\n        placement=\"bottom\"\r\n        getPopupContainer={(e) => e.parentElement!}\r\n        destroyTooltipOnHide\r\n        content={\r\n          <PenPanel\r\n            updateDrawCtrl={(updated) => {\r\n              setCurrDrawCtrl((prev) => ({ ...prev, ...updated }));\r\n              drawRef.current?.mutateStyle(updated);\r\n            }}\r\n            drawCtrl={currDrawCtrl}\r\n          />\r\n        }\r\n      >\r\n        <Button icon={<BgColorsOutlined />} {...btnProps} />\r\n      </Popover>\r\n      <div className=\"rotate-wrapper\" data-dragged={dragged} ref={rotateEl}>\r\n        <Button\r\n          icon={<RotateRightOutlined />}\r\n          onClick={() => drawRef.current?.rotateSelected(90, true)}\r\n          {...btnProps}\r\n        />\r\n        <CaretLeftOutlined className=\"arrow left\" />\r\n        <CaretRightOutlined className=\"arrow right\" />\r\n        <div className=\"gear\" style={gearStyle} />\r\n      </div>\r\n      <Button\r\n        icon={<CopyOutlined />}\r\n        onClick={() => drawRef.current?.duplicateSelected()}\r\n        {...btnProps}\r\n      />\r\n      <Button icon={<PictureOutlined />} onClick={getRaster} {...btnProps} />\r\n      <Button\r\n        danger\r\n        icon={<DeleteOutlined />}\r\n        onClick={() => drawRef.current?.deleteSelected()}\r\n        {...btnProps}\r\n      />\r\n    </div>,\r\n    document.querySelector(\".reader.container > header\")!\r\n  );\r\n};\r\n\r\nexport const TextTool: FC<{\r\n  drawRef: RefObject<DrawRefType>;\r\n  visible: boolean;\r\n}> = ({ visible, drawRef }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [color, setColor] = useState(allColors[0]);\r\n  const [align, setAlign] = useState(\"center\");\r\n  const { forceLight } = useContext(ReaderStateCtx);\r\n\r\n  useEffect(() => {\r\n    const pointText = drawRef.current?.pointText;\r\n    if (!pointText || !visible) return;\r\n    const { name, content, justification, fillColor } = pointText;\r\n    setAlign(justification);\r\n    if (name) {\r\n      setText(content);\r\n      setColor(fillColor?.toCSS(true) ?? allColors[0]);\r\n    } else {\r\n      setText(\"\");\r\n      setColor(allColors[0]);\r\n    }\r\n  }, [visible, drawRef]);\r\n\r\n  const fontColorBtn = (\r\n    <Popover\r\n      content={<ColorSelect color={color} setColor={setColor} />}\r\n      overlayStyle={{ width: 200 }}\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e.parentElement!}\r\n    >\r\n      <Button\r\n        size=\"small\"\r\n        icon={<FontColorsOutlined className=\"font-icon\" style={{ color }} />}\r\n      />\r\n    </Popover>\r\n  );\r\n\r\n  const alignRadio = (\r\n    <Radio.Group\r\n      size=\"small\"\r\n      optionType=\"button\"\r\n      value={align}\r\n      buttonStyle=\"solid\"\r\n      onChange={(e) => setAlign(e.target.value)}\r\n      options={[\r\n        { label: <AlignLeftOutlined />, value: \"left\" },\r\n        { label: <AlignCenterOutlined />, value: \"center\" },\r\n        { label: <AlignRightOutlined />, value: \"right\" },\r\n      ]}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      title=\"Insert text\"\r\n      onCancel={() => drawRef.current?.cancelText()}\r\n      onOk={() => {\r\n        const content = text.trim();\r\n        if (!content) return drawRef.current?.cancelText();\r\n        drawRef.current?.submitText(content, color, align);\r\n      }}\r\n      bodyStyle={{ paddingTop: 0 }}\r\n      destroyOnClose\r\n    >\r\n      <div className=\"insert-option\" data-force-light={forceLight}>\r\n        {fontColorBtn}\r\n        {alignRadio}\r\n      </div>\r\n      <TextArea\r\n        size=\"large\"\r\n        rows={3}\r\n        autoFocus\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n","import { useDebugValue, useEffect, useMemo, useRef, useState } from \"react\";\nimport localforage from \"localforage\";\nimport { Map } from \"immutable\";\n\nexport function useScrollPage(noteID: string, pageOrder = [] as string[]) {\n  const [refMap, setRefMap] = useState(Map<string, HTMLElement>());\n  const scrolled = useRef(false);\n  const [prevPageID, setPrevPageID] = useState(\"\");\n  const [inviewRatios, setInviewRatios] = useState(Map<string, number>());\n  const currPageID = useMemo(\n    () => largestKey(inviewRatios, pageOrder),\n    [inviewRatios, pageOrder]\n  );\n  useDebugValue(currPageID);\n\n  useEffect(() => {\n    (async () => {\n      const stored = await localforage.getItem<string>(`SCROLL_${noteID}`);\n      if (!stored) return (scrolled.current = true);\n      setPrevPageID(stored);\n    })();\n  }, [noteID]);\n\n  useEffect(() => {\n    if (scrolled.current || !refMap.has(prevPageID)) return;\n    requestAnimationFrame(() => {\n      refMap.get(prevPageID)?.scrollIntoView();\n      scrolled.current = true;\n    });\n  }, [prevPageID, refMap]);\n\n  useEffect(() => {\n    if (!scrolled.current) return;\n    localforage.setItem(`SCROLL_${noteID}`, currPageID);\n  }, [noteID, currPageID]);\n\n  const sectionRef = (pageID: string) => (el: HTMLElement | null) => {\n    if (!el) return;\n    setRefMap((prev) => prev.set(pageID, el));\n  };\n\n  const scrollPage = (pageID: string) => {\n    refMap.get(pageID)?.scrollIntoView();\n  };\n\n  return { scrollPage, setInviewRatios, sectionRef, currPageID };\n}\n\nconst largestKey = (map: Map<string, number>, order: string[]) => {\n  let result = \"\";\n  let maxRatio = 0;\n  for (let key of order) {\n    const ratio = map.get(key);\n    if (!ratio) continue;\n    if (ratio === 1) return key;\n    if (ratio > maxRatio) {\n      result = key;\n      maxRatio = ratio;\n    }\n  }\n  return result;\n};\n","import { FC, useContext } from \"react\";\r\nimport { Button, message, Popover, ButtonProps, Segmented } from \"antd\";\r\nimport { ReaderMethodCtx, ReaderStateCtx } from \"../Reader\";\r\nimport { DrawCtrl, saveDrawCtrl } from \"../../../lib/draw/drawCtrl\";\r\nimport {\r\n  BulbFilled,\r\n  BulbOutlined,\r\n  UndoOutlined,\r\n  RedoOutlined,\r\n  GatewayOutlined,\r\n  HighlightOutlined,\r\n} from \"@ant-design/icons\";\r\nimport IconFont from \"../../ui/IconFont\";\r\nimport { PenPanel, WidthSelect } from \"../tools/PenPanel\";\r\n\r\nexport const HeaderMiddle = () => {\r\n  const { stateSet, drawCtrl, forceLight } = useContext(ReaderStateCtx);\r\n  const { setDrawCtrl, handleUndo, handleRedo, setForceLight } =\r\n    useContext(ReaderMethodCtx);\r\n  const { mode, finger } = drawCtrl;\r\n\r\n  const updateDrawCtrl = (updated: Partial<DrawCtrl>) => {\r\n    setDrawCtrl((prev) => {\r\n      const newCtrl = { ...prev, ...updated };\r\n      saveDrawCtrl(newCtrl);\r\n      return newCtrl;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"middle\">\r\n      <Button\r\n        type=\"text\"\r\n        shape=\"circle\"\r\n        icon={<UndoOutlined />}\r\n        onClick={handleUndo}\r\n        disabled={!stateSet?.isUndoable()}\r\n      />\r\n      <Button\r\n        type=\"text\"\r\n        shape=\"circle\"\r\n        icon={<RedoOutlined />}\r\n        onClick={handleRedo}\r\n        disabled={!stateSet?.isRedoable()}\r\n      />\r\n      <Button\r\n        type={finger ? \"default\" : \"text\"}\r\n        shape=\"circle\"\r\n        onClick={() => {\r\n          updateDrawCtrl({ finger: !finger });\r\n          message.destroy(\"FINGER\");\r\n          message.open({\r\n            content: finger ? \"Pencil only\" : \"Draw with finger\",\r\n            key: \"FINGER\",\r\n          });\r\n        }}\r\n        icon={<IconFont type=\"icon-finger\" />}\r\n      />\r\n      <Button\r\n        className=\"force-light-btn\"\r\n        type=\"text\"\r\n        shape=\"circle\"\r\n        icon={forceLight ? <BulbFilled /> : <BulbOutlined />}\r\n        onClick={() => setForceLight((prev) => !prev)}\r\n      />\r\n      <PenButton updateDrawCtrl={updateDrawCtrl} />\r\n      <EraserButton updateDrawCtrl={updateDrawCtrl} />\r\n      <Button\r\n        type={mode === \"text\" ? \"default\" : \"text\"}\r\n        shape=\"circle\"\r\n        onClick={() => updateDrawCtrl({ mode: \"text\" })}\r\n        icon={<IconFont type=\"icon-text1\" />}\r\n      />\r\n      <SelectButton updateDrawCtrl={updateDrawCtrl} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PenButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const { drawCtrl } = useContext(ReaderStateCtx);\r\n  const { mode } = drawCtrl;\r\n\r\n  const btnProps: ButtonProps = {\r\n    shape: \"circle\",\r\n    icon: <HighlightOutlined />,\r\n  };\r\n  return mode === \"draw\" ? (\r\n    <Popover\r\n      content={<PenPanel updateDrawCtrl={updateDrawCtrl} drawCtrl={drawCtrl} />}\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e.parentElement!}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button type=\"default\" {...btnProps} />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      onClick={() => updateDrawCtrl({ mode: \"draw\" })}\r\n      {...btnProps}\r\n    />\r\n  );\r\n};\r\n\r\nconst EraserButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const { drawCtrl } = useContext(ReaderStateCtx);\r\n  const { mode, pixelEraser } = drawCtrl;\r\n\r\n  const btnProps: ButtonProps = {\r\n    shape: \"circle\",\r\n    icon: <IconFont type=\"icon-eraser\" />,\r\n  };\r\n\r\n  return mode === \"erase\" ? (\r\n    <Popover\r\n      content={\r\n        <div className=\"width-seg-wrapper\">\r\n          <Segmented\r\n            block\r\n            size=\"small\"\r\n            className=\"pixel-seg\"\r\n            options={[\"Pixel\", \"Object\"]}\r\n            value={pixelEraser ? \"Pixel\" : \"Object\"}\r\n            onChange={(value) => {\r\n              if (value === \"Pixel\") updateDrawCtrl({ pixelEraser: true });\r\n              else updateDrawCtrl({ pixelEraser: false });\r\n            }}\r\n          />\r\n          <WidthSelect\r\n            drawCtrl={drawCtrl}\r\n            updateDrawCtrl={updateDrawCtrl}\r\n            field=\"eraserWidth\"\r\n          />\r\n        </div>\r\n      }\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e.parentElement!}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button type=\"default\" {...btnProps} />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      onClick={() => updateDrawCtrl({ mode: \"erase\" })}\r\n      {...btnProps}\r\n    />\r\n  );\r\n};\r\n\r\nconst SelectButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const {\r\n    drawCtrl: { lasso, mode },\r\n  } = useContext(ReaderStateCtx);\r\n\r\n  const icon = lasso ? <IconFont type=\"icon-lasso1\" /> : <GatewayOutlined />;\r\n\r\n  return mode === \"select\" ? (\r\n    <Button\r\n      type=\"default\"\r\n      shape=\"circle\"\r\n      icon={icon}\r\n      onClick={() => updateDrawCtrl({ lasso: !lasso })}\r\n    />\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      shape=\"circle\"\r\n      icon={icon}\r\n      onClick={() => updateDrawCtrl({ mode: \"select\" })}\r\n    />\r\n  );\r\n};\r\n","export function exchange<T>(list: T[], fromIndex: number, toIndex: number) {\r\n  const result = list.slice();\r\n  const [removed] = result.splice(fromIndex, 1);\r\n  result.splice(toIndex, 0, removed);\r\n  return result;\r\n}\r\n\r\nexport function insertAfter<T>(list: T[], prevItem: T, newItem: T) {\r\n  const prevIndex = list.indexOf(prevItem);\r\n  const curr = list.slice();\r\n  if (prevIndex === -1) return curr;\r\n  curr.splice(prevIndex + 1, 0, newItem);\r\n  return curr;\r\n}\r\n","import { Avatar } from \"antd\";\nimport { AvatarSize } from \"antd/lib/avatar/SizeContext\";\nimport { FC, useContext, useMemo } from \"react\";\nimport { getHashedColor } from \"../../lib/color\";\nimport { TeamCtx } from \"../reader/Team\";\n\nexport const UserAvatar: FC<{\n  userID: string;\n  size?: AvatarSize;\n  onClick?: () => void;\n  chosen?: boolean;\n  className?: string;\n}> = ({\n  userID,\n  size = \"default\",\n  onClick = () => {},\n  chosen = false,\n  className,\n}) => {\n  const { userRec } = useContext(TeamCtx);\n  const color = useMemo(() => getHashedColor(userID), [userID]);\n  const userInfo = userRec[userID];\n  if (!userInfo) return null;\n  const { userName } = userInfo;\n\n  return (\n    <Avatar\n      className={className}\n      data-chosen={chosen}\n      size={size}\n      style={{ backgroundColor: color }}\n    >\n      <div className=\"avatar-wrapper\" onClick={onClick}>\n        {userName?.slice(0, 3)}\n      </div>\n    </Avatar>\n  );\n};\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n} from \"react\";\r\nimport {\r\n  MoreOutlined,\r\n  PlusOutlined,\r\n  CopyOutlined,\r\n  DeleteOutlined,\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  Draggable,\r\n  Droppable,\r\n  DropResult,\r\n  DragDropContext,\r\n} from \"react-beautiful-dnd\";\r\nimport { PageWrapper, ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport { Avatar, Button, Drawer, Menu, Popover, Tabs } from \"antd\";\r\nimport { AddPageButton } from \"./ReaderUtils\";\r\nimport { exchange } from \"./lib/array\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport IconFont from \"../ui/IconFont\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport \"./preview.sass\";\r\nimport { UserAvatar } from \"../widgets/UserAvatar\";\r\nimport classNames from \"classnames\";\r\n\r\nconst PreviewCtx = React.createContext({\r\n  activeKey: \"ALL\",\r\n  setActiveKey: (() => {}) as Setter<string>,\r\n});\r\n\r\nconst PageNavContent = () => {\r\n  const { pageOrder, currPageID, forceLight } = useContext(ReaderStateCtx);\r\n  const { scrollPage, saveReorder } = useContext(ReaderMethodCtx);\r\n  const { activeKey } = useContext(PreviewCtx);\r\n  const refRec = useRef<Record<string, HTMLElement>>({});\r\n\r\n  const onDragEnd = ({ source, destination }: DropResult) => {\r\n    if (!destination || !pageOrder) return;\r\n    const { index: fromIndex } = source;\r\n    const { index: toIndex } = destination;\r\n    if (fromIndex === toIndex) return;\r\n    const pageID = pageOrder[fromIndex];\r\n    const newOrder = exchange(pageOrder, fromIndex, toIndex);\r\n    saveReorder(newOrder, true);\r\n    requestAnimationFrame(() => scrollPage(pageID));\r\n  };\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => refRec.current[currPageID]?.scrollIntoView(), []);\r\n\r\n  return (\r\n    <div className=\"preview-container\" data-force-light={forceLight}>\r\n      <PreviewTabs />\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"preview-list\">\r\n          {({ droppableProps, innerRef, placeholder }) => (\r\n            <div className=\"page-list\" ref={innerRef} {...droppableProps}>\r\n              {pageOrder?.map((uid, index) => (\r\n                <PagePreview\r\n                  key={uid}\r\n                  uid={uid}\r\n                  pageIndex={index}\r\n                  refRec={refRec.current}\r\n                />\r\n              ))}\r\n              {placeholder}\r\n              {activeKey === \"ALL\" && <AddPageButton />}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PagePreview: FC<{\r\n  uid: string;\r\n  pageIndex: number;\r\n  refRec: Record<string, HTMLElement>;\r\n}> = ({ uid, pageIndex, refRec }) => {\r\n  const { stateSet, teamState, pageRec, currPageID } =\r\n    useContext(ReaderStateCtx);\r\n  const { scrollPage } = useContext(ReaderMethodCtx);\r\n  const { activeKey } = useContext(PreviewCtx);\r\n  const [chosen, setChosen] = useState(\"\");\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n\r\n  if (!page || !drawState) return null;\r\n  const { image, marked } = page;\r\n\r\n  if (\r\n    activeKey === \"WRITTEN\" &&\r\n    drawState.isEmpty() &&\r\n    (!teamStateMap || teamStateMap.every((ds) => ds.isEmpty()))\r\n  ) {\r\n    return null;\r\n  }\r\n  if (activeKey === \"MARKED\" && !marked) return null;\r\n  const curr = currPageID === uid;\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={uid}\r\n      index={pageIndex}\r\n      isDragDisabled={activeKey !== \"ALL\"}\r\n    >\r\n      {(\r\n        { innerRef, draggableProps, dragHandleProps },\r\n        { isDragging: dragged }\r\n      ) => (\r\n        <div\r\n          ref={(e) => {\r\n            innerRef(e);\r\n            if (e) refRec[uid] = e;\r\n          }}\r\n          className=\"page\"\r\n          data-curr={curr}\r\n          data-dragged={dragged}\r\n          onClick={() => scrollPage(uid)}\r\n          {...draggableProps}\r\n          {...dragHandleProps}\r\n        >\r\n          <PageWrapper\r\n            uid={uid}\r\n            drawState={teamStateMap?.get(chosen) || drawState}\r\n            teamStateMap={chosen ? undefined : teamStateMap}\r\n            thumbnail={image}\r\n            preview\r\n          />\r\n          <PreviewTools\r\n            uid={uid}\r\n            index={pageIndex}\r\n            chosen={chosen}\r\n            setChosen={setChosen}\r\n          />\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst PreviewTools: FC<{\r\n  uid: string;\r\n  index: number;\r\n  chosen: string;\r\n  setChosen: Setter<string>;\r\n}> = ({ uid, index, chosen, setChosen }) => {\r\n  const { switchPageMarked } = useContext(ReaderMethodCtx);\r\n  const { teamState, pageRec } = useContext(ReaderStateCtx);\r\n  const { ignores } = useContext(TeamCtx);\r\n  const userIDs = useMemo(\r\n    () =>\r\n      teamState\r\n        ?.getPageValidUsers(uid)\r\n        .filter((userID) => !ignores.has(userID)) || [],\r\n    [teamState, ignores, uid]\r\n  );\r\n  const page = pageRec?.get(uid);\r\n  if (!page) return null;\r\n  const { marked } = page;\r\n\r\n  return (\r\n    <div className=\"tools\" onClick={(e) => e.stopPropagation()}>\r\n      <span\r\n        className=\"bookmark\"\r\n        data-marked={marked}\r\n        onClick={() => switchPageMarked(uid)}\r\n      />\r\n      <span className=\"index\">{index + 1}</span>\r\n      <PreviewOption uid={uid} />\r\n      <TeamAvatars userIDs={userIDs} chosen={chosen} setChosen={setChosen} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TeamAvatars: FC<{\r\n  userIDs: string[];\r\n  chosen: string;\r\n  setChosen: Setter<string>;\r\n}> = ({ userIDs, chosen, setChosen }) => {\r\n  return (\r\n    <Avatar.Group\r\n      maxCount={2}\r\n      size=\"default\"\r\n      className={classNames(\"team-group\", { chosen })}\r\n      maxPopoverPlacement=\"bottom\"\r\n    >\r\n      {userIDs.map((userID) => (\r\n        <UserAvatar\r\n          key={userID}\r\n          size=\"default\"\r\n          userID={userID}\r\n          className=\"preview-avatar\"\r\n          chosen={chosen === userID}\r\n          onClick={() => setChosen((prev) => (prev === userID ? \"\" : userID))}\r\n        />\r\n      ))}\r\n    </Avatar.Group>\r\n  );\r\n};\r\n\r\nconst PreviewOption = ({ uid }: { uid: string }) => {\r\n  const { addPage, deletePage } = useContext(ReaderMethodCtx);\r\n\r\n  const menu = (\r\n    <Menu\r\n      onClick={({ key }) => {\r\n        if (key === \"ADD\") {\r\n          addPage(uid);\r\n        } else if (key === \"COPY\") {\r\n          addPage(uid, true);\r\n        } else if (key === \"DELETE\") {\r\n          deletePage(uid);\r\n        }\r\n      }}\r\n      items={[\r\n        { key: \"ADD\", icon: <PlusOutlined />, label: \"Add page\" },\r\n        { key: \"COPY\", icon: <CopyOutlined />, label: \"Duplicate\" },\r\n        {\r\n          key: \"DELETE\",\r\n          icon: <DeleteOutlined />,\r\n          label: \"Delete\",\r\n          danger: true,\r\n        },\r\n      ]}\r\n    ></Menu>\r\n  );\r\n  return (\r\n    <Popover\r\n      content={menu}\r\n      trigger=\"click\"\r\n      placement=\"left\"\r\n      destroyTooltipOnHide\r\n    >\r\n      <span className=\"option\">\r\n        <MoreOutlined />\r\n      </span>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst PreviewTabs = () => {\r\n  const { activeKey, setActiveKey } = useContext(PreviewCtx);\r\n  const { TabPane } = Tabs;\r\n  return (\r\n    <Tabs\r\n      className=\"tabs\"\r\n      activeKey={activeKey}\r\n      onChange={setActiveKey}\r\n      tabBarGutter={10}\r\n      size=\"small\"\r\n      centered\r\n    >\r\n      <TabPane tab={<IconFont type=\"icon-uf_paper\" />} key=\"ALL\" />\r\n      <TabPane tab={<IconFont type=\"icon-bookmark2\" />} key=\"MARKED\" />\r\n      <TabPane tab={<IconFont type=\"icon-write\" />} key=\"WRITTEN\" />\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default function PageNav() {\r\n  const [navOn, setNavOn] = useState(false);\r\n  const [activeKey, setActiveKey] = useState<string>(\"ALL\");\r\n  const title = {\r\n    ALL: \"All Pages\",\r\n    MARKED: \"Bookmarks\",\r\n    WRITTEN: \"Notes\",\r\n  }[activeKey];\r\n\r\n  return (\r\n    <PreviewCtx.Provider value={{ activeKey, setActiveKey }}>\r\n      <Button\r\n        type=\"text\"\r\n        icon={navOn ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\r\n        onClick={() => setNavOn((prev) => !prev)}\r\n      />\r\n      <Drawer\r\n        visible={navOn}\r\n        onClose={() => setNavOn(false)}\r\n        width={200}\r\n        title={title}\r\n        closable={false}\r\n        zIndex={800}\r\n        className=\"preview-drawer\"\r\n        bodyStyle={{ padding: 0, overflow: \"hidden\" }}\r\n        headerStyle={{ textAlign: \"center\" }}\r\n        destroyOnClose\r\n      >\r\n        <PageNavContent />\r\n      </Drawer>\r\n    </PreviewCtx.Provider>\r\n  );\r\n}\r\n","import { FC, useMemo, useState, useEffect, useContext } from \"react\";\r\nimport { Badge, Alert, Modal, Button, Divider, message, Popover } from \"antd\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { PasscodeInput } from \"antd-mobile\";\r\nimport { ReaderMethodCtx, ReaderStateCtx } from \"../Reader\";\r\nimport { TeamCtx } from \"../Team\";\r\nimport { getUserID, saveUserName } from \"../../../lib/user\";\r\nimport PageNav from \"../PageNav\";\r\nimport {\r\n  EyeOutlined,\r\n  FormOutlined,\r\n  TeamOutlined,\r\n  CopyOutlined,\r\n  CheckOutlined,\r\n  ReloadOutlined,\r\n  ShareAltOutlined,\r\n  DisconnectOutlined,\r\n  EyeInvisibleOutlined,\r\n  UsergroupAddOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { editNoteData } from \"../../../lib/note/archive\";\r\nimport { UserAvatar } from \"../../widgets/UserAvatar\";\r\nimport { putNote } from \"../../../lib/network/http\";\r\nimport copy from \"clipboard-copy\";\r\n\r\nexport const HeaderRight = () => {\r\n  const { teamOn } = useContext(TeamCtx);\r\n  return (\r\n    <div className=\"right\">\r\n      {teamOn ? <RoomInfo /> : <JoinRoom />}\r\n      <PageNav />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst UserCard: FC<{ userID: string }> = ({ userID }) => {\r\n  const [renaming, setRenaming] = useState(false);\r\n  const { ignores, setIgnores, resetIO, userRec } = useContext(TeamCtx);\r\n  const userInfo = userRec[userID];\r\n  useEffect(() => setRenaming(false), [userInfo]);\r\n  if (!userInfo) return null;\r\n\r\n  const { userName, online } = userInfo;\r\n  const self = userID === getUserID();\r\n  const ignored = ignores.has(userID) && !self;\r\n\r\n  const switchIgnore = () => {\r\n    setIgnores((prev) => {\r\n      if (prev.has(userID)) return prev.delete(userID);\r\n      return prev.add(userID);\r\n    });\r\n  };\r\n\r\n  const submitRename = (value: string) => {\r\n    const name = value.trim();\r\n    if (!name || name === userName) return setRenaming(false);\r\n    saveUserName(name);\r\n    resetIO();\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-item\" data-online={online}>\r\n      <UserAvatar userID={userID} size=\"small\" className=\"room-avatar\" />\r\n      {renaming || <span className=\"user-name\">{userName}</span>}\r\n      {renaming && (\r\n        <Search\r\n          autoFocus\r\n          className=\"rename-input\"\r\n          defaultValue={userName}\r\n          onSearch={submitRename}\r\n          enterButton={<Button icon={<CheckOutlined />} />}\r\n        />\r\n      )}\r\n      {self ? (\r\n        renaming || (\r\n          <Button\r\n            type=\"text\"\r\n            icon={<FormOutlined />}\r\n            onClick={() => setRenaming(true)}\r\n          />\r\n        )\r\n      ) : (\r\n        <Button\r\n          type=\"text\"\r\n          icon={ignored ? <EyeInvisibleOutlined /> : <EyeOutlined />}\r\n          onClick={switchIgnore}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RoomInfo: FC = () => {\r\n  const { code, userRec, connected, loadInfo, loadState, resetIO } =\r\n    useContext(TeamCtx);\r\n  const { noteInfo } = useContext(ReaderStateCtx);\r\n  const link = window.location.href;\r\n  const share = async () => {\r\n    const selfName = userRec[getUserID()]?.userName;\r\n    try {\r\n      if (!noteInfo) return;\r\n      await copy(`${noteInfo.name} - ${selfName} - Multibility\\n${link}`);\r\n      message.destroy(\"copy\");\r\n      message.success({\r\n        content: \"Link copied!\",\r\n        icon: <CopyOutlined />,\r\n        key: \"copy\",\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const userList = useMemo(() => {\r\n    const selfID = getUserID();\r\n    const { [selfID]: selfInfo, ...otherUsers } = userRec;\r\n    const list = selfInfo ? [selfInfo] : [];\r\n    const values = Object.values(otherUsers);\r\n    list.push(\r\n      ...values.filter(({ online }) => online),\r\n      ...values.filter(({ online }) => !online)\r\n    );\r\n    return list;\r\n  }, [userRec]);\r\n\r\n  const onlineNum = useMemo(\r\n    () => userList.filter(({ online }) => online).length,\r\n    [userList]\r\n  );\r\n\r\n  const teamPop = (\r\n    <div className=\"team-popover\">\r\n      {connected || (\r\n        <Alert\r\n          className=\"disconn-alert\"\r\n          message=\"Network failed.\"\r\n          icon={<DisconnectOutlined />}\r\n          type=\"error\"\r\n          showIcon\r\n          banner\r\n        />\r\n      )}\r\n      <PasscodeInput\r\n        className=\"code-display\"\r\n        value={String(code)}\r\n        length={4}\r\n        plain\r\n      />\r\n      <Button\r\n        icon={<ShareAltOutlined />}\r\n        className=\"share-btn\"\r\n        onClick={share}\r\n        block\r\n      >\r\n        Share\r\n      </Button>\r\n      <Divider />\r\n      <div className=\"user-list\">\r\n        {userList.map((u) => (\r\n          <UserCard key={u.userID} userID={u.userID} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const [reloading, setReloading] = useState(false);\r\n  const title = (\r\n    <div className=\"team-title\">\r\n      <span>Team info</span>\r\n      <Button\r\n        shape=\"circle\"\r\n        type=\"text\"\r\n        size=\"small\"\r\n        loading={reloading}\r\n        icon={<ReloadOutlined />}\r\n        onClick={async () => {\r\n          setReloading(true);\r\n          await loadInfo();\r\n          await loadState();\r\n          setReloading(false);\r\n          resetIO();\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Popover\r\n      content={teamPop}\r\n      trigger=\"click\"\r\n      placement=\"bottomRight\"\r\n      title={title}\r\n      getPopupContainer={(e) => e.parentElement!}\r\n    >\r\n      <Button\r\n        type=\"text\"\r\n        icon={\r\n          <Badge\r\n            status={connected ? \"success\" : \"error\"}\r\n            count={connected ? onlineNum : \"!\"}\r\n            size=\"small\"\r\n          >\r\n            <TeamOutlined />\r\n          </Badge>\r\n        }\r\n      />\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst JoinRoom = () => {\r\n  const { noteID } = useContext(ReaderStateCtx);\r\n  const { instantSave } = useContext(ReaderMethodCtx);\r\n  const nav = useNavigate();\r\n\r\n  const createRoom = async () => {\r\n    await instantSave();\r\n    const res = await putNote(noteID);\r\n    if (!res) return message.error(\"Can't create room.\");\r\n    await editNoteData(noteID, { team: true });\r\n    nav(\"/team/\" + noteID);\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      type=\"text\"\r\n      icon={<UsergroupAddOutlined />}\r\n      onClick={() => {\r\n        Modal.confirm({\r\n          title: \"Enable team editing\",\r\n          content: \"This will make your note public.\",\r\n          icon: <TeamOutlined style={{ color: \"#555\" }} />,\r\n          onOk: createRoom,\r\n        });\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import { useContext } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ReaderMethodCtx, ReaderStateCtx } from \"../Reader\";\r\nimport { HomeFilled, SaveOutlined } from \"@ant-design/icons\";\r\nimport { HeaderMiddle } from \"./Middle\";\r\nimport { HeaderRight } from \"./Right\";\r\nimport \"./header.sass\";\r\n\r\nexport default function ReaderHeader() {\r\n  return (\r\n    <header>\r\n      <HeaderLeft />\r\n      <HeaderMiddle />\r\n      <HeaderRight />\r\n    </header>\r\n  );\r\n}\r\n\r\nconst HeaderLeft = () => {\r\n  const { saved } = useContext(ReaderStateCtx);\r\n  const { instantSave } = useContext(ReaderMethodCtx);\r\n  const nav = useNavigate();\r\n\r\n  return (\r\n    <div className=\"left\">\r\n      <Button\r\n        type=\"text\"\r\n        onClick={async () => {\r\n          await instantSave();\r\n          nav(\"/\");\r\n        }}\r\n        icon={<HomeFilled style={{ opacity: 0.8 }} />}\r\n      />\r\n      <Button\r\n        type=\"text\"\r\n        className=\"save\"\r\n        onClick={instantSave}\r\n        disabled={saved}\r\n        icon={<SaveOutlined />}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useCallback,\r\n  createContext,\r\n} from \"react\";\r\nimport {\r\n  DrawCtrl,\r\n  getDrawCtrl,\r\n  defaultDrawCtrl,\r\n} from \"../../lib/draw/drawCtrl\";\r\nimport {\r\n  NoteInfo,\r\n  NotePage,\r\n  createPage,\r\n  defaultNotePage,\r\n} from \"../../lib/note/note\";\r\nimport { NewPageInfo, ReorderInfo, SyncInfo } from \"../../lib/network/io\";\r\nimport { useMemoizedFn as useEvent, useSafeState } from \"ahooks\";\r\nimport { SetOperation, StateSet } from \"../../lib/draw/StateSet\";\r\nimport Draw, { ActiveToolKey, DrawRefType } from \"../draw/Draw\";\r\nimport { loadNote, editNoteData } from \"../../lib/note/archive\";\r\nimport { AddPageButton, showPageDelMsg } from \"./ReaderUtils\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { SelectTool, TextTool } from \"./tools/DrawTools\";\r\nimport { debounce, last, once, range } from \"lodash-es\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { DrawState } from \"../../lib/draw/DrawState\";\r\nimport { TeamState } from \"../../lib/draw/TeamState\";\r\nimport { useScrollPage } from \"./lib/scroll\";\r\nimport ReaderHeader from \"./header/Header\";\r\nimport { insertAfter } from \"./lib/array\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport { Map } from \"immutable\";\r\nimport { message } from \"antd\";\r\nimport \"./reader.sass\";\r\n\r\nexport const ReaderStateCtx = createContext({\r\n  noteID: \"\",\r\n  noteInfo: undefined as NoteInfo | undefined,\r\n  stateSet: undefined as StateSet | undefined,\r\n  teamState: undefined as TeamState | undefined,\r\n  pageRec: undefined as Map<string, NotePage> | undefined,\r\n  pageOrder: undefined as string[] | undefined,\r\n  saved: true,\r\n  currPageID: \"\",\r\n  drawCtrl: defaultDrawCtrl,\r\n  forceLight: false,\r\n});\r\n\r\nexport const ReaderMethodCtx = createContext({\r\n  scrollPage: (pageID: string) => {},\r\n  switchPageMarked: (pageID: string) => {},\r\n  updateStateSet: (cb: (prevSS: StateSet) => StateSet) => {},\r\n  addPage: (prevPageID: string, copy?: boolean) => {},\r\n  addFinalPage: () => {},\r\n  deletePage: (pageID: string) => {},\r\n  saveReorder: async (order: string[], push: boolean) => {},\r\n  setInviewRatios: (() => {}) as Setter<Map<string, number>>,\r\n  setDrawCtrl: (() => {}) as Setter<DrawCtrl>,\r\n  instantSave: (() => {}) as () => Promise<void> | undefined,\r\n  handleUndo: () => {},\r\n  handleRedo: () => {},\r\n  setForceLight: (() => {}) as Setter<boolean>,\r\n});\r\n\r\nexport default function Reader() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const nav = useNavigate();\r\n\r\n  const [pageRec, setPageRec] = useState<Map<string, NotePage>>();\r\n  const [noteInfo, setNoteInfo] = useState<NoteInfo>();\r\n  const [stateSet, setStateSet] = useState<StateSet>();\r\n  const [drawCtrl, setDrawCtrl] = useState(defaultDrawCtrl);\r\n  const [pageOrder, setPageOrder] = useState<string[]>();\r\n  const [saved, setSaved] = useSafeState(true);\r\n  const [forceLight, setForceLight] = useState(false);\r\n\r\n  const { io, teamOn, teamState, addTeamStatePage } = useContext(TeamCtx);\r\n  const { setInviewRatios, scrollPage, sectionRef, currPageID } = useScrollPage(\r\n    noteID,\r\n    pageOrder\r\n  );\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const storedNote = await loadNote(noteID);\r\n      if (!storedNote) {\r\n        message.error(\"Note not found\");\r\n        return nav(\"/\");\r\n      }\r\n      const { pageRec, pdf, pageOrder, ...noteInfo } = storedNote;\r\n      setPageRec(Map(pageRec));\r\n      setPageOrder(pageOrder);\r\n      setNoteInfo(noteInfo);\r\n      setStateSet(StateSet.createFromPages(pageRec));\r\n      setDrawCtrl(await getDrawCtrl());\r\n    })();\r\n  }, [nav, noteID, teamOn]);\r\n\r\n  useEffect(() => {\r\n    if (!noteInfo) return;\r\n    document.title = noteInfo.name + \" - Multibility\";\r\n  }, [noteInfo]);\r\n\r\n  const saver = useEvent(async () => {\r\n    const pr = pageRec?.toObject();\r\n    await editNoteData(noteID, { pageRec: pr });\r\n    setSaved(true);\r\n  });\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const debouncedSave = useCallback(debounce(saver, 2000), [saver]);\r\n  const instantSave = debouncedSave.flush;\r\n\r\n  const savePageRec = (pageID: string, cb: (prev: NotePage) => NotePage) => {\r\n    setPageRec((prev) => prev?.update(pageID, defaultNotePage, cb));\r\n    setSaved(false);\r\n    debouncedSave();\r\n  };\r\n\r\n  const saveReorder = async (pageOrder: string[], push = false) => {\r\n    setPageOrder(pageOrder);\r\n    await editNoteData(noteID, { pageOrder });\r\n    await instantSave();\r\n    push && pushReorder(pageOrder);\r\n  };\r\n\r\n  const pushReorder = (pageOrder: string[]) =>\r\n    io?.emit(\"reorder\", { pageOrder });\r\n\r\n  const handleReorder = useEvent(\r\n    ({ deleted, pageOrder, prevOrder }: ReorderInfo) => {\r\n      saveReorder(pageOrder);\r\n      if (!deleted) return;\r\n      showPageDelMsg(() => saveReorder(prevOrder, true));\r\n    }\r\n  );\r\n\r\n  const handleNewPage = useEvent(\r\n    ({ pageOrder, pageID, newPage }: NewPageInfo) => {\r\n      saveReorder(pageOrder);\r\n      savePageRec(pageID, () => newPage);\r\n      setStateSet((prev) => prev?.addState(pageID, newPage));\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    io?.on(\"reorder\", handleReorder);\r\n    io?.on(\"newPage\", handleNewPage);\r\n    return () => void io?.removeAllListeners();\r\n  }, [io, handleReorder, handleNewPage]);\r\n\r\n  const pushOperation = (operation: SetOperation) => {\r\n    const handleSync = ({ pageID, stroke }: SyncInfo) =>\r\n      setStateSet((prev) => prev?.syncStrokeTime(pageID, stroke));\r\n\r\n    io?.emit(\"push\", { operation }, handleSync);\r\n  };\r\n\r\n  const pushNewPage = (\r\n    pageOrder: string[],\r\n    pageID: string,\r\n    newPage: NotePage\r\n  ) => {\r\n    const { image, marked, ...newTeamPage } = newPage;\r\n    io?.emit(\"newPage\", { pageOrder, pageID, newPage: newTeamPage });\r\n    addTeamStatePage(pageID, newPage);\r\n  };\r\n\r\n  const updatePageRec = (pageID: string, ds: DrawState) => {\r\n    const state = DrawState.flaten(ds);\r\n    savePageRec(pageID, (prev) => ({ ...prev, state }));\r\n  };\r\n\r\n  const updateStateSet = (cb: (prevSS: StateSet) => StateSet) => {\r\n    if (!stateSet) return;\r\n    const newSS = cb(stateSet);\r\n    setStateSet(newSS);\r\n    const lastDS = newSS.getLastDS();\r\n    const lastOp = newSS.lastOp;\r\n    if (!lastDS || !lastOp) return;\r\n    updatePageRec(...lastDS);\r\n    pushOperation(lastOp);\r\n  };\r\n\r\n  const switchPageMarked = (pageID: string) =>\r\n    savePageRec(pageID, (prev) => ({ ...prev, marked: !prev.marked }));\r\n\r\n  const addPage = (prevPageID: string, copy = false) => {\r\n    if (!pageOrder) return;\r\n    const prevPage = copy ? pageRec?.get(prevPageID) : undefined;\r\n    const [pageID, newPage] = createPage(prevPage);\r\n    const newOrder = insertAfter(pageOrder, prevPageID, pageID);\r\n    pushNewPage(newOrder, pageID, newPage);\r\n    saveReorder(newOrder);\r\n    savePageRec(pageID, () => newPage);\r\n    setStateSet((prev) => prev?.addState(pageID, newPage));\r\n  };\r\n\r\n  const addFinalPage = () => {\r\n    const lastPageID = last(pageOrder);\r\n    lastPageID && addPage(lastPageID);\r\n  };\r\n\r\n  const deletePage = (pageID: string) => {\r\n    const newOrder = pageOrder?.filter((id) => id !== pageID);\r\n    newOrder?.length && saveReorder(newOrder, true);\r\n  };\r\n\r\n  const handleUndo = () => updateStateSet((prev) => prev.undo());\r\n  const handleRedo = () => updateStateSet((prev) => prev.redo());\r\n  const renderResult = (\r\n    <div className=\"reader container\" data-force-light={forceLight}>\r\n      <ReaderHeader />\r\n      <main>\r\n        {pageOrder?.map((uid) => (\r\n          <section key={uid} className=\"note-page\" ref={sectionRef(uid)}>\r\n            <PageContainer uid={uid} />\r\n          </section>\r\n        ))}\r\n        <AddPageButton />\r\n      </main>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ReaderStateCtx.Provider\r\n      value={{\r\n        saved,\r\n        noteID,\r\n        pageRec,\r\n        drawCtrl,\r\n        noteInfo,\r\n        stateSet,\r\n        teamState,\r\n        pageOrder,\r\n        currPageID,\r\n        forceLight,\r\n      }}\r\n    >\r\n      <ReaderMethodCtx.Provider\r\n        value={{\r\n          addPage,\r\n          scrollPage,\r\n          deletePage,\r\n          setDrawCtrl,\r\n          saveReorder,\r\n          instantSave,\r\n          addFinalPage,\r\n          handleRedo,\r\n          handleUndo,\r\n          updateStateSet,\r\n          setInviewRatios,\r\n          switchPageMarked,\r\n          setForceLight,\r\n        }}\r\n      >\r\n        {renderResult}\r\n      </ReaderMethodCtx.Provider>\r\n    </ReaderStateCtx.Provider>\r\n  );\r\n}\r\n\r\nconst PageContainer: FC<{ uid: string }> = ({ uid }) => {\r\n  const { pageRec, stateSet, teamState } = useContext(ReaderStateCtx);\r\n  const { updateStateSet } = useContext(ReaderMethodCtx);\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n  const updateState = (ds: DrawState) => {\r\n    updateStateSet((prev) => prev.setState(uid, ds));\r\n  };\r\n\r\n  if (!page || !drawState) return null;\r\n  return (\r\n    <PageWrapper\r\n      drawState={drawState}\r\n      teamStateMap={teamStateMap}\r\n      updateState={updateState}\r\n      pdfIndex={page.pdfIndex}\r\n      uid={uid}\r\n    />\r\n  );\r\n};\r\n\r\nexport const PageWrapper = ({\r\n  thumbnail,\r\n  drawState,\r\n  teamStateMap,\r\n  updateState,\r\n  pdfIndex,\r\n  preview = false,\r\n  uid = \"\",\r\n}: {\r\n  drawState: DrawState;\r\n  uid?: string;\r\n  teamStateMap?: Map<string, DrawState>;\r\n  thumbnail?: string;\r\n  pdfIndex?: number;\r\n  updateState?: (ds: DrawState) => void;\r\n  preview?: boolean;\r\n}) => {\r\n  const { setInviewRatios } = useContext(ReaderMethodCtx);\r\n  const { noteID } = useContext(ReaderStateCtx);\r\n  const [fullImg, setFullImg] = useState<string>();\r\n  const [ref, visible, entry] = useInView({ threshold: range(0, 1.1, 0.1) });\r\n\r\n  useEffect(() => {\r\n    if (preview) return;\r\n    if (!entry || !visible) {\r\n      setInviewRatios((prev) => prev.delete(uid));\r\n    } else {\r\n      setInviewRatios((prev) => prev.set(uid, entry.intersectionRatio));\r\n    }\r\n  }, [visible, entry, uid, preview, setInviewRatios]);\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const loadImage = useCallback(\r\n    once(async () => {\r\n      if (!pdfIndex) return;\r\n      const { getNotePageImage } = await import(\"../../lib/note/pdfImage\");\r\n      setFullImg(await getNotePageImage(noteID, pdfIndex));\r\n    }),\r\n    [pdfIndex, noteID]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!preview && visible) loadImage();\r\n  }, [visible, preview, loadImage]);\r\n\r\n  const { ignores } = useContext(TeamCtx);\r\n  const otherStates = useMemo(\r\n    () => teamStateMap?.deleteAll(ignores).toList().toArray(),\r\n    [teamStateMap, ignores]\r\n  );\r\n\r\n  const imageLoaded = Boolean(fullImg || !pdfIndex);\r\n  const drawShow = visible && imageLoaded;\r\n\r\n  const { height, width } = drawState;\r\n  const ratio = height / width;\r\n\r\n  return (\r\n    <div ref={ref} className=\"page-wrapper\">\r\n      <svg viewBox={`0 0 100 ${ratio * 100}`} />\r\n      {drawShow && (\r\n        <DrawWrapper\r\n          drawState={drawState}\r\n          otherStates={otherStates}\r\n          updateState={updateState}\r\n          imgSrc={fullImg || thumbnail}\r\n          preview={preview}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DrawWrapper = ({\r\n  drawState,\r\n  updateState,\r\n  otherStates,\r\n  preview = false,\r\n  imgSrc,\r\n}: {\r\n  drawState: DrawState;\r\n  otherStates?: DrawState[];\r\n  updateState?: (ds: DrawState) => void;\r\n  preview?: boolean;\r\n  imgSrc?: string;\r\n}) => {\r\n  const { drawCtrl } = useContext(ReaderStateCtx);\r\n  const [activeTool, setActiveTool] = useState<ActiveToolKey>(\"\");\r\n  const drawRef = useRef<DrawRefType>(null);\r\n\r\n  const handleChange = useEvent(\r\n    (arg: ((s: DrawState) => DrawState) | DrawState) => {\r\n      if (!updateState) return;\r\n      const newDS = arg instanceof DrawState ? arg : arg(drawState);\r\n      updateState(newDS);\r\n    }\r\n  );\r\n\r\n  return preview ? (\r\n    <Draw\r\n      drawState={drawState}\r\n      otherStates={otherStates}\r\n      imgSrc={imgSrc}\r\n      readonly\r\n    />\r\n  ) : (\r\n    <>\r\n      <Draw\r\n        drawState={drawState}\r\n        otherStates={otherStates}\r\n        onChange={handleChange}\r\n        imgSrc={imgSrc}\r\n        drawCtrl={drawCtrl}\r\n        ref={drawRef}\r\n        setActiveTool={setActiveTool}\r\n      />\r\n      <SelectTool drawRef={drawRef} visible={activeTool === \"select\"} />\r\n      <TextTool drawRef={drawRef} visible={activeTool === \"text\"} />\r\n    </>\r\n  );\r\n};\r\nDrawWrapper.displayName = \"DrawWrapper\";\r\n","import { io } from \"socket.io-client\";\r\nimport { Stroke } from \"../draw/DrawState\";\r\nimport { NotePage } from \"../note/note\";\r\nimport { getUserID, getUserName } from \"../user\";\r\nimport { BASE_URL } from \"./http\";\r\n\r\nexport const IoFactory = (noteID: string) => () =>\r\n  io(BASE_URL, {\r\n    query: {\r\n      userID: getUserID(),\r\n      userName: getUserName(),\r\n      noteID,\r\n    },\r\n  });\r\n\r\nexport interface ReorderInfo {\r\n  pageOrder: string[];\r\n  prevOrder: string[];\r\n  deleted: boolean;\r\n}\r\n\r\nexport interface NewPageInfo {\r\n  pageOrder: string[];\r\n  pageID: string;\r\n  newPage: NotePage;\r\n}\r\n\r\nexport interface SyncInfo {\r\n  stroke: Stroke;\r\n  pageID: string;\r\n}\r\n","import { NotePage, TeamPage, TeamPageInfo } from \"../note/note\";\nimport { DrawState, WIDTH } from \"./DrawState\";\nimport { SetOperation } from \"./StateSet\";\nimport { Map, Record } from \"immutable\";\n\ninterface TeamStateRecordType {\n  pageStates: Map<string, Map<string, DrawState>>;\n  pageInfos: Map<string, TeamPageInfo>;\n}\n\nconst defaultRecord: Readonly<TeamStateRecordType> = {\n  pageStates: Map(),\n  pageInfos: Map(),\n};\n\ntype TeamStateRecord = Record<TeamStateRecordType>;\nconst defaultFactory = Record(defaultRecord);\n\nexport class TeamState {\n  constructor(private immutable: TeamStateRecord) {}\n\n  getImmutable() {\n    return this.immutable;\n  }\n\n  getPageStates() {\n    return this.getImmutable().get(\"pageStates\");\n  }\n\n  getPageInfos() {\n    return this.getImmutable().get(\"pageInfos\");\n  }\n\n  getOneState(pageID: string, userID: string) {\n    return this.getPageStates().get(pageID)?.get(userID);\n  }\n\n  getOnePageStateMap(pageID: string) {\n    return this.getPageStates().get(pageID);\n  }\n\n  getPageValidUsers(pageID: string) {\n    const map = this.getOnePageStateMap(pageID);\n    if (!map) return [];\n    return Array.from(map?.filter((ds) => !ds.isEmpty()).keys());\n  }\n\n  getPageRatio(pageID: string) {\n    return this.getPageInfos().get(pageID)?.ratio;\n  }\n\n  includesPage(pageID: string) {\n    return this.getPageStates().has(pageID);\n  }\n\n  setState(pageID: string, userID: string, drawState: DrawState) {\n    const pageMap = this.getPageStates().get(pageID);\n    if (!pageMap) return this;\n    return new TeamState(\n      this.getImmutable().update(\"pageStates\", (m) =>\n        m.set(pageID, pageMap.set(userID, drawState))\n      )\n    );\n  }\n\n  static createFromTeamPages(\n    teamPages: globalThis.Record<string, TeamPage>,\n    width = WIDTH\n  ) {\n    let record = defaultFactory();\n    Object.entries(teamPages).forEach(([pageID, teamPage]) => {\n      const { states, ratio } = teamPage;\n      const pageMap = Map(\n        Object.entries(states).map(([userID, flatState]) => [\n          userID,\n          DrawState.loadFromFlat(flatState, width, width * ratio),\n        ])\n      );\n      record = record\n        .update(\"pageStates\", (m) => m.set(pageID, pageMap))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }));\n    });\n    return new TeamState(record);\n  }\n\n  addPage(pageID: string, notePage: NotePage) {\n    const { ratio } = notePage;\n    return new TeamState(\n      this.getImmutable()\n        .update(\"pageStates\", (m) => m.set(pageID, Map()))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }))\n    );\n  }\n\n  pushOperation(setOp: SetOperation, userID: string, width = WIDTH) {\n    const { pageID, ...op } = setOp;\n    const ratio = this.getPageRatio(pageID);\n    if (!this.includesPage(pageID) || !ratio) return this;\n    const prevDs =\n      this.getOneState(pageID, userID) ||\n      DrawState.createEmpty(width, width * ratio);\n\n    const ds = DrawState.pushOperation(prevDs, op);\n    return this.setState(pageID, userID, ds);\n  }\n\n  resetUser(userID: string, pageRec: globalThis.Record<string, NotePage>) {\n    let newTS: TeamState = this;\n    for (let [pageID, { state, ratio }] of Object.entries(pageRec)) {\n      const prevDS = newTS.getOneState(pageID, userID);\n      if (!prevDS) continue;\n      const { width } = prevDS;\n      newTS = newTS.setState(\n        pageID,\n        userID,\n        DrawState.loadFromFlat(state, width, width * ratio)\n      );\n    }\n    return newTS;\n  }\n}\n","import { useState, useEffect, createContext, useCallback } from \"react\";\r\nimport {\r\n  getTeamNoteState,\r\n  loadTeamNoteInfo,\r\n  updatePages,\r\n} from \"../../lib/network/http\";\r\nimport { LoginOutlined, LogoutOutlined } from \"@ant-design/icons\";\r\nimport { IoFactory, NewPageInfo } from \"../../lib/network/io\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { TeamState } from \"../../lib/draw/TeamState\";\r\nimport { getUserID, UserInfo } from \"../../lib/user\";\r\nimport { NotePage } from \"../../lib/note/note\";\r\nimport { Socket } from \"socket.io-client\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { Loading } from \"../ui/Loading\";\r\nimport { message } from \"antd\";\r\nimport { Set } from \"immutable\";\r\nimport Reader from \"./Reader\";\r\n\r\nexport const TeamCtx = createContext({\r\n  io: undefined as Socket | undefined,\r\n  code: 0,\r\n  teamOn: false,\r\n  connected: false,\r\n  ignores: Set<string>(),\r\n  userRec: {} as Record<string, UserInfo>,\r\n  teamState: undefined as TeamState | undefined,\r\n  resetIO: () => {},\r\n  loadInfo: async () => false,\r\n  loadState: async () => false,\r\n  setIgnores: (() => {}) as Setter<Set<string>>,\r\n  addTeamStatePage: (pageID: string, newPage: NotePage) => {},\r\n});\r\n\r\nexport default function Team() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const [teamState, setTeamState] = useState<TeamState>();\r\n  const [code, setCode] = useState(-2);\r\n  const [userRec, setUserRec] = useState<Record<string, UserInfo>>({});\r\n  const [ignores, setIgnores] = useState(Set<string>());\r\n  const [io, setIO] = useState(IoFactory(noteID));\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [connected, setConnected] = useState(false);\r\n  const nav = useNavigate();\r\n\r\n  const loadInfo = useCallback(async () => {\r\n    const info = await loadTeamNoteInfo(noteID);\r\n    if (!info) {\r\n      message.error(\"Failed loading the team note info\");\r\n      return false;\r\n    }\r\n    setCode(info.code);\r\n    return true;\r\n  }, [noteID]);\r\n\r\n  const loadState = useCallback(async () => {\r\n    const teamNote = await getTeamNoteState(noteID);\r\n    if (!teamNote) {\r\n      message.error(\"Failed loading the team note state\");\r\n      return false;\r\n    }\r\n    setTeamState(TeamState.createFromTeamPages(teamNote));\r\n    return true;\r\n  }, [noteID]);\r\n\r\n  const updateSelfState = useCallback(() => {\r\n    updatePages(noteID);\r\n  }, [noteID]);\r\n\r\n  useEffect(() => {\r\n    const roomInit = async () => {\r\n      const infoLoaded = await loadInfo();\r\n      const stateLoaded = await loadState();\r\n      if (!infoLoaded || !stateLoaded) return nav(\"/\");\r\n      setLoaded(true);\r\n      updateSelfState();\r\n    };\r\n    roomInit();\r\n    return updateSelfState;\r\n  }, [loadInfo, loadState, nav, updateSelfState]);\r\n\r\n  useEffect(() => {\r\n    io.on(\"push\", ({ operation, userID }) => {\r\n      setTeamState((prev) => prev?.pushOperation(operation, userID));\r\n    });\r\n\r\n    io.on(\"join\", ({ joined, members }) => {\r\n      const { userID, userName } = joined;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return;\r\n      showJoinMsg(userID, userName);\r\n    });\r\n\r\n    io.on(\"leave\", ({ leaved, members }) => {\r\n      const { userID, userName } = leaved;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return io.emit(\"join\");\r\n      showLeaveMsg(userID, userName);\r\n    });\r\n\r\n    io.on(\"newPage\", (info: NewPageInfo) => {\r\n      const { pageID, newPage } = info;\r\n      setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n    });\r\n\r\n    io.on(\"reset\", ({ userID, pageRec }) => {\r\n      if (userID === getUserID()) return;\r\n      setTeamState((prev) => prev?.resetUser(userID, pageRec));\r\n    });\r\n\r\n    io.on(\"connect_error\", console.error);\r\n    io.on(\"connect\", () => setConnected(true));\r\n    io.on(\"disconnect\", () => setConnected(false));\r\n\r\n    return () => {\r\n      io.removeAllListeners();\r\n      io.close();\r\n    };\r\n  }, [io]);\r\n\r\n  const addTeamStatePage = (pageID: string, newPage: NotePage) => {\r\n    setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n  };\r\n\r\n  const resetIO = () => setIO(IoFactory(noteID));\r\n\r\n  return (\r\n    <Loading loading={!loaded}>\r\n      <TeamCtx.Provider\r\n        value={{\r\n          io,\r\n          code,\r\n          teamOn: true,\r\n          ignores,\r\n          userRec,\r\n          connected,\r\n          teamState,\r\n          resetIO,\r\n          loadInfo,\r\n          loadState,\r\n          setIgnores,\r\n          addTeamStatePage,\r\n        }}\r\n      >\r\n        <Reader />\r\n      </TeamCtx.Provider>\r\n    </Loading>\r\n  );\r\n}\r\n\r\nconst showJoinMsg = (userID: string, userName: string) => {\r\n  message.destroy(userID);\r\n  message.success({\r\n    content: `${userName} joined room`,\r\n    icon: <LoginOutlined />,\r\n    key: userID,\r\n  });\r\n};\r\n\r\nconst showLeaveMsg = (userID: string, userName: string) => {\r\n  message.destroy(userID);\r\n  message.warning({\r\n    content: `${userName} leaved room`,\r\n    icon: <LogoutOutlined />,\r\n    key: userID,\r\n  });\r\n};\r\n","import classNames from \"classnames\";\nimport { FC } from \"react\";\nimport './circle.sass'\n\nexport const ColorCirle: FC<{ color: string; className?: string }> = ({\n  color,\n  className,\n}) => {\n  const style = { backgroundColor: color };\n  return (\n    <div className={classNames(\"color-circle\", className)} style={style} />\n  );\n};\n","import hash from \"string-hash\";\r\nexport const colors = [\r\n  \"#f97316\",\r\n  \"#eab308\",\r\n  \"#84cc16\",\r\n  \"#22c55e\",\r\n  \"#10b981\",\r\n  \"#14b8a6\",\r\n  \"#06b6d4\",\r\n  \"#0ea5e9\",\r\n  \"#3b82f6\",\r\n  \"#6366f1\",\r\n  \"#8b5cf6\",\r\n  \"#a855f7\",\r\n  \"#d946ef\",\r\n  \"#ec4899\",\r\n  \"#f43f5e\",\r\n  \"#ef4444\",\r\n];\r\n\r\nexport const grayColors = [\"#000000\", \"#9ca3af\", \"#64748b\", \"#78716c\"];\r\nexport const allColors = [...grayColors, ...colors];\r\n\r\nexport const getRandomColor = () => {\r\n  const index = Math.floor(Math.random() * colors.length);\r\n  return colors[index];\r\n};\r\n\r\nexport const getHashedColor = (str: string) => {\r\n  const index = hash(str) % colors.length;\r\n  return colors[index];\r\n};\r\n","import { List, Record, OrderedMap, Map } from \"immutable\";\r\nimport { v4 } from \"uuid\";\r\nimport Heap from \"heap\";\r\n\r\nexport const WIDTH = 2000;\r\n\r\nexport interface Stroke {\r\n  uid: string;\r\n  pathData: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport type StrokeRecord = globalThis.Record<string, Stroke>;\r\nexport type Mutation = [string, string];\r\nexport type Splitter = [string, string[]];\r\n\r\nexport type Operation =\r\n  | {\r\n      type: \"add\";\r\n      stroke: Stroke;\r\n    }\r\n  | {\r\n      type: \"erase\";\r\n      erased: string[];\r\n    }\r\n  | {\r\n      type: \"mutate\";\r\n      mutations: Mutation[];\r\n    }\r\n  | {\r\n      type: \"split\";\r\n      splitters: Splitter[];\r\n    }\r\n  | {\r\n      type: \"undo\";\r\n    }\r\n  | {\r\n      type: \"redo\";\r\n    };\r\n\r\ninterface DrawStateRecordType {\r\n  strokes: OrderedMap<string, Stroke>;\r\n  undoStack: List<DrawStateRecord>;\r\n  historyStack: List<DrawStateRecord>;\r\n}\r\n\r\ntype DrawStateRecord = Record<DrawStateRecordType>;\r\n\r\nconst defaultRecord: Readonly<DrawStateRecordType> = {\r\n  strokes: OrderedMap(),\r\n  undoStack: List(),\r\n  historyStack: List(),\r\n};\r\n\r\nconst defaultFactory = Record(defaultRecord);\r\n\r\nexport interface FlatState {\r\n  strokes: StrokeRecord;\r\n  operations?: Operation[];\r\n}\r\n\r\nexport const getDefaultFlatState = (): FlatState => {\r\n  return { strokes: {} };\r\n};\r\n\r\nexport class DrawState {\r\n  constructor(\r\n    private immutable: DrawStateRecord,\r\n    public readonly width: number,\r\n    public readonly height: number,\r\n    public lastOp?: Operation\r\n  ) {}\r\n\r\n  getImmutable() {\r\n    return this.immutable;\r\n  }\r\n\r\n  getUndoStack() {\r\n    return this.getImmutable().get(\"undoStack\");\r\n  }\r\n\r\n  getHistoryStack() {\r\n    return this.getImmutable().get(\"historyStack\");\r\n  }\r\n\r\n  getStrokeMap() {\r\n    return this.getImmutable().get(\"strokes\");\r\n  }\r\n\r\n  getStrokeList(): Stroke[] {\r\n    return this.getStrokeMap()\r\n      .toArray()\r\n      .map(([_, stroke]) => stroke);\r\n  }\r\n\r\n  getLastStroke() {\r\n    return this.getStrokeMap().last();\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.getStrokeMap().size === 0;\r\n  }\r\n\r\n  hasStroke(uid: string) {\r\n    return this.getStrokeMap().has(uid);\r\n  }\r\n\r\n  static createEmpty(width: number, height: number) {\r\n    return new DrawState(defaultFactory(), width, height);\r\n  }\r\n\r\n  static undo(drawState: DrawState) {\r\n    const lastOp: Operation = { type: \"undo\" };\r\n    const lastRecord = drawState.getHistoryStack().last();\r\n    if (!lastRecord) return drawState;\r\n    const undoStack = drawState\r\n      .getUndoStack()\r\n      .unshift(drawState.getImmutable());\r\n    return new DrawState(\r\n      lastRecord.set(\"undoStack\", undoStack),\r\n      drawState.width,\r\n      drawState.height,\r\n      lastOp\r\n    );\r\n  }\r\n\r\n  static redo(drawState: DrawState) {\r\n    const lastOp: Operation = { type: \"redo\" };\r\n\r\n    const nextRecord = drawState.getUndoStack().first();\r\n    if (!nextRecord) return drawState;\r\n    return new DrawState(nextRecord, drawState.width, drawState.height, lastOp);\r\n  }\r\n\r\n  static addStroke(drawState: DrawState, pathData: string) {\r\n    const uid = DrawState.getUid();\r\n    const timestamp = Date.now();\r\n    const stroke = { pathData, uid, timestamp };\r\n    return DrawState.pushStroke(drawState, stroke);\r\n  }\r\n\r\n  static pushStroke(drawState: DrawState, stroke: Stroke) {\r\n    const { uid } = stroke;\r\n    const prevRecord = drawState.getImmutable();\r\n    const currRecord = prevRecord\r\n      .update(\"strokes\", (s) => s.set(uid, stroke))\r\n      .update(\"historyStack\", (s) => s.push(prevRecord))\r\n      .delete(\"undoStack\");\r\n\r\n    const lastOp: Operation = { type: \"add\", stroke };\r\n\r\n    return new DrawState(currRecord, drawState.width, drawState.height, lastOp);\r\n  }\r\n\r\n  static eraseStrokes(drawState: DrawState, erased: string[]) {\r\n    if (erased.length === 0) return drawState;\r\n    const prevRecord = drawState.getImmutable();\r\n    const currRecord = prevRecord\r\n      .update(\"strokes\", (m) => m.deleteAll(erased))\r\n      .update(\"historyStack\", (s) => s.push(prevRecord))\r\n      .delete(\"undoStack\");\r\n\r\n    const lastOp: Operation = { type: \"erase\", erased };\r\n\r\n    return new DrawState(currRecord, drawState.width, drawState.height, lastOp);\r\n  }\r\n\r\n  static mutateStrokes(drawState: DrawState, mutations: Mutation[]) {\r\n    if (mutations.length === 0) return drawState;\r\n    const prevRecord = drawState.getImmutable();\r\n    let strokes = drawState.getStrokeMap();\r\n    mutations.forEach(\r\n      ([uid, pathData]) =>\r\n        (strokes = strokes.update(\r\n          uid,\r\n          { uid, pathData, timestamp: Date.now() },\r\n          (s) => ({ ...s, pathData })\r\n        ))\r\n    );\r\n    const currRecord = prevRecord\r\n      .set(\"strokes\", strokes)\r\n      .update(\"historyStack\", (s) => s.push(prevRecord))\r\n      .delete(\"undoStack\");\r\n\r\n    const lastOp: Operation = { type: \"mutate\", mutations };\r\n\r\n    return new DrawState(currRecord, drawState.width, drawState.height, lastOp);\r\n  }\r\n\r\n  static splitStrokes(drawState: DrawState, splitters: Splitter[]) {\r\n    if (splitters.length === 0) return drawState;\r\n    const splitMap = Map(splitters);\r\n    let strokes = OrderedMap<string, Stroke>();\r\n    const prevStrokes = drawState.getStrokeMap();\r\n    prevStrokes.forEach((stroke, prevUid) => {\r\n      const splitStrokes = splitMap.get(prevUid);\r\n      if (splitStrokes) {\r\n        splitStrokes.forEach((pathData, index) => {\r\n          const uid = prevUid + \"-\" + index;\r\n          const { timestamp } = stroke;\r\n          strokes = strokes.set(uid, { pathData, timestamp, uid });\r\n        });\r\n      } else {\r\n        strokes = strokes.set(prevUid, stroke);\r\n      }\r\n    });\r\n    const prevRecord = drawState.getImmutable();\r\n    const currRecord = prevRecord\r\n      .set(\"strokes\", strokes)\r\n      .update(\"historyStack\", (s) => s.push(prevRecord));\r\n    const lastOp: Operation = { type: \"split\", splitters };\r\n    return new DrawState(currRecord, drawState.width, drawState.height, lastOp);\r\n  }\r\n\r\n  // sync with mutation.\r\n  static syncStrokeTime(drawState: DrawState, stroke: Stroke) {\r\n    const { uid, timestamp } = stroke;\r\n    const prevStroke = drawState.getStrokeMap().get(uid);\r\n    if (!prevStroke) return;\r\n    prevStroke.timestamp = timestamp;\r\n  }\r\n\r\n  static pushOperation(drawState: DrawState, op: Operation) {\r\n    switch (op.type) {\r\n      case \"add\":\r\n        return DrawState.pushStroke(drawState, op.stroke);\r\n      case \"erase\":\r\n        return DrawState.eraseStrokes(drawState, op.erased);\r\n      case \"mutate\":\r\n        return DrawState.mutateStrokes(drawState, op.mutations);\r\n      case \"undo\":\r\n        return DrawState.undo(drawState);\r\n      case \"redo\":\r\n        return DrawState.redo(drawState);\r\n      case \"split\":\r\n        return DrawState.splitStrokes(drawState, op.splitters);\r\n    }\r\n  }\r\n\r\n  static flaten(drawState: DrawState): FlatState {\r\n    const strokes = drawState.getImmutable().get(\"strokes\").toObject();\r\n    return { strokes };\r\n  }\r\n\r\n  static loadFromFlat(\r\n    flatState: FlatState,\r\n    width: number,\r\n    height: number\r\n  ): DrawState {\r\n    const { strokes, operations } = flatState;\r\n    let ds = new DrawState(\r\n      defaultFactory().set(\"strokes\", OrderedMap(strokes)),\r\n      width,\r\n      height\r\n    );\r\n    operations?.forEach((op) => (ds = DrawState.pushOperation(ds, op)));\r\n    return ds;\r\n  }\r\n\r\n  static mergeStates(...states: DrawState[]): Stroke[] {\r\n    const iterators = states.map((ds) => ds.getStrokeMap().values());\r\n    const mergedStrokes = [];\r\n    const heap = new Heap<[Stroke, number]>(\r\n      ([s0], [s1]) => s0.timestamp - s1.timestamp\r\n    );\r\n\r\n    iterators.forEach((iter, index) => {\r\n      const { value, done } = iter.next();\r\n      done || heap.push([value, index]);\r\n    });\r\n\r\n    while (heap.size() > 0) {\r\n      const record = heap.pop();\r\n      if (!record) break;\r\n      const [stroke, index] = record;\r\n      mergedStrokes.push(stroke);\r\n\r\n      const { value, done } = iterators[index].next();\r\n      done || heap.push([value, index]);\r\n    }\r\n    return mergedStrokes;\r\n  }\r\n\r\n  static getUid() {\r\n    return v4();\r\n  }\r\n}\r\n","export function createVirtualCanvas(width: number, height: number) {\r\n  const canvas = document.createElement(\"canvas\");\r\n  const context = canvas.getContext(\"2d\");\r\n  if (!context) {\r\n    throw new Error(\"can't get virtual canvas context\");\r\n  }\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n  return { canvas, context };\r\n}\r\n\r\nexport function releaseCanvas(canvas: HTMLCanvasElement) {\r\n  canvas.width = 1;\r\n  canvas.height = 1;\r\n  const ctx = canvas.getContext('2d');\r\n  ctx?.clearRect(0, 0, 1, 1);\r\n}\r\n","import axios from \"axios\";\r\nimport {\r\n  removePageTimg,\r\n  TeamNoteInfo,\r\n  TeamPage,\r\n  TeamPageInfo,\r\n} from \"../note/note\";\r\nimport { loadNote, saveTeamNote, updateTeamNote } from \"../note/archive\";\r\nimport { getUserID } from \"../user\";\r\n\r\nexport let BASE_URL = \"https://api.slotdumpling.top/paint\";\r\n// BASE_URL = \"http://192.168.1.14:8090/paint\";\r\naxios.defaults.baseURL = BASE_URL;\r\n\r\nexport async function getNoteID(roomCode: string) {\r\n  try {\r\n    const { data } = await axios.get(`code/${roomCode}`);\r\n    console.log({ data });\r\n    if (data.statusCode !== 200) return null;\r\n    return data.noteID as string;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n}\r\n\r\ninterface InfoRes {\r\n  statusCode: number;\r\n  code: number;\r\n  noteInfo: TeamNoteInfo;\r\n  pageInfos: Record<string, TeamPageInfo>;\r\n}\r\n\r\nexport async function getTeamNoteInfo(noteID: string) {\r\n  try {\r\n    const { data } = await axios.get(`info/${noteID}`);\r\n    const { statusCode, ...res } = data as InfoRes;\r\n    if (statusCode !== 200) return null;\r\n    return res;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function loadTeamNoteInfo(noteID: string) {\r\n  try {\r\n    const infoRes = await getTeamNoteInfo(noteID);\r\n    if (!infoRes) return null;\r\n    const { noteInfo, pageInfos } = infoRes;\r\n\r\n    if (await updateTeamNote(noteID, noteInfo, pageInfos)) return infoRes;\r\n\r\n    if (noteInfo.withImg) {\r\n      const { data } = await axios({\r\n        method: \"GET\",\r\n        url: noteID,\r\n        responseType: \"blob\",\r\n      });\r\n      const file = new Blob([data], { type: \"application/pdf\" });\r\n      await saveTeamNote(noteID, noteInfo, pageInfos, file);\r\n    } else {\r\n      await saveTeamNote(noteID, noteInfo, pageInfos);\r\n    }\r\n    return infoRes;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function putNote(noteID: string) {\r\n  const note = await loadNote(noteID);\r\n  if (!note) return false;\r\n  const { uid, name, withImg, pdf, pageOrder, pageRec } = note;\r\n  removePageTimg(pageRec);\r\n\r\n  try {\r\n    const { data } = await axios.put(`create/${noteID}`, {\r\n      userID: getUserID(),\r\n      pageRec,\r\n      noteInfo: { uid, name, withImg, pageOrder },\r\n    });\r\n\r\n    if (pdf) {\r\n      const formData = new FormData();\r\n      const ab = await pdf.arrayBuffer();\r\n      const file = new Blob([ab]);\r\n      formData.append(\"file\", file, noteID);\r\n      await axios({\r\n        method: \"POST\",\r\n        url: \"upload\",\r\n        data: formData,\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n    }\r\n\r\n    if (data.statusCode !== 201) return false;\r\n    return true;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function updatePages(noteID: string) {\r\n  const note = await loadNote(noteID);\r\n  if (!note) return null;\r\n  const { uid, name, withImg, pageOrder, pageRec } = note;\r\n  removePageTimg(pageRec);\r\n\r\n  try {\r\n    const { data } = await axios.put(`update/${noteID}`, {\r\n      userID: getUserID(),\r\n      pageRec,\r\n      noteInfo: { uid, name, withImg, pageOrder },\r\n    });\r\n    if (data.statusCode === 201) return true;\r\n    else return false;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function getTeamNoteState(noteID: string) {\r\n  try {\r\n    const { data } = await axios.get(`state/${noteID}`, {\r\n      params: { userID: getUserID() },\r\n    });\r\n    if (data.statusCode !== 200) return null;\r\n    const { teamPages } = data;\r\n    return teamPages as Record<string, TeamPage>;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n}\r\n","import { Note, NoteInfo, NotePage, TeamNoteInfo, TeamPageInfo } from \"./note\";\r\nimport { getDefaultFlatState } from \"../draw/DrawState\";\r\nimport localforage from \"localforage\";\r\nimport { v4 as getUid } from \"uuid\";\r\nimport { pickBy } from \"lodash-es\";\r\n\r\nexport interface NoteTag {\r\n  uid: string;\r\n  name: string;\r\n  color: string;\r\n  notes: string[];\r\n}\r\n\r\nexport async function getAllNotes() {\r\n  const allNotes = await localforage.getItem<Record<string, NoteInfo>>(\r\n    \"ALL_NOTES\"\r\n  );\r\n  if (allNotes) return allNotes;\r\n  localforage.setItem(\"ALL_NOTES\", {});\r\n  return {};\r\n}\r\n\r\nexport async function getAllTags() {\r\n  const tags = await localforage.getItem<Record<string, NoteTag>>(\"ALL_TAGS\");\r\n  if (tags) return tags;\r\n  localforage.setItem(\"ALL_TAGS\", {});\r\n  return {};\r\n}\r\n\r\nexport async function addNewTag(name: string, color: string) {\r\n  const uid = getUid();\r\n  const newTag: NoteTag = {\r\n    uid,\r\n    name,\r\n    color,\r\n    notes: [],\r\n  };\r\n  const prevTags = await getAllTags();\r\n  const tags = { ...prevTags, [uid]: newTag };\r\n  await localforage.setItem(\"ALL_TAGS\", tags);\r\n\r\n  return tags;\r\n}\r\n\r\nexport async function deleteTag(uid: string) {\r\n  const prevTags = await getAllTags();\r\n  const { [uid]: _, ...tags } = prevTags;\r\n  await localforage.setItem(\"ALL_TAGS\", tags);\r\n\r\n  return tags;\r\n}\r\n\r\nexport async function editTag(tag: NoteTag) {\r\n  const prevTags = await getAllTags();\r\n  const tags = { ...prevTags, [tag.uid]: tag };\r\n  await localforage.setItem(\"ALL_TAGS\", tags);\r\n  return tags;\r\n}\r\n\r\nexport async function loadNote(uid: string) {\r\n  const note = await localforage.getItem<Note>(uid);\r\n  if (!note) return;\r\n  const pdf = await localforage.getItem<Blob>(`PDF_${uid}`);\r\n  if (pdf) return { ...note, pdf };\r\n  else return note;\r\n}\r\n\r\nexport async function editNoteData(uid: string, noteData: Partial<Note>) {\r\n  noteData = pickBy(noteData, (v) => v !== undefined);\r\n  if (\"pageRec\" in noteData) noteData.lastTime = Date.now();\r\n\r\n  const allNotes = await getAllNotes();\r\n  const { pageRec, pageOrder, ...noteInfo } = noteData;\r\n  allNotes[uid] = { ...allNotes[uid], ...noteInfo };\r\n\r\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\r\n  const prevNote = await loadNote(uid);\r\n  if (!prevNote) return;\r\n  await localforage.setItem(uid, { ...prevNote, ...noteData });\r\n}\r\n\r\nexport async function saveNoteInfo(noteInfo: NoteInfo) {\r\n  const { uid, tagID } = noteInfo;\r\n  const allNotes = await getAllNotes();\r\n  allNotes[uid] = noteInfo;\r\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\r\n  const tags = await getAllTags();\r\n  if (tagID in tags) {\r\n    tags[tagID].notes.push(noteInfo.uid);\r\n    await localforage.setItem(\"ALL_TAGS\", tags);\r\n  }\r\n  return { tags, allNotes };\r\n}\r\n\r\nexport async function createNewNote(noteWithPdf: Note) {\r\n  const { pdf, ...note } = noteWithPdf;\r\n  await localforage.setItem(note.uid, note);\r\n  if (pdf) await localforage.setItem(`PDF_${note.uid}`, pdf);\r\n  const { pageRec, pageOrder, ...noteInfo } = note;\r\n  return await saveNoteInfo(noteInfo);\r\n}\r\n\r\nexport async function deleteNote(uid: string) {\r\n  const note = await loadNote(uid);\r\n  const allNotes = await getAllNotes();\r\n  const tags = await getAllTags();\r\n  if (!note) return { tags, allNotes };\r\n  await localforage.removeItem(uid);\r\n  await localforage.removeItem(`PDF_${uid}`);\r\n  delete allNotes[uid];\r\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\r\n\r\n  const { tagID } = note;\r\n  if (tagID in tags) {\r\n    const prevTag = tags[tagID];\r\n    prevTag.notes = prevTag.notes.filter((id) => id !== uid);\r\n    await localforage.setItem(\"ALL_TAGS\", tags);\r\n  }\r\n  return { tags, allNotes };\r\n}\r\n\r\nexport async function moveNoteTag(noteID: string, tagID: string) {\r\n  const note = await loadNote(noteID);\r\n  const allNotes = await getAllNotes();\r\n  const tags = await getAllTags();\r\n  if (!note) return { tags, allNotes };\r\n\r\n  const { tagID: prevTagId } = note;\r\n  note.tagID = tagID;\r\n  await localforage.setItem(noteID, note);\r\n  allNotes[noteID].tagID = tagID;\r\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\r\n\r\n  if (prevTagId in tags) {\r\n    const prevTag = tags[prevTagId];\r\n    prevTag.notes = prevTag.notes.filter((id) => id !== noteID);\r\n  }\r\n  tags[tagID]?.notes.push(noteID);\r\n  await localforage.setItem(\"ALL_TAGS\", tags);\r\n  return { tags, allNotes };\r\n}\r\n\r\nexport async function saveTeamNote(\r\n  noteID: string,\r\n  noteInfo: TeamNoteInfo,\r\n  teamPages: Record<string, TeamPageInfo>,\r\n  file?: Blob\r\n) {\r\n  let note = await loadNote(noteID);\r\n  if (note) return;\r\n  const time = Date.now();\r\n  const pageRec: Record<string, NotePage> = {};\r\n  note = {\r\n    ...noteInfo,\r\n    tagID: \"DEFAULT\",\r\n    team: true,\r\n    pageRec,\r\n    pdf: file,\r\n    createTime: time,\r\n    lastTime: time,\r\n  };\r\n\r\n  // set empty state for each page\r\n  Object.entries(teamPages).forEach(([pageID, page]) => {\r\n    pageRec[pageID] = { ...page, state: getDefaultFlatState() };\r\n  });\r\n\r\n  // parse timg for each page\r\n  if (file) {\r\n    const { getPDFImages } = await import(\"../note/pdfImage\");\r\n    const { images } = await getPDFImages(file, 0.5);\r\n    Object.values(pageRec).forEach((page) => {\r\n      const { pdfIndex } = page;\r\n      if (!pdfIndex) return;\r\n      page.image = images[pdfIndex - 1];\r\n    });\r\n    note.thumbnail = images[0];\r\n  }\r\n\r\n  await createNewNote(note);\r\n}\r\n\r\nexport async function updateTeamNote(\r\n  noteID: string,\r\n  noteInfo: TeamNoteInfo,\r\n  pageInfos: Record<string, TeamPageInfo>\r\n) {\r\n  let note = await loadNote(noteID);\r\n  if (!note) return false;\r\n  const { pageOrder } = noteInfo;\r\n  if (pageOrder.length < note.pageOrder.length) return true;\r\n  const { pageRec, pdf } = note;\r\n  const { getOneImage } = await import(\"./pdfImage\");\r\n\r\n  // parse timgs & set empty states for new pages.\r\n  for (let [pageID, page] of Object.entries(pageInfos)) {\r\n    if (pageID in pageRec) continue;\r\n    const { pdfIndex } = page;\r\n    const state = getDefaultFlatState();\r\n    pageRec[pageID] = { ...page, state };\r\n    if (!pdf || !pdfIndex) continue;\r\n    pageRec[pageID].image = await getOneImage(pdf, pdfIndex, 0.5);\r\n  }\r\n  await editNoteData(noteID, { pageOrder, pageRec });\r\n  return true;\r\n}\r\n","import { getDefaultFlatState, FlatState } from \"../draw/DrawState\";\r\nimport { v4 as getUid } from \"uuid\";\r\nimport dayjs from \"dayjs\";\r\n\r\nexport interface NotePage {\r\n  ratio: number;\r\n  state: FlatState;\r\n  image?: string;\r\n  marked?: boolean;\r\n  pdfIndex?: number;\r\n}\r\n\r\nexport const defaultNotePage: Readonly<NotePage> = {\r\n  ratio: 1.5,\r\n  state: { strokes: {} },\r\n};\r\n\r\nexport interface TeamPageState {\r\n  states: Record<string, FlatState>;\r\n}\r\n\r\nexport interface TeamPageInfo {\r\n  ratio: number;\r\n  pdfIndex?: number;\r\n}\r\n\r\nexport type TeamPage = TeamPageInfo & TeamPageState;\r\n\r\nexport interface TeamNote {\r\n  uid: string;\r\n  pageRec: Record<string, TeamPage>;\r\n}\r\n\r\nexport interface NoteInfo {\r\n  uid: string;\r\n  name: string;\r\n  tagID: string;\r\n  team: boolean;\r\n  withImg: boolean;\r\n  createTime: number;\r\n  lastTime: number;\r\n  thumbnail?: string;\r\n}\r\n\r\nexport type Note = NoteInfo & {\r\n  pdf?: Blob;\r\n  pageRec: Record<string, NotePage>;\r\n  pageOrder: string[];\r\n};\r\n\r\nexport interface TeamNoteInfo {\r\n  uid: string;\r\n  name: string;\r\n  pageOrder: string[];\r\n  withImg: boolean;\r\n}\r\n\r\nexport function createEmptyNote(): Note {\r\n  const pageID = getUid();\r\n  const time = Date.now();\r\n  return {\r\n    uid: getUid(),\r\n    name: `Note ${dayjs(time).format(\"HH:mm, ddd MMM D\")}`,\r\n    tagID: \"DEFAULT\",\r\n    team: false,\r\n    withImg: false,\r\n    createTime: time,\r\n    lastTime: time,\r\n    pageRec: {\r\n      [pageID]: {\r\n        ratio: 1.5,\r\n        state: getDefaultFlatState(),\r\n      },\r\n    },\r\n    pageOrder: [pageID],\r\n  };\r\n}\r\n\r\nexport function createPage(page?: NotePage): [string, NotePage] {\r\n  const pageID = getUid();\r\n  const newPage = page ?? {\r\n    ratio: 1.5,\r\n    state: getDefaultFlatState(),\r\n  };\r\n  return [pageID, newPage];\r\n}\r\n\r\nexport function removePageTimg(pageRec: Record<string, NotePage>) {\r\n  Object.values(pageRec).forEach((page) => {\r\n    delete page.image;\r\n    delete page.marked;\r\n  });\r\n}\r\n","import { v4 as getUid } from \"uuid\";\r\n\r\nexport interface UserInfo {\r\n  userID: string;\r\n  userName: string;\r\n  online: boolean;\r\n}\r\n\r\nexport const getUserID = (() => {\r\n  let cached: string;\r\n  return () => {\r\n    if (cached) return cached;\r\n    let userID = localStorage.getItem(\"USER_ID\");\r\n    if (!userID) {\r\n      userID = getUid();\r\n      localStorage.setItem(\"USER_ID\", userID);\r\n    }\r\n    cached = userID;\r\n    return userID;\r\n  };\r\n})();\r\n\r\nexport const getUserName = () => {\r\n  let name = localStorage.getItem(\"USER_NAME\");\r\n  if (!name) {\r\n    name = getUid().slice(0, 8);\r\n    localStorage.setItem(\"USER_NAME\", name);\r\n  }\r\n  return name;\r\n};\r\n\r\nexport const saveUserName = (name: string) => {\r\n  name = name.trim();\r\n  if (!name) return false;\r\n  else localStorage.setItem(\"USER_NAME\", name);\r\n  return true;\r\n};\r\n"],"names":["defaultWidthList","defaultDrawCtrl","mode","finger","lineWidth","eraserWidth","color","highlight","lasso","pixelEraser","widthList","getDrawCtrl","localforage","drawCtrl","defaultRecord","states","Map","editStack","List","undoStack","defaultFactory","Record","StateSet","immutable","lastOp","this","getImmutable","get","pageID","getStates","drawState","prevDS","getOneState","currRecord","update","s","set","l","push","delete","stroke","DrawState","notePage","width","WIDTH","state","ratio","newDS","getEditStack","size","getUndoStack","isUndoable","lastUid","last","lastSetOp","pop","isRedoable","ds","pageRec","map","usePreventTouch","allowFinger","isTouch","useRef","checkPoniter","e","isPrimary","current","pointerType","preventTouch","touch","touches","touchType","isApplePencil","length","isEventValid","stopPropagation","onPointerDownCapture","onPointerMoveCapture","onTouchStartCapture","onTouchMoveCapture","Path","paper","Size","Point","Group","Color","Raster","Layer","Draw","React","ref","otherStates","onChange","readonly","imgSrc","setActiveTool","height","canvasEl","scope","useState","group","setGroup","usePaperItem","path","setPath","rect","setRect","useEffect","cvs","scp","setup","settings","handleSize","hitTolerance","project","addLayer","layers","activate","forEach","visible","Tool","remove","releaseCanvas","bgRect","paintBackground","useSize","view","viewSize","multiply","scale","raster","addChild","sendToBack","onLoad","requestAnimationFrame","fitBounds","bringToFront","mergedStrokes","useMemo","getStrokeList","tempGroup","layer","self","hasStroke","uid","item","paintStroke","removeChildren","hitRef","selected","setSelected","paperMode","chosenIDs","setChosenIDs","chosenItems","IDSet","Set","filter","has","name","resetSelect","useCallback","undefined","downPath","startStroke","downRect","startRect","point","handleDown","draw","erase","select","contains","hitRes","hitTest","segments","text","t","getClickedText","add","content","fontSize","justification","fillColor","setPointText","dragPath","smooth","handleDrag","x","y","s1","s2","s3","segment","moveP","baseP","next","diagonal","subtract","strokeWidth","translate","delta","pointText","bounds","topCenter","bottomRight","tool","maxDistance","erased","replaced","handleEarserDrag","hitTestAll","class","tolerance","topItem","parent","radius","circle","Circle","sub","trace","replaceWith","opacity","guide","handleUp","isEmpty","simplify","pathData","exportJSON","prev","items","Array","from","clear","splitters","flattenCP","i","console","log","erasedList","selection","Math","abs","area","closePath","moveDash","checkLasso","updateMutation","cursor","setCursor","cursorStyle","handleMove","handler","onMouseDown","onMouseDrag","onMouseUp","onMouseMove","mutations","p","deleteSelected","rotateSelected","angle","aniCount","dAngle","center","position","rotate","mutateStyle","updated","updateGroupStyle","duplicateSelected","transP","divide","copies","clone","rasterize","g","addTo","insert","toDataURL","cancelText","submitText","useImperativeHandle","preventDefault","document","addEventListener","removeEventListener","usePinch","memo","offset","first","origin","lastScale","lastOrigin","elPos","originRawP","getBoundingClientRect","originViewP","originPorjP","viewToProject","dScale","pow","scaleView","putCenterBack","zoom","scaleBounds","max","min","rubberband","target","touchHandler","className","style","displayName","tuple","useDebugValue","importJSON","error","Rectangle","onFrame","strokeColor","alpha","blendMode","strokeJoin","strokeCap","half","dashOffset","dashArray","projSize","viewW","viewH","projW","projH","minX","minY","maxX","maxY","getCenterTranslate","deltaX","deltaY","dP","move","isInside","res","compare","intersects","checkedP","newColor","fill","cp","children","flat","AddPageButton","addFinalPage","useContext","ReaderMethodCtx","type","icon","PlusOutlined","block","onClick","createFromIconfontCN","scriptUrl","PenPanel","updateDrawCtrl","panelBlur","setPanelBlur","WidthSelect","HighlightSwitch","checked","ColorSelect","setColor","c","field","currWidth","chosen","indexOf","popShow","setPopShow","includes","realSizeStyle","options","value","label","index","onVisibleChange","v","trigger","placement","destroyTooltipOnHide","defaultValue","onAfterChange","w","newWL","slice","allColors","backgroundColor","borderColor","SelectTool","drawRef","CSSTransition","timeout","in","unmountOnExit","SelectToolContent","btnProps","shape","currDrawCtrl","setCurrDrawCtrl","rotateEl","dragged","setDragged","transX","setTransX","gearStyle","transform","useDrag","filterTaps","left","right","createPortal","getPopupContainer","parentElement","BgColorsOutlined","RotateRightOutlined","CaretLeftOutlined","CaretRightOutlined","CopyOutlined","PictureOutlined","imageData","Modal","title","src","alt","okText","onOk","saveAs","danger","DeleteOutlined","querySelector","TextTool","setText","align","setAlign","forceLight","ReaderStateCtx","toCSS","fontColorBtn","overlayStyle","FontColorsOutlined","alignRadio","optionType","buttonStyle","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","onCancel","trim","bodyStyle","paddingTop","destroyOnClose","TextArea","rows","autoFocus","largestKey","order","result","maxRatio","key","HeaderMiddle","stateSet","setDrawCtrl","handleUndo","handleRedo","setForceLight","newCtrl","saveDrawCtrl","UndoOutlined","disabled","RedoOutlined","message","BulbFilled","BulbOutlined","PenButton","EraserButton","SelectButton","HighlightOutlined","GatewayOutlined","insertAfter","list","prevItem","newItem","prevIndex","curr","splice","UserAvatar","userID","userRec","TeamCtx","getHashedColor","userInfo","userName","PreviewCtx","activeKey","setActiveKey","PageNavContent","pageOrder","currPageID","scrollPage","saveReorder","refRec","scrollIntoView","PreviewTabs","onDragEnd","source","destination","fromIndex","toIndex","newOrder","removed","exchange","droppableId","droppableProps","innerRef","placeholder","PagePreview","pageIndex","teamState","setChosen","page","teamStateMap","getOnePageStateMap","image","marked","every","draggableId","isDragDisabled","draggableProps","dragHandleProps","isDragging","PageWrapper","thumbnail","preview","PreviewTools","switchPageMarked","ignores","userIDs","getPageValidUsers","PreviewOption","TeamAvatars","maxCount","classNames","maxPopoverPlacement","addPage","deletePage","menu","MoreOutlined","TabPane","Tabs","tabBarGutter","centered","tab","PageNav","navOn","setNavOn","ALL","MARKED","WRITTEN","Provider","MenuUnfoldOutlined","MenuFoldOutlined","onClose","closable","zIndex","padding","overflow","headerStyle","textAlign","HeaderRight","teamOn","RoomInfo","JoinRoom","UserCard","renaming","setRenaming","setIgnores","resetIO","online","getUserID","ignored","Search","onSearch","saveUserName","enterButton","CheckOutlined","FormOutlined","EyeInvisibleOutlined","EyeOutlined","code","connected","loadInfo","loadState","noteInfo","link","window","location","href","share","selfName","copy","userList","selfID","selfInfo","otherUsers","values","Object","onlineNum","teamPop","DisconnectOutlined","showIcon","banner","String","plain","ShareAltOutlined","u","reloading","setReloading","loading","ReloadOutlined","status","count","TeamOutlined","noteID","instantSave","nav","useNavigate","createRoom","putNote","editNoteData","team","UsergroupAddOutlined","ReaderHeader","HeaderLeft","saved","HomeFilled","SaveOutlined","createContext","updateStateSet","cb","prevPageID","setInviewRatios","Reader","useParams","setPageRec","setNoteInfo","setStateSet","setPageOrder","useSafeState","setSaved","io","addTeamStatePage","refMap","setRefMap","scrolled","setPrevPageID","inviewRatios","stored","sectionRef","el","useScrollPage","loadNote","storedNote","pdf","createFromPages","saver","useEvent","pr","toObject","debouncedSave","debounce","flush","savePageRec","defaultNotePage","pushReorder","emit","handleReorder","onUndo","deleted","prevOrder","duration","handleNewPage","newPage","addState","on","removeAllListeners","pushNewPage","newTeamPage","updatePageRec","newSS","operation","lastDS","getLastDS","syncStrokeTime","prevPage","createPage","renderResult","PageContainer","id","lastPageID","redo","undo","updateState","setState","pdfIndex","fullImg","setFullImg","useInView","threshold","range","entry","intersectionRatio","loadImage","once","getNotePageImage","deleteAll","toList","toArray","imageLoaded","Boolean","drawShow","viewBox","DrawWrapper","activeTool","handleChange","arg","IoFactory","BASE_URL","query","getUserName","pageStates","pageInfos","TeamState","getPageStates","keys","getPageInfos","pageMap","m","setOp","op","getPageRatio","includesPage","prevDs","newTS","entries","teamPages","record","teamPage","flatState","Team","setTeamState","setCode","setUserRec","setIO","loaded","setLoaded","setConnected","loadTeamNoteInfo","info","getTeamNoteState","teamNote","createFromTeamPages","updateSelfState","updatePages","roomInit","infoLoaded","stateLoaded","pushOperation","joined","members","showJoinMsg","leaved","showLeaveMsg","resetUser","close","Loading","LoginOutlined","LogoutOutlined","ColorCirle","colors","getRandomColor","floor","random","str","hash","strokes","OrderedMap","historyStack","getDefaultFlatState","getStrokeMap","lastRecord","getHistoryStack","unshift","nextRecord","getUid","timestamp","Date","now","pushStroke","prevRecord","splitMap","prevUid","splitStrokes","prevStroke","eraseStrokes","mutateStrokes","operations","iterators","heap","Heap","s0","iter","done","v4","createVirtualCanvas","canvas","createElement","context","getContext","Error","ctx","clearRect","getNoteID","roomCode","axios","data","statusCode","getTeamNoteInfo","infoRes","updateTeamNote","withImg","method","url","responseType","file","Blob","saveTeamNote","note","removePageTimg","formData","FormData","arrayBuffer","ab","append","headers","params","getAllNotes","allNotes","getAllTags","tags","addNewTag","newTag","notes","prevTags","deleteTag","editTag","tag","noteData","pickBy","lastTime","prevNote","saveNoteInfo","tagID","createNewNote","noteWithPdf","deleteNote","prevTag","moveNoteTag","prevTagId","time","createTime","getPDFImages","images","getOneImage","createEmptyNote","dayjs","format","cached","localStorage","getItem","setItem"],"sourceRoot":""}