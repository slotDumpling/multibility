{"version":3,"file":"static/js/665.d0753bef.chunk.js","mappings":"wUAUMA,EAA8C,CAClDC,QAAQC,EAAAA,EAAAA,MACRC,WAAWC,EAAAA,EAAAA,MACXC,WAAWD,EAAAA,EAAAA,OAIPE,GAAiBC,EAAAA,EAAAA,IAAOP,GAIjBQ,EAAb,WACE,WACUC,EACDC,IACN,oBAFOD,UAAAA,EAER,KADOC,OAAAA,CACL,CAJN,2CAiBE,WACE,OAAOC,KAAKF,SACb,GAnBH,uBAqBE,WACE,OAAOE,KAAKC,eAAeC,IAAI,SAChC,GAvBH,yBAyBE,SAAYC,GACV,OAAOH,KAAKI,YAAYF,IAAIC,EAC7B,GA3BH,0BA6BE,WACE,OAAOH,KAAKC,eAAeC,IAAI,YAChC,GA/BH,0BAiCE,WACE,OAAOF,KAAKC,eAAeC,IAAI,YAChC,GAnCH,sBAqCE,SAASC,EAAgBE,GACvB,IAAMC,EAASN,KAAKO,YAAYJ,GAChC,IAAKG,GAAUA,IAAWD,EAAW,OAAOL,KAC5C,IAAIQ,EAAaR,KAAKC,eACnBQ,OAAO,UAAU,SAACC,GAAD,OAAOA,EAAEC,IAAIR,EAAQE,EAArB,IACjBI,OAAO,aAAa,SAACG,GAAD,OAAOA,EAAEC,KAAKV,EAAd,IACpBW,OAAO,aAEFf,EAAWM,EAAXN,OAGR,OAAO,IAAIF,EAASW,EAFFT,IAAM,kBAASA,GAAT,IAAiBI,OAAAA,IAG1C,GAjDH,4BAoDE,SAAeA,EAAgBY,GAC7B,IAAMT,EAASN,KAAKO,YAAYJ,GAEhC,OADAG,GAAUU,EAAAA,GAAAA,eAAyBV,EAAQS,GACpCf,IACR,GAxDH,sBA0DE,SAASG,EAAgBc,GACvB,IAAQC,EAAiBD,EAAjBC,MAAOC,EAAUF,EAAVE,MACTC,EAAQJ,EAAAA,GAAAA,aAAuBE,EAAOC,GAI5C,OAAO,IAAItB,EAHQG,KAAKC,eAAeQ,OAAO,UAAU,SAACC,GAAD,OACtDA,EAAEC,IAAIR,EAAQiB,EADwC,IAIzD,GAjEH,yBAmEE,SAAYjB,GACV,OAAO,IAAIN,EACTG,KAAKC,eAAeQ,OAAO,UAAU,SAACC,GAAD,OAAOA,EAAEI,OAAOX,EAAhB,IAExC,GAvEH,wBAyEE,WACE,OAAOH,KAAKqB,eAAeC,KAAO,CACnC,GA3EH,wBA6EE,WACE,OAAOtB,KAAKuB,eAAeD,KAAO,CACnC,GA/EH,kBAiFE,WACE,IAAKtB,KAAKwB,aAAc,OAAOxB,KAC/B,IAAMyB,EAAUzB,KAAKqB,eAAeK,OAC9BpB,EAASmB,GAAWzB,KAAKO,YAAYkB,GAC3C,IAAKnB,EAAQ,OAAON,KAEpB,IAAMoB,EAAQJ,EAAAA,GAAAA,KAAeV,GACrBP,EAAWqB,EAAXrB,OACF4B,EAAY5B,IAAM,QAAMI,OAAQsB,GAAY1B,GAElD,OAAO,IAAIF,EACTG,KAAKC,eACFQ,OAAO,aAAa,SAACC,GAAD,OAAOA,EAAEkB,KAAT,IACpBnB,OAAO,aAAa,SAACC,GAAD,OAAOA,EAAEG,KAAKY,EAAd,IACpBhB,OAAO,UAAU,SAACC,GAAD,OAAOA,EAAEC,IAAIc,EAASL,EAAtB,IACpBO,EAEH,GAlGH,kBAoGE,WACE,IAAK3B,KAAK6B,aAAc,OAAO7B,KAC/B,IAAMyB,EAAUzB,KAAKuB,eAAeG,OAC9BpB,EAASmB,GAAWzB,KAAKO,YAAYkB,GAC3C,IAAKnB,EAAQ,OAAON,KAEpB,IAAMoB,EAAQJ,EAAAA,GAAAA,KAAeV,GACrBP,EAAWqB,EAAXrB,OACF4B,EAAY5B,IAAM,QAAMI,OAAQsB,GAAY1B,GAElD,OAAO,IAAIF,EACTG,KAAKC,eACFQ,OAAO,aAAa,SAACC,GAAD,OAAOA,EAAEkB,KAAT,IACpBnB,OAAO,aAAa,SAACC,GAAD,OAAOA,EAAEG,KAAKY,EAAd,IACpBhB,OAAO,UAAU,SAACC,GAAD,OAAOA,EAAEC,IAAIc,EAASL,EAAtB,IACpBO,EAEH,GArHH,uBAuHE,WAA8C,IAAD,EACrCxB,EAAM,UAAGH,KAAKD,cAAR,aAAG,EAAaI,OACtB2B,EAAK3B,GAAUH,KAAKO,YAAYJ,GACtC,GAAI2B,EAAI,MAAO,CAAC3B,EAAQ2B,EACzB,IA3HH,8BAME,SAAuBC,GACrB,OAAO,IAAIlC,EACTF,IAAiBgB,IACf,UACApB,EAAAA,EAAAA,IAAIwC,GAASC,KAAI,gBAAGd,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OACfH,EAAAA,GAAAA,aAAuBE,EAAOC,EADf,KAKtB,KAfH,K,+FCPMc,EAAeC,IAAAA,eAA2B,CAAEC,KAAM,WAClDC,GAAgBC,EAAAA,EAAAA,WAAS,SAACC,EAAgBC,GAC9CN,EAAaO,QAAQF,EAAQC,EAC9B,GAAE,KAiFH,IAAME,EAAa,SAACT,EAA0BU,GAC5C,IADgE,EAC5DC,EAAS,GACTC,EAAW,EAFiD,UAGhDF,GAHgD,IAGhE,2BAAuB,CAAC,IAAfG,EAAc,QACf1B,EAAQa,EAAI9B,IAAI2C,GACtB,GAAK1B,EAAL,CACA,GAAc,IAAVA,EAAa,OAAO0B,EACpB1B,EAAQyB,IACVD,EAASE,EACTD,EAAWzB,EAJO,CAMrB,CAX+D,+BAYhE,OAAOwB,CACR,ECvGM,SAASG,EAAeC,EAAWC,EAAaC,GACrD,IAAMC,EAAYH,EAAKI,QAAQH,GACzBI,EAAOL,EAAKM,QAClB,OAAmB,IAAfH,GACJE,EAAKE,OAAOJ,EAAY,EAAG,EAAGD,GADDG,CAG9B,C,8LCRYG,EAMR,SAAC,GAMC,IALLC,EAKI,EALJA,SAKI,IAJJlC,KAAAA,OAII,MAJG,UAIH,MAHJmC,QAAAA,OAGI,MAHM,WAAQ,EAGd,MAFJC,OAAAA,OAEI,SADJC,EACI,EADJA,UAEMC,GAAQC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,IAAeN,EAASO,OAA9B,GAAuC,CAACP,IAC9D,IAAKA,EAAU,OAAO,KACtB,IAAQQ,EAAaR,EAAbQ,SAER,OACE,SAAC,IAAD,CACEL,UAAWA,EACX,cAAaD,EACbpC,KAAMA,EACN2C,MAAO,CAAEC,gBAAiBN,GAJ5B,UAME,gBAAKD,UAAU,iBAAiBF,QAASA,EAAzC,gBACGO,QADH,IACGA,OADH,EACGA,EAAUX,MAAM,EAAG,MAI3B,E,oEC/BYc,GAAkD,SAAC,GAEzD,IADLC,EACI,EADJA,aAEA,OACE,gBAAKT,UAAU,kBAAf,UACE,SAAC,IAAD,CACEU,KAAK,SACLC,MAAM,SAACC,EAAA,EAAD,IACNC,OAAK,EACLf,QAASW,EAJX,uBAUL,E,6JCkCYK,GAA4B,SAACC,GACxC,OAAwBC,EAAAA,EAAAA,WAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAoBC,EAAAA,EAAAA,MAAbC,GAAP,eAEMC,GACJ,SAAC,KAAD,CAAWC,YAAY,WAAWC,MAAON,EAAO,EAAI,EAAGO,gBAAc,EAArE,SACG,gBAAGC,EAAH,EAAGA,SAAH,OAAkB,gBAAKzB,UAAU,WAAW0B,IAAKD,GAAjD,IAIL,OACE,SAACE,GAAA,EAAD,CAAeC,GAAIR,EAAWS,QAAS,IAAKC,eAAa,EAAzD,UACE,SAAC,KAAD,CAAmBC,QAAQ,MAA3B,UACE,SAAC,KAAD,CACEC,UAAW,YAAsB,IAAnBC,EAAkB,EAAlBA,YACe,KAAZ,OAAXA,QAAW,IAAXA,OAAA,EAAAA,EAAaV,QAAaL,GAAQ,GACX,KAAZ,OAAXe,QAAW,IAAXA,OAAA,EAAAA,EAAaV,QAAaL,GAAQ,EACvC,EAJH,UAME,SAAC,KAAD,CAAWgB,YAAY,eAAeC,UAAU,aAAhD,SACG,kBACGC,EADH,EACGA,eAAgBX,EADnB,EACmBA,SAAUY,EAD7B,EAC6BA,YAC1BC,EAFH,EAEGA,eAFH,OAIC,mCACEtC,UAAU,eACV,YAAWiB,EACXS,IAAKD,EACL,eAAca,GACVF,GALN,cAOGf,GACD,SAACkB,IAAD,QAAatB,KAAMA,GAAUF,IAC5BsB,KAbJ,SAqBZ,EAEKE,GAAoD,SAAC,GAGpD,IAFLtB,EAEI,EAFJA,KACGF,GACC,aACJ,GAAoByB,EAAAA,EAAAA,MAAbC,GAAP,eACA,GAAyBtB,EAAAA,EAAAA,MAAhBuB,GAAT,eAEMC,EAAQ,CACZC,IAAK,YACLC,OAAQ,YACRC,QAAS,SACTL,GAEF,GAA2CM,EAAAA,GAAAA,IAAa,CACtDC,aADsD,WAEhD/B,GAAMyB,GAAa,EACxB,EACDO,cAJsD,WAK/ChC,GAAMyB,GAAa,EACzB,EACDQ,cAAe,MAPJC,EAAb,EAAQzB,IAAkB0B,GAA1B,aAUA,OACE,SAAC,KAAD,CAAW9B,YAAa,OAAQC,MAAON,EAAO,EAAI,EAAlD,SACG,kBACGQ,EADH,EACGA,SAAU4B,EADb,EACaA,eAAgBC,EAD7B,EAC6BA,gBAC1BC,EAFH,EAEGA,WAAYC,EAFf,EAEeA,gBAFf,OAIC,yCACExD,UAAU,eACV0B,IAAK,SAAC+B,GACJhC,EAASgC,GACTN,EAASM,EACV,EACD,iBAAgBD,GACZH,GACAD,GARN,eAUE,wBAAKpD,UAAU,eAAkBsD,KACjC,wBAAKX,KACL,SAACe,GAAD,KACA,SAACC,IAAD,QAAUC,YAAaL,GAAgBxC,KACvC,SAAC8C,IAAD,UAAmB9C,OAlBtB,GAuBN,EAEK4C,GAAwDG,EAAAA,MAC5D,YAAgC,IAA7BF,EAA4B,EAA5BA,YAAgB7C,GAAY,aACvBgD,GAASC,EAAAA,EAAAA,QAAoC,CAAC,GACpD,GAAoBxB,EAAAA,EAAAA,MAAbC,GAAP,eACA,GAAoBtB,EAAAA,EAAAA,MAAbC,GAAP,eACQ6C,EAA0BlD,EAA1BkD,UAAWrF,EAAemC,EAAfnC,WACXsF,EAA8BnD,EAA9BmD,YAAazD,EAAiBM,EAAjBN,aAYf0D,GAAaC,EAAAA,EAAAA,IAAS,WAAO,IAAD,EAChC,UAAAL,EAAOM,QAAQzF,UAAf,SAA4B0F,gBAC7B,IAKD,OAJAC,EAAAA,EAAAA,kBAAgB,WACVnD,GAAW+C,GAChB,GAAE,CAAC/C,EAAWqB,EAAW0B,KAGxB,SAAC,KAAD,CAAiBnC,UAlBD,SAAC,GAAyC,IAAvCwC,EAAsC,EAAtCA,OAAQvC,EAA8B,EAA9BA,YAC3B,GAAKA,GAAgBgC,EAArB,CACA,IAAeQ,EAAcD,EAArBjD,MACOmD,EAAYzC,EAAnBV,MACF/E,EAASyH,EAAUQ,GACzB,GAAIA,IAAcC,GAAYlI,EAA9B,CACA,IAAMmI,EHhKL,SAAqBvF,EAAWqF,EAAmBC,GACxD,IAAM1F,EAASI,EAAKM,QACpB,EAAkBV,EAAOW,OAAO8E,EAAW,GAApCG,GAAP,eACA,OAAKA,GACL5F,EAAOW,OAAO+E,EAAS,EAAGE,GACnB5F,GAFcI,CAGtB,CG0JsByF,CAASZ,EAAWQ,EAAWC,GAChDR,EAAYS,GAAU,EAFsB,CAJN,CAOvC,EAUC,UACE,SAAC,KAAD,CAAWzC,YAAY,eAAe4C,eAAgBlB,EAAtD,SACG,gBAAGxB,EAAH,EAAGA,eAAgBX,EAAnB,EAAmBA,SAAUY,EAA7B,EAA6BA,YAA7B,OACC,iCAAKrC,UAAU,YAAY0B,IAAKD,GAAcW,GAA9C,qBACG6B,QADH,IACGA,OADH,EACGA,EAAW5F,KAAI,SAAC0G,EAAKxD,GAAN,OACd,SAACyD,IAAD,QAEED,IAAKA,EACLE,UAAW1D,EACXwC,OAAQA,EAAOM,QACfT,YAAaA,GACT7C,GALCgE,EAFO,IAUf1C,EACc,QAAdI,IACC,SAACjC,GAAD,CAAeC,aAAcA,OAdlC,KAqBR,IAEHkD,GAASuB,YAAc,WAEvB,IAAMF,GAOF,SAAC,GAAuD,IAArDD,EAAoD,EAApDA,IAAKE,EAA+C,EAA/CA,UAAWlB,EAAoC,EAApCA,OAAQH,EAA4B,EAA5BA,YAAgB7C,GAAY,aACjDoE,EAA8CpE,EAA9CoE,SAAU/G,EAAoC2C,EAApC3C,QAASQ,EAA2BmC,EAA3BnC,WAAYwG,EAAerE,EAAfqE,WACvC,GAA+BC,EAAAA,EAAAA,YAAWC,GAAAA,SAAlCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QACnB,GAAoBhD,EAAAA,EAAAA,MAAbC,GAAP,eACA,GAA4BzB,EAAAA,EAAAA,UAAS,IAArC,eAAOjB,EAAP,KAAe0F,EAAf,KAEMC,EAAI,OAAGtH,QAAH,IAAGA,OAAH,EAAGA,EAAS7B,IAAIwI,GACpBrI,EAAS,OAAGyI,QAAH,IAAGA,OAAH,EAAGA,EAAUvI,YAAYmI,GAClCY,EAAY,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAWK,mBAAmBb,GAE7Cc,GAAS7B,EAAAA,EAAAA,SAAO,GAEpB6B,EAAOxB,QADS,WAAd5B,KACmB,OAAJiD,QAAI,IAAJA,OAAA,EAAAA,EAAMG,SAAUA,EAAOxB,SAK1C,IAAMyB,GAAU5F,EAAAA,EAAAA,UACd,kBAAM6F,GAAAA,EAAAA,cAAwBJ,EAAcH,EAA5C,GACA,CAACG,EAAcH,IAGjB,IAAKE,IAAShJ,EAAW,OAAO,KAEhC,GACgB,YAAd+F,GACA/F,EAAUsJ,WACVD,GAAAA,EAAAA,QAAkBJ,GAElB,OAAO,KAET,GAAkB,WAAdlD,IAA2BoD,EAAOxB,QAAS,OAAO,KACtD,IAAM5E,EAAOb,IAAemG,EAE5B,OACE,SAAC,KAAD,CACEzD,YAAayD,EACbxD,MAAO0D,EACPzD,eAA8B,QAAdiB,GAAuBmB,EAHzC,SAKG,kBACGnC,EADH,EACGA,SAAU4B,EADb,EACaA,eAAgBC,EAD7B,EAC6BA,gBAC1BC,EAFH,EAEGA,WAAYC,EAFf,EAEeA,gBAFf,OAIC,yCACE9B,IAAK,SAAC+B,GACJhC,EAASgC,GACLA,IAAGM,EAAOgB,GAAOtB,EACtB,EACDzD,UAAU,OACV,YAAWP,EACX,eAAc8D,EACd,iBAAgBC,EAChB1D,QAAS,kBAAMsF,EAAWL,EAAjB,GACL1B,GACAC,GAXN,eAaE,SAAC2C,EAAA,QAAD,CACEvJ,WAAuB,OAAZiJ,QAAY,IAAZA,OAAA,EAAAA,EAAcpJ,IAAIwD,KAAWrD,EACxCiJ,aAAc5F,OAASmG,EAAYP,EACnCQ,UAAWT,EAAKU,MAChBZ,QAASA,EACTa,SAAO,EACPC,WAAY/C,GAAcK,KAE5B,SAAC2C,IAAD,QACExB,IAAKA,EACLxD,MAAO0D,EACPlF,OAAQA,EACR0F,UAAWA,EACXC,KAAMA,EACNI,QAASA,GACL/E,OAhCT,GAsCN,EAEKwF,GASFzC,EAAAA,MAAW,YAAiE,IAA9DiB,EAA6D,EAA7DA,IAAKxD,EAAwD,EAAxDA,MAAOxB,EAAiD,EAAjDA,OAAQ0F,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,KAAMI,EAAwB,EAAxBA,QAAY/E,GAAY,aACrEyF,EAAqBzF,EAArByF,iBACR,OACE,iBAAKxG,UAAU,QAAQF,QAAS,SAAC2D,GAAD,OAAOA,EAAEgD,iBAAT,EAAhC,WACE,gBACEzG,UAAU,WACV,cAAa0F,EAAKG,OAClB/F,QAAS,kBAAM0G,EAAiBzB,EAAvB,KAEX,gBAAK/E,UAAU,QAAf,SAAwBuB,EAAQ,KAChC,SAACmF,IAAD,QAAe3B,IAAKA,GAAShE,KAC7B,SAAC4F,GAAD,CAAab,QAASA,EAAS/F,OAAQA,EAAQ0F,UAAWA,MAG/D,IACDc,GAAarB,YAAc,eAE3B,IAAMyB,GAID,SAAC,GAAoC,IAAlCb,EAAiC,EAAjCA,QAAS/F,EAAwB,EAAxBA,OAAQ0F,EAAgB,EAAhBA,UACfmB,GAAYvB,EAAAA,EAAAA,YAAWC,GAAAA,SAAvBsB,QACR,OACE,SAAC,UAAD,CACEC,SAAU,EACVlJ,KAAK,UACLqC,UAAW8G,KAAW,aAAc,CAAE/G,OAAAA,IACtCgH,oBAAoB,SAJtB,SAMGjB,EAAQzH,KAAI,SAAC+B,GACZ,IAAMP,EAAW+G,EAAQxG,GACzB,OAAKP,GAEH,SAACD,EAAD,CAEEjC,KAAK,UACLkC,SAAUA,EACVG,UAAU,iBACVD,OAAQA,IAAWK,EACnBN,QAAS,kBAAM2F,GAAU,SAACuB,GAAD,OAAWA,IAAS5G,EAAS,GAAKA,CAAlC,GAAhB,GALJA,GAHa,IAWvB,KAGN,EAEKsG,GAAqD,SAAC,GAIrD,IAHL3B,EAGI,EAHJA,IACAkC,EAEI,EAFJA,QACAC,EACI,EADJA,WAEMC,GACJ,SAAC,IAAD,CACEC,MAAO,CACL,CACElI,IAAK,MACLyB,MAAM,SAACC,EAAA,EAAD,IACNyG,MAAO,WACPvH,QAAS,kBAAMmH,EAAQlC,EAAd,GAEX,CACE7F,IAAK,OACLyB,MAAM,SAAC2G,EAAA,EAAD,IACND,MAAO,YACPvH,QAAS,kBAAMmH,EAAQlC,GAAK,EAAnB,GAEX,CACE7F,IAAK,SACLyB,MAAM,SAAC4G,EAAA,EAAD,IACNF,MAAO,SACPG,QAAQ,EACR1H,QAAS,kBAAMoH,EAAWnC,EAAjB,MAKjB,OACE,SAAC,IAAD,CACE0C,QAASN,EACTO,QAAQ,QACRC,UAAU,OACVC,sBAAoB,EACpBC,kBAAmB,SAACpE,GAAD,yBAAOA,EAAEqE,qBAAT,iBAAO,EAAiBA,qBAAxB,aAAO,EAAgCA,aAAvC,EALrB,UAOE,gBAAK9H,UAAU,SAAf,UACE,SAAC+H,EAAA,EAAD,OAIP,EAEKrE,GAAkBI,EAAAA,MAAW,WACjC,OAAkCtB,EAAAA,EAAAA,MAAlC,eAAOC,EAAP,KAAkBuF,EAAlB,KACQC,EAAYC,EAAAA,EAAAA,QACpB,OACE,UAAC,IAAD,CACElI,UAAU,OACVyC,UAAWA,EACX0F,SAAUH,EACVI,aAAc,EACdzK,KAAK,QACL0K,UAAQ,EANV,WAQE,SAACJ,EAAD,CAASK,KAAK,SAACC,EAAA,EAAD,CAAU7H,KAAK,mBAAwB,QACrD,SAACuH,EAAD,CAASK,KAAK,SAACC,EAAA,EAAD,CAAU7H,KAAK,oBAAyB,WACtD,SAACuH,EAAD,CAASK,KAAK,SAACC,EAAA,EAAD,CAAU7H,KAAK,gBAAqB,aAGvD,IACDgD,GAAYwB,YAAc,cAE1B,IAAMrB,GAAkC,SAAC,GAMlC,IALLjF,EAKI,EALJA,WACAqF,EAII,EAJJA,UACAmB,EAGI,EAHJA,WACAzH,EAEI,EAFJA,KACA6K,EACI,EADJA,QAEMvD,GAAY/E,EAAAA,EAAAA,UAChB,wBAAM,iBAAC+D,QAAD,IAACA,OAAD,EAACA,EAAWzE,QAAQZ,UAApB,QAAmC,GAAK,CAA9C,GACA,CAACA,EAAYqF,IAGTwE,EAAWxE,IACf,SAAC,IAAD,CACEyE,SAAU,EACVC,MAAO1E,EAAU2E,OACjBC,QAAM,EACNxE,QAASY,EACTkD,SAAU,SAAC5G,GACT,IAAM/E,EAASyH,EAAU1C,EAAQ,GACjC/E,GAAU4I,EAAW5I,EACtB,IAICsM,GACJ,SAAC,IAAD,CACE1B,OAAO2B,EAAAA,EAAAA,OAAM,GAAI,IAAK,IAAI1K,KAAI,SAACtB,GAAD,MAAQ,CACpCmC,IAAKnC,EACLsK,MAAOtK,EAAI,IACXiD,UAAW,UACXF,QAAS,kBAAM0I,EAAQzL,EAAd,EAJmB,MASlC,OACE,+BACE,SAAC,IAAD,CACE0K,QAASgB,EACTf,QAAQ,QACRG,kBAAmB,SAACpE,GAAD,OAAOA,EAAEqE,aAAT,EACnBF,sBAAoB,EAJtB,UAME,UAAC,IAAD,CAAQlH,KAAK,OAAO/C,KAAK,QAAQgD,MAAM,SAACqI,EAAA,EAAD,IAAvC,UACG/D,EADH,aACiBhB,QADjB,IACiBA,OADjB,EACiBA,EAAW2E,aAG9B,SAAC,IAAD,CACEK,QAASH,EACTnB,UAAU,WACVD,QAAS,CAAC,SACVG,kBAAmB,SAACpE,GAAD,OAAOA,EAAEqE,aAAT,EAJrB,UAME,UAAC,IAAD,CACEpH,KAAK,OACL/C,KAAK,QACLgD,MAAM,SAACuI,EAAA,EAAD,IACNlJ,UAAU,WAJZ,UAMGrC,EANH,WAWP,E,wBCpdYwL,GAGR,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACPC,GAAMC,EAAAA,EAAAA,MACZ,OACE,iBAAKvJ,UAAU,OAAf,WACE,SAAC,IAAD,CACEU,KAAK,OACLZ,SAAO,iBAAE,8FACDuJ,IADC,OAEPC,EAAI,KAFG,2CAIT3I,MAAM,SAAC6I,GAAA,EAAD,CAAYlJ,MAAO,CAAEmJ,QAAS,SAEtC,SAAC,IAAD,CACE/I,KAAK,OACLV,UAAU,OACVF,QAASuJ,EACTK,SAAUN,EACVzI,MAAM,SAACgJ,GAAA,EAAD,QAIb,E,oHCbKC,GAAwB,CAAElJ,KAAM,OAAQmJ,MAAO,UAExCC,GAKR,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,WAAYC,EAAqC,EAArCA,WAAYC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACxC,GAAyBC,EAAAA,EAAAA,MAAjBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACRC,GAAiBC,EAAAA,EAAAA,MACvB,GAAoCC,EAAAA,EAAAA,MAApC,eAAOC,EAAP,KAAmBC,EAAnB,KAEA,OACE,iBAAK1K,UAAU,SAAS,mBAAkByK,EAA1C,WACE,SAAC,KAAD,kBACMb,IADN,IAEEjJ,MAAM,SAACgK,GAAA,EAAD,IACN7K,QAASiK,EACTL,UAAWO,MAEb,SAAC,KAAD,kBACML,IADN,IAEEjJ,MAAM,SAACiK,GAAA,EAAD,IACN9K,QAASkK,EACTN,UAAWQ,MAEb,SAAC,IAAD,CACEL,MAAM,SACNnJ,KAAM2J,EAAS,OAAS,OACxBvK,QAAS,WACPwK,EAAe,CAAED,QAASA,IAC1BQ,GAAAA,GAAAA,QAAgB,UAChBA,GAAAA,GAAAA,KAAa,CACXpD,QAAS4C,EAAS,cAAgB,mBAClCnL,IAAK,UAER,EACDyB,MAAM,SAAC4H,EAAA,EAAD,CAAU7H,KAAK,mBAEvB,SAAC,KAAD,gBACEV,UAAU,mBACN4J,IAFN,IAGEjJ,KAAM8J,GAAa,SAACK,GAAA,EAAD,KAAiB,SAACC,GAAA,EAAD,IACpCjL,QAAS,kBAAM4K,GAAc,SAAC1D,GAAD,OAAWA,CAAX,GAApB,MAEX,SAACgE,GAAD,KACA,SAACC,GAAD,KACA,SAAC,IAAD,CACEpB,MAAM,SACNnJ,KAAe,SAAT0J,EAAkB,OAAS,OACjCtK,QAAS,kBAAMwK,EAAe,CAAEF,KAAM,QAA7B,EACTzJ,MAAM,SAAC4H,EAAA,EAAD,CAAU7H,KAAK,kBAEvB,SAACwK,GAAD,MAGL,EAEKF,GAAY,WAChB,IAAMG,GAAWhB,EAAAA,EAAAA,MACTC,EAAgBe,EAAhBf,KAAMnK,EAAUkL,EAAVlL,MACRqK,GAAiBC,EAAAA,EAAAA,MAEvB,MAAgB,SAATH,GACL,SAAC,IAAD,CACE3C,SAAS,SAAC2D,GAAA,GAAD,CAAUd,eAAgBA,EAAgBa,SAAUA,IAC7DzD,QAAQ,QACRC,UAAU,SACVE,kBAAmB,SAACpE,GAAD,OAAOA,EAAEqE,aAAT,EACnBF,sBAAoB,EALtB,UAOE,SAAC,IAAD,CACElH,KAAK,OACLC,MAAM,SAAC0K,GAAA,EAAD,CAAkBC,aAAcrL,EAAOD,UAAU,kBAI3D,SAAC,KAAD,kBACM4J,IADN,IAEE9J,QAAS,kBAAMwK,EAAe,CAAEF,KAAM,QAA7B,EACTzJ,MAAM,SAAC4K,GAAA,EAAD,MAGX,EAEKN,GAAe,WACnB,IAAME,GAAWhB,EAAAA,EAAAA,MACTC,EAAsBe,EAAtBf,KAAMoB,EAAgBL,EAAhBK,YACRlB,GAAiBC,EAAAA,EAAAA,MAEvB,MAAgB,UAATH,GACL,SAAC,IAAD,CACE3C,SACE,iBAAKzH,UAAU,oBAAf,WACE,SAAC,KAAD,CACEa,OAAK,EACLlD,KAAK,QACLqC,UAAU,YACVyL,QAAS,CAAC,QAAS,UACnBC,MAAOF,EAAc,QAAU,SAC/BrD,SAAU,SAACuD,GACcpB,EAAT,UAAVoB,EAAkC,CAAEF,aAAa,GACjC,CAAEA,aAAa,GACpC,KAEH,SAAC,MAAD,CACEL,SAAUA,EACVb,eAAgBA,EAChBqB,MAAM,mBAIZjE,QAAQ,QACRC,UAAU,SACVE,kBAAmB,SAACpE,GAAD,OAAOA,EAAEqE,aAAT,EACnBF,sBAAoB,EAxBtB,UA0BE,SAAC,IAAD,CAAQlH,KAAK,OAAOC,MAAM,SAAC4H,EAAA,EAAD,CAAU7H,KAAK,qBAG3C,SAAC,KAAD,kBACMkJ,IADN,IAEE9J,QAAS,kBAAMwK,EAAe,CAAEF,KAAM,SAA7B,EACTzJ,MAAM,SAAC4H,EAAA,EAAD,CAAU7H,KAAK,kBAG1B,EAEKwK,GAAe,WACnB,OAAwBf,EAAAA,EAAAA,MAAhByB,EAAR,EAAQA,MAAOxB,EAAf,EAAeA,KACTE,GAAiBC,EAAAA,EAAAA,MAEjB5J,EAAOiL,GAAQ,SAACrD,EAAA,EAAD,CAAU7H,KAAK,iBAAmB,SAACmL,GAAA,EAAD,IAEvD,MAAgB,WAATzB,GACL,SAAC,IAAD,CACE1J,KAAK,OACLC,KAAMA,EACNb,QAAS,kBAAMwK,EAAe,CAAEsB,OAAQA,GAA/B,KAGX,SAAC,KAAD,kBACMhC,IADN,IAEEjJ,KAAMA,EACNb,QAAS,kBAAMwK,EAAe,CAAEF,KAAM,UAA7B,IAGd,E,0PCxIY0B,GAER,SAAC,GAAqB,IAAnBzC,EAAkB,EAAlBA,YACE0C,GAAW1G,EAAAA,EAAAA,YAAWC,GAAAA,SAAtByG,OACR,OACE,iBAAK/L,UAAU,QAAf,UACG+L,GAAS,SAACC,GAAD,KAAe,SAACC,GAAD,CAAU5C,YAAaA,KAChD,SAAC6C,GAAD,MAGL,EAEKA,GAAgB,WACpB,OAAkC/K,EAAAA,EAAAA,MAAlC,eAAOC,EAAP,KAAkBsB,EAAlB,KACA,OACE,SAAC,IAAD,CACEhC,KAAMU,EAAY,OAAS,OAC3BT,MAAM,SAACwL,GAAA,EAAD,IACNrM,QAAS,kBAAM4C,GAAa,SAACsE,GAAD,OAAWA,CAAX,GAAnB,GAGd,EAEKoF,GAAuC,SAAC,GAAkB,IAAhBvM,EAAe,EAAfA,SAC9C,GAAgCmB,EAAAA,EAAAA,WAAS,GAAzC,eAAOqL,EAAP,KAAiBC,EAAjB,KACA,GAAyCjH,EAAAA,EAAAA,YAAWC,GAAAA,SAA5CE,EAAR,EAAQA,QAAS+G,EAAjB,EAAiBA,WAAYC,EAA7B,EAA6BA,QAE7B,IADAC,EAAAA,EAAAA,YAAU,kBAAMH,GAAY,EAAlB,GAA0B,CAACzM,KAChCA,EAAU,OAAO,KAEtB,IAAQQ,EAA6BR,EAA7BQ,SAAUqM,EAAmB7M,EAAnB6M,OAAQtM,EAAWP,EAAXO,OACpBuM,EAAOvM,KAAWwM,EAAAA,GAAAA,MAClBC,EAAUrH,EAAQsH,IAAI1M,KAAYuM,EAgBxC,OACE,iBAAK3M,UAAU,YAAY,cAAa0M,EAAxC,WACE,SAAC9M,EAAD,CAAYC,SAAUA,EAAUlC,KAAK,QAAQqC,UAAU,gBACtDqM,IAAY,iBAAMrM,UAAU,YAAhB,SAA6BK,IACzCgM,IACC,SAACU,GAAA,EAAD,CACEC,WAAS,EACThN,UAAU,eACViN,aAAc5M,EACd6M,SAhBa,SAACxB,GACpB,IAAMlN,EAAOkN,EAAMyB,OACnB,IAAK3O,GAAQA,IAAS6B,EAAU,OAAOiM,GAAY,IACnDc,EAAAA,GAAAA,IAAa5O,GACbgO,GACD,EAYOa,aAAa,SAAC,IAAD,CAAQ1M,MAAM,SAAC2M,GAAA,EAAD,QAG9BX,EACCN,IACE,SAAC,IAAD,CACE3L,KAAK,OACLC,MAAM,SAAC4M,GAAA,EAAD,IACNzN,QAAS,kBAAMwM,GAAY,EAAlB,KAIb,SAAC,IAAD,CACE5L,KAAK,OACLC,KAAMkM,GAAU,SAACW,GAAA,EAAD,KAA2B,SAACC,GAAA,EAAD,IAC3C3N,QAvCa,WACnByM,GAAW,SAACvF,GACV,OAAIA,EAAK8F,IAAI1M,GAAgB4G,EAAK7J,OAAOiD,GAClC4G,EAAK0G,IAAItN,EACjB,GACF,MAuCF,EAEK4L,GAAe,WACnB,OACE3G,EAAAA,EAAAA,YAAWC,GAAAA,SADLqI,EAAR,EAAQA,KAAM/G,EAAd,EAAcA,QAASgH,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,SAAUC,EAA5C,EAA4CA,UAAWtB,EAAvD,EAAuDA,QAEjDuB,EAAOC,OAAOC,SAASC,KACvBC,EAAK,mCAAG,uGAEJC,KAAK,GAAD,OAAIC,SAAS1L,MAAb,aAAuBoL,IAFvB,OAGVlD,GAAAA,GAAAA,QAAgB,QAChBA,GAAAA,GAAAA,QAAgB,CACdpD,QAAS,eACT9G,MAAM,SAAC2G,EAAA,EAAD,IACNpI,IAAK,SAPG,gDAUVoP,QAAQC,IAAR,MAVU,yDAAH,qDAcLC,GAAWtO,EAAAA,EAAAA,UAAQ,WACvB,IAAMuO,GAAS7B,EAAAA,GAAAA,MACG8B,EAA4B9H,EAArC6H,GAAsBE,GAA/B,OAA8C/H,EAA9C,CAAS6H,GAAT,WACA,IAAKC,EAAU,MAAO,GACtB,IAAME,EAASC,OAAOD,OAAOD,GAC7B,MAAM,CAAED,GAAR,gBAAqBI,EAAAA,EAAAA,QAAOF,EAAQ,UAAUG,WAC/C,GAAE,CAACnI,IAEEoI,GAAY9O,EAAAA,EAAAA,UAChB,kBAAMsO,EAASS,QAAO,qBAAGvC,MAAH,IAAwB9D,MAA9C,GACA,CAAC4F,IAGGU,GACJ,iBAAKlP,UAAU,eAAf,UACG4N,IACC,SAAC,KAAD,CACE5N,UAAU,gBACV6K,QAAQ,kBACRlK,MAAM,SAACwO,GAAA,EAAD,IACNzO,KAAK,QACL0O,UAAQ,EACRC,QAAM,KAGV,SAAC,MAAD,CACErP,UAAU,eACV0L,MAAO4D,OAAO3B,GACd/E,OAAQ,EACR2G,OAAK,KAEP,SAAC,IAAD,CACE5O,MAAM,SAAC6O,GAAA,EAAD,IACNxP,UAAU,YACVF,QAASqO,EACTtN,OAAK,EAJP,wBAQA,SAAC,KAAD,KACA,gBAAKb,UAAU,YAAf,SACGwO,EAASnQ,KAAI,SAACoR,GAAD,OACZ,SAACrD,GAAD,CAAyBvM,SAAU4P,GAApBA,EAAErP,OADL,SAOpB,GAAkCY,EAAAA,EAAAA,WAAS,GAA3C,eAAO0O,EAAP,KAAkBC,EAAlB,KACMhN,GACJ,iBAAK3C,UAAU,aAAf,WACE,yCACA,SAAC,IAAD,CACE6J,MAAM,SACNnJ,KAAK,OACL/C,KAAK,QACLiS,QAASF,EACT/O,MAAM,SAACkP,GAAA,EAAD,IACN/P,SAAO,iBAAE,qFACP6P,GAAa,GADN,SAED9B,IAFC,uBAGDC,IAHC,OAIP6B,GAAa,GACbnD,IALO,gDAWf,OACE,SAAC,IAAD,CACE/E,QAASyH,EACTxH,QAAQ,QACRC,UAAU,cACVhF,MAAOA,EACPkF,kBAAmB,SAACpE,GAAD,OAAOA,EAAEqE,aAAT,EALrB,UAOE,SAAC,IAAD,CACEpH,KAAK,OACLC,MACE,SAAC,KAAD,CACEmP,OAAQlC,EAAY,UAAY,QAChCmC,MAAOnC,EAAYoB,EAAY,IAC/BrR,KAAK,QAHP,UAKE,SAACqS,GAAA,EAAD,SAMX,EAEK/D,GAED,SAAC,GAAqB,IAAD,EAAlB5C,EAAkB,EAAlBA,YACA1K,EAAM,WAAGsR,EAAAA,EAAAA,MAAYtR,cAAf,QAAyB,GAC/B2K,GAAMC,EAAAA,EAAAA,MAEN2G,EAAU,mCAAG,8FACX7G,IADW,wBAEC8G,EAAAA,GAAAA,IAAQxR,GAFT,0DAGAkM,GAAAA,GAAAA,MAAc,uBAHd,wBAIXuF,EAAAA,EAAAA,IAAazR,EAAQ,CAAE0R,MAAM,IAJlB,OAKjB/G,EAAI,SAAW3K,GALE,4CAAH,qDAiBhB,OACE,SAAC,IAAD,CAAQ+B,KAAK,OAAOC,MAAM,SAAC2P,GAAA,EAAD,IAA0BxQ,QAVpC,WAChByQ,GAAAA,EAAAA,QAAc,CACZ5N,MAAO,sBACP8E,QAAS,2DACT9G,MAAM,SAACqP,GAAA,EAAD,CAAc1P,MAAO,CAAEL,MAAO,UACpCuQ,KAAMN,GAET,GAKF,E,2BC7OYO,GAOR,SAAC,GAAD,IAAGrH,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAgBqH,GAA1B,oBACH,+BACE,SAACvH,GAAD,CAAYC,MAAOA,EAAOC,YAAaA,KACvC,SAACS,IAAD,UAAkB4G,KAClB,SAAC5E,GAAD,CAAazC,YAAaA,MAJzB,E,uDCqCU,SAASsH,KAAU,IAAD,MACzBhS,EAAM,WAAGsR,EAAAA,EAAAA,MAAYtR,cAAf,QAAyB,GAC/B2K,GAAMC,EAAAA,EAAAA,MAEZ,GAA8BvI,EAAAA,EAAAA,YAA9B,eAAO5C,EAAP,KAAgBwS,EAAhB,KACA,GAAgC5P,EAAAA,EAAAA,YAAhC,eAAO6P,EAAP,KAAiBC,EAAjB,KACA,GAAgC9P,EAAAA,EAAAA,YAAhC,eAAOmE,EAAP,KAAiB4L,EAAjB,KACA,GAAkC/P,EAAAA,EAAAA,YAAlC,eAAOiD,EAAP,KAAkB+M,EAAlB,KACA,GAA0BhQ,EAAAA,EAAAA,WAAS,GAAnC,eAAOoI,EAAP,KAAc6H,EAAd,KAEA,GAAyC5L,EAAAA,EAAAA,YAAWC,GAAAA,SAA5C4L,EAAR,EAAQA,GAAInF,EAAZ,EAAYA,OAAQoF,EAApB,EAAoBA,kBAEpB1E,EAAAA,EAAAA,YAAU,YACR,iBAAC,2GAC0B2E,EAAAA,EAAAA,IAASzS,GADnC,UACO0S,EADP,8BAGGxG,GAAAA,GAAAA,MAAc,kBAHjB,kBAIUvB,EAAI,MAJd,OAMSlL,EAAyCiT,EAAzCjT,QAAyCiT,EAAhCC,IAAKrN,EAA2BoN,EAA3BpN,UAAc4M,GANrC,OAMkDQ,EANlD,IAOCT,GAAWhV,EAAAA,EAAAA,IAAIwC,IACf4S,EAAa/M,GACb6M,EAAYD,GACZE,EAAY7U,EAASqV,gBAAgBnT,IAVtC,2CAAD,EAYD,GAAE,CAACkL,EAAK3K,EAAQoN,KAEjBU,EAAAA,EAAAA,YAAU,WACHoE,IACLxC,SAAS1L,MAAQkO,EAASrS,KAAO,iBAClC,GAAE,CAACqS,KAEJpE,EAAAA,EAAAA,YAAU,WAER,OADA4B,SAASmD,KAAKC,UAAU/D,IAAI,UACrB,kBAAMW,SAASmD,KAAKC,UAAUC,OAAO,SAArC,CACR,GAAE,IAEH,IAAMC,GAAQvN,EAAAA,EAAAA,IAAQ,iBAAC,6GAAOwN,EAAP,gCACjBC,EAAczT,EACdwT,IACM,OAARzM,QAAQ,IAARA,GAAAA,EAAU1I,YAAYqV,SAAQ,SAAC3T,EAAI3B,GAAY,IAAD,EAC5CqV,EAAW,UAAGA,SAAH,aAAG,EAAa/U,OAAON,EAAQuV,EAAAA,IAAiB,SAACrM,GAAD,eAAC,UACvDA,GADsD,IAEzDnI,MAAOF,EAAAA,GAAAA,OAAiBc,IAFiC,GAI5D,IACDyS,EAAWiB,IAEPG,EAXe,UAWVH,SAXU,aAWV,EAAaI,WAXH,UAYf7B,EAAAA,EAAAA,IAAazR,EAAQ,CAAEP,QAAS4T,IAZjB,OAarBf,GAAS,GAbY,4CAiBjBiB,IAAgBC,EAAAA,EAAAA,cAAYzT,EAAAA,EAAAA,UAASiT,EAAO,KAAO,CAACA,IACpDtI,GAAc6I,GAAcE,MAE5BC,GAAc,SAAC7V,EAAgB8V,GACnC1B,GAAW,SAAC5J,GAAD,cAAUA,QAAV,IAAUA,OAAV,EAAUA,EAAMlK,OAAON,EAAQuV,EAAAA,GAAiBO,EAAhD,IACXrB,GAAS,GACTiB,IACD,EAEKhO,GAAW,mCAAG,WAAOD,GAAP,0FAA4B/G,EAA5B,gCAClB8T,EAAa/M,GADK,UAEZmM,EAAAA,EAAAA,IAAazR,EAAQ,CAAEsF,UAAAA,IAFX,uBAGZoF,KAHY,OAIlBnM,GAAQqV,GAAYtO,GAJF,2CAAH,sDAOXsO,GAAc,SAACtO,GAAD,cAClBiN,QADkB,IAClBA,OADkB,EAClBA,EAAIsB,KAAK,UAAW,CAAEvO,UAAAA,GADJ,EAGdwO,IAAgBrO,EAAAA,EAAAA,IACpB,YAAqD,IAAlDsO,EAAiD,EAAjDA,QAASzO,EAAwC,EAAxCA,UAAW0O,EAA6B,EAA7BA,UACrBzO,GAAYD,GACPyO,IACLE,EAAAA,EAAAA,KAAe,kBAAM1O,GAAYyO,GAAW,EAA7B,GAChB,IAGGE,IAAgBzO,EAAAA,EAAAA,IACpB,YAAkD,IAA/CH,EAA8C,EAA9CA,UAAWzH,EAAmC,EAAnCA,OAAQsW,EAA2B,EAA3BA,QACpB5O,GAAYD,GACZoO,GAAY7V,GAAQ,kBAAMsW,CAAN,IACpB/B,GAAY,SAAC/J,GAAD,cAAUA,QAAV,IAAUA,OAAV,EAAUA,EAAM+L,SAASvW,EAAQsW,EAAjC,GACb,KAGHrG,EAAAA,EAAAA,YAAU,WAGR,OAFE,OAAFyE,QAAE,IAAFA,GAAAA,EAAI8B,GAAG,UAAWP,IAChB,OAAFvB,QAAE,IAAFA,GAAAA,EAAI8B,GAAG,UAAWH,IACX,WAAM,OAAK3B,QAAL,IAAKA,GAAAA,EAAI+B,oBAAf,CACR,GAAE,CAAC/B,EAAIuB,GAAeI,KAEvB,IAOMK,GAAc,SAClBjP,EACAzH,EACAsW,GAE0CA,EAAlC1M,MAAkC0M,EAA3BjN,OAAf,IAA0BsN,GAA1B,OAA0CL,EAA1C,IACE,OAAF5B,QAAE,IAAFA,GAAAA,EAAIsB,KAAK,UAAW,CAAEvO,UAAAA,EAAWzH,OAAAA,EAAQsW,QAASK,IAClDhC,EAAiB3U,EAAQsW,EAC1B,EAEKM,GAAiB,SAACd,GACtB,GAAKnN,EAAL,CACA,IAAMkO,EAAQf,EAAGnN,GACjB,GAAIkO,IAAUlO,EAAd,CACA4L,EAAYsC,GACZpC,GAAS,GACTiB,IAAc,GACd,IAxBqBoB,EAwBflX,EAASiX,EAAMjX,OACrBA,IAzBqBkX,EAyBGlX,EArBtB,OAAF8U,QAAE,IAAFA,GAAAA,EAAIsB,KAAK,OAAQ,CAAEc,UAAAA,IAHA,SAAC,GAAD,IAAG9W,EAAH,EAAGA,OAAQY,EAAX,EAAWA,OAAX,OACjB2T,GAAY,SAAC/J,GAAD,cAAUA,QAAV,IAAUA,OAAV,EAAUA,EAAMuM,eAAe/W,EAAQY,EAAvC,GADK,IAmBW,CAFT,CAQtB,EAKK6J,GAAU,SAACuM,GAAsC,IAAlBpF,EAAiB,wDACpD,GAAKnK,EAAL,CACA,IAAMwP,EAAWrF,EAAI,OAAGhQ,QAAH,IAAGA,OAAH,EAAGA,EAAS7B,IAAIiX,QAActN,EACnD,GAA0BwN,EAAAA,EAAAA,IAAWD,GAArC,eAAOjX,EAAP,KAAesW,EAAf,KACMnO,EAAWxF,EAAY8E,EAAWuP,EAAYhX,GACpD0W,GAAYvO,EAAUnI,EAAQsW,GAC9B5O,GAAYS,GACZ0N,GAAY7V,GAAQ,kBAAMsW,CAAN,IACpB/B,GAAY,SAAC/J,GAAD,cAAUA,QAAV,IAAUA,OAAV,EAAUA,EAAM+L,SAASvW,EAAQsW,EAAjC,GAPU,CAQvB,EAEKrS,GAAe,WACnB,IAAMkT,GAAa5V,EAAAA,EAAAA,MAAKkG,GACxB0P,GAAc1M,GAAQ0M,EACvB,EAOD,IAAwB3S,EAAAA,EAAAA,UAAS,KAAjC,iBAAOrD,GAAP,MAAa6K,GAAb,MACMoL,GAAO,WAAO,IAAMjW,IAAQ,EAArB,KACb,GTpLK,SACLgB,GAGC,IAFDsF,EAEA,uDAFY,GACZ4P,EACA,uDADO,GAEP,GAA4B7S,EAAAA,EAAAA,WAASpF,EAAAA,EAAAA,OAArC,eAAOkY,EAAP,KAAeC,EAAf,KACMC,GAAWhQ,EAAAA,EAAAA,SAAO,GACxB,GAAoChD,EAAAA,EAAAA,UAAS,IAA7C,eAAOwS,EAAP,KAAmBS,EAAnB,MACAxH,EAAAA,EAAAA,YAAU,YACR,iBAAC,oGACsBnO,EAAa4V,QAAgBvV,GADnD,UACOwV,EADP,gDAEsBH,EAAS3P,SAAU,GAFzC,OAGC4P,EAAcE,GAHf,0CAAD,EAKD,GAAE,CAACxV,KAEJ4F,EAAAA,EAAAA,kBAAgB,WACd,IAAM6P,EAAUN,EAAOvX,IAAIiX,IACvBQ,EAAS3P,SAAY+P,IACzBA,EAAQ9P,iBACR0P,EAAS3P,SAAU,EACpB,GAAE,CAACmP,EAAYM,IAEhB,OAAwC9S,EAAAA,EAAAA,WAASpF,EAAAA,EAAAA,OAAjD,eAAOyY,EAAP,KAAqBC,EAArB,KACMC,GAAiBC,EAAAA,EAAAA,kBAAiBH,GAClCI,GAAgBD,EAAAA,EAAAA,kBAAiBvQ,GACjCrF,GAAasB,EAAAA,EAAAA,UACjB,kBAAMpB,EAAWyV,EAAgBE,EAAjC,GACA,CAACF,EAAgBE,KAGnBhI,EAAAA,EAAAA,YAAU,WACJuH,EAAS3P,SAAS5F,EAAcE,EAAQC,EAC7C,GAAE,CAACD,EAAQC,IAEZ,IAAM8V,GAActQ,EAAAA,EAAAA,IAAS,WAAO,IAAD,EAC3BgQ,EAAUN,EAAOvX,IAAIqC,GACrB+V,EAAM,OAAGP,QAAH,IAAGA,GAAH,UAAGA,EAAStM,qBAAZ,aAAG,EAAwB8M,uBACvC,OAAKD,GACWP,EAAQS,wBAAhBC,IACWH,EAAOE,wBAAlBE,OAFY,CAIrB,IACKC,GAAU9U,EAAAA,EAAAA,SAAQwU,EAAD,CAAezQ,EAAWyQ,GAA1B,eAA0Cb,KAE3DoB,GAAe7Q,EAAAA,EAAAA,IAAS,WAC5B,IAAMgQ,EAAUN,EAAOvX,IAAIqC,GACtBwV,IACLA,EAAQ9P,iBACR0J,OAAOkH,SAAS,EAAGF,GACpB,KACDzQ,EAAAA,EAAAA,iBAAgB0Q,EAAD,CAAgBhR,EAAWgR,GAA3B,eAA4CpB,KAE3D,IAAMsB,EAAa,SAAC3Y,GAAD,OAAoB,SAAC4Y,GACjCA,GACLrB,GAAU,SAAC/M,GAAD,OAAUA,EAAKhK,IAAIR,EAAQ4Y,EAA3B,GACX,CAHkB,EAKbC,GAASrR,EAAAA,EAAAA,QAAO,GACtB,GAAkChD,EAAAA,EAAAA,WAAS,GAA3C,eAAOsU,EAAP,KAAkBC,EAAlB,KACMnQ,EAAa,SAAC5I,GAClB,IAAM4X,EAAUN,EAAOvX,IAAIC,GACtB4X,IAQL/F,SAASmH,iBAAiB,UAPL,SAAfC,IACJzH,OAAO0H,aAAaL,EAAOhR,SAC3BgR,EAAOhR,QAAU2J,OAAO2H,YAAW,WACjCJ,GAAa,GACblH,SAASuH,oBAAoB,SAAUH,EACxC,GAAE,GACJ,IAEDrB,EAAQ9P,eAAe,CAAEuR,SAAU,WACnCN,GAAa,GACd,EAGD,OADAO,EAAAA,EAAAA,eAAclX,GACP,CAAEwG,WAAAA,EAAYkP,gBAAAA,EAAiBa,WAAAA,EAAYvW,WAAAA,EAAY0W,UAAAA,EAC/D,CSwGGS,CAAcpX,EAAQsF,EAAW,CAACtG,KAD5B2W,GAAR,GAAQA,gBAAiBlP,GAAzB,GAAyBA,WAAY+P,GAArC,GAAqCA,WAAYvW,GAAjD,GAAiDA,WAAY0W,GAA7D,GAA6DA,UAGvDU,GAAe,CACnBrX,OAAAA,EACAP,QAAAA,EACA6F,UAAAA,EACAkB,SAAAA,EACAvG,WAAAA,GACAjB,KAAAA,IAEIsY,IACJ,iBAAKjW,UAAU,mBAAf,WACE,SAACyQ,GAAD,CACErH,MAAOA,EACPC,YAAaA,GACbU,WAAY,kBAAMqJ,IAAe,SAACpM,GAAD,OAAUA,EAAKkP,MAAf,GAArB,EACZlM,WAAY,kBAAMoJ,IAAe,SAACpM,GAAD,OAAUA,EAAKmP,MAAf,GAArB,EACZlM,SAAQ,iBAAE9E,QAAF,IAAEA,OAAF,EAAEA,EAAUtH,oBAAZ,SACRqM,SAAQ,iBAAE/E,QAAF,IAAEA,OAAF,EAAEA,EAAUjH,oBAAZ,YAEV,kBAAMoC,MAAO,CAAE8V,YAAaxC,GAASyC,aAAczC,IAAnD,iBACG3P,QADH,IACGA,OADH,EACGA,EAAW5F,KAAI,SAAC0G,GAAD,OACd,oBAAmB/E,UAAU,YAAY0B,IAAKyT,GAAWpQ,GAAzD,UACE,SAACuR,IAAD,QACEvR,IAAKA,EACLqO,eAAgBA,GAChBkB,gBAAiBA,GACjBgB,UAAWA,IACPU,MANMjR,EADA,KAWhB,SAACvE,GAAD,CAAeC,aAAcA,SAE/B,SAACK,IAAD,QACEmG,QAASA,GACTxG,aAAcA,GACd2E,WAAYA,GACZ8B,WA9Ca,SAAC1K,GAClB,IAAMmI,EAAQ,OAAGV,QAAH,IAAGA,OAAH,EAAGA,EAAWgL,QAAO,SAACsH,GAAD,OAAQA,IAAO/Z,CAAf,KAC3B,OAARmI,QAAQ,IAARA,OAAA,EAAAA,EAAUiE,SAAU1E,GAAYS,GAAU,EAC3C,EA4CKT,YAAaA,GACbsC,iBAnEmB,SAAChK,GAAD,OACvB6V,GAAY7V,GAAQ,SAACwK,GAAD,eAAC,UAAeA,GAAhB,IAAsBnB,QAASmB,EAAKnB,QAApC,GADG,EAoEnB2C,QAASA,IACLwN,QAKV,OACE,SAAC,KAAD,WACE,SAACQ,EAAA,GAAD,WACE,SAACC,EAAA,GAAD,UAAmBR,QAI1B,CAED,IAAMK,GAOF,SAAC,GAUE,IATLvR,EASI,EATJA,IACAqO,EAQI,EARJA,eACAkB,EAOI,EAPJA,gBACAgB,EAMI,EANJA,UACAlX,EAKI,EALJA,QACA+G,EAII,EAJJA,SACAvG,EAGI,EAHJA,WACAqF,EAEI,EAFJA,UACAtF,EACI,EADJA,OAEA,GAA+B0G,EAAAA,EAAAA,YAAWC,GAAAA,SAAlCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAEbE,EAAI,OAAGtH,QAAH,IAAGA,OAAH,EAAGA,EAAS7B,IAAIwI,GACpBrI,EAAS,OAAGyI,QAAH,IAAGA,OAAH,EAAGA,EAAUvI,YAAYmI,GAClCY,EAAY,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAWK,mBAAmBb,GAC7C2R,GAActS,EAAAA,EAAAA,IAAS,SAACjG,GAC5BiV,GAAe,SAACpM,GAAD,OAAUA,EAAK2P,SAAS5R,EAAK5G,EAA7B,GAChB,IAEKyY,GAAexS,EAAAA,EAAAA,IAAS,SAAC5G,GAC7B,IAAKA,EAAO,OAAO8W,GAAgB,SAACtN,GAAD,OAAUA,EAAK7J,OAAO4H,EAAtB,IACnCuP,GAAgB,SAACtN,GAAD,OAAUA,EAAKhK,IAAI+H,EAAKvH,EAAxB,GACjB,IAEKqZ,GAAU3W,EAAAA,EAAAA,UAAQ,WACtB,IAAK+D,EAAW,OAAO,EACvB,IAAM6S,EAAY7S,EAAUzE,QAAQZ,GAC9BmY,EAAY9S,EAAUzE,QAAQuF,GACpC,OAAOiS,KAAKC,IAAIF,EAAYD,IAAc,CAC3C,GAAE,CAAClY,EAAYmG,EAAKd,IAErB,OAAKyB,GAAShJ,GAEZ,SAACuJ,EAAA,QAAD,CACEvJ,UAAWA,EACXiJ,aAAcA,EACd+Q,YAAaA,EACbQ,SAAUxR,EAAKwR,SACfvY,OAAQA,EACR6G,QAASA,EACToR,aAAcA,EACdC,QAASA,EACTvQ,WAAYgP,IAXgB,IAcjC,C,4LC/SY6B,EAAY,SAACxY,GAAD,OAAoB,kBAC3CuS,EAAAA,EAAAA,IAAGkG,EAAAA,GAAU,CACXC,MAAO,CACLjX,QAAQwM,EAAAA,EAAAA,MACRvM,UAAUiX,EAAAA,EAAAA,MACV3Y,OAAAA,IALuC,CAApB,E,uFCaZ2G,EAAUxB,EAAAA,cAAoB,CACzCoN,QAAIhL,EACJyH,KAAM,EACN5B,QAAQ,EACR6B,WAAW,EACXpI,SAAS+R,EAAAA,EAAAA,MACT3Q,QAAS,CAAC,EACVrB,eAAWW,EACXsG,QAAS,WAAQ,EACjBqB,SAAS,WAAD,wBAAE,wGAAY,GAAZ,2CAAF,kDAAC,GACTC,UAAU,WAAD,wBAAE,wGAAY,GAAZ,2CAAF,kDAAC,GACVvB,WAAa,WAAQ,EACrB4E,iBAAkB,SAAC3U,EAAgBsW,GAAwB,IAG9C,SAAS0E,IAAQ,IAAD,EACvB7Y,EAAM,WAAGsR,EAAAA,EAAAA,MAAYtR,cAAf,QAAyB,GACrC,GAAkCqC,EAAAA,EAAAA,YAAlC,eAAOuE,EAAP,KAAkBkS,EAAlB,KACA,GAAwBzW,EAAAA,EAAAA,WAAU,GAAlC,eAAO2M,EAAP,KAAa+J,EAAb,KACA,GAA8B1W,EAAAA,EAAAA,UAAmC,CAAC,GAAlE,eAAO4F,EAAP,KAAgB+Q,EAAhB,KACA,GAA8B3W,EAAAA,EAAAA,WAASuW,EAAAA,EAAAA,OAAvC,eAAO/R,EAAP,KAAgB+G,EAAhB,KACA,GAAoBvL,EAAAA,EAAAA,UAASmW,EAAUxY,IAAvC,eAAOuS,EAAP,KAAW0G,EAAX,KACA,GAA4B5W,EAAAA,EAAAA,WAAS,GAArC,eAAO6W,EAAP,KAAeC,EAAf,KACA,GAAkC9W,EAAAA,EAAAA,WAAS,GAA3C,eAAO4M,EAAP,KAAkBmK,EAAlB,KACMzO,GAAMC,EAAAA,EAAAA,MAENsE,GAAWsE,EAAAA,EAAAA,cAAW,iBAAC,qGACR6F,EAAAA,EAAAA,IAAiBrZ,GADT,UACrBsZ,EADqB,8BAGzBpN,EAAAA,GAAAA,MAAc,qCAHW,mBAIlB,GAJkB,cAM3B6M,EAAQO,EAAKtK,MANc,mBAOpB,GAPoB,2CAQ1B,CAAChP,IAEEmP,GAAYqE,EAAAA,EAAAA,cAAW,iBAAC,qGACL+F,EAAAA,EAAAA,IAAiBvZ,GADZ,UACtBwZ,EADsB,8BAG1BtN,EAAAA,GAAAA,MAAc,sCAHY,mBAInB,GAJmB,cAM5B4M,EAAa1R,EAAAA,EAAAA,oBAA8BoS,IANf,mBAOrB,GAPqB,2CAQ3B,CAACxZ,IAEEyZ,GAAkBjG,EAAAA,EAAAA,cAAY,YAClCkG,EAAAA,EAAAA,IAAY1Z,EACb,GAAE,CAACA,KAEJ8N,EAAAA,EAAAA,YAAU,WACR,IAAM6L,EAAQ,mCAAG,sGACUzK,IADV,cACT0K,EADS,gBAEWzK,IAFX,UAET0K,EAFS,OAGVD,GAAeC,EAHL,yCAGyBlP,EAAI,MAH7B,OAIfwO,GAAU,GACVM,IALe,4CAAH,qDAQd,OADAE,IACOF,CACR,GAAE,CAACvK,EAAUC,EAAWxE,EAAK8O,KAE9B3L,EAAAA,EAAAA,YAAU,WAiCR,OAhCAyE,EAAG8B,GAAG,QAAQ,YAA4B,IAAzBM,EAAwB,EAAxBA,UAAWlT,EAAa,EAAbA,OAC1BqX,GAAa,SAACzQ,GAAD,cAAUA,QAAV,IAAUA,OAAV,EAAUA,EAAMyR,cAAcnF,EAAWlT,EAAzC,GACd,IAED8Q,EAAG8B,GAAG,QAAQ,YAA0B,IAAvB0F,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACfvY,EAAqBsY,EAArBtY,OAAQC,EAAaqY,EAAbrY,SAChBsX,EAAWgB,GACPvY,KAAWwM,EAAAA,EAAAA,QACfgM,EAAAA,EAAAA,IAAYxY,EAAQC,EACrB,IAED6Q,EAAG8B,GAAG,SAAS,YAA0B,IAAvB6F,EAAsB,EAAtBA,OAAQF,EAAc,EAAdA,QAChBvY,EAAqByY,EAArBzY,OAAQC,EAAawY,EAAbxY,SAEhB,GADAsX,EAAWgB,GACPvY,KAAWwM,EAAAA,EAAAA,MAAa,OAAOsE,EAAGsB,KAAK,SAC3CsG,EAAAA,EAAAA,IAAa1Y,EAAQC,EACtB,IAED6Q,EAAG8B,GAAG,WAAW,SAACiF,GAChB,IAAQzb,EAAoByb,EAApBzb,OAAQsW,EAAYmF,EAAZnF,QAChB2E,GAAa,SAACzQ,GAAD,cAAUA,QAAV,IAAUA,OAAV,EAAUA,EAAMC,QAAQzK,EAAQsW,EAAhC,GACd,IAED5B,EAAG8B,GAAG,SAAS,YAA0B,IAAvB5S,EAAsB,EAAtBA,OAAQhC,EAAc,EAAdA,QACpBgC,KAAWwM,EAAAA,EAAAA,OACf6K,GAAa,SAACzQ,GAAD,cAAUA,QAAV,IAAUA,OAAV,EAAUA,EAAM+R,UAAU3Y,EAAQhC,EAAlC,GACd,IAED8S,EAAG8B,GAAG,gBAAiB1E,QAAQ0K,OAC/B9H,EAAG8B,GAAG,WAAW,kBAAM+E,GAAa,EAAnB,IACjB7G,EAAG8B,GAAG,cAAc,kBAAM+E,GAAa,EAAnB,IAEb,WACL7G,EAAG+B,qBACH/B,EAAG+H,OACJ,CACF,GAAE,CAAC/H,IAQJ,OACE,SAACgI,EAAA,EAAD,CAAStJ,SAAUiI,EAAnB,UACE,SAACvS,EAAQ6T,SAAT,CACEzN,MAAO,CACLwF,GAAAA,EACAvD,KAAAA,EACA5B,QAAQ,EACRvG,QAAAA,EACAoB,QAAAA,EACAgH,UAAAA,EACArI,UAAAA,EACAiH,QAbQ,kBAAMoL,EAAMT,EAAUxY,GAAtB,EAcRkP,SAAAA,EACAC,UAAAA,EACAvB,WAAAA,EACA4E,iBArBiB,SAAC3U,EAAgBsW,GACxC2E,GAAa,SAACzQ,GAAD,cAAUA,QAAV,IAAUA,OAAV,EAAUA,EAAMC,QAAQzK,EAAQsW,EAAhC,GACd,GAMG,UAgBE,SAACnC,EAAA,QAAD,OAIP,C,oKCjJYiC,EAAiB,SAACwG,GAC7BvO,EAAAA,GAAAA,QAAgB,CACdpD,SACE,yDAEE,SAAC,IAAD,CACE9J,KAAK,QACL+C,KAAK,OACLZ,QAAS,WACP+K,EAAAA,GAAAA,QAAgB,UAChBuO,GACD,EANH,qBAYJla,IAAK,SACLma,SAAU,IAEb,EAEYT,EAAc,SAACxY,EAAgBC,GAC1CwK,EAAAA,GAAAA,QAAgBzK,GAChByK,EAAAA,GAAAA,QAAgB,CACdpD,QAAQ,GAAD,OAAKpH,EAAL,oBACPM,MAAM,SAAC,IAAD,IACNzB,IAAKkB,GAER,EAEY0Y,EAAe,SAAC1Y,EAAgBC,GAC3CwK,EAAAA,GAAAA,QAAgBzK,GAChByK,EAAAA,GAAAA,QAAgB,CACdpD,QAAQ,GAAD,OAAKpH,EAAL,oBACPM,MAAM,SAAC,IAAD,IACNzB,IAAKkB,GAER,C","sources":["lib/draw/StateSet.ts","pages/reader/lib/scroll.ts","pages/reader/lib/array.ts","component/UserAvatar.tsx","pages/reader/tools/AddButton.tsx","pages/reader/PageNav/PageNav.tsx","pages/reader/Header/Left.tsx","pages/reader/Header/Middle.tsx","pages/reader/Header/Right.tsx","pages/reader/Header/index.tsx","pages/reader/Reader.tsx","lib/network/io.ts","pages/reader/Team.tsx","pages/reader/tools/Messages.tsx"],"sourcesContent":["import { DrawState, Operation, Stroke } from \"./DrawState\";\r\nimport { List, Map, Record } from \"immutable\";\r\nimport { NotePage } from \"lib/note/note\";\r\n\r\ninterface StateSetRecordType {\r\n  states: Map<string, DrawState>;\r\n  editStack: List<string>;\r\n  undoStack: List<string>;\r\n}\r\n\r\nconst defaultRecord: Readonly<StateSetRecordType> = {\r\n  states: Map(),\r\n  editStack: List(),\r\n  undoStack: List(),\r\n};\r\n\r\ntype StateSetRecord = Record<StateSetRecordType>;\r\nconst defaultFactory = Record(defaultRecord);\r\n\r\nexport type SetOperation = Operation & { pageID: string };\r\n\r\nexport class StateSet {\r\n  constructor(\r\n    private immutable: StateSetRecord,\r\n    public lastOp?: SetOperation\r\n  ) {}\r\n\r\n  static createFromPages(pageRec: globalThis.Record<string, NotePage>) {\r\n    return new StateSet(\r\n      defaultFactory().set(\r\n        \"states\",\r\n        Map(pageRec).map(({ state, ratio }) =>\r\n          DrawState.loadFromFlat(state, ratio)\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  getImmutable() {\r\n    return this.immutable;\r\n  }\r\n\r\n  getStates() {\r\n    return this.getImmutable().get(\"states\");\r\n  }\r\n\r\n  getOneState(pageID: string) {\r\n    return this.getStates().get(pageID);\r\n  }\r\n\r\n  getEditStack() {\r\n    return this.getImmutable().get(\"editStack\");\r\n  }\r\n\r\n  getUndoStack() {\r\n    return this.getImmutable().get(\"undoStack\");\r\n  }\r\n\r\n  setState(pageID: string, drawState: DrawState) {\r\n    const prevDS = this.getOneState(pageID);\r\n    if (!prevDS || prevDS === drawState) return this;\r\n    let currRecord = this.getImmutable()\r\n      .update(\"states\", (s) => s.set(pageID, drawState))\r\n      .update(\"editStack\", (l) => l.push(pageID))\r\n      .delete(\"undoStack\");\r\n\r\n    const { lastOp } = drawState;\r\n    const lastSetOp = lastOp && { ...lastOp, pageID };\r\n\r\n    return new StateSet(currRecord, lastSetOp);\r\n  }\r\n\r\n  // sync with mutation.\r\n  syncStrokeTime(pageID: string, stroke: Stroke) {\r\n    const prevDS = this.getOneState(pageID);\r\n    prevDS && DrawState.syncStrokeTime(prevDS, stroke);\r\n    return this;\r\n  }\r\n\r\n  addState(pageID: string, notePage: NotePage) {\r\n    const { state, ratio } = notePage;\r\n    const newDS = DrawState.loadFromFlat(state, ratio);\r\n    const currRecord = this.getImmutable().update(\"states\", (s) =>\r\n      s.set(pageID, newDS)\r\n    );\r\n    return new StateSet(currRecord);\r\n  }\r\n\r\n  deleteState(pageID: string) {\r\n    return new StateSet(\r\n      this.getImmutable().update(\"states\", (s) => s.delete(pageID))\r\n    );\r\n  }\r\n\r\n  isUndoable() {\r\n    return this.getEditStack().size > 0;\r\n  }\r\n\r\n  isRedoable() {\r\n    return this.getUndoStack().size > 0;\r\n  }\r\n\r\n  undo() {\r\n    if (!this.isUndoable()) return this;\r\n    const lastUid = this.getEditStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.undo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"editStack\", (s) => s.pop())\r\n        .update(\"undoStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  redo() {\r\n    if (!this.isRedoable()) return this;\r\n    const lastUid = this.getUndoStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.redo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"undoStack\", (s) => s.pop())\r\n        .update(\"editStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  getLastDS(): [string, DrawState] | undefined {\r\n    const pageID = this.lastOp?.pageID;\r\n    const ds = pageID && this.getOneState(pageID);\r\n    if (ds) return [pageID, ds];\r\n  }\r\n}\r\n","import {\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useDebugValue,\r\n  useLayoutEffect,\r\n  useDeferredValue,\r\n} from \"react\";\r\nimport localforage from \"localforage\";\r\nimport { Map } from \"immutable\";\r\nimport { debounce } from \"lodash\";\r\nimport { useMemoizedFn as useEvent } from \"ahooks\";\r\n\r\nconst scrollForage = localforage.createInstance({ name: \"scroll\" });\r\nconst persistScroll = debounce((noteID: string, currPageID: string) => {\r\n  scrollForage.setItem(noteID, currPageID);\r\n}, 2000);\r\n\r\nexport function useScrollPage(\r\n  noteID: string,\r\n  pageOrder = [] as string[],\r\n  deps = [] as any[]\r\n) {\r\n  const [refMap, setRefMap] = useState(Map<string, HTMLElement>());\r\n  const scrolled = useRef(false);\r\n  const [prevPageID, setPrevPageID] = useState(\"\");\r\n  useEffect(() => {\r\n    (async () => {\r\n      const stored = await scrollForage.getItem<string>(noteID);\r\n      if (!stored) return (scrolled.current = true);\r\n      setPrevPageID(stored);\r\n    })();\r\n  }, [noteID]);\r\n\r\n  useLayoutEffect(() => {\r\n    const section = refMap.get(prevPageID);\r\n    if (scrolled.current || !section) return;\r\n    section.scrollIntoView();\r\n    scrolled.current = true;\r\n  }, [prevPageID, refMap]);\r\n\r\n  const [inviewRatios, setInviewRatios] = useState(Map<string, number>());\r\n  const deferredRatios = useDeferredValue(inviewRatios);\r\n  const deferredOrder = useDeferredValue(pageOrder);\r\n  const currPageID = useMemo(\r\n    () => largestKey(deferredRatios, deferredOrder),\r\n    [deferredRatios, deferredOrder]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (scrolled.current) persistScroll(noteID, currPageID);\r\n  }, [noteID, currPageID]);\r\n\r\n  const calcScrollY = useEvent(() => {\r\n    const section = refMap.get(currPageID);\r\n    const header = section?.parentElement?.previousElementSibling;\r\n    if (!header) return 0;\r\n    const { top } = section.getBoundingClientRect();\r\n    const { height } = header.getBoundingClientRect();\r\n    return -top + height;\r\n  });\r\n  const scrollY = useMemo(calcScrollY, [pageOrder, calcScrollY, ...deps]);\r\n\r\n  const scrollToCurr = useEvent(() => {\r\n    const section = refMap.get(currPageID);\r\n    if (!section) return;\r\n    section.scrollIntoView();\r\n    window.scrollBy(0, scrollY);\r\n  });\r\n  useLayoutEffect(scrollToCurr, [pageOrder, scrollToCurr, ...deps]);\r\n\r\n  const sectionRef = (pageID: string) => (el: HTMLElement | null) => {\r\n    if (!el) return;\r\n    setRefMap((prev) => prev.set(pageID, el));\r\n  };\r\n\r\n  const taskID = useRef(0);\r\n  const [scrolling, setScrolling] = useState(false);\r\n  const scrollPage = (pageID: string) => {\r\n    const section = refMap.get(pageID);\r\n    if (!section) return;\r\n    const handleScroll = () => {\r\n      window.clearTimeout(taskID.current);\r\n      taskID.current = window.setTimeout(() => {\r\n        setScrolling(false);\r\n        document.removeEventListener(\"scroll\", handleScroll);\r\n      }, 50);\r\n    };\r\n    document.addEventListener(\"scroll\", handleScroll);\r\n    section.scrollIntoView({ behavior: \"smooth\" });\r\n    setScrolling(true);\r\n  };\r\n\r\n  useDebugValue(currPageID);\r\n  return { scrollPage, setInviewRatios, sectionRef, currPageID, scrolling };\r\n}\r\n\r\nconst largestKey = (map: Map<string, number>, order: string[]) => {\r\n  let result = \"\";\r\n  let maxRatio = 0;\r\n  for (let key of order) {\r\n    const ratio = map.get(key);\r\n    if (!ratio) continue;\r\n    if (ratio === 1) return key;\r\n    if (ratio > maxRatio) {\r\n      result = key;\r\n      maxRatio = ratio;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n","export function exchange<T>(list: T[], fromIndex: number, toIndex: number) {\r\n  const result = list.slice();\r\n  const [removed] = result.splice(fromIndex, 1);\r\n  if (!removed) return list;\r\n  result.splice(toIndex, 0, removed);\r\n  return result;\r\n}\r\n\r\nexport function insertAfter<T>(list: T[], prevItem: T, newItem: T) {\r\n  const prevIndex = list.indexOf(prevItem);\r\n  const curr = list.slice();\r\n  if (prevIndex === -1) return curr;\r\n  curr.splice(prevIndex + 1, 0, newItem);\r\n  return curr;\r\n}\r\n","import { Avatar } from \"antd\";\r\nimport { AvatarSize } from \"antd/lib/avatar/SizeContext\";\r\nimport { FC, useMemo } from \"react\";\r\nimport { getHashedColor } from \"lib/color\";\r\nimport { UserInfo } from \"lib/user\";\r\n\r\nexport const UserAvatar: FC<{\r\n  userInfo: UserInfo;\r\n  size?: AvatarSize;\r\n  onClick?: () => void;\r\n  chosen?: boolean;\r\n  className?: string;\r\n}> = ({\r\n  userInfo,\r\n  size = \"default\",\r\n  onClick = () => {},\r\n  chosen = false,\r\n  className,\r\n}) => {\r\n  const color = useMemo(() => getHashedColor(userInfo.userID), [userInfo]);\r\n  if (!userInfo) return null;\r\n  const { userName } = userInfo;\r\n\r\n  return (\r\n    <Avatar\r\n      className={className}\r\n      data-chosen={chosen}\r\n      size={size}\r\n      style={{ backgroundColor: color }}\r\n    >\r\n      <div className=\"avatar-wrapper\" onClick={onClick}>\r\n        {userName?.slice(0, 3)}\r\n      </div>\r\n    </Avatar>\r\n  );\r\n};\r\n","import { Button } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { FC } from \"react\";\n\nexport const AddPageButton: FC<{ addFinalPage: () => void }> = ({\n  addFinalPage,\n}) => {\n  return (\n    <div className=\"add-btn-wrapper\">\n      <Button\n        type=\"dashed\"\n        icon={<PlusOutlined />}\n        block\n        onClick={addFinalPage}\n      >\n        New page\n      </Button>\n    </div>\n  );\n};\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useContext,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport {\r\n  MoreOutlined,\r\n  PlusOutlined,\r\n  CopyOutlined,\r\n  ReadOutlined,\r\n  ShrinkOutlined,\r\n  DeleteOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  Draggable,\r\n  Droppable,\r\n  DropResult,\r\n  DragDropContext,\r\n} from \"react-beautiful-dnd\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Dropdown,\r\n  Menu,\r\n  Pagination,\r\n  Popover,\r\n  Tabs,\r\n} from \"antd\";\r\nimport {\r\n  Setter,\r\n  useActiveKey,\r\n  useAsideOpen,\r\n  ActiveKeyProvider,\r\n} from \"lib/hooks\";\r\nimport { ReaderMethods, ReaderStates } from \"../Reader\";\r\nimport PageWrapper from \"component/PageWrapper\";\r\nimport { UserAvatar } from \"component/UserAvatar\";\r\nimport { exchange } from \"../lib/array\";\r\nimport IconFont from \"component/IconFont\";\r\nimport classNames from \"classnames\";\r\nimport { TeamCtx } from \"../Team\";\r\nimport { useMemoizedFn as useEvent } from \"ahooks\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport { NotePage } from \"lib/note/note\";\r\nimport { TeamState } from \"lib/draw/TeamState\";\r\nimport { AddPageButton } from \"../tools/AddButton\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { range } from \"lodash\";\r\n\r\ntype PreviewProps = ReaderMethods & ReaderStates;\r\nexport const PageNav: FC<PreviewProps> = (props) => {\r\n  const [left, setLeft] = useState(false);\r\n  const [asideOpen] = useAsideOpen();\r\n\r\n  const opposite = (\r\n    <Draggable draggableId=\"OPPOSITE\" index={left ? 1 : 0} isDragDisabled>\r\n      {({ innerRef }) => <div className=\"opposite\" ref={innerRef} />}\r\n    </Draggable>\r\n  );\r\n\r\n  return (\r\n    <CSSTransition in={asideOpen} timeout={300} unmountOnExit>\r\n      <ActiveKeyProvider initKey=\"ALL\">\r\n        <DragDropContext\r\n          onDragEnd={({ destination }) => {\r\n            if (destination?.index === 0) setLeft(true);\r\n            if (destination?.index === 1) setLeft(false);\r\n          }}\r\n        >\r\n          <Droppable droppableId=\"preview-drop\" direction=\"horizontal\">\r\n            {(\r\n              { droppableProps, innerRef, placeholder },\r\n              { isDraggingOver }\r\n            ) => (\r\n              <aside\r\n                className=\"preview-drop\"\r\n                data-left={left}\r\n                ref={innerRef}\r\n                data-dragged={isDraggingOver}\r\n                {...droppableProps}\r\n              >\r\n                {opposite}\r\n                <PreviewCard left={left} {...props} />\r\n                {placeholder}\r\n              </aside>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n      </ActiveKeyProvider>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nconst PreviewCard: FC<{ left: boolean } & PreviewProps> = ({\r\n  left,\r\n  ...props\r\n}) => {\r\n  const [activeKey] = useActiveKey();\r\n  const [, setAsideOpen] = useAsideOpen();\r\n\r\n  const title = {\r\n    ALL: \"All Pages\",\r\n    MARKED: \"Bookmarks\",\r\n    WRITTEN: \"Notes\",\r\n  }[activeKey];\r\n\r\n  const { ref: swipeRef, ...swipeHandler } = useSwipeable({\r\n    onSwipedLeft() {\r\n      if (left) setAsideOpen(false);\r\n    },\r\n    onSwipedRight() {\r\n      if (!left) setAsideOpen(false);\r\n    },\r\n    swipeDuration: 200,\r\n  });\r\n\r\n  return (\r\n    <Draggable draggableId={\"CARD\"} index={left ? 0 : 1}>\r\n      {(\r\n        { innerRef, draggableProps, dragHandleProps },\r\n        { isDragging, isDropAnimating }\r\n      ) => (\r\n        <div\r\n          className=\"preview-card\"\r\n          ref={(e) => {\r\n            innerRef(e);\r\n            swipeRef(e);\r\n          }}\r\n          data-animating={isDropAnimating}\r\n          {...draggableProps}\r\n          {...swipeHandler}\r\n        >\r\n          <div className=\"drag-handle\" {...dragHandleProps} />\r\n          <h3>{title}</h3>\r\n          <PreviewTabs />\r\n          <PageList cardDragged={isDragging} {...props} />\r\n          <PreviewFooter {...props} />\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst PageList: FC<PreviewProps & { cardDragged: boolean }> = React.memo(\r\n  ({ cardDragged, ...props }) => {\r\n    const refRec = useRef<Record<string, HTMLElement>>({});\r\n    const [activeKey] = useActiveKey();\r\n    const [asideOpen] = useAsideOpen();\r\n    const { pageOrder, currPageID } = props;\r\n    const { saveReorder, addFinalPage } = props;\r\n\r\n    const onDragEnd = ({ source, destination }: DropResult) => {\r\n      if (!destination || !pageOrder) return;\r\n      const { index: fromIndex } = source;\r\n      const { index: toIndex } = destination;\r\n      const pageID = pageOrder[fromIndex];\r\n      if (fromIndex === toIndex || !pageID) return;\r\n      const newOrder = exchange(pageOrder, fromIndex, toIndex);\r\n      saveReorder(newOrder, true);\r\n    };\r\n\r\n    const initScroll = useEvent(() => {\r\n      refRec.current[currPageID]?.scrollIntoView();\r\n    });\r\n    useLayoutEffect(() => {\r\n      if (asideOpen) initScroll();\r\n    }, [asideOpen, activeKey, initScroll]);\r\n\r\n    return (\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"preview-list\" isDropDisabled={cardDragged}>\r\n          {({ droppableProps, innerRef, placeholder }) => (\r\n            <div className=\"page-list\" ref={innerRef} {...droppableProps}>\r\n              {pageOrder?.map((uid, index) => (\r\n                <PagePreview\r\n                  key={uid}\r\n                  uid={uid}\r\n                  pageIndex={index}\r\n                  refRec={refRec.current}\r\n                  cardDragged={cardDragged}\r\n                  {...props}\r\n                />\r\n              ))}\r\n              {placeholder}\r\n              {activeKey === \"ALL\" && (\r\n                <AddPageButton addFinalPage={addFinalPage} />\r\n              )}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n);\r\nPageList.displayName = \"PageList\";\r\n\r\nconst PagePreview: FC<\r\n  {\r\n    uid: string;\r\n    pageIndex: number;\r\n    refRec: Record<string, HTMLElement>;\r\n    cardDragged: boolean;\r\n  } & PreviewProps\r\n> = ({ uid, pageIndex, refRec, cardDragged, ...props }) => {\r\n  const { stateSet, pageRec, currPageID, scrollPage } = props;\r\n  const { teamState, ignores } = useContext(TeamCtx);\r\n  const [activeKey] = useActiveKey();\r\n  const [chosen, setChosen] = useState(\"\");\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n\r\n  const marked = useRef(false);\r\n  if (activeKey === \"MARKED\") {\r\n    marked.current = page?.marked || marked.current;\r\n  } else {\r\n    marked.current = false;\r\n  }\r\n\r\n  const userIDs = useMemo(\r\n    () => TeamState.getValidUsers(teamStateMap, ignores),\r\n    [teamStateMap, ignores]\r\n  );\r\n\r\n  if (!page || !drawState) return null;\r\n\r\n  if (\r\n    activeKey === \"WRITTEN\" &&\r\n    drawState.isEmpty() &&\r\n    TeamState.isEmpty(teamStateMap)\r\n  ) {\r\n    return null;\r\n  }\r\n  if (activeKey === \"MARKED\" && !marked.current) return null;\r\n  const curr = currPageID === uid;\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={uid}\r\n      index={pageIndex}\r\n      isDragDisabled={activeKey !== \"ALL\" || cardDragged}\r\n    >\r\n      {(\r\n        { innerRef, draggableProps, dragHandleProps },\r\n        { isDragging, isDropAnimating }\r\n      ) => (\r\n        <div\r\n          ref={(e) => {\r\n            innerRef(e);\r\n            if (e) refRec[uid] = e;\r\n          }}\r\n          className=\"page\"\r\n          data-curr={curr}\r\n          data-dragged={isDragging}\r\n          data-animating={isDropAnimating}\r\n          onClick={() => scrollPage(uid)}\r\n          {...draggableProps}\r\n          {...dragHandleProps}\r\n        >\r\n          <PageWrapper\r\n            drawState={teamStateMap?.get(chosen) || drawState}\r\n            teamStateMap={chosen ? undefined : teamStateMap}\r\n            thumbnail={page.image}\r\n            ignores={ignores}\r\n            preview\r\n            skipInView={isDragging || cardDragged}\r\n          />\r\n          <PreviewTools\r\n            uid={uid}\r\n            index={pageIndex}\r\n            chosen={chosen}\r\n            setChosen={setChosen}\r\n            page={page}\r\n            userIDs={userIDs}\r\n            {...props}\r\n          />\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst PreviewTools: FC<\r\n  {\r\n    uid: string;\r\n    index: number;\r\n    chosen: string;\r\n    setChosen: Setter<string>;\r\n    page: NotePage;\r\n    userIDs: string[];\r\n  } & ReaderMethods\r\n> = React.memo(({ uid, index, chosen, setChosen, page, userIDs, ...props }) => {\r\n  const { switchPageMarked } = props;\r\n  return (\r\n    <div className=\"tools\" onClick={(e) => e.stopPropagation()}>\r\n      <div\r\n        className=\"bookmark\"\r\n        data-marked={page.marked}\r\n        onClick={() => switchPageMarked(uid)}\r\n      />\r\n      <div className=\"index\">{index + 1}</div>\r\n      <PreviewOption uid={uid} {...props} />\r\n      <TeamAvatars userIDs={userIDs} chosen={chosen} setChosen={setChosen} />\r\n    </div>\r\n  );\r\n});\r\nPreviewTools.displayName = \"PreviewTools\";\r\n\r\nconst TeamAvatars: FC<{\r\n  userIDs: string[];\r\n  chosen: string;\r\n  setChosen: Setter<string>;\r\n}> = ({ userIDs, chosen, setChosen }) => {\r\n  const { userRec } = useContext(TeamCtx);\r\n  return (\r\n    <Avatar.Group\r\n      maxCount={2}\r\n      size=\"default\"\r\n      className={classNames(\"team-group\", { chosen })}\r\n      maxPopoverPlacement=\"bottom\"\r\n    >\r\n      {userIDs.map((userID) => {\r\n        const userInfo = userRec[userID];\r\n        if (!userInfo) return null;\r\n        return (\r\n          <UserAvatar\r\n            key={userID}\r\n            size=\"default\"\r\n            userInfo={userInfo}\r\n            className=\"preview-avatar\"\r\n            chosen={chosen === userID}\r\n            onClick={() => setChosen((prev) => (prev === userID ? \"\" : userID))}\r\n          />\r\n        );\r\n      })}\r\n    </Avatar.Group>\r\n  );\r\n};\r\n\r\nconst PreviewOption: FC<{ uid: string } & ReaderMethods> = ({\r\n  uid,\r\n  addPage,\r\n  deletePage,\r\n}) => {\r\n  const menu = (\r\n    <Menu\r\n      items={[\r\n        {\r\n          key: \"ADD\",\r\n          icon: <PlusOutlined />,\r\n          label: \"Add page\",\r\n          onClick: () => addPage(uid),\r\n        },\r\n        {\r\n          key: \"COPY\",\r\n          icon: <CopyOutlined />,\r\n          label: \"Duplicate\",\r\n          onClick: () => addPage(uid, true),\r\n        },\r\n        {\r\n          key: \"DELETE\",\r\n          icon: <DeleteOutlined />,\r\n          label: \"Delete\",\r\n          danger: true,\r\n          onClick: () => deletePage(uid),\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n  return (\r\n    <Popover\r\n      content={menu}\r\n      trigger=\"click\"\r\n      placement=\"left\"\r\n      destroyTooltipOnHide\r\n      getPopupContainer={(e) => e.parentElement?.parentElement?.parentElement!}\r\n    >\r\n      <div className=\"option\">\r\n        <MoreOutlined />\r\n      </div>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst PreviewTabs: FC = React.memo(() => {\r\n  const [activeKey, setActiveKey] = useActiveKey();\r\n  const { TabPane } = Tabs;\r\n  return (\r\n    <Tabs\r\n      className=\"tabs\"\r\n      activeKey={activeKey}\r\n      onChange={setActiveKey}\r\n      tabBarGutter={0}\r\n      size=\"small\"\r\n      centered\r\n    >\r\n      <TabPane tab={<IconFont type=\"icon-uf_paper\" />} key=\"ALL\" />\r\n      <TabPane tab={<IconFont type=\"icon-bookmark2\" />} key=\"MARKED\" />\r\n      <TabPane tab={<IconFont type=\"icon-write\" />} key=\"WRITTEN\" />\r\n    </Tabs>\r\n  );\r\n});\r\nPreviewTabs.displayName = \"PreviewTabs\";\r\n\r\nconst PreviewFooter: FC<PreviewProps> = ({\r\n  currPageID,\r\n  pageOrder,\r\n  scrollPage,\r\n  size,\r\n  setSize,\r\n}) => {\r\n  const pageIndex = useMemo(\r\n    () => (pageOrder?.indexOf(currPageID) ?? 0) + 1,\r\n    [currPageID, pageOrder]\r\n  );\r\n\r\n  const jumpMenu = pageOrder && (\r\n    <Pagination\r\n      pageSize={1}\r\n      total={pageOrder.length}\r\n      simple\r\n      current={pageIndex}\r\n      onChange={(index) => {\r\n        const pageID = pageOrder[index - 1];\r\n        pageID && scrollPage(pageID);\r\n      }}\r\n    />\r\n  );\r\n\r\n  const sizeMenu = (\r\n    <Menu\r\n      items={range(40, 120, 20).map((s) => ({\r\n        key: s,\r\n        label: s + \"%\",\r\n        className: \"size-li\",\r\n        onClick: () => setSize(s),\r\n      }))}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <footer>\r\n      <Popover\r\n        content={jumpMenu}\r\n        trigger=\"click\"\r\n        getPopupContainer={(e) => e.parentElement!}\r\n        destroyTooltipOnHide\r\n      >\r\n        <Button type=\"text\" size=\"small\" icon={<ReadOutlined />}>\r\n          {pageIndex} / {pageOrder?.length}\r\n        </Button>\r\n      </Popover>\r\n      <Dropdown\r\n        overlay={sizeMenu}\r\n        placement=\"topRight\"\r\n        trigger={[\"click\"]}\r\n        getPopupContainer={(e) => e.parentElement!}\r\n      >\r\n        <Button\r\n          type=\"text\"\r\n          size=\"small\"\r\n          icon={<ShrinkOutlined />}\r\n          className=\"size-btn\"\r\n        >\r\n          {size}%\r\n        </Button>\r\n      </Dropdown>\r\n    </footer>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { HomeFilled, SaveOutlined } from \"@ant-design/icons\";\r\n\r\nexport const HeaderLeft: FC<{\r\n  saved: boolean;\r\n  instantSave: () => Promise<void> | undefined;\r\n}> = ({ saved, instantSave }) => {\r\n  const nav = useNavigate();\r\n  return (\r\n    <div className=\"left\">\r\n      <Button\r\n        type=\"text\"\r\n        onClick={async () => {\r\n          await instantSave();\r\n          nav(\"/\");\r\n        }}\r\n        icon={<HomeFilled style={{ opacity: 0.8 }} />}\r\n      />\r\n      <Button\r\n        type=\"text\"\r\n        className=\"save\"\r\n        onClick={instantSave}\r\n        disabled={saved}\r\n        icon={<SaveOutlined />}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { Button, ButtonProps, message, Popover, Segmented } from \"antd\";\r\nimport {\r\n  BulbFilled,\r\n  BulbOutlined,\r\n  UndoOutlined,\r\n  RedoOutlined,\r\n  GatewayOutlined,\r\n  HighlightTwoTone,\r\n  HighlightOutlined,\r\n} from \"@ant-design/icons\";\r\nimport IconFont from \"component/IconFont\";\r\nimport { PenPanel, WidthSelect } from \"../tools/PenPanel\";\r\nimport { useForceLight } from \"lib/Dark\";\r\nimport { useDrawCtrl, useUpdateDrawCtrl } from \"lib/draw/DrawCtrl\";\r\n\r\nconst btnProps: ButtonProps = { type: \"text\", shape: \"circle\" };\r\n\r\nexport const HeaderMiddle: FC<{\r\n  handleUndo: () => void;\r\n  handleRedo: () => void;\r\n  undoable: boolean;\r\n  redoable: boolean;\r\n}> = ({ handleUndo, handleRedo, undoable, redoable }) => {\r\n  const { mode, finger } = useDrawCtrl();\r\n  const updateDrawCtrl = useUpdateDrawCtrl();\r\n  const [forceLight, setForceLight] = useForceLight();\r\n\r\n  return (\r\n    <div className=\"middle\" data-force-light={forceLight}>\r\n      <Button\r\n        {...btnProps}\r\n        icon={<UndoOutlined />}\r\n        onClick={handleUndo}\r\n        disabled={!undoable}\r\n      />\r\n      <Button\r\n        {...btnProps}\r\n        icon={<RedoOutlined />}\r\n        onClick={handleRedo}\r\n        disabled={!redoable}\r\n      />\r\n      <Button\r\n        shape=\"circle\"\r\n        type={finger ? \"link\" : \"text\"}\r\n        onClick={() => {\r\n          updateDrawCtrl({ finger: !finger });\r\n          message.destroy(\"FINGER\");\r\n          message.open({\r\n            content: finger ? \"Pencil only\" : \"Draw with finger\",\r\n            key: \"FINGER\",\r\n          });\r\n        }}\r\n        icon={<IconFont type=\"icon-finger\" />}\r\n      />\r\n      <Button\r\n        className=\"force-light-btn\"\r\n        {...btnProps}\r\n        icon={forceLight ? <BulbFilled /> : <BulbOutlined />}\r\n        onClick={() => setForceLight((prev) => !prev)}\r\n      />\r\n      <PenButton />\r\n      <EraserButton />\r\n      <Button\r\n        shape=\"circle\"\r\n        type={mode === \"text\" ? \"link\" : \"text\"}\r\n        onClick={() => updateDrawCtrl({ mode: \"text\" })}\r\n        icon={<IconFont type=\"icon-text1\" />}\r\n      />\r\n      <SelectButton />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PenButton = () => {\r\n  const drawCtrl = useDrawCtrl();\r\n  const { mode, color } = drawCtrl;\r\n  const updateDrawCtrl = useUpdateDrawCtrl();\r\n\r\n  return mode === \"draw\" ? (\r\n    <Popover\r\n      content={<PenPanel updateDrawCtrl={updateDrawCtrl} drawCtrl={drawCtrl} />}\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e.parentElement!}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button\r\n        type=\"link\"\r\n        icon={<HighlightTwoTone twoToneColor={color} className=\"pen-icon\" />}\r\n      />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      {...btnProps}\r\n      onClick={() => updateDrawCtrl({ mode: \"draw\" })}\r\n      icon={<HighlightOutlined />}\r\n    />\r\n  );\r\n};\r\n\r\nconst EraserButton = () => {\r\n  const drawCtrl = useDrawCtrl();\r\n  const { mode, pixelEraser } = drawCtrl;\r\n  const updateDrawCtrl = useUpdateDrawCtrl();\r\n\r\n  return mode === \"erase\" ? (\r\n    <Popover\r\n      content={\r\n        <div className=\"width-seg-wrapper\">\r\n          <Segmented\r\n            block\r\n            size=\"small\"\r\n            className=\"pixel-seg\"\r\n            options={[\"Pixel\", \"Object\"]}\r\n            value={pixelEraser ? \"Pixel\" : \"Object\"}\r\n            onChange={(value) => {\r\n              if (value === \"Pixel\") updateDrawCtrl({ pixelEraser: true });\r\n              else updateDrawCtrl({ pixelEraser: false });\r\n            }}\r\n          />\r\n          <WidthSelect\r\n            drawCtrl={drawCtrl}\r\n            updateDrawCtrl={updateDrawCtrl}\r\n            field=\"eraserWidth\"\r\n          />\r\n        </div>\r\n      }\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e.parentElement!}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button type=\"link\" icon={<IconFont type=\"icon-eraser\" />} />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      {...btnProps}\r\n      onClick={() => updateDrawCtrl({ mode: \"erase\" })}\r\n      icon={<IconFont type=\"icon-eraser\" />}\r\n    />\r\n  );\r\n};\r\n\r\nconst SelectButton = () => {\r\n  const { lasso, mode } = useDrawCtrl();\r\n  const updateDrawCtrl = useUpdateDrawCtrl();\r\n\r\n  const icon = lasso ? <IconFont type=\"icon-lasso1\" /> : <GatewayOutlined />;\r\n\r\n  return mode === \"select\" ? (\r\n    <Button\r\n      type=\"link\"\r\n      icon={icon}\r\n      onClick={() => updateDrawCtrl({ lasso: !lasso })}\r\n    />\r\n  ) : (\r\n    <Button\r\n      {...btnProps}\r\n      icon={icon}\r\n      onClick={() => updateDrawCtrl({ mode: \"select\" })}\r\n    />\r\n  );\r\n};\r\n","import { FC, useMemo, useState, useEffect, useContext } from \"react\";\r\nimport { Badge, Alert, Modal, Button, Divider, message, Popover } from \"antd\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { PasscodeInput } from \"antd-mobile\";\r\nimport { TeamCtx } from \"../Team\";\r\nimport { getUserID, saveUserName, UserInfo } from \"lib/user\";\r\nimport {\r\n  EyeOutlined,\r\n  MenuOutlined,\r\n  FormOutlined,\r\n  TeamOutlined,\r\n  CopyOutlined,\r\n  LinkOutlined,\r\n  CheckOutlined,\r\n  ReloadOutlined,\r\n  DisconnectOutlined,\r\n  EyeInvisibleOutlined,\r\n  UsergroupAddOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { editNoteData } from \"lib/note/archive\";\r\nimport { UserAvatar } from \"component/UserAvatar\";\r\nimport { putNote } from \"lib/network/http\";\r\nimport copy from \"clipboard-copy\";\r\nimport { useAsideOpen } from \"lib/hooks\";\r\nimport { sortBy } from \"lodash\";\r\n\r\nexport const HeaderRight: FC<{\r\n  instantSave: () => Promise<void> | undefined;\r\n}> = ({ instantSave }) => {\r\n  const { teamOn } = useContext(TeamCtx);\r\n  return (\r\n    <div className=\"right\">\r\n      {teamOn ? <RoomInfo /> : <JoinRoom instantSave={instantSave} />}\r\n      <PageNavButton />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PageNavButton = () => {\r\n  const [asideOpen, setAsideOpen] = useAsideOpen();\r\n  return (\r\n    <Button\r\n      type={asideOpen ? \"link\" : \"text\"}\r\n      icon={<MenuOutlined />}\r\n      onClick={() => setAsideOpen((prev) => !prev)}\r\n    />\r\n  );\r\n};\r\n\r\nconst UserCard: FC<{ userInfo: UserInfo }> = ({ userInfo }) => {\r\n  const [renaming, setRenaming] = useState(false);\r\n  const { ignores, setIgnores, resetIO } = useContext(TeamCtx);\r\n  useEffect(() => setRenaming(false), [userInfo]);\r\n  if (!userInfo) return null;\r\n\r\n  const { userName, online, userID } = userInfo;\r\n  const self = userID === getUserID();\r\n  const ignored = ignores.has(userID) && !self;\r\n\r\n  const switchIgnore = () => {\r\n    setIgnores((prev) => {\r\n      if (prev.has(userID)) return prev.delete(userID);\r\n      return prev.add(userID);\r\n    });\r\n  };\r\n\r\n  const submitRename = (value: string) => {\r\n    const name = value.trim();\r\n    if (!name || name === userName) return setRenaming(false);\r\n    saveUserName(name);\r\n    resetIO();\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-item\" data-online={online}>\r\n      <UserAvatar userInfo={userInfo} size=\"small\" className=\"room-avatar\" />\r\n      {renaming || <span className=\"user-name\">{userName}</span>}\r\n      {renaming && (\r\n        <Search\r\n          autoFocus\r\n          className=\"rename-input\"\r\n          defaultValue={userName}\r\n          onSearch={submitRename}\r\n          enterButton={<Button icon={<CheckOutlined />} />}\r\n        />\r\n      )}\r\n      {self ? (\r\n        renaming || (\r\n          <Button\r\n            type=\"text\"\r\n            icon={<FormOutlined />}\r\n            onClick={() => setRenaming(true)}\r\n          />\r\n        )\r\n      ) : (\r\n        <Button\r\n          type=\"text\"\r\n          icon={ignored ? <EyeInvisibleOutlined /> : <EyeOutlined />}\r\n          onClick={switchIgnore}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RoomInfo: FC = () => {\r\n  const { code, userRec, connected, loadInfo, loadState, resetIO } =\r\n    useContext(TeamCtx);\r\n  const link = window.location.href;\r\n  const share = async () => {\r\n    try {\r\n      await copy(`${document.title}\\n${link}`);\r\n      message.destroy(\"copy\");\r\n      message.success({\r\n        content: \"Link copied!\",\r\n        icon: <CopyOutlined />,\r\n        key: \"copy\",\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const userList = useMemo(() => {\r\n    const selfID = getUserID();\r\n    const { [selfID]: selfInfo, ...otherUsers } = userRec;\r\n    if (!selfInfo) return [];\r\n    const values = Object.values(otherUsers);\r\n    return [selfInfo, ...sortBy(values, \"online\").reverse()];\r\n  }, [userRec]);\r\n\r\n  const onlineNum = useMemo(\r\n    () => userList.filter(({ online }) => online).length,\r\n    [userList]\r\n  );\r\n\r\n  const teamPop = (\r\n    <div className=\"team-popover\">\r\n      {connected || (\r\n        <Alert\r\n          className=\"disconn-alert\"\r\n          message=\"Network failed.\"\r\n          icon={<DisconnectOutlined />}\r\n          type=\"error\"\r\n          showIcon\r\n          banner\r\n        />\r\n      )}\r\n      <PasscodeInput\r\n        className=\"code-display\"\r\n        value={String(code)}\r\n        length={4}\r\n        plain\r\n      />\r\n      <Button\r\n        icon={<LinkOutlined />}\r\n        className=\"share-btn\"\r\n        onClick={share}\r\n        block\r\n      >\r\n        Copy link\r\n      </Button>\r\n      <Divider />\r\n      <div className=\"user-list\">\r\n        {userList.map((u) => (\r\n          <UserCard key={u.userID} userInfo={u} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const [reloading, setReloading] = useState(false);\r\n  const title = (\r\n    <div className=\"team-title\">\r\n      <span>Team info</span>\r\n      <Button\r\n        shape=\"circle\"\r\n        type=\"text\"\r\n        size=\"small\"\r\n        loading={reloading}\r\n        icon={<ReloadOutlined />}\r\n        onClick={async () => {\r\n          setReloading(true);\r\n          await loadInfo();\r\n          await loadState();\r\n          setReloading(false);\r\n          resetIO();\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Popover\r\n      content={teamPop}\r\n      trigger=\"click\"\r\n      placement=\"bottomRight\"\r\n      title={title}\r\n      getPopupContainer={(e) => e.parentElement!}\r\n    >\r\n      <Button\r\n        type=\"text\"\r\n        icon={\r\n          <Badge\r\n            status={connected ? \"success\" : \"error\"}\r\n            count={connected ? onlineNum : \"!\"}\r\n            size=\"small\"\r\n          >\r\n            <TeamOutlined />\r\n          </Badge>\r\n        }\r\n      />\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst JoinRoom: FC<{\r\n  instantSave: () => Promise<void> | undefined;\r\n}> = ({ instantSave }) => {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const nav = useNavigate();\r\n\r\n  const createRoom = async () => {\r\n    await instantSave();\r\n    const res = await putNote(noteID);\r\n    if (!res) return message.error(\"Can't create room.\");\r\n    await editNoteData(noteID, { team: true });\r\n    nav(\"/team/\" + noteID);\r\n  };\r\n\r\n  const showModal = () => {\r\n    Modal.confirm({\r\n      title: \"Enable team editing\",\r\n      content: \"This will make your note public to anyone with the link.\",\r\n      icon: <TeamOutlined style={{ color: \"#555\" }} />,\r\n      onOk: createRoom,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Button type=\"text\" icon={<UsergroupAddOutlined />} onClick={showModal} />\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { HeaderLeft } from \"./Left\";\r\nimport { HeaderMiddle } from \"./Middle\";\r\nimport { HeaderRight } from \"./Right\";\r\nimport \"./header.sass\";\r\n\r\nexport const Header: FC<{\r\n  saved: boolean;\r\n  handleUndo: () => void;\r\n  handleRedo: () => void;\r\n  undoable: boolean;\r\n  redoable: boolean;\r\n  instantSave: () => Promise<void> | undefined;\r\n}> = ({ saved, instantSave, ...undoProps }) => (\r\n  <header>\r\n    <HeaderLeft saved={saved} instantSave={instantSave} />\r\n    <HeaderMiddle {...undoProps} />\r\n    <HeaderRight instantSave={instantSave} />\r\n  </header>\r\n);\r\n","import React, {\r\n  FC,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useCallback,\r\n} from \"react\";\r\nimport { NoteInfo, NotePage, createPage, defaultNotePage } from \"lib/note/note\";\r\nimport { DrawCtrlProvider } from \"lib/draw/DrawCtrl\";\r\nimport { NewPageInfo, ReorderInfo, SyncInfo } from \"lib/network/io\";\r\nimport { DarkModeProvider } from \"lib/Dark\";\r\nimport { useMemoizedFn as useEvent } from \"ahooks\";\r\nimport { SetOperation, StateSet } from \"lib/draw/StateSet\";\r\nimport { loadNote, editNoteData } from \"lib/note/archive\";\r\nimport { showPageDelMsg } from \"./tools/Messages\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport PageWrapper from \"component/PageWrapper\";\r\nimport { DrawState } from \"lib/draw/DrawState\";\r\nimport { useScrollPage } from \"./lib/scroll\";\r\nimport { debounce, last } from \"lodash\";\r\nimport { insertAfter } from \"./lib/array\";\r\nimport { PageNav } from \"./PageNav\";\r\nimport { AsideOpenProvider, Setter } from \"lib/hooks\";\r\nimport { AddPageButton } from \"./tools/AddButton\";\r\nimport { Header } from \"./Header\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport { Map } from \"immutable\";\r\nimport { message } from \"antd\";\r\nimport \"./reader.sass\";\r\n\r\nexport interface ReaderStates {\r\n  noteID: string;\r\n  currPageID: string;\r\n  stateSet?: StateSet;\r\n  pageRec?: Map<string, NotePage>;\r\n  pageOrder?: string[];\r\n  size: number;\r\n}\r\n\r\nexport interface ReaderMethods {\r\n  scrollPage: (pageID: string) => void;\r\n  switchPageMarked: (pageID: string) => void;\r\n  addPage: (prevPageID: string, copy?: boolean) => void;\r\n  addFinalPage: () => void;\r\n  deletePage: (pageID: string) => void;\r\n  saveReorder: (order: string[], push: boolean) => Promise<void>;\r\n  setSize: Setter<number>;\r\n}\r\n\r\nexport default function Reader() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const nav = useNavigate();\r\n\r\n  const [pageRec, setPageRec] = useState<Map<string, NotePage>>();\r\n  const [noteInfo, setNoteInfo] = useState<NoteInfo>();\r\n  const [stateSet, setStateSet] = useState<StateSet>();\r\n  const [pageOrder, setPageOrder] = useState<string[]>();\r\n  const [saved, setSaved] = useState(true);\r\n\r\n  const { io, teamOn, addTeamStatePage } = useContext(TeamCtx);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const storedNote = await loadNote(noteID);\r\n      if (!storedNote) {\r\n        message.error(\"Note not found\");\r\n        return nav(\"/\");\r\n      }\r\n      const { pageRec, pdf, pageOrder, ...noteInfo } = storedNote;\r\n      setPageRec(Map(pageRec));\r\n      setPageOrder(pageOrder);\r\n      setNoteInfo(noteInfo);\r\n      setStateSet(StateSet.createFromPages(pageRec));\r\n    })();\r\n  }, [nav, noteID, teamOn]);\r\n\r\n  useEffect(() => {\r\n    if (!noteInfo) return;\r\n    document.title = noteInfo.name + \" - Multibility\";\r\n  }, [noteInfo]);\r\n\r\n  useEffect(() => {\r\n    document.body.classList.add(\"reader\");\r\n    return () => document.body.classList.remove(\"reader\");\r\n  }, []);\r\n\r\n  const saver = useEvent(async (withState = false) => {\r\n    let currPageRec = pageRec;\r\n    if (withState) {\r\n      stateSet?.getStates().forEach((ds, pageID) => {\r\n        currPageRec = currPageRec?.update(pageID, defaultNotePage, (page) => ({\r\n          ...page,\r\n          state: DrawState.flaten(ds),\r\n        }));\r\n      });\r\n      setPageRec(currPageRec);\r\n    }\r\n    const pr = currPageRec?.toObject();\r\n    await editNoteData(noteID, { pageRec: pr });\r\n    setSaved(true);\r\n  });\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const debouncedSave = useCallback(debounce(saver, 5000), [saver]);\r\n  const instantSave = debouncedSave.flush;\r\n\r\n  const savePageRec = (pageID: string, cb: (prev: NotePage) => NotePage) => {\r\n    setPageRec((prev) => prev?.update(pageID, defaultNotePage, cb));\r\n    setSaved(false);\r\n    debouncedSave();\r\n  };\r\n\r\n  const saveReorder = async (pageOrder: string[], push = false) => {\r\n    setPageOrder(pageOrder);\r\n    await editNoteData(noteID, { pageOrder });\r\n    await instantSave();\r\n    push && pushReorder(pageOrder);\r\n  };\r\n\r\n  const pushReorder = (pageOrder: string[]) =>\r\n    io?.emit(\"reorder\", { pageOrder });\r\n\r\n  const handleReorder = useEvent(\r\n    ({ deleted, pageOrder, prevOrder }: ReorderInfo) => {\r\n      saveReorder(pageOrder);\r\n      if (!deleted) return;\r\n      showPageDelMsg(() => saveReorder(prevOrder, true));\r\n    }\r\n  );\r\n\r\n  const handleNewPage = useEvent(\r\n    ({ pageOrder, pageID, newPage }: NewPageInfo) => {\r\n      saveReorder(pageOrder);\r\n      savePageRec(pageID, () => newPage);\r\n      setStateSet((prev) => prev?.addState(pageID, newPage));\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    io?.on(\"reorder\", handleReorder);\r\n    io?.on(\"newPage\", handleNewPage);\r\n    return () => void io?.removeAllListeners();\r\n  }, [io, handleReorder, handleNewPage]);\r\n\r\n  const pushOperation = (operation: SetOperation) => {\r\n    const handleSync = ({ pageID, stroke }: SyncInfo) =>\r\n      setStateSet((prev) => prev?.syncStrokeTime(pageID, stroke));\r\n\r\n    io?.emit(\"push\", { operation }, handleSync);\r\n  };\r\n\r\n  const pushNewPage = (\r\n    pageOrder: string[],\r\n    pageID: string,\r\n    newPage: NotePage\r\n  ) => {\r\n    const { image, marked, ...newTeamPage } = newPage;\r\n    io?.emit(\"newPage\", { pageOrder, pageID, newPage: newTeamPage });\r\n    addTeamStatePage(pageID, newPage);\r\n  };\r\n\r\n  const updateStateSet = (cb: (prevSS: StateSet) => StateSet) => {\r\n    if (!stateSet) return;\r\n    const newSS = cb(stateSet);\r\n    if (newSS === stateSet) return;\r\n    setStateSet(newSS);\r\n    setSaved(false);\r\n    debouncedSave(true);\r\n    const lastOp = newSS.lastOp;\r\n    lastOp && pushOperation(lastOp);\r\n  };\r\n\r\n  const switchPageMarked = (pageID: string) =>\r\n    savePageRec(pageID, (prev) => ({ ...prev, marked: !prev.marked }));\r\n\r\n  const addPage = (prevPageID: string, copy = false) => {\r\n    if (!pageOrder) return;\r\n    const prevPage = copy ? pageRec?.get(prevPageID) : undefined;\r\n    const [pageID, newPage] = createPage(prevPage);\r\n    const newOrder = insertAfter(pageOrder, prevPageID, pageID);\r\n    pushNewPage(newOrder, pageID, newPage);\r\n    saveReorder(newOrder);\r\n    savePageRec(pageID, () => newPage);\r\n    setStateSet((prev) => prev?.addState(pageID, newPage));\r\n  };\r\n\r\n  const addFinalPage = () => {\r\n    const lastPageID = last(pageOrder);\r\n    lastPageID && addPage(lastPageID);\r\n  };\r\n\r\n  const deletePage = (pageID: string) => {\r\n    const newOrder = pageOrder?.filter((id) => id !== pageID);\r\n    newOrder?.length && saveReorder(newOrder, true);\r\n  };\r\n\r\n  const [size, setSize] = useState(100);\r\n  const padding = `${(100 - size) / 2}%`;\r\n  const { setInviewRatios, scrollPage, sectionRef, currPageID, scrolling } =\r\n    useScrollPage(noteID, pageOrder, [size]);\r\n\r\n  const readerStates = {\r\n    noteID,\r\n    pageRec,\r\n    pageOrder,\r\n    stateSet,\r\n    currPageID,\r\n    size,\r\n  };\r\n  const renderResult = (\r\n    <div className=\"reader container\">\r\n      <Header\r\n        saved={saved}\r\n        instantSave={instantSave}\r\n        handleUndo={() => updateStateSet((prev) => prev.undo())}\r\n        handleRedo={() => updateStateSet((prev) => prev.redo())}\r\n        undoable={stateSet?.isUndoable() ?? false}\r\n        redoable={stateSet?.isRedoable() ?? false}\r\n      />\r\n      <main style={{ paddingLeft: padding, paddingRight: padding }}>\r\n        {pageOrder?.map((uid) => (\r\n          <section key={uid} className=\"note-page\" ref={sectionRef(uid)}>\r\n            <PageContainer\r\n              uid={uid}\r\n              updateStateSet={updateStateSet}\r\n              setInviewRatios={setInviewRatios}\r\n              scrolling={scrolling}\r\n              {...readerStates}\r\n            />\r\n          </section>\r\n        ))}\r\n        <AddPageButton addFinalPage={addFinalPage} />\r\n      </main>\r\n      <PageNav\r\n        addPage={addPage}\r\n        addFinalPage={addFinalPage}\r\n        scrollPage={scrollPage}\r\n        deletePage={deletePage}\r\n        saveReorder={saveReorder}\r\n        switchPageMarked={switchPageMarked}\r\n        setSize={setSize}\r\n        {...readerStates}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <AsideOpenProvider>\r\n      <DarkModeProvider>\r\n        <DrawCtrlProvider>{renderResult}</DrawCtrlProvider>\r\n      </DarkModeProvider>\r\n    </AsideOpenProvider>\r\n  );\r\n}\r\n\r\nconst PageContainer: FC<\r\n  {\r\n    uid: string;\r\n    updateStateSet: (cb: (prevSS: StateSet) => StateSet) => void;\r\n    setInviewRatios: Setter<Map<string, number>>;\r\n    scrolling: boolean;\r\n  } & ReaderStates\r\n> = ({\r\n  uid,\r\n  updateStateSet,\r\n  setInviewRatios,\r\n  scrolling,\r\n  pageRec,\r\n  stateSet,\r\n  currPageID,\r\n  pageOrder,\r\n  noteID,\r\n}) => {\r\n  const { teamState, ignores } = useContext(TeamCtx);\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n  const updateState = useEvent((ds: DrawState) => {\r\n    updateStateSet((prev) => prev.setState(uid, ds));\r\n  });\r\n\r\n  const onViewChange = useEvent((ratio: number) => {\r\n    if (!ratio) return setInviewRatios((prev) => prev.delete(uid));\r\n    setInviewRatios((prev) => prev.set(uid, ratio));\r\n  });\r\n\r\n  const preload = useMemo(() => {\r\n    if (!pageOrder) return false;\r\n    const currIndex = pageOrder.indexOf(currPageID);\r\n    const selfIndex = pageOrder.indexOf(uid);\r\n    return Math.abs(selfIndex - currIndex) <= 1;\r\n  }, [currPageID, uid, pageOrder]);\r\n\r\n  if (!page || !drawState) return null;\r\n  return (\r\n    <PageWrapper\r\n      drawState={drawState}\r\n      teamStateMap={teamStateMap}\r\n      updateState={updateState}\r\n      pdfIndex={page.pdfIndex}\r\n      noteID={noteID}\r\n      ignores={ignores}\r\n      onViewChange={onViewChange}\r\n      preload={preload}\r\n      skipInView={scrolling}\r\n    />\r\n  );\r\n};\r\n","import { io } from \"socket.io-client\";\r\nimport { Stroke } from \"lib/draw/DrawState\";\r\nimport { NotePage } from \"lib/note/note\";\r\nimport { getUserID, getUserName } from \"lib/user\";\r\nimport { BASE_URL } from \"./http\";\r\n\r\nexport const IoFactory = (noteID: string) => () =>\r\n  io(BASE_URL, {\r\n    query: {\r\n      userID: getUserID(),\r\n      userName: getUserName(),\r\n      noteID,\r\n    },\r\n  });\r\n\r\nexport interface ReorderInfo {\r\n  pageOrder: string[];\r\n  prevOrder: string[];\r\n  deleted: boolean;\r\n}\r\n\r\nexport interface NewPageInfo {\r\n  pageOrder: string[];\r\n  pageID: string;\r\n  newPage: NotePage;\r\n}\r\n\r\nexport interface SyncInfo {\r\n  stroke: Stroke;\r\n  pageID: string;\r\n}\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  getTeamNoteState,\r\n  loadTeamNoteInfo,\r\n  updatePages,\r\n} from \"lib/network/http\";\r\nimport { IoFactory, NewPageInfo } from \"lib/network/io\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { showJoinMsg, showLeaveMsg } from \"./tools/Messages\";\r\nimport { TeamState } from \"lib/draw/TeamState\";\r\nimport { getUserID, UserInfo } from \"lib/user\";\r\nimport { NotePage } from \"lib/note/note\";\r\nimport { Socket } from \"socket.io-client\";\r\nimport { Setter } from \"lib/hooks\";\r\nimport { Loading } from \"component/Loading\";\r\nimport { message } from \"antd\";\r\nimport { Set } from \"immutable\";\r\nimport Reader from \"./Reader\";\r\n\r\nexport const TeamCtx = React.createContext({\r\n  io: undefined as Socket | undefined,\r\n  code: 0,\r\n  teamOn: false,\r\n  connected: false,\r\n  ignores: Set<string>(),\r\n  userRec: {} as Record<string, UserInfo>,\r\n  teamState: undefined as TeamState | undefined,\r\n  resetIO: () => {},\r\n  loadInfo: async () => false,\r\n  loadState: async () => false,\r\n  setIgnores: (() => {}) as Setter<Set<string>>,\r\n  addTeamStatePage: (pageID: string, newPage: NotePage) => {},\r\n});\r\n\r\nexport default function Team() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const [teamState, setTeamState] = useState<TeamState>();\r\n  const [code, setCode] = useState(-2);\r\n  const [userRec, setUserRec] = useState<Record<string, UserInfo>>({});\r\n  const [ignores, setIgnores] = useState(Set<string>());\r\n  const [io, setIO] = useState(IoFactory(noteID));\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [connected, setConnected] = useState(false);\r\n  const nav = useNavigate();\r\n\r\n  const loadInfo = useCallback(async () => {\r\n    const info = await loadTeamNoteInfo(noteID);\r\n    if (!info) {\r\n      message.error(\"Failed loading the team note info\");\r\n      return false;\r\n    }\r\n    setCode(info.code);\r\n    return true;\r\n  }, [noteID]);\r\n\r\n  const loadState = useCallback(async () => {\r\n    const teamNote = await getTeamNoteState(noteID);\r\n    if (!teamNote) {\r\n      message.error(\"Failed loading the team note state\");\r\n      return false;\r\n    }\r\n    setTeamState(TeamState.createFromTeamPages(teamNote));\r\n    return true;\r\n  }, [noteID]);\r\n\r\n  const updateSelfState = useCallback(() => {\r\n    updatePages(noteID);\r\n  }, [noteID]);\r\n\r\n  useEffect(() => {\r\n    const roomInit = async () => {\r\n      const infoLoaded = await loadInfo();\r\n      const stateLoaded = await loadState();\r\n      if (!infoLoaded || !stateLoaded) return nav(\"/\");\r\n      setLoaded(true);\r\n      updateSelfState();\r\n    };\r\n    roomInit();\r\n    return updateSelfState;\r\n  }, [loadInfo, loadState, nav, updateSelfState]);\r\n\r\n  useEffect(() => {\r\n    io.on(\"push\", ({ operation, userID }) => {\r\n      setTeamState((prev) => prev?.pushOperation(operation, userID));\r\n    });\r\n\r\n    io.on(\"join\", ({ joined, members }) => {\r\n      const { userID, userName } = joined;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return;\r\n      showJoinMsg(userID, userName);\r\n    });\r\n\r\n    io.on(\"leave\", ({ leaved, members }) => {\r\n      const { userID, userName } = leaved;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return io.emit(\"join\");\r\n      showLeaveMsg(userID, userName);\r\n    });\r\n\r\n    io.on(\"newPage\", (info: NewPageInfo) => {\r\n      const { pageID, newPage } = info;\r\n      setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n    });\r\n\r\n    io.on(\"reset\", ({ userID, pageRec }) => {\r\n      if (userID === getUserID()) return;\r\n      setTeamState((prev) => prev?.resetUser(userID, pageRec));\r\n    });\r\n\r\n    io.on(\"connect_error\", console.error);\r\n    io.on(\"connect\", () => setConnected(true));\r\n    io.on(\"disconnect\", () => setConnected(false));\r\n\r\n    return () => {\r\n      io.removeAllListeners();\r\n      io.close();\r\n    };\r\n  }, [io]);\r\n\r\n  const addTeamStatePage = (pageID: string, newPage: NotePage) => {\r\n    setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n  };\r\n\r\n  const resetIO = () => setIO(IoFactory(noteID));\r\n\r\n  return (\r\n    <Loading loading={!loaded}>\r\n      <TeamCtx.Provider\r\n        value={{\r\n          io,\r\n          code,\r\n          teamOn: true,\r\n          ignores,\r\n          userRec,\r\n          connected,\r\n          teamState,\r\n          resetIO,\r\n          loadInfo,\r\n          loadState,\r\n          setIgnores,\r\n          addTeamStatePage,\r\n        }}\r\n      >\r\n        <Reader />\r\n      </TeamCtx.Provider>\r\n    </Loading>\r\n  );\r\n}\r\n","import { Button, message } from \"antd\";\r\nimport { LoginOutlined, LogoutOutlined } from \"@ant-design/icons\";\r\n\r\nexport const showPageDelMsg = (onUndo: () => void) => {\r\n  message.warning({\r\n    content: (\r\n      <>\r\n        One page was deleted.\r\n        <Button\r\n          size=\"small\"\r\n          type=\"link\"\r\n          onClick={() => {\r\n            message.destroy(\"DELETE\");\r\n            onUndo();\r\n          }}\r\n        >\r\n          Undo\r\n        </Button>\r\n      </>\r\n    ),\r\n    key: \"DELETE\",\r\n    duration: 10,\r\n  });\r\n};\r\n\r\nexport const showJoinMsg = (userID: string, userName: string) => {\r\n  message.destroy(userID);\r\n  message.success({\r\n    content: `${userName} joined the room`,\r\n    icon: <LoginOutlined />,\r\n    key: userID,\r\n  });\r\n};\r\n\r\nexport const showLeaveMsg = (userID: string, userName: string) => {\r\n  message.destroy(userID);\r\n  message.warning({\r\n    content: `${userName} leaved the room`,\r\n    icon: <LogoutOutlined />,\r\n    key: userID,\r\n  });\r\n};\r\n"],"names":["defaultRecord","states","Map","editStack","List","undoStack","defaultFactory","Record","StateSet","immutable","lastOp","this","getImmutable","get","pageID","getStates","drawState","prevDS","getOneState","currRecord","update","s","set","l","push","delete","stroke","DrawState","notePage","state","ratio","newDS","getEditStack","size","getUndoStack","isUndoable","lastUid","last","lastSetOp","pop","isRedoable","ds","pageRec","map","scrollForage","localforage","name","persistScroll","debounce","noteID","currPageID","setItem","largestKey","order","result","maxRatio","key","insertAfter","list","prevItem","newItem","prevIndex","indexOf","curr","slice","splice","UserAvatar","userInfo","onClick","chosen","className","color","useMemo","getHashedColor","userID","userName","style","backgroundColor","AddPageButton","addFinalPage","type","icon","PlusOutlined","block","PageNav","props","useState","left","setLeft","useAsideOpen","asideOpen","opposite","draggableId","index","isDragDisabled","innerRef","ref","CSSTransition","in","timeout","unmountOnExit","initKey","onDragEnd","destination","droppableId","direction","droppableProps","placeholder","isDraggingOver","PreviewCard","useActiveKey","activeKey","setAsideOpen","title","ALL","MARKED","WRITTEN","useSwipeable","onSwipedLeft","onSwipedRight","swipeDuration","swipeRef","swipeHandler","draggableProps","dragHandleProps","isDragging","isDropAnimating","e","PreviewTabs","PageList","cardDragged","PreviewFooter","React","refRec","useRef","pageOrder","saveReorder","initScroll","useEvent","current","scrollIntoView","useLayoutEffect","source","fromIndex","toIndex","newOrder","removed","exchange","isDropDisabled","uid","PagePreview","pageIndex","displayName","stateSet","scrollPage","useContext","TeamCtx","teamState","ignores","setChosen","page","teamStateMap","getOnePageStateMap","marked","userIDs","TeamState","isEmpty","PageWrapper","undefined","thumbnail","image","preview","skipInView","PreviewTools","switchPageMarked","stopPropagation","PreviewOption","TeamAvatars","userRec","maxCount","classNames","maxPopoverPlacement","prev","addPage","deletePage","menu","items","label","CopyOutlined","DeleteOutlined","danger","content","trigger","placement","destroyTooltipOnHide","getPopupContainer","parentElement","MoreOutlined","setActiveKey","TabPane","Tabs","onChange","tabBarGutter","centered","tab","IconFont","setSize","jumpMenu","pageSize","total","length","simple","sizeMenu","range","ReadOutlined","overlay","ShrinkOutlined","HeaderLeft","saved","instantSave","nav","useNavigate","HomeFilled","opacity","disabled","SaveOutlined","btnProps","shape","HeaderMiddle","handleUndo","handleRedo","undoable","redoable","useDrawCtrl","mode","finger","updateDrawCtrl","useUpdateDrawCtrl","useForceLight","forceLight","setForceLight","UndoOutlined","RedoOutlined","message","BulbFilled","BulbOutlined","PenButton","EraserButton","SelectButton","drawCtrl","PenPanel","HighlightTwoTone","twoToneColor","HighlightOutlined","pixelEraser","options","value","field","lasso","GatewayOutlined","HeaderRight","teamOn","RoomInfo","JoinRoom","PageNavButton","MenuOutlined","UserCard","renaming","setRenaming","setIgnores","resetIO","useEffect","online","self","getUserID","ignored","has","Search","autoFocus","defaultValue","onSearch","trim","saveUserName","enterButton","CheckOutlined","FormOutlined","EyeInvisibleOutlined","EyeOutlined","add","code","connected","loadInfo","loadState","link","window","location","href","share","copy","document","console","log","userList","selfID","selfInfo","otherUsers","values","Object","sortBy","reverse","onlineNum","filter","teamPop","DisconnectOutlined","showIcon","banner","String","plain","LinkOutlined","u","reloading","setReloading","loading","ReloadOutlined","status","count","TeamOutlined","useParams","createRoom","putNote","editNoteData","team","UsergroupAddOutlined","Modal","onOk","Header","undoProps","Reader","setPageRec","noteInfo","setNoteInfo","setStateSet","setPageOrder","setSaved","io","addTeamStatePage","loadNote","storedNote","pdf","createFromPages","body","classList","remove","saver","withState","currPageRec","forEach","defaultNotePage","pr","toObject","debouncedSave","useCallback","flush","savePageRec","cb","pushReorder","emit","handleReorder","deleted","prevOrder","showPageDelMsg","handleNewPage","newPage","addState","on","removeAllListeners","pushNewPage","newTeamPage","updateStateSet","newSS","operation","syncStrokeTime","prevPageID","prevPage","createPage","lastPageID","padding","deps","refMap","setRefMap","scrolled","setPrevPageID","getItem","stored","section","inviewRatios","setInviewRatios","deferredRatios","useDeferredValue","deferredOrder","calcScrollY","header","previousElementSibling","getBoundingClientRect","top","height","scrollY","scrollToCurr","scrollBy","sectionRef","el","taskID","scrolling","setScrolling","addEventListener","handleScroll","clearTimeout","setTimeout","removeEventListener","behavior","useDebugValue","useScrollPage","readerStates","renderResult","undo","redo","paddingLeft","paddingRight","PageContainer","id","Dark","DrawCtrl","updateState","setState","onViewChange","preload","currIndex","selfIndex","Math","abs","pdfIndex","IoFactory","BASE_URL","query","getUserName","Set","Team","setTeamState","setCode","setUserRec","setIO","loaded","setLoaded","setConnected","loadTeamNoteInfo","info","getTeamNoteState","teamNote","updateSelfState","updatePages","roomInit","infoLoaded","stateLoaded","pushOperation","joined","members","showJoinMsg","leaved","showLeaveMsg","resetUser","error","close","Loading","Provider","onUndo","duration"],"sourceRoot":""}