{"version":3,"file":"static/js/378.85ef273e.chunk.js","mappings":"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","sources":["lib/draw/StateSet.ts","pages/reader/lib/scroll.ts","pages/reader/lib/array.ts","component/UserAvatar.tsx","pages/reader/tools/AddButton.tsx","pages/reader/PageNav/PageNav.tsx","pages/reader/Header/Left.tsx","pages/reader/Header/Middle.tsx","pages/reader/Header/Right.tsx","pages/reader/Header/index.tsx","pages/reader/Info/InfoNav.tsx","pages/reader/Reader.tsx","pages/reader/Team.tsx","lib/network/io.ts","pages/reader/tools/Messages.tsx"],"sourcesContent":["import { DrawState, Operation } from \"./DrawState\";\r\nimport { List, Map, Record } from \"immutable\";\r\nimport { NotePage } from \"lib/note/note\";\r\n\r\ninterface StateSetRecordType {\r\n  states: Map<string, DrawState>;\r\n  editStack: List<string>;\r\n  undoStack: List<string>;\r\n}\r\n\r\nconst defaultRecord: Readonly<StateSetRecordType> = {\r\n  states: Map(),\r\n  editStack: List(),\r\n  undoStack: List(),\r\n};\r\n\r\ntype StateSetRecord = Record<StateSetRecordType>;\r\nconst defaultFactory = Record(defaultRecord);\r\n\r\nexport type SetOperation = Operation & { pageID: string };\r\n\r\nexport class StateSet {\r\n  constructor(\r\n    private immutable: StateSetRecord,\r\n    public lastOp?: SetOperation\r\n  ) {}\r\n\r\n  static createFromPages(pageRec: globalThis.Record<string, NotePage>) {\r\n    return new StateSet(\r\n      defaultFactory().set(\r\n        \"states\",\r\n        Map(pageRec).map(({ state, ratio }) =>\r\n          DrawState.loadFromFlat(state, ratio)\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  getImmutable() {\r\n    return this.immutable;\r\n  }\r\n\r\n  getStates() {\r\n    return this.getImmutable().get(\"states\");\r\n  }\r\n\r\n  getOneState(pageID: string) {\r\n    return this.getStates().get(pageID);\r\n  }\r\n\r\n  getEditStack() {\r\n    return this.getImmutable().get(\"editStack\");\r\n  }\r\n\r\n  getUndoStack() {\r\n    return this.getImmutable().get(\"undoStack\");\r\n  }\r\n\r\n  setState(pageID: string, drawState: DrawState) {\r\n    const prevDS = this.getOneState(pageID);\r\n    if (!prevDS || prevDS === drawState) return this;\r\n    let currRecord = this.getImmutable()\r\n      .update(\"states\", (s) => s.set(pageID, drawState))\r\n      .update(\"editStack\", (l) => l.push(pageID))\r\n      .delete(\"undoStack\");\r\n\r\n    const { lastOp } = drawState;\r\n    const lastSetOp = lastOp && { ...lastOp, pageID };\r\n\r\n    return new StateSet(currRecord, lastSetOp);\r\n  }\r\n\r\n  // sync with mutation.\r\n  syncStrokeTime(pageID: string, uid: string, timestamp: number) {\r\n    const prevDS = this.getOneState(pageID);\r\n    prevDS && DrawState.syncStrokeTime(prevDS, uid, timestamp);\r\n    return this;\r\n  }\r\n\r\n  addState(pageID: string, notePage: NotePage) {\r\n    const { state, ratio } = notePage;\r\n    const newDS = DrawState.loadFromFlat(state, ratio);\r\n    const currRecord = this.getImmutable().update(\"states\", (s) =>\r\n      s.set(pageID, newDS)\r\n    );\r\n    return new StateSet(currRecord);\r\n  }\r\n\r\n  deleteState(pageID: string) {\r\n    return new StateSet(\r\n      this.getImmutable().update(\"states\", (s) => s.delete(pageID))\r\n    );\r\n  }\r\n\r\n  isUndoable() {\r\n    return this.getEditStack().size > 0;\r\n  }\r\n\r\n  isRedoable() {\r\n    return this.getUndoStack().size > 0;\r\n  }\r\n\r\n  undo() {\r\n    if (!this.isUndoable()) return this;\r\n    const lastUid = this.getEditStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.undo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"editStack\", (s) => s.pop())\r\n        .update(\"undoStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  redo() {\r\n    if (!this.isRedoable()) return this;\r\n    const lastUid = this.getUndoStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.redo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"undoStack\", (s) => s.pop())\r\n        .update(\"editStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n}\r\n","import {\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useDebugValue,\r\n  useLayoutEffect,\r\n  useDeferredValue,\r\n} from \"react\";\r\nimport localforage from \"localforage\";\r\nimport { Map } from \"immutable\";\r\nimport { debounce } from \"lodash\";\r\nimport { useMemoizedFn as useEvent } from \"ahooks\";\r\n\r\nconst scrollForage = localforage.createInstance({ name: \"scroll\" });\r\nconst persistScroll = debounce((noteID: string, currPageID: string) => {\r\n  scrollForage.setItem(noteID, currPageID);\r\n}, 2000);\r\n\r\nexport function useScrollPage(\r\n  noteID: string,\r\n  pageOrder = [] as string[],\r\n  deps = [] as any[]\r\n) {\r\n  const [refMap, setRefMap] = useState(Map<string, HTMLElement>());\r\n  const scrolled = useRef(false);\r\n  const [prevPageID, setPrevPageID] = useState(\"\");\r\n  useEffect(() => {\r\n    (async () => {\r\n      const stored = await scrollForage.getItem<string>(noteID);\r\n      if (!stored) return (scrolled.current = true);\r\n      setPrevPageID(stored);\r\n    })();\r\n  }, [noteID]);\r\n\r\n  useLayoutEffect(() => {\r\n    const section = refMap.get(prevPageID);\r\n    if (scrolled.current || !section) return;\r\n    section.scrollIntoView();\r\n    scrolled.current = true;\r\n  }, [prevPageID, refMap]);\r\n\r\n  const [inviewRatios, setInviewRatios] = useState(Map<string, number>());\r\n  const deferredRatios = useDeferredValue(inviewRatios);\r\n  const deferredOrder = useDeferredValue(pageOrder);\r\n  const currPageID = useMemo(\r\n    () => largestKey(deferredRatios, deferredOrder),\r\n    [deferredRatios, deferredOrder]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (scrolled.current) persistScroll(noteID, currPageID);\r\n  }, [noteID, currPageID]);\r\n\r\n  const calcScrollY = useEvent(() => {\r\n    const section = refMap.get(currPageID);\r\n    const header = section?.parentElement?.previousElementSibling;\r\n    if (!header) return 0;\r\n    const { top } = section.getBoundingClientRect();\r\n    const { height } = header.getBoundingClientRect();\r\n    return -top + height;\r\n  });\r\n  const scrollY = useMemo(calcScrollY, [pageOrder, calcScrollY, ...deps]);\r\n\r\n  const scrollToCurr = useEvent(() => {\r\n    const section = refMap.get(currPageID);\r\n    if (!section) return;\r\n    section.scrollIntoView();\r\n    window.scrollBy(0, scrollY);\r\n  });\r\n  useLayoutEffect(scrollToCurr, [pageOrder, scrollToCurr, ...deps]);\r\n\r\n  const sectionRef = useEvent((pageID: string) => (el: HTMLElement | null) => {\r\n    if (!el) return;\r\n    setRefMap((prev) => prev.set(pageID, el));\r\n  });\r\n\r\n  const taskID = useRef(0);\r\n  const [scrolling, setScrolling] = useState(false);\r\n  const scrollPage = (pageID: string) => {\r\n    const section = refMap.get(pageID);\r\n    if (!section) return;\r\n    const handleScroll = () => {\r\n      window.clearTimeout(taskID.current);\r\n      taskID.current = window.setTimeout(() => {\r\n        setScrolling(false);\r\n        document.removeEventListener(\"scroll\", handleScroll);\r\n      }, 50);\r\n    };\r\n    document.addEventListener(\"scroll\", handleScroll);\r\n    section.scrollIntoView({ behavior: \"smooth\" });\r\n    setScrolling(true);\r\n  };\r\n\r\n  useDebugValue(currPageID);\r\n  return { scrollPage, setInviewRatios, sectionRef, currPageID, scrolling };\r\n}\r\n\r\nconst largestKey = (map: Map<string, number>, order: string[]) => {\r\n  let result = \"\";\r\n  let maxRatio = 0;\r\n  for (let key of order) {\r\n    const ratio = map.get(key);\r\n    if (!ratio) continue;\r\n    if (ratio === 1) return key;\r\n    if (ratio > maxRatio) {\r\n      result = key;\r\n      maxRatio = ratio;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n","export function exchange<T>(list: T[], fromIndex: number, toIndex: number) {\r\n  const result = list.slice();\r\n  const [removed] = result.splice(fromIndex, 1);\r\n  if (!removed) return list;\r\n  result.splice(toIndex, 0, removed);\r\n  return result;\r\n}\r\n\r\nexport function insertAfter<T>(list: T[], prevItem: T, newItem: T) {\r\n  const prevIndex = list.indexOf(prevItem);\r\n  const curr = list.slice();\r\n  if (prevIndex === -1) return curr;\r\n  curr.splice(prevIndex + 1, 0, newItem);\r\n  return curr;\r\n}\r\n","import { Avatar } from \"antd\";\r\nimport { AvatarSize } from \"antd/lib/avatar/SizeContext\";\r\nimport { FC, useMemo } from \"react\";\r\nimport { getHashedColor } from \"lib/color\";\r\nimport { UserInfo } from \"lib/user\";\r\n\r\nexport const UserAvatar: FC<{\r\n  userInfo: UserInfo;\r\n  size?: AvatarSize;\r\n  onClick?: () => void;\r\n  chosen?: boolean;\r\n  className?: string;\r\n}> = ({\r\n  userInfo,\r\n  size = \"default\",\r\n  onClick = () => {},\r\n  chosen = false,\r\n  className,\r\n}) => {\r\n  const color = useMemo(() => getHashedColor(userInfo.userID), [userInfo]);\r\n  if (!userInfo) return null;\r\n  const { userName } = userInfo;\r\n\r\n  return (\r\n    <Avatar\r\n      className={className}\r\n      data-chosen={chosen}\r\n      size={size}\r\n      style={{ backgroundColor: color }}\r\n    >\r\n      <div className=\"avatar-wrapper\" onClick={onClick}>\r\n        {userName?.slice(0, 3)}\r\n      </div>\r\n    </Avatar>\r\n  );\r\n};\r\n","import { FC } from \"react\";\nimport { Button } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nexport const AddPageButton: FC<{ addFinalPage: () => void }> = ({\n  addFinalPage,\n}) => {\n  return (\n    <Button type=\"dashed\" icon={<PlusOutlined />} block onClick={addFinalPage}>\n      New page\n    </Button>\n  );\n};\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useContext,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport {\r\n  MoreOutlined,\r\n  PlusOutlined,\r\n  CopyOutlined,\r\n  ReadOutlined,\r\n  ShrinkOutlined,\r\n  DeleteOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  Draggable,\r\n  Droppable,\r\n  DropResult,\r\n  DragDropContext,\r\n} from \"react-beautiful-dnd\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Dropdown,\r\n  Menu,\r\n  Pagination,\r\n  Popover,\r\n  Tabs,\r\n} from \"antd\";\r\nimport {\r\n  Setter,\r\n  useActiveKey,\r\n  useAsideOpen,\r\n  ActiveKeyProvider,\r\n} from \"lib/hooks\";\r\nimport { ReaderMethods, ReaderStates } from \"../Reader\";\r\nimport PageWrapper from \"component/PageWrapper\";\r\nimport { UserAvatar } from \"component/UserAvatar\";\r\nimport { exchange } from \"../lib/array\";\r\nimport IconFont from \"component/IconFont\";\r\nimport classNames from \"classnames\";\r\nimport { TeamCtx } from \"../Team\";\r\nimport { useMemoizedFn as useEvent } from \"ahooks\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport { NotePage } from \"lib/note/note\";\r\nimport { TeamState } from \"lib/draw/TeamState\";\r\nimport { AddPageButton } from \"../tools/AddButton\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { range } from \"lodash\";\r\n\r\ntype PreviewProps = ReaderMethods & ReaderStates;\r\nexport const PageNav: FC<PreviewProps> = (props) => {\r\n  const [left, setLeft] = useState(false);\r\n  const [asideOpen] = useAsideOpen();\r\n\r\n  const opposite = (\r\n    <Draggable draggableId=\"OPPOSITE\" index={left ? 1 : 0} isDragDisabled>\r\n      {({ innerRef }) => <div className=\"opposite\" ref={innerRef} />}\r\n    </Draggable>\r\n  );\r\n\r\n  return (\r\n    <CSSTransition in={asideOpen} timeout={300} unmountOnExit>\r\n      <ActiveKeyProvider initKey=\"ALL\">\r\n        <DragDropContext\r\n          onDragEnd={({ destination }) => {\r\n            if (destination?.index === 0) setLeft(true);\r\n            if (destination?.index === 1) setLeft(false);\r\n          }}\r\n        >\r\n          <Droppable droppableId=\"preview-drop\" direction=\"horizontal\">\r\n            {(\r\n              { droppableProps, innerRef, placeholder },\r\n              { isDraggingOver }\r\n            ) => (\r\n              <aside\r\n                className=\"preview-drop\"\r\n                data-left={left}\r\n                ref={innerRef}\r\n                data-dragged={isDraggingOver}\r\n                {...droppableProps}\r\n              >\r\n                {opposite}\r\n                <PreviewCard left={left} {...props} />\r\n                {placeholder}\r\n              </aside>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n      </ActiveKeyProvider>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nconst PreviewCard: FC<{ left: boolean } & PreviewProps> = ({\r\n  left,\r\n  ...props\r\n}) => {\r\n  const [activeKey] = useActiveKey();\r\n  const [, setAsideOpen] = useAsideOpen();\r\n\r\n  const title = {\r\n    ALL: \"All Pages\",\r\n    MARKED: \"Bookmarks\",\r\n    WRITTEN: \"Notes\",\r\n  }[activeKey];\r\n\r\n  const { ref: swipeRef, ...swipeHandler } = useSwipeable({\r\n    onSwipedLeft() {\r\n      if (left) setAsideOpen(false);\r\n    },\r\n    onSwipedRight() {\r\n      if (!left) setAsideOpen(false);\r\n    },\r\n    swipeDuration: 200,\r\n  });\r\n\r\n  return (\r\n    <Draggable draggableId={\"CARD\"} index={left ? 0 : 1}>\r\n      {(\r\n        { innerRef, draggableProps, dragHandleProps },\r\n        { isDragging, isDropAnimating }\r\n      ) => (\r\n        <div\r\n          className=\"preview-card\"\r\n          ref={(e) => {\r\n            innerRef(e);\r\n            swipeRef(e);\r\n          }}\r\n          data-animating={isDropAnimating}\r\n          {...draggableProps}\r\n          {...swipeHandler}\r\n        >\r\n          <div className=\"drag-handle\" {...dragHandleProps} />\r\n          <h3>{title}</h3>\r\n          <PreviewTabs />\r\n          <PageList cardDragged={isDragging} {...props} />\r\n          <PreviewFooter {...props} />\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst PageList: FC<PreviewProps & { cardDragged: boolean }> = React.memo(\r\n  ({ cardDragged, ...props }) => {\r\n    const refRec = useRef<Record<string, HTMLElement>>({});\r\n    const [activeKey] = useActiveKey();\r\n    const [asideOpen] = useAsideOpen();\r\n    const { pageOrder, currPageID } = props;\r\n    const { saveReorder, addFinalPage } = props;\r\n\r\n    const onDragEnd = ({ source, destination }: DropResult) => {\r\n      if (!destination || !pageOrder) return;\r\n      const { index: fromIndex } = source;\r\n      const { index: toIndex } = destination;\r\n      const pageID = pageOrder[fromIndex];\r\n      if (fromIndex === toIndex || !pageID) return;\r\n      const newOrder = exchange(pageOrder, fromIndex, toIndex);\r\n      saveReorder(newOrder, true);\r\n    };\r\n\r\n    const initScroll = useEvent(() => {\r\n      refRec.current[currPageID]?.scrollIntoView();\r\n    });\r\n    useLayoutEffect(() => {\r\n      if (asideOpen) initScroll();\r\n    }, [asideOpen, activeKey, initScroll]);\r\n\r\n    return (\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"preview-list\" isDropDisabled={cardDragged}>\r\n          {({ droppableProps, innerRef, placeholder }) => (\r\n            <div className=\"page-list\" ref={innerRef} {...droppableProps}>\r\n              {pageOrder.map((uid, index) => (\r\n                <PagePreview\r\n                  key={uid}\r\n                  uid={uid}\r\n                  pageIndex={index}\r\n                  refRec={refRec.current}\r\n                  cardDragged={cardDragged}\r\n                  {...props}\r\n                />\r\n              ))}\r\n              {placeholder}\r\n              {activeKey === \"ALL\" && (\r\n                <AddPageButton addFinalPage={addFinalPage} />\r\n              )}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n);\r\nPageList.displayName = \"PageList\";\r\n\r\nconst PagePreview: FC<\r\n  {\r\n    uid: string;\r\n    pageIndex: number;\r\n    refRec: Record<string, HTMLElement>;\r\n    cardDragged: boolean;\r\n  } & PreviewProps\r\n> = ({ uid, pageIndex, refRec, cardDragged, ...props }) => {\r\n  const { stateSet, pageRec, currPageID, scrollPage } = props;\r\n  const { teamState, ignores } = useContext(TeamCtx);\r\n  const [activeKey] = useActiveKey();\r\n  const [chosen, setChosen] = useState(\"\");\r\n\r\n  const page = pageRec.get(uid);\r\n  const drawState = stateSet.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n\r\n  const marked = useRef(false);\r\n  if (activeKey === \"MARKED\") {\r\n    marked.current = page?.marked || marked.current;\r\n  } else {\r\n    marked.current = false;\r\n  }\r\n\r\n  const userIDs = useMemo(\r\n    () => TeamState.getValidUsers(teamStateMap, ignores),\r\n    [teamStateMap, ignores]\r\n  );\r\n\r\n  if (!page || !drawState) return null;\r\n\r\n  if (\r\n    activeKey === \"WRITTEN\" &&\r\n    drawState.isEmpty() &&\r\n    TeamState.isEmpty(teamStateMap)\r\n  ) {\r\n    return null;\r\n  }\r\n  if (activeKey === \"MARKED\" && !marked.current) return null;\r\n  const curr = currPageID === uid;\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={uid}\r\n      index={pageIndex}\r\n      isDragDisabled={activeKey !== \"ALL\" || cardDragged}\r\n    >\r\n      {(\r\n        { innerRef, draggableProps, dragHandleProps },\r\n        { isDragging, isDropAnimating }\r\n      ) => (\r\n        <div\r\n          ref={(e) => {\r\n            innerRef(e);\r\n            if (e) refRec[uid] = e;\r\n          }}\r\n          className=\"page\"\r\n          data-curr={curr}\r\n          data-dragged={isDragging}\r\n          data-animating={isDropAnimating}\r\n          onClick={() => scrollPage(uid)}\r\n          {...draggableProps}\r\n          {...dragHandleProps}\r\n        >\r\n          <PageWrapper\r\n            drawState={teamStateMap?.get(chosen) || drawState}\r\n            teamStateMap={chosen ? undefined : teamStateMap}\r\n            thumbnail={page.image}\r\n            ignores={ignores}\r\n            preview\r\n            skipInView={isDragging || cardDragged}\r\n          />\r\n          <PreviewTools\r\n            uid={uid}\r\n            index={pageIndex}\r\n            chosen={chosen}\r\n            setChosen={setChosen}\r\n            page={page}\r\n            userIDs={userIDs}\r\n            {...props}\r\n          />\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst PreviewTools: FC<\r\n  {\r\n    uid: string;\r\n    index: number;\r\n    chosen: string;\r\n    setChosen: Setter<string>;\r\n    page: NotePage;\r\n    userIDs: string[];\r\n  } & ReaderMethods\r\n> = React.memo(({ uid, index, chosen, setChosen, page, userIDs, ...props }) => {\r\n  const { switchPageMarked } = props;\r\n  return (\r\n    <div className=\"tools\" onClick={(e) => e.stopPropagation()}>\r\n      <div\r\n        className=\"bookmark\"\r\n        data-marked={page.marked}\r\n        onClick={() => switchPageMarked(uid)}\r\n      />\r\n      <div className=\"index\">{index + 1}</div>\r\n      <PreviewOption uid={uid} {...props} />\r\n      <TeamAvatars userIDs={userIDs} chosen={chosen} setChosen={setChosen} />\r\n    </div>\r\n  );\r\n});\r\nPreviewTools.displayName = \"PreviewTools\";\r\n\r\nconst TeamAvatars: FC<{\r\n  userIDs: string[];\r\n  chosen: string;\r\n  setChosen: Setter<string>;\r\n}> = ({ userIDs, chosen, setChosen }) => {\r\n  const { userRec } = useContext(TeamCtx);\r\n  return (\r\n    <Avatar.Group\r\n      maxCount={2}\r\n      size=\"default\"\r\n      className={classNames(\"team-group\", { chosen })}\r\n      maxPopoverPlacement=\"bottom\"\r\n    >\r\n      {userIDs.map((userID) => {\r\n        const userInfo = userRec[userID];\r\n        if (!userInfo) return null;\r\n        return (\r\n          <UserAvatar\r\n            key={userID}\r\n            size=\"default\"\r\n            userInfo={userInfo}\r\n            className=\"preview-avatar\"\r\n            chosen={chosen === userID}\r\n            onClick={() => setChosen((prev) => (prev === userID ? \"\" : userID))}\r\n          />\r\n        );\r\n      })}\r\n    </Avatar.Group>\r\n  );\r\n};\r\n\r\nconst PreviewOption: FC<{ uid: string } & ReaderMethods> = ({\r\n  uid,\r\n  addPage,\r\n  deletePage,\r\n}) => {\r\n  const menu = (\r\n    <Menu\r\n      items={[\r\n        {\r\n          key: \"ADD\",\r\n          icon: <PlusOutlined />,\r\n          label: \"Add page\",\r\n          onClick: () => addPage(uid),\r\n        },\r\n        {\r\n          key: \"COPY\",\r\n          icon: <CopyOutlined />,\r\n          label: \"Duplicate\",\r\n          onClick: () => addPage(uid, true),\r\n        },\r\n        {\r\n          key: \"DELETE\",\r\n          icon: <DeleteOutlined />,\r\n          label: \"Delete\",\r\n          danger: true,\r\n          onClick: () => deletePage(uid),\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n  return (\r\n    <Popover\r\n      content={menu}\r\n      trigger=\"click\"\r\n      placement=\"left\"\r\n      destroyTooltipOnHide\r\n      getPopupContainer={(e) => e.parentElement?.parentElement?.parentElement!}\r\n    >\r\n      <div className=\"option\">\r\n        <MoreOutlined />\r\n      </div>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst PreviewTabs: FC = React.memo(() => {\r\n  const [activeKey, setActiveKey] = useActiveKey();\r\n  const { TabPane } = Tabs;\r\n  return (\r\n    <Tabs\r\n      className=\"tabs\"\r\n      activeKey={activeKey}\r\n      onChange={setActiveKey}\r\n      tabBarGutter={0}\r\n      size=\"small\"\r\n      centered\r\n    >\r\n      <TabPane tab={<IconFont type=\"icon-uf_paper\" />} key=\"ALL\" />\r\n      <TabPane tab={<IconFont type=\"icon-bookmark2\" />} key=\"MARKED\" />\r\n      <TabPane tab={<IconFont type=\"icon-write\" />} key=\"WRITTEN\" />\r\n    </Tabs>\r\n  );\r\n});\r\nPreviewTabs.displayName = \"PreviewTabs\";\r\n\r\nconst PreviewFooter: FC<PreviewProps> = ({\r\n  currPageID,\r\n  pageOrder,\r\n  scrollPage,\r\n  size,\r\n  setSize,\r\n}) => {\r\n  const pageIndex = useMemo(\r\n    () => (pageOrder.indexOf(currPageID) ?? 0) + 1,\r\n    [currPageID, pageOrder]\r\n  );\r\n\r\n  const jumpMenu = pageOrder && (\r\n    <Pagination\r\n      pageSize={1}\r\n      total={pageOrder.length}\r\n      simple\r\n      current={pageIndex}\r\n      onChange={(index) => {\r\n        const pageID = pageOrder[index - 1];\r\n        pageID && scrollPage(pageID);\r\n      }}\r\n    />\r\n  );\r\n\r\n  const sizeMenu = (\r\n    <Menu\r\n      items={range(40, 120, 20).map((s) => ({\r\n        key: s,\r\n        label: s + \"%\",\r\n        className: \"size-li\",\r\n        onClick: () => setSize(s),\r\n      }))}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <footer>\r\n      <Popover\r\n        content={jumpMenu}\r\n        trigger=\"click\"\r\n        getPopupContainer={(e) => e.parentElement!}\r\n        destroyTooltipOnHide\r\n      >\r\n        <Button type=\"text\" size=\"small\" icon={<ReadOutlined />}>\r\n          {pageIndex} / {pageOrder.length}\r\n        </Button>\r\n      </Popover>\r\n      <Dropdown\r\n        overlay={sizeMenu}\r\n        placement=\"topRight\"\r\n        trigger={[\"click\"]}\r\n        getPopupContainer={(e) => e.parentElement!}\r\n      >\r\n        <Button\r\n          type=\"text\"\r\n          size=\"small\"\r\n          icon={<ShrinkOutlined />}\r\n          className=\"size-btn\"\r\n        >\r\n          {size}%\r\n        </Button>\r\n      </Dropdown>\r\n    </footer>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { HomeFilled, SaveOutlined } from \"@ant-design/icons\";\r\n\r\nexport const HeaderLeft: FC<{\r\n  saved: boolean;\r\n  instantSave: () => Promise<void> | undefined;\r\n}> = ({ saved, instantSave }) => {\r\n  const nav = useNavigate();\r\n  return (\r\n    <div className=\"left\">\r\n      <Button\r\n        type=\"text\"\r\n        onClick={async () => {\r\n          await instantSave();\r\n          nav(\"/\");\r\n        }}\r\n        icon={<HomeFilled style={{ opacity: 0.8 }} />}\r\n      />\r\n      <Button\r\n        type=\"text\"\r\n        className=\"save\"\r\n        onClick={instantSave}\r\n        disabled={saved}\r\n        icon={<SaveOutlined />}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { Button, ButtonProps, message, Popover, Segmented } from \"antd\";\r\nimport {\r\n  BulbFilled,\r\n  BulbOutlined,\r\n  UndoOutlined,\r\n  RedoOutlined,\r\n  GatewayOutlined,\r\n  HighlightTwoTone,\r\n  HighlightOutlined,\r\n} from \"@ant-design/icons\";\r\nimport IconFont from \"component/IconFont\";\r\nimport { PenPanel, WidthSelect } from \"../tools/PenPanel\";\r\nimport { useForceLight } from \"lib/Dark\";\r\nimport { useDrawCtrl, useUpdateDrawCtrl } from \"lib/draw/DrawCtrl\";\r\n\r\nconst btnProps: ButtonProps = { type: \"text\", shape: \"circle\" };\r\n\r\nexport const HeaderMiddle: FC<{\r\n  handleUndo: () => void;\r\n  handleRedo: () => void;\r\n  undoable: boolean;\r\n  redoable: boolean;\r\n}> = ({ handleUndo, handleRedo, undoable, redoable }) => {\r\n  const { mode, finger } = useDrawCtrl();\r\n  const updateDrawCtrl = useUpdateDrawCtrl();\r\n  const [forceLight, setForceLight] = useForceLight();\r\n\r\n  return (\r\n    <div className=\"middle\" data-force-light={forceLight}>\r\n      <Button\r\n        {...btnProps}\r\n        icon={<UndoOutlined />}\r\n        onClick={handleUndo}\r\n        disabled={!undoable}\r\n      />\r\n      <Button\r\n        {...btnProps}\r\n        icon={<RedoOutlined />}\r\n        onClick={handleRedo}\r\n        disabled={!redoable}\r\n      />\r\n      <Button\r\n        shape=\"circle\"\r\n        type={finger ? \"link\" : \"text\"}\r\n        onClick={() => {\r\n          updateDrawCtrl({ finger: !finger });\r\n          message.open({\r\n            content: finger ? \"Pencil only\" : \"Draw with finger\",\r\n            key: \"FINGER\",\r\n          });\r\n        }}\r\n        icon={<IconFont type=\"icon-finger\" />}\r\n      />\r\n      <Button\r\n        className=\"force-light-btn\"\r\n        {...btnProps}\r\n        icon={forceLight ? <BulbFilled /> : <BulbOutlined />}\r\n        onClick={() => setForceLight((prev) => !prev)}\r\n      />\r\n      <PenButton />\r\n      <EraserButton />\r\n      <Button\r\n        shape=\"circle\"\r\n        type={mode === \"text\" ? \"link\" : \"text\"}\r\n        onClick={() => updateDrawCtrl({ mode: \"text\" })}\r\n        icon={<IconFont type=\"icon-text1\" />}\r\n      />\r\n      <SelectButton />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PenButton = () => {\r\n  const drawCtrl = useDrawCtrl();\r\n  const { mode, color } = drawCtrl;\r\n  const updateDrawCtrl = useUpdateDrawCtrl();\r\n\r\n  return mode === \"draw\" ? (\r\n    <Popover\r\n      content={<PenPanel updateDrawCtrl={updateDrawCtrl} drawCtrl={drawCtrl} />}\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e.parentElement!}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button\r\n        type=\"link\"\r\n        icon={<HighlightTwoTone twoToneColor={color} className=\"pen-icon\" />}\r\n      />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      {...btnProps}\r\n      onClick={() => updateDrawCtrl({ mode: \"draw\" })}\r\n      icon={<HighlightOutlined />}\r\n    />\r\n  );\r\n};\r\n\r\nconst EraserButton = () => {\r\n  const drawCtrl = useDrawCtrl();\r\n  const { mode, pixelEraser } = drawCtrl;\r\n  const updateDrawCtrl = useUpdateDrawCtrl();\r\n\r\n  return mode === \"erase\" ? (\r\n    <Popover\r\n      content={\r\n        <div className=\"width-seg-wrapper\">\r\n          <Segmented\r\n            block\r\n            size=\"small\"\r\n            className=\"pixel-seg\"\r\n            options={[\"Pixel\", \"Object\"]}\r\n            value={pixelEraser ? \"Pixel\" : \"Object\"}\r\n            onChange={(value) => {\r\n              if (value === \"Pixel\") updateDrawCtrl({ pixelEraser: true });\r\n              else updateDrawCtrl({ pixelEraser: false });\r\n            }}\r\n          />\r\n          <WidthSelect\r\n            drawCtrl={drawCtrl}\r\n            updateDrawCtrl={updateDrawCtrl}\r\n            field=\"eraserWidth\"\r\n          />\r\n        </div>\r\n      }\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e.parentElement!}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button type=\"link\" icon={<IconFont type=\"icon-eraser\" />} />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      {...btnProps}\r\n      onClick={() => updateDrawCtrl({ mode: \"erase\" })}\r\n      icon={<IconFont type=\"icon-eraser\" />}\r\n    />\r\n  );\r\n};\r\n\r\nconst SelectButton = () => {\r\n  const { lasso, mode } = useDrawCtrl();\r\n  const updateDrawCtrl = useUpdateDrawCtrl();\r\n\r\n  const icon = lasso ? <IconFont type=\"icon-lasso1\" /> : <GatewayOutlined />;\r\n\r\n  return mode === \"select\" ? (\r\n    <Button\r\n      type=\"link\"\r\n      icon={icon}\r\n      onClick={() => updateDrawCtrl({ lasso: !lasso })}\r\n    />\r\n  ) : (\r\n    <Button\r\n      {...btnProps}\r\n      icon={icon}\r\n      onClick={() => updateDrawCtrl({ mode: \"select\" })}\r\n    />\r\n  );\r\n};\r\n","import { FC, useMemo, useState, useEffect, useContext } from \"react\";\r\nimport { Badge, Alert, Modal, Button, Divider, message, Popover } from \"antd\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { PasscodeInput } from \"antd-mobile\";\r\nimport { TeamCtx } from \"../Team\";\r\nimport { getUserID, saveUserName, UserInfo } from \"lib/user\";\r\nimport {\r\n  EyeOutlined,\r\n  MenuOutlined,\r\n  FormOutlined,\r\n  TeamOutlined,\r\n  LinkOutlined,\r\n  CheckOutlined,\r\n  ReloadOutlined,\r\n  CheckCircleFilled,\r\n  DisconnectOutlined,\r\n  EyeInvisibleOutlined,\r\n  UsergroupAddOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { editNoteData } from \"lib/note/archive\";\r\nimport { UserAvatar } from \"component/UserAvatar\";\r\nimport { putNote } from \"lib/network/http\";\r\nimport copy from \"clipboard-copy\";\r\nimport { useAsideOpen } from \"lib/hooks\";\r\nimport { sortBy } from \"lodash\";\r\n\r\nexport const HeaderRight: FC<{\r\n  instantSave: () => Promise<void> | undefined;\r\n}> = ({ instantSave }) => {\r\n  const { teamOn } = useContext(TeamCtx);\r\n  return (\r\n    <div className=\"right\">\r\n      {teamOn ? <RoomInfo /> : <JoinRoom instantSave={instantSave} />}\r\n      <PageNavButton />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PageNavButton = () => {\r\n  const [asideOpen, setAsideOpen] = useAsideOpen();\r\n  return (\r\n    <Button\r\n      type={asideOpen ? \"link\" : \"text\"}\r\n      icon={<MenuOutlined />}\r\n      onClick={() => setAsideOpen((prev) => !prev)}\r\n    />\r\n  );\r\n};\r\n\r\nconst UserCard: FC<{ userInfo: UserInfo }> = ({ userInfo }) => {\r\n  const [renaming, setRenaming] = useState(false);\r\n  const { ignores, setIgnores, resetIO } = useContext(TeamCtx);\r\n  useEffect(() => setRenaming(false), [userInfo]);\r\n  if (!userInfo) return null;\r\n\r\n  const { userName, online, userID } = userInfo;\r\n  const self = userID === getUserID();\r\n  const ignored = ignores.has(userID) && !self;\r\n\r\n  const switchIgnore = () => {\r\n    setIgnores((prev) => {\r\n      if (prev.has(userID)) return prev.delete(userID);\r\n      return prev.add(userID);\r\n    });\r\n  };\r\n\r\n  const submitRename = (value: string) => {\r\n    const name = value.trim();\r\n    if (!name || name === userName) return setRenaming(false);\r\n    saveUserName(name);\r\n    resetIO();\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-item\" data-online={online}>\r\n      <UserAvatar userInfo={userInfo} size=\"small\" className=\"room-avatar\" />\r\n      {renaming || <span className=\"user-name\">{userName}</span>}\r\n      {renaming && (\r\n        <Search\r\n          autoFocus\r\n          className=\"rename-input\"\r\n          defaultValue={userName}\r\n          onSearch={submitRename}\r\n          enterButton={<Button icon={<CheckOutlined />} />}\r\n        />\r\n      )}\r\n      {self ? (\r\n        renaming || (\r\n          <Button\r\n            type=\"text\"\r\n            icon={<FormOutlined />}\r\n            onClick={() => setRenaming(true)}\r\n          />\r\n        )\r\n      ) : (\r\n        <Button\r\n          type=\"text\"\r\n          icon={ignored ? <EyeInvisibleOutlined /> : <EyeOutlined />}\r\n          onClick={switchIgnore}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ShareButton: FC = () => {\r\n  const [copied, setCopied] = useState(false);\r\n  const link = window.location.href;\r\n  const share = async () => {\r\n    try {\r\n      await copy(`${document.title}\\n${link}`);\r\n      setCopied(true);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  return (\r\n    <Button\r\n      icon={copied ? <CheckCircleFilled /> : <LinkOutlined />}\r\n      type={copied ? \"primary\" : \"default\"}\r\n      className=\"share-btn\"\r\n      onClick={share}\r\n      block\r\n    >\r\n      {copied ? \"Copied\" : \"Copy link\"}\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst RoomInfo: FC = () => {\r\n  const { code, userRec, connected, loadInfo, loadState, resetIO } =\r\n    useContext(TeamCtx);\r\n\r\n  const userList = useMemo(() => {\r\n    const selfID = getUserID();\r\n    const { [selfID]: selfInfo, ...otherUsers } = userRec;\r\n    if (!selfInfo) return [];\r\n    const values = Object.values(otherUsers);\r\n    return [selfInfo, ...sortBy(values, \"online\").reverse()];\r\n  }, [userRec]);\r\n\r\n  const onlineNum = useMemo(\r\n    () => userList.filter(({ online }) => online).length,\r\n    [userList]\r\n  );\r\n\r\n  const teamPop = (\r\n    <div className=\"team-popover\">\r\n      {connected || (\r\n        <Alert\r\n          className=\"disconn-alert\"\r\n          message=\"Network failed.\"\r\n          icon={<DisconnectOutlined />}\r\n          type=\"error\"\r\n          showIcon\r\n          banner\r\n        />\r\n      )}\r\n      <PasscodeInput\r\n        className=\"code-display\"\r\n        value={String(code)}\r\n        length={4}\r\n        plain\r\n      />\r\n      <ShareButton />\r\n      <Divider />\r\n      <div className=\"user-list\">\r\n        {userList.map((u) => (\r\n          <UserCard key={u.userID} userInfo={u} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const [reloading, setReloading] = useState(false);\r\n  const title = (\r\n    <div className=\"team-title\">\r\n      <span>Team info</span>\r\n      <Button\r\n        shape=\"circle\"\r\n        type=\"text\"\r\n        size=\"small\"\r\n        loading={reloading}\r\n        icon={<ReloadOutlined />}\r\n        onClick={async () => {\r\n          setReloading(true);\r\n          await loadInfo();\r\n          await loadState();\r\n          setReloading(false);\r\n          resetIO();\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Popover\r\n      content={teamPop}\r\n      trigger=\"click\"\r\n      placement=\"bottomRight\"\r\n      title={title}\r\n      getPopupContainer={(e) => e.parentElement!}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button\r\n        type=\"text\"\r\n        icon={\r\n          <Badge\r\n            status={connected ? \"success\" : \"error\"}\r\n            count={connected ? onlineNum : \"!\"}\r\n            size=\"small\"\r\n          >\r\n            <TeamOutlined />\r\n          </Badge>\r\n        }\r\n      />\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst JoinRoom: FC<{\r\n  instantSave: () => Promise<void> | undefined;\r\n}> = ({ instantSave }) => {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const nav = useNavigate();\r\n\r\n  const createRoom = async () => {\r\n    await instantSave();\r\n    const res = await putNote(noteID);\r\n    if (!res) return message.error(\"Can't create room.\");\r\n    await editNoteData(noteID, { team: true });\r\n    nav(\"/team/\" + noteID);\r\n  };\r\n\r\n  const showModal = () => {\r\n    Modal.confirm({\r\n      title: \"Enable team editing\",\r\n      content: \"This will make your note public to anyone with the link.\",\r\n      icon: <TeamOutlined style={{ color: \"#555\" }} />,\r\n      onOk: createRoom,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Button type=\"text\" icon={<UsergroupAddOutlined />} onClick={showModal} />\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { HeaderLeft } from \"./Left\";\r\nimport { HeaderMiddle } from \"./Middle\";\r\nimport { HeaderRight } from \"./Right\";\r\nimport \"./header.sass\";\r\n\r\nexport const Header: FC<{\r\n  saved: boolean;\r\n  handleUndo: () => void;\r\n  handleRedo: () => void;\r\n  undoable: boolean;\r\n  redoable: boolean;\r\n  instantSave: () => Promise<void> | undefined;\r\n}> = ({ saved, instantSave, ...undoProps }) => (\r\n  <header>\r\n    <HeaderLeft saved={saved} instantSave={instantSave} />\r\n    <HeaderMiddle {...undoProps} />\r\n    <HeaderRight instantSave={instantSave} />\r\n  </header>\r\n);\r\n","import { FC, useMemo, useState } from \"react\";\nimport { Input } from \"antd\";\nimport { NoteInfo } from \"lib/note/note\";\nimport dayjs from \"dayjs\";\nimport calender from \"dayjs/plugin/calendar\";\ndayjs.extend(calender);\n\nexport const InfoNav: FC<{\n  noteInfo: NoteInfo;\n  renameNote: (name: string) => void;\n}> = ({ noteInfo, renameNote }) => {\n  const [inputShow, setInputShow] = useState(false);\n  const [name, setName] = useState(noteInfo.name);\n\n  const [createDateShow, setCreateDateShow] = useState(false);\n  const { lastTime: lt, createTime: ct } = noteInfo;\n  const lastDate = useMemo(() => dayjs(lt).calendar(), [lt]);\n  const createDate = useMemo(() => dayjs(ct).calendar(), [ct]);\n\n  return (\n    <nav>\n      <div className=\"info\">\n        {inputShow ? (\n          <Input\n            className=\"title\"\n            size=\"large\"\n            bordered={false}\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            autoFocus\n            onBlur={() => {\n              renameNote(name);\n              setInputShow(false);\n            }}\n          />\n        ) : (\n          <p className=\"title\" onClick={() => setInputShow(true)}>\n            {name}\n          </p>\n        )}\n        <span className=\"time\" onClick={() => setCreateDateShow((p) => !p)}>\n          {createDateShow ? createDate : lastDate}\n          <span className=\"label\">\n            {createDateShow ? \" Created\" : \" Last Edited\"}\n          </span>\n        </span>\n      </div>\n    </nav>\n  );\n};\n","import {\r\n  FC,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useCallback,\r\n} from \"react\";\r\nimport { NoteInfo, NotePage, createPage, defaultNotePage } from \"lib/note/note\";\r\nimport { DrawCtrlProvider, useDrawCtrl } from \"lib/draw/DrawCtrl\";\r\nimport { NewPageInfo, pushAck, ReorderInfo } from \"lib/network/io\";\r\nimport { DarkModeProvider } from \"lib/Dark\";\r\nimport { useMemoizedFn as useEvent } from \"ahooks\";\r\nimport { SetOperation, StateSet } from \"lib/draw/StateSet\";\r\nimport { loadNote, editNoteData } from \"lib/note/archive\";\r\nimport { showPageDelMsg, showReopenMsg } from \"./tools/Messages\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport PageWrapper from \"component/PageWrapper\";\r\nimport { DrawState } from \"lib/draw/DrawState\";\r\nimport { useScrollPage } from \"./lib/scroll\";\r\nimport { debounce, last } from \"lodash\";\r\nimport { insertAfter } from \"./lib/array\";\r\nimport { PageNav } from \"./PageNav\";\r\nimport { AsideOpenProvider, Setter } from \"lib/hooks\";\r\nimport { AddPageButton } from \"./tools/AddButton\";\r\nimport { Header } from \"./Header\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport { Map } from \"immutable\";\r\nimport { message } from \"antd\";\r\nimport { InfoNav } from \"./Info\";\r\nimport \"./reader.sass\";\r\n\r\nexport interface ReaderStates {\r\n  noteID: string;\r\n  currPageID: string;\r\n  stateSet: StateSet;\r\n  pageRec: Map<string, NotePage>;\r\n  pageOrder: string[];\r\n  size: number;\r\n}\r\n\r\nexport interface ReaderMethods {\r\n  scrollPage: (pageID: string) => void;\r\n  switchPageMarked: (pageID: string) => void;\r\n  addPage: (prevPageID: string, copy?: boolean) => void;\r\n  addFinalPage: () => void;\r\n  deletePage: (pageID: string) => void;\r\n  saveReorder: (order: string[], push: boolean) => Promise<void>;\r\n  setSize: Setter<number>;\r\n}\r\n\r\nexport default function Reader() {\r\n  return (\r\n    <AsideOpenProvider>\r\n      <DarkModeProvider>\r\n        <DrawCtrlProvider>\r\n          <ReaderContent />\r\n        </DrawCtrlProvider>\r\n      </DarkModeProvider>\r\n    </AsideOpenProvider>\r\n  );\r\n}\r\n\r\nconst ReaderContent: FC = () => {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const nav = useNavigate();\r\n\r\n  const [pageRec, setPageRec] = useState<Map<string, NotePage>>();\r\n  const [noteInfo, setNoteInfo] = useState<NoteInfo>();\r\n  const [stateSet, setStateSet] = useState<StateSet>();\r\n  const [pageOrder, setPageOrder] = useState<string[]>();\r\n  const [saved, setSaved] = useState(true);\r\n\r\n  const { io, addTeamStatePage, checkOpID } = useContext(TeamCtx);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const storedNote = await loadNote(noteID);\r\n      if (!storedNote) {\r\n        message.error(\"Note not found\");\r\n        return nav(\"/\");\r\n      }\r\n      const { pageRec, pdf, pageOrder, ...noteInfo } = storedNote;\r\n      setPageRec(Map(pageRec));\r\n      setPageOrder(pageOrder);\r\n      setNoteInfo(noteInfo);\r\n      setStateSet(StateSet.createFromPages(pageRec));\r\n    })();\r\n  }, [nav, noteID]);\r\n\r\n  useEffect(() => {\r\n    if (!noteInfo) return;\r\n    document.title = noteInfo.name + \" - Multibility\";\r\n  }, [noteInfo]);\r\n\r\n  useEffect(() => {\r\n    document.body.classList.add(\"reader\");\r\n    return () => document.body.classList.remove(\"reader\");\r\n  }, []);\r\n\r\n  const saver = useEvent(async (withState = false) => {\r\n    let currPageRec = pageRec;\r\n    if (withState) {\r\n      stateSet?.getStates().forEach((ds, pageID) => {\r\n        currPageRec = currPageRec?.update(pageID, defaultNotePage, (page) => ({\r\n          ...page,\r\n          state: DrawState.flaten(ds),\r\n        }));\r\n      });\r\n      setPageRec(currPageRec);\r\n    }\r\n    const pr = currPageRec?.toObject();\r\n    await editNoteData(noteID, { pageRec: pr });\r\n    setSaved(true);\r\n  });\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const debouncedSave = useCallback(debounce(saver, 5000), [saver]);\r\n  const instantSave = debouncedSave.flush;\r\n\r\n  const savePageRec = (pageID: string, cb: (prev: NotePage) => NotePage) => {\r\n    setPageRec((prev) => prev?.update(pageID, defaultNotePage, cb));\r\n    setSaved(false);\r\n    debouncedSave();\r\n  };\r\n\r\n  const saveReorder = async (pageOrder: string[], push = false) => {\r\n    setPageOrder(pageOrder);\r\n    await editNoteData(noteID, { pageOrder });\r\n    await instantSave();\r\n    push && pushReorder(pageOrder);\r\n  };\r\n\r\n  const pushReorder = (pageOrder: string[]) =>\r\n    io?.emit(\"reorder\", { pageOrder });\r\n\r\n  const handleReorder = useEvent(\r\n    ({ deleted, pageOrder, prevOrder }: ReorderInfo) => {\r\n      saveReorder(pageOrder);\r\n      if (!deleted) return;\r\n      showPageDelMsg(() => saveReorder(prevOrder, true));\r\n    }\r\n  );\r\n\r\n  const handleNewPage = useEvent(\r\n    ({ pageOrder, pageID, newPage }: NewPageInfo) => {\r\n      saveReorder(pageOrder);\r\n      savePageRec(pageID, () => newPage);\r\n      setStateSet((prev) => prev?.addState(pageID, newPage));\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    io?.on(\"reorder\", handleReorder);\r\n    io?.on(\"newPage\", handleNewPage);\r\n    return () => void io?.removeAllListeners();\r\n  }, [io, handleReorder, handleNewPage]);\r\n\r\n  const pushOperation = (operation: SetOperation) => {\r\n    const handleSync = (t: number) => {\r\n      if (operation.type !== \"add\") return;\r\n      const { pageID, stroke } = operation;\r\n      const { uid } = stroke;\r\n      setStateSet((prev) => prev?.syncStrokeTime(pageID, uid, t));\r\n    };\r\n\r\n    io?.emit(\r\n      \"push\",\r\n      { operation },\r\n      ({ timestamp, prevID, currID }: pushAck) => {\r\n        handleSync(timestamp);\r\n        checkOpID(prevID, currID);\r\n      }\r\n    );\r\n  };\r\n\r\n  const pushNewPage = (\r\n    pageOrder: string[],\r\n    pageID: string,\r\n    newPage: NotePage\r\n  ) => {\r\n    const { image, marked, ...newTeamPage } = newPage;\r\n    io?.emit(\"newPage\", { pageOrder, pageID, newPage: newTeamPage });\r\n    addTeamStatePage(pageID, newPage);\r\n  };\r\n\r\n  const updateStateSet = (cb: (prevSS: StateSet) => StateSet) => {\r\n    if (!stateSet) return;\r\n    const newSS = cb(stateSet);\r\n    if (newSS === stateSet) return;\r\n    setStateSet(newSS);\r\n    setSaved(false);\r\n    debouncedSave(true);\r\n    const lastOp = newSS.lastOp;\r\n    lastOp && pushOperation(lastOp);\r\n  };\r\n\r\n  const switchPageMarked = (pageID: string) =>\r\n    savePageRec(pageID, (prev) => ({ ...prev, marked: !prev.marked }));\r\n\r\n  const addPage = (prevPageID: string, copy = false) => {\r\n    if (!pageOrder) return;\r\n    const prevPage = copy ? pageRec?.get(prevPageID) : undefined;\r\n    const [pageID, newPage] = createPage(prevPage);\r\n    const newOrder = insertAfter(pageOrder, prevPageID, pageID);\r\n    pushNewPage(newOrder, pageID, newPage);\r\n    saveReorder(newOrder);\r\n    savePageRec(pageID, () => newPage);\r\n    setStateSet((prev) => prev?.addState(pageID, newPage));\r\n  };\r\n\r\n  const addFinalPage = () => {\r\n    const lastPageID = last(pageOrder);\r\n    lastPageID && addPage(lastPageID);\r\n  };\r\n\r\n  const deletePage = (pageID: string) => {\r\n    const newOrder = pageOrder?.filter((id) => id !== pageID);\r\n    newOrder?.length && saveReorder(newOrder, true);\r\n  };\r\n\r\n  const [size, setSize] = useState(100);\r\n  const isFull = size === 100;\r\n  const pd = (100 - size) / 2 + \"%\";\r\n  const mainStyle = { paddingLeft: pd, paddingRight: pd };\r\n\r\n  const { setInviewRatios, scrollPage, sectionRef, currPageID, scrolling } =\r\n    useScrollPage(noteID, pageOrder, [size]);\r\n\r\n  const { finger } = useDrawCtrl();\r\n\r\n  useEffect(() => {\r\n    const bc = new BroadcastChannel(\"open note\");\r\n    bc.postMessage(noteID);\r\n    bc.onmessage = (e) => {\r\n      if (e.data !== noteID) return;\r\n      debouncedSave.cancel();\r\n      showReopenMsg(() => nav(\"/\"));\r\n    };\r\n    return () => bc.close();\r\n  }, [nav, noteID, debouncedSave]);\r\n\r\n  const renameNote = async (name: string) => {\r\n    if (name === noteInfo?.name) return;\r\n    await editNoteData(noteID, { name });\r\n    const storedNote = await loadNote(noteID);\r\n    if (!storedNote) return;\r\n    const { pageRec, pdf, pageOrder, ...info } = storedNote;\r\n    setNoteInfo(info);\r\n  };\r\n\r\n  if (!stateSet || !pageOrder || !pageRec || !noteInfo) return null;\r\n  const readerStates: ReaderStates = {\r\n    noteID,\r\n    pageRec,\r\n    pageOrder,\r\n    stateSet,\r\n    currPageID,\r\n    size,\r\n  };\r\n  const readerMethods: ReaderMethods = {\r\n    scrollPage,\r\n    switchPageMarked,\r\n    addFinalPage,\r\n    addPage,\r\n    deletePage,\r\n    saveReorder,\r\n    setSize,\r\n  };\r\n\r\n  return (\r\n    <div className=\"reader container\">\r\n      <Header\r\n        saved={saved}\r\n        instantSave={instantSave}\r\n        handleUndo={() => updateStateSet((prev) => prev.undo())}\r\n        handleRedo={() => updateStateSet((prev) => prev.redo())}\r\n        undoable={stateSet.isUndoable()}\r\n        redoable={stateSet.isRedoable()}\r\n      />\r\n      <InfoNav noteInfo={noteInfo} renameNote={renameNote} />\r\n      <main data-finger={finger} data-full={isFull} style={mainStyle}>\r\n        {pageOrder.map((uid) => (\r\n          <section key={uid} className=\"note-page\" ref={sectionRef(uid)}>\r\n            <PageContainer\r\n              uid={uid}\r\n              updateStateSet={updateStateSet}\r\n              setInviewRatios={setInviewRatios}\r\n              scrolling={scrolling}\r\n              {...readerStates}\r\n            />\r\n          </section>\r\n        ))}\r\n      </main>\r\n      <footer>\r\n        <AddPageButton addFinalPage={addFinalPage} />\r\n      </footer>\r\n      <PageNav {...readerStates} {...readerMethods} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PageContainer: FC<\r\n  {\r\n    uid: string;\r\n    updateStateSet: (cb: (prevSS: StateSet) => StateSet) => void;\r\n    setInviewRatios: Setter<Map<string, number>>;\r\n    scrolling: boolean;\r\n  } & ReaderStates\r\n> = ({\r\n  uid,\r\n  updateStateSet,\r\n  setInviewRatios,\r\n  scrolling,\r\n  pageRec,\r\n  stateSet,\r\n  currPageID,\r\n  pageOrder,\r\n  noteID,\r\n}) => {\r\n  const { teamState, ignores } = useContext(TeamCtx);\r\n\r\n  const page = pageRec.get(uid);\r\n  const drawState = stateSet.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n  const updateState = useEvent((ds: DrawState) => {\r\n    updateStateSet((prev) => prev.setState(uid, ds));\r\n  });\r\n\r\n  const onViewChange = useEvent((ratio: number) => {\r\n    if (!ratio) return setInviewRatios((prev) => prev.delete(uid));\r\n    setInviewRatios((prev) => prev.set(uid, ratio));\r\n  });\r\n\r\n  const preload = useMemo(() => {\r\n    if (!pageOrder) return false;\r\n    const currIndex = pageOrder.indexOf(currPageID);\r\n    const selfIndex = pageOrder.indexOf(uid);\r\n    return Math.abs(selfIndex - currIndex) <= 1;\r\n  }, [currPageID, uid, pageOrder]);\r\n\r\n  if (!page || !drawState) return null;\r\n  return (\r\n    <PageWrapper\r\n      drawState={drawState}\r\n      teamStateMap={teamStateMap}\r\n      updateState={updateState}\r\n      pdfIndex={page.pdfIndex}\r\n      noteID={noteID}\r\n      ignores={ignores}\r\n      onViewChange={onViewChange}\r\n      preload={preload}\r\n      skipInView={scrolling}\r\n    />\r\n  );\r\n};\r\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { useMemoizedFn as useEvent } from \"ahooks\";\r\nimport {\r\n  getTeamNoteState,\r\n  loadTeamNoteInfo,\r\n  updatePages,\r\n} from \"lib/network/http\";\r\nimport { IoFactory, NewPageInfo } from \"lib/network/io\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { showJoinMsg, showLeaveMsg } from \"./tools/Messages\";\r\nimport { TeamState } from \"lib/draw/TeamState\";\r\nimport { getUserID, UserInfo } from \"lib/user\";\r\nimport { NotePage } from \"lib/note/note\";\r\nimport { Socket } from \"socket.io-client\";\r\nimport { Setter } from \"lib/hooks\";\r\nimport { Loading } from \"component/Loading\";\r\nimport { message } from \"antd\";\r\nimport { Set } from \"immutable\";\r\nimport Reader from \"./Reader\";\r\nimport { DebouncedFunc, throttle } from \"lodash\";\r\nimport bytes from \"bytes\";\r\n\r\nexport const TeamCtx = React.createContext({\r\n  io: undefined as Socket | undefined,\r\n  code: 0,\r\n  teamOn: false,\r\n  connected: false,\r\n  ignores: Set<string>(),\r\n  userRec: {} as Record<string, UserInfo>,\r\n  teamState: undefined as TeamState | undefined,\r\n  resetIO: () => {},\r\n  loadInfo: async () => false,\r\n  loadState: (() => {}) as DebouncedFunc<() => Promise<boolean>>,\r\n  setIgnores: (() => {}) as Setter<Set<string>>,\r\n  addTeamStatePage: (pageID: string, newPage: NotePage) => {},\r\n  checkOpID: (prevID: string, currID: string) => {},\r\n});\r\n\r\nexport default function Team() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const [teamState, setTeamState] = useState<TeamState>();\r\n  const [code, setCode] = useState(-2);\r\n  const [userRec, setUserRec] = useState<Record<string, UserInfo>>({});\r\n  const [ignores, setIgnores] = useState(Set<string>());\r\n  const [io, setIO] = useState<Socket>();\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [connected, setConnected] = useState(false);\r\n  const nav = useNavigate();\r\n  const [loadingText, setLoadingText] = useState(\"\");\r\n\r\n  const loadInfo = useEvent(async () => {\r\n    setLoadingText(\"Loading note info...\");\r\n    const info = await loadTeamNoteInfo(noteID, (len) => {\r\n      setLoadingText(\"Downloading PDF: \" + bytes(len));\r\n    });\r\n    if (!info) {\r\n      message.error(\"Failed loading the team note info\");\r\n      return false;\r\n    }\r\n    setCode(info.code);\r\n    return true;\r\n  });\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const loadState = useCallback(\r\n    throttle(async (cb?: (len: number) => void) => {\r\n      setLoadingText(\"Loading team note...\");\r\n      const teamNote = await getTeamNoteState(noteID, (len) => {\r\n        if (len < 1024) return;\r\n        setLoadingText(\"Loading team note: \" + bytes(len));\r\n        cb?.(len);\r\n      });\r\n      if (!teamNote) {\r\n        message.error(\"Failed loading the team note state\");\r\n        return false;\r\n      }\r\n      setTeamState(TeamState.createFromTeamPages(teamNote));\r\n      return true;\r\n    }, 10_000),\r\n    [noteID]\r\n  );\r\n  const reloadState = () => {\r\n    const key = \"SYNC\";\r\n    const hide = message.loading({ content: \"Syncing...\", key });\r\n    loadState((len) => {\r\n      message.loading({ content: \"Syncing: \" + bytes(len), key });\r\n    })?.then(hide);\r\n  };\r\n\r\n  const resetIO = useEvent(() => setIO(IoFactory(noteID)));\r\n  const updateSelfState = useEvent(() => void updatePages(noteID));\r\n\r\n  const opID = useRef(\"\");\r\n  const checkOpID = useEvent((prevID: string, currID: string) => {\r\n    const lost = prevID && opID.current && prevID !== opID.current;\r\n    opID.current = currID;\r\n    if (lost) reloadState();\r\n  });\r\n  const resetOpID = useEvent((currID: string) => {\r\n    const lost = opID.current && opID.current !== currID;\r\n    opID.current = currID;\r\n    if (lost) reloadState();\r\n  });\r\n\r\n  useEffect(() => {\r\n    const roomInit = async () => {\r\n      const infoLoaded = await loadInfo();\r\n      const stateLoaded = await loadState();\r\n      if (!infoLoaded || !stateLoaded) return nav(\"/\");\r\n      setLoaded(true);\r\n      resetIO();\r\n      updateSelfState();\r\n    };\r\n    roomInit();\r\n    return updateSelfState;\r\n  }, [loadInfo, loadState, nav, resetIO, updateSelfState]);\r\n\r\n  useEffect(() => {\r\n    if (!io) return;\r\n    io.on(\"push\", ({ operation, userID, prevID, currID }) => {\r\n      setTeamState((prev) => prev?.pushOperation(operation, userID));\r\n      checkOpID(prevID, currID);\r\n    });\r\n\r\n    io.on(\"join\", ({ joined, members }) => {\r\n      const { userID, userName } = joined;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return;\r\n      showJoinMsg(userID, userName);\r\n    });\r\n\r\n    io.on(\"leave\", ({ leaved, members }) => {\r\n      const { userID, userName } = leaved;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return io.emit(\"join\");\r\n      showLeaveMsg(userID, userName);\r\n    });\r\n\r\n    io.on(\"newPage\", (info: NewPageInfo) => {\r\n      const { pageID, newPage } = info;\r\n      setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n    });\r\n\r\n    io.on(\"reset\", ({ userID, pageRec }) => {\r\n      if (userID === getUserID()) return;\r\n      setTeamState((prev) => prev?.resetUser(userID, pageRec));\r\n    });\r\n\r\n    io.on(\"connect_error\", console.error);\r\n    io.on(\"disconnect\", () => setConnected(false));\r\n    io.on(\"connect\", () => setConnected(true));\r\n    io.on(\"connected\", ({ currID }) => resetOpID(currID));\r\n\r\n    return () => {\r\n      io.removeAllListeners();\r\n      io.close();\r\n    };\r\n  }, [io, checkOpID, resetOpID]);\r\n\r\n  const addTeamStatePage = (pageID: string, newPage: NotePage) => {\r\n    setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n  };\r\n\r\n  return (\r\n    <Loading loading={!loaded} text={loadingText}>\r\n      <TeamCtx.Provider\r\n        value={{\r\n          io,\r\n          code,\r\n          teamOn: true,\r\n          ignores,\r\n          userRec,\r\n          connected,\r\n          teamState,\r\n          resetIO,\r\n          loadInfo,\r\n          loadState,\r\n          setIgnores,\r\n          addTeamStatePage,\r\n          checkOpID,\r\n        }}\r\n      >\r\n        <Reader />\r\n      </TeamCtx.Provider>\r\n    </Loading>\r\n  );\r\n}\r\n","import { io } from \"socket.io-client\";\r\nimport { NotePage } from \"lib/note/note\";\r\nimport { getUserID, getUserName } from \"lib/user\";\r\nimport { BASE_URL } from \"./http\";\r\n\r\nexport const IoFactory = (noteID: string) =>\r\n  io(BASE_URL, {\r\n    query: {\r\n      userID: getUserID(),\r\n      userName: getUserName(),\r\n      noteID,\r\n    },\r\n  });\r\n\r\nexport interface ReorderInfo {\r\n  pageOrder: string[];\r\n  prevOrder: string[];\r\n  deleted: boolean;\r\n}\r\n\r\nexport interface NewPageInfo {\r\n  pageOrder: string[];\r\n  pageID: string;\r\n  newPage: NotePage;\r\n}\r\n\r\nexport interface pushAck {\r\n  timestamp: number;\r\n  prevID: string;\r\n  currID: string;\r\n}\r\n","import { Button, message, Modal } from \"antd\";\r\nimport { LoginOutlined, LogoutOutlined, HomeFilled } from \"@ant-design/icons\";\r\n\r\nexport const showPageDelMsg = (onUndo: () => void) => {\r\n  message.warning({\r\n    content: (\r\n      <>\r\n        One page was deleted.\r\n        <Button\r\n          size=\"small\"\r\n          type=\"link\"\r\n          onClick={() => {\r\n            message.destroy(\"DELETE\");\r\n            onUndo();\r\n          }}\r\n        >\r\n          Undo\r\n        </Button>\r\n      </>\r\n    ),\r\n    key: \"DELETE\",\r\n    duration: 10,\r\n  });\r\n};\r\n\r\nexport const showJoinMsg = (userID: string, userName: string) => {\r\n  message.success({\r\n    content: `${userName} joined the room`,\r\n    icon: <LoginOutlined />,\r\n    key: userID,\r\n  });\r\n};\r\n\r\nexport const showLeaveMsg = (userID: string, userName: string) => {\r\n  message.warning({\r\n    content: `${userName} leaved the room`,\r\n    icon: <LogoutOutlined />,\r\n    key: userID,\r\n  });\r\n};\r\n\r\nexport const showReopenMsg = (onOk: () => void) => {\r\n  Modal.error({\r\n    title: \"This note is opened in another tab.\",\r\n    okText: \"Back\",\r\n    okButtonProps: { icon: <HomeFilled /> },\r\n    onOk,\r\n  });\r\n};\r\n"],"names":["defaultRecord","states","Map","editStack","List","undoStack","defaultFactory","Record","StateSet","immutable","lastOp","this","getImmutable","get","pageID","getStates","drawState","prevDS","getOneState","currRecord","update","s","set","l","push","delete","uid","timestamp","DrawState","notePage","state","ratio","newDS","getEditStack","size","getUndoStack","isUndoable","lastUid","last","lastSetOp","pop","isRedoable","pageRec","map","scrollForage","localforage","name","persistScroll","debounce","noteID","currPageID","setItem","largestKey","order","result","maxRatio","key","insertAfter","list","prevItem","newItem","prevIndex","indexOf","curr","slice","splice","UserAvatar","userInfo","onClick","chosen","className","color","useMemo","getHashedColor","userID","userName","style","backgroundColor","AddPageButton","addFinalPage","type","icon","PlusOutlined","block","PageNav","props","useState","left","setLeft","useAsideOpen","asideOpen","opposite","draggableId","index","isDragDisabled","innerRef","ref","CSSTransition","in","timeout","unmountOnExit","initKey","onDragEnd","destination","droppableId","direction","droppableProps","placeholder","isDraggingOver","PreviewCard","useActiveKey","activeKey","setAsideOpen","title","ALL","MARKED","WRITTEN","useSwipeable","onSwipedLeft","onSwipedRight","swipeDuration","swipeRef","swipeHandler","draggableProps","dragHandleProps","isDragging","isDropAnimating","e","PreviewTabs","PageList","cardDragged","PreviewFooter","React","refRec","useRef","pageOrder","saveReorder","initScroll","useEvent","current","scrollIntoView","useLayoutEffect","source","fromIndex","toIndex","newOrder","removed","exchange","isDropDisabled","PagePreview","pageIndex","displayName","stateSet","scrollPage","useContext","TeamCtx","teamState","ignores","setChosen","page","teamStateMap","getOnePageStateMap","marked","userIDs","TeamState","isEmpty","PageWrapper","undefined","thumbnail","image","preview","skipInView","PreviewTools","switchPageMarked","stopPropagation","PreviewOption","TeamAvatars","userRec","maxCount","classNames","maxPopoverPlacement","prev","addPage","deletePage","menu","items","label","CopyOutlined","DeleteOutlined","danger","content","trigger","placement","destroyTooltipOnHide","getPopupContainer","parentElement","MoreOutlined","setActiveKey","TabPane","Tabs","onChange","tabBarGutter","centered","tab","IconFont","setSize","jumpMenu","pageSize","total","length","simple","sizeMenu","range","ReadOutlined","overlay","ShrinkOutlined","HeaderLeft","saved","instantSave","nav","useNavigate","HomeFilled","opacity","disabled","SaveOutlined","btnProps","shape","HeaderMiddle","handleUndo","handleRedo","undoable","redoable","useDrawCtrl","mode","finger","updateDrawCtrl","useUpdateDrawCtrl","useForceLight","forceLight","setForceLight","UndoOutlined","RedoOutlined","message","BulbFilled","BulbOutlined","PenButton","EraserButton","SelectButton","drawCtrl","PenPanel","HighlightTwoTone","twoToneColor","HighlightOutlined","pixelEraser","options","value","field","lasso","GatewayOutlined","HeaderRight","teamOn","RoomInfo","JoinRoom","PageNavButton","MenuOutlined","UserCard","renaming","setRenaming","setIgnores","resetIO","useEffect","online","self","getUserID","ignored","has","Search","autoFocus","defaultValue","onSearch","trim","saveUserName","enterButton","CheckOutlined","FormOutlined","EyeInvisibleOutlined","EyeOutlined","add","ShareButton","copied","setCopied","link","window","location","href","share","copy","document","console","log","CheckCircleFilled","LinkOutlined","code","connected","loadInfo","loadState","userList","selfID","selfInfo","otherUsers","values","Object","sortBy","reverse","onlineNum","filter","teamPop","DisconnectOutlined","showIcon","banner","String","plain","u","reloading","setReloading","loading","ReloadOutlined","status","count","TeamOutlined","useParams","createRoom","putNote","editNoteData","team","UsergroupAddOutlined","Modal","onOk","Header","undoProps","dayjs","calender","InfoNav","noteInfo","renameNote","inputShow","setInputShow","setName","createDateShow","setCreateDateShow","lt","lastTime","ct","createTime","lastDate","calendar","createDate","bordered","target","onBlur","p","Reader","Dark","DrawCtrl","ReaderContent","setPageRec","setNoteInfo","setStateSet","setPageOrder","setSaved","io","addTeamStatePage","checkOpID","loadNote","storedNote","pdf","createFromPages","body","classList","remove","saver","withState","currPageRec","forEach","ds","defaultNotePage","pr","toObject","debouncedSave","useCallback","flush","savePageRec","cb","pushReorder","emit","handleReorder","deleted","prevOrder","showPageDelMsg","handleNewPage","newPage","addState","on","removeAllListeners","pushOperation","operation","prevID","currID","t","stroke","syncStrokeTime","handleSync","pushNewPage","newTeamPage","updateStateSet","newSS","prevPageID","prevPage","createPage","lastPageID","isFull","pd","mainStyle","paddingLeft","paddingRight","deps","refMap","setRefMap","scrolled","setPrevPageID","getItem","stored","section","inviewRatios","setInviewRatios","deferredRatios","useDeferredValue","deferredOrder","calcScrollY","header","previousElementSibling","getBoundingClientRect","top","height","scrollY","scrollToCurr","scrollBy","sectionRef","el","taskID","scrolling","setScrolling","addEventListener","handleScroll","clearTimeout","setTimeout","removeEventListener","behavior","useDebugValue","useScrollPage","bc","BroadcastChannel","postMessage","onmessage","data","cancel","showReopenMsg","close","info","readerStates","readerMethods","id","undo","redo","PageContainer","updateState","setState","onViewChange","preload","currIndex","selfIndex","Math","abs","pdfIndex","Set","Team","setTeamState","setCode","setUserRec","setIO","loaded","setLoaded","setConnected","loadingText","setLoadingText","loadTeamNoteInfo","len","bytes","throttle","getTeamNoteState","teamNote","reloadState","hide","then","BASE_URL","query","getUserName","IoFactory","updateSelfState","updatePages","opID","lost","resetOpID","roomInit","infoLoaded","stateLoaded","joined","members","showJoinMsg","leaved","showLeaveMsg","resetUser","error","Loading","text","Provider","onUndo","duration","okText","okButtonProps"],"sourceRoot":""}