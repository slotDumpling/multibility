{"version":3,"file":"static/js/57.62df207e.chunk.js","mappings":"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","sources":["component/menu/RightTools.tsx","component/menu/LeftTools.tsx","component/menu/NoteList.tsx","component/menu/MainMenu.tsx","component/menu/SideMenu.tsx","component/ui/SwipeDelete.tsx","lib/color.ts","lib/draw/DrawState.ts","lib/network/http.ts","lib/note/archive.ts","lib/note/note.ts","lib/user.ts"],"sourcesContent":["import {\r\n  Button,\r\n  ButtonProps,\r\n  Input,\r\n  Menu,\r\n  message,\r\n  Popconfirm,\r\n  Popover,\r\n  Progress,\r\n} from \"antd\";\r\nimport { createContext, ReactNode, useContext, useState } from \"react\";\r\nimport { createNewNote } from \"../../lib/note/archive\";\r\nimport { MenuStateCtx, MenuMethodCtx } from \"./MainMenu\";\r\nimport {\r\n  TeamOutlined,\r\n  UserOutlined,\r\n  SyncOutlined,\r\n  ClearOutlined,\r\n  InboxOutlined,\r\n  FilePdfOutlined,\r\n  SettingOutlined,\r\n  CaretDownOutlined,\r\n  ArrowLeftOutlined,\r\n} from \"@ant-design/icons\";\r\nimport * as serviceWorkerRegistration from \"../.././serviceWorkerRegistration\";\r\nimport { getUserName, saveUserName } from \"../../lib/user\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { getNoteID } from \"../../lib/network/http\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Dragger from \"antd/lib/upload/Dragger\";\r\nimport { PasscodeInput } from \"antd-mobile\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport localforage from \"localforage\";\r\nimport { useEffect } from \"react\";\r\nimport { FC } from \"react\";\r\nimport \"./rightTools.sass\";\r\n\r\nconst OthersCtx = createContext({\r\n  setActive: (() => {}) as Setter<string>,\r\n});\r\n\r\nexport default function RightTools() {\r\n  return (\r\n    <div className=\"right-tools\">\r\n      <JoinTeamButton />\r\n      <OthersButton />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst OthersMenu = () => {\r\n  const { setActive } = useContext(OthersCtx);\r\n  return (\r\n    <div className=\"other-menu\">\r\n      <Menu\r\n        onClick={({ key }) => setActive(key)}\r\n        items={[\r\n          { key: \"PDF\", icon: <FilePdfOutlined />, label: \"Import PDF\" },\r\n          { key: \"PROFILE\", icon: <UserOutlined />, label: \"My profile\" },\r\n          { key: \"SETTINGS\", icon: <SettingOutlined />, label: \"Settings\" },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SeconaryMenu: FC<{\r\n  children: ReactNode;\r\n  title: string;\r\n}> = ({ children, title }) => {\r\n  const { setActive } = useContext(OthersCtx);\r\n  return (\r\n    <div className=\"secondary\">\r\n      <nav>\r\n        <Button\r\n          type=\"text\"\r\n          shape=\"circle\"\r\n          onClick={() => setActive(\"MENU\")}\r\n          icon={<ArrowLeftOutlined />}\r\n        />\r\n        <h3>{title}</h3>\r\n      </nav>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction UploadPdfPage() {\r\n  const [loading, setLoading] = useState(false);\r\n  const { tagUid } = useContext(MenuStateCtx);\r\n  const { setAllTags, setAllNotes } = useContext(MenuMethodCtx);\r\n  const [percent, setPercent] = useState(0);\r\n\r\n  async function handleFile(file: File) {\r\n    if (file.type !== \"application/pdf\") return;\r\n    setLoading(true);\r\n    const { LoadPDF } = await import(\"../../lib/note/pdfImage\");\r\n    const note = await LoadPDF(file, setPercent);\r\n    note.tagID = tagUid;\r\n    const { tags, allNotes } = await createNewNote(note);\r\n    setAllTags(tags);\r\n    setAllNotes(allNotes);\r\n    setLoading(false);\r\n    message.success(\"PDF Loaded\");\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <SeconaryMenu title=\"Import PDF\">\r\n      <Dragger\r\n        disabled={loading}\r\n        multiple={false}\r\n        action=\"#\"\r\n        accept=\"application/pdf\"\r\n        beforeUpload={handleFile}\r\n      >\r\n        <p className=\"ant-upload-drag-icon\">\r\n          {loading ? (\r\n            <Progress width={48} type=\"circle\" percent={percent} />\r\n          ) : (\r\n            <InboxOutlined />\r\n          )}\r\n        </p>\r\n        <p className=\"ant-upload-hint\">Click or drag a pdf file here.</p>\r\n      </Dragger>\r\n    </SeconaryMenu>\r\n  );\r\n}\r\n\r\nconst ProfilePage = () => {\r\n  const userName = getUserName();\r\n  const [name, setName] = useState(userName);\r\n  const { setActive } = useContext(OthersCtx);\r\n  const handleEnter = () => {\r\n    if (!name) return;\r\n    saveUserName(name);\r\n    setActive(\"MENU\");\r\n  };\r\n  return (\r\n    <SeconaryMenu title=\"My profile\">\r\n      <div className=\"profile-page\">\r\n        <Input\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          prefix={<UserOutlined />}\r\n          allowClear\r\n        />\r\n        <Button\r\n          disabled={userName === name || !name}\r\n          onClick={handleEnter}\r\n          type=\"primary\"\r\n          block\r\n        >\r\n          OK\r\n        </Button>\r\n      </div>\r\n    </SeconaryMenu>\r\n  );\r\n};\r\n\r\nconst SettingsPage = () => {\r\n  const { menuInit } = useContext(MenuMethodCtx);\r\n\r\n  const clearAll = async () => {\r\n    await localforage.clear();\r\n    menuInit();\r\n  };\r\n\r\n  return (\r\n    <SeconaryMenu title=\"Settings\">\r\n      <div className=\"setting-menu\">\r\n        <Button\r\n          icon={<SyncOutlined />}\r\n          onClick={async () => {\r\n            await serviceWorkerRegistration.unregister();\r\n            window.location.reload();\r\n          }}\r\n          block\r\n        >\r\n          Update\r\n        </Button>\r\n        <Popconfirm\r\n          title=\"Everything will be deleted.\"\r\n          onConfirm={clearAll}\r\n          icon={<ClearOutlined />}\r\n          okText=\"Delete\"\r\n          okType=\"danger\"\r\n          okButtonProps={{ type: \"primary\" }}\r\n          cancelText=\"Cancel\"\r\n          placement=\"bottom\"\r\n        >\r\n          <Button icon={<ClearOutlined />} danger block>\r\n            Clear all\r\n          </Button>\r\n        </Popconfirm>\r\n      </div>\r\n    </SeconaryMenu>\r\n  );\r\n};\r\n\r\nconst OthersPage = () => {\r\n  const [height, setHeight] = useState(0);\r\n  const [active, setActive] = useState(\"\");\r\n\r\n  const calcHeight = (el: HTMLElement) => {\r\n    setHeight(el.clientHeight);\r\n  };\r\n\r\n  const cssProps = {\r\n    timeout: 300,\r\n    onEnter: calcHeight,\r\n    unmountOnExit: true,\r\n  };\r\n\r\n  const cssProps2 = {\r\n    ...cssProps,\r\n    classNames: \"secondary\",\r\n  };\r\n\r\n  useEffect(() => setActive(\"MENU\"), []);\r\n\r\n  return (\r\n    <OthersCtx.Provider value={{ setActive }}>\r\n      <section className=\"others-menu\" style={{ height }}>\r\n        <CSSTransition\r\n          classNames=\"primary\"\r\n          in={active === \"MENU\"}\r\n          {...cssProps}\r\n        >\r\n          <OthersMenu />\r\n        </CSSTransition>\r\n        <CSSTransition in={active === \"PDF\"} {...cssProps2}>\r\n          <UploadPdfPage />\r\n        </CSSTransition>\r\n        <CSSTransition in={active === \"PROFILE\"} {...cssProps2}>\r\n          <ProfilePage />\r\n        </CSSTransition>\r\n        <CSSTransition in={active === \"SETTINGS\"} {...cssProps2}>\r\n          <SettingsPage />\r\n        </CSSTransition>\r\n      </section>\r\n    </OthersCtx.Provider>\r\n  );\r\n};\r\n\r\nconst OthersButton = () => {\r\n  const btnProps: ButtonProps = {\r\n    shape: \"circle\",\r\n    icon: <CaretDownOutlined />,\r\n  };\r\n  return (\r\n    <Popover\r\n      placement=\"bottomRight\"\r\n      trigger=\"click\"\r\n      content={<OthersPage />}\r\n      zIndex={900}\r\n    >\r\n      <Button className=\"large\" {...btnProps} />\r\n      <Button className=\"small\" type=\"text\" {...btnProps} />\r\n    </Popover>\r\n  );\r\n};\r\n\r\nfunction JoinTeamButton() {\r\n  const [roomCode, setRoomCode] = useState(\"\");\r\n  const [wrong, setWrong] = useState(false);\r\n\r\n  const nav = useNavigate();\r\n  async function handleSubmit(code: string) {\r\n    const noteID = await getNoteID(code);\r\n    if (noteID) return nav(`/team/${noteID}`);\r\n    setRoomCode(\"\");\r\n    setWrong(true);\r\n  }\r\n\r\n  return (\r\n    <Popover\r\n      placement=\"bottomRight\"\r\n      trigger=\"click\"\r\n      title=\"Join a team note\"\r\n      destroyTooltipOnHide\r\n      onVisibleChange={() => setWrong(false)}\r\n      content={\r\n        <PasscodeInput\r\n          plain\r\n          length={4}\r\n          error={wrong}\r\n          value={roomCode}\r\n          onChange={(v) => {\r\n            setWrong(false);\r\n            setRoomCode(v);\r\n          }}\r\n          onFill={handleSubmit}\r\n        />\r\n      }\r\n    >\r\n      <Button className=\"team-btn large\" shape=\"round\" icon={<TeamOutlined />}>\r\n        Team\r\n      </Button>\r\n      <Button\r\n        className=\"team-btn small\"\r\n        type=\"text\"\r\n        shape=\"circle\"\r\n        icon={<TeamOutlined />}\r\n      />\r\n    </Popover>\r\n  );\r\n}\r\n","import { Button, Drawer } from \"antd\";\r\nimport { useContext, useState } from \"react\";\r\nimport { MenuStateCtx, MenuMethodCtx } from \"./MainMenu\";\r\nimport { MenuOutlined } from \"@ant-design/icons\";\r\nimport SideMenu from \"./SideMenu\";\r\n\r\nexport default function LeftTools() {\r\n  const [asideOn, setAsideOn] = useState(false);\r\n  const { editing } = useContext(MenuStateCtx);\r\n  const { setEditing } = useContext(MenuMethodCtx);\r\n\r\n  function swichEditing() {\r\n    setEditing((prev) => !prev);\r\n  }\r\n\r\n  const editButton = (\r\n    <Button\r\n      className=\"edit-btn large\"\r\n      onClick={swichEditing}\r\n      type={editing ? \"primary\" : \"text\"}\r\n    >\r\n      {editing ? \"Done\" : \"Edit\"}\r\n    </Button>\r\n  );\r\n\r\n  const AsideButton = (\r\n    <>\r\n      <Button\r\n        className=\"aside-btn\"\r\n        type=\"text\"\r\n        icon={<MenuOutlined />}\r\n        onClick={() => setAsideOn((prev) => !prev)}\r\n      />\r\n      <Drawer\r\n        className=\"aside-drawer\"\r\n        width={300}\r\n        placement=\"left\"\r\n        closable={false}\r\n        visible={asideOn}\r\n        onClose={() => setAsideOn(false)}\r\n        contentWrapperStyle={{ boxShadow: \"none\" }}\r\n        bodyStyle={{ padding: 0, overflow: \"hidden\" }}\r\n        destroyOnClose\r\n      >\r\n        <SideMenu onSelect={() => editing || setAsideOn(false)} />\r\n      </Drawer>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div className=\"left-tools\">\r\n      {AsideButton}\r\n      {editButton}\r\n    </div>\r\n  );\r\n}\r\n","import { FC, useMemo, useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  NoteTag,\r\n  deleteNote,\r\n  moveNoteTag,\r\n  editNoteData,\r\n} from \"../../lib/note/archive\";\r\nimport {\r\n  SwapOutlined,\r\n  TagsOutlined,\r\n  FileOutlined,\r\n  CloudOutlined,\r\n  DeleteOutlined,\r\n  SearchOutlined,\r\n  FileTextOutlined,\r\n  SortAscendingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Button, Input, Popconfirm, Tag, Dropdown, Menu } from \"antd\";\r\nimport { MenuStateCtx, MenuMethodCtx } from \"./MainMenu\";\r\nimport { NoteInfo } from \"../../lib/note/note\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport SwipeDelete from \"../ui/SwipeDelete\";\r\nimport dafaultImg from \"../ui/default.png\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { TagCircle } from \"./SideMenu\";\r\nimport { List, Set } from \"immutable\";\r\nimport classNames from \"classnames\";\r\nimport dayjs from \"dayjs\";\r\nimport calender from \"dayjs/plugin/calendar\";\r\ndayjs.extend(calender);\r\n\r\nexport default function NoteList({ noteList }: { noteList: List<NoteInfo> }) {\r\n  const [nowSwiped, setNowSwiped] = useState(\"\");\r\n  const { editing } = useContext(MenuStateCtx);\r\n  const { setAllTags, setAllNotes } = useContext(MenuMethodCtx);\r\n  const [sortType, setSortType] = useState(\"LAST\");\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [selectedNotes, setSelectNotes] = useState(Set<string>());\r\n\r\n  const removeNotes = async (uids: string[]) => {\r\n    let tags: Record<string, NoteTag> | undefined;\r\n    let allNotes: Record<string, NoteInfo> | undefined;\r\n    for (let uid of uids) {\r\n      const res = await deleteNote(uid);\r\n      tags = res.tags;\r\n      allNotes = res.allNotes;\r\n    }\r\n    tags && setAllTags(tags);\r\n    allNotes && setAllNotes(allNotes);\r\n  };\r\n\r\n  const moveNotes = async (noteIDs: string[], tagID: string) => {\r\n    let tags: Record<string, NoteTag> | undefined;\r\n    let allNotes: Record<string, NoteInfo> | undefined;\r\n    for (let noteID of noteIDs) {\r\n      const res = await moveNoteTag(noteID, tagID);\r\n      tags = res.tags;\r\n      allNotes = res.allNotes;\r\n    }\r\n    tags && setAllTags(tags);\r\n    allNotes && setAllNotes(allNotes);\r\n  };\r\n\r\n  const sortedList = useMemo(() => {\r\n    const comparator = (t0: number, t1: number) => t1 - t0;\r\n    switch (sortType) {\r\n      case \"CREATE\":\r\n        return noteList.sortBy((n) => n.createTime, comparator);\r\n      case \"LAST\":\r\n        return noteList.sortBy((n) => n.lastTime, comparator);\r\n      case \"NAME\":\r\n        return noteList.sortBy((n) => n.name.toUpperCase());\r\n      default:\r\n        return noteList;\r\n    }\r\n  }, [noteList, sortType]);\r\n\r\n  const filterdList = useMemo(\r\n    () =>\r\n      sortedList.filter((n) =>\r\n        n.name.toUpperCase().includes(searchText.trim().toUpperCase())\r\n      ),\r\n    [searchText, sortedList]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setSearchText(\"\");\r\n    setSelectNotes(Set());\r\n  }, [noteList, editing]);\r\n\r\n  return (\r\n    <section className=\"note-list\">\r\n      <HeadTools\r\n        sortType={sortType}\r\n        setSortType={setSortType}\r\n        searchText={searchText}\r\n        setSearchText={setSearchText}\r\n        onDelete={() => removeNotes(selectedNotes.toArray())}\r\n        onMove={(tagID) => moveNotes(selectedNotes.toArray(), tagID)}\r\n        disabled={selectedNotes.size === 0}\r\n      />\r\n      {filterdList.map((noteInfo) => {\r\n        const { uid } = noteInfo;\r\n        const removeNote = () => removeNotes([uid]);\r\n        return (\r\n          <SwipeDelete\r\n            onDelete={removeNote}\r\n            nowSwiped={nowSwiped}\r\n            setNowSwiped={setNowSwiped}\r\n            disable={editing}\r\n            uid={uid}\r\n            key={uid}\r\n          >\r\n            <NoteItem\r\n              noteInfo={noteInfo}\r\n              selected={selectedNotes.has(uid)}\r\n              setSelectNotes={setSelectNotes}\r\n            />\r\n          </SwipeDelete>\r\n        );\r\n      })}\r\n    </section>\r\n  );\r\n}\r\n\r\nconst HeadTools: FC<{\r\n  sortType: string;\r\n  setSortType: Setter<string>;\r\n  searchText: string;\r\n  setSearchText: Setter<string>;\r\n  onDelete: () => void;\r\n  onMove: (tagID: string) => void;\r\n  disabled: boolean;\r\n}> = ({\r\n  sortType,\r\n  setSortType,\r\n  searchText,\r\n  setSearchText,\r\n  onDelete,\r\n  onMove,\r\n  disabled = true,\r\n}) => {\r\n  const { editing, allTags } = useContext(MenuStateCtx);\r\n\r\n  const sortMenu = (\r\n    <Menu\r\n      onClick={({ key }) => setSortType(key)}\r\n      selectedKeys={[sortType]}\r\n      className=\"sort-drop\"\r\n      items={[\r\n        {\r\n          type: \"group\",\r\n          label: \"Sort by\",\r\n          children: [\r\n            { icon: <FileOutlined />, key: \"CREATE\", label: \"Date created\" },\r\n            { icon: <FileTextOutlined />, key: \"LAST\", label: \"Date modified\" },\r\n            { icon: <SortAscendingOutlined />, key: \"NAME\", label: \"Name\" },\r\n          ],\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n\r\n  const sortButton = (\r\n    <Dropdown overlay={sortMenu} trigger={[\"click\"]} placement=\"bottom\">\r\n      <Button\r\n        className=\"sort-btn\"\r\n        type=\"text\"\r\n        shape=\"circle\"\r\n        icon={<SwapOutlined rotate={90} />}\r\n      />\r\n    </Dropdown>\r\n  );\r\n\r\n  const deleteButton = (\r\n    <Popconfirm\r\n      title=\"Notes will be deleted.\"\r\n      onConfirm={onDelete}\r\n      icon={<DeleteOutlined />}\r\n      placement=\"bottom\"\r\n      cancelText=\"Cancel\"\r\n      disabled={disabled}\r\n      okText=\"Delete\"\r\n      okType=\"danger\"\r\n      okButtonProps={{ type: \"primary\" }}\r\n    >\r\n      <Button\r\n        className=\"del-btn\"\r\n        shape=\"round\"\r\n        type=\"text\"\r\n        disabled={disabled}\r\n        danger={!disabled}\r\n        icon={<DeleteOutlined />}\r\n      >\r\n        Delete\r\n      </Button>\r\n    </Popconfirm>\r\n  );\r\n\r\n  const ColorLabel: FC<{\r\n    color: string;\r\n    name: string;\r\n  }> = ({ color, name }) => (\r\n    <div className=\"tag-select\">\r\n      <TagCircle color={color} />\r\n      <span className=\"name\">{name}</span>\r\n    </div>\r\n  );\r\n\r\n  const overlay = (\r\n    <Menu\r\n      onClick={({ key }) => onMove(key)}\r\n      items={[\r\n        {\r\n          key: \"DEFAULT\",\r\n          label: <ColorLabel color=\"#eee\" name=\"No tag\" />,\r\n        },\r\n        ...Object.values(allTags).map((t) => ({\r\n          key: t.uid,\r\n          label: <ColorLabel color={t.color} name={t.name} />,\r\n        })),\r\n      ]}\r\n    />\r\n  );\r\n\r\n  const tagButton = (\r\n    <Dropdown\r\n      disabled={disabled}\r\n      overlay={overlay}\r\n      trigger={[\"click\"]}\r\n      placement=\"bottom\"\r\n    >\r\n      <Button\r\n        shape=\"round\"\r\n        type=\"text\"\r\n        className=\"tag-btn\"\r\n        icon={<TagsOutlined />}\r\n        style={{ transition: \"none\" }}\r\n      >\r\n        Tag\r\n      </Button>\r\n    </Dropdown>\r\n  );\r\n\r\n  return (\r\n    <div className={classNames(\"head-tools\", { editing })}>\r\n      {editing ? (\r\n        <>\r\n          {tagButton}\r\n          {deleteButton}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Input\r\n            value={searchText}\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n            className=\"search-input\"\r\n            prefix={<SearchOutlined />}\r\n            bordered={false}\r\n            allowClear\r\n          />\r\n          {sortButton}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NoteItem: FC<{\r\n  noteInfo: NoteInfo;\r\n  selected: boolean;\r\n  setSelectNotes: Setter<Set<string>>;\r\n}> = ({ noteInfo, selected, setSelectNotes }) => {\r\n  const { team, uid, name, thumbnail, lastTime } = noteInfo;\r\n  const date = useMemo(() => dayjs(lastTime).calendar(), [lastTime]);\r\n  const href = `${team ? \"team\" : \"reader\"}/${uid}`;\r\n\r\n  const { editing } = useContext(MenuStateCtx);\r\n  const { setAllNotes } = useContext(MenuMethodCtx);\r\n  const [noteName, setNoteName] = useState(name);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const nav = useNavigate();\r\n\r\n  const saveNoteName = () => {\r\n    const newName = noteName.trim();\r\n    if (!newName || newName === name) return setNoteName(name);\r\n    editNoteData(uid, { name: newName });\r\n    setAllNotes((prev) => ({\r\n      ...prev,\r\n      [uid]: { ...prev[uid], name: newName },\r\n    }));\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (!editing) return nav(href);\r\n    setSelectNotes((prev) => {\r\n      if (prev.has(uid)) return prev.delete(uid);\r\n      return prev.add(uid);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classNames(\"note-item\", { selected, loaded })}\r\n      onClick={handleClick}\r\n      onAnimationEnd={() => setLoaded(true)}\r\n    >\r\n      <div className=\"timg-wrapper\">\r\n        <img src={thumbnail || dafaultImg} alt={name} className=\"timg\" />\r\n        {team && (\r\n          <Tag color=\"blue\" className=\"cloud-icon\">\r\n            <CloudOutlined />\r\n          </Tag>\r\n        )}\r\n      </div>\r\n      <div className=\"content\">\r\n        {editing || <p className=\"name\">{name}</p>}\r\n        {editing && (\r\n          <Input\r\n            className=\"name-input\"\r\n            value={noteName}\r\n            onChange={(e) => setNoteName(e.target.value)}\r\n            onClick={(e) => e.stopPropagation()}\r\n            onBlur={saveNoteName}\r\n          />\r\n        )}\r\n        <p className=\"date\">{date}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { createContext, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport {\r\n  createNewNote,\r\n  getAllNotes,\r\n  getAllTags,\r\n  NoteTag,\r\n} from \"../../lib/note/archive\";\r\nimport { createEmptyNote, NoteInfo } from \"../../lib/note/note\";\r\nimport { FormOutlined } from \"@ant-design/icons\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport RightTools from \"./RightTools\";\r\nimport LeftTools from \"./LeftTools\";\r\nimport classNames from \"classnames\";\r\nimport SideMenu from \"./SideMenu\";\r\nimport NoteList from \"./NoteList\";\r\nimport { List } from \"immutable\";\r\nimport { Button } from \"antd\";\r\nimport \"./menu.sass\";\r\n\r\nexport const MenuStateCtx = createContext({\r\n  tagUid: \"DEFAULT\",\r\n  editing: false,\r\n  allNotes: {} as Record<string, NoteInfo>,\r\n  allTags: {} as Record<string, NoteTag>,\r\n});\r\n\r\nexport const MenuMethodCtx = createContext({\r\n  setAllNotes: (() => {}) as Setter<Record<string, NoteInfo>>,\r\n  setAllTags: (() => {}) as Setter<Record<string, NoteTag>>,\r\n  setTagUid: (() => {}) as Setter<string>,\r\n  setEditing: (() => {}) as Setter<boolean>,\r\n  menuInit: () => {},\r\n});\r\n\r\nexport default function MainMenu() {\r\n  const [allNotes, setAllNotes] = useState<Record<string, NoteInfo>>({});\r\n  const [allTags, setAllTags] = useState<Record<string, NoteTag>>({});\r\n  const [tagUid, setTagUid] = useState(\"DEFAULT\");\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const selectedTag = useMemo(\r\n    () =>\r\n      tagUid === \"DEFAULT\"\r\n        ? {\r\n            uid: \"\",\r\n            name: \"All Notes\",\r\n            color: \"#000000\",\r\n            notes: Object.keys(allNotes),\r\n          }\r\n        : allTags[tagUid],\r\n    [allNotes, allTags, tagUid]\r\n  );\r\n\r\n  const noteList = useMemo(\r\n    () =>\r\n      List(\r\n        selectedTag.notes\r\n          .filter((uid) => uid in allNotes)\r\n          .map((uid) => allNotes[uid])\r\n      ),\r\n    [selectedTag, allNotes]\r\n  );\r\n\r\n  const menuInit = () => {\r\n    getAllNotes().then(setAllNotes);\r\n    getAllTags().then(setAllTags);\r\n    document.title = \"Multibility\";\r\n  };\r\n  useEffect(menuInit, []);\r\n  const logo = tagUid === \"DEFAULT\";\r\n\r\n  return (\r\n    <MenuStateCtx.Provider value={{ tagUid, editing, allNotes, allTags }}>\r\n      <MenuMethodCtx.Provider\r\n        value={{ setAllNotes, setAllTags, setEditing, setTagUid, menuInit }}\r\n      >\r\n        <div className=\"main-menu container\">\r\n          <header>\r\n            <LeftTools />\r\n            <h2 className={classNames({ logo })}>\r\n              {logo ? \"Multibility\" : selectedTag.name}\r\n            </h2>\r\n            <RightTools />\r\n          </header>\r\n          <main>\r\n            <SideMenu />\r\n            <NoteList noteList={noteList} />\r\n            <NewNoteButton />\r\n          </main>\r\n        </div>\r\n      </MenuMethodCtx.Provider>\r\n    </MenuStateCtx.Provider>\r\n  );\r\n}\r\n\r\nexport const NewNoteButton = () => {\r\n  const { tagUid } = useContext(MenuStateCtx);\r\n  const { setAllTags, setAllNotes } = useContext(MenuMethodCtx);\r\n\r\n  async function addNewNote() {\r\n    const note = createEmptyNote();\r\n    note.tagID = tagUid;\r\n    const { tags, allNotes } = await createNewNote(note);\r\n    setAllTags(tags);\r\n    setAllNotes(allNotes);\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      className=\"new-note\"\r\n      size=\"large\"\r\n      type=\"primary\"\r\n      shape=\"circle\"\r\n      onClick={addNewNote}\r\n      icon={<FormOutlined />}\r\n    />\r\n  );\r\n};\r\n","import { Button, Input, Popconfirm, Select } from \"antd\";\r\nimport { FC, MouseEventHandler, useContext, useEffect, useState } from \"react\";\r\nimport { deleteTag, editTag, NoteTag, addNewTag } from \"../../lib/note/archive\";\r\nimport { colors, getRandomColor } from \"../../lib/color\";\r\nimport { MenuStateCtx, MenuMethodCtx } from \"./MainMenu\";\r\nimport {\r\n  TagOutlined,\r\n  DeleteOutlined,\r\n  SettingOutlined,\r\n  ProfileOutlined,\r\n} from \"@ant-design/icons\";\r\nimport SwipeDelete from \"../ui/SwipeDelete\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport classNames from \"classnames\";\r\n\r\nexport const TagCircle = ({ color }: { color: string }) => {\r\n  const style = { backgroundColor: color };\r\n  return <div className=\"tag-circle\" style={style} />;\r\n};\r\n\r\nconst TagInput: FC<{\r\n  tagName: string;\r\n  setTagName: Setter<string>;\r\n  tagColor: string;\r\n  setTagColor: Setter<string>;\r\n}> = ({ tagName, setTagName, tagColor, setTagColor }) => {\r\n  const colorSelector = (\r\n    <Select value={tagColor} onSelect={setTagColor} listHeight={150}>\r\n      {colors.map((c) => (\r\n        <Select.Option value={c} key={c}>\r\n          <TagCircle color={c} />\r\n        </Select.Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n\r\n  return (\r\n    <Input\r\n      autoFocus\r\n      placeholder=\"Tag name...\"\r\n      className=\"tag-name-input\"\r\n      addonBefore={colorSelector}\r\n      value={tagName}\r\n      onChange={(e) => setTagName(e.target.value)}\r\n    />\r\n  );\r\n};\r\n\r\nconst TagItem: FC<{\r\n  noteTag: NoteTag;\r\n  removeTag: () => void;\r\n  onClick: MouseEventHandler<HTMLDivElement>;\r\n}> = ({ noteTag, removeTag, onClick }) => {\r\n  const { uid, color, name, notes } = noteTag;\r\n  const { editing, tagUid } = useContext(MenuStateCtx);\r\n  const { setAllTags } = useContext(MenuMethodCtx);\r\n  const [tagName, setTagName] = useState(name);\r\n  const [tagColor, setTagColor] = useState(color);\r\n  const [tagEditing, setTagEditing] = useState(false);\r\n  useEffect(() => setTagEditing(false), [editing]);\r\n\r\n  const cancelEditing = () => {\r\n    setTagName(name);\r\n    setTagColor(color);\r\n    setTagEditing(false);\r\n  };\r\n\r\n  const finishEditing = async () => {\r\n    const newTag: NoteTag = {\r\n      ...noteTag,\r\n      name: tagName,\r\n      color: tagColor,\r\n    };\r\n\r\n    const newAllTags = await editTag(newTag);\r\n    setAllTags(newAllTags);\r\n    setTagEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classNames(\"tag-item\", {\r\n        curr: tagUid === uid,\r\n        editing: tagEditing,\r\n      })}\r\n      onClick={onClick}\r\n    >\r\n      {tagEditing || (\r\n        <>\r\n          <TagCircle color={tagColor} />\r\n          <span className=\"tag-name\">{tagName}</span>\r\n        </>\r\n      )}\r\n      {editing || <span className=\"tag-num\">{notes.length}</span>}\r\n      {editing && !tagEditing && (\r\n        <Button\r\n          size=\"small\"\r\n          type=\"text\"\r\n          onClick={() => setTagEditing(true)}\r\n          icon={<SettingOutlined />}\r\n        />\r\n      )}\r\n      {tagEditing && (\r\n        <>\r\n          <TagInput\r\n            tagName={tagName}\r\n            setTagName={setTagName}\r\n            tagColor={tagColor}\r\n            setTagColor={setTagColor}\r\n          />\r\n          <div className=\"buttons\">\r\n            <Popconfirm\r\n              title=\"This tag will be deleted.\"\r\n              onConfirm={removeTag}\r\n              placement=\"left\"\r\n              cancelText=\"Cancel\"\r\n              icon={<DeleteOutlined />}\r\n              okText=\"Delete\"\r\n              okType=\"danger\"\r\n              okButtonProps={{ type: \"primary\" }}\r\n            >\r\n              <Button danger>Delete</Button>\r\n            </Popconfirm>\r\n            <Button onClick={cancelEditing}>Cancel</Button>\r\n            <Button type=\"primary\" disabled={!tagName} onClick={finishEditing}>\r\n              OK\r\n            </Button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NewTagItem: FC<{ setAdding: Setter<boolean> }> = ({ setAdding }) => {\r\n  const [tagName, setTagName] = useState(\"\");\r\n  const [tagColor, setTagColor] = useState(getRandomColor());\r\n  const { setAllTags } = useContext(MenuMethodCtx);\r\n\r\n  const addTag = () => {\r\n    const name = tagName.trim();\r\n    if (!name) return;\r\n    addNewTag(name, tagColor).then(setAllTags);\r\n    setAdding(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tag-wrapper\">\r\n      <div className=\"tag-item curr editing\">\r\n        <TagInput\r\n          tagName={tagName}\r\n          setTagName={setTagName}\r\n          tagColor={tagColor}\r\n          setTagColor={setTagColor}\r\n        />\r\n        <div className=\"buttons\">\r\n          <Button onClick={() => setAdding(false)}>Cancel</Button>\r\n          <Button type=\"primary\" disabled={!tagName} onClick={addTag}>\r\n            OK\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function SideMenu({ onSelect }: { onSelect?: () => void }) {\r\n  const { allTags, editing, tagUid, allNotes } = useContext(MenuStateCtx);\r\n  const { setTagUid, setAllTags } = useContext(MenuMethodCtx);\r\n  const { setEditing } = useContext(MenuMethodCtx);\r\n  const [nowSwiped, setNowSwiped] = useState(\"\");\r\n  const [adding, setAdding] = useState(false);\r\n\r\n  async function removeOneTag(uid: string) {\r\n    const tags = await deleteTag(uid);\r\n    setTagUid(\"DEFAULT\");\r\n    setAllTags(tags);\r\n  }\r\n\r\n  const selectTag = (key: string) => {\r\n    setTagUid(key);\r\n    onSelect && onSelect();\r\n  };\r\n\r\n  const allNoteTag = (\r\n    <div className=\"tag-wrapper\">\r\n      <div\r\n        className={classNames(\"tag-item\", { curr: tagUid === \"DEFAULT\" })}\r\n        onClick={() => selectTag(\"DEFAULT\")}\r\n      >\r\n        <ProfileOutlined className=\"all-note-icon\" />\r\n        <span className=\"tag-name\">All Notes</span>\r\n        <span className=\"tag-num\">{Object.keys(allNotes).length}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const swichEditing = () => setEditing((prev) => !prev);\r\n\r\n  const editButton = (\r\n    <Button\r\n      className=\"edit-btn small\"\r\n      shape=\"round\"\r\n      type={editing ? \"primary\" : \"default\"}\r\n      onClick={swichEditing}\r\n    >\r\n      {editing ? \"Done\" : \"Edit\"}\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <aside className=\"side-menu\">\r\n      <div className=\"tag-list\">\r\n        {allNoteTag}\r\n        {Object.values(allTags).map((tag) => {\r\n          const { uid } = tag;\r\n          const removeTag = () => removeOneTag(uid);\r\n          return (\r\n            <div className=\"tag-wrapper\" key={uid}>\r\n              <SwipeDelete\r\n                uid={uid}\r\n                onDelete={removeTag}\r\n                nowSwiped={nowSwiped}\r\n                setNowSwiped={setNowSwiped}\r\n                disable={editing}\r\n              >\r\n                <TagItem\r\n                  noteTag={tag}\r\n                  removeTag={removeTag}\r\n                  onClick={() => selectTag(uid)}\r\n                />\r\n              </SwipeDelete>\r\n            </div>\r\n          );\r\n        })}\r\n        {adding && <NewTagItem setAdding={setAdding} />}\r\n      </div>\r\n      <footer>\r\n        <Button\r\n          shape=\"round\"\r\n          icon={<TagOutlined />}\r\n          onClick={() => setAdding(true)}\r\n          disabled={adding}\r\n        >\r\n          Add\r\n        </Button>\r\n        {editButton}\r\n      </footer>\r\n    </aside>\r\n  );\r\n}\r\n","import React, { FC, useEffect, useRef, useState } from \"react\";\nimport { useSwipeable } from \"react-swipeable\";\nimport { Setter } from \"../../lib/hooks\";\nimport classNames from \"classnames\";\nimport \"./swipe-delete.sass\";\n\nconst SwipeDelete: FC<{\n  onDelete: () => void;\n  uid: string;\n  nowSwiped?: string;\n  setNowSwiped?: Setter<string>;\n  disable?: boolean;\n  className?: string;\n}> = ({\n  children,\n  nowSwiped,\n  setNowSwiped,\n  uid,\n  onDelete,\n  disable = false,\n  className,\n}) => {\n  const [deleted, setDeleted] = useState(false);\n  const [swiped, setSwiped] = useState(false);\n  const [height, setHeight] = useState<number>();\n  const wrapper = useRef<HTMLDivElement>(null);\n  const deleting = swiped && (nowSwiped === undefined || nowSwiped === uid);\n\n  const showDelete = () => {\n    setSwiped(true);\n    setNowSwiped && setNowSwiped(uid);\n    setHeight(wrapper.current?.clientHeight);\n  };\n\n  const hideDelete = () => {\n    setSwiped(false);\n    setNowSwiped && setNowSwiped(\"\");\n    setHeight(undefined);\n  };\n\n  const swipeHandler = useSwipeable({\n    onSwipedLeft: showDelete,\n    onSwipedRight: hideDelete,\n    preventDefaultTouchmoveEvent: true,\n    trackTouch: !disable,\n  });\n\n  useEffect(() => {\n    if (!disable) return;\n    setHeight(undefined);\n    setNowSwiped && setNowSwiped(\"\");\n    setSwiped(false);\n  }, [disable, setNowSwiped]);\n\n  return (\n    <div\n      className={classNames(\"swipe-wrapper\", className, {\n        deleted,\n        deleting,\n      })}\n      {...swipeHandler}\n      style={{ height }}\n      onTransitionEnd={({ propertyName }) => {\n        if (propertyName === \"height\" && deleted) onDelete();\n      }}\n    >\n      <div className=\"content\" ref={wrapper}>\n        {children}\n      </div>\n      <div className=\"button-wrapper\">\n        <div\n          className=\"button\"\n          onClick={() => setDeleted(true)}\n          style={{ height }}\n        >\n          Delete\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SwipeDelete;\n","export const colors = [\r\n  \"#000000\",\r\n  \"#9ca3af\",\r\n  \"#64748b\",\r\n  \"#78716c\",\r\n  \"#f97316\",\r\n  \"#eab308\",\r\n  \"#84cc16\",\r\n  \"#22c55e\",\r\n  \"#10b981\",\r\n  \"#14b8a6\",\r\n  \"#06b6d4\",\r\n  \"#0ea5e9\",\r\n  \"#3b82f6\",\r\n  \"#6366f1\",\r\n  \"#8b5cf6\",\r\n  \"#a855f7\",\r\n  \"#d946ef\",\r\n  \"#ec4899\",\r\n  \"#f43f5e\",\r\n  \"#ef4444\",\r\n];\r\n\r\nexport const getRandomColor = () => {\r\n  const index = Math.floor(Math.random() * colors.length);\r\n  return colors[index];\r\n};\r\n\r\nconst hashCode = (str: string) => {\r\n  let hash = 0;\r\n  if (str.length === 0) return hash;\r\n  for (let i = 0; i < str.length; i++) {\r\n    const chr = str.charCodeAt(i);\r\n    hash = (hash << 5) - hash + chr;\r\n    hash |= 0;\r\n  }\r\n  return Math.abs(hash);\r\n};\r\n\r\nexport const getHashedColor = (str: string) => {\r\n  const index = hashCode(str) % colors.length;\r\n  return colors[index];\r\n};\r\n","import { List, Record, OrderedMap } from \"immutable\";\r\nimport { v4 as getUid } from \"uuid\";\r\nimport Heap from \"heap\";\r\n\r\nexport const WIDTH = 2000;\r\n\r\nexport interface Stroke {\r\n  uid: string;\r\n  pathData: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport type StrokeRecord = globalThis.Record<string, Stroke>;\r\nexport type Mutation = [string, string];\r\n\r\nexport type Operation =\r\n  | {\r\n      type: \"add\";\r\n      stroke: Stroke;\r\n    }\r\n  | {\r\n      type: \"erase\";\r\n      erased: string[];\r\n    }\r\n  | {\r\n      type: \"mutate\";\r\n      mutations: Mutation[];\r\n    }\r\n  | {\r\n      type: \"undo\";\r\n    }\r\n  | {\r\n      type: \"redo\";\r\n    };\r\n\r\ninterface DrawStateRecordType {\r\n  strokes: OrderedMap<string, Stroke>;\r\n  undoStack: List<DrawStateRecord>;\r\n  historyStack: List<DrawStateRecord>;\r\n}\r\n\r\ntype DrawStateRecord = Record<DrawStateRecordType>;\r\n\r\nconst defaultRecord: Readonly<DrawStateRecordType> = {\r\n  strokes: OrderedMap(),\r\n  undoStack: List(),\r\n  historyStack: List(),\r\n};\r\n\r\nconst defaultFactory = Record(defaultRecord);\r\n\r\nexport interface FlatState {\r\n  strokes: StrokeRecord;\r\n  operations?: Operation[];\r\n}\r\n\r\nexport const getDefaultFlatState = (): FlatState => {\r\n  return { strokes: {} };\r\n};\r\n\r\nexport class DrawState {\r\n  constructor(\r\n    private immutable: DrawStateRecord,\r\n    public readonly width: number,\r\n    public readonly height: number,\r\n    public lastOp?: Operation\r\n  ) {}\r\n\r\n  getImmutable() {\r\n    return this.immutable;\r\n  }\r\n\r\n  getUndoStack() {\r\n    return this.getImmutable().get(\"undoStack\");\r\n  }\r\n\r\n  getHistoryStack() {\r\n    return this.getImmutable().get(\"historyStack\");\r\n  }\r\n\r\n  getStrokeMap() {\r\n    return this.getImmutable().get(\"strokes\");\r\n  }\r\n\r\n  getStrokeList(): Stroke[] {\r\n    return this.getStrokeMap()\r\n      .toArray()\r\n      .map(([_, stroke]) => stroke);\r\n  }\r\n\r\n  getLastStroke() {\r\n    return this.getStrokeMap().last();\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.getStrokeMap().size === 0;\r\n  }\r\n\r\n  hasStroke(uid: string) {\r\n    return this.getStrokeMap().has(uid);\r\n  }\r\n\r\n  static createEmpty(width: number, height: number) {\r\n    return new DrawState(defaultFactory(), width, height);\r\n  }\r\n\r\n  static undo(drawState: DrawState) {\r\n    const lastOp: Operation = { type: \"undo\" };\r\n    const lastRecord = drawState.getHistoryStack().last();\r\n    if (!lastRecord) return drawState;\r\n    const undoStack = drawState\r\n      .getUndoStack()\r\n      .unshift(drawState.getImmutable());\r\n    return new DrawState(\r\n      lastRecord.set(\"undoStack\", undoStack),\r\n      drawState.width,\r\n      drawState.height,\r\n      lastOp\r\n    );\r\n  }\r\n\r\n  static redo(drawState: DrawState) {\r\n    const lastOp: Operation = { type: \"redo\" };\r\n\r\n    const nextRecord = drawState.getUndoStack().first();\r\n    if (!nextRecord) return drawState;\r\n    return new DrawState(nextRecord, drawState.width, drawState.height, lastOp);\r\n  }\r\n\r\n  static addStroke(drawState: DrawState, pathData: string) {\r\n    const uid = getUid();\r\n    const timestamp = Date.now();\r\n    const stroke = { pathData, uid, timestamp };\r\n    return DrawState.pushStroke(drawState, stroke);\r\n  }\r\n\r\n  static pushStroke(drawState: DrawState, stroke: Stroke) {\r\n    const { uid } = stroke;\r\n    const prevRecord = drawState.getImmutable();\r\n    const currRecord = prevRecord\r\n      .update(\"strokes\", (s) => s.set(uid, stroke))\r\n      .update(\"historyStack\", (s) => s.push(prevRecord))\r\n      .delete(\"undoStack\");\r\n\r\n    const lastOp: Operation = { type: \"add\", stroke };\r\n\r\n    return new DrawState(currRecord, drawState.width, drawState.height, lastOp);\r\n  }\r\n\r\n  static eraseStrokes(drawState: DrawState, erased: string[]) {\r\n    if (erased.length === 0) return drawState;\r\n    const prevRecord = drawState.getImmutable();\r\n    const currRecord = prevRecord\r\n      .update(\"strokes\", (m) => m.deleteAll(erased))\r\n      .update(\"historyStack\", (s) => s.push(prevRecord))\r\n      .delete(\"undoStack\");\r\n\r\n    const lastOp: Operation = { type: \"erase\", erased };\r\n\r\n    return new DrawState(currRecord, drawState.width, drawState.height, lastOp);\r\n  }\r\n\r\n  static mutateStrokes(drawState: DrawState, mutations: Mutation[]) {\r\n    if (mutations.length === 0) return drawState;\r\n    const prevRecord = drawState.getImmutable();\r\n    let strokes = drawState.getStrokeMap();\r\n    mutations.forEach(\r\n      ([uid, pathData]) =>\r\n        (strokes = strokes.update(\r\n          uid,\r\n          { uid, pathData, timestamp: Date.now() },\r\n          (s) => ({ ...s, pathData })\r\n        ))\r\n    );\r\n    const currRecord = prevRecord\r\n      .set(\"strokes\", strokes)\r\n      .update(\"historyStack\", (s) => s.push(prevRecord))\r\n      .delete(\"undoStack\");\r\n\r\n    const lastOp: Operation = { type: \"mutate\", mutations };\r\n\r\n    return new DrawState(currRecord, drawState.width, drawState.height, lastOp);\r\n  }\r\n\r\n  // sync with mutation.\r\n  static syncStrokeTime(drawState: DrawState, stroke: Stroke) {\r\n    const { uid, timestamp } = stroke;\r\n    const prevStroke = drawState.getStrokeMap().get(uid);\r\n    if (!prevStroke) return;\r\n    prevStroke.timestamp = timestamp;\r\n  }\r\n\r\n  static pushOperation(drawState: DrawState, op: Operation) {\r\n    switch (op.type) {\r\n      case \"add\":\r\n        return DrawState.pushStroke(drawState, op.stroke);\r\n      case \"erase\":\r\n        return DrawState.eraseStrokes(drawState, op.erased);\r\n      case \"mutate\":\r\n        return DrawState.mutateStrokes(drawState, op.mutations);\r\n      case \"undo\":\r\n        return DrawState.undo(drawState);\r\n      case \"redo\":\r\n        return DrawState.redo(drawState);\r\n    }\r\n  }\r\n\r\n  static flaten(drawState: DrawState): FlatState {\r\n    const strokes = drawState.getImmutable().get(\"strokes\").toObject();\r\n    return { strokes };\r\n  }\r\n\r\n  static loadFromFlat(\r\n    flatState: FlatState,\r\n    width: number,\r\n    height: number\r\n  ): DrawState {\r\n    const { strokes, operations } = flatState;\r\n    let ds = new DrawState(\r\n      defaultFactory().set(\"strokes\", OrderedMap(strokes)),\r\n      width,\r\n      height\r\n    );\r\n    operations?.forEach((op) => (ds = DrawState.pushOperation(ds, op)));\r\n    return ds;\r\n  }\r\n\r\n  static mergeStates(...states: DrawState[]): Stroke[] {\r\n    const iterators = states.map((ds) => ds.getStrokeMap().values());\r\n    const mergedStrokes = [];\r\n    const heap = new Heap<[Stroke, number]>(\r\n      ([s0], [s1]) => s0.timestamp - s1.timestamp\r\n    );\r\n\r\n    iterators.forEach((iter, index) => {\r\n      const { value, done } = iter.next();\r\n      done || heap.push([value, index]);\r\n    });\r\n\r\n    while (heap.size() > 0) {\r\n      const record = heap.pop();\r\n      if (!record) break;\r\n      const [stroke, index] = record;\r\n      mergedStrokes.push(stroke);\r\n\r\n      const { value, done } = iterators[index].next();\r\n      done || heap.push([value, index]);\r\n    }\r\n    return mergedStrokes;\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport { removePageTimg, TeamNoteInfo, TeamPage, TeamPageInfo } from \"../note/note\";\r\nimport { loadNote, saveTeamNote, updateTeamNote } from \"../note/archive\";\r\nimport { getUserID } from \"../user\";\r\n\r\nexport let BASE_URL = \"https://api.slotdumpling.top/paint\";\r\n// BASE_URL = \"http://192.168.1.14:8090/paint\";\r\naxios.defaults.baseURL = BASE_URL;\r\n\r\naxios.interceptors.request.use((config) => {\r\n  console.log(config.method, config.url);\r\n  return config;\r\n});\r\n\r\nexport async function getNoteID(roomCode: string) {\r\n  try {\r\n    const { data } = await axios.get(`code/${roomCode}`);\r\n    console.log({ data });\r\n    if (data.statusCode !== 200) return null;\r\n    return data.noteID as string;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n}\r\n\r\ninterface InfoRes {\r\n  statusCode: number;\r\n  code: number;\r\n  noteInfo: TeamNoteInfo;\r\n  pageInfos: Record<string, TeamPageInfo>;\r\n}\r\n\r\nexport async function getTeamNoteInfo(noteID: string) {\r\n  try {\r\n    const { data } = await axios.get(`info/${noteID}`);\r\n    const { statusCode, ...res } = data as InfoRes;\r\n    if (statusCode !== 200) return null;\r\n    return res;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function loadTeamNoteInfo(noteID: string) {\r\n  try {\r\n    const infoRes = await getTeamNoteInfo(noteID);\r\n    if (!infoRes) return null;\r\n    const { noteInfo, pageInfos } = infoRes;\r\n\r\n    if (await updateTeamNote(noteID, noteInfo, pageInfos)) return infoRes;\r\n\r\n    let file: Blob | undefined = undefined;\r\n    if (noteInfo.withImg) {\r\n      const { data } = await axios({\r\n        method: \"GET\",\r\n        url: noteID,\r\n        responseType: \"blob\",\r\n      });\r\n      file = new Blob([data], { type: \"application/pdf\" });\r\n    }\r\n    await saveTeamNote(noteID, noteInfo, pageInfos, file);\r\n    return infoRes;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function putNote(noteID: string) {\r\n  const note = await loadNote(noteID);\r\n  if (!note) return false;\r\n  const { uid, name, withImg, pdf, pageOrder, pageRec } = note;\r\n  removePageTimg(pageRec);\r\n\r\n  try {\r\n    const { data } = await axios.put(`create/${noteID}`, {\r\n      userID: getUserID(),\r\n      pageRec,\r\n      noteInfo: { uid, name, withImg, pageOrder },\r\n    });\r\n\r\n    if (pdf) {\r\n      const formData = new FormData();\r\n      const ab = await pdf.arrayBuffer();\r\n      const file = new Blob([ab]);\r\n      formData.append(\"file\", file, noteID);\r\n      await axios({\r\n        method: \"POST\",\r\n        url: \"upload\",\r\n        data: formData,\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n    }\r\n\r\n    if (data.statusCode !== 201) return false;\r\n    return true;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function updatePages(noteID: string) {\r\n  const note = await loadNote(noteID);\r\n  if (!note) return null;\r\n  const { uid, name, withImg, pageOrder, pageRec } = note;\r\n  removePageTimg(pageRec);\r\n  \r\n  try {\r\n    const { data } = await axios.put(`update/${noteID}`, {\r\n      userID: getUserID(),\r\n      pageRec,\r\n      noteInfo: { uid, name, withImg, pageOrder },\r\n    });\r\n    if (data.statusCode === 201) return true;\r\n    else return false;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function getTeamNoteState(noteID: string) {\r\n  try {\r\n    const { data } = await axios.get(`state/${noteID}`, {\r\n      params: { userID: getUserID() },\r\n    });\r\n    if (data.statusCode !== 200) return null;\r\n    const { teamPages } = data;\r\n    return teamPages as Record<string, TeamPage>;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n}\r\n","import { Note, NoteInfo, NotePage, TeamNoteInfo, TeamPageInfo } from \"./note\";\r\nimport { getDefaultFlatState } from \"../draw/DrawState\";\r\nimport localforage from \"localforage\";\r\nimport { v4 as getUid } from \"uuid\";\r\nimport { pickBy } from \"lodash-es\";\r\n\r\nexport interface NoteTag {\r\n  uid: string;\r\n  name: string;\r\n  color: string;\r\n  notes: string[];\r\n}\r\n\r\nexport async function getAllNotes() {\r\n  const allNotes = await localforage.getItem(\"ALL_NOTES\");\r\n  if (allNotes) {\r\n    return allNotes as Record<string, NoteInfo>;\r\n  } else {\r\n    localforage.setItem(\"ALL_NOTES\", {});\r\n    return {};\r\n  }\r\n}\r\n\r\nexport async function getAllTags() {\r\n  const tags = await localforage.getItem(\"ALL_TAGS\");\r\n  if (tags) {\r\n    return tags as Record<string, NoteTag>;\r\n  } else {\r\n    localforage.setItem(\"ALL_TAGS\", {});\r\n    return {};\r\n  }\r\n}\r\n\r\nexport async function addNewTag(name: string, color: string) {\r\n  const uid = getUid();\r\n  const newTag: NoteTag = {\r\n    uid,\r\n    name,\r\n    color,\r\n    notes: [],\r\n  };\r\n  const prevTags = await getAllTags();\r\n  const tags = { ...prevTags, [uid]: newTag };\r\n  await localforage.setItem(\"ALL_TAGS\", tags);\r\n\r\n  return tags;\r\n}\r\n\r\nexport async function deleteTag(uid: string) {\r\n  const prevTags = await getAllTags();\r\n  const { [uid]: _, ...tags } = prevTags;\r\n  await localforage.setItem(\"ALL_TAGS\", tags);\r\n\r\n  return tags;\r\n}\r\n\r\nexport async function editTag(tag: NoteTag) {\r\n  const prevTags = await getAllTags();\r\n  const tags = { ...prevTags, [tag.uid]: tag };\r\n  await localforage.setItem(\"ALL_TAGS\", tags);\r\n  return tags;\r\n}\r\n\r\nexport async function loadNote(uid: string) {\r\n  const note = (await localforage.getItem(uid)) as Note | undefined;\r\n  if (!note) return;\r\n  const pdf = (await localforage.getItem(`PDF_${uid}`)) as Blob | undefined;\r\n  return { ...note, pdf };\r\n}\r\n\r\nexport async function editNoteData(uid: string, noteData: Partial<Note>) {\r\n  noteData = pickBy(noteData, (v) => v !== undefined);\r\n  if (\"pageRec\" in noteData) noteData.lastTime = Date.now();\r\n  console.dir(noteData);\r\n\r\n  const allNotes = await getAllNotes();\r\n  const { pageRec, pageOrder, ...noteInfo } = noteData;\r\n  allNotes[uid] = { ...allNotes[uid], ...noteInfo };\r\n\r\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\r\n  const prevNote = await loadNote(uid);\r\n  if (!prevNote) return;\r\n  await localforage.setItem(uid, { ...prevNote, ...noteData });\r\n}\r\n\r\nexport async function saveNoteInfo(noteInfo: NoteInfo) {\r\n  const { uid, tagID } = noteInfo;\r\n  const allNotes = await getAllNotes();\r\n  allNotes[uid] = noteInfo;\r\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\r\n  const tags = await getAllTags();\r\n  if (tagID in tags) {\r\n    tags[tagID].notes.push(noteInfo.uid);\r\n    await localforage.setItem(\"ALL_TAGS\", tags);\r\n  }\r\n  return { tags, allNotes };\r\n}\r\n\r\nexport async function createNewNote(noteWithPdf: Note) {\r\n  const { pdf, ...note } = noteWithPdf;\r\n  await localforage.setItem(note.uid, note);\r\n  if (pdf) await localforage.setItem(`PDF_${note.uid}`, pdf);\r\n  const { pageRec, pageOrder, ...noteInfo } = note;\r\n  return await saveNoteInfo(noteInfo);\r\n}\r\n\r\nexport async function deleteNote(uid: string) {\r\n  const note = await loadNote(uid);\r\n  const allNotes = await getAllNotes();\r\n  const tags = await getAllTags();\r\n  if (!note) return { tags, allNotes };\r\n  await localforage.removeItem(uid);\r\n  await localforage.removeItem(`PDF_${uid}`);\r\n  delete allNotes[uid];\r\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\r\n\r\n  const { tagID } = note;\r\n  if (tagID in tags) {\r\n    const prevTag = tags[tagID];\r\n    prevTag.notes = prevTag.notes.filter((id) => id !== uid);\r\n    await localforage.setItem(\"ALL_TAGS\", tags);\r\n  }\r\n  return { tags, allNotes };\r\n}\r\n\r\nexport async function moveNoteTag(noteID: string, tagID: string) {\r\n  const note = await loadNote(noteID);\r\n  const allNotes = await getAllNotes();\r\n  const tags = await getAllTags();\r\n  if (!note) return { tags, allNotes };\r\n\r\n  const { tagID: prevTagId } = note;\r\n  note.tagID = tagID;\r\n  await localforage.setItem(noteID, note);\r\n  allNotes[noteID].tagID = tagID;\r\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\r\n\r\n  if (prevTagId in tags) {\r\n    const prevTag = tags[prevTagId];\r\n    prevTag.notes = prevTag.notes.filter((id) => id !== noteID);\r\n  }\r\n  tags[tagID]?.notes.push(noteID);\r\n  await localforage.setItem(\"ALL_TAGS\", tags);\r\n  return { tags, allNotes };\r\n}\r\n\r\nexport async function saveTeamNote(\r\n  noteID: string,\r\n  noteInfo: TeamNoteInfo,\r\n  teamPages: Record<string, TeamPageInfo>,\r\n  file?: Blob\r\n) {\r\n  let note = await loadNote(noteID);\r\n  if (note) return;\r\n  const time = Date.now();\r\n  const pageRec: Record<string, NotePage> = {};\r\n  note = {\r\n    ...noteInfo,\r\n    tagID: \"DEFAULT\",\r\n    team: true,\r\n    pageRec,\r\n    pdf: file,\r\n    createTime: time,\r\n    lastTime: time,\r\n  };\r\n\r\n  // set empty state for each page\r\n  Object.entries(teamPages).forEach(([pageID, page]) => {\r\n    pageRec[pageID] = { ...page, state: getDefaultFlatState() };\r\n  });\r\n\r\n  // parse timg for each page\r\n  if (file) {\r\n    const { getPDFImages } = await import(\"../note/pdfImage\");\r\n    const { images } = await getPDFImages(file);\r\n    Object.values(pageRec).forEach((page) => {\r\n      const { pdfIndex } = page;\r\n      if (!pdfIndex) return;\r\n      page.image = images[pdfIndex - 1];\r\n    });\r\n    note.thumbnail = images[0];\r\n  }\r\n\r\n  await createNewNote(note);\r\n}\r\n\r\nexport async function updateTeamNote(\r\n  noteID: string,\r\n  noteInfo: TeamNoteInfo,\r\n  pageInfos: Record<string, TeamPageInfo>\r\n) {\r\n  let note = await loadNote(noteID);\r\n  if (!note) return false;\r\n  const { pageOrder } = noteInfo;\r\n  if (pageOrder.length < note.pageOrder.length) return true;\r\n  const { pageRec, pdf } = note;\r\n  const { getOneImage } = await import(\"./pdfImage\");\r\n\r\n  // parse timgs & set empty states for new pages.\r\n  for (let [pageID, page] of Object.entries(pageInfos)) {\r\n    if (pageID in pageRec) continue;\r\n    const { pdfIndex } = page;\r\n    const state = getDefaultFlatState();\r\n    pageRec[pageID] = { ...page, state };\r\n    if (!pdf || !pdfIndex) continue;\r\n    pageRec[pageID].image = await getOneImage(pdf, pdfIndex, 0.5);\r\n  }\r\n  await editNoteData(noteID, { pageOrder, pageRec });\r\n  return true;\r\n}\r\n","import { getDefaultFlatState, FlatState } from \"../draw/DrawState\";\r\nimport { v4 as getUid } from \"uuid\";\r\nimport dayjs from \"dayjs\";\r\n\r\nexport interface NotePage {\r\n  ratio: number;\r\n  state: FlatState;\r\n  image?: string;\r\n  marked?: boolean;\r\n  pdfIndex?: number;\r\n}\r\n\r\nexport const defaultNotePage: Readonly<NotePage> = {\r\n  ratio: 1.5,\r\n  state: { strokes: {} },\r\n};\r\n\r\nexport interface TeamPageState {\r\n  states: Record<string, FlatState>;\r\n}\r\n\r\nexport interface TeamPageInfo {\r\n  ratio: number;\r\n  pdfIndex?: number;\r\n}\r\n\r\nexport type TeamPage = TeamPageInfo & TeamPageState;\r\n\r\nexport interface TeamNote {\r\n  uid: string;\r\n  pageRec: Record<string, TeamPage>;\r\n}\r\n\r\nexport interface NoteInfo {\r\n  uid: string;\r\n  name: string;\r\n  tagID: string;\r\n  team: boolean;\r\n  withImg: boolean;\r\n  createTime: number;\r\n  lastTime: number;\r\n  thumbnail?: string;\r\n}\r\n\r\nexport type Note = NoteInfo & {\r\n  pdf?: Blob;\r\n  pageRec: Record<string, NotePage>;\r\n  pageOrder: string[];\r\n};\r\n\r\nexport interface TeamNoteInfo {\r\n  uid: string;\r\n  name: string;\r\n  pageOrder: string[];\r\n  withImg: boolean;\r\n}\r\n\r\nexport function createEmptyNote(): Note {\r\n  const pageID = getUid();\r\n  const time = Date.now();\r\n  return {\r\n    uid: getUid(),\r\n    name: `Note ${dayjs(time).format(\"HH:mm, ddd MMM D\")}`,\r\n    tagID: \"DEFAULT\",\r\n    team: false,\r\n    withImg: false,\r\n    createTime: time,\r\n    lastTime: time,\r\n    pageRec: {\r\n      [pageID]: {\r\n        ratio: 1.5,\r\n        state: getDefaultFlatState(),\r\n      },\r\n    },\r\n    pageOrder: [pageID],\r\n  };\r\n}\r\n\r\nexport function createPage(page?: NotePage): [string, NotePage] {\r\n  const pageID = getUid();\r\n  const newPage = page ?? {\r\n    ratio: 1.5,\r\n    state: getDefaultFlatState(),\r\n  };\r\n  return [pageID, newPage];\r\n}\r\n\r\nexport function removePageTimg(pageRec: Record<string, NotePage>) {\r\n  Object.values(pageRec).forEach((page) => {\r\n    delete page.image;\r\n    delete page.marked;\r\n  });\r\n}\r\n","import { v4 as getUid } from \"uuid\";\r\n\r\nexport interface UserInfo {\r\n  userID: string;\r\n  userName: string;\r\n  online: boolean;\r\n}\r\n\r\nexport const getUserID = (() => {\r\n  let cached: string;\r\n  return () => {\r\n    if (cached) return cached;\r\n    let userID = localStorage.getItem(\"USER_ID\");\r\n    if (!userID) {\r\n      userID = getUid();\r\n      localStorage.setItem(\"USER_ID\", userID);\r\n    }\r\n    cached = userID;\r\n    return userID;\r\n  };\r\n})();\r\n\r\nexport const getUserName = () => {\r\n  let name = localStorage.getItem(\"USER_NAME\");\r\n  if (!name) {\r\n    name = getUid().slice(0, 8);\r\n    localStorage.setItem(\"USER_NAME\", name);\r\n  }\r\n  return name;\r\n};\r\n\r\nexport const saveUserName = (name: string) => {\r\n  name = name.trim();\r\n  if (!name) return false;\r\n  else localStorage.setItem(\"USER_NAME\", name);\r\n  return true;\r\n};\r\n"],"names":["OthersCtx","createContext","setActive","RightTools","className","JoinTeamButton","OthersButton","OthersMenu","useContext","onClick","key","items","icon","FilePdfOutlined","label","UserOutlined","SettingOutlined","SeconaryMenu","children","title","type","shape","ArrowLeftOutlined","UploadPdfPage","useState","loading","setLoading","tagUid","MenuStateCtx","MenuMethodCtx","setAllTags","setAllNotes","percent","setPercent","file","LoadPDF","note","tagID","createNewNote","tags","allNotes","message","Dragger","disabled","multiple","action","accept","beforeUpload","width","InboxOutlined","ProfilePage","userName","getUserName","name","setName","value","onChange","e","target","prefix","allowClear","saveUserName","block","SettingsPage","menuInit","clearAll","localforage","SyncOutlined","serviceWorkerRegistration","window","location","reload","onConfirm","ClearOutlined","okText","okType","okButtonProps","cancelText","placement","danger","OthersPage","height","setHeight","active","cssProps","timeout","onEnter","el","clientHeight","unmountOnExit","cssProps2","classNames","useEffect","Provider","style","CSSTransition","in","btnProps","CaretDownOutlined","trigger","content","zIndex","roomCode","setRoomCode","wrong","setWrong","nav","useNavigate","code","getNoteID","noteID","destroyTooltipOnHide","onVisibleChange","plain","length","error","v","onFill","TeamOutlined","LeftTools","asideOn","setAsideOn","editing","setEditing","editButton","prev","AsideButton","MenuOutlined","closable","visible","onClose","contentWrapperStyle","boxShadow","bodyStyle","padding","overflow","destroyOnClose","SideMenu","onSelect","NoteList","noteList","nowSwiped","setNowSwiped","sortType","setSortType","searchText","setSearchText","Set","selectedNotes","setSelectNotes","removeNotes","uids","uid","deleteNote","res","moveNotes","noteIDs","moveNoteTag","sortedList","useMemo","comparator","t0","t1","sortBy","n","createTime","lastTime","toUpperCase","filterdList","filter","includes","trim","HeadTools","onDelete","toArray","onMove","size","map","noteInfo","SwipeDelete","disable","NoteItem","selected","has","dayjs","calender","allTags","sortMenu","selectedKeys","FileOutlined","FileTextOutlined","SortAscendingOutlined","sortButton","overlay","SwapOutlined","rotate","deleteButton","DeleteOutlined","ColorLabel","color","Object","values","t","tagButton","TagsOutlined","transition","SearchOutlined","bordered","team","thumbnail","date","calendar","href","noteName","setNoteName","loaded","setLoaded","delete","add","onAnimationEnd","src","dafaultImg","alt","CloudOutlined","stopPropagation","onBlur","newName","editNoteData","setTagUid","MainMenu","selectedTag","notes","keys","List","getAllNotes","then","getAllTags","document","logo","NewNoteButton","createEmptyNote","FormOutlined","TagCircle","backgroundColor","TagInput","tagName","setTagName","tagColor","setTagColor","colorSelector","listHeight","colors","c","autoFocus","placeholder","addonBefore","TagItem","noteTag","removeTag","tagEditing","setTagEditing","finishEditing","newTag","editTag","newAllTags","curr","NewTagItem","setAdding","getRandomColor","addNewTag","adding","deleteTag","selectTag","allNoteTag","tag","removeOneTag","deleted","setDeleted","swiped","setSwiped","wrapper","useRef","deleting","undefined","swipeHandler","useSwipeable","onSwipedLeft","current","onSwipedRight","preventDefaultTouchmoveEvent","trackTouch","onTransitionEnd","propertyName","ref","index","Math","floor","random","getHashedColor","str","hash","i","charCodeAt","abs","hashCode","WIDTH","defaultRecord","strokes","OrderedMap","undoStack","historyStack","defaultFactory","Record","getDefaultFlatState","DrawState","immutable","lastOp","this","getImmutable","get","getStrokeMap","last","drawState","lastRecord","getHistoryStack","getUndoStack","unshift","set","nextRecord","first","pathData","stroke","getUid","timestamp","Date","now","pushStroke","prevRecord","currRecord","update","s","push","erased","m","deleteAll","mutations","forEach","prevStroke","op","eraseStrokes","mutateStrokes","undo","redo","toObject","flatState","operations","ds","pushOperation","states","iterators","mergedStrokes","heap","Heap","s0","s1","iter","next","done","record","pop","BASE_URL","axios","data","console","log","statusCode","getTeamNoteInfo","loadTeamNoteInfo","infoRes","pageInfos","updateTeamNote","withImg","method","url","responseType","Blob","saveTeamNote","putNote","loadNote","pdf","pageOrder","pageRec","removePageTimg","userID","getUserID","formData","FormData","arrayBuffer","ab","append","headers","updatePages","getTeamNoteState","params","teamPages","config","prevTags","noteData","pickBy","dir","prevNote","saveNoteInfo","noteWithPdf","prevTag","id","prevTagId","time","entries","pageID","page","state","getPDFImages","images","pdfIndex","image","getOneImage","defaultNotePage","ratio","format","createPage","marked","cached","localStorage","getItem","setItem","slice"],"sourceRoot":""}