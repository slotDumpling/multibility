{"version":3,"file":"static/js/312.19810245.chunk.js","mappings":"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","sources":["component/ColorCircle/ColorCircle.tsx","lib/color.ts","lib/draw/TeamState.ts","lib/hooks.tsx","lib/network/http.ts","lib/user.ts","lib/draw/StateSet.ts","pages/reader/lib/scroll.ts","pages/reader/lib/array.ts","component/UserAvatar.tsx","pages/reader/tools/AddButton.tsx","pages/reader/PageNav/PageNav.tsx","pages/reader/Header/Left.tsx","pages/reader/Header/Middle.tsx","pages/reader/Header/Right.tsx","pages/reader/Header/index.tsx","pages/reader/Info/InfoNav.tsx","pages/reader/Reader.tsx","pages/reader/Team.tsx","lib/network/io.ts","pages/reader/tools/Messages.tsx"],"sourcesContent":["import classNames from \"classnames\";\nimport { FC } from \"react\";\n\nexport const ColorCirle: FC<{ color: string; className?: string }> = ({\n  color,\n  className,\n}) => {\n  const style = { backgroundColor: color };\n  return (\n    <div className={classNames(\"color-circle\", className)} style={style} />\n  );\n};\n","import { CSSProperties } from \"react\";\nimport hash from \"string-hash\";\nexport const colors = [\n  \"#f97316\",\n  \"#eab308\",\n  \"#84cc16\",\n  \"#22c55e\",\n  \"#10b981\",\n  \"#14b8a6\",\n  \"#06b6d4\",\n  \"#0ea5e9\",\n  \"#3b82f6\",\n  \"#6366f1\",\n  \"#8b5cf6\",\n  \"#a855f7\",\n  \"#d946ef\",\n  \"#ec4899\",\n  \"#f43f5e\",\n  \"#ef4444\",\n];\n\nexport const grayColors = [\"#000000\", \"#9ca3af\", \"#64748b\", \"#78716c\"];\nexport const allColors = [...grayColors, ...colors];\n\nexport const getRandomColor = () => {\n  const index = Math.floor(Math.random() * colors.length);\n  return colors[index]!;\n};\n\nexport const getHashedColor = (str: string) => {\n  const index = hash(str) % colors.length;\n  return colors[index];\n};\n\nconst colorPalette: Record<string, { light: string; dark: string }> = {\n  \"#f97316\": { light: \"#FFEDD5\", dark: \"#9A3412\" },\n  \"#eab308\": { light: \"#FEF9C3\", dark: \"#854D0E\" },\n  \"#84cc16\": { light: \"#ECFCCB\", dark: \"#3F6212\" },\n  \"#22c55e\": { light: \"#DCFCE7\", dark: \"#166534\" },\n  \"#10b981\": { light: \"#D1FAE5\", dark: \"#065F46\" },\n  \"#14b8a6\": { light: \"#CCFBF1\", dark: \"#115E59\" },\n  \"#06b6d4\": { light: \"#CFFAFE\", dark: \"#155E75\" },\n  \"#0ea5e9\": { light: \"#E0F2FE\", dark: \"#075985\" },\n  \"#3b82f6\": { light: \"#DBEAFE\", dark: \"#1E40AF\" },\n  \"#6366f1\": { light: \"#E0E7FF\", dark: \"#3730A3\" },\n  \"#8b5cf6\": { light: \"#EDE9FE\", dark: \"#5B21B6\" },\n  \"#a855f7\": { light: \"#F3E8FF\", dark: \"#6B21A8\" },\n  \"#d946ef\": { light: \"#FAE8FF\", dark: \"#86198F\" },\n  \"#ec4899\": { light: \"#FCE7F3\", dark: \"#9D174D\" },\n  \"#f43f5e\": { light: \"#FFE4E6\", dark: \"#9F1239\" },\n  \"#ef4444\": { light: \"#FEE2E2\", dark: \"#991B1B\" },\n};\n\nexport const getColorPalette = (color: string) => {\n  const palette = colorPalette[color] ?? { light: \"#E5E7EB\", dark: \"#374151\" };\n  return {\n    \"--light-color\": palette.light,\n    \"--dark-color\": palette.dark,\n  } as CSSProperties;\n};\n","import { NotePage, TeamPageInfo, TeamPageRec } from \"lib/note/note\";\nimport { DrawState } from \"./DrawState\";\nimport { SetOperation } from \"./StateSet\";\nimport { Map, Record, Set } from \"immutable\";\n\ninterface TeamStateRecordType {\n  pageStates: Map<string, Map<string, DrawState>>;\n  pageInfos: Map<string, TeamPageInfo>;\n}\n\nconst defaultRecord: Readonly<TeamStateRecordType> = {\n  pageStates: Map(),\n  pageInfos: Map(),\n};\n\ntype TeamStateRecord = Record<TeamStateRecordType>;\nconst defaultFactory = Record(defaultRecord);\n\nexport class TeamState {\n  constructor(private immutable: TeamStateRecord) {}\n\n  getImmutable() {\n    return this.immutable;\n  }\n\n  getPageStates() {\n    return this.getImmutable().get(\"pageStates\");\n  }\n\n  getPageInfos() {\n    return this.getImmutable().get(\"pageInfos\");\n  }\n\n  getOneState(pageID: string, userID: string) {\n    return this.getPageStates().get(pageID)?.get(userID);\n  }\n\n  getOnePageStateMap(pageID: string) {\n    return this.getPageStates().get(pageID);\n  }\n\n  getPageRatio(pageID: string) {\n    return this.getPageInfos().get(pageID)?.ratio;\n  }\n\n  includesPage(pageID: string) {\n    return this.getPageStates().has(pageID);\n  }\n\n  setState(pageID: string, userID: string, drawState: DrawState) {\n    const pageMap = this.getPageStates().get(pageID);\n    if (!pageMap) return this;\n    return new TeamState(\n      this.getImmutable().update(\"pageStates\", (m) =>\n        m.set(pageID, pageMap.set(userID, drawState))\n      )\n    );\n  }\n\n  static createFromTeamPages(teamPages: TeamPageRec) {\n    let record = defaultFactory();\n    Object.entries(teamPages).forEach(([pageID, teamPage]) => {\n      const { states, ratio } = teamPage;\n      const pageMap = Map(\n        Object.entries(states).map(([userID, flatState]) => [\n          userID,\n          DrawState.loadFromFlat(flatState, ratio),\n        ])\n      );\n      record = record\n        .update(\"pageStates\", (m) => m.set(pageID, pageMap))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }));\n    });\n    return new TeamState(record);\n  }\n\n  addPage(pageID: string, notePage: NotePage) {\n    const { ratio } = notePage;\n    return new TeamState(\n      this.getImmutable()\n        .update(\"pageStates\", (m) => m.set(pageID, Map()))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }))\n    );\n  }\n\n  pushOperation(setOp: SetOperation, userID: string) {\n    const { pageID, ...op } = setOp;\n    const ratio = this.getPageRatio(pageID);\n    if (!this.includesPage(pageID) || !ratio) return this;\n    const prevDs =\n      this.getOneState(pageID, userID) || DrawState.createEmpty(ratio);\n\n    const ds = DrawState.pushOperation(prevDs, op);\n    return this.setState(pageID, userID, ds);\n  }\n\n  resetUser(userID: string, pageRec: globalThis.Record<string, NotePage>) {\n    let newTS: TeamState = this;\n    for (let [pageID, { state, ratio }] of Object.entries(pageRec)) {\n      const prevDS = newTS.getOneState(pageID, userID);\n      if (!prevDS) continue;\n      newTS = newTS.setState(\n        pageID,\n        userID,\n        DrawState.loadFromFlat(state, ratio)\n      );\n    }\n    return newTS;\n  }\n\n  static getValidUsers(\n    teamStateMap?: Map<string, DrawState>,\n    ignores = Set<string>()\n  ) {\n    if (!teamStateMap) return [];\n    return Array.from(\n      teamStateMap\n        .filter((ds) => !ds.isEmpty())\n        .deleteAll(ignores)\n        .keys()\n    );\n  }\n  static isEmpty(teamStateMap?: Map<string, DrawState>) {\n    return !teamStateMap || teamStateMap.every((ds) => ds.isEmpty());\n  }\n}\n","import React, {\n  createContext,\n  Dispatch,\n  FC,\n  PropsWithChildren,\n  SetStateAction,\n  TransitionEventHandler,\n  useContext,\n  useDebugValue,\n  useRef,\n  useState,\n} from \"react\";\n\nexport type Setter<T> = Dispatch<SetStateAction<T>>;\n\nexport function useTransitionEnd({\n  propertyName,\n  active = true,\n}: {\n  propertyName: string;\n  active?: boolean;\n}): [Promise<void>, TransitionEventHandler] {\n  const resRef = useRef(() => {});\n  const [promise] = useState(\n    () => new Promise<void>((res) => (resRef.current = res))\n  );\n  return [\n    promise,\n    (e) => {\n      if (e.propertyName === propertyName && active) resRef.current();\n    },\n  ];\n}\n\nconst ActiveKeyCtx = createContext<[string, Setter<string>]>([\"\", () => {}]);\nexport function useActiveKey() {\n  const tuple = useContext(ActiveKeyCtx);\n  useDebugValue(tuple[0]);\n  return tuple;\n}\n\nexport const ActiveKeyProvider: FC<PropsWithChildren<{ initKey: string }>> = ({\n  children,\n  initKey,\n}) => {\n  const tuple = useState(initKey);\n  return (\n    <ActiveKeyCtx.Provider value={tuple}>{children}</ActiveKeyCtx.Provider>\n  );\n};\n\nconst AsideOpenCtx = createContext<[boolean, Setter<boolean>]>([\n  false,\n  () => {},\n]);\nexport function useAsideOpen() {\n  const tuple = useContext(AsideOpenCtx);\n  useDebugValue(tuple[0]);\n  return tuple;\n}\n\nexport const AsideOpenProvider: FC<PropsWithChildren> = ({ children }) => {\n  const tuple = useState(false);\n  return (\n    <AsideOpenCtx.Provider value={tuple}>{children}</AsideOpenCtx.Provider>\n  );\n};\n","import axios from \"axios\";\nimport {\n  removePageTimg,\n  TeamNoteInfo,\n  TeamPageInfo,\n  TeamPageRec,\n} from \"lib/note/note\";\nimport { loadNote, saveTeamNote, updateTeamNote } from \"lib/note/archive\";\nimport { getUserID } from \"lib/user\";\nimport localforage from \"localforage\";\nimport md5 from \"md5\";\n\nexport const BASE_URL = process.env.REACT_APP_PUBLIC_SERVER_URL ?? \"\";\n// export const BASE_URL = process.env.REACT_APP_LOCAL_SERVER_URL ?? \"\";\naxios.defaults.baseURL = BASE_URL;\n\nexport async function getNoteID(roomCode: string) {\n  try {\n    const { data } = await axios.get(`code/${roomCode}`);\n    if (data.statusCode !== 200) return null;\n    return data.noteID as string;\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n}\n\ninterface InfoRes {\n  statusCode: number;\n  code: number;\n  noteInfo: TeamNoteInfo;\n  pageInfos: Record<string, TeamPageInfo>;\n}\n\nexport async function getTeamNoteInfo(noteID: string) {\n  try {\n    const { data } = await axios.get(`info/${noteID}`);\n    const { statusCode, ...res } = data as InfoRes;\n    if (statusCode !== 200) return null;\n    return res;\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n}\n\nexport async function loadTeamNoteInfo(\n  noteID: string,\n  cb?: (len: number) => void\n) {\n  try {\n    const infoRes = await getTeamNoteInfo(noteID);\n    if (!infoRes) return null;\n    const { noteInfo, pageInfos } = infoRes;\n\n    if (await updateTeamNote(noteID, noteInfo, pageInfos)) return infoRes;\n\n    if (noteInfo.withImg) {\n      const { data } = await axios({\n        method: \"GET\",\n        url: noteID,\n        responseType: \"blob\",\n        onDownloadProgress({ loaded }: ProgressEvent) {\n          cb?.(loaded);\n        },\n      });\n      const file = new Blob([data], { type: \"application/pdf\" });\n      await saveTeamNote(noteID, noteInfo, pageInfos, file);\n    } else {\n      await saveTeamNote(noteID, noteInfo, pageInfos);\n    }\n    return infoRes;\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n}\n\nexport async function putNote(noteID: string) {\n  const note = await loadNote(noteID);\n  if (!note) return false;\n  const { uid, name, withImg, pdf, pageOrder, pageRec } = note;\n  removePageTimg(pageRec);\n\n  try {\n    const { data } = await axios.put(`create/${noteID}`, {\n      userID: getUserID(),\n      pageRec,\n      noteInfo: { uid, name, withImg, pageOrder },\n    });\n\n    if (pdf) {\n      const formData = new FormData();\n      const ab = await pdf.arrayBuffer();\n      const file = new Blob([ab]);\n      formData.append(\"file\", file, noteID);\n      await axios({\n        method: \"POST\",\n        url: \"upload\",\n        data: formData,\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      });\n    }\n\n    if (data.statusCode !== 201) return false;\n    return true;\n  } catch (e) {\n    console.error(e);\n    return false;\n  }\n}\n\nconst hashForage = localforage.createInstance({ name: \"updateHash\" });\nexport async function updatePages(noteID: string) {\n  const note = await loadNote(noteID);\n  if (!note) return null;\n  const { uid, name, withImg, pageOrder, pageRec } = note;\n  removePageTimg(pageRec);\n  const noteInfo = { uid, name, withImg, pageOrder };\n\n  const hash = md5(JSON.stringify([pageRec, noteInfo]));\n  const lastHash = await hashForage.getItem<string>(noteID);\n  if (hash === lastHash) return true;\n\n  try {\n    const body = { userID: getUserID(), pageRec, noteInfo };\n    const { data } = await axios.put(`update/${noteID}`, body);\n    if (data.statusCode !== 201) return false;\n    await hashForage.setItem(noteID, hash);\n    return true;\n  } catch (e) {\n    console.error(e);\n    return false;\n  }\n}\n\nconst teamForage = localforage.createInstance({ name: \"teamState\" });\nexport async function getTeamNoteState(\n  noteID: string,\n  cb?: (len: number) => void\n) {\n  const cachedState = await loadCachedTeamState(noteID);\n  const hash = cachedState && md5(JSON.stringify(cachedState));\n\n  try {\n    const { data } = await axios.get(`state/${noteID}`, {\n      params: { userID: getUserID(), hash },\n      onDownloadProgress({ loaded }: ProgressEvent) {\n        cb?.(loaded);\n      },\n    });\n    const { statusCode, modified, teamPages } = data;\n    if (statusCode === 200 && modified) {\n      await teamForage.setItem(noteID, teamPages);\n      return teamPages as TeamPageRec;\n    }\n    return cachedState;\n  } catch (e) {\n    console.error(e);\n    return cachedState;\n  }\n}\n\nexport async function loadCachedTeamState(noteID: string) {\n  return (await teamForage.getItem<TeamPageRec>(noteID)) ?? undefined;\n}\n","import { v4 as getUid } from \"uuid\";\n\nexport interface UserInfo {\n  userID: string;\n  userName: string;\n  online: boolean;\n}\n\nexport const getUserID = (() => {\n  let cached: string;\n  return () => {\n    if (cached) return cached;\n    let userID = localStorage.getItem(\"USER_ID\");\n    if (!userID) {\n      userID = getUid();\n      localStorage.setItem(\"USER_ID\", userID);\n    }\n    cached = userID;\n    return userID;\n  };\n})();\n\nexport const getUserName = () => {\n  let name = localStorage.getItem(\"USER_NAME\");\n  if (!name) {\n    name = getUid().slice(0, 8);\n    localStorage.setItem(\"USER_NAME\", name);\n  }\n  return name;\n};\n\nexport const saveUserName = (name: string) => {\n  name = name.trim();\n  if (!name) return false;\n  else localStorage.setItem(\"USER_NAME\", name);\n  return true;\n};\n","import { DrawState, Operation } from \"./DrawState\";\nimport { List, Map, Record } from \"immutable\";\nimport { NotePage } from \"lib/note/note\";\n\ninterface StateSetRecordType {\n  states: Map<string, DrawState>;\n  editStack: List<string>;\n  undoStack: List<string>;\n}\n\nconst defaultRecord: Readonly<StateSetRecordType> = {\n  states: Map(),\n  editStack: List(),\n  undoStack: List(),\n};\n\ntype StateSetRecord = Record<StateSetRecordType>;\nconst defaultFactory = Record(defaultRecord);\n\nexport type SetOperation = Operation & { pageID: string };\n\nexport class StateSet {\n  constructor(\n    private immutable: StateSetRecord,\n    public lastOp?: SetOperation\n  ) {}\n\n  static createFromPages(pageRec: globalThis.Record<string, NotePage>) {\n    return new StateSet(\n      defaultFactory().set(\n        \"states\",\n        Map(pageRec).map(({ state, ratio }) =>\n          DrawState.loadFromFlat(state, ratio)\n        )\n      )\n    );\n  }\n\n  getImmutable() {\n    return this.immutable;\n  }\n\n  getStates() {\n    return this.getImmutable().get(\"states\");\n  }\n\n  getOneState(pageID: string) {\n    return this.getStates().get(pageID);\n  }\n\n  getEditStack() {\n    return this.getImmutable().get(\"editStack\");\n  }\n\n  getUndoStack() {\n    return this.getImmutable().get(\"undoStack\");\n  }\n\n  setState(pageID: string, drawState: DrawState) {\n    const prevDS = this.getOneState(pageID);\n    if (!prevDS || prevDS === drawState) return this;\n    let currRecord = this.getImmutable()\n      .update(\"states\", (s) => s.set(pageID, drawState))\n      .update(\"editStack\", (l) => l.push(pageID))\n      .delete(\"undoStack\");\n\n    const { lastOp } = drawState;\n    const lastSetOp = lastOp && { ...lastOp, pageID };\n\n    return new StateSet(currRecord, lastSetOp);\n  }\n\n  // sync with mutation.\n  syncStrokeTime(pageID: string, uid: string, timestamp: number) {\n    const prevDS = this.getOneState(pageID);\n    prevDS && DrawState.syncStrokeTime(prevDS, uid, timestamp);\n    return this;\n  }\n\n  addState(pageID: string, notePage: NotePage) {\n    const { state, ratio } = notePage;\n    const newDS = DrawState.loadFromFlat(state, ratio);\n    const currRecord = this.getImmutable().update(\"states\", (s) =>\n      s.set(pageID, newDS)\n    );\n    return new StateSet(currRecord);\n  }\n\n  deleteState(pageID: string) {\n    return new StateSet(\n      this.getImmutable().update(\"states\", (s) => s.delete(pageID))\n    );\n  }\n\n  isUndoable() {\n    return this.getEditStack().size > 0;\n  }\n\n  isRedoable() {\n    return this.getUndoStack().size > 0;\n  }\n\n  undo() {\n    if (!this.isUndoable()) return this;\n    const lastUid = this.getEditStack().last();\n    const prevDS = lastUid && this.getOneState(lastUid);\n    if (!prevDS) return this;\n\n    const newDS = DrawState.undo(prevDS);\n    const { lastOp } = newDS;\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\n\n    return new StateSet(\n      this.getImmutable()\n        .update(\"editStack\", (s) => s.pop())\n        .update(\"undoStack\", (s) => s.push(lastUid))\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\n      lastSetOp\n    );\n  }\n\n  redo() {\n    if (!this.isRedoable()) return this;\n    const lastUid = this.getUndoStack().last();\n    const prevDS = lastUid && this.getOneState(lastUid);\n    if (!prevDS) return this;\n\n    const newDS = DrawState.redo(prevDS);\n    const { lastOp } = newDS;\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\n\n    return new StateSet(\n      this.getImmutable()\n        .update(\"undoStack\", (s) => s.pop())\n        .update(\"editStack\", (s) => s.push(lastUid))\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\n      lastSetOp\n    );\n  }\n}\n","import {\n  useRef,\n  useMemo,\n  useState,\n  useEffect,\n  useDebugValue,\n  useLayoutEffect,\n  useDeferredValue,\n} from \"react\";\nimport localforage from \"localforage\";\nimport { Map } from \"immutable\";\nimport { debounce } from \"lodash\";\nimport { useMemoizedFn as useEvent } from \"ahooks\";\n\nconst scrollForage = localforage.createInstance({ name: \"scroll\" });\nconst persistScroll = debounce((noteID: string, currPageID: string) => {\n  scrollForage.setItem(noteID, currPageID);\n}, 2000);\n\nexport function useScrollPage(\n  noteID: string,\n  pageOrder = [] as string[],\n  deps = [] as any[]\n) {\n  const [refMap, setRefMap] = useState(Map<string, HTMLElement>());\n  const scrolled = useRef(false);\n  const [prevPageID, setPrevPageID] = useState(\"\");\n  useEffect(() => {\n    (async () => {\n      const stored = await scrollForage.getItem<string>(noteID);\n      if (!stored) return (scrolled.current = true);\n      setPrevPageID(stored);\n    })();\n  }, [noteID]);\n\n  useLayoutEffect(() => {\n    const section = refMap.get(prevPageID);\n    if (scrolled.current || !section) return;\n    section.scrollIntoView();\n    scrolled.current = true;\n  }, [prevPageID, refMap]);\n\n  const [inviewRatios, setInviewRatios] = useState(Map<string, number>());\n  const deferredRatios = useDeferredValue(inviewRatios);\n  const deferredOrder = useDeferredValue(pageOrder);\n  const currPageID = useMemo(\n    () => largestKey(deferredRatios, deferredOrder),\n    [deferredRatios, deferredOrder]\n  );\n\n  useEffect(() => {\n    if (scrolled.current) persistScroll(noteID, currPageID);\n  }, [noteID, currPageID]);\n\n  const calcScrollY = useEvent(() => {\n    const section = refMap.get(currPageID);\n    const header = section?.parentElement?.parentElement?.firstElementChild;\n    if (!header) return 0;\n    const { top } = section.getBoundingClientRect();\n    const { height } = header.getBoundingClientRect();\n    return -top + height;\n  });\n  const scrollY = useMemo(calcScrollY, [pageOrder, calcScrollY, ...deps]);\n\n  const scrollToCurr = useEvent(() => {\n    const section = refMap.get(currPageID);\n    if (!section) return;\n    section.scrollIntoView();\n    window.scrollBy(0, scrollY);\n  });\n  useLayoutEffect(scrollToCurr, [pageOrder, scrollToCurr, ...deps]);\n\n  const sectionRef = useEvent((pageID: string) => (el: HTMLElement | null) => {\n    if (!el) return;\n    setRefMap((prev) => prev.set(pageID, el));\n  });\n\n  const taskID = useRef(0);\n  const [scrolling, setScrolling] = useState(false);\n  const scrollPage = (pageID: string) => {\n    const section = refMap.get(pageID);\n    if (!section) return;\n    const handleScroll = () => {\n      window.clearTimeout(taskID.current);\n      taskID.current = window.setTimeout(() => {\n        setScrolling(false);\n        document.removeEventListener(\"scroll\", handleScroll);\n      }, 50);\n    };\n    document.addEventListener(\"scroll\", handleScroll);\n    section.scrollIntoView({ behavior: \"smooth\" });\n    setScrolling(true);\n  };\n\n  useDebugValue(currPageID);\n  return { scrollPage, setInviewRatios, sectionRef, currPageID, scrolling };\n}\n\nconst largestKey = (map: Map<string, number>, order: string[]) => {\n  let result = \"\";\n  let maxRatio = 0;\n  for (let key of order) {\n    const ratio = map.get(key);\n    if (!ratio) continue;\n    if (ratio === 1) return key;\n    if (ratio > maxRatio) {\n      result = key;\n      maxRatio = ratio;\n    }\n  }\n  return result;\n};\n","export function exchange<T>(list: T[], fromIndex: number, toIndex: number) {\n  const result = list.slice();\n  const [removed] = result.splice(fromIndex, 1);\n  if (!removed) return list;\n  result.splice(toIndex, 0, removed);\n  return result;\n}\n\nexport function insertAfter<T>(list: T[], prevItem: T, newItem: T) {\n  const prevIndex = list.indexOf(prevItem);\n  const curr = list.slice();\n  if (prevIndex === -1) return curr;\n  curr.splice(prevIndex + 1, 0, newItem);\n  return curr;\n}\n","import { Avatar } from \"antd\";\nimport { AvatarSize } from \"antd/lib/avatar/SizeContext\";\nimport { FC, useMemo } from \"react\";\nimport { getHashedColor } from \"lib/color\";\nimport { UserInfo } from \"lib/user\";\n\nexport const UserAvatar: FC<{\n  userInfo: UserInfo;\n  size?: AvatarSize;\n  onClick?: () => void;\n  chosen?: boolean;\n  className?: string;\n}> = ({\n  userInfo,\n  size = \"default\",\n  onClick = () => {},\n  chosen = false,\n  className,\n}) => {\n  const color = useMemo(() => getHashedColor(userInfo.userID), [userInfo]);\n  if (!userInfo) return null;\n  const { userName } = userInfo;\n\n  return (\n    <Avatar\n      className={className}\n      data-chosen={chosen}\n      size={size}\n      style={{ backgroundColor: color }}\n    >\n      <div className=\"avatar-wrapper\" onClick={onClick}>\n        {userName?.slice(0, 3)}\n      </div>\n    </Avatar>\n  );\n};\n","import { FC } from \"react\";\nimport { Button } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nexport const AddPageButton: FC<{ addFinalPage: () => void }> = ({\n  addFinalPage,\n}) => {\n  return (\n    <Button type=\"dashed\" icon={<PlusOutlined />} block onClick={addFinalPage}>\n      New page\n    </Button>\n  );\n};\n","import React, {\n  FC,\n  useRef,\n  useMemo,\n  useState,\n  useContext,\n  useLayoutEffect,\n} from \"react\";\nimport {\n  MoreOutlined,\n  PlusOutlined,\n  CopyOutlined,\n  CaretUpOutlined,\n  DeleteOutlined,\n} from \"@ant-design/icons\";\nimport {\n  Draggable,\n  Droppable,\n  DropResult,\n  DragDropContext,\n} from \"react-beautiful-dnd\";\nimport {\n  Avatar,\n  Button,\n  Menu,\n  Pagination,\n  Popover,\n  Select,\n  Switch,\n  Tabs,\n} from \"antd\";\nimport {\n  Setter,\n  useActiveKey,\n  useAsideOpen,\n  ActiveKeyProvider,\n} from \"lib/hooks\";\nimport { ReaderMethods, ReaderStates } from \"../Reader\";\nimport PageWrapper from \"component/PageWrapper\";\nimport { UserAvatar } from \"component/UserAvatar\";\nimport { exchange } from \"../lib/array\";\nimport IconFont from \"component/IconFont\";\nimport classNames from \"classnames\";\nimport { TeamCtx } from \"../Team\";\nimport { useMemoizedFn as useEvent } from \"ahooks\";\nimport { useSwipeable } from \"react-swipeable\";\nimport { NotePage } from \"lib/note/note\";\nimport { TeamState } from \"lib/draw/TeamState\";\nimport { AddPageButton } from \"../tools/AddButton\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { useForceLight } from \"lib/Dark\";\nimport { useDrawCtrl, useUpdateDrawCtrl } from \"lib/draw/DrawCtrl\";\nimport { useMediaQuery } from \"react-responsive\";\n\ntype PreviewProps = ReaderMethods & ReaderStates;\nexport const PageNav: FC<PreviewProps> = (props) => {\n  const [left, setLeft] = useState(false);\n  const [asideOpen] = useAsideOpen();\n\n  const opposite = (\n    <Draggable draggableId=\"OPPOSITE\" index={left ? 1 : 0} isDragDisabled>\n      {({ innerRef }) => <div className=\"opposite\" ref={innerRef} />}\n    </Draggable>\n  );\n\n  return (\n    <CSSTransition in={asideOpen} timeout={300} unmountOnExit>\n      <ActiveKeyProvider initKey=\"ALL\">\n        <DragDropContext\n          onDragEnd={({ destination }) => {\n            if (destination?.index === 0) setLeft(true);\n            if (destination?.index === 1) setLeft(false);\n          }}\n        >\n          <Droppable droppableId=\"preview-drop\" direction=\"horizontal\">\n            {(\n              { droppableProps, innerRef, placeholder },\n              { isDraggingOver }\n            ) => (\n              <aside\n                className=\"preview-drop\"\n                data-left={left}\n                ref={innerRef}\n                data-dragged={isDraggingOver}\n                {...droppableProps}\n              >\n                {opposite}\n                <PreviewCard left={left} {...props} />\n                {placeholder}\n              </aside>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </ActiveKeyProvider>\n    </CSSTransition>\n  );\n};\n\nconst PreviewCard: FC<{ left: boolean } & PreviewProps> = ({\n  left,\n  ...props\n}) => {\n  const [activeKey] = useActiveKey();\n  const [, setAsideOpen] = useAsideOpen();\n\n  const title = {\n    ALL: \"All Pages\",\n    MARKED: \"Bookmarks\",\n    WRITTEN: \"Notes\",\n  }[activeKey];\n\n  const { ref: swipeRef, ...swipeHandler } = useSwipeable({\n    onSwipedLeft() {\n      if (left) setAsideOpen(false);\n    },\n    onSwipedRight() {\n      if (!left) setAsideOpen(false);\n    },\n    swipeDuration: 200,\n  });\n\n  return (\n    <Draggable draggableId={\"CARD\"} index={left ? 0 : 1}>\n      {(\n        { innerRef, draggableProps, dragHandleProps },\n        { isDragging, isDropAnimating }\n      ) => (\n        <div\n          className=\"preview-card\"\n          ref={(e) => {\n            innerRef(e);\n            swipeRef(e);\n          }}\n          data-animating={isDropAnimating}\n          {...draggableProps}\n          {...swipeHandler}\n        >\n          <div className=\"drag-handle\" {...dragHandleProps} />\n          <h3>{title}</h3>\n          <PreviewTabs />\n          <PageList cardDragged={isDragging} {...props} />\n          <PreviewFooter {...props} />\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nconst PageList: FC<PreviewProps & { cardDragged: boolean }> = React.memo(\n  ({ cardDragged, ...props }) => {\n    const refRec = useRef<Record<string, HTMLElement>>({});\n    const [activeKey] = useActiveKey();\n    const [asideOpen] = useAsideOpen();\n    const { pageOrder, currPageID } = props;\n    const { saveReorder, addFinalPage } = props;\n\n    const onDragEnd = ({ source, destination }: DropResult) => {\n      if (!destination || !pageOrder) return;\n      const { index: fromIndex } = source;\n      const { index: toIndex } = destination;\n      const pageID = pageOrder[fromIndex];\n      if (fromIndex === toIndex || !pageID) return;\n      const newOrder = exchange(pageOrder, fromIndex, toIndex);\n      saveReorder(newOrder, true);\n    };\n\n    const initScroll = useEvent(() => {\n      refRec.current[currPageID]?.scrollIntoView();\n    });\n    useLayoutEffect(() => {\n      if (asideOpen) initScroll();\n    }, [asideOpen, activeKey, initScroll]);\n\n    return (\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"preview-list\" isDropDisabled={cardDragged}>\n          {({ droppableProps, innerRef, placeholder }) => (\n            <div className=\"page-list\" ref={innerRef} {...droppableProps}>\n              {pageOrder.map((uid, index) => (\n                <PagePreview\n                  key={uid}\n                  uid={uid}\n                  pageIndex={index}\n                  refRec={refRec.current}\n                  cardDragged={cardDragged}\n                  {...props}\n                />\n              ))}\n              {placeholder}\n              {activeKey === \"ALL\" && (\n                <AddPageButton addFinalPage={addFinalPage} />\n              )}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n);\nPageList.displayName = \"PageList\";\n\nconst PagePreview: FC<\n  {\n    uid: string;\n    pageIndex: number;\n    refRec: Record<string, HTMLElement>;\n    cardDragged: boolean;\n  } & PreviewProps\n> = ({ uid, pageIndex, refRec, cardDragged, ...props }) => {\n  const { stateSet, pageRec, currPageID, scrollPage } = props;\n  const { teamState, ignores } = useContext(TeamCtx);\n  const [activeKey] = useActiveKey();\n  const [chosen, setChosen] = useState(\"\");\n\n  const page = pageRec.get(uid);\n  const drawState = stateSet.getOneState(uid);\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\n\n  const marked = useRef(false);\n  if (activeKey === \"MARKED\") {\n    marked.current = page?.marked || marked.current;\n  } else {\n    marked.current = false;\n  }\n\n  const userIDs = useMemo(\n    () => TeamState.getValidUsers(teamStateMap, ignores),\n    [teamStateMap, ignores]\n  );\n\n  if (!page || !drawState) return null;\n\n  if (\n    activeKey === \"WRITTEN\" &&\n    drawState.isEmpty() &&\n    TeamState.isEmpty(teamStateMap)\n  ) {\n    return null;\n  }\n  if (activeKey === \"MARKED\" && !marked.current) return null;\n  const curr = currPageID === uid;\n\n  return (\n    <Draggable\n      draggableId={uid}\n      index={pageIndex}\n      isDragDisabled={activeKey !== \"ALL\" || cardDragged}\n    >\n      {(\n        { innerRef, draggableProps, dragHandleProps },\n        { isDragging, isDropAnimating }\n      ) => (\n        <div\n          ref={(e) => {\n            innerRef(e);\n            if (e) refRec[uid] = e;\n          }}\n          className=\"page\"\n          data-curr={curr}\n          data-dragged={isDragging}\n          data-animating={isDropAnimating}\n          onClick={() => scrollPage(uid)}\n          {...draggableProps}\n          {...dragHandleProps}\n        >\n          <PageWrapper\n            drawState={teamStateMap?.get(chosen) || drawState}\n            teamStateMap={chosen ? undefined : teamStateMap}\n            thumbnail={page.image}\n            ignores={ignores}\n            preview\n            skipInView={isDragging || cardDragged}\n          />\n          <PreviewTools\n            uid={uid}\n            index={pageIndex}\n            chosen={chosen}\n            setChosen={setChosen}\n            page={page}\n            userIDs={userIDs}\n            {...props}\n          />\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nconst PreviewTools: FC<\n  {\n    uid: string;\n    index: number;\n    chosen: string;\n    setChosen: Setter<string>;\n    page: NotePage;\n    userIDs: string[];\n  } & ReaderMethods\n> = React.memo(({ uid, index, chosen, setChosen, page, userIDs, ...props }) => {\n  const { switchPageMarked } = props;\n  return (\n    <div className=\"tools\" onClick={(e) => e.stopPropagation()}>\n      <div\n        className=\"bookmark\"\n        data-marked={page.marked}\n        onClick={() => switchPageMarked(uid)}\n      />\n      <div className=\"index\">{index + 1}</div>\n      <PreviewOption uid={uid} {...props} />\n      <TeamAvatars userIDs={userIDs} chosen={chosen} setChosen={setChosen} />\n    </div>\n  );\n});\nPreviewTools.displayName = \"PreviewTools\";\n\nconst TeamAvatars: FC<{\n  userIDs: string[];\n  chosen: string;\n  setChosen: Setter<string>;\n}> = ({ userIDs, chosen, setChosen }) => {\n  const { userRec } = useContext(TeamCtx);\n  return (\n    <Avatar.Group\n      maxCount={2}\n      size=\"default\"\n      className={classNames(\"team-group\", { chosen })}\n      maxPopoverPlacement=\"bottom\"\n    >\n      {userIDs.map((userID) => {\n        const userInfo = userRec[userID];\n        if (!userInfo) return null;\n        return (\n          <UserAvatar\n            key={userID}\n            size=\"default\"\n            userInfo={userInfo}\n            className=\"preview-avatar\"\n            chosen={chosen === userID}\n            onClick={() => setChosen((prev) => (prev === userID ? \"\" : userID))}\n          />\n        );\n      })}\n    </Avatar.Group>\n  );\n};\n\nconst PreviewOption: FC<{ uid: string } & ReaderMethods> = ({\n  uid,\n  addPage,\n  deletePage,\n}) => {\n  const menu = (\n    <Menu\n      items={[\n        {\n          key: \"ADD\",\n          icon: <PlusOutlined />,\n          label: \"Add page\",\n          onClick: () => addPage(uid),\n        },\n        {\n          key: \"COPY\",\n          icon: <CopyOutlined />,\n          label: \"Duplicate\",\n          onClick: () => addPage(uid, true),\n        },\n        {\n          key: \"DELETE\",\n          icon: <DeleteOutlined />,\n          label: \"Delete\",\n          danger: true,\n          onClick: () => deletePage(uid),\n        },\n      ]}\n    />\n  );\n  return (\n    <Popover\n      content={menu}\n      trigger=\"click\"\n      placement=\"left\"\n      destroyTooltipOnHide\n      getPopupContainer={(e) => e.parentElement?.parentElement?.parentElement!}\n    >\n      <div className=\"option\">\n        <MoreOutlined />\n      </div>\n    </Popover>\n  );\n};\n\nconst PreviewTabs: FC = React.memo(() => {\n  const [activeKey, setActiveKey] = useActiveKey();\n  return (\n    <Tabs\n      className=\"tabs\"\n      activeKey={activeKey}\n      onChange={setActiveKey}\n      tabBarGutter={0}\n      size=\"small\"\n      centered\n      items={[\n        { key: \"ALL\", label: <IconFont type=\"icon-uf_paper\" /> },\n        { key: \"MARKED\", label: <IconFont type=\"icon-bookmark2\" /> },\n        { key: \"WRITTEN\", label: <IconFont type=\"icon-write\" /> },\n      ]}\n    ></Tabs>\n  );\n});\nPreviewTabs.displayName = \"PreviewTabs\";\n\nconst PreviewFooter: FC<PreviewProps> = ({\n  currPageID,\n  pageOrder,\n  scrollPage,\n  size,\n  setSize,\n}) => {\n  const pageIndex = useMemo(\n    () => (pageOrder.indexOf(currPageID) ?? 0) + 1,\n    [currPageID, pageOrder]\n  );\n\n  const jumpMenu = pageOrder && (\n    <Pagination\n      pageSize={1}\n      total={pageOrder.length}\n      simple\n      current={pageIndex}\n      onChange={(index) => {\n        const pageID = pageOrder[index - 1];\n        pageID && scrollPage(pageID);\n      }}\n    />\n  );\n\n  return (\n    <footer>\n      <Popover\n        content={jumpMenu}\n        trigger=\"click\"\n        getPopupContainer={(e) => e.parentElement!}\n        destroyTooltipOnHide\n      >\n        <Button type=\"text\" size=\"small\">\n          {pageIndex} / {pageOrder.length}\n        </Button>\n      </Popover>\n      <FooterOptions />\n      <Select\n        className=\"size-select\"\n        popupClassName=\"size-drop\"\n        size=\"small\"\n        bordered={false}\n        showArrow={false}\n        dropdownMatchSelectWidth={80}\n        options={[40, 60, 80, 100].map((value) => ({\n          value,\n          label: value + \"%\",\n        }))}\n        value={size}\n        onChange={setSize}\n        placement=\"topRight\"\n        getPopupContainer={(e) => e.parentElement!}\n      />\n    </footer>\n  );\n};\n\nconst FooterOptions = () => {\n  const { finger } = useDrawCtrl();\n  const updateDrawCtrl = useUpdateDrawCtrl();\n  const [forceLight, setForceLight] = useForceLight();\n  const isLight = useMediaQuery({ query: \"(prefers-color-scheme: light)\" });\n\n  const options = (\n    <>\n      <div className=\"footer-option\">\n        <span>Pencil only</span>\n        <Switch\n          size=\"small\"\n          checked={!finger}\n          onChange={(v) => updateDrawCtrl({ finger: !v })}\n        />\n      </div>\n      <div className=\"footer-option\">\n        <span>Light mode</span>\n        <Switch\n          size=\"small\"\n          checked={forceLight || isLight}\n          disabled={isLight}\n          onChange={setForceLight}\n        />\n      </div>\n    </>\n  );\n\n  return (\n    <Popover\n      getPopupContainer={(e) => e.parentElement!}\n      trigger=\"click\"\n      content={options}\n      placement=\"topRight\"\n    >\n      <Button\n        className=\"option-btn\"\n        size=\"small\"\n        type=\"text\"\n        shape=\"circle\"\n        icon={<CaretUpOutlined style={{ opacity: 0.5 }} />}\n      />\n    </Popover>\n  );\n};\n","import { FC } from \"react\";\nimport { Button } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport { HomeFilled, SaveOutlined } from \"@ant-design/icons\";\n\nexport const HeaderLeft: FC<{\n  saved: boolean;\n  instantSave: () => Promise<void> | undefined;\n}> = ({ saved, instantSave }) => {\n  const nav = useNavigate();\n  return (\n    <div className=\"left\">\n      <Button\n        type=\"text\"\n        onClick={async () => {\n          await instantSave();\n          nav(\"/\");\n        }}\n        icon={<HomeFilled style={{ opacity: 0.8 }} />}\n      />\n      <Button\n        type=\"text\"\n        className=\"save\"\n        onClick={instantSave}\n        disabled={saved}\n        icon={<SaveOutlined />}\n      />\n    </div>\n  );\n};\n","import { FC } from \"react\";\nimport { Button, ButtonProps, Popover, Segmented, Switch, Tooltip } from \"antd\";\nimport {\n  UndoOutlined,\n  RedoOutlined,\n  GatewayOutlined,\n  HighlightTwoTone,\n  HighlightOutlined,\n  QuestionCircleOutlined,\n} from \"@ant-design/icons\";\nimport IconFont from \"component/IconFont\";\nimport { PenPanel, WidthSelect } from \"../tools/PenPanel\";\nimport { useDrawCtrl, useUpdateDrawCtrl } from \"lib/draw/DrawCtrl\";\n\nconst btnProps: ButtonProps = { type: \"text\", shape: \"circle\" };\n\nexport const HeaderMiddle: FC<{\n  handleUndo: () => void;\n  handleRedo: () => void;\n  undoable: boolean;\n  redoable: boolean;\n}> = ({ handleUndo, handleRedo, undoable, redoable }) => {\n  const { mode } = useDrawCtrl();\n  const updateDrawCtrl = useUpdateDrawCtrl();\n\n  return (\n    <div className=\"middle\">\n      <Button\n        {...btnProps}\n        icon={<UndoOutlined />}\n        onClick={handleUndo}\n        disabled={!undoable}\n      />\n      <Button\n        className=\"redo-btn\"\n        {...btnProps}\n        icon={<RedoOutlined />}\n        onClick={handleRedo}\n        disabled={!redoable}\n      />\n      <PenButton />\n      <EraserButton />\n      <Button\n        shape=\"circle\"\n        type={mode === \"text\" ? \"link\" : \"text\"}\n        onClick={() => updateDrawCtrl({ mode: \"text\" })}\n        icon={<IconFont type=\"icon-text1\" />}\n      />\n      <SelectButton />\n    </div>\n  );\n};\n\nconst PenButton = () => {\n  const drawCtrl = useDrawCtrl();\n  const { mode, color } = drawCtrl;\n  const updateDrawCtrl = useUpdateDrawCtrl();\n\n  return mode === \"draw\" ? (\n    <Popover\n      content={<PenPanel updateDrawCtrl={updateDrawCtrl} drawCtrl={drawCtrl} />}\n      trigger=\"click\"\n      placement=\"bottom\"\n      getPopupContainer={(e) => e.parentElement!}\n      destroyTooltipOnHide\n    >\n      <Button\n        type=\"link\"\n        icon={<HighlightTwoTone twoToneColor={color} className=\"pen-icon\" />}\n      />\n    </Popover>\n  ) : (\n    <Button\n      {...btnProps}\n      onClick={() => updateDrawCtrl({ mode: \"draw\" })}\n      icon={<HighlightOutlined />}\n    />\n  );\n};\n\nconst EraserButton = () => {\n  const drawCtrl = useDrawCtrl();\n  const { mode, pixelEraser, globalEraser } = drawCtrl;\n  const updateDrawCtrl = useUpdateDrawCtrl();\n\n  const pixelSeg = (\n    <Segmented\n      block\n      size=\"small\"\n      className=\"pixel-seg\"\n      options={[\"Pixel\", \"Object\"]}\n      value={pixelEraser ? \"Pixel\" : \"Object\"}\n      onChange={(value) => {\n        if (value === \"Pixel\") updateDrawCtrl({ pixelEraser: true });\n        else updateDrawCtrl({ pixelEraser: false });\n      }}\n    />\n  );\n\n  const globalSwitch = (\n    <div className=\"global-switch\" data-pixel-on={pixelEraser}>\n      {pixelEraser || (\n        <>\n          <span>\n            Global\n            <Tooltip className=\"hint\" title=\"Turn on to erase others' strokes.\">\n              <QuestionCircleOutlined />\n            </Tooltip>\n          </span>\n          <Switch\n            size=\"small\"\n            checked={globalEraser}\n            onChange={(v) => updateDrawCtrl({ globalEraser: v })}\n          />\n        </>\n      )}\n    </div>\n  );\n\n  return mode === \"erase\" ? (\n    <Popover\n      content={\n        <div className=\"erase-panel\">\n          {pixelSeg}\n          <WidthSelect\n            drawCtrl={drawCtrl}\n            updateDrawCtrl={updateDrawCtrl}\n            field=\"eraserWidth\"\n          />\n          {globalSwitch}\n        </div>\n      }\n      trigger=\"click\"\n      placement=\"bottom\"\n      getPopupContainer={(e) => e.parentElement!}\n      destroyTooltipOnHide\n    >\n      <Button type=\"link\" icon={<IconFont type=\"icon-eraser\" />} />\n    </Popover>\n  ) : (\n    <Button\n      {...btnProps}\n      onClick={() => updateDrawCtrl({ mode: \"erase\" })}\n      icon={<IconFont type=\"icon-eraser\" />}\n    />\n  );\n};\n\nconst SelectButton = () => {\n  const { lasso, mode } = useDrawCtrl();\n  const updateDrawCtrl = useUpdateDrawCtrl();\n\n  const icon = lasso ? <IconFont type=\"icon-lasso1\" /> : <GatewayOutlined />;\n\n  return mode === \"select\" ? (\n    <Button\n      type=\"link\"\n      icon={icon}\n      onClick={() => updateDrawCtrl({ lasso: !lasso })}\n    />\n  ) : (\n    <Button\n      {...btnProps}\n      icon={icon}\n      onClick={() => updateDrawCtrl({ mode: \"select\" })}\n    />\n  );\n};\n","import { FC, useMemo, useState, useEffect, useContext } from \"react\";\nimport { Badge, Alert, Modal, Button, Divider, message, Popover } from \"antd\";\nimport Search from \"antd/lib/input/Search\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { PasscodeInput } from \"antd-mobile\";\nimport { TeamCtx } from \"../Team\";\nimport { getUserID, saveUserName, UserInfo } from \"lib/user\";\nimport {\n  EyeOutlined,\n  FormOutlined,\n  TeamOutlined,\n  LinkOutlined,\n  CheckOutlined,\n  ReloadOutlined,\n  ShareAltOutlined,\n  CheckCircleFilled,\n  DisconnectOutlined,\n  EyeInvisibleOutlined,\n  UsergroupAddOutlined,\n} from \"@ant-design/icons\";\nimport { editNoteData } from \"lib/note/archive\";\nimport { UserAvatar } from \"component/UserAvatar\";\nimport { putNote } from \"lib/network/http\";\nimport copy from \"clipboard-copy\";\nimport { useAsideOpen } from \"lib/hooks\";\nimport { sortBy } from \"lodash\";\nimport IconFont from \"component/IconFont\";\n\nexport const HeaderRight: FC<{\n  instantSave: () => Promise<void> | undefined;\n}> = ({ instantSave }) => {\n  const { teamOn } = useContext(TeamCtx);\n  return (\n    <div className=\"right\">\n      {teamOn ? <RoomInfo /> : <JoinRoom instantSave={instantSave} />}\n      <PageNavButton />\n    </div>\n  );\n};\n\nconst PageNavButton = () => {\n  const [asideOpen, setAsideOpen] = useAsideOpen();\n  return (\n    <Button\n      type={asideOpen ? \"link\" : \"text\"}\n      icon={<IconFont type=\"icon-cards\" />}\n      onClick={() => setAsideOpen((prev) => !prev)}\n    />\n  );\n};\n\nconst UserCard: FC<{ userInfo: UserInfo }> = ({ userInfo }) => {\n  const [renaming, setRenaming] = useState(false);\n  const { ignores, setIgnores, resetIO } = useContext(TeamCtx);\n  useEffect(() => setRenaming(false), [userInfo]);\n  if (!userInfo) return null;\n\n  const { userName, online, userID } = userInfo;\n  const self = userID === getUserID();\n  const ignored = ignores.has(userID) && !self;\n\n  const switchIgnore = () => {\n    setIgnores((prev) => {\n      if (prev.has(userID)) return prev.delete(userID);\n      return prev.add(userID);\n    });\n  };\n\n  const submitRename = (value: string) => {\n    const name = value.trim();\n    if (!name || name === userName) return setRenaming(false);\n    saveUserName(name);\n    resetIO();\n  };\n\n  return (\n    <div className=\"user-item\" data-online={online}>\n      <UserAvatar userInfo={userInfo} size=\"small\" className=\"room-avatar\" />\n      {renaming || <span className=\"user-name\">{userName}</span>}\n      {renaming && (\n        <Search\n          autoFocus\n          className=\"rename-input\"\n          defaultValue={userName}\n          onSearch={submitRename}\n          enterButton={<Button icon={<CheckOutlined />} />}\n        />\n      )}\n      {self ? (\n        renaming || (\n          <Button\n            type=\"text\"\n            icon={<FormOutlined />}\n            onClick={() => setRenaming(true)}\n          />\n        )\n      ) : (\n        <Button\n          type=\"text\"\n          icon={ignored ? <EyeInvisibleOutlined /> : <EyeOutlined />}\n          onClick={switchIgnore}\n        />\n      )}\n    </div>\n  );\n};\n\nconst ShareButton: FC = () => {\n  const [copied, setCopied] = useState(false);\n  const link = window.location.href;\n  const share = async () => {\n    try {\n      await copy(`${document.title}\\n${link}`);\n      setCopied(true);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  return (\n    <Button\n      icon={copied ? <CheckCircleFilled /> : <LinkOutlined />}\n      type={copied ? \"primary\" : \"default\"}\n      className=\"share-btn\"\n      onClick={share}\n      block\n    >\n      {copied ? \"Copied\" : \"Copy link\"}\n    </Button>\n  );\n};\n\nconst RoomInfo: FC = () => {\n  const { code, userRec, connected, loadInfo, loadState, resetIO } =\n    useContext(TeamCtx);\n\n  const userList = useMemo(() => {\n    const selfID = getUserID();\n    const { [selfID]: selfInfo, ...otherUsers } = userRec;\n    if (!selfInfo) return [];\n    const values = Object.values(otherUsers);\n    return [selfInfo, ...sortBy(values, \"online\").reverse()];\n  }, [userRec]);\n\n  const onlineNum = useMemo(\n    () => userList.filter(({ online }) => online).length,\n    [userList]\n  );\n\n  const teamPop = (\n    <div className=\"team-popover\">\n      {connected || (\n        <Alert\n          className=\"disconn-alert\"\n          message=\"Network failed.\"\n          icon={<DisconnectOutlined />}\n          type=\"error\"\n          showIcon\n          banner\n        />\n      )}\n      <div className=\"team-info-title\">\n        <ShareAltOutlined />\n        <span>Share</span>\n      </div>\n      <PasscodeInput\n        className=\"code-display\"\n        value={String(code)}\n        length={4}\n        plain\n      />\n      <ShareButton />\n      <Divider />\n      <div className=\"team-info-title\">\n        <TeamOutlined />\n        <span>Members</span>\n      </div>\n      <div className=\"user-list\">\n        {userList.map((u) => (\n          <UserCard key={u.userID} userInfo={u} />\n        ))}\n      </div>\n    </div>\n  );\n\n  const [reloading, setReloading] = useState(false);\n  const title = (\n    <div className=\"team-title\">\n      <span>Team info</span>\n      <Button\n        shape=\"circle\"\n        type=\"text\"\n        size=\"small\"\n        loading={reloading}\n        icon={<ReloadOutlined />}\n        onClick={async () => {\n          setReloading(true);\n          await loadInfo();\n          await loadState();\n          setReloading(false);\n          resetIO();\n        }}\n      />\n    </div>\n  );\n\n  return (\n    <Popover\n      content={teamPop}\n      trigger=\"click\"\n      placement=\"bottomRight\"\n      title={title}\n      getPopupContainer={(e) => e.parentElement!}\n      destroyTooltipOnHide\n    >\n      <Button\n        type=\"text\"\n        icon={\n          <Badge\n            status={connected ? \"success\" : \"error\"}\n            count={connected ? onlineNum : \"!\"}\n            size=\"small\"\n          >\n            <TeamOutlined />\n          </Badge>\n        }\n      />\n    </Popover>\n  );\n};\n\nconst JoinRoom: FC<{\n  instantSave: () => Promise<void> | undefined;\n}> = ({ instantSave }) => {\n  const noteID = useParams().noteID ?? \"\";\n  const nav = useNavigate();\n\n  const createRoom = async () => {\n    await instantSave();\n    const res = await putNote(noteID);\n    if (!res) return message.error(\"Can't create room.\");\n    await editNoteData(noteID, { team: true });\n    nav(\"/team/\" + noteID);\n  };\n\n  const showModal = () => {\n    Modal.confirm({\n      title: \"Enable team editing\",\n      content: \"This will make your note public to anyone with the link.\",\n      icon: <TeamOutlined style={{ color: \"#555\" }} />,\n      onOk: createRoom,\n    });\n  };\n\n  return (\n    <Button type=\"text\" icon={<UsergroupAddOutlined />} onClick={showModal} />\n  );\n};\n","import { FC } from \"react\";\nimport { HeaderLeft } from \"./Left\";\nimport { HeaderMiddle } from \"./Middle\";\nimport { HeaderRight } from \"./Right\";\nimport \"./header.sass\";\n\nexport const Header: FC<{\n  saved: boolean;\n  handleUndo: () => void;\n  handleRedo: () => void;\n  undoable: boolean;\n  redoable: boolean;\n  instantSave: () => Promise<void> | undefined;\n}> = ({ saved, instantSave, ...undoProps }) => (\n  <header>\n    <HeaderLeft saved={saved} instantSave={instantSave} />\n    <HeaderMiddle {...undoProps} />\n    <HeaderRight instantSave={instantSave} />\n  </header>\n);\n","import { FC, useMemo, useState } from \"react\";\nimport { Input } from \"antd\";\nimport { NoteInfo } from \"lib/note/note\";\nimport dayjs from \"dayjs\";\nimport calender from \"dayjs/plugin/calendar\";\ndayjs.extend(calender);\n\nexport const InfoNav: FC<{\n  noteInfo: NoteInfo;\n  renameNote: (name: string) => void;\n}> = ({ noteInfo, renameNote }) => {\n  const [inputShow, setInputShow] = useState(false);\n  const [name, setName] = useState(noteInfo.name);\n\n  const [createDateShow, setCreateDateShow] = useState(false);\n  const { lastTime: lt, createTime: ct } = noteInfo;\n  const lastDate = useMemo(() => dayjs(lt).calendar(), [lt]);\n  const createDate = useMemo(() => dayjs(ct).calendar(), [ct]);\n\n  return (\n    <nav>\n      <div className=\"info\">\n        {inputShow ? (\n          <Input\n            className=\"title\"\n            size=\"large\"\n            bordered={false}\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            autoFocus\n            onBlur={() => {\n              renameNote(name);\n              setInputShow(false);\n            }}\n          />\n        ) : (\n          <p className=\"title\" onClick={() => setInputShow(true)}>\n            {name}\n          </p>\n        )}\n        <span className=\"time\" onClick={() => setCreateDateShow((p) => !p)}>\n          {createDateShow ? createDate : lastDate}\n          <span className=\"label\">\n            {createDateShow ? \"Created\" : \"Last Edited\"}\n          </span>\n        </span>\n      </div>\n    </nav>\n  );\n};\n","import {\n  FC,\n  useMemo,\n  useState,\n  useEffect,\n  useContext,\n  useCallback,\n} from \"react\";\nimport { NoteInfo, NotePage, createPage, defaultNotePage } from \"lib/note/note\";\nimport { DrawCtrlProvider, useDrawCtrl } from \"lib/draw/DrawCtrl\";\nimport { NewPageInfo, pushAck, ReorderInfo } from \"lib/network/io\";\nimport { DarkModeProvider } from \"lib/Dark\";\nimport { useMemoizedFn as useEvent } from \"ahooks\";\nimport { SetOperation, StateSet } from \"lib/draw/StateSet\";\nimport { loadNote, editNoteData } from \"lib/note/archive\";\nimport { showPageDelMsg, showReopenMsg } from \"./tools/Messages\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport PageWrapper from \"component/PageWrapper\";\nimport { DrawState } from \"lib/draw/DrawState\";\nimport { useScrollPage } from \"./lib/scroll\";\nimport { debounce, last } from \"lodash\";\nimport { insertAfter } from \"./lib/array\";\nimport { PageNav } from \"./PageNav\";\nimport { AsideOpenProvider, Setter } from \"lib/hooks\";\nimport { AddPageButton } from \"./tools/AddButton\";\nimport { Header } from \"./Header\";\nimport { TeamCtx } from \"./Team\";\nimport { Map } from \"immutable\";\nimport { message } from \"antd\";\nimport { InfoNav } from \"./Info\";\nimport \"./reader.sass\";\n\nexport interface ReaderStates {\n  noteID: string;\n  currPageID: string;\n  stateSet: StateSet;\n  pageRec: Map<string, NotePage>;\n  pageOrder: string[];\n  size: number;\n}\n\nexport interface ReaderMethods {\n  scrollPage: (pageID: string) => void;\n  switchPageMarked: (pageID: string) => void;\n  addPage: (prevPageID: string, copy?: boolean) => void;\n  addFinalPage: () => void;\n  deletePage: (pageID: string) => void;\n  saveReorder: (order: string[], push: boolean) => Promise<void>;\n  setSize: Setter<number>;\n}\n\nexport default function Reader() {\n  return (\n    <AsideOpenProvider>\n      <DarkModeProvider>\n        <DrawCtrlProvider>\n          <ReaderContent />\n        </DrawCtrlProvider>\n      </DarkModeProvider>\n    </AsideOpenProvider>\n  );\n}\n\nconst ReaderContent: FC = () => {\n  const noteID = useParams().noteID ?? \"\";\n  const nav = useNavigate();\n\n  const [pageRec, setPageRec] = useState<Map<string, NotePage>>();\n  const [noteInfo, setNoteInfo] = useState<NoteInfo>();\n  const [stateSet, setStateSet] = useState<StateSet>();\n  const [pageOrder, setPageOrder] = useState<string[]>();\n  const [saved, setSaved] = useState(true);\n\n  const { io, addTeamStatePage, checkOpID } = useContext(TeamCtx);\n\n  useEffect(() => {\n    (async () => {\n      const storedNote = await loadNote(noteID);\n      if (!storedNote) {\n        message.error(\"Note not found\");\n        return nav(\"/\");\n      }\n      const { pageRec, pdf, pageOrder, ...noteInfo } = storedNote;\n      setPageRec(Map(pageRec));\n      setPageOrder(pageOrder);\n      setNoteInfo(noteInfo);\n      setStateSet(StateSet.createFromPages(pageRec));\n    })();\n  }, [nav, noteID]);\n\n  useEffect(() => {\n    if (!noteInfo) return;\n    document.title = noteInfo.name + \" - Multibility\";\n  }, [noteInfo]);\n\n  useEffect(() => {\n    document.body.classList.add(\"reader\");\n    return () => document.body.classList.remove(\"reader\");\n  }, []);\n\n  const saver = useEvent(async (withState = false) => {\n    let currPageRec = pageRec;\n    if (withState) {\n      stateSet?.getStates().forEach((ds, pageID) => {\n        currPageRec = currPageRec?.update(pageID, defaultNotePage, (page) => ({\n          ...page,\n          state: DrawState.flaten(ds),\n        }));\n      });\n      setPageRec(currPageRec);\n    }\n    const pr = currPageRec?.toObject();\n    await editNoteData(noteID, { pageRec: pr });\n    setSaved(true);\n  });\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debouncedSave = useCallback(debounce(saver, 5000), [saver]);\n  const instantSave = debouncedSave.flush;\n\n  const savePageRec = (pageID: string, cb: (prev: NotePage) => NotePage) => {\n    setPageRec((prev) => prev?.update(pageID, defaultNotePage, cb));\n    setSaved(false);\n    debouncedSave();\n  };\n\n  const saveReorder = async (pageOrder: string[], push = false) => {\n    setPageOrder(pageOrder);\n    await editNoteData(noteID, { pageOrder });\n    await instantSave();\n    push && pushReorder(pageOrder);\n  };\n\n  const pushReorder = (pageOrder: string[]) =>\n    io?.emit(\"reorder\", { pageOrder });\n\n  const handleReorder = useEvent(\n    ({ deleted, pageOrder, prevOrder }: ReorderInfo) => {\n      saveReorder(pageOrder);\n      if (!deleted) return;\n      showPageDelMsg(() => saveReorder(prevOrder, true));\n    }\n  );\n\n  const handleNewPage = useEvent(\n    ({ pageOrder, pageID, newPage }: NewPageInfo) => {\n      saveReorder(pageOrder);\n      savePageRec(pageID, () => newPage);\n      setStateSet((prev) => prev?.addState(pageID, newPage));\n    }\n  );\n\n  useEffect(() => {\n    io?.on(\"reorder\", handleReorder);\n    io?.on(\"newPage\", handleNewPage);\n    return () => void io?.removeAllListeners();\n  }, [io, handleReorder, handleNewPage]);\n\n  const pushOperation = (operation: SetOperation) => {\n    const handleSync = (t: number) => {\n      if (operation.type !== \"add\") return;\n      const { pageID, stroke } = operation;\n      const { uid } = stroke;\n      setStateSet((prev) => prev?.syncStrokeTime(pageID, uid, t));\n    };\n\n    io?.emit(\n      \"push\",\n      { operation },\n      ({ timestamp, prevID, currID }: pushAck) => {\n        handleSync(timestamp);\n        checkOpID(prevID, currID);\n      }\n    );\n  };\n\n  const pushNewPage = (\n    pageOrder: string[],\n    pageID: string,\n    newPage: NotePage\n  ) => {\n    const { image, marked, ...newTeamPage } = newPage;\n    io?.emit(\"newPage\", { pageOrder, pageID, newPage: newTeamPage });\n    addTeamStatePage(pageID, newPage);\n  };\n\n  const updateStateSet = (cb: (prevSS: StateSet) => StateSet) => {\n    if (!stateSet) return;\n    const newSS = cb(stateSet);\n    if (newSS === stateSet) return;\n    setStateSet(newSS);\n    setSaved(false);\n    debouncedSave(true);\n    const lastOp = newSS.lastOp;\n    lastOp && pushOperation(lastOp);\n  };\n\n  const switchPageMarked = (pageID: string) =>\n    savePageRec(pageID, (prev) => ({ ...prev, marked: !prev.marked }));\n\n  const addPage = (prevPageID: string, copy = false) => {\n    if (!pageOrder) return;\n    const prevPage = copy ? pageRec?.get(prevPageID) : undefined;\n    const [pageID, newPage] = createPage(prevPage);\n    const newOrder = insertAfter(pageOrder, prevPageID, pageID);\n    pushNewPage(newOrder, pageID, newPage);\n    saveReorder(newOrder);\n    savePageRec(pageID, () => newPage);\n    setStateSet((prev) => prev?.addState(pageID, newPage));\n  };\n\n  const addFinalPage = () => {\n    const lastPageID = last(pageOrder);\n    lastPageID && addPage(lastPageID);\n  };\n\n  const deletePage = (pageID: string) => {\n    const newOrder = pageOrder?.filter((id) => id !== pageID);\n    newOrder?.length && saveReorder(newOrder, true);\n  };\n\n  const [size, setSize] = useState(100);\n  const isFull = size === 100;\n  const pd = (100 - size) / 2 + \"%\";\n  const mainStyle = { paddingLeft: pd, paddingRight: pd };\n\n  const { setInviewRatios, scrollPage, sectionRef, currPageID, scrolling } =\n    useScrollPage(noteID, pageOrder, [size]);\n\n  const { finger } = useDrawCtrl();\n\n  useEffect(() => {\n    if (!window.BroadcastChannel) return;\n    const bc = new BroadcastChannel(\"open note\");\n    bc.postMessage(noteID);\n    bc.onmessage = (e) => {\n      if (e.data !== noteID) return;\n      debouncedSave.cancel();\n      showReopenMsg(() => nav(\"/\"));\n    };\n    return () => bc.close();\n  }, [nav, noteID, debouncedSave]);\n\n  const renameNote = async (name: string) => {\n    if (name === noteInfo?.name) return;\n    await editNoteData(noteID, { name });\n    const storedNote = await loadNote(noteID);\n    if (!storedNote) return;\n    const { pageRec, pdf, pageOrder, ...info } = storedNote;\n    setNoteInfo(info);\n  };\n\n  if (!stateSet || !pageOrder || !pageRec || !noteInfo) return null;\n  const readerStates: ReaderStates = {\n    noteID,\n    pageRec,\n    pageOrder,\n    stateSet,\n    currPageID,\n    size,\n  };\n  const readerMethods: ReaderMethods = {\n    scrollPage,\n    switchPageMarked,\n    addFinalPage,\n    addPage,\n    deletePage,\n    saveReorder,\n    setSize,\n  };\n\n  return (\n    <div className=\"reader container\">\n      <Header\n        saved={saved}\n        instantSave={instantSave}\n        handleUndo={() => updateStateSet((prev) => prev.undo())}\n        handleRedo={() => updateStateSet((prev) => prev.redo())}\n        undoable={stateSet.isUndoable()}\n        redoable={stateSet.isRedoable()}\n      />\n      <InfoNav noteInfo={noteInfo} renameNote={renameNote} />\n      <main data-finger={finger} data-full={isFull} style={mainStyle}>\n        {pageOrder.map((uid) => (\n          <section key={uid} className=\"note-page\" ref={sectionRef(uid)}>\n            <PageContainer\n              uid={uid}\n              updateStateSet={updateStateSet}\n              setInviewRatios={setInviewRatios}\n              scrolling={scrolling}\n              {...readerStates}\n            />\n          </section>\n        ))}\n        <footer>\n          <AddPageButton addFinalPage={addFinalPage} />\n        </footer>\n      </main>\n      <PageNav {...readerStates} {...readerMethods} />\n    </div>\n  );\n};\n\nconst PageContainer: FC<\n  {\n    uid: string;\n    updateStateSet: (cb: (prevSS: StateSet) => StateSet) => void;\n    setInviewRatios: Setter<Map<string, number>>;\n    scrolling: boolean;\n  } & ReaderStates\n> = ({\n  uid,\n  updateStateSet,\n  setInviewRatios,\n  scrolling,\n  pageRec,\n  stateSet,\n  currPageID,\n  pageOrder,\n  noteID,\n}) => {\n  const { teamState, ignores } = useContext(TeamCtx);\n\n  const page = pageRec.get(uid);\n  const drawState = stateSet.getOneState(uid);\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\n  const updateState = useEvent((ds: DrawState) => {\n    updateStateSet((prev) => prev.setState(uid, ds));\n  });\n\n  const onViewChange = useEvent((ratio: number) => {\n    if (!ratio) return setInviewRatios((prev) => prev.delete(uid));\n    setInviewRatios((prev) => prev.set(uid, ratio));\n  });\n\n  const preload = useMemo(() => {\n    if (!pageOrder) return false;\n    const currIndex = pageOrder.indexOf(currPageID);\n    const selfIndex = pageOrder.indexOf(uid);\n    return Math.abs(selfIndex - currIndex) <= 1;\n  }, [currPageID, uid, pageOrder]);\n\n  if (!page || !drawState) return null;\n  return (\n    <PageWrapper\n      drawState={drawState}\n      teamStateMap={teamStateMap}\n      updateState={updateState}\n      pdfIndex={page.pdfIndex}\n      noteID={noteID}\n      ignores={ignores}\n      onViewChange={onViewChange}\n      preload={preload}\n      skipInView={scrolling}\n    />\n  );\n};\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { useMemoizedFn as useEvent } from \"ahooks\";\nimport {\n  getTeamNoteState,\n  loadTeamNoteInfo,\n  updatePages,\n} from \"lib/network/http\";\nimport { IoFactory, NewPageInfo } from \"lib/network/io\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { showJoinMsg, showLeaveMsg } from \"./tools/Messages\";\nimport { TeamState } from \"lib/draw/TeamState\";\nimport { getUserID, UserInfo } from \"lib/user\";\nimport { NotePage } from \"lib/note/note\";\nimport { Socket } from \"socket.io-client\";\nimport { Setter } from \"lib/hooks\";\nimport { Loading } from \"component/Loading\";\nimport { message } from \"antd\";\nimport { Set } from \"immutable\";\nimport Reader from \"./Reader\";\nimport { DebouncedFunc, throttle } from \"lodash\";\nimport bytes from \"bytes\";\n\nexport const TeamCtx = React.createContext({\n  io: undefined as Socket | undefined,\n  code: 0,\n  teamOn: false,\n  connected: false,\n  ignores: Set<string>(),\n  userRec: {} as Record<string, UserInfo>,\n  teamState: undefined as TeamState | undefined,\n  resetIO: () => {},\n  loadInfo: async () => false,\n  loadState: (() => {}) as DebouncedFunc<() => Promise<boolean>>,\n  setIgnores: (() => {}) as Setter<Set<string>>,\n  addTeamStatePage: (pageID: string, newPage: NotePage) => {},\n  checkOpID: (prevID: string, currID: string) => {},\n});\n\nexport default function Team() {\n  const noteID = useParams().noteID ?? \"\";\n  const [teamState, setTeamState] = useState<TeamState>();\n  const [code, setCode] = useState(-2);\n  const [userRec, setUserRec] = useState<Record<string, UserInfo>>({});\n  const [ignores, setIgnores] = useState(Set<string>());\n  const [io, setIO] = useState<Socket>();\n  const [loaded, setLoaded] = useState(false);\n  const [connected, setConnected] = useState(false);\n  const nav = useNavigate();\n  const [loadingText, setLoadingText] = useState(\"\");\n\n  const loadInfo = useEvent(async () => {\n    setLoadingText(\"Loading note info...\");\n    const info = await loadTeamNoteInfo(noteID, (len) => {\n      setLoadingText(\"Downloading PDF: \" + bytes(len));\n    });\n    if (!info) {\n      message.error(\"Failed loading the team note info\");\n      return false;\n    }\n    setCode(info.code);\n    return true;\n  });\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const loadState = useCallback(\n    throttle(async (cb?: (len: number) => void) => {\n      setLoadingText(\"Loading team note...\");\n      const teamNote = await getTeamNoteState(noteID, (len) => {\n        if (len < 1024) return;\n        setLoadingText(\"Loading team note: \" + bytes(len));\n        cb?.(len);\n      });\n      if (!teamNote) {\n        message.error(\"Failed loading the team note state\");\n        return false;\n      }\n      setTeamState(TeamState.createFromTeamPages(teamNote));\n      return true;\n    }, 10_000),\n    [noteID]\n  );\n  const reloadState = () => {\n    const key = \"SYNC\";\n    const hide = message.loading({ content: \"Syncing...\", key });\n    loadState((len) => {\n      const content = \"Syncing: \" + bytes(len);\n      message.loading({ content, key, duration: 0 });\n    })?.then(hide);\n  };\n\n  const resetIO = useEvent(() => setIO(IoFactory(noteID)));\n  const updateSelfState = useEvent(() => void updatePages(noteID));\n\n  const opID = useRef(\"\");\n  const checkOpID = useEvent((prevID: string, currID: string) => {\n    const lost = prevID && opID.current && prevID !== opID.current;\n    opID.current = currID;\n    if (lost) reloadState();\n  });\n  const resetOpID = useEvent((currID: string) => {\n    const lost = opID.current && opID.current !== currID;\n    opID.current = currID;\n    if (lost) reloadState();\n  });\n\n  useEffect(() => {\n    const roomInit = async () => {\n      const infoLoaded = await loadInfo();\n      const stateLoaded = await loadState();\n      if (!infoLoaded || !stateLoaded) return nav(\"/\");\n      setLoaded(true);\n      resetIO();\n      updateSelfState();\n    };\n    roomInit();\n    return updateSelfState;\n  }, [loadInfo, loadState, nav, resetIO, updateSelfState]);\n\n  useEffect(() => {\n    if (!io) return;\n    io.on(\"push\", ({ operation, userID, prevID, currID }) => {\n      setTeamState((prev) => prev?.pushOperation(operation, userID));\n      checkOpID(prevID, currID);\n    });\n\n    io.on(\"join\", ({ joined, members }) => {\n      const { userID, userName } = joined;\n      setUserRec(members);\n      if (userID === getUserID()) return;\n      showJoinMsg(userID, userName);\n    });\n\n    io.on(\"leave\", ({ leaved, members }) => {\n      const { userID, userName } = leaved;\n      setUserRec(members);\n      if (userID === getUserID()) return io.emit(\"join\");\n      showLeaveMsg(userID, userName);\n    });\n\n    io.on(\"newPage\", (info: NewPageInfo) => {\n      const { pageID, newPage } = info;\n      setTeamState((prev) => prev?.addPage(pageID, newPage));\n    });\n\n    io.on(\"reset\", ({ userID, pageRec }) => {\n      if (userID === getUserID()) return;\n      setTeamState((prev) => prev?.resetUser(userID, pageRec));\n    });\n\n    io.on(\"connect_error\", console.error);\n    io.on(\"disconnect\", () => setConnected(false));\n    io.on(\"connect\", () => setConnected(true));\n    io.on(\"connected\", ({ currID }) => resetOpID(currID));\n\n    return () => {\n      io.removeAllListeners();\n      io.close();\n    };\n  }, [io, checkOpID, resetOpID]);\n\n  const addTeamStatePage = (pageID: string, newPage: NotePage) => {\n    setTeamState((prev) => prev?.addPage(pageID, newPage));\n  };\n\n  return (\n    <Loading loading={!loaded} text={loadingText}>\n      <TeamCtx.Provider\n        value={{\n          io,\n          code,\n          teamOn: true,\n          ignores,\n          userRec,\n          connected,\n          teamState,\n          resetIO,\n          loadInfo,\n          loadState,\n          setIgnores,\n          addTeamStatePage,\n          checkOpID,\n        }}\n      >\n        <Reader />\n      </TeamCtx.Provider>\n    </Loading>\n  );\n}\n","import { io } from \"socket.io-client\";\nimport { NotePage } from \"lib/note/note\";\nimport { getUserID, getUserName } from \"lib/user\";\nimport { BASE_URL } from \"./http\";\n\nexport const IoFactory = (noteID: string) =>\n  io(BASE_URL, {\n    query: {\n      userID: getUserID(),\n      userName: getUserName(),\n      noteID,\n    },\n  });\n\nexport interface ReorderInfo {\n  pageOrder: string[];\n  prevOrder: string[];\n  deleted: boolean;\n}\n\nexport interface NewPageInfo {\n  pageOrder: string[];\n  pageID: string;\n  newPage: NotePage;\n}\n\nexport interface pushAck {\n  timestamp: number;\n  prevID: string;\n  currID: string;\n}\n","import { Button, message, Modal } from \"antd\";\nimport { LoginOutlined, LogoutOutlined, HomeFilled } from \"@ant-design/icons\";\n\nexport const showPageDelMsg = (onUndo: () => void) => {\n  message.warning({\n    content: (\n      <>\n        One page was deleted.\n        <Button\n          size=\"small\"\n          type=\"link\"\n          onClick={() => {\n            message.destroy(\"DELETE\");\n            onUndo();\n          }}\n        >\n          Undo\n        </Button>\n      </>\n    ),\n    key: \"DELETE\",\n    duration: 10,\n  });\n};\n\nexport const showJoinMsg = (userID: string, userName: string) => {\n  message.success({\n    content: `${userName} joined the room`,\n    icon: <LoginOutlined />,\n    key: userID,\n  });\n};\n\nexport const showLeaveMsg = (userID: string, userName: string) => {\n  message.warning({\n    content: `${userName} left the room`,\n    icon: <LogoutOutlined />,\n    key: userID,\n  });\n};\n\nexport const showReopenMsg = (onOk: () => void) => {\n  Modal.error({\n    title: \"This note is opened in another tab.\",\n    okText: \"Back\",\n    okButtonProps: { icon: <HomeFilled /> },\n    onOk,\n  });\n};\n"],"names":["ColorCirle","color","className","style","backgroundColor","classNames","colors","allColors","getRandomColor","index","Math","floor","random","length","getHashedColor","str","hash","colorPalette","light","dark","getColorPalette","palette","defaultRecord","pageStates","Map","pageInfos","defaultFactory","Record","TeamState","immutable","this","getImmutable","get","pageID","userID","getPageStates","getPageInfos","ratio","has","drawState","pageMap","update","m","set","notePage","setOp","op","getPageRatio","includesPage","prevDs","getOneState","DrawState","ds","setState","pageRec","newTS","Object","entries","state","teamPages","record","forEach","teamPage","states","map","flatState","teamStateMap","ignores","Set","Array","from","filter","isEmpty","deleteAll","keys","every","useTransitionEnd","propertyName","active","resRef","useRef","useState","Promise","res","current","e","ActiveKeyCtx","createContext","useActiveKey","tuple","useContext","useDebugValue","ActiveKeyProvider","children","initKey","Provider","value","AsideOpenCtx","useAsideOpen","AsideOpenProvider","BASE_URL","process","getNoteID","roomCode","axios","data","statusCode","noteID","console","error","getTeamNoteInfo","loadTeamNoteInfo","cb","infoRes","noteInfo","updateTeamNote","withImg","method","url","responseType","onDownloadProgress","loaded","file","Blob","type","saveTeamNote","putNote","loadNote","note","uid","name","pdf","pageOrder","removePageTimg","getUserID","formData","FormData","arrayBuffer","ab","append","headers","hashForage","localforage","updatePages","md5","JSON","stringify","getItem","lastHash","body","setItem","teamForage","getTeamNoteState","loadCachedTeamState","cachedState","params","modified","undefined","cached","localStorage","getUid","getUserName","slice","saveUserName","trim","editStack","List","undoStack","StateSet","lastOp","getStates","prevDS","currRecord","s","l","push","delete","timestamp","newDS","getEditStack","size","getUndoStack","isUndoable","lastUid","last","lastSetOp","pop","isRedoable","scrollForage","persistScroll","debounce","currPageID","largestKey","order","result","maxRatio","key","insertAfter","list","prevItem","newItem","prevIndex","indexOf","curr","splice","UserAvatar","userInfo","onClick","chosen","useMemo","userName","AddPageButton","addFinalPage","icon","PlusOutlined","block","PageNav","props","left","setLeft","asideOpen","opposite","draggableId","isDragDisabled","innerRef","ref","CSSTransition","in","timeout","unmountOnExit","onDragEnd","destination","droppableId","direction","droppableProps","placeholder","isDraggingOver","PreviewCard","activeKey","setAsideOpen","title","ALL","MARKED","WRITTEN","useSwipeable","onSwipedLeft","onSwipedRight","swipeDuration","swipeRef","swipeHandler","draggableProps","dragHandleProps","isDragging","isDropAnimating","PreviewTabs","PageList","cardDragged","PreviewFooter","React","refRec","saveReorder","initScroll","useEvent","scrollIntoView","useLayoutEffect","source","fromIndex","toIndex","newOrder","removed","exchange","isDropDisabled","PagePreview","pageIndex","displayName","stateSet","scrollPage","TeamCtx","teamState","setChosen","page","getOnePageStateMap","marked","userIDs","PageWrapper","thumbnail","image","preview","skipInView","PreviewTools","switchPageMarked","stopPropagation","PreviewOption","TeamAvatars","userRec","maxCount","maxPopoverPlacement","prev","addPage","deletePage","menu","items","label","CopyOutlined","DeleteOutlined","danger","content","trigger","placement","destroyTooltipOnHide","getPopupContainer","parentElement","MoreOutlined","setActiveKey","onChange","tabBarGutter","centered","IconFont","setSize","jumpMenu","pageSize","total","simple","FooterOptions","popupClassName","bordered","showArrow","dropdownMatchSelectWidth","options","finger","useDrawCtrl","updateDrawCtrl","useUpdateDrawCtrl","useForceLight","forceLight","setForceLight","isLight","useMediaQuery","query","checked","v","disabled","shape","CaretUpOutlined","opacity","HeaderLeft","saved","instantSave","nav","useNavigate","HomeFilled","SaveOutlined","btnProps","HeaderMiddle","handleUndo","handleRedo","undoable","redoable","mode","UndoOutlined","RedoOutlined","PenButton","EraserButton","SelectButton","drawCtrl","PenPanel","HighlightTwoTone","twoToneColor","HighlightOutlined","pixelEraser","globalEraser","pixelSeg","globalSwitch","QuestionCircleOutlined","field","lasso","GatewayOutlined","HeaderRight","teamOn","RoomInfo","JoinRoom","PageNavButton","UserCard","renaming","setRenaming","setIgnores","resetIO","useEffect","online","self","ignored","Search","autoFocus","defaultValue","onSearch","enterButton","CheckOutlined","FormOutlined","EyeInvisibleOutlined","EyeOutlined","add","ShareButton","copied","setCopied","link","window","location","href","share","copy","document","log","CheckCircleFilled","LinkOutlined","code","connected","loadInfo","loadState","userList","selfID","selfInfo","otherUsers","values","sortBy","reverse","onlineNum","teamPop","message","DisconnectOutlined","showIcon","banner","ShareAltOutlined","String","plain","TeamOutlined","u","reloading","setReloading","loading","ReloadOutlined","status","count","useParams","createRoom","editNoteData","team","UsergroupAddOutlined","Modal","onOk","Header","undoProps","dayjs","calender","InfoNav","renameNote","inputShow","setInputShow","setName","createDateShow","setCreateDateShow","lt","lastTime","ct","createTime","lastDate","calendar","createDate","target","onBlur","p","Reader","Dark","DrawCtrl","ReaderContent","setPageRec","setNoteInfo","setStateSet","setPageOrder","setSaved","io","addTeamStatePage","checkOpID","storedNote","createFromPages","classList","remove","saver","withState","currPageRec","defaultNotePage","pr","toObject","debouncedSave","useCallback","flush","savePageRec","pushReorder","emit","handleReorder","deleted","prevOrder","showPageDelMsg","handleNewPage","newPage","addState","on","removeAllListeners","pushOperation","operation","prevID","currID","t","stroke","syncStrokeTime","handleSync","pushNewPage","newTeamPage","updateStateSet","newSS","prevPageID","prevPage","createPage","lastPageID","isFull","pd","mainStyle","paddingLeft","paddingRight","deps","refMap","setRefMap","scrolled","setPrevPageID","stored","section","inviewRatios","setInviewRatios","deferredRatios","useDeferredValue","deferredOrder","calcScrollY","header","firstElementChild","getBoundingClientRect","top","height","scrollY","scrollToCurr","scrollBy","sectionRef","el","taskID","scrolling","setScrolling","addEventListener","handleScroll","clearTimeout","setTimeout","removeEventListener","behavior","useScrollPage","BroadcastChannel","bc","postMessage","onmessage","cancel","showReopenMsg","close","info","readerStates","readerMethods","id","undo","redo","PageContainer","updateState","onViewChange","preload","currIndex","selfIndex","abs","pdfIndex","Team","setTeamState","setCode","setUserRec","setIO","setLoaded","setConnected","loadingText","setLoadingText","len","bytes","throttle","teamNote","reloadState","hide","duration","then","IoFactory","updateSelfState","opID","lost","resetOpID","roomInit","infoLoaded","stateLoaded","joined","members","showJoinMsg","leaved","showLeaveMsg","resetUser","Loading","text","onUndo","okText","okButtonProps"],"sourceRoot":""}