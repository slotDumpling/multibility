{"version":3,"file":"static/js/959.9c2919c7.chunk.js","mappings":"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","sources":["component/menu/RightTools.tsx","component/ui/SwipeDelete.tsx","component/menu/SideMenu.tsx","component/menu/LeftTools.tsx","component/menu/NoteList.tsx","component/menu/MainMenu.tsx"],"sourcesContent":["import {\r\n  Button,\r\n  ButtonProps,\r\n  Input,\r\n  Menu,\r\n  message,\r\n  Popconfirm,\r\n  Popover,\r\n  Progress,\r\n} from \"antd\";\r\nimport { createContext, ReactNode, useContext, useState } from \"react\";\r\nimport { createNewNote } from \"../../lib/note/archive\";\r\nimport { MenuStateCtx, MenuMethodCtx } from \"./MainMenu\";\r\nimport {\r\n  TeamOutlined,\r\n  UserOutlined,\r\n  SyncOutlined,\r\n  ClearOutlined,\r\n  InboxOutlined,\r\n  FilePdfOutlined,\r\n  SettingOutlined,\r\n  CaretDownOutlined,\r\n  ArrowLeftOutlined,\r\n} from \"@ant-design/icons\";\r\nimport * as serviceWorkerRegistration from \"../.././serviceWorkerRegistration\";\r\nimport { getUserName, saveUserName } from \"../../lib/user\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { getNoteID } from \"../../lib/network/http\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Dragger from \"antd/lib/upload/Dragger\";\r\nimport { PasscodeInput } from \"antd-mobile\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport localforage from \"localforage\";\r\nimport { useEffect } from \"react\";\r\nimport { FC } from \"react\";\r\nimport \"./rightTools.sass\";\r\n\r\nconst OthersCtx = createContext({\r\n  setActive: (() => {}) as Setter<string>,\r\n});\r\n\r\nexport default function RightTools() {\r\n  return (\r\n    <div className=\"right-tools\">\r\n      <JoinTeamButton />\r\n      <OthersButton />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst OthersMenu = () => {\r\n  const { setActive } = useContext(OthersCtx);\r\n  return (\r\n    <div className=\"other-menu\">\r\n      <Menu\r\n        onClick={({ key }) => setActive(key)}\r\n        items={[\r\n          { key: \"PDF\", icon: <FilePdfOutlined />, label: \"Import PDF\" },\r\n          { key: \"PROFILE\", icon: <UserOutlined />, label: \"My profile\" },\r\n          { key: \"SETTINGS\", icon: <SettingOutlined />, label: \"Settings\" },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SeconaryMenu: FC<{\r\n  children: ReactNode;\r\n  title: string;\r\n}> = ({ children, title }) => {\r\n  const { setActive } = useContext(OthersCtx);\r\n  return (\r\n    <div className=\"secondary\">\r\n      <nav>\r\n        <Button\r\n          type=\"text\"\r\n          shape=\"circle\"\r\n          onClick={() => setActive(\"MENU\")}\r\n          icon={<ArrowLeftOutlined />}\r\n        />\r\n        <h3>{title}</h3>\r\n      </nav>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction UploadPdfPage() {\r\n  const [loading, setLoading] = useState(false);\r\n  const { tagUid } = useContext(MenuStateCtx);\r\n  const { setAllTags, setAllNotes } = useContext(MenuMethodCtx);\r\n  const [percent, setPercent] = useState(0);\r\n\r\n  async function handleFile(file: File) {\r\n    if (file.type !== \"application/pdf\") return;\r\n    setLoading(true);\r\n    const { LoadPDF } = await import(\"../../lib/note/pdfImage\");\r\n    const note = await LoadPDF(file, setPercent);\r\n    note.tagID = tagUid;\r\n    const { tags, allNotes } = await createNewNote(note);\r\n    setAllTags(tags);\r\n    setAllNotes(allNotes);\r\n    setLoading(false);\r\n    message.success(\"PDF Loaded\");\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <SeconaryMenu title=\"Import PDF\">\r\n      <Dragger\r\n        disabled={loading}\r\n        multiple={false}\r\n        action=\"#\"\r\n        accept=\"application/pdf\"\r\n        beforeUpload={handleFile}\r\n      >\r\n        <p className=\"ant-upload-drag-icon\">\r\n          {loading ? (\r\n            <Progress width={48} type=\"circle\" percent={percent} />\r\n          ) : (\r\n            <InboxOutlined />\r\n          )}\r\n        </p>\r\n        <p className=\"ant-upload-hint\">Click or drag a pdf file here.</p>\r\n      </Dragger>\r\n    </SeconaryMenu>\r\n  );\r\n}\r\n\r\nconst ProfilePage = () => {\r\n  const userName = getUserName();\r\n  const [name, setName] = useState(userName);\r\n  const { setActive } = useContext(OthersCtx);\r\n  const handleEnter = () => {\r\n    if (!name) return;\r\n    saveUserName(name);\r\n    setActive(\"MENU\");\r\n  };\r\n  return (\r\n    <SeconaryMenu title=\"My profile\">\r\n      <div className=\"profile-page\">\r\n        <Input\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          prefix={<UserOutlined />}\r\n          allowClear\r\n        />\r\n        <Button\r\n          disabled={userName === name || !name}\r\n          onClick={handleEnter}\r\n          type=\"primary\"\r\n          block\r\n        >\r\n          OK\r\n        </Button>\r\n      </div>\r\n    </SeconaryMenu>\r\n  );\r\n};\r\n\r\nconst SettingsPage = () => {\r\n  const { menuInit } = useContext(MenuMethodCtx);\r\n\r\n  const clearAll = async () => {\r\n    await localforage.clear();\r\n    menuInit();\r\n  };\r\n\r\n  return (\r\n    <SeconaryMenu title=\"Settings\">\r\n      <div className=\"setting-menu\">\r\n        <Button\r\n          icon={<SyncOutlined />}\r\n          onClick={async () => {\r\n            await serviceWorkerRegistration.unregister();\r\n            window.location.reload();\r\n          }}\r\n          block\r\n        >\r\n          Update\r\n        </Button>\r\n        <Popconfirm\r\n          title=\"Everything will be deleted.\"\r\n          onConfirm={clearAll}\r\n          icon={<ClearOutlined />}\r\n          okText=\"Delete\"\r\n          okType=\"danger\"\r\n          okButtonProps={{ type: \"primary\" }}\r\n          cancelText=\"Cancel\"\r\n          placement=\"bottom\"\r\n        >\r\n          <Button icon={<ClearOutlined />} danger block>\r\n            Clear all\r\n          </Button>\r\n        </Popconfirm>\r\n      </div>\r\n    </SeconaryMenu>\r\n  );\r\n};\r\n\r\nconst OthersPage = () => {\r\n  const [height, setHeight] = useState(0);\r\n  const [active, setActive] = useState(\"\");\r\n\r\n  const calcHeight = (el: HTMLElement) => {\r\n    setHeight(el.clientHeight);\r\n  };\r\n\r\n  const cssProps = {\r\n    timeout: 300,\r\n    onEnter: calcHeight,\r\n    unmountOnExit: true,\r\n  };\r\n\r\n  const cssProps2 = {\r\n    ...cssProps,\r\n    classNames: \"secondary\",\r\n  };\r\n\r\n  useEffect(() => setActive(\"MENU\"), []);\r\n\r\n  return (\r\n    <OthersCtx.Provider value={{ setActive }}>\r\n      <section className=\"others-menu\" style={{ height }}>\r\n        <CSSTransition\r\n          classNames=\"primary\"\r\n          in={active === \"MENU\"}\r\n          {...cssProps}\r\n        >\r\n          <OthersMenu />\r\n        </CSSTransition>\r\n        <CSSTransition in={active === \"PDF\"} {...cssProps2}>\r\n          <UploadPdfPage />\r\n        </CSSTransition>\r\n        <CSSTransition in={active === \"PROFILE\"} {...cssProps2}>\r\n          <ProfilePage />\r\n        </CSSTransition>\r\n        <CSSTransition in={active === \"SETTINGS\"} {...cssProps2}>\r\n          <SettingsPage />\r\n        </CSSTransition>\r\n      </section>\r\n    </OthersCtx.Provider>\r\n  );\r\n};\r\n\r\nconst OthersButton = () => {\r\n  const btnProps: ButtonProps = {\r\n    shape: \"circle\",\r\n    icon: <CaretDownOutlined />,\r\n  };\r\n  return (\r\n    <Popover\r\n      placement=\"bottomRight\"\r\n      trigger=\"click\"\r\n      content={<OthersPage />}\r\n      zIndex={900}\r\n    >\r\n      <Button className=\"large\" {...btnProps} />\r\n      <Button className=\"small\" type=\"text\" {...btnProps} />\r\n    </Popover>\r\n  );\r\n};\r\n\r\nfunction JoinTeamButton() {\r\n  const [roomCode, setRoomCode] = useState(\"\");\r\n  const [wrong, setWrong] = useState(false);\r\n\r\n  const nav = useNavigate();\r\n  async function handleSubmit(code: string) {\r\n    const noteID = await getNoteID(code);\r\n    if (noteID) return nav(`/team/${noteID}`);\r\n    setRoomCode(\"\");\r\n    setWrong(true);\r\n  }\r\n\r\n  return (\r\n    <Popover\r\n      placement=\"bottomRight\"\r\n      trigger=\"click\"\r\n      title=\"Join a team note\"\r\n      destroyTooltipOnHide\r\n      onVisibleChange={() => setWrong(false)}\r\n      content={\r\n        <PasscodeInput\r\n          plain\r\n          length={4}\r\n          error={wrong}\r\n          value={roomCode}\r\n          onChange={(v) => {\r\n            setWrong(false);\r\n            setRoomCode(v);\r\n          }}\r\n          onFill={handleSubmit}\r\n        />\r\n      }\r\n    >\r\n      <Button className=\"team-btn large\" shape=\"round\" icon={<TeamOutlined />}>\r\n        Team\r\n      </Button>\r\n      <Button\r\n        className=\"team-btn small\"\r\n        type=\"text\"\r\n        shape=\"circle\"\r\n        icon={<TeamOutlined />}\r\n      />\r\n    </Popover>\r\n  );\r\n}\r\n","import React, { FC, useEffect, useRef, useState } from \"react\";\nimport { useSwipeable } from \"react-swipeable\";\nimport { Setter } from \"../../lib/hooks\";\nimport classNames from \"classnames\";\nimport \"./swipe-delete.sass\";\n\nconst SwipeDelete: FC<{\n  onDelete: () => void;\n  uid: string;\n  nowSwiped?: string;\n  setNowSwiped?: Setter<string>;\n  disable?: boolean;\n  className?: string;\n}> = ({\n  children,\n  nowSwiped,\n  setNowSwiped,\n  uid,\n  onDelete,\n  disable = false,\n  className,\n}) => {\n  const [deleted, setDeleted] = useState(false);\n  const [swiped, setSwiped] = useState(false);\n  const [height, setHeight] = useState<number>();\n  const wrapper = useRef<HTMLDivElement>(null);\n  const deleting = swiped && (nowSwiped === undefined || nowSwiped === uid);\n\n  const showDelete = () => {\n    setSwiped(true);\n    setNowSwiped && setNowSwiped(uid);\n    setHeight(wrapper.current?.clientHeight);\n  };\n\n  const hideDelete = () => {\n    setSwiped(false);\n    setNowSwiped && setNowSwiped(\"\");\n    setHeight(undefined);\n  };\n\n  const swipeHandler = useSwipeable({\n    onSwipedLeft: showDelete,\n    onSwipedRight: hideDelete,\n    preventDefaultTouchmoveEvent: true,\n    trackTouch: !disable,\n  });\n\n  useEffect(() => {\n    if (!disable) return;\n    setHeight(undefined);\n    setNowSwiped && setNowSwiped(\"\");\n    setSwiped(false);\n  }, [disable, setNowSwiped]);\n\n  return (\n    <div\n      className={classNames(\"swipe-wrapper\", className, {\n        deleted,\n        deleting,\n      })}\n      {...swipeHandler}\n      style={{ height }}\n      onTransitionEnd={({ propertyName }) => {\n        if (propertyName === \"height\" && deleted) onDelete();\n      }}\n    >\n      <div className=\"content\" ref={wrapper}>\n        {children}\n      </div>\n      <div className=\"button-wrapper\">\n        <div\n          className=\"button\"\n          onClick={() => setDeleted(true)}\n          style={{ height }}\n        >\n          Delete\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SwipeDelete;\n","import { Button, Input, Popconfirm, Select } from \"antd\";\r\nimport { FC, MouseEventHandler, useContext, useEffect, useState } from \"react\";\r\nimport { deleteTag, editTag, NoteTag, addNewTag } from \"../../lib/note/archive\";\r\nimport { colors, getRandomColor } from \"../../lib/color\";\r\nimport { MenuStateCtx, MenuMethodCtx } from \"./MainMenu\";\r\nimport {\r\n  TagOutlined,\r\n  DeleteOutlined,\r\n  SettingOutlined,\r\n  ProfileOutlined,\r\n} from \"@ant-design/icons\";\r\nimport SwipeDelete from \"../ui/SwipeDelete\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport classNames from \"classnames\";\r\nimport { ColorCirle } from \"../widgets/ColorCircle\";\r\n\r\nconst TagInput: FC<{\r\n  tagName: string;\r\n  setTagName: Setter<string>;\r\n  tagColor: string;\r\n  setTagColor: Setter<string>;\r\n}> = ({ tagName, setTagName, tagColor, setTagColor }) => {\r\n  const colorSelector = (\r\n    <Select value={tagColor} onSelect={setTagColor} listHeight={150}>\r\n      {colors.map((c) => (\r\n        <Select.Option value={c} key={c}>\r\n          <ColorCirle className=\"tag-circle\" color={c} />\r\n        </Select.Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n\r\n  return (\r\n    <Input\r\n      autoFocus\r\n      placeholder=\"Tag name...\"\r\n      className=\"tag-name-input\"\r\n      addonBefore={colorSelector}\r\n      value={tagName}\r\n      onChange={(e) => setTagName(e.target.value)}\r\n    />\r\n  );\r\n};\r\n\r\nconst TagItem: FC<{\r\n  noteTag: NoteTag;\r\n  removeTag: () => void;\r\n  onClick: MouseEventHandler<HTMLDivElement>;\r\n}> = ({ noteTag, removeTag, onClick }) => {\r\n  const { uid, color, name, notes } = noteTag;\r\n  const { editing, tagUid } = useContext(MenuStateCtx);\r\n  const { setAllTags } = useContext(MenuMethodCtx);\r\n  const [tagName, setTagName] = useState(name);\r\n  const [tagColor, setTagColor] = useState(color);\r\n  const [tagEditing, setTagEditing] = useState(false);\r\n  useEffect(() => setTagEditing(false), [editing]);\r\n\r\n  const cancelEditing = () => {\r\n    setTagName(name);\r\n    setTagColor(color);\r\n    setTagEditing(false);\r\n  };\r\n\r\n  const finishEditing = async () => {\r\n    const newTag: NoteTag = {\r\n      ...noteTag,\r\n      name: tagName,\r\n      color: tagColor,\r\n    };\r\n\r\n    const newAllTags = await editTag(newTag);\r\n    setAllTags(newAllTags);\r\n    setTagEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classNames(\"tag-item\", {\r\n        curr: tagUid === uid,\r\n        editing: tagEditing,\r\n      })}\r\n      onClick={onClick}\r\n    >\r\n      {tagEditing || (\r\n        <>\r\n          <ColorCirle className=\"tag-circle\" color={tagColor} />\r\n          <span className=\"tag-name\">{tagName}</span>\r\n        </>\r\n      )}\r\n      {editing || <span className=\"tag-num\">{notes.length}</span>}\r\n      {editing && !tagEditing && (\r\n        <Button\r\n          size=\"small\"\r\n          type=\"text\"\r\n          onClick={() => setTagEditing(true)}\r\n          icon={<SettingOutlined />}\r\n        />\r\n      )}\r\n      {tagEditing && (\r\n        <>\r\n          <TagInput\r\n            tagName={tagName}\r\n            setTagName={setTagName}\r\n            tagColor={tagColor}\r\n            setTagColor={setTagColor}\r\n          />\r\n          <div className=\"buttons\">\r\n            <Popconfirm\r\n              title=\"This tag will be deleted.\"\r\n              onConfirm={removeTag}\r\n              placement=\"left\"\r\n              cancelText=\"Cancel\"\r\n              icon={<DeleteOutlined />}\r\n              okText=\"Delete\"\r\n              okType=\"danger\"\r\n              okButtonProps={{ type: \"primary\" }}\r\n            >\r\n              <Button danger>Delete</Button>\r\n            </Popconfirm>\r\n            <Button onClick={cancelEditing}>Cancel</Button>\r\n            <Button type=\"primary\" disabled={!tagName} onClick={finishEditing}>\r\n              OK\r\n            </Button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NewTagItem: FC<{ setAdding: Setter<boolean> }> = ({ setAdding }) => {\r\n  const [tagName, setTagName] = useState(\"\");\r\n  const [tagColor, setTagColor] = useState(getRandomColor());\r\n  const { setAllTags } = useContext(MenuMethodCtx);\r\n\r\n  const addTag = () => {\r\n    const name = tagName.trim();\r\n    if (!name) return;\r\n    addNewTag(name, tagColor).then(setAllTags);\r\n    setAdding(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tag-wrapper\">\r\n      <div className=\"tag-item curr editing\">\r\n        <TagInput\r\n          tagName={tagName}\r\n          setTagName={setTagName}\r\n          tagColor={tagColor}\r\n          setTagColor={setTagColor}\r\n        />\r\n        <div className=\"buttons\">\r\n          <Button onClick={() => setAdding(false)}>Cancel</Button>\r\n          <Button type=\"primary\" disabled={!tagName} onClick={addTag}>\r\n            OK\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function SideMenu({ onSelect }: { onSelect?: () => void }) {\r\n  const { allTags, editing, tagUid, allNotes } = useContext(MenuStateCtx);\r\n  const { setTagUid, setAllTags } = useContext(MenuMethodCtx);\r\n  const { setEditing } = useContext(MenuMethodCtx);\r\n  const [nowSwiped, setNowSwiped] = useState(\"\");\r\n  const [adding, setAdding] = useState(false);\r\n\r\n  async function removeOneTag(uid: string) {\r\n    const tags = await deleteTag(uid);\r\n    setTagUid(\"DEFAULT\");\r\n    setAllTags(tags);\r\n  }\r\n\r\n  const selectTag = (key: string) => {\r\n    setTagUid(key);\r\n    onSelect && onSelect();\r\n  };\r\n\r\n  const allNoteTag = (\r\n    <div className=\"tag-wrapper\">\r\n      <div\r\n        className={classNames(\"tag-item\", { curr: tagUid === \"DEFAULT\" })}\r\n        onClick={() => selectTag(\"DEFAULT\")}\r\n      >\r\n        <ProfileOutlined className=\"all-note-icon\" />\r\n        <span className=\"tag-name\">All Notes</span>\r\n        <span className=\"tag-num\">{Object.keys(allNotes).length}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const swichEditing = () => setEditing((prev) => !prev);\r\n\r\n  const editButton = (\r\n    <Button\r\n      className=\"edit-btn small\"\r\n      shape=\"round\"\r\n      type={editing ? \"primary\" : \"default\"}\r\n      onClick={swichEditing}\r\n    >\r\n      {editing ? \"Done\" : \"Edit\"}\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <aside className=\"side-menu\">\r\n      <div className=\"tag-list\">\r\n        {allNoteTag}\r\n        {Object.values(allTags).map((tag) => {\r\n          const { uid } = tag;\r\n          const removeTag = () => removeOneTag(uid);\r\n          return (\r\n            <div className=\"tag-wrapper\" key={uid}>\r\n              <SwipeDelete\r\n                uid={uid}\r\n                onDelete={removeTag}\r\n                nowSwiped={nowSwiped}\r\n                setNowSwiped={setNowSwiped}\r\n                disable={editing}\r\n              >\r\n                <TagItem\r\n                  noteTag={tag}\r\n                  removeTag={removeTag}\r\n                  onClick={() => selectTag(uid)}\r\n                />\r\n              </SwipeDelete>\r\n            </div>\r\n          );\r\n        })}\r\n        {adding && <NewTagItem setAdding={setAdding} />}\r\n      </div>\r\n      <footer>\r\n        <Button\r\n          shape=\"round\"\r\n          icon={<TagOutlined />}\r\n          onClick={() => setAdding(true)}\r\n          disabled={adding}\r\n        >\r\n          Add\r\n        </Button>\r\n        {editButton}\r\n      </footer>\r\n    </aside>\r\n  );\r\n}\r\n","import { Button, Drawer } from \"antd\";\r\nimport { useContext, useState } from \"react\";\r\nimport { MenuStateCtx, MenuMethodCtx } from \"./MainMenu\";\r\nimport { MenuOutlined } from \"@ant-design/icons\";\r\nimport SideMenu from \"./SideMenu\";\r\n\r\nexport default function LeftTools() {\r\n  const [asideOn, setAsideOn] = useState(false);\r\n  const { editing } = useContext(MenuStateCtx);\r\n  const { setEditing } = useContext(MenuMethodCtx);\r\n\r\n  function swichEditing() {\r\n    setEditing((prev) => !prev);\r\n  }\r\n\r\n  const editButton = (\r\n    <Button\r\n      className=\"edit-btn large\"\r\n      onClick={swichEditing}\r\n      type={editing ? \"primary\" : \"text\"}\r\n    >\r\n      {editing ? \"Done\" : \"Edit\"}\r\n    </Button>\r\n  );\r\n\r\n  const AsideButton = (\r\n    <>\r\n      <Button\r\n        className=\"aside-btn\"\r\n        type=\"text\"\r\n        icon={<MenuOutlined />}\r\n        onClick={() => setAsideOn((prev) => !prev)}\r\n      />\r\n      <Drawer\r\n        className=\"aside-drawer\"\r\n        width={300}\r\n        placement=\"left\"\r\n        closable={false}\r\n        visible={asideOn}\r\n        onClose={() => setAsideOn(false)}\r\n        contentWrapperStyle={{ boxShadow: \"none\" }}\r\n        bodyStyle={{ padding: 0, overflow: \"hidden\" }}\r\n        destroyOnClose\r\n      >\r\n        <SideMenu onSelect={() => editing || setAsideOn(false)} />\r\n      </Drawer>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div className=\"left-tools\">\r\n      {AsideButton}\r\n      {editButton}\r\n    </div>\r\n  );\r\n}\r\n","import { FC, useMemo, useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  NoteTag,\r\n  deleteNote,\r\n  moveNoteTag,\r\n  editNoteData,\r\n} from \"../../lib/note/archive\";\r\nimport {\r\n  SwapOutlined,\r\n  TagsOutlined,\r\n  FileOutlined,\r\n  CloudOutlined,\r\n  DeleteOutlined,\r\n  SearchOutlined,\r\n  FileTextOutlined,\r\n  SortAscendingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Button, Input, Popconfirm, Tag, Dropdown, Menu } from \"antd\";\r\nimport { MenuStateCtx, MenuMethodCtx } from \"./MainMenu\";\r\nimport { ColorCirle } from \"../widgets/ColorCircle\";\r\nimport { NoteInfo } from \"../../lib/note/note\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport calender from \"dayjs/plugin/calendar\";\r\nimport SwipeDelete from \"../ui/SwipeDelete\";\r\nimport dafaultImg from \"../ui/default.png\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { List, Set } from \"immutable\";\r\nimport classNames from \"classnames\";\r\nimport dayjs from \"dayjs\";\r\ndayjs.extend(calender);\r\n\r\nexport default function NoteList({ noteList }: { noteList: List<NoteInfo> }) {\r\n  const [nowSwiped, setNowSwiped] = useState(\"\");\r\n  const { editing } = useContext(MenuStateCtx);\r\n  const { setAllTags, setAllNotes } = useContext(MenuMethodCtx);\r\n  const [sortType, setSortType] = useState(\"LAST\");\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [selectedNotes, setSelectNotes] = useState(Set<string>());\r\n\r\n  const removeNotes = async (uids: string[]) => {\r\n    let tags: Record<string, NoteTag> | undefined;\r\n    let allNotes: Record<string, NoteInfo> | undefined;\r\n    for (let uid of uids) {\r\n      const res = await deleteNote(uid);\r\n      tags = res.tags;\r\n      allNotes = res.allNotes;\r\n    }\r\n    tags && setAllTags(tags);\r\n    allNotes && setAllNotes(allNotes);\r\n  };\r\n\r\n  const moveNotes = async (noteIDs: string[], tagID: string) => {\r\n    let tags: Record<string, NoteTag> | undefined;\r\n    let allNotes: Record<string, NoteInfo> | undefined;\r\n    for (let noteID of noteIDs) {\r\n      const res = await moveNoteTag(noteID, tagID);\r\n      tags = res.tags;\r\n      allNotes = res.allNotes;\r\n    }\r\n    tags && setAllTags(tags);\r\n    allNotes && setAllNotes(allNotes);\r\n  };\r\n\r\n  const sortedList = useMemo(() => {\r\n    const comparator = (t0: number, t1: number) => t1 - t0;\r\n    switch (sortType) {\r\n      case \"CREATE\":\r\n        return noteList.sortBy((n) => n.createTime, comparator);\r\n      case \"LAST\":\r\n        return noteList.sortBy((n) => n.lastTime, comparator);\r\n      case \"NAME\":\r\n        return noteList.sortBy((n) => n.name.toUpperCase());\r\n      default:\r\n        return noteList;\r\n    }\r\n  }, [noteList, sortType]);\r\n\r\n  const filterdList = useMemo(\r\n    () =>\r\n      sortedList.filter((n) =>\r\n        n.name.toUpperCase().includes(searchText.trim().toUpperCase())\r\n      ),\r\n    [searchText, sortedList]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setSearchText(\"\");\r\n    setSelectNotes(Set());\r\n  }, [noteList, editing]);\r\n\r\n  return (\r\n    <section className=\"note-list\">\r\n      <HeadTools\r\n        sortType={sortType}\r\n        setSortType={setSortType}\r\n        searchText={searchText}\r\n        setSearchText={setSearchText}\r\n        onDelete={() => removeNotes(selectedNotes.toArray())}\r\n        onMove={(tagID) => moveNotes(selectedNotes.toArray(), tagID)}\r\n        disabled={selectedNotes.size === 0}\r\n      />\r\n      {filterdList.map((noteInfo) => {\r\n        const { uid } = noteInfo;\r\n        const removeNote = () => removeNotes([uid]);\r\n        return (\r\n          <SwipeDelete\r\n            onDelete={removeNote}\r\n            nowSwiped={nowSwiped}\r\n            setNowSwiped={setNowSwiped}\r\n            disable={editing}\r\n            uid={uid}\r\n            key={uid}\r\n          >\r\n            <NoteItem\r\n              noteInfo={noteInfo}\r\n              selected={selectedNotes.has(uid)}\r\n              setSelectNotes={setSelectNotes}\r\n            />\r\n          </SwipeDelete>\r\n        );\r\n      })}\r\n    </section>\r\n  );\r\n}\r\n\r\nconst HeadTools: FC<{\r\n  sortType: string;\r\n  setSortType: Setter<string>;\r\n  searchText: string;\r\n  setSearchText: Setter<string>;\r\n  onDelete: () => void;\r\n  onMove: (tagID: string) => void;\r\n  disabled: boolean;\r\n}> = ({\r\n  sortType,\r\n  setSortType,\r\n  searchText,\r\n  setSearchText,\r\n  onDelete,\r\n  onMove,\r\n  disabled = true,\r\n}) => {\r\n  const { editing, allTags } = useContext(MenuStateCtx);\r\n\r\n  const sortMenu = (\r\n    <Menu\r\n      onClick={({ key }) => setSortType(key)}\r\n      selectedKeys={[sortType]}\r\n      className=\"sort-drop\"\r\n      items={[\r\n        {\r\n          type: \"group\",\r\n          label: \"Sort by\",\r\n          children: [\r\n            { icon: <FileOutlined />, key: \"CREATE\", label: \"Date created\" },\r\n            { icon: <FileTextOutlined />, key: \"LAST\", label: \"Date modified\" },\r\n            { icon: <SortAscendingOutlined />, key: \"NAME\", label: \"Name\" },\r\n          ],\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n\r\n  const sortButton = (\r\n    <Dropdown overlay={sortMenu} trigger={[\"click\"]} placement=\"bottom\">\r\n      <Button\r\n        className=\"sort-btn\"\r\n        type=\"text\"\r\n        shape=\"circle\"\r\n        icon={<SwapOutlined rotate={90} />}\r\n      />\r\n    </Dropdown>\r\n  );\r\n\r\n  const deleteButton = (\r\n    <Popconfirm\r\n      title=\"Notes will be deleted.\"\r\n      onConfirm={onDelete}\r\n      icon={<DeleteOutlined />}\r\n      placement=\"bottom\"\r\n      cancelText=\"Cancel\"\r\n      disabled={disabled}\r\n      okText=\"Delete\"\r\n      okType=\"danger\"\r\n      okButtonProps={{ type: \"primary\" }}\r\n    >\r\n      <Button\r\n        className=\"del-btn\"\r\n        shape=\"round\"\r\n        type=\"text\"\r\n        disabled={disabled}\r\n        danger={!disabled}\r\n        icon={<DeleteOutlined />}\r\n      >\r\n        Delete\r\n      </Button>\r\n    </Popconfirm>\r\n  );\r\n\r\n  const ColorLabel: FC<{\r\n    color: string;\r\n    name: string;\r\n  }> = ({ color, name }) => (\r\n    <div className=\"tag-select\">\r\n      <ColorCirle color={color} className=\"tag-circle\"/>\r\n      <span className=\"name\">{name}</span>\r\n    </div>\r\n  );\r\n\r\n  const overlay = (\r\n    <Menu\r\n      onClick={({ key }) => onMove(key)}\r\n      items={[\r\n        {\r\n          key: \"DEFAULT\",\r\n          label: <ColorLabel color=\"#eee\" name=\"No tag\" />,\r\n        },\r\n        ...Object.values(allTags).map((t) => ({\r\n          key: t.uid,\r\n          label: <ColorLabel color={t.color} name={t.name} />,\r\n        })),\r\n      ]}\r\n    />\r\n  );\r\n\r\n  const tagButton = (\r\n    <Dropdown\r\n      disabled={disabled}\r\n      overlay={overlay}\r\n      trigger={[\"click\"]}\r\n      placement=\"bottom\"\r\n    >\r\n      <Button\r\n        shape=\"round\"\r\n        type=\"text\"\r\n        className=\"tag-btn\"\r\n        icon={<TagsOutlined />}\r\n        style={{ transition: \"none\" }}\r\n      >\r\n        Tag\r\n      </Button>\r\n    </Dropdown>\r\n  );\r\n\r\n  return (\r\n    <div className={classNames(\"head-tools\", { editing })}>\r\n      {editing ? (\r\n        <>\r\n          {tagButton}\r\n          {deleteButton}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Input\r\n            value={searchText}\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n            className=\"search-input\"\r\n            prefix={<SearchOutlined />}\r\n            bordered={false}\r\n            allowClear\r\n          />\r\n          {sortButton}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NoteItem: FC<{\r\n  noteInfo: NoteInfo;\r\n  selected: boolean;\r\n  setSelectNotes: Setter<Set<string>>;\r\n}> = ({ noteInfo, selected, setSelectNotes }) => {\r\n  const { team, uid, name, thumbnail, lastTime } = noteInfo;\r\n  const date = useMemo(() => dayjs(lastTime).calendar(), [lastTime]);\r\n  const href = `${team ? \"team\" : \"reader\"}/${uid}`;\r\n\r\n  const { editing } = useContext(MenuStateCtx);\r\n  const { setAllNotes } = useContext(MenuMethodCtx);\r\n  const [noteName, setNoteName] = useState(name);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const nav = useNavigate();\r\n\r\n  const saveNoteName = () => {\r\n    const newName = noteName.trim();\r\n    if (!newName || newName === name) return setNoteName(name);\r\n    editNoteData(uid, { name: newName });\r\n    setAllNotes((prev) => ({\r\n      ...prev,\r\n      [uid]: { ...prev[uid], name: newName },\r\n    }));\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (!editing) return nav(href);\r\n    setSelectNotes((prev) => {\r\n      if (prev.has(uid)) return prev.delete(uid);\r\n      return prev.add(uid);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classNames(\"note-item\", { selected, loaded })}\r\n      onClick={handleClick}\r\n      onAnimationEnd={() => setLoaded(true)}\r\n    >\r\n      <div className=\"timg-wrapper\">\r\n        <img src={thumbnail || dafaultImg} alt={name} className=\"timg\" />\r\n        {team && (\r\n          <Tag color=\"blue\" className=\"cloud-icon\">\r\n            <CloudOutlined />\r\n          </Tag>\r\n        )}\r\n      </div>\r\n      <div className=\"content\">\r\n        {editing || <p className=\"name\">{name}</p>}\r\n        {editing && (\r\n          <Input\r\n            className=\"name-input\"\r\n            value={noteName}\r\n            onChange={(e) => setNoteName(e.target.value)}\r\n            onClick={(e) => e.stopPropagation()}\r\n            onBlur={saveNoteName}\r\n          />\r\n        )}\r\n        <p className=\"date\">{date}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { createContext, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport {\r\n  createNewNote,\r\n  getAllNotes,\r\n  getAllTags,\r\n  NoteTag,\r\n} from \"../../lib/note/archive\";\r\nimport { createEmptyNote, NoteInfo } from \"../../lib/note/note\";\r\nimport { FormOutlined } from \"@ant-design/icons\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport RightTools from \"./RightTools\";\r\nimport LeftTools from \"./LeftTools\";\r\nimport classNames from \"classnames\";\r\nimport SideMenu from \"./SideMenu\";\r\nimport NoteList from \"./NoteList\";\r\nimport { List } from \"immutable\";\r\nimport { Button } from \"antd\";\r\nimport \"./menu.sass\";\r\n\r\nexport const MenuStateCtx = createContext({\r\n  tagUid: \"DEFAULT\",\r\n  editing: false,\r\n  allNotes: {} as Record<string, NoteInfo>,\r\n  allTags: {} as Record<string, NoteTag>,\r\n});\r\n\r\nexport const MenuMethodCtx = createContext({\r\n  setAllNotes: (() => {}) as Setter<Record<string, NoteInfo>>,\r\n  setAllTags: (() => {}) as Setter<Record<string, NoteTag>>,\r\n  setTagUid: (() => {}) as Setter<string>,\r\n  setEditing: (() => {}) as Setter<boolean>,\r\n  menuInit: () => {},\r\n});\r\n\r\nexport default function MainMenu() {\r\n  const [allNotes, setAllNotes] = useState<Record<string, NoteInfo>>({});\r\n  const [allTags, setAllTags] = useState<Record<string, NoteTag>>({});\r\n  const [tagUid, setTagUid] = useState(\"DEFAULT\");\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const selectedTag = useMemo(\r\n    () =>\r\n      tagUid === \"DEFAULT\"\r\n        ? {\r\n            uid: \"\",\r\n            name: \"All Notes\",\r\n            color: \"#000000\",\r\n            notes: Object.keys(allNotes),\r\n          }\r\n        : allTags[tagUid],\r\n    [allNotes, allTags, tagUid]\r\n  );\r\n\r\n  const noteList = useMemo(\r\n    () =>\r\n      List(\r\n        selectedTag.notes\r\n          .filter((uid) => uid in allNotes)\r\n          .map((uid) => allNotes[uid])\r\n      ),\r\n    [selectedTag, allNotes]\r\n  );\r\n\r\n  const menuInit = () => {\r\n    getAllNotes().then(setAllNotes);\r\n    getAllTags().then(setAllTags);\r\n    document.title = \"Multibility\";\r\n  };\r\n  useEffect(menuInit, []);\r\n  const logo = tagUid === \"DEFAULT\";\r\n\r\n  return (\r\n    <MenuStateCtx.Provider value={{ tagUid, editing, allNotes, allTags }}>\r\n      <MenuMethodCtx.Provider\r\n        value={{ setAllNotes, setAllTags, setEditing, setTagUid, menuInit }}\r\n      >\r\n        <div className=\"main-menu container\">\r\n          <header>\r\n            <LeftTools />\r\n            <h2 className={classNames({ logo })}>\r\n              {logo ? \"Multibility\" : selectedTag.name}\r\n            </h2>\r\n            <RightTools />\r\n          </header>\r\n          <main>\r\n            <SideMenu />\r\n            <NoteList noteList={noteList} />\r\n            <NewNoteButton />\r\n          </main>\r\n        </div>\r\n      </MenuMethodCtx.Provider>\r\n    </MenuStateCtx.Provider>\r\n  );\r\n}\r\n\r\nexport const NewNoteButton = () => {\r\n  const { tagUid } = useContext(MenuStateCtx);\r\n  const { setAllTags, setAllNotes } = useContext(MenuMethodCtx);\r\n\r\n  async function addNewNote() {\r\n    const note = createEmptyNote();\r\n    note.tagID = tagUid;\r\n    const { tags, allNotes } = await createNewNote(note);\r\n    setAllTags(tags);\r\n    setAllNotes(allNotes);\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      className=\"new-note\"\r\n      size=\"large\"\r\n      type=\"primary\"\r\n      shape=\"circle\"\r\n      onClick={addNewNote}\r\n      icon={<FormOutlined />}\r\n    />\r\n  );\r\n};\r\n"],"names":["OthersCtx","createContext","setActive","RightTools","className","JoinTeamButton","OthersButton","OthersMenu","useContext","onClick","key","items","icon","FilePdfOutlined","label","UserOutlined","SettingOutlined","SeconaryMenu","children","title","type","shape","ArrowLeftOutlined","UploadPdfPage","useState","loading","setLoading","tagUid","MenuStateCtx","MenuMethodCtx","setAllTags","setAllNotes","percent","setPercent","file","LoadPDF","note","tagID","createNewNote","tags","allNotes","message","Dragger","disabled","multiple","action","accept","beforeUpload","width","InboxOutlined","ProfilePage","userName","getUserName","name","setName","value","onChange","e","target","prefix","allowClear","saveUserName","block","SettingsPage","menuInit","clearAll","localforage","SyncOutlined","serviceWorkerRegistration","window","location","reload","onConfirm","ClearOutlined","okText","okType","okButtonProps","cancelText","placement","danger","OthersPage","height","setHeight","active","cssProps","timeout","onEnter","el","clientHeight","unmountOnExit","cssProps2","classNames","useEffect","Provider","style","CSSTransition","in","btnProps","CaretDownOutlined","trigger","content","zIndex","roomCode","setRoomCode","wrong","setWrong","nav","useNavigate","code","getNoteID","noteID","destroyTooltipOnHide","onVisibleChange","plain","length","error","v","onFill","TeamOutlined","nowSwiped","setNowSwiped","uid","onDelete","disable","deleted","setDeleted","swiped","setSwiped","wrapper","useRef","deleting","undefined","swipeHandler","useSwipeable","onSwipedLeft","current","onSwipedRight","preventDefaultTouchmoveEvent","trackTouch","onTransitionEnd","propertyName","ref","TagInput","tagName","setTagName","tagColor","setTagColor","colorSelector","onSelect","listHeight","colors","c","color","autoFocus","placeholder","addonBefore","TagItem","noteTag","removeTag","notes","editing","tagEditing","setTagEditing","finishEditing","newTag","editTag","newAllTags","curr","size","DeleteOutlined","NewTagItem","setAdding","getRandomColor","trim","addNewTag","then","SideMenu","allTags","setTagUid","setEditing","adding","deleteTag","selectTag","allNoteTag","ProfileOutlined","Object","keys","editButton","prev","values","map","tag","removeOneTag","TagOutlined","LeftTools","asideOn","setAsideOn","AsideButton","MenuOutlined","closable","visible","onClose","contentWrapperStyle","boxShadow","bodyStyle","padding","overflow","destroyOnClose","NoteList","noteList","sortType","setSortType","searchText","setSearchText","Set","selectedNotes","setSelectNotes","removeNotes","uids","deleteNote","res","moveNotes","noteIDs","moveNoteTag","sortedList","useMemo","comparator","t0","t1","sortBy","n","createTime","lastTime","toUpperCase","filterdList","filter","includes","HeadTools","toArray","onMove","noteInfo","NoteItem","selected","has","dayjs","calender","sortMenu","selectedKeys","FileOutlined","FileTextOutlined","SortAscendingOutlined","sortButton","overlay","SwapOutlined","rotate","deleteButton","ColorLabel","t","tagButton","TagsOutlined","transition","SearchOutlined","bordered","team","thumbnail","date","calendar","href","noteName","setNoteName","loaded","setLoaded","delete","add","onAnimationEnd","src","dafaultImg","alt","CloudOutlined","stopPropagation","onBlur","newName","editNoteData","MainMenu","selectedTag","List","getAllNotes","getAllTags","document","logo","NewNoteButton","createEmptyNote","FormOutlined"],"sourceRoot":""}