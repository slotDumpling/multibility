{"version":3,"file":"static/js/284.dd543040.chunk.js","mappings":"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","sources":["lib/draw/drawCtrl.ts","lib/draw/StateSet.ts","component/reader/ReaderTools.tsx","component/ui/DigitDisplay.tsx","lib/array.ts","component/ui/IconFont.tsx","component/reader/PageNav.tsx","component/reader/DrawTools.tsx","component/draw/Tools.tsx","lib/touch/touch.ts","component/draw/Draw.tsx","component/reader/Reader.tsx","lib/network/io.ts","lib/draw/TeamState.ts","component/reader/Team.tsx","lib/draw/canvas.ts"],"sourcesContent":["import localforage from \"localforage\";\r\n\r\nexport interface DrawCtrl {\r\n  mode: \"draw\" | \"erase\" | \"select\" | \"text\";\r\n  finger: boolean;\r\n  lineWidth: number;\r\n  eraserWidth: number;\r\n  color: string;\r\n  highlight: boolean;\r\n  lasso: boolean;\r\n}\r\n\r\nexport const defaultDrawCtrl: Readonly<DrawCtrl> = {\r\n  mode: \"draw\",\r\n  finger: true,\r\n  lineWidth: 10,\r\n  eraserWidth: 10,\r\n  color: \"#000000\",\r\n  highlight: false,\r\n  lasso: true,\r\n};\r\n\r\nexport async function getDrawCtrl() {\r\n  let drawCtrl = (await localforage.getItem(\"DRAW_CTRL\")) as DrawCtrl | null;\r\n  if (!drawCtrl) {\r\n    drawCtrl = defaultDrawCtrl;\r\n    await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n  }\r\n  return drawCtrl;\r\n}\r\n\r\nexport async function saveDrawCtrl(drawCtrl: DrawCtrl) {\r\n  await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n}\r\n","import { DrawState, Operation, Stroke, WIDTH } from \"./DrawState\";\r\nimport { List, Map, Record } from \"immutable\";\r\nimport { NotePage } from \"../note/note\";\r\n\r\ninterface StateSetRecordType {\r\n  states: Map<string, DrawState>;\r\n  editStack: List<string>;\r\n  undoStack: List<string>;\r\n}\r\n\r\nconst defaultRecord: Readonly<StateSetRecordType> = {\r\n  states: Map(),\r\n  editStack: List(),\r\n  undoStack: List(),\r\n};\r\n\r\ntype StateSetRecord = Record<StateSetRecordType>;\r\nconst defaultFactory = Record(defaultRecord);\r\n\r\nexport type SetOperation = Operation & { pageID: string };\r\n\r\nexport class StateSet {\r\n  constructor(\r\n    private immutable: StateSetRecord,\r\n    public lastOp?: SetOperation\r\n  ) {}\r\n\r\n  static createFromPages(\r\n    pageRec: globalThis.Record<string, NotePage>,\r\n    width = WIDTH\r\n  ) {\r\n    return new StateSet(\r\n      defaultFactory().set(\r\n        \"states\",\r\n        Map(pageRec).map(({ state, ratio }) =>\r\n          DrawState.loadFromFlat(state, width, width * ratio)\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  getImmutable() {\r\n    return this.immutable;\r\n  }\r\n\r\n  getStates() {\r\n    return this.getImmutable().get(\"states\");\r\n  }\r\n\r\n  getOneState(pageID: string) {\r\n    return this.getStates().get(pageID);\r\n  }\r\n\r\n  getEditStack() {\r\n    return this.getImmutable().get(\"editStack\");\r\n  }\r\n\r\n  getUndoStack() {\r\n    return this.getImmutable().get(\"undoStack\");\r\n  }\r\n\r\n  setState(pageID: string, drawState: DrawState) {\r\n    const prevDS = this.getOneState(pageID);\r\n    if (!prevDS || prevDS === drawState) return this;\r\n    let currRecord = this.getImmutable()\r\n      .update(\"states\", (s) => s.set(pageID, drawState))\r\n      .update(\"editStack\", (l) => l.push(pageID))\r\n      .delete(\"undoStack\");\r\n\r\n    const { lastOp } = drawState;\r\n    const lastSetOp = lastOp && { ...lastOp, pageID };\r\n\r\n    return new StateSet(currRecord, lastSetOp);\r\n  }\r\n\r\n  // sync with mutation.\r\n  syncStrokeTime(pageID: string, stroke: Stroke) {\r\n    const prevDS = this.getOneState(pageID);\r\n    prevDS && DrawState.syncStrokeTime(prevDS, stroke);\r\n    return this;\r\n  }\r\n\r\n  addState(pageID: string, notePage: NotePage, width = WIDTH) {\r\n    const { state, ratio } = notePage;\r\n    const newDS = DrawState.loadFromFlat(state, width, width * ratio);\r\n    const currRecord = this.getImmutable().update(\"states\", (s) =>\r\n      s.set(pageID, newDS)\r\n    );\r\n    return new StateSet(currRecord);\r\n  }\r\n\r\n  deleteState(pageID: string) {\r\n    return new StateSet(\r\n      this.getImmutable().update(\"states\", (s) => s.delete(pageID))\r\n    );\r\n  }\r\n\r\n  isUndoable() {\r\n    return this.getEditStack().size > 0;\r\n  }\r\n\r\n  isRedoable() {\r\n    return this.getUndoStack().size > 0;\r\n  }\r\n\r\n  undo() {\r\n    if (!this.isUndoable()) return this;\r\n    const lastUid = this.getEditStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.undo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"editStack\", (s) => s.pop())\r\n        .update(\"undoStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  redo() {\r\n    if (!this.isRedoable()) return this;\r\n    const lastUid = this.getUndoStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.redo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"undoStack\", (s) => s.pop())\r\n        .update(\"editStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  getLastDS(): [string, DrawState] | undefined {\r\n    const pageID = this.lastOp?.pageID;\r\n    const ds = pageID && this.getOneState(pageID);\r\n    if (ds) return [pageID, ds];\r\n  }\r\n}\r\n","import { Button, message } from \"antd\";\r\nimport React, { useContext } from \"react\";\r\nimport { ReaderMethodCtx } from \"./Reader\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nexport const AddPageButton = () => {\r\n  const { addFinalPage } = useContext(ReaderMethodCtx);\r\n  return (\r\n    <div className=\"add-btn-wrapper\">\r\n      <Button\r\n        type=\"dashed\"\r\n        icon={<PlusOutlined />}\r\n        block\r\n        onClick={addFinalPage}\r\n      >\r\n        New page\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const showPageDelMsg = (onUndo: () => void) => {\r\n  message.warning({\r\n    content: (\r\n      <>\r\n        One page was deleted.\r\n        <Button\r\n          size=\"small\"\r\n          type=\"link\"\r\n          onClick={() => {\r\n            message.destroy(\"DELETE\");\r\n            onUndo();\r\n          }}\r\n        >\r\n          Undo\r\n        </Button>\r\n      </>\r\n    ),\r\n    key: \"DELETE\",\r\n    duration: 10,\r\n  });\r\n};\r\n","import classNames from \"classnames\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./digitDisplay.sass\";\r\n\r\nfunction num2digits(num: number): number[] {\r\n  return String(num)\r\n    .padStart(4, \"0\")\r\n    .split(\"\")\r\n    .map((s) => Number(s));\r\n}\r\n\r\nexport default function DigitDisplay({ value }: { value: number }) {\r\n  const [randomNum, setRandomNum] = useState(9999);\r\n  const displayNum = value >= 0 ? value : randomNum;\r\n  const digits = num2digits(displayNum);\r\n\r\n  function resetRandom() {\r\n    setRandomNum(Math.floor(Math.random() * 10000));\r\n  }\r\n  useEffect(() => {\r\n    if (value !== -1) return setRandomNum(9999);\r\n    const timer = setTimeout(resetRandom, 100);\r\n    return () => clearTimeout(timer);\r\n  }, [value]);\r\n\r\n  return (\r\n    <div className={classNames(\"digit-display\", { disabled: value === -2 })}>\r\n      {digits.map((d, idx) => (\r\n        <Digit key={idx} digit={d} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Digit({ digit }: { digit: number }) {\r\n  if (!(digit <= 9 && digit >= 0)) {\r\n    return <div className=\"digit\">*</div>;\r\n  }\r\n  return <div className=\"digit\">{digit}</div>;\r\n}\r\n","export function exchange<T>(list: T[], fromIndex: number, toIndex: number) {\r\n  const result = list.slice();\r\n  const [removed] = result.splice(fromIndex, 1);\r\n  result.splice(toIndex, 0, removed);\r\n  return result;\r\n}\r\n\r\nexport function insertAfter<T>(list: T[], prevItem: T, newItem: T) {\r\n  const prevIndex = list.indexOf(prevItem);\r\n  const curr = list.slice();\r\n  if (prevIndex === -1) return curr;\r\n  curr.splice(prevIndex + 1, 0, newItem);\r\n  return curr;\r\n}\r\n","import { createFromIconfontCN } from \"@ant-design/icons\";\r\n\r\nexport default createFromIconfontCN({\r\n  scriptUrl: \"//at.alicdn.com/t/font_3181679_yo844n7qgns.js\",\r\n});\r\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  MouseEvent,\r\n} from \"react\";\r\nimport {\r\n  MoreOutlined,\r\n  PlusOutlined,\r\n  CopyOutlined,\r\n  DeleteOutlined,\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  Draggable,\r\n  Droppable,\r\n  DropResult,\r\n  DragDropContext,\r\n} from \"react-beautiful-dnd\";\r\nimport { PageWrapper, ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport { Avatar, Button, Drawer, Menu, Popover, Tabs } from \"antd\";\r\nimport { AddPageButton } from \"./ReaderTools\";\r\nimport { exchange } from \"../../lib/array\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { UserAvatar } from \"./DrawTools\";\r\nimport IconFont from \"../ui/IconFont\";\r\nimport classNames from \"classnames\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport \"./preview.sass\";\r\n\r\nconst PageNavContent = ({\r\n  activeKey,\r\n  setActiveKey,\r\n}: {\r\n  activeKey: string;\r\n  setActiveKey: Setter<string>;\r\n}) => {\r\n  const { pageOrder, inviewPages } = useContext(ReaderStateCtx);\r\n  const { scrollPage, saveReorder } = useContext(ReaderMethodCtx);\r\n  const refRec = useRef<Record<string, HTMLElement>>({});\r\n  const listEl = useRef<HTMLDivElement>();\r\n\r\n  const onDragEnd = ({ source, destination }: DropResult) => {\r\n    if (!destination || !pageOrder) return;\r\n    const { index: fromIndex } = source;\r\n    const { index: toIndex } = destination;\r\n    if (fromIndex === toIndex) return;\r\n    const pageID = pageOrder[fromIndex];\r\n    const newOrder = exchange(pageOrder, fromIndex, toIndex);\r\n    saveReorder(newOrder, true);\r\n    requestAnimationFrame(() => scrollPage(pageID));\r\n  };\r\n\r\n  const currpageID = useMemo(\r\n    () => pageOrder?.find((pageID) => inviewPages.has(pageID)) || \"\",\r\n    [pageOrder, inviewPages]\r\n  );\r\n\r\n  useEffect(() => {\r\n    refRec.current[currpageID]?.scrollIntoView();\r\n    const itemHeight = refRec.current[currpageID]?.clientHeight || 0;\r\n    const listHeight = listEl.current?.clientHeight || 0;\r\n    listEl.current?.scrollBy(0, -listHeight / 2 + itemHeight / 2);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"preview-container\">\r\n      <PreviewTabs activeKey={activeKey} setActiveKey={setActiveKey} />\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"preview-list\">\r\n          {({ droppableProps, innerRef, placeholder }) => (\r\n            <div\r\n              className=\"page-list\"\r\n              ref={(e) => {\r\n                innerRef(e);\r\n                if (e) listEl.current = e;\r\n              }}\r\n              {...droppableProps}\r\n            >\r\n              {pageOrder?.map((uid, index) => (\r\n                <PagePreview\r\n                  key={uid}\r\n                  uid={uid}\r\n                  mode={activeKey}\r\n                  pageIndex={index}\r\n                  currpageID={currpageID}\r\n                  refRec={refRec.current}\r\n                />\r\n              ))}\r\n              {placeholder}\r\n              {activeKey === \"ALL\" && <AddPageButton />}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PagePreview: FC<{\r\n  uid: string;\r\n  mode: string;\r\n  pageIndex: number;\r\n  currpageID: string;\r\n  refRec: Record<string, HTMLElement>;\r\n}> = ({ uid, pageIndex, mode, currpageID, refRec }) => {\r\n  const { stateSet, teamState, pageRec } = useContext(ReaderStateCtx);\r\n  const { scrollPage, switchPageMarked } = useContext(ReaderMethodCtx);\r\n  const { ignores } = useContext(TeamCtx);\r\n  const [chosen, setChosen] = useState(\"\");\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n  const userIDs = useMemo(\r\n    () =>\r\n      teamState\r\n        ?.getPageValidUsers(uid)\r\n        .filter((userID) => !ignores.has(userID)) || [],\r\n    [teamState, ignores, uid]\r\n  );\r\n  if (!page || !drawState) return null;\r\n  const { image, marked } = page;\r\n\r\n  if (\r\n    mode === \"WRITTEN\" &&\r\n    drawState.isEmpty() &&\r\n    (!teamStateMap || teamStateMap.every((ds) => ds.isEmpty()))\r\n  ) {\r\n    return null;\r\n  }\r\n  if (mode === \"MARKED\" && !marked) return null;\r\n\r\n  const switchMarked = (e: MouseEvent<HTMLSpanElement>) => {\r\n    switchPageMarked(uid);\r\n    e.stopPropagation();\r\n  };\r\n  const curr = currpageID === uid;\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={uid}\r\n      index={pageIndex}\r\n      isDragDisabled={mode !== \"ALL\"}\r\n    >\r\n      {(\r\n        { innerRef, draggableProps, dragHandleProps },\r\n        { isDragging: drag }\r\n      ) => (\r\n        <div\r\n          ref={(e) => {\r\n            innerRef(e);\r\n            if (e) refRec[uid] = e;\r\n          }}\r\n          className={classNames(\"page\", { curr, drag })}\r\n          onClick={() => scrollPage(uid)}\r\n          {...draggableProps}\r\n          {...dragHandleProps}\r\n        >\r\n          <PageWrapper\r\n            uid={uid}\r\n            drawState={teamStateMap?.get(chosen) || drawState}\r\n            teamStateMap={chosen ? undefined : teamStateMap}\r\n            thumbnail={image}\r\n            preview\r\n          />\r\n          <span\r\n            className={classNames(\"bookmark\", { marked })}\r\n            onClickCapture={switchMarked}\r\n          />\r\n          <span className=\"index\">{pageIndex + 1}</span>\r\n          <PreviewOption uid={uid} />\r\n          <TeamAvatars\r\n            userIDs={userIDs}\r\n            chosen={chosen}\r\n            setChosen={setChosen}\r\n          />\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst TeamAvatars: FC<{\r\n  userIDs: string[];\r\n  chosen: string;\r\n  setChosen: Setter<string>;\r\n}> = ({ userIDs, chosen, setChosen }) => {\r\n  return (\r\n    <Avatar.Group\r\n      maxCount={2}\r\n      size=\"default\"\r\n      className={classNames(\"team-group\", { chosen })}\r\n    >\r\n      {userIDs.map((userID) => (\r\n        <UserAvatar\r\n          key={userID}\r\n          size=\"default\"\r\n          userID={userID}\r\n          className=\"preview-avatar\"\r\n          chosen={chosen === userID}\r\n          onClick={() => setChosen((prev) => (prev === userID ? \"\" : userID))}\r\n        />\r\n      ))}\r\n    </Avatar.Group>\r\n  );\r\n};\r\n\r\nconst PreviewOption = ({ uid }: { uid: string }) => {\r\n  const [popShow, setPopShow] = useState(false);\r\n  const { addPage, deletePage } = useContext(ReaderMethodCtx);\r\n\r\n  const menu = (\r\n    <Menu\r\n      onClick={({ key, domEvent }) => {\r\n        if (key === \"ADD\") {\r\n          addPage(uid);\r\n        } else if (key === \"COPY\") {\r\n          addPage(uid, true);\r\n        } else if (key === \"DELETE\") {\r\n          deletePage(uid);\r\n        }\r\n        domEvent.stopPropagation();\r\n        setPopShow(false);\r\n      }}\r\n      items={[\r\n        { key: \"ADD\", icon: <PlusOutlined />, label: \"Add page\" },\r\n        { key: \"COPY\", icon: <CopyOutlined />, label: \"Duplicate\" },\r\n        {\r\n          key: \"DELETE\",\r\n          icon: <DeleteOutlined />,\r\n          label: \"Delete\",\r\n          danger: true,\r\n        },\r\n      ]}\r\n    ></Menu>\r\n  );\r\n  return (\r\n    <Popover\r\n      content={menu}\r\n      trigger=\"click\"\r\n      placement=\"left\"\r\n      visible={popShow}\r\n      onVisibleChange={setPopShow}\r\n      destroyTooltipOnHide\r\n    >\r\n      <span\r\n        className=\"option\"\r\n        onClickCapture={(e) => {\r\n          setPopShow((prev) => !prev);\r\n          e.stopPropagation();\r\n        }}\r\n      >\r\n        <MoreOutlined />\r\n      </span>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst PreviewTabs = ({\r\n  activeKey,\r\n  setActiveKey,\r\n}: {\r\n  activeKey: string;\r\n  setActiveKey: (key: string) => void;\r\n}) => {\r\n  const { TabPane } = Tabs;\r\n  return (\r\n    <Tabs\r\n      className=\"tabs\"\r\n      activeKey={activeKey}\r\n      onChange={setActiveKey}\r\n      tabBarGutter={10}\r\n      size=\"small\"\r\n      centered\r\n    >\r\n      <TabPane tab={<IconFont type=\"icon-uf_paper\" />} key=\"ALL\" />\r\n      <TabPane tab={<IconFont type=\"icon-bookmark2\" />} key=\"MARKED\" />\r\n      <TabPane tab={<IconFont type=\"icon-write\" />} key=\"WRITTEN\" />\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default function PageNav() {\r\n  const [navOn, setNavOn] = useState(false);\r\n  const [activeKey, setActiveKey] = useState<string>(\"ALL\");\r\n  const title = {\r\n    ALL: \"All Pages\",\r\n    MARKED: \"Bookmarks\",\r\n    WRITTEN: \"Notes\",\r\n  }[activeKey];\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        type=\"text\"\r\n        icon={navOn ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\r\n        onClick={() => setNavOn((prev) => !prev)}\r\n      />\r\n      <Drawer\r\n        visible={navOn}\r\n        onClose={() => setNavOn(false)}\r\n        width={200}\r\n        title={title}\r\n        closable={false}\r\n        className=\"preview-drawer\"\r\n        contentWrapperStyle={{ boxShadow: \"none\" }}\r\n        bodyStyle={{ padding: 0, overflow: \"hidden\" }}\r\n        headerStyle={{ textAlign: \"center\", borderTop: \"1px solid #eee\" }}\r\n        destroyOnClose\r\n      >\r\n        <PageNavContent activeKey={activeKey} setActiveKey={setActiveKey} />\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","import React, {\r\n  FC,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  CSSProperties,\r\n} from \"react\";\r\nimport {\r\n  Badge,\r\n  Alert,\r\n  Avatar,\r\n  Button,\r\n  Slider,\r\n  Divider,\r\n  message,\r\n  Popover,\r\n  Popconfirm,\r\n  ButtonProps,\r\n} from \"antd\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport DigitDisplay from \"../ui/DigitDisplay\";\r\nimport { colors, getHashedColor } from \"../../lib/color\";\r\nimport { getUserID, saveUserName } from \"../../lib/user\";\r\nimport { DrawCtrl, saveDrawCtrl } from \"../../lib/draw/drawCtrl\";\r\nimport PageNav from \"./PageNav\";\r\nimport {\r\n  HomeFilled,\r\n  EyeOutlined,\r\n  FormOutlined,\r\n  UndoOutlined,\r\n  RedoOutlined,\r\n  SaveOutlined,\r\n  TeamOutlined,\r\n  CopyOutlined,\r\n  CheckOutlined,\r\n  ReloadOutlined,\r\n  GatewayOutlined,\r\n  ShareAltOutlined,\r\n  HighlightOutlined,\r\n  DisconnectOutlined,\r\n  EyeInvisibleOutlined,\r\n  UsergroupAddOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { AvatarSize } from \"antd/lib/avatar/SizeContext\";\r\nimport { editNoteData } from \"../../lib/note/archive\";\r\nimport { putNote } from \"../../lib/network/http\";\r\nimport IconFont from \"../ui/IconFont\";\r\nimport classNames from \"classnames\";\r\nimport copy from \"clipboard-copy\";\r\nimport \"./drawTools.sass\";\r\n\r\nexport default function DrawTools({\r\n  handleUndo,\r\n  handleRedo,\r\n  instantSave,\r\n}: {\r\n  handleUndo: () => void;\r\n  handleRedo: () => void;\r\n  instantSave: () => Promise<void> | undefined;\r\n}) {\r\n  const { saved, stateSet, drawCtrl } = useContext(ReaderStateCtx);\r\n  const { setDrawCtrl } = useContext(ReaderMethodCtx);\r\n  const { teamOn } = useContext(TeamCtx);\r\n  const { mode, finger } = drawCtrl;\r\n\r\n  const nav = useNavigate();\r\n\r\n  const updateDrawCtrl = (updated: Partial<DrawCtrl>) => {\r\n    setDrawCtrl((prev) => {\r\n      const newCtrl = { ...prev, ...updated };\r\n      saveDrawCtrl(newCtrl);\r\n      return newCtrl;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"left\">\r\n        <Button\r\n          type=\"text\"\r\n          onClick={async () => {\r\n            await instantSave();\r\n            nav(\"/\");\r\n          }}\r\n          icon={<HomeFilled style={{ opacity: 0.8 }} />}\r\n        />\r\n        <div className=\"br\" />\r\n        <Button\r\n          type=\"text\"\r\n          className=\"save\"\r\n          onClick={instantSave}\r\n          disabled={saved}\r\n          icon={<SaveOutlined />}\r\n        />\r\n      </div>\r\n      <div className=\"middle\">\r\n        <Button\r\n          type=\"text\"\r\n          shape=\"circle\"\r\n          icon={<UndoOutlined />}\r\n          onClick={handleUndo}\r\n          disabled={!stateSet?.isUndoable()}\r\n        />\r\n        <Button\r\n          type=\"text\"\r\n          shape=\"circle\"\r\n          icon={<RedoOutlined />}\r\n          onClick={handleRedo}\r\n          disabled={!stateSet?.isRedoable()}\r\n        />\r\n        <Button\r\n          type={finger ? \"default\" : \"text\"}\r\n          shape=\"circle\"\r\n          onClick={() => {\r\n            updateDrawCtrl({ finger: !finger });\r\n            message.destroy('FINGER')\r\n            message.info({\r\n              content: `Draw with finger: ${finger ? \"Off\" : \"On\"}`,\r\n              key: \"FINGER\",\r\n            });\r\n          }}\r\n          icon={<IconFont type=\"icon-finger\" />}\r\n        />\r\n        <div className=\"br\" />\r\n        <PenButton updateDrawCtrl={updateDrawCtrl} />\r\n        <EraserButton updateDrawCtrl={updateDrawCtrl} />\r\n        <Button\r\n          type={mode === \"text\" ? \"default\" : \"text\"}\r\n          shape=\"circle\"\r\n          onClick={() => updateDrawCtrl({ mode: \"text\" })}\r\n          icon={<IconFont type=\"icon-text1\" />}\r\n        />\r\n        <SelectButton updateDrawCtrl={updateDrawCtrl} />\r\n      </div>\r\n      <div className=\"right\">\r\n        {teamOn && <RoomInfo />}\r\n        {teamOn || <JoinRoom instantSave={instantSave} />}\r\n        <div className=\"br\" />\r\n        <PageNav />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nconst PenButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const { drawCtrl } = useContext(ReaderStateCtx);\r\n  const { mode } = drawCtrl;\r\n\r\n  const btnProps: ButtonProps = {\r\n    className: \"pen\",\r\n    shape: \"circle\",\r\n    icon: <HighlightOutlined />,\r\n  };\r\n  return mode === \"draw\" ? (\r\n    <Popover\r\n      content={<PenPanel updateDrawCtrl={updateDrawCtrl} drawCtrl={drawCtrl} />}\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button type=\"default\" {...btnProps} />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      onClick={() => updateDrawCtrl({ mode: \"draw\" })}\r\n      {...btnProps}\r\n    />\r\n  );\r\n};\r\n\r\nexport const PenPanel: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n  drawCtrl: Partial<DrawCtrl>;\r\n}> = ({ updateDrawCtrl, drawCtrl }) => {\r\n  const { lineWidth, highlight, color } = drawCtrl;\r\n  const [tempLineWidth, setTempLineWidth] = useState(lineWidth);\r\n\r\n  return (\r\n    <div className=\"pen-panel\">\r\n      <div className=\"pen-status\">\r\n        <Slider\r\n          min={5}\r\n          max={100}\r\n          defaultValue={tempLineWidth}\r\n          onChange={setTempLineWidth}\r\n          onAfterChange={(lineWidth) => updateDrawCtrl({ lineWidth })}\r\n        />\r\n        <Button\r\n          type={highlight ? \"primary\" : \"text\"}\r\n          ghost={highlight}\r\n          shape=\"circle\"\r\n          icon={<IconFont type=\"icon-Highlight\" />}\r\n          onClick={() => updateDrawCtrl({ highlight: !highlight })}\r\n        />\r\n      </div>\r\n      <ColorSelect\r\n        color={color || \"\"}\r\n        setColor={(c) => updateDrawCtrl({ color: c })}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ColorSelect: FC<{\r\n  color: string;\r\n  setColor: (color: string) => void;\r\n}> = ({ setColor, color }) => {\r\n  return (\r\n    <div className=\"color-select\">\r\n      {colors.map((c) => (\r\n        <label key={c}>\r\n          <input\r\n            checked={color === c}\r\n            type=\"radio\"\r\n            name=\"color\"\r\n            onChange={() => setColor(c)}\r\n          />\r\n          <div\r\n            className=\"circle\"\r\n            style={{ \"--circle-color\": c } as CSSProperties}\r\n          ></div>\r\n        </label>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EraserButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const {\r\n    drawCtrl: { eraserWidth, mode },\r\n  } = useContext(ReaderStateCtx);\r\n  const [tempEraserWidth, setTempEraserWidth] = useState(eraserWidth);\r\n\r\n  const content = (\r\n    <div className=\"pen-panel\">\r\n      <Slider\r\n        min={5}\r\n        max={100}\r\n        defaultValue={tempEraserWidth}\r\n        onChange={setTempEraserWidth}\r\n        onAfterChange={(eraserWidth) => updateDrawCtrl({ eraserWidth })}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const btnProps: ButtonProps = {\r\n    shape: \"circle\",\r\n    icon: <IconFont type=\"icon-eraser\" />,\r\n  };\r\n\r\n  return mode === \"erase\" ? (\r\n    <Popover\r\n      content={content}\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button type=\"default\" {...btnProps} />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      onClick={() => updateDrawCtrl({ mode: \"erase\" })}\r\n      {...btnProps}\r\n    />\r\n  );\r\n};\r\n\r\nconst SelectButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const {\r\n    drawCtrl: { lasso, mode },\r\n  } = useContext(ReaderStateCtx);\r\n\r\n  const icon = lasso ? <IconFont type=\"icon-lasso1\" /> : <GatewayOutlined />;\r\n\r\n  return mode === \"select\" ? (\r\n    <Button\r\n      type=\"default\"\r\n      shape=\"circle\"\r\n      icon={icon}\r\n      onClick={() => updateDrawCtrl({ lasso: !lasso })}\r\n    />\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      shape=\"circle\"\r\n      icon={icon}\r\n      onClick={() => updateDrawCtrl({ mode: \"select\" })}\r\n    />\r\n  );\r\n};\r\n\r\nconst UserCard: FC<{ userID: string }> = ({ userID }) => {\r\n  const [renaming, setRenaming] = useState(false);\r\n  const { ignores, setIgnores, resetIO, userRec } = useContext(TeamCtx);\r\n  const userInfo = userRec[userID];\r\n  useEffect(() => setRenaming(false), [userInfo]);\r\n  if (!userInfo) return null;\r\n\r\n  const { userName, online } = userInfo;\r\n  const self = userID === getUserID();\r\n  const ignored = ignores.has(userID) && !self;\r\n\r\n  const switchIgnore = () => {\r\n    setIgnores((prev) => {\r\n      if (prev.has(userID)) return prev.delete(userID);\r\n      return prev.add(userID);\r\n    });\r\n  };\r\n\r\n  const submitRename = (value: string) => {\r\n    const name = value.trim();\r\n    if (!name || name === userName) return setRenaming(false);\r\n    saveUserName(name);\r\n    resetIO();\r\n  };\r\n\r\n  return (\r\n    <div className={classNames(\"user-item\", { online })}>\r\n      <UserAvatar userID={userID} size=\"small\" className=\"room-avatar\" />\r\n      {renaming || <span className=\"user-name\">{userName}</span>}\r\n      {renaming && (\r\n        <Search\r\n          autoFocus\r\n          className=\"rename-input\"\r\n          defaultValue={userName}\r\n          onSearch={submitRename}\r\n          enterButton={<Button icon={<CheckOutlined />} />}\r\n        />\r\n      )}\r\n      {self ? (\r\n        renaming || (\r\n          <Button\r\n            type=\"text\"\r\n            icon={<FormOutlined />}\r\n            onClick={() => setRenaming(true)}\r\n          />\r\n        )\r\n      ) : (\r\n        <Button\r\n          type=\"text\"\r\n          icon={ignored ? <EyeInvisibleOutlined /> : <EyeOutlined />}\r\n          onClick={switchIgnore}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const UserAvatar: FC<{\r\n  userID: string;\r\n  size?: AvatarSize;\r\n  onClick?: () => void;\r\n  chosen?: boolean;\r\n  className?: string;\r\n}> = ({\r\n  userID,\r\n  size = \"default\",\r\n  onClick = () => {},\r\n  chosen = false,\r\n  className,\r\n}) => {\r\n  const { userRec } = useContext(TeamCtx);\r\n  const color = useMemo(() => getHashedColor(userID), [userID]);\r\n  const userInfo = userRec[userID];\r\n  if (!userInfo) return null;\r\n  const { userName } = userInfo;\r\n\r\n  return (\r\n    <Avatar\r\n      className={classNames(className, { chosen })}\r\n      size={size}\r\n      style={{ backgroundColor: color }}\r\n    >\r\n      <div\r\n        className=\"avatar-wrapper\"\r\n        onClickCapture={(e) => {\r\n          e.stopPropagation();\r\n          onClick();\r\n        }}\r\n      >\r\n        {userName?.slice(0, 3)}\r\n      </div>\r\n    </Avatar>\r\n  );\r\n};\r\n\r\nconst RoomInfo: FC = () => {\r\n  const { code, userRec, connected, loadInfo, loadState, resetIO } =\r\n    useContext(TeamCtx);\r\n  const { noteInfo } = useContext(ReaderStateCtx);\r\n  const link = window.location.href;\r\n  const share = async () => {\r\n    const selfName = userRec[getUserID()]?.userName;\r\n    try {\r\n      if (!noteInfo) return;\r\n      await copy(`${noteInfo.name} - ${selfName} - Multibility\\n${link}`);\r\n      message.destroy(\"copy\");\r\n      message.success({\r\n        content: \"Share link copied!\",\r\n        icon: <CopyOutlined />,\r\n        key: \"copy\",\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const userList = useMemo(() => {\r\n    const values = Object.values(userRec);\r\n    const selfID = getUserID();\r\n    const selfInfo = userRec[selfID];\r\n    const list = selfInfo ? [selfInfo] : [];\r\n    list.push(\r\n      ...values.filter(({ online, userID }) => online && userID !== selfID),\r\n      ...values.filter(({ online, userID }) => !online && userID !== selfID)\r\n    );\r\n    return list;\r\n  }, [userRec]);\r\n  const onlineNum = userList.filter((u) => u.online).length;\r\n\r\n  const content = (\r\n    <div className=\"team-popover\">\r\n      {connected || (\r\n        <Alert\r\n          className=\"disconn-alert\"\r\n          message=\"Network failed.\"\r\n          icon={<DisconnectOutlined />}\r\n          type=\"error\"\r\n          showIcon\r\n          banner\r\n        />\r\n      )}\r\n      <DigitDisplay value={code} />\r\n      <Button\r\n        icon={<ShareAltOutlined />}\r\n        className=\"share-btn\"\r\n        onClick={share}\r\n        block\r\n      >\r\n        Share\r\n      </Button>\r\n      <Divider />\r\n      <div className=\"user-list\">\r\n        {userList.map((u) => (\r\n          <UserCard key={u.userID} userID={u.userID} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const title = (\r\n    <div className=\"team-title\">\r\n      <span>Team info</span>\r\n      <Button\r\n        shape=\"circle\"\r\n        type=\"text\"\r\n        size=\"small\"\r\n        icon={<ReloadOutlined />}\r\n        onClick={async () => {\r\n          await loadInfo();\r\n          await loadState();\r\n          resetIO();\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Popover\r\n      content={content}\r\n      trigger=\"click\"\r\n      placement=\"bottomRight\"\r\n      title={title}\r\n      getPopupContainer={(e) => e}\r\n    >\r\n      <Button\r\n        type=\"text\"\r\n        icon={\r\n          <Badge\r\n            status={connected ? \"success\" : \"error\"}\r\n            count={connected ? onlineNum : \"!\"}\r\n            size=\"small\"\r\n          >\r\n            <TeamOutlined />\r\n          </Badge>\r\n        }\r\n      />\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst JoinRoom: FC<{ instantSave: () => Promise<void> | undefined }> = ({\r\n  instantSave,\r\n}) => {\r\n  const { noteID } = useContext(ReaderStateCtx);\r\n  const nav = useNavigate();\r\n  const createRoom = async () => {\r\n    await instantSave();\r\n    const resCode = await putNote(noteID);\r\n    if (!resCode) {\r\n      message.error(\"Can't create room.\");\r\n      return;\r\n    }\r\n    await editNoteData(noteID, { team: true });\r\n    nav(\"/team/\" + noteID);\r\n  };\r\n  return (\r\n    <Popconfirm\r\n      placement=\"bottomRight\"\r\n      title=\"Enable team editing?\"\r\n      onConfirm={createRoom}\r\n      okText=\"Yes\"\r\n      cancelText=\"No\"\r\n    >\r\n      <Button type=\"text\" icon={<UsergroupAddOutlined />} />\r\n    </Popconfirm>\r\n  );\r\n};\r\n","import React, { useRef, useState } from \"react\";\nimport {\n  CopyOutlined,\n  DeleteOutlined,\n  LoadingOutlined,\n  BgColorsOutlined,\n  FontSizeOutlined,\n  FontColorsOutlined,\n  RotateRightOutlined,\n} from \"@ant-design/icons\";\nimport { Button, ButtonProps, InputNumber, Modal, Popover } from \"antd\";\nimport { ColorSelect, PenPanel } from \"../reader/DrawTools\";\nimport { SelectToolType, TextToolType } from \"./Draw\";\nimport { createWorker, Worker } from \"tesseract.js\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { useDrag } from \"@use-gesture/react\";\nimport { colors } from \"../../lib/color\";\nimport { createPortal } from \"react-dom\";\nimport IconFont from \"../ui/IconFont\";\nimport classNames from \"classnames\";\nimport copy from \"clipboard-copy\";\nimport \"./tools.sass\";\nimport \"animate.css\";\n\nconst getOcrWorker = (() => {\n  let worker: Worker;\n  return async () => {\n    if (worker) return worker;\n    worker = createWorker({ logger: console.log });\n    await worker.load();\n    await worker.loadLanguage(\"eng+chi_sim\");\n    await worker.initialize(\"eng+chi_sim\");\n    return worker;\n  };\n})();\n\nexport const SelectTool: SelectToolType = ({\n  onDelete,\n  onRotate,\n  onDuplicate,\n  mutateStyle,\n  rasterize,\n  currDrawCtrl,\n}) => {\n  const btnProps: ButtonProps = {\n    type: \"text\",\n    shape: \"round\",\n    size: \"small\",\n  };\n\n  const rotateEl = useRef<HTMLDivElement>(null);\n  const [dragged, setDragged] = useState(false);\n  const [transX, setTransX] = useState(0);\n  const gearStyle = { transform: `translateX(${transX}px)` };\n\n  const [rotateCount, setRotateCount] = useState(0);\n  const shakeShow = rotateCount % 4 === 1;\n  const btnClass = shakeShow\n    ? \"animate__animated animate__headShake\"\n    : undefined;\n\n  useDrag(\n    ({ first, last, offset, delta }) => {\n      setTransX(offset[0]);\n      onRotate(delta[0] / 2, last);\n      first && setDragged(true);\n      last && setDragged(false);\n    },\n    {\n      target: rotateEl,\n      filterTaps: true,\n      rubberband: 0.05,\n      bounds: { left: -90, right: 90 },\n    }\n  );\n\n  const [recoginzing, setRecoginzing] = useState(false);\n  const [modalShow, setModalShow] = useState(false);\n  const [text, setText] = useState(\"\");\n  const recognizeText = async () => {\n    setRecoginzing(true);\n    const imageData = rasterize();\n    try {\n      const worker = await getOcrWorker();\n      const result = await worker.recognize(imageData);\n      setText(result.data.text);\n      setModalShow(true);\n    } catch (e) {\n      console.error(e);\n    } finally {\n      setRecoginzing(false);\n    }\n  };\n\n  return createPortal(\n    <div className=\"select-tool\">\n      <Popover\n        trigger=\"click\"\n        placement=\"bottom\"\n        getPopupContainer={(e) => e}\n        destroyTooltipOnHide\n        content={\n          <PenPanel updateDrawCtrl={mutateStyle} drawCtrl={currDrawCtrl} />\n        }\n      >\n        <Button icon={<BgColorsOutlined />} {...btnProps} />\n      </Popover>\n      <div className={classNames(\"rotate-wrapper\", { dragged })} ref={rotateEl}>\n        <Button\n          className={btnClass}\n          icon={<RotateRightOutlined />}\n          onClick={() => {\n            setRotateCount((prev) => prev + 1);\n            onRotate(90, true);\n          }}\n          {...btnProps}\n        />\n        <div className=\"gear\" style={gearStyle} />\n      </div>\n      <Button icon={<CopyOutlined />} onClick={onDuplicate} {...btnProps} />\n      <Button\n        icon={recoginzing ? <LoadingOutlined /> : <IconFont type=\"icon-OCR\" />}\n        onClick={recognizeText}\n        {...btnProps}\n      />\n      <Button\n        danger\n        icon={<DeleteOutlined />}\n        onClick={onDelete}\n        {...btnProps}\n      />\n      <Modal\n        visible={modalShow}\n        title=\"OCR Result\"\n        onCancel={() => setModalShow(false)}\n        onOk={() => {\n          copy(text);\n          setModalShow(false);\n          setText(\"\");\n        }}\n        okText=\"Copy\"\n        destroyOnClose\n      >\n        <TextArea value={text} onChange={(e) => setText(e.target.value)} />\n      </Modal>\n    </div>,\n    document.body\n  );\n};\n\nexport const TextTool: TextToolType = ({ onSubmit, onCancel }) => {\n  const [text, setText] = useState(\"\");\n  const [fontSize, setFontSize] = useState(50);\n  const [color, setColor] = useState(colors[0]);\n  const [modalShow, setModalShow] = useState(true);\n\n  return (\n    <Modal\n      visible={modalShow}\n      title=\"Insert text\"\n      onCancel={() => {\n        setModalShow(false);\n        setTimeout(onCancel, 300);\n      }}\n      onOk={() => {\n        const content = text.trim();\n        if (!content) return onCancel();\n        onSubmit(content, fontSize, color);\n      }}\n      bodyStyle={{ paddingTop: 0 }}\n    >\n      <div className=\"insert-option\">\n        <span className=\"font-size\">\n          <FontSizeOutlined />\n          <span>Font size: </span>\n          <InputNumber size=\"small\" value={fontSize} onChange={setFontSize} />\n        </span>\n        <Popover\n          content={<ColorSelect color={color} setColor={setColor} />}\n          overlayStyle={{ width: 200 }}\n          placement=\"bottom\"\n        >\n          <Button\n            className=\"tag-btn\"\n            size=\"small\"\n            icon={<FontColorsOutlined />}\n          >\n            Font color\n          </Button>\n        </Popover>\n      </div>\n      <TextArea\n        autoFocus\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n      />\n    </Modal>\n  );\n};\n","import { PointerEvent, TouchEvent, useEffect, useRef } from \"react\";\r\n\r\ntype iOSTouch = Touch & {\r\n  force?: number;\r\n  touchType?: \"stylus\" | \"direct\";\r\n};\r\n\r\nexport function isApplePencil(e: TouchEvent) {\r\n  const touch = e.touches[0] as iOSTouch;\r\n  return touch?.touchType === \"stylus\";\r\n}\r\n\r\nexport function usePreventTouch(\r\n  allowFinger: boolean\r\n): React.CanvasHTMLAttributes<HTMLCanvasElement> {\r\n  const isTouch = useRef(false);\r\n  const checkPoniter = (e: PointerEvent) =>\r\n    e.isPrimary && (isTouch.current = e.pointerType === \"touch\");\r\n\r\n  const isEventValid = (e: TouchEvent) =>\r\n    !isTouch.current ||\r\n    isApplePencil(e) ||\r\n    (allowFinger && e.touches.length === 1);\r\n\r\n  const preventTouch = (e: TouchEvent) =>\r\n    isEventValid(e) || e.stopPropagation();\r\n\r\n  return {\r\n    onPointerDownCapture: checkPoniter,\r\n    onPointerMoveCapture: checkPoniter,\r\n    onTouchStartCapture: preventTouch,\r\n    onTouchMoveCapture: preventTouch,\r\n  };\r\n}\r\n\r\nexport function usePreventGesture() {\r\n  useEffect(() => {\r\n    const handler = (e: Event) => e.preventDefault();\r\n    document.addEventListener(\"gesturestart\", handler);\r\n    document.addEventListener(\"gesturechange\", handler);\r\n    document.addEventListener(\"gestureend\", handler);\r\n    return () => {\r\n      document.removeEventListener(\"gesturestart\", handler);\r\n      document.removeEventListener(\"gesturechange\", handler);\r\n      document.removeEventListener(\"gestureend\", handler);\r\n    };\r\n  }, []);\r\n}\r\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n  ComponentType,\r\n} from \"react\";\r\nimport { usePreventTouch, usePreventGesture } from \"../../lib/touch/touch\";\r\nimport { DrawState, Mutation, Stroke } from \"../../lib/draw/DrawState\";\r\nimport { defaultDrawCtrl, DrawCtrl } from \"../../lib/draw/drawCtrl\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { releaseCanvas } from \"../../lib/draw/canvas\";\r\nimport { usePinch } from \"@use-gesture/react\";\r\nimport { v4 as getUid } from \"uuid\";\r\nimport { Set } from \"immutable\";\r\nimport paper from \"paper\";\r\nimport \"./draw.sass\";\r\n\r\nexport type SelectToolType = ComponentType<{\r\n  onDelete: () => void;\r\n  onRotate: (angle: number, smooth?: boolean) => void;\r\n  onDuplicate: () => void;\r\n  mutateStyle: (updated: Partial<DrawCtrl>) => void;\r\n  rasterize: () => string;\r\n  currDrawCtrl: Partial<DrawCtrl>;\r\n}>;\r\n\r\nexport type TextToolType = ComponentType<{\r\n  onSubmit: (text: string, fontSize: number, color: string) => void;\r\n  onCancel: () => void;\r\n}>;\r\n\r\nconst PREVIEW_WIDTH = 200;\r\nconst {\r\n  Path,\r\n  Size,\r\n  Point,\r\n  Group,\r\n  Color,\r\n  Raster,\r\n  Shape: { Rectangle },\r\n} = paper;\r\n\r\nconst Draw: FC<{\r\n  drawState: DrawState;\r\n  otherStates?: DrawState[];\r\n  onChange?: Setter<DrawState>;\r\n  drawCtrl?: DrawCtrl;\r\n  readonly?: boolean;\r\n  preview?: boolean;\r\n  imgSrc?: string;\r\n  SelectTool?: SelectToolType;\r\n  TextTool?: TextToolType;\r\n}> = ({\r\n  drawState,\r\n  otherStates,\r\n  onChange = () => {},\r\n  drawCtrl = defaultDrawCtrl,\r\n  preview = false,\r\n  readonly = preview,\r\n  imgSrc,\r\n  SelectTool,\r\n  TextTool,\r\n}) => {\r\n  const { width, height } = drawState;\r\n  const { mode, color, finger, lineWidth, highlight, eraserWidth, lasso } =\r\n    drawCtrl;\r\n\r\n  const canvasEl = useRef<HTMLCanvasElement>(null);\r\n  const scope = useRef(new paper.PaperScope());\r\n  const [group, setGroup] = useState<paper.Item[]>([]);\r\n  const [erased, setErased] = useState(Set<string>());\r\n  const [currDrawCtrl, setCurrDrawCtrl] = useState<Partial<DrawCtrl>>({});\r\n  const [path, setPath] = usePaperItem<paper.Path>();\r\n  const [rect, setRect] = usePaperItem<paper.Shape.Rectangle>();\r\n\r\n  useEffect(() => {\r\n    const setupPaper = () => {\r\n      if (!canvasEl.current) return;\r\n      scope.current.setup(canvasEl.current);\r\n\r\n      const r = preview ? PREVIEW_WIDTH / width : 1;\r\n      scope.current.view.viewSize = new Size(width, height).multiply(r);\r\n      scope.current.view.scale(r, new Point(0, 0));\r\n      paintBackground(scope.current, width, height);\r\n    };\r\n\r\n    setupPaper();\r\n    const cvs = canvasEl.current;\r\n    return () => void (cvs && releaseCanvas(cvs));\r\n  }, [width, height, preview]);\r\n\r\n  useEffect(() => {\r\n    if (!imgSrc) return;\r\n    const img = new Image();\r\n    img.src = imgSrc;\r\n    let raster: paper.Raster;\r\n\r\n    img.onload = () => {\r\n      scope.current.activate();\r\n      raster = new Raster(img);\r\n      scope.current.project.layers[0].addChild(raster);\r\n      raster.position = scope.current.view.center;\r\n      let r = width / img.width;\r\n      raster.scale(r);\r\n    };\r\n\r\n    return () => void raster?.remove();\r\n  }, [imgSrc, width]);\r\n\r\n  const mergedStrokes = useMemo(\r\n    () =>\r\n      otherStates\r\n        ? DrawState.mergeStates(drawState, ...otherStates)\r\n        : drawState.getStrokeList(),\r\n    [drawState, otherStates]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const tempGroup: paper.Item[] = [];\r\n    const othersGroup: paper.Item[] = [];\r\n\r\n    mergedStrokes.forEach((stroke) =>\r\n      paintStroke(\r\n        stroke,\r\n        scope.current,\r\n        drawState.hasStroke(stroke.uid) ? tempGroup : othersGroup,\r\n        erased.has(stroke.uid)\r\n      )\r\n    );\r\n    setGroup(tempGroup);\r\n\r\n    return () => {\r\n      tempGroup.forEach((item) => item.remove());\r\n      othersGroup.forEach((item) => item.remove());\r\n    };\r\n  }, [mergedStrokes, erased, drawState]);\r\n\r\n  const [selected, setSelected] = useState(false);\r\n  const paperMode = mode === \"select\" && selected ? \"selected\" : mode;\r\n  const [selectedIDs, setSelectedIDs] = useState<string[]>([]);\r\n  const selectedItems = useMemo(() => {\r\n    const IDSet = Set(selectedIDs);\r\n    return group.filter((item) => IDSet.has(item.name));\r\n  }, [group, selectedIDs]);\r\n\r\n  const resetSelect = useCallback(() => {\r\n    setSelected(false);\r\n    setPath(undefined);\r\n    setRect(undefined);\r\n  }, [setPath, setRect]);\r\n\r\n  useEffect(() => {\r\n    if (mode !== \"select\") return;\r\n    return resetSelect;\r\n  }, [mode, resetSelect]);\r\n\r\n  useEffect(() => {\r\n    if (!selected) return;\r\n    return () => {\r\n      setSelectedIDs([]);\r\n      setCurrDrawCtrl({});\r\n    };\r\n  }, [selected]);\r\n\r\n  useEffect(resetSelect, [lasso, resetSelect]);\r\n\r\n  const setNewRect = (e: paper.MouseEvent) => {\r\n    const point = transformPoint(e.point);\r\n    const rectangle = startSelectRect(point);\r\n    setRect(rectangle);\r\n  };\r\n\r\n  const ratio = useRef(1);\r\n  const updateRatio = () => {\r\n    const clientWidth = canvasEl.current?.clientWidth;\r\n    if (clientWidth) ratio.current = width / clientWidth;\r\n    scope.current.activate();\r\n  };\r\n\r\n  const transformPoint = (projP: paper.Point) => {\r\n    scope.current.activate();\r\n    const { center, zoom } = scope.current.view;\r\n    const viewP = scope.current.view.projectToView(projP);\r\n    const absoluteP = viewP.multiply(ratio.current);\r\n    const offsetP = new Point(width, height)\r\n      .divide(2)\r\n      .subtract(center.multiply(zoom));\r\n    return absoluteP.subtract(offsetP).divide(zoom);\r\n  };\r\n\r\n  const handleDown = {\r\n    draw() {\r\n      updateRatio();\r\n      setPath(startStroke(color, lineWidth, highlight));\r\n    },\r\n    erase() {\r\n      updateRatio();\r\n      setPath(startStroke(\"#0003\", eraserWidth));\r\n    },\r\n    select(e: paper.MouseEvent) {\r\n      updateRatio();\r\n      if (lasso) setPath(startStroke(\"#1890ff\", 5));\r\n      else setNewRect(e);\r\n    },\r\n    selected(e: paper.MouseEvent) {\r\n      updateRatio();\r\n      const point = transformPoint(e.point);\r\n      // check if point is outside of selection;\r\n      if (lasso) {\r\n        if (path?.contains(point)) return;\r\n        setPath(startStroke(\"#1890ff\", 5));\r\n      } else {\r\n        if (rect?.contains(point)) return;\r\n        setNewRect(e);\r\n      }\r\n      setSelected(false);\r\n    },\r\n    text(e: paper.MouseEvent) {\r\n      updateRatio();\r\n      const point = transformPoint(e.point);\r\n      const t = new paper.PointText(point);\r\n      setPointText(t);\r\n    },\r\n  }[paperMode];\r\n\r\n  const handleDrag = {\r\n    draw(e: paper.MouseEvent) {\r\n      if (!path) return;\r\n      scope.current.activate();\r\n      const point = transformPoint(e.point);\r\n      path.add(point);\r\n      path.smooth();\r\n    },\r\n    erase(e: paper.MouseEvent) {\r\n      if (!path) return;\r\n      scope.current.activate();\r\n      const point = transformPoint(e.point);\r\n      path.add(point);\r\n      path.smooth();\r\n\r\n      const newErased = group\r\n        .filter((p) => !erased.has(p.name))\r\n        .filter((p) => p instanceof paper.Path && checkErase(p, path))\r\n        .map((p) => p.name);\r\n      setErased((prev) => prev.concat(newErased));\r\n    },\r\n    select(e: paper.MouseEvent) {\r\n      scope.current.activate();\r\n      if (lasso) {\r\n        if (!path) return;\r\n        const point = transformPoint(e.point);\r\n        path.add(point);\r\n        path.smooth();\r\n      } else {\r\n        if (!rect) return;\r\n        const delta = e.delta.multiply(ratio.current);\r\n        rect.size = rect.size.add(new Size(delta.x, delta.y));\r\n        rect.translate(delta.divide(2));\r\n      }\r\n    },\r\n    selected(e: paper.MouseEvent) {\r\n      scope.current.activate();\r\n      const delta = e.delta.multiply(ratio.current);\r\n      selectedItems.forEach((item) => item.translate(delta));\r\n      path?.translate(delta);\r\n      rect?.translate(delta);\r\n    },\r\n    text: null,\r\n  }[paperMode];\r\n\r\n  const handleUp = {\r\n    draw() {\r\n      if (!path || path.segments.length === 0) return;\r\n      scope.current.activate();\r\n      path.simplify();\r\n      const pathData = path.exportJSON();\r\n      onChange((prev) => DrawState.addStroke(prev, pathData));\r\n      setPath(undefined);\r\n    },\r\n    erase() {\r\n      if (!path) return;\r\n      scope.current.activate();\r\n      onChange((prev) => DrawState.eraseStrokes(prev, erased.toArray()));\r\n      setErased(Set());\r\n      setPath(undefined);\r\n    },\r\n    select() {\r\n      scope.current.activate();\r\n      let items: paper.Item[];\r\n      if (lasso) {\r\n        if (!path || path.length < 50) return setPath(undefined);\r\n        path.closePath();\r\n        moveDash(path);\r\n        items = checkPathSelection(path, group);\r\n      } else {\r\n        if (!rect) return;\r\n        const { width, height } = rect.size.abs();\r\n        if (width < 10 || height < 10) return setRect(undefined);\r\n        moveDash(rect);\r\n        items = checkRectSelection(rect, group);\r\n      }\r\n      const tempStyle = parseGroupStyle(new Group(items));\r\n      setCurrDrawCtrl((prev) => ({ ...prev, ...tempStyle }));\r\n      setSelectedIDs(items.map((item) => item.name));\r\n      setSelected(true);\r\n    },\r\n    selected() {\r\n      updateMutation();\r\n    },\r\n    text: null,\r\n  }[paperMode];\r\n\r\n  const handlePaper = () => {\r\n    if (readonly) return;\r\n    scope.current.view.onMouseDown = handleDown;\r\n    scope.current.view.onMouseDrag = handleDrag;\r\n    scope.current.view.onMouseUp = handleUp;\r\n  };\r\n  useEffect(handlePaper);\r\n\r\n  const updateMutation = () => {\r\n    if (!selectedItems?.length) return;\r\n    const mutations = selectedItems.map(\r\n      (p) => [p.name, p.exportJSON()] as Mutation\r\n    );\r\n    onChange((prev) => DrawState.mutateStrokes(prev, mutations));\r\n  };\r\n\r\n  const deleteSelected = () => {\r\n    if (!selectedItems?.length) return;\r\n\r\n    const deleted = selectedItems.map((item) => item.name);\r\n    onChange((prev) => DrawState.eraseStrokes(prev, deleted));\r\n    setSelectedIDs([]);\r\n    resetSelect();\r\n  };\r\n\r\n  const rotateSelected = (angle: number, last = false) => {\r\n    let aniCount = last ? 10 : 1;\r\n    const dAngle = angle / aniCount;\r\n    const rotate = () => {\r\n      const center = (rect || path)?.position;\r\n      selectedItems.forEach((item) => item.rotate(dAngle, center));\r\n      rect?.rotate(dAngle, center);\r\n      path?.rotate(dAngle, center);\r\n      if (--aniCount > 0) requestAnimationFrame(rotate);\r\n      else last && updateMutation();\r\n    };\r\n    rotate();\r\n  };\r\n\r\n  const mutateStyle = (updated: Partial<DrawCtrl>) => {\r\n    scope.current.activate();\r\n    updateGroupStyle(new Group(selectedItems), updated, currDrawCtrl.highlight);\r\n    setCurrDrawCtrl((prev) => ({ ...prev, ...updated }));\r\n    updateMutation();\r\n  };\r\n\r\n  const duplicateSelected = () => {\r\n    scope.current.activate();\r\n    const newSG = new Group(selectedItems).clone();\r\n    const size = (rect || path)?.bounds.size;\r\n    if (!size) return;\r\n    const { width, height } = size;\r\n    const transP = new Point(width, height).divide(10);\r\n    newSG.translate(transP);\r\n    rect?.translate(transP);\r\n    path?.translate(transP);\r\n\r\n    const mutations = newSG.children.map(\r\n      (item) => [getUid(), item.exportJSON()] as Mutation\r\n    );\r\n    onChange((prev) => DrawState.mutateStrokes(prev, mutations));\r\n    newSG.remove();\r\n    setSelectedIDs(mutations.map((m) => m[0]));\r\n  };\r\n\r\n  const rasterize = () =>\r\n    new Group(selectedItems).rasterize({ insert: false }).toDataURL();\r\n\r\n  const [pointText, setPointText] = usePaperItem<paper.PointText>();\r\n  useEffect(() => {\r\n    if (mode === \"text\") return () => setPointText(undefined);\r\n  }, [mode, setPointText]);\r\n\r\n  const submitText = (text: string, fontSize: number, color = \"#000\") => {\r\n    if (!pointText) return;\r\n    pointText.content = text;\r\n    pointText.fontSize = fontSize;\r\n    pointText.fillColor = new Color(color);\r\n    const pathData = pointText.exportJSON();\r\n    onChange((prev) => DrawState.addStroke(prev, pathData));\r\n    setPointText(undefined);\r\n  };\r\n  const cancelText = () => setPointText(undefined);\r\n\r\n  usePreventGesture();\r\n  usePinch(\r\n    ({ memo, offset: [scale], first, last, origin }) => {\r\n      const { view } = scope.current;\r\n\r\n      let lastScale, lastOX, lastOY, elX, elY: number;\r\n      if (first || !memo) {\r\n        updateRatio();\r\n        if (!canvasEl.current) return;\r\n        const { x, y } = canvasEl.current.getBoundingClientRect();\r\n        lastScale = 1;\r\n        [lastOX, lastOY] = [origin[0] - x, origin[1] - y];\r\n        [elX, elY] = [x, y];\r\n      } else {\r\n        [lastScale, [lastOX, lastOY], [elX, elY]] = memo;\r\n      }\r\n\r\n      const r = ratio.current;\r\n      const [oX, oY] = [origin[0] - elX, origin[1] - elY];\r\n      const originViewP = new Point(oX, oY).multiply(r);\r\n      const originProjP = view.viewToProject(originViewP);\r\n\r\n      if (Math.abs(1 - scale) < 0.05) scale = 1;\r\n      let dScale = first ? 1 : scale / lastScale;\r\n      let aniCount = last ? 10 : 1;\r\n      dScale = Math.pow(dScale, 1 / aniCount);\r\n      const scaleView = () => {\r\n        view.scale(dScale, originProjP);\r\n        if (--aniCount > 0) requestAnimationFrame(scaleView);\r\n      };\r\n      scaleView();\r\n\r\n      const [dX, dY] = [oX - lastOX, oY - lastOY];\r\n      const transP = new Point(dX, dY).multiply(r / scale);\r\n      view.translate(transP);\r\n\r\n      if (!last) return [scale, [oX, oY], [elX, elY]];\r\n      putCenterBack(view);\r\n    },\r\n    {\r\n      scaleBounds: { max: 5, min: 0.3 },\r\n      rubberband: 0.5,\r\n      target: canvasEl,\r\n    }\r\n  );\r\n\r\n  const touchHandler = usePreventTouch(finger);\r\n  return (\r\n    <div className=\"draw-wrapper\">\r\n      <canvas\r\n        ref={canvasEl}\r\n        className=\"draw-canvas\"\r\n        data-paper-hidpi={false}\r\n        {...touchHandler}\r\n      />\r\n      {SelectTool && paperMode === \"selected\" && (\r\n        <SelectTool\r\n          onDelete={deleteSelected}\r\n          onRotate={rotateSelected}\r\n          onDuplicate={duplicateSelected}\r\n          mutateStyle={mutateStyle}\r\n          rasterize={rasterize}\r\n          currDrawCtrl={currDrawCtrl}\r\n        />\r\n      )}\r\n      {TextTool && pointText && mode === \"text\" && (\r\n        <TextTool onCancel={cancelText} onSubmit={submitText} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Draw);\r\n\r\nfunction usePaperItem<T extends paper.Item>(init?: T) {\r\n  const stateArray = useState<T | undefined>(init);\r\n  const [item] = stateArray;\r\n  useEffect(() => () => void item?.remove(), [item]);\r\n  return stateArray;\r\n}\r\n\r\nconst paintStroke = (\r\n  stroke: Stroke,\r\n  scope: paper.PaperScope,\r\n  group?: paper.Item[],\r\n  erased = false\r\n) => {\r\n  let { pathData, uid } = stroke;\r\n  try {\r\n    scope.activate();\r\n    const item = scope.project.activeLayer.importJSON(pathData);\r\n    if (!item) return;\r\n    item.name = uid;\r\n    if (erased) item.opacity /= 2;\r\n    group?.push(item);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getCheckPoints = (() => {\r\n  const cache = new WeakMap<paper.Segment, paper.Point[]>();\r\n  return (segment: paper.Segment, width: number) => {\r\n    const cached = cache.get(segment);\r\n    if (cached) return cached;\r\n\r\n    const { point } = segment;\r\n    const prevPoint = segment.previous?.point;\r\n    if (!prevPoint) return [];\r\n    const delta = point.subtract(prevPoint);\r\n    const times = (delta.length / width) * 2;\r\n    const checkPoints: paper.Point[] = [];\r\n    for (let i = 0; i < times; i += 1) {\r\n      checkPoints.push(point.subtract(delta.multiply(i / times)));\r\n    }\r\n    cache.set(segment, checkPoints);\r\n    return checkPoints;\r\n  };\r\n})();\r\n\r\nconst checkErase = (checkedPath: paper.Path, eraserPath: paper.Path) => {\r\n  const curveBound = eraserPath.lastSegment.curve?.strokeBounds;\r\n  if (\r\n    !(checkedPath instanceof paper.Path) ||\r\n    !curveBound?.intersects(checkedPath.strokeBounds)\r\n  ) {\r\n    return false;\r\n  }\r\n\r\n  if (eraserPath.intersects(checkedPath)) return true;\r\n\r\n  const { strokeWidth, lastSegment } = eraserPath;\r\n  const checkPoints = getCheckPoints(lastSegment, strokeWidth);\r\n  return checkPoints.some((cPoint) => {\r\n    const d = checkedPath.getNearestPoint(cPoint)?.getDistance(cPoint);\r\n    return d && d < (checkedPath.strokeWidth + strokeWidth) / 2;\r\n  });\r\n};\r\n\r\nconst paintBackground = (\r\n  scope: paper.PaperScope,\r\n  width: number,\r\n  height: number\r\n) => {\r\n  scope.activate();\r\n  const bgRect = new Rectangle(new Point(0, 0), new Point(width, height));\r\n  bgRect.fillColor = new Color(\"#fff\");\r\n  scope.project.addLayer(new paper.Layer()).activate();\r\n  return bgRect;\r\n};\r\n\r\nconst startSelectRect = (point: paper.Point) => {\r\n  const rect = new Rectangle(point, new Size(0, 0));\r\n  rect.strokeColor = new Color(\"#1890ff\");\r\n  rect.strokeWidth = 5;\r\n  return rect;\r\n};\r\n\r\nconst startStroke = (color: string, lineWidth: number, highlight = false) => {\r\n  const path = new Path();\r\n  const strokeColor = new Color(color);\r\n  if (highlight) {\r\n    strokeColor.alpha /= 2;\r\n    path.blendMode = \"multiply\";\r\n  }\r\n  path.strokeColor = strokeColor;\r\n  path.strokeWidth = lineWidth;\r\n  path.strokeJoin = \"round\";\r\n  path.strokeCap = \"round\";\r\n  return path;\r\n};\r\n\r\nconst moveDash = (item: paper.Item) => {\r\n  if (item.strokeColor) item.strokeColor.alpha /= 2;\r\n  item.dashOffset = 0;\r\n  item.dashArray = [30, 20];\r\n  item.onFrame = () => (item.dashOffset += 3);\r\n};\r\n\r\nconst getCenterTranslate = (view: paper.View) => {\r\n  const { center, zoom } = view;\r\n  const { height, width } = view.viewSize;\r\n  const { x, y } = center;\r\n  if (zoom <= 1) return [width / 2 - x, height / 2 - y];\r\n\r\n  const dX = (width * (zoom - 1)) / zoom / 2;\r\n  const dY = (height * (zoom - 1)) / zoom / 2;\r\n  const [minX, maxX, minY, maxY] = [\r\n    width / 2 - dX,\r\n    width / 2 + dX,\r\n    height / 2 - dY,\r\n    height / 2 + dY,\r\n  ];\r\n\r\n  const deltaX = x < minX ? minX - x : x > maxX ? maxX - x : 0;\r\n  const deltaY = y < minY ? minY - y : y > maxY ? maxY - y : 0;\r\n  return [deltaX, deltaY];\r\n};\r\n\r\nconst putCenterBack = (view: paper.View) => {\r\n  const [deltaX, deltaY] = getCenterTranslate(view);\r\n  let aniCount = 10;\r\n  const dP = new Point(deltaX, deltaY).divide(-aniCount);\r\n  const move = () => {\r\n    view.translate(dP);\r\n    if (--aniCount > 0) requestAnimationFrame(move);\r\n  };\r\n  move();\r\n};\r\n\r\nconst parseGroupStyle = (group: paper.Group) => {\r\n  const tempStyle: Partial<DrawCtrl> = {};\r\n  if (group.strokeColor) tempStyle.color = group.strokeColor.toCSS(true);\r\n  if (group.strokeWidth) tempStyle.lineWidth = group.strokeWidth;\r\n  if (group.children.every((p) => p.strokeColor?.alpha === 0.5))\r\n    tempStyle.highlight = true;\r\n  return tempStyle;\r\n};\r\n\r\nconst checkRectSelection = (rect: paper.Shape.Rectangle, items: paper.Item[]) =>\r\n  items.filter((item) =>\r\n    item instanceof paper.Path\r\n      ? item.intersects(rect) || item.isInside(rect.bounds)\r\n      : item.bounds.intersects(rect.bounds)\r\n  );\r\n\r\nconst checkPathSelection = (selection: paper.Path, items: paper.Item[]) => {\r\n  const isInside = (p: paper.Path) =>\r\n    p.subtract(selection, { insert: false, trace: false }).isEmpty();\r\n\r\n  return items.filter((item) => {\r\n    if (!item.bounds.intersects(selection.bounds)) return false;\r\n    let checkedP: paper.Path;\r\n    if (item instanceof paper.Path) {\r\n      checkedP = item;\r\n    } else {\r\n      checkedP = new Path.Rectangle(item.bounds);\r\n      checkedP.remove();\r\n    }\r\n    return checkedP.intersects(selection) || isInside(checkedP);\r\n  });\r\n};\r\n\r\nconst updateGroupStyle = (\r\n  group: paper.Group,\r\n  updated: Partial<DrawCtrl>,\r\n  prevHighLighted = false\r\n) => {\r\n  const { lineWidth, color, highlight } = updated;\r\n  if (color) group.strokeColor = new Color(color);\r\n  if (lineWidth) group.strokeWidth = lineWidth;\r\n  if (highlight === true || prevHighLighted === true) {\r\n    group.children.forEach((p) => {\r\n      const { strokeColor } = p;\r\n      if (!strokeColor) return;\r\n      if (strokeColor.alpha === 1) strokeColor.alpha /= 2;\r\n      p.blendMode = \"multiply\";\r\n    });\r\n  }\r\n  if (highlight === false) {\r\n    group.children.forEach((p) => {\r\n      const { strokeColor } = p;\r\n      if (!strokeColor) return;\r\n      strokeColor.alpha = 1;\r\n      p.blendMode = \"normal\";\r\n    });\r\n  }\r\n};\r\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useCallback,\r\n  createContext,\r\n} from \"react\";\r\nimport {\r\n  DrawCtrl,\r\n  getDrawCtrl,\r\n  defaultDrawCtrl,\r\n} from \"../../lib/draw/drawCtrl\";\r\nimport {\r\n  createPage,\r\n  defaultNotePage,\r\n  NoteInfo,\r\n  NotePage,\r\n} from \"../../lib/note/note\";\r\nimport { NewPageInfo, ReorderInfo, SyncInfo } from \"../../lib/network/io\";\r\nimport { useInViewport, useMemoizedFn, useSafeState } from \"ahooks\";\r\nimport { SetOperation, StateSet } from \"../../lib/draw/StateSet\";\r\nimport { loadNote, editNoteData } from \"../../lib/note/archive\";\r\nimport { AddPageButton, showPageDelMsg } from \"./ReaderTools\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { DrawState } from \"../../lib/draw/DrawState\";\r\nimport { updatePages } from \"../../lib/network/http\";\r\nimport { TeamState } from \"../../lib/draw/TeamState\";\r\nimport { SelectTool, TextTool } from \"../draw/Tools\";\r\nimport { insertAfter } from \"../../lib/array\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { debounce, once } from \"lodash-es\";\r\nimport { Map, Set } from \"immutable\";\r\nimport DrawTools from \"./DrawTools\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport Draw from \"../draw/Draw\";\r\nimport { message } from \"antd\";\r\nimport \"./reader.sass\";\r\n\r\nexport const ReaderStateCtx = createContext({\r\n  noteID: \"\",\r\n  noteInfo: undefined as NoteInfo | undefined,\r\n  stateSet: undefined as StateSet | undefined,\r\n  teamState: undefined as TeamState | undefined,\r\n  pageRec: undefined as Map<string, NotePage> | undefined,\r\n  pageOrder: undefined as string[] | undefined,\r\n  saved: true,\r\n  inviewPages: Set<string>(),\r\n  drawCtrl: defaultDrawCtrl,\r\n});\r\n\r\nexport const ReaderMethodCtx = createContext({\r\n  scrollPage: (pageID: string) => {},\r\n  switchPageMarked: (pageID: string) => {},\r\n  updateStateSet: (cb: (prevSS: StateSet) => StateSet) => {},\r\n  addPage: (prevPageID: string, copy?: boolean) => {},\r\n  addFinalPage: () => {},\r\n  deletePage: (pageID: string) => {},\r\n  saveReorder: async (order: string[], push: boolean) => {},\r\n  setInviewPages: (() => {}) as Setter<Set<string>>,\r\n  setDrawCtrl: (() => {}) as Setter<DrawCtrl>,\r\n});\r\n\r\nexport default function Reader() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const nav = useNavigate();\r\n\r\n  const [pageRec, setPageRec] = useState<Map<string, NotePage>>();\r\n  const [noteInfo, setNoteInfo] = useState<NoteInfo>();\r\n  const [stateSet, setStateSet] = useState<StateSet>();\r\n  const [drawCtrl, setDrawCtrl] = useState(defaultDrawCtrl);\r\n  const [inviewPages, setInviewPages] = useState(Set<string>());\r\n  const [pageOrder, setPageOrder] = useState<string[]>();\r\n  const [saved, setSaved] = useSafeState(true);\r\n\r\n  const refRec = useRef<Record<string, HTMLElement>>({});\r\n\r\n  const { io, teamOn, teamState, addTeamStatePage } = useContext(TeamCtx);\r\n\r\n  useEffect(() => {\r\n    const loadNotePages = async () => {\r\n      const storedNote = await loadNote(noteID);\r\n      if (!storedNote) {\r\n        message.error(\"Note not found\");\r\n        return nav(\"/\");\r\n      }\r\n      const { pageRec, pdf, pageOrder, ...noteInfo } = storedNote;\r\n      setPageRec(Map(pageRec));\r\n      setPageOrder(pageOrder);\r\n      setNoteInfo(noteInfo);\r\n      setStateSet(StateSet.createFromPages(pageRec));\r\n      setDrawCtrl(await getDrawCtrl());\r\n      if (teamOn) updatePages(noteID);\r\n    };\r\n    loadNotePages();\r\n  }, [nav, noteID, teamOn]);\r\n\r\n  useEffect(() => {\r\n    if (!noteInfo) return;\r\n    document.title = noteInfo.name + \" - Multibility\";\r\n  }, [noteInfo]);\r\n\r\n  const saver = useMemoizedFn(async () => {\r\n    const pr = pageRec?.toObject();\r\n    const canvas = document.querySelector(\"canvas\");\r\n    const thumbnail = canvas?.toDataURL();\r\n    await editNoteData(noteID, { pageRec: pr, thumbnail });\r\n    setSaved(true);\r\n  });\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const debouncedSave = useCallback(debounce(saver, 2000), [saver]);\r\n  const instantSave = debouncedSave.flush;\r\n\r\n  const savePageRec = (pageID: string, cb: (prev: NotePage) => NotePage) => {\r\n    setPageRec((prev) => prev?.update(pageID, defaultNotePage, cb));\r\n    setSaved(false);\r\n    debouncedSave();\r\n  };\r\n\r\n  const saveReorder = async (pageOrder: string[], push = false) => {\r\n    setPageOrder(pageOrder);\r\n    await editNoteData(noteID, { pageOrder });\r\n    await instantSave();\r\n    push && pushReorder(pageOrder);\r\n  };\r\n\r\n  const pushReorder = (pageOrder: string[]) => {\r\n    io?.emit(\"reorder\", { pageOrder });\r\n  };\r\n\r\n  const handleReorder = useMemoizedFn(\r\n    ({ deleted, pageOrder, prevOrder }: ReorderInfo) => {\r\n      saveReorder(pageOrder);\r\n      if (!deleted) return;\r\n      showPageDelMsg(() => saveReorder(prevOrder, true));\r\n    }\r\n  );\r\n\r\n  const handleNewPage = useMemoizedFn(\r\n    ({ pageOrder, pageID, newPage }: NewPageInfo) => {\r\n      saveReorder(pageOrder);\r\n      savePageRec(pageID, () => newPage);\r\n      setStateSet((prev) => prev?.addState(pageID, newPage));\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    io?.on(\"reorder\", handleReorder);\r\n    io?.on(\"newPage\", handleNewPage);\r\n    return () => void io?.removeAllListeners();\r\n  }, [io, handleReorder, handleNewPage]);\r\n\r\n  const pushOperation = (operation: SetOperation) => {\r\n    const handleSync = ({ pageID, stroke }: SyncInfo) =>\r\n      setStateSet((prev) => prev?.syncStrokeTime(pageID, stroke));\r\n\r\n    io?.emit(\"push\", { operation }, handleSync);\r\n  };\r\n\r\n  const pushNewPage = (\r\n    pageOrder: string[],\r\n    pageID: string,\r\n    newPage: NotePage\r\n  ) => {\r\n    const { image, marked, ...newTeamPage } = newPage;\r\n    io?.emit(\"newPage\", { pageOrder, pageID, newPage: newTeamPage });\r\n    addTeamStatePage(pageID, newPage);\r\n  };\r\n\r\n  const updatePageRec = (pageID: string, ds: DrawState) => {\r\n    const state = DrawState.flaten(ds);\r\n    savePageRec(pageID, (prev) => ({ ...prev, state }));\r\n  };\r\n\r\n  const updateStateSet = (cb: (prevSS: StateSet) => StateSet) => {\r\n    if (!stateSet) return;\r\n    const newSS = cb(stateSet);\r\n    setStateSet(newSS);\r\n    const lastDS = newSS.getLastDS();\r\n    const lastOp = newSS.lastOp;\r\n    if (!lastDS || !lastOp) return;\r\n    updatePageRec(...lastDS);\r\n    pushOperation(lastOp);\r\n  };\r\n\r\n  const switchPageMarked = (pageID: string) => {\r\n    savePageRec(pageID, (prev) => ({ ...prev, marked: !prev.marked }));\r\n  };\r\n\r\n  const scrollPage = (pageID: string) => {\r\n    refRec.current[pageID]?.scrollIntoView();\r\n  };\r\n\r\n  const addPage = (prevPageID: string, copy = false) => {\r\n    if (!pageOrder) return;\r\n    const prevPage = copy ? pageRec?.get(prevPageID) : undefined;\r\n    const [pageID, newPage] = createPage(prevPage);\r\n    const newOrder = insertAfter(pageOrder, prevPageID, pageID);\r\n    pushNewPage(newOrder, pageID, newPage);\r\n    saveReorder(newOrder);\r\n    savePageRec(pageID, () => newPage);\r\n    setStateSet((prev) => prev?.addState(pageID, newPage));\r\n  };\r\n\r\n  const addFinalPage = () => {\r\n    const lastPageID = pageOrder?.at(-1);\r\n    lastPageID && addPage(lastPageID);\r\n  };\r\n\r\n  const deletePage = (pageID: string) => {\r\n    const newOrder = pageOrder?.filter((id) => id !== pageID);\r\n    newOrder?.length && saveReorder(newOrder, true);\r\n  };\r\n\r\n  const renderResult = (\r\n    <div className=\"reader container\">\r\n      <DrawTools\r\n        handleUndo={() => updateStateSet((prev) => prev.undo())}\r\n        handleRedo={() => updateStateSet((prev) => prev.redo())}\r\n        instantSave={instantSave}\r\n      />\r\n      <main>\r\n        {pageOrder?.map((uid) => (\r\n          <section\r\n            key={uid}\r\n            className=\"note-page\"\r\n            ref={(e) => e && (refRec.current[uid] = e)}\r\n          >\r\n            <PageContainer uid={uid} />\r\n          </section>\r\n        ))}\r\n        <AddPageButton />\r\n      </main>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ReaderStateCtx.Provider\r\n      value={{\r\n        saved,\r\n        noteID,\r\n        pageRec,\r\n        drawCtrl,\r\n        noteInfo,\r\n        stateSet,\r\n        teamState,\r\n        pageOrder,\r\n        inviewPages,\r\n      }}\r\n    >\r\n      <ReaderMethodCtx.Provider\r\n        value={{\r\n          addPage,\r\n          scrollPage,\r\n          deletePage,\r\n          setDrawCtrl,\r\n          saveReorder,\r\n          addFinalPage,\r\n          updateStateSet,\r\n          setInviewPages,\r\n          switchPageMarked,\r\n        }}\r\n      >\r\n        {renderResult}\r\n      </ReaderMethodCtx.Provider>\r\n    </ReaderStateCtx.Provider>\r\n  );\r\n}\r\n\r\nconst PageContainer: FC<{ uid: string }> = ({ uid }) => {\r\n  const { pageRec, stateSet, teamState } = useContext(ReaderStateCtx);\r\n  const { updateStateSet } = useContext(ReaderMethodCtx);\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n  const updateState = (ds: DrawState) => {\r\n    updateStateSet((prev) => prev.setState(uid, ds));\r\n  };\r\n\r\n  if (!page || !drawState) return null;\r\n  return (\r\n    <PageWrapper\r\n      drawState={drawState}\r\n      teamStateMap={teamStateMap}\r\n      updateState={updateState}\r\n      pdfIndex={page.pdfIndex}\r\n      uid={uid}\r\n    />\r\n  );\r\n};\r\n\r\nexport const PageWrapper = ({\r\n  thumbnail,\r\n  drawState,\r\n  teamStateMap,\r\n  updateState,\r\n  pdfIndex,\r\n  preview = false,\r\n  uid,\r\n}: {\r\n  uid: string;\r\n  drawState: DrawState;\r\n  teamStateMap?: Map<string, DrawState>;\r\n  thumbnail?: string;\r\n  pdfIndex?: number;\r\n  updateState?: (ds: DrawState) => void;\r\n  preview?: boolean;\r\n}) => {\r\n  const { setInviewPages } = useContext(ReaderMethodCtx);\r\n  const { noteID } = useContext(ReaderStateCtx);\r\n  const [fullImg, setFullImg] = useState<string>();\r\n  const wrapperEl = useRef<HTMLDivElement>(null);\r\n  const [visible] = useInViewport(wrapperEl);\r\n\r\n  const { height, width } = drawState;\r\n  const ratio = height / width;\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const loadImage = useCallback(\r\n    once(async () => {\r\n      if (!pdfIndex) return;\r\n      const { getOnePageImage } = await import(\"../../lib/note/pdfImage\");\r\n      setFullImg(await getOnePageImage(noteID, pdfIndex));\r\n    }),\r\n    [pdfIndex, noteID]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (preview) return;\r\n    if (visible) {\r\n      loadImage();\r\n      setInviewPages((prev) => prev.add(uid));\r\n    } else {\r\n      setInviewPages((prev) => prev.delete(uid));\r\n    }\r\n  }, [visible, preview, uid, loadImage, setInviewPages]);\r\n\r\n  const { ignores } = useContext(TeamCtx);\r\n  const otherStates = useMemo(\r\n    () => teamStateMap?.deleteAll(ignores).toList().toArray(),\r\n    [teamStateMap, ignores]\r\n  );\r\n\r\n  const imageLoaded = fullImg || !pdfIndex;\r\n  const drawShow = visible && imageLoaded;\r\n  const maskShow = Boolean(preview || !drawShow);\r\n\r\n  return (\r\n    <div ref={wrapperEl} style={{ paddingTop: `${ratio * 100}%` }}>\r\n      {drawShow && (\r\n        <DrawWrapper\r\n          drawState={drawState}\r\n          otherStates={otherStates}\r\n          updateState={updateState}\r\n          imgSrc={fullImg || thumbnail}\r\n          preview={preview}\r\n        />\r\n      )}\r\n      {maskShow && <div className=\"mask\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DrawWrapper = ({\r\n  drawState,\r\n  updateState,\r\n  otherStates,\r\n  preview = false,\r\n  imgSrc,\r\n}: {\r\n  drawState: DrawState;\r\n  otherStates?: DrawState[];\r\n  updateState?: (ds: DrawState) => void;\r\n  preview?: boolean;\r\n  imgSrc?: string;\r\n}) => {\r\n  const { drawCtrl } = useContext(ReaderStateCtx);\r\n\r\n  const handleChange = useMemoizedFn(\r\n    (arg: ((s: DrawState) => DrawState) | DrawState) => {\r\n      if (!updateState) return;\r\n      const newDS = arg instanceof DrawState ? arg : arg(drawState);\r\n      updateState(newDS);\r\n    }\r\n  );\r\n\r\n  return preview ? (\r\n    <Draw\r\n      drawState={drawState}\r\n      otherStates={otherStates}\r\n      imgSrc={imgSrc}\r\n      readonly\r\n      preview\r\n    />\r\n  ) : (\r\n    <Draw\r\n      drawState={drawState}\r\n      otherStates={otherStates}\r\n      onChange={handleChange}\r\n      imgSrc={imgSrc}\r\n      drawCtrl={drawCtrl}\r\n      SelectTool={SelectTool}\r\n      TextTool={TextTool}\r\n    />\r\n  );\r\n};\r\nDrawWrapper.displayName = \"DrawWrapper\";\r\n","import { io } from \"socket.io-client\";\r\nimport { Stroke } from \"../draw/DrawState\";\r\nimport { NotePage } from \"../note/note\";\r\nimport { getUserID, getUserName } from \"../user\";\r\nimport { BASE_URL } from \"./http\";\r\n\r\nexport const IoFactory = (noteID: string) => () =>\r\n  io(BASE_URL, {\r\n    query: {\r\n      userID: getUserID(),\r\n      userName: getUserName(),\r\n      noteID,\r\n    },\r\n  });\r\n\r\nexport interface ReorderInfo {\r\n  pageOrder: string[];\r\n  prevOrder: string[];\r\n  deleted: boolean;\r\n}\r\n\r\nexport interface NewPageInfo {\r\n  pageOrder: string[];\r\n  pageID: string;\r\n  newPage: NotePage;\r\n}\r\n\r\nexport interface SyncInfo {\r\n  stroke: Stroke;\r\n  pageID: string;\r\n}\r\n","import { NotePage, TeamPage, TeamPageInfo } from \"../note/note\";\nimport { DrawState, WIDTH } from \"./DrawState\";\nimport { SetOperation } from \"./StateSet\";\nimport { Map, Record } from \"immutable\";\n\ninterface TeamStateRecordType {\n  pageStates: Map<string, Map<string, DrawState>>;\n  pageInfos: Map<string, TeamPageInfo>;\n}\n\nconst defaultRecord: Readonly<TeamStateRecordType> = {\n  pageStates: Map(),\n  pageInfos: Map(),\n};\n\ntype TeamStateRecord = Record<TeamStateRecordType>;\nconst defaultFactory = Record(defaultRecord);\n\nexport class TeamState {\n  constructor(private immutable: TeamStateRecord) {}\n\n  getImmutable() {\n    return this.immutable;\n  }\n\n  getPageStates() {\n    return this.getImmutable().get(\"pageStates\");\n  }\n\n  getPageInfos() {\n    return this.getImmutable().get(\"pageInfos\");\n  }\n\n  getOneState(pageID: string, userID: string) {\n    return this.getPageStates().get(pageID)?.get(userID);\n  }\n\n  getOnePageStateMap(pageID: string) {\n    return this.getPageStates().get(pageID);\n  }\n\n  getPageValidUsers(pageID: string) {\n    const map = this.getOnePageStateMap(pageID);\n    if (!map) return [];\n    return Array.from(map?.filter((ds) => !ds.isEmpty()).keys());\n  }\n\n  getPageRatio(pageID: string) {\n    return this.getPageInfos().get(pageID)?.ratio;\n  }\n\n  includesPage(pageID: string) {\n    return this.getPageStates().has(pageID);\n  }\n\n  setState(pageID: string, userID: string, drawState: DrawState) {\n    const pageMap = this.getPageStates().get(pageID);\n    if (!pageMap) return this;\n    return new TeamState(\n      this.getImmutable().update(\"pageStates\", (m) =>\n        m.set(pageID, pageMap.set(userID, drawState))\n      )\n    );\n  }\n\n  static createFromTeamPages(\n    teamPages: globalThis.Record<string, TeamPage>,\n    width = WIDTH\n  ) {\n    let record = defaultFactory();\n    Object.entries(teamPages).forEach(([pageID, teamPage]) => {\n      const { states, ratio } = teamPage;\n      const pageMap = Map(\n        Object.entries(states).map(([userID, flatState]) => [\n          userID,\n          DrawState.loadFromFlat(flatState, width, width * ratio),\n        ])\n      );\n      record = record\n        .update(\"pageStates\", (m) => m.set(pageID, pageMap))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }));\n    });\n    return new TeamState(record);\n  }\n\n  addPage(pageID: string, notePage: NotePage) {\n    const { ratio } = notePage;\n    return new TeamState(\n      this.getImmutable()\n        .update(\"pageStates\", (m) => m.set(pageID, Map()))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }))\n    );\n  }\n\n  pushOperation(setOp: SetOperation, userID: string, width = WIDTH) {\n    const { pageID, ...op } = setOp;\n    const ratio = this.getPageRatio(pageID);\n    if (!this.includesPage(pageID) || !ratio) return this;\n    const prevDs =\n      this.getOneState(pageID, userID) ||\n      DrawState.createEmpty(width, width * ratio);\n\n    const ds = DrawState.pushOperation(prevDs, op);\n    return this.setState(pageID, userID, ds);\n  }\n\n  resetUser(userID: string, pageRec: globalThis.Record<string, NotePage>) {\n    let newTS: TeamState = this;\n    for (let [pageID, { state, ratio }] of Object.entries(pageRec)) {\n      const prevDS = newTS.getOneState(pageID, userID);\n      if (!prevDS) continue;\n      const { width } = prevDS;\n      newTS = newTS.setState(\n        pageID,\n        userID,\n        DrawState.loadFromFlat(state, width, width * ratio)\n      );\n    }\n    return newTS;\n  }\n}\n","import React, { useState, useEffect, createContext, useCallback } from \"react\";\r\nimport { getTeamNoteState, loadTeamNoteInfo } from \"../../lib/network/http\";\r\nimport { LoginOutlined, LogoutOutlined } from \"@ant-design/icons\";\r\nimport { IoFactory, NewPageInfo } from \"../../lib/network/io\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { TeamState } from \"../../lib/draw/TeamState\";\r\nimport { getUserID, UserInfo } from \"../../lib/user\";\r\nimport { NotePage } from \"../../lib/note/note\";\r\nimport { Socket } from \"socket.io-client\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { message, Skeleton } from \"antd\";\r\nimport { Set } from \"immutable\";\r\nimport Reader from \"./Reader\";\r\n\r\nexport const TeamCtx = createContext({\r\n  io: undefined as Socket | undefined,\r\n  code: -2,\r\n  teamOn: false,\r\n  connected: false,\r\n  ignores: Set<string>(),\r\n  userRec: {} as Record<string, UserInfo>,\r\n  teamState: undefined as TeamState | undefined,\r\n  resetIO: () => {},\r\n  loadInfo: async () => false,\r\n  loadState: async () => false,\r\n  setIgnores: (() => {}) as Setter<Set<string>>,\r\n  addTeamStatePage: (pageID: string, newPage: NotePage) => {},\r\n});\r\n\r\nexport default function Team() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const [teamState, setTeamState] = useState<TeamState>();\r\n  const [code, setCode] = useState(-2);\r\n  const [userRec, setUserRec] = useState<Record<string, UserInfo>>({});\r\n  const [ignores, setIgnores] = useState(Set<string>());\r\n  const [io, setIO] = useState(IoFactory(noteID));\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [connected, setConnected] = useState(false);\r\n  const nav = useNavigate();\r\n\r\n  const loadState = useCallback(async () => {\r\n    const teamNote = await getTeamNoteState(noteID);\r\n    if (!teamNote) {\r\n      message.error(\"Failed loading the team note state\");\r\n      return false;\r\n    }\r\n    setTeamState(TeamState.createFromTeamPages(teamNote));\r\n    return true;\r\n  }, [noteID]);\r\n\r\n  const loadInfo = useCallback(async () => {\r\n    const info = await loadTeamNoteInfo(noteID);\r\n    if (!info) {\r\n      message.error(\"Failed loading the team note info\");\r\n      return false;\r\n    }\r\n    setCode(info.code);\r\n    return true;\r\n  }, [noteID]);\r\n\r\n  useEffect(() => {\r\n    const roomInit = async () => {\r\n      if ((await loadInfo()) && (await loadState())) setLoaded(true);\r\n      else return nav(\"/\");\r\n    };\r\n    roomInit();\r\n  }, [loadInfo, loadState, nav]);\r\n\r\n  useEffect(() => {\r\n    io.on(\"push\", ({ operation, userID }) => {\r\n      setTeamState((prev) => prev?.pushOperation(operation, userID));\r\n    });\r\n\r\n    io.on(\"join\", ({ joined, members }) => {\r\n      const { userID, userName } = joined;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return;\r\n      message.destroy(userID);\r\n      message.success({\r\n        content: `${userName} joined room`,\r\n        icon: <LoginOutlined />,\r\n        key: userID,\r\n      });\r\n    });\r\n\r\n    io.on(\"leave\", ({ leaved, members }) => {\r\n      const { userID, userName } = leaved;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return io.emit(\"join\");\r\n      message.destroy(userID);\r\n      message.warning({\r\n        content: `${userName} leaved room`,\r\n        icon: <LogoutOutlined />,\r\n        key: userID,\r\n      });\r\n    });\r\n\r\n    io.on(\"newPage\", (info: NewPageInfo) => {\r\n      const { pageID, newPage } = info;\r\n      setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n    });\r\n\r\n    io.on(\"reset\", ({ userID, pageRec }) => {\r\n      if (userID === getUserID()) return;\r\n      setTeamState((prev) => prev?.resetUser(userID, pageRec));\r\n    });\r\n\r\n    io.on(\"connect_error\", console.error);\r\n    io.on(\"connect\", () => setConnected(true));\r\n    io.on(\"disconnect\", () => setConnected(false));\r\n\r\n    return () => {\r\n      io.removeAllListeners();\r\n      io.close();\r\n    };\r\n  }, [io]);\r\n\r\n  const addTeamStatePage = (pageID: string, newPage: NotePage) => {\r\n    setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n  };\r\n\r\n  const resetIO = () => setIO(IoFactory(noteID));\r\n\r\n  return (\r\n    <Skeleton className=\"skeleton\" active loading={!loaded}>\r\n      <TeamCtx.Provider\r\n        value={{\r\n          io,\r\n          code,\r\n          teamOn: true,\r\n          ignores,\r\n          userRec,\r\n          connected,\r\n          teamState,\r\n          resetIO,\r\n          loadInfo,\r\n          loadState,\r\n          setIgnores,\r\n          addTeamStatePage,\r\n        }}\r\n      >\r\n        <Reader />\r\n      </TeamCtx.Provider>\r\n    </Skeleton>\r\n  );\r\n}\r\n","export function createVirtualCanvas(width: number, height: number) {\r\n  const canvas = document.createElement(\"canvas\");\r\n  const context = canvas.getContext(\"2d\");\r\n  if (!context) {\r\n    throw new Error(\"can't get virtual canvas context\");\r\n  }\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n  return { canvas, context };\r\n}\r\n\r\nexport function releaseCanvas(canvas: HTMLCanvasElement) {\r\n  canvas.width = 1;\r\n  canvas.height = 1;\r\n  const ctx = canvas.getContext('2d');\r\n  ctx?.clearRect(0, 0, 1, 1);\r\n}\r\n"],"names":["defaultDrawCtrl","mode","finger","lineWidth","eraserWidth","color","highlight","lasso","getDrawCtrl","localforage","drawCtrl","defaultRecord","states","Map","editStack","List","undoStack","defaultFactory","Record","StateSet","immutable","lastOp","this","getImmutable","get","pageID","getStates","drawState","prevDS","getOneState","currRecord","update","s","set","l","push","delete","stroke","DrawState","notePage","width","WIDTH","state","ratio","newDS","getEditStack","size","getUndoStack","isUndoable","lastUid","last","lastSetOp","pop","isRedoable","ds","pageRec","map","AddPageButton","addFinalPage","useContext","ReaderMethodCtx","className","type","icon","PlusOutlined","block","onClick","DigitDisplay","value","useState","randomNum","setRandomNum","digits","String","padStart","split","Number","resetRandom","Math","floor","random","useEffect","timer","setTimeout","clearTimeout","classNames","disabled","d","idx","Digit","digit","insertAfter","list","prevItem","newItem","prevIndex","indexOf","curr","slice","splice","createFromIconfontCN","scriptUrl","PageNavContent","activeKey","setActiveKey","ReaderStateCtx","pageOrder","inviewPages","scrollPage","saveReorder","refRec","useRef","listEl","currpageID","useMemo","find","has","current","scrollIntoView","itemHeight","clientHeight","listHeight","scrollBy","PreviewTabs","onDragEnd","source","destination","fromIndex","index","toIndex","newOrder","result","removed","exchange","requestAnimationFrame","droppableId","droppableProps","innerRef","placeholder","ref","e","uid","PagePreview","pageIndex","stateSet","teamState","switchPageMarked","ignores","TeamCtx","chosen","setChosen","page","teamStateMap","getOnePageStateMap","userIDs","getPageValidUsers","filter","userID","image","marked","isEmpty","every","switchMarked","stopPropagation","draggableId","isDragDisabled","draggableProps","dragHandleProps","drag","isDragging","PageWrapper","undefined","thumbnail","preview","onClickCapture","PreviewOption","TeamAvatars","maxCount","UserAvatar","prev","popShow","setPopShow","addPage","deletePage","menu","key","domEvent","items","label","CopyOutlined","DeleteOutlined","danger","content","trigger","placement","visible","onVisibleChange","destroyTooltipOnHide","MoreOutlined","TabPane","Tabs","onChange","tabBarGutter","centered","tab","PageNav","navOn","setNavOn","title","ALL","MARKED","WRITTEN","MenuUnfoldOutlined","MenuFoldOutlined","onClose","closable","contentWrapperStyle","boxShadow","bodyStyle","padding","overflow","headerStyle","textAlign","borderTop","destroyOnClose","DrawTools","handleUndo","handleRedo","instantSave","saved","setDrawCtrl","teamOn","nav","useNavigate","updateDrawCtrl","updated","newCtrl","saveDrawCtrl","HomeFilled","style","opacity","SaveOutlined","shape","UndoOutlined","RedoOutlined","message","PenButton","EraserButton","SelectButton","RoomInfo","JoinRoom","btnProps","HighlightOutlined","PenPanel","getPopupContainer","tempLineWidth","setTempLineWidth","min","max","defaultValue","onAfterChange","ghost","ColorSelect","setColor","c","colors","checked","name","tempEraserWidth","setTempEraserWidth","GatewayOutlined","UserCard","renaming","setRenaming","setIgnores","resetIO","userInfo","userRec","userName","online","self","getUserID","ignored","Search","autoFocus","onSearch","trim","saveUserName","enterButton","CheckOutlined","FormOutlined","EyeInvisibleOutlined","EyeOutlined","add","getHashedColor","backgroundColor","code","connected","loadInfo","loadState","noteInfo","link","window","location","href","share","selfName","copy","console","log","userList","values","Object","selfID","selfInfo","onlineNum","u","length","DisconnectOutlined","showIcon","banner","ShareAltOutlined","ReloadOutlined","status","count","TeamOutlined","noteID","createRoom","putNote","editNoteData","team","onConfirm","okText","cancelText","UsergroupAddOutlined","getOcrWorker","worker","createWorker","logger","load","loadLanguage","initialize","SelectTool","onDelete","onRotate","onDuplicate","mutateStyle","rasterize","currDrawCtrl","rotateEl","dragged","setDragged","transX","setTransX","gearStyle","transform","rotateCount","setRotateCount","btnClass","useDrag","first","offset","delta","target","filterTaps","rubberband","bounds","left","right","recoginzing","setRecoginzing","modalShow","setModalShow","text","setText","recognizeText","imageData","recognize","data","error","createPortal","BgColorsOutlined","RotateRightOutlined","LoadingOutlined","onCancel","onOk","TextArea","document","body","TextTool","onSubmit","fontSize","setFontSize","paddingTop","FontSizeOutlined","overlayStyle","FontColorsOutlined","usePreventTouch","allowFinger","isTouch","checkPoniter","isPrimary","pointerType","preventTouch","touch","touches","touchType","isApplePencil","isEventValid","onPointerDownCapture","onPointerMoveCapture","onTouchStartCapture","onTouchMoveCapture","Path","paper","Size","Point","Group","Color","Raster","Rectangle","Draw","otherStates","readonly","imgSrc","height","canvasEl","scope","group","setGroup","Set","erased","setErased","setCurrDrawCtrl","usePaperItem","path","setPath","rect","setRect","setup","r","view","viewSize","multiply","scale","paintBackground","setupPaper","cvs","releaseCanvas","raster","img","Image","src","onload","activate","project","layers","addChild","position","center","remove","mergedStrokes","getStrokeList","tempGroup","othersGroup","forEach","paintStroke","hasStroke","item","selected","setSelected","paperMode","selectedIDs","setSelectedIDs","selectedItems","IDSet","resetSelect","useCallback","setNewRect","point","transformPoint","rectangle","startSelectRect","updateRatio","clientWidth","projP","zoom","absoluteP","projectToView","offsetP","divide","subtract","handleDown","draw","startStroke","erase","select","contains","t","setPointText","handleDrag","smooth","newErased","p","checkErase","concat","x","y","translate","handleUp","segments","simplify","pathData","exportJSON","toArray","closePath","moveDash","checkPathSelection","abs","checkRectSelection","tempStyle","parseGroupStyle","updateMutation","onMouseDown","onMouseDrag","onMouseUp","mutations","pointText","handler","preventDefault","addEventListener","removeEventListener","usePinch","lastScale","lastOX","lastOY","elX","elY","memo","origin","getBoundingClientRect","oX","oY","originViewP","originProjP","viewToProject","dScale","aniCount","pow","scaleView","transP","putCenterBack","scaleBounds","touchHandler","deleted","angle","dAngle","rotate","newSG","clone","children","getUid","m","updateGroupStyle","insert","toDataURL","fillColor","React","init","stateArray","activeLayer","importJSON","getCheckPoints","cache","WeakMap","segment","cached","prevPoint","previous","times","checkPoints","i","checkedPath","eraserPath","curveBound","lastSegment","curve","strokeBounds","intersects","strokeWidth","some","cPoint","getNearestPoint","getDistance","bgRect","addLayer","strokeColor","alpha","blendMode","strokeJoin","strokeCap","dashOffset","dashArray","onFrame","dX","dY","minX","maxX","minY","maxY","getCenterTranslate","deltaX","deltaY","dP","move","toCSS","isInside","selection","checkedP","trace","prevHighLighted","createContext","updateStateSet","cb","prevPageID","order","setInviewPages","Reader","useParams","setPageRec","setNoteInfo","setStateSet","setPageOrder","useSafeState","setSaved","io","addTeamStatePage","loadNotePages","loadNote","storedNote","pdf","createFromPages","updatePages","saver","useMemoizedFn","pr","toObject","canvas","querySelector","debouncedSave","debounce","flush","savePageRec","defaultNotePage","pushReorder","emit","handleReorder","onUndo","prevOrder","duration","handleNewPage","newPage","addState","on","removeAllListeners","pushNewPage","newTeamPage","updatePageRec","newSS","operation","lastDS","getLastDS","syncStrokeTime","prevPage","createPage","renderResult","undo","redo","PageContainer","Provider","id","lastPageID","at","updateState","setState","pdfIndex","fullImg","setFullImg","wrapperEl","useInViewport","loadImage","once","getOnePageImage","deleteAll","toList","drawShow","maskShow","Boolean","DrawWrapper","handleChange","arg","displayName","IoFactory","BASE_URL","query","getUserName","pageStates","pageInfos","TeamState","getPageStates","Array","from","keys","getPageInfos","pageMap","setOp","op","getPageRatio","includesPage","prevDs","newTS","entries","teamPages","record","teamPage","flatState","Team","setTeamState","setCode","setUserRec","setIO","loaded","setLoaded","setConnected","getTeamNoteState","teamNote","createFromTeamPages","loadTeamNoteInfo","info","roomInit","pushOperation","joined","members","LoginOutlined","leaved","LogoutOutlined","resetUser","close","active","loading","createVirtualCanvas","createElement","context","getContext","Error","ctx","clearRect"],"sourceRoot":""}