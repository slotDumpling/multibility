{"version":3,"file":"static/js/899.522ea54d.chunk.js","mappings":"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","sources":["lib/draw/drawCtrl.ts","lib/draw/StateSet.ts","component/reader/ReaderUtils.tsx","component/ui/IconFont.tsx","component/reader/header/Middle.tsx","component/reader/DrawTools.tsx","lib/array.ts","component/reader/PageNav.tsx","component/reader/header/Right.tsx","component/reader/header/ReaderHeader.tsx","lib/touch/touch.ts","component/draw/Draw.tsx","component/reader/Reader.tsx","lib/network/io.ts","lib/draw/TeamState.ts","component/reader/Team.tsx","lib/draw/canvas.ts"],"sourcesContent":["import localforage from \"localforage\";\r\nexport interface DrawCtrl {\r\n  mode: \"draw\" | \"erase\" | \"select\" | \"text\";\r\n  finger: boolean;\r\n  lineWidth: number;\r\n  eraserWidth: number;\r\n  color: string;\r\n  highlight: boolean;\r\n  lasso: boolean;\r\n  widthList: number[];\r\n}\r\n\r\nexport const defaultWidthList = [10, 20, 30, 50];\r\nexport const defaultDrawCtrl: Readonly<DrawCtrl> = {\r\n  mode: \"draw\",\r\n  finger: true,\r\n  lineWidth: 10,\r\n  eraserWidth: 10,\r\n  color: \"#000000\",\r\n  highlight: false,\r\n  lasso: true,\r\n  widthList: defaultWidthList,\r\n};\r\n\r\nexport async function getDrawCtrl() {\r\n  let drawCtrl = (await localforage.getItem(\"DRAW_CTRL\")) as DrawCtrl | null;\r\n  if (!drawCtrl) {\r\n    drawCtrl = defaultDrawCtrl;\r\n    await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n  }\r\n  return drawCtrl;\r\n}\r\n\r\nexport async function saveDrawCtrl(drawCtrl: DrawCtrl) {\r\n  await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n}\r\n","import { DrawState, Operation, Stroke, WIDTH } from \"./DrawState\";\r\nimport { List, Map, Record } from \"immutable\";\r\nimport { NotePage } from \"../note/note\";\r\n\r\ninterface StateSetRecordType {\r\n  states: Map<string, DrawState>;\r\n  editStack: List<string>;\r\n  undoStack: List<string>;\r\n}\r\n\r\nconst defaultRecord: Readonly<StateSetRecordType> = {\r\n  states: Map(),\r\n  editStack: List(),\r\n  undoStack: List(),\r\n};\r\n\r\ntype StateSetRecord = Record<StateSetRecordType>;\r\nconst defaultFactory = Record(defaultRecord);\r\n\r\nexport type SetOperation = Operation & { pageID: string };\r\n\r\nexport class StateSet {\r\n  constructor(\r\n    private immutable: StateSetRecord,\r\n    public lastOp?: SetOperation\r\n  ) {}\r\n\r\n  static createFromPages(\r\n    pageRec: globalThis.Record<string, NotePage>,\r\n    width = WIDTH\r\n  ) {\r\n    return new StateSet(\r\n      defaultFactory().set(\r\n        \"states\",\r\n        Map(pageRec).map(({ state, ratio }) =>\r\n          DrawState.loadFromFlat(state, width, width * ratio)\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  getImmutable() {\r\n    return this.immutable;\r\n  }\r\n\r\n  getStates() {\r\n    return this.getImmutable().get(\"states\");\r\n  }\r\n\r\n  getOneState(pageID: string) {\r\n    return this.getStates().get(pageID);\r\n  }\r\n\r\n  getEditStack() {\r\n    return this.getImmutable().get(\"editStack\");\r\n  }\r\n\r\n  getUndoStack() {\r\n    return this.getImmutable().get(\"undoStack\");\r\n  }\r\n\r\n  setState(pageID: string, drawState: DrawState) {\r\n    const prevDS = this.getOneState(pageID);\r\n    if (!prevDS || prevDS === drawState) return this;\r\n    let currRecord = this.getImmutable()\r\n      .update(\"states\", (s) => s.set(pageID, drawState))\r\n      .update(\"editStack\", (l) => l.push(pageID))\r\n      .delete(\"undoStack\");\r\n\r\n    const { lastOp } = drawState;\r\n    const lastSetOp = lastOp && { ...lastOp, pageID };\r\n\r\n    return new StateSet(currRecord, lastSetOp);\r\n  }\r\n\r\n  // sync with mutation.\r\n  syncStrokeTime(pageID: string, stroke: Stroke) {\r\n    const prevDS = this.getOneState(pageID);\r\n    prevDS && DrawState.syncStrokeTime(prevDS, stroke);\r\n    return this;\r\n  }\r\n\r\n  addState(pageID: string, notePage: NotePage, width = WIDTH) {\r\n    const { state, ratio } = notePage;\r\n    const newDS = DrawState.loadFromFlat(state, width, width * ratio);\r\n    const currRecord = this.getImmutable().update(\"states\", (s) =>\r\n      s.set(pageID, newDS)\r\n    );\r\n    return new StateSet(currRecord);\r\n  }\r\n\r\n  deleteState(pageID: string) {\r\n    return new StateSet(\r\n      this.getImmutable().update(\"states\", (s) => s.delete(pageID))\r\n    );\r\n  }\r\n\r\n  isUndoable() {\r\n    return this.getEditStack().size > 0;\r\n  }\r\n\r\n  isRedoable() {\r\n    return this.getUndoStack().size > 0;\r\n  }\r\n\r\n  undo() {\r\n    if (!this.isUndoable()) return this;\r\n    const lastUid = this.getEditStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.undo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"editStack\", (s) => s.pop())\r\n        .update(\"undoStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  redo() {\r\n    if (!this.isRedoable()) return this;\r\n    const lastUid = this.getUndoStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.redo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"undoStack\", (s) => s.pop())\r\n        .update(\"editStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  getLastDS(): [string, DrawState] | undefined {\r\n    const pageID = this.lastOp?.pageID;\r\n    const ds = pageID && this.getOneState(pageID);\r\n    if (ds) return [pageID, ds];\r\n  }\r\n}\r\n","import { Button, message } from \"antd\";\r\nimport React, { useContext } from \"react\";\r\nimport { ReaderMethodCtx } from \"./Reader\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nexport const AddPageButton = () => {\r\n  const { addFinalPage } = useContext(ReaderMethodCtx);\r\n  return (\r\n    <div className=\"add-btn-wrapper\">\r\n      <Button\r\n        type=\"dashed\"\r\n        icon={<PlusOutlined />}\r\n        block\r\n        onClick={addFinalPage}\r\n      >\r\n        New page\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const showPageDelMsg = (onUndo: () => void) => {\r\n  message.warning({\r\n    content: (\r\n      <>\r\n        One page was deleted.\r\n        <Button\r\n          size=\"small\"\r\n          type=\"link\"\r\n          onClick={() => {\r\n            message.destroy(\"DELETE\");\r\n            onUndo();\r\n          }}\r\n        >\r\n          Undo\r\n        </Button>\r\n      </>\r\n    ),\r\n    key: \"DELETE\",\r\n    duration: 10,\r\n  });\r\n};\r\n","import { createFromIconfontCN } from \"@ant-design/icons\";\r\n\r\nexport default createFromIconfontCN({\r\n  scriptUrl: \"//at.alicdn.com/t/font_3181679_yo844n7qgns.js\",\r\n});\r\n","import { FC, useMemo, useState, useContext, CSSProperties } from \"react\";\nimport { Button, Slider, message, Popover, ButtonProps, Segmented } from \"antd\";\nimport { ReaderMethodCtx, ReaderStateCtx } from \"../Reader\";\nimport {\n  defaultWidthList,\n  DrawCtrl,\n  saveDrawCtrl,\n} from \"../../../lib/draw/drawCtrl\";\nimport {\n  UndoOutlined,\n  RedoOutlined,\n  GatewayOutlined,\n  HighlightOutlined,\n} from \"@ant-design/icons\";\nimport { TagCircle } from \"../../menu/SideMenu\";\nimport { colors } from \"../../../lib/color\";\nimport { Setter } from \"../../../lib/hooks\";\nimport IconFont from \"../../ui/IconFont\";\nimport classNames from \"classnames\";\n\nexport const HeaderMiddle = () => {\n  const { stateSet, drawCtrl } = useContext(ReaderStateCtx);\n  const { setDrawCtrl, handleUndo, handleRedo } = useContext(ReaderMethodCtx);\n  const { mode, finger } = drawCtrl;\n\n  const updateDrawCtrl = (updated: Partial<DrawCtrl>) => {\n    setDrawCtrl((prev) => {\n      const newCtrl = { ...prev, ...updated };\n      saveDrawCtrl(newCtrl);\n      return newCtrl;\n    });\n  };\n\n  return (\n    <div className=\"middle\">\n      <Button\n        type=\"text\"\n        shape=\"circle\"\n        icon={<UndoOutlined />}\n        onClick={handleUndo}\n        disabled={!stateSet?.isUndoable()}\n      />\n      <Button\n        type=\"text\"\n        shape=\"circle\"\n        icon={<RedoOutlined />}\n        onClick={handleRedo}\n        disabled={!stateSet?.isRedoable()}\n      />\n      <Button\n        type={finger ? \"default\" : \"text\"}\n        shape=\"circle\"\n        onClick={() => {\n          updateDrawCtrl({ finger: !finger });\n          message.destroy(\"FINGER\");\n          message.open({\n            content: finger ? \"Pencil only\" : \"Draw with finger\",\n            key: \"FINGER\",\n          });\n        }}\n        icon={<IconFont type=\"icon-finger\" />}\n      />\n      <div className=\"br\" />\n      <PenButton updateDrawCtrl={updateDrawCtrl} />\n      <EraserButton updateDrawCtrl={updateDrawCtrl} />\n      <Button\n        type={mode === \"text\" ? \"default\" : \"text\"}\n        shape=\"circle\"\n        onClick={() => updateDrawCtrl({ mode: \"text\" })}\n        icon={<IconFont type=\"icon-text1\" />}\n      />\n      <SelectButton updateDrawCtrl={updateDrawCtrl} />\n    </div>\n  );\n};\n\nconst PenButton: FC<{\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\n}> = ({ updateDrawCtrl }) => {\n  const { drawCtrl } = useContext(ReaderStateCtx);\n  const { mode } = drawCtrl;\n\n  const btnProps: ButtonProps = {\n    className: \"pen\",\n    shape: \"circle\",\n    icon: <HighlightOutlined />,\n  };\n  return mode === \"draw\" ? (\n    <Popover\n      content={<PenPanel updateDrawCtrl={updateDrawCtrl} drawCtrl={drawCtrl} />}\n      trigger=\"click\"\n      placement=\"bottom\"\n      getPopupContainer={(e) => e}\n      destroyTooltipOnHide\n    >\n      <Button type=\"default\" {...btnProps} />\n    </Popover>\n  ) : (\n    <Button\n      type=\"text\"\n      onClick={() => updateDrawCtrl({ mode: \"draw\" })}\n      {...btnProps}\n    />\n  );\n};\n\nexport const PenPanel: FC<{\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\n  drawCtrl: Partial<DrawCtrl>;\n}> = ({ updateDrawCtrl, drawCtrl }) => {\n  const { highlight, color } = drawCtrl;\n  const [panelBlur, setPanelBlur] = useState(false);\n\n  return (\n    <div className={classNames(\"pen-panel\", { blur: panelBlur })}>\n      <div className=\"pen-status\">\n        <WidthSelect\n          updateDrawCtrl={updateDrawCtrl}\n          drawCtrl={drawCtrl}\n          setPanelBlur={setPanelBlur}\n        />\n        <Button\n          type=\"primary\"\n          ghost\n          shape=\"circle\"\n          className={classNames(\"hi-btn\", { checked: highlight })}\n          icon={<IconFont type=\"icon-Highlight\" />}\n          onClick={() => updateDrawCtrl({ highlight: !highlight })}\n        />\n      </div>\n      <ColorSelect\n        color={color || \"\"}\n        setColor={(c) => updateDrawCtrl({ color: c })}\n      />\n    </div>\n  );\n};\n\nconst WidthSelect: FC<{\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\n  drawCtrl: Partial<DrawCtrl>;\n  setPanelBlur: Setter<boolean>;\n}> = ({ updateDrawCtrl, drawCtrl, setPanelBlur }) => {\n  const { lineWidth } = drawCtrl;\n  const widthList = drawCtrl.widthList ?? defaultWidthList;\n  const color = drawCtrl.color ?? \"#000000\";\n\n  const chosen = useMemo(\n    () => Math.max(0, widthList.indexOf(lineWidth ?? 0)),\n    [lineWidth, widthList]\n  );\n\n  const options = widthList.map((width, index) => ({\n    value: index,\n    label: (\n      <Popover\n        onVisibleChange={setPanelBlur}\n        trigger={chosen === index ? [\"click\"] : []}\n        placement=\"bottom\"\n        content={\n          <Slider\n            min={5}\n            max={100}\n            className=\"ctrl-slider\"\n            defaultValue={width}\n            onAfterChange={(w) => {\n              if (widthList.includes(w)) {\n                return updateDrawCtrl({ lineWidth: w });\n              }\n              const newWL = widthList.slice();\n              newWL[index] = w;\n              updateDrawCtrl({ widthList: newWL, lineWidth: w });\n            }}\n          />\n        }\n      >\n        <div\n          className=\"circle-wrapper\"\n          style={{ \"--real-size\": `calc(0.05vw * ${width})` } as CSSProperties}\n        >\n          <TagCircle color={color} />\n        </div>\n      </Popover>\n    ),\n  }));\n  return (\n    <Segmented\n      className=\"width-seg\"\n      value={chosen}\n      onChange={(i) =>\n        updateDrawCtrl({ lineWidth: widthList[i as number] ?? 5 })\n      }\n      options={options}\n    />\n  );\n};\n\nexport const ColorSelect: FC<{\n  color: string;\n  setColor: (color: string) => void;\n}> = ({ setColor, color }) => {\n  return (\n    <div className=\"color-select\">\n      {colors.map((c) => (\n        <label key={c}>\n          <input\n            checked={color === c}\n            type=\"radio\"\n            name=\"color\"\n            onChange={() => setColor(c)}\n          />\n          <div\n            className=\"circle\"\n            style={{ \"--circle-color\": c } as CSSProperties}\n          ></div>\n        </label>\n      ))}\n    </div>\n  );\n};\n\nconst EraserButton: FC<{\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\n}> = ({ updateDrawCtrl }) => {\n  const {\n    drawCtrl: { eraserWidth, mode },\n  } = useContext(ReaderStateCtx);\n  const [tempEraserWidth, setTempEraserWidth] = useState(eraserWidth);\n\n  const content = (\n    <Slider\n      className=\"ctrl-slider\"\n      min={5}\n      max={100}\n      defaultValue={tempEraserWidth}\n      onChange={setTempEraserWidth}\n      onAfterChange={(eraserWidth) => updateDrawCtrl({ eraserWidth })}\n    />\n  );\n\n  const btnProps: ButtonProps = {\n    shape: \"circle\",\n    icon: <IconFont type=\"icon-eraser\" />,\n  };\n\n  return mode === \"erase\" ? (\n    <Popover\n      content={content}\n      trigger=\"click\"\n      placement=\"bottom\"\n      getPopupContainer={(e) => e}\n      destroyTooltipOnHide\n    >\n      <Button type=\"default\" {...btnProps} />\n    </Popover>\n  ) : (\n    <Button\n      type=\"text\"\n      onClick={() => updateDrawCtrl({ mode: \"erase\" })}\n      {...btnProps}\n    />\n  );\n};\n\nconst SelectButton: FC<{\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\n}> = ({ updateDrawCtrl }) => {\n  const {\n    drawCtrl: { lasso, mode },\n  } = useContext(ReaderStateCtx);\n\n  const icon = lasso ? <IconFont type=\"icon-lasso1\" /> : <GatewayOutlined />;\n\n  return mode === \"select\" ? (\n    <Button\n      type=\"default\"\n      shape=\"circle\"\n      icon={icon}\n      onClick={() => updateDrawCtrl({ lasso: !lasso })}\n    />\n  ) : (\n    <Button\n      type=\"text\"\n      shape=\"circle\"\n      icon={icon}\n      onClick={() => updateDrawCtrl({ mode: \"select\" })}\n    />\n  );\n};\n","import { FC, RefObject, useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  CopyOutlined,\r\n  DeleteOutlined,\r\n  BgColorsOutlined,\r\n  FontSizeOutlined,\r\n  CaretLeftOutlined,\r\n  FontColorsOutlined,\r\n  CaretRightOutlined,\r\n  RotateRightOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Button, ButtonProps, InputNumber, Modal, Popover } from \"antd\";\r\nimport { createWorker, Worker } from \"tesseract.js\";\r\nimport { DrawCtrl } from \"../../lib/draw/drawCtrl\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { useDrag } from \"@use-gesture/react\";\r\nimport { DrawRefType } from \"../draw/Draw\";\r\nimport { colors } from \"../../lib/color\";\r\nimport { createPortal } from \"react-dom\";\r\nimport IconFont from \"../ui/IconFont\";\r\nimport classNames from \"classnames\";\r\nimport copy from \"clipboard-copy\";\r\nimport \"./drawTools.sass\";\r\nimport { ColorSelect, PenPanel } from \"./header/Middle\";\r\n\r\nconst getOcrWorker = (() => {\r\n  let worker: Worker;\r\n  return async () => {\r\n    if (worker) return worker;\r\n    worker = createWorker({ logger: console.log });\r\n    await worker.load();\r\n    await worker.loadLanguage(\"eng+chi_sim\");\r\n    await worker.initialize(\"eng+chi_sim\");\r\n    return worker;\r\n  };\r\n})();\r\n\r\nexport const SelectTool: FC<{\r\n  drawRef: RefObject<DrawRefType>;\r\n  visible: boolean;\r\n}> = ({ drawRef, visible }) => {\r\n  const btnProps: ButtonProps = {\r\n    type: \"text\",\r\n    shape: \"round\",\r\n    size: \"small\",\r\n  };\r\n\r\n  const [currDrawCtrl, setCurrDrawCtrl] = useState<Partial<DrawCtrl>>({});\r\n  useEffect(() => setCurrDrawCtrl({}), [visible]);\r\n  const rotateEl = useRef<HTMLDivElement>(null);\r\n  const [dragged, setDragged] = useState(false);\r\n  const [transX, setTransX] = useState(0);\r\n  const gearStyle = { transform: `translateX(${transX}px)` };\r\n\r\n  useDrag(\r\n    ({ first, last, offset, delta }) => {\r\n      setTransX(offset[0]);\r\n      drawRef.current?.rotateSelected(delta[0] / 2, last);\r\n      first && setDragged(true);\r\n      last && setDragged(false);\r\n    },\r\n    {\r\n      target: rotateEl,\r\n      filterTaps: true,\r\n      rubberband: 0.05,\r\n      bounds: { left: -90, right: 90 },\r\n    }\r\n  );\r\n\r\n  const [recoginzing, setRecoginzing] = useState(false);\r\n  const recognizeText = async () => {\r\n    setRecoginzing(true);\r\n    if (!drawRef.current) return;\r\n    const imageData = drawRef.current.rasterize();\r\n    try {\r\n      const worker = await getOcrWorker();\r\n      const { text } = (await worker.recognize(imageData)).data;\r\n      Modal.confirm({\r\n        title: \"OCR Result\",\r\n        content: <TextArea defaultValue={text} />,\r\n        icon: <IconFont type=\"icon-OCR\" />,\r\n        okText: \"Copy\",\r\n        onOk: () => copy(text),\r\n      });\r\n    } catch (e) {\r\n      console.error(e);\r\n    } finally {\r\n      setRecoginzing(false);\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={classNames(\"select-tool\", { visible })}>\r\n      <Popover\r\n        trigger=\"click\"\r\n        placement=\"bottom\"\r\n        getPopupContainer={(e) => e}\r\n        destroyTooltipOnHide\r\n        content={\r\n          <PenPanel\r\n            updateDrawCtrl={(updated) => {\r\n              setCurrDrawCtrl((prev) => ({ ...prev, ...updated }));\r\n              drawRef.current?.mutateStyle(updated);\r\n            }}\r\n            drawCtrl={currDrawCtrl}\r\n          />\r\n        }\r\n      >\r\n        <Button icon={<BgColorsOutlined />} {...btnProps} />\r\n      </Popover>\r\n      <div className={classNames(\"rotate-wrapper\", { dragged })} ref={rotateEl}>\r\n        <Button\r\n          icon={<RotateRightOutlined />}\r\n          onClick={() => drawRef.current?.rotateSelected(90, true)}\r\n          {...btnProps}\r\n        />\r\n        <CaretLeftOutlined className=\"arrow left\" />\r\n        <CaretRightOutlined className=\"arrow right\" />\r\n        <div className=\"gear\" style={gearStyle} />\r\n      </div>\r\n      <Button\r\n        icon={<CopyOutlined />}\r\n        onClick={() => drawRef.current?.duplicateSelected()}\r\n        {...btnProps}\r\n      />\r\n      <Button\r\n        icon={<IconFont type=\"icon-OCR\" />}\r\n        loading={recoginzing}\r\n        onClick={recognizeText}\r\n        {...btnProps}\r\n      />\r\n      <Button\r\n        danger\r\n        icon={<DeleteOutlined />}\r\n        onClick={() => drawRef.current?.deleteSelected()}\r\n        {...btnProps}\r\n      />\r\n    </div>,\r\n    document.body\r\n  );\r\n};\r\n\r\nexport const TextTool: FC<{\r\n  drawRef: RefObject<DrawRefType>;\r\n  visible: boolean;\r\n}> = ({ visible, drawRef }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [fontSize, setFontSize] = useState(5);\r\n  const [color, setColor] = useState(colors[0]);\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      title=\"Insert text\"\r\n      onCancel={() => drawRef.current?.cancelText()}\r\n      onOk={() => {\r\n        const content = text.trim();\r\n        if (!content) return drawRef.current?.cancelText();\r\n        drawRef.current?.submitText(content, fontSize, color);\r\n      }}\r\n      bodyStyle={{ paddingTop: 0 }}\r\n      destroyOnClose\r\n    >\r\n      <div className=\"insert-option\">\r\n        <span className=\"font-size\">\r\n          <FontSizeOutlined />\r\n          <span>Font size: </span>\r\n          <InputNumber\r\n            min={1}\r\n            size=\"small\"\r\n            value={fontSize}\r\n            onChange={setFontSize}\r\n          />\r\n        </span>\r\n        <Popover\r\n          content={<ColorSelect color={color} setColor={setColor} />}\r\n          overlayStyle={{ width: 200 }}\r\n          placement=\"bottom\"\r\n        >\r\n          <Button\r\n            className=\"tag-btn\"\r\n            size=\"small\"\r\n            icon={<FontColorsOutlined style={{ color }} />}\r\n          >\r\n            Font color\r\n          </Button>\r\n        </Popover>\r\n      </div>\r\n      <TextArea\r\n        autoFocus\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n","export function exchange<T>(list: T[], fromIndex: number, toIndex: number) {\r\n  const result = list.slice();\r\n  const [removed] = result.splice(fromIndex, 1);\r\n  result.splice(toIndex, 0, removed);\r\n  return result;\r\n}\r\n\r\nexport function insertAfter<T>(list: T[], prevItem: T, newItem: T) {\r\n  const prevIndex = list.indexOf(prevItem);\r\n  const curr = list.slice();\r\n  if (prevIndex === -1) return curr;\r\n  curr.splice(prevIndex + 1, 0, newItem);\r\n  return curr;\r\n}\r\n","import { FC, useRef, useMemo, useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  MoreOutlined,\r\n  PlusOutlined,\r\n  CopyOutlined,\r\n  DeleteOutlined,\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  Draggable,\r\n  Droppable,\r\n  DropResult,\r\n  DragDropContext,\r\n} from \"react-beautiful-dnd\";\r\nimport { PageWrapper, ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport { Avatar, Button, Drawer, Menu, Popover, Tabs } from \"antd\";\r\nimport { AddPageButton } from \"./ReaderUtils\";\r\nimport { exchange } from \"../../lib/array\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport IconFont from \"../ui/IconFont\";\r\nimport classNames from \"classnames\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport \"./preview.sass\";\r\nimport { UserAvatar } from \"./header/Right\";\r\n\r\nconst PageNavContent = ({\r\n  activeKey,\r\n  setActiveKey,\r\n}: {\r\n  activeKey: string;\r\n  setActiveKey: Setter<string>;\r\n}) => {\r\n  const { pageOrder, inviewPages } = useContext(ReaderStateCtx);\r\n  const { scrollPage, saveReorder } = useContext(ReaderMethodCtx);\r\n  const refRec = useRef<Record<string, HTMLElement>>({});\r\n  const listEl = useRef<HTMLDivElement>();\r\n\r\n  const onDragEnd = ({ source, destination }: DropResult) => {\r\n    if (!destination || !pageOrder) return;\r\n    const { index: fromIndex } = source;\r\n    const { index: toIndex } = destination;\r\n    if (fromIndex === toIndex) return;\r\n    const pageID = pageOrder[fromIndex];\r\n    const newOrder = exchange(pageOrder, fromIndex, toIndex);\r\n    saveReorder(newOrder, true);\r\n    requestAnimationFrame(() => scrollPage(pageID));\r\n  };\r\n\r\n  const currpageID = useMemo(\r\n    () => pageOrder?.find((pageID) => inviewPages.has(pageID)) || \"\",\r\n    [pageOrder, inviewPages]\r\n  );\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => refRec.current[currpageID]?.scrollIntoView(), []);\r\n\r\n  return (\r\n    <div className=\"preview-container\">\r\n      <PreviewTabs activeKey={activeKey} setActiveKey={setActiveKey} />\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"preview-list\">\r\n          {({ droppableProps, innerRef, placeholder }) => (\r\n            <div\r\n              className=\"page-list\"\r\n              ref={(e) => {\r\n                innerRef(e);\r\n                if (e) listEl.current = e;\r\n              }}\r\n              {...droppableProps}\r\n            >\r\n              {pageOrder?.map((uid, index) => (\r\n                <PagePreview\r\n                  key={uid}\r\n                  uid={uid}\r\n                  mode={activeKey}\r\n                  pageIndex={index}\r\n                  currpageID={currpageID}\r\n                  refRec={refRec.current}\r\n                />\r\n              ))}\r\n              {placeholder}\r\n              {activeKey === \"ALL\" && <AddPageButton />}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PagePreview: FC<{\r\n  uid: string;\r\n  mode: string;\r\n  pageIndex: number;\r\n  currpageID: string;\r\n  refRec: Record<string, HTMLElement>;\r\n}> = ({ uid, pageIndex, mode, currpageID, refRec }) => {\r\n  const { stateSet, teamState, pageRec } = useContext(ReaderStateCtx);\r\n  const { scrollPage, switchPageMarked } = useContext(ReaderMethodCtx);\r\n  const { ignores } = useContext(TeamCtx);\r\n  const [chosen, setChosen] = useState(\"\");\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n  const userIDs = useMemo(\r\n    () =>\r\n      teamState\r\n        ?.getPageValidUsers(uid)\r\n        .filter((userID) => !ignores.has(userID)) || [],\r\n    [teamState, ignores, uid]\r\n  );\r\n  if (!page || !drawState) return null;\r\n  const { image, marked } = page;\r\n\r\n  if (\r\n    mode === \"WRITTEN\" &&\r\n    drawState.isEmpty() &&\r\n    (!teamStateMap || teamStateMap.every((ds) => ds.isEmpty()))\r\n  ) {\r\n    return null;\r\n  }\r\n  if (mode === \"MARKED\" && !marked) return null;\r\n  const curr = currpageID === uid;\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={uid}\r\n      index={pageIndex}\r\n      isDragDisabled={mode !== \"ALL\"}\r\n    >\r\n      {(\r\n        { innerRef, draggableProps, dragHandleProps },\r\n        { isDragging: drag }\r\n      ) => (\r\n        <div\r\n          ref={(e) => {\r\n            innerRef(e);\r\n            if (e) refRec[uid] = e;\r\n          }}\r\n          className={classNames(\"page\", { curr, drag })}\r\n          onClick={() => scrollPage(uid)}\r\n          {...draggableProps}\r\n          {...dragHandleProps}\r\n        >\r\n          <PageWrapper\r\n            uid={uid}\r\n            drawState={teamStateMap?.get(chosen) || drawState}\r\n            teamStateMap={chosen ? undefined : teamStateMap}\r\n            thumbnail={image}\r\n            preview\r\n          />\r\n          <div className=\"cover\" onClick={(e) => e.stopPropagation()}>\r\n            <span\r\n              className={classNames(\"bookmark\", { marked })}\r\n              onClick={() => switchPageMarked(uid)}\r\n            />\r\n            <span className=\"index\">{pageIndex + 1}</span>\r\n            <PreviewOption uid={uid} />\r\n            <TeamAvatars\r\n              userIDs={userIDs}\r\n              chosen={chosen}\r\n              setChosen={setChosen}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst TeamAvatars: FC<{\r\n  userIDs: string[];\r\n  chosen: string;\r\n  setChosen: Setter<string>;\r\n}> = ({ userIDs, chosen, setChosen }) => {\r\n  return (\r\n    <Avatar.Group\r\n      maxCount={2}\r\n      size=\"default\"\r\n      className={classNames(\"team-group\", { chosen })}\r\n    >\r\n      {userIDs.map((userID) => (\r\n        <UserAvatar\r\n          key={userID}\r\n          size=\"default\"\r\n          userID={userID}\r\n          className=\"preview-avatar\"\r\n          chosen={chosen === userID}\r\n          onClick={() => setChosen((prev) => (prev === userID ? \"\" : userID))}\r\n        />\r\n      ))}\r\n    </Avatar.Group>\r\n  );\r\n};\r\n\r\nconst PreviewOption = ({ uid }: { uid: string }) => {\r\n  const { addPage, deletePage } = useContext(ReaderMethodCtx);\r\n\r\n  const menu = (\r\n    <Menu\r\n      onClick={({ key }) => {\r\n        if (key === \"ADD\") {\r\n          addPage(uid);\r\n        } else if (key === \"COPY\") {\r\n          addPage(uid, true);\r\n        } else if (key === \"DELETE\") {\r\n          deletePage(uid);\r\n        }\r\n      }}\r\n      items={[\r\n        { key: \"ADD\", icon: <PlusOutlined />, label: \"Add page\" },\r\n        { key: \"COPY\", icon: <CopyOutlined />, label: \"Duplicate\" },\r\n        {\r\n          key: \"DELETE\",\r\n          icon: <DeleteOutlined />,\r\n          label: \"Delete\",\r\n          danger: true,\r\n        },\r\n      ]}\r\n    ></Menu>\r\n  );\r\n  return (\r\n    <Popover\r\n      content={menu}\r\n      trigger=\"click\"\r\n      placement=\"left\"\r\n      destroyTooltipOnHide\r\n    >\r\n      <span className=\"option\">\r\n        <MoreOutlined />\r\n      </span>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst PreviewTabs = ({\r\n  activeKey,\r\n  setActiveKey,\r\n}: {\r\n  activeKey: string;\r\n  setActiveKey: (key: string) => void;\r\n}) => {\r\n  const { TabPane } = Tabs;\r\n  return (\r\n    <Tabs\r\n      className=\"tabs\"\r\n      activeKey={activeKey}\r\n      onChange={setActiveKey}\r\n      tabBarGutter={10}\r\n      size=\"small\"\r\n      centered\r\n    >\r\n      <TabPane tab={<IconFont type=\"icon-uf_paper\" />} key=\"ALL\" />\r\n      <TabPane tab={<IconFont type=\"icon-bookmark2\" />} key=\"MARKED\" />\r\n      <TabPane tab={<IconFont type=\"icon-write\" />} key=\"WRITTEN\" />\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default function PageNav() {\r\n  const [navOn, setNavOn] = useState(false);\r\n  const [activeKey, setActiveKey] = useState<string>(\"ALL\");\r\n  const title = {\r\n    ALL: \"All Pages\",\r\n    MARKED: \"Bookmarks\",\r\n    WRITTEN: \"Notes\",\r\n  }[activeKey];\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        type=\"text\"\r\n        icon={navOn ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\r\n        onClick={() => setNavOn((prev) => !prev)}\r\n      />\r\n      <Drawer\r\n        visible={navOn}\r\n        onClose={() => setNavOn(false)}\r\n        width={200}\r\n        title={title}\r\n        closable={false}\r\n        className=\"preview-drawer\"\r\n        contentWrapperStyle={{ boxShadow: \"none\" }}\r\n        bodyStyle={{ padding: 0, overflow: \"hidden\" }}\r\n        headerStyle={{ textAlign: \"center\", borderTop: \"1px solid #eee\" }}\r\n        destroyOnClose\r\n      >\r\n        <PageNavContent activeKey={activeKey} setActiveKey={setActiveKey} />\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","import {\n  FC,\n  useMemo,\n  useState,\n  useEffect,\n  useContext,\n} from \"react\";\nimport {\n  Badge,\n  Alert,\n  Modal,\n  Avatar,\n  Button,\n  Divider,\n  message,\n  Popover,\n} from \"antd\";\nimport Search from \"antd/lib/input/Search\";\nimport { useNavigate } from \"react-router-dom\";\nimport { PasscodeInput } from \"antd-mobile\";\nimport { ReaderMethodCtx, ReaderStateCtx } from \"../Reader\";\nimport { TeamCtx } from \"../Team\";\nimport { getHashedColor } from \"../../../lib/color\";\nimport { getUserID, saveUserName } from \"../../../lib/user\";\nimport PageNav from \"../PageNav\";\nimport {\n  EyeOutlined,\n  FormOutlined,\n  TeamOutlined,\n  CopyOutlined,\n  CheckOutlined,\n  ReloadOutlined,\n  ShareAltOutlined,\n  DisconnectOutlined,\n  EyeInvisibleOutlined,\n  UsergroupAddOutlined,\n} from \"@ant-design/icons\";\nimport { putNote } from \"../../../lib/network/http\";\nimport { AvatarSize } from \"antd/lib/avatar/SizeContext\";\nimport { editNoteData } from \"../../../lib/note/archive\";\nimport classNames from \"classnames\";\nimport copy from \"clipboard-copy\";\nimport \"./header.sass\";\n\nexport const HeaderRight = () => {\n  const { teamOn } = useContext(TeamCtx);\n  return (\n    <div className=\"right\">\n      {teamOn && <RoomInfo />}\n      {teamOn || <JoinRoom />}\n      <div className=\"br\" />\n      <PageNav />\n    </div>\n  );\n};\n\nconst UserCard: FC<{ userID: string }> = ({ userID }) => {\n  const [renaming, setRenaming] = useState(false);\n  const { ignores, setIgnores, resetIO, userRec } = useContext(TeamCtx);\n  const userInfo = userRec[userID];\n  useEffect(() => setRenaming(false), [userInfo]);\n  if (!userInfo) return null;\n\n  const { userName, online } = userInfo;\n  const self = userID === getUserID();\n  const ignored = ignores.has(userID) && !self;\n\n  const switchIgnore = () => {\n    setIgnores((prev) => {\n      if (prev.has(userID)) return prev.delete(userID);\n      return prev.add(userID);\n    });\n  };\n\n  const submitRename = (value: string) => {\n    const name = value.trim();\n    if (!name || name === userName) return setRenaming(false);\n    saveUserName(name);\n    resetIO();\n  };\n\n  return (\n    <div className={classNames(\"user-item\", { online })}>\n      <UserAvatar userID={userID} size=\"small\" className=\"room-avatar\" />\n      {renaming || <span className=\"user-name\">{userName}</span>}\n      {renaming && (\n        <Search\n          autoFocus\n          className=\"rename-input\"\n          defaultValue={userName}\n          onSearch={submitRename}\n          enterButton={<Button icon={<CheckOutlined />} />}\n        />\n      )}\n      {self ? (\n        renaming || (\n          <Button\n            type=\"text\"\n            icon={<FormOutlined />}\n            onClick={() => setRenaming(true)}\n          />\n        )\n      ) : (\n        <Button\n          type=\"text\"\n          icon={ignored ? <EyeInvisibleOutlined /> : <EyeOutlined />}\n          onClick={switchIgnore}\n        />\n      )}\n    </div>\n  );\n};\n\nexport const UserAvatar: FC<{\n  userID: string;\n  size?: AvatarSize;\n  onClick?: () => void;\n  chosen?: boolean;\n  className?: string;\n}> = ({\n  userID,\n  size = \"default\",\n  onClick = () => {},\n  chosen = false,\n  className,\n}) => {\n  const { userRec } = useContext(TeamCtx);\n  const color = useMemo(() => getHashedColor(userID), [userID]);\n  const userInfo = userRec[userID];\n  if (!userInfo) return null;\n  const { userName } = userInfo;\n\n  return (\n    <Avatar\n      className={classNames(className, { chosen })}\n      size={size}\n      style={{ backgroundColor: color }}\n    >\n      <div className=\"avatar-wrapper\" onClick={onClick}>\n        {userName?.slice(0, 3)}\n      </div>\n    </Avatar>\n  );\n};\n\nconst RoomInfo: FC = () => {\n  const { code, userRec, connected, loadInfo, loadState, resetIO } =\n    useContext(TeamCtx);\n  const { noteInfo } = useContext(ReaderStateCtx);\n  const link = window.location.href;\n  const share = async () => {\n    const selfName = userRec[getUserID()]?.userName;\n    try {\n      if (!noteInfo) return;\n      await copy(`${noteInfo.name} - ${selfName} - Multibility\\n${link}`);\n      message.destroy(\"copy\");\n      message.success({\n        content: \"Link copied!\",\n        icon: <CopyOutlined />,\n        key: \"copy\",\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const userList = useMemo(() => {\n    const selfID = getUserID();\n    const { [selfID]: selfInfo, ...otherUsers } = userRec;\n    const list = selfInfo ? [selfInfo] : [];\n    const values = Object.values(otherUsers);\n    list.push(\n      ...values.filter(({ online }) => online),\n      ...values.filter(({ online }) => !online)\n    );\n    return list;\n  }, [userRec]);\n\n  const onlineNum = useMemo(\n    () => userList.filter(({ online }) => online).length,\n    [userList]\n  );\n\n  const content = (\n    <div className=\"team-popover\">\n      {connected || (\n        <Alert\n          className=\"disconn-alert\"\n          message=\"Network failed.\"\n          icon={<DisconnectOutlined />}\n          type=\"error\"\n          showIcon\n          banner\n        />\n      )}\n      <PasscodeInput\n        className=\"code-display\"\n        value={String(code)}\n        length={4}\n        plain\n      />\n      <Button\n        icon={<ShareAltOutlined />}\n        className=\"share-btn\"\n        onClick={share}\n        block\n      >\n        Share\n      </Button>\n      <Divider />\n      <div className=\"user-list\">\n        {userList.map((u) => (\n          <UserCard key={u.userID} userID={u.userID} />\n        ))}\n      </div>\n    </div>\n  );\n\n  const [reloading, setReloading] = useState(false);\n  const title = (\n    <div className=\"team-title\">\n      <span>Team info</span>\n      <Button\n        shape=\"circle\"\n        type=\"text\"\n        size=\"small\"\n        loading={reloading}\n        icon={<ReloadOutlined />}\n        onClick={async () => {\n          setReloading(true);\n          await loadInfo();\n          await loadState();\n          setReloading(false);\n          resetIO();\n        }}\n      />\n    </div>\n  );\n\n  return (\n    <Popover\n      content={content}\n      trigger=\"click\"\n      placement=\"bottomRight\"\n      title={title}\n      getPopupContainer={(e) => e}\n    >\n      <Button\n        type=\"text\"\n        icon={\n          <Badge\n            status={connected ? \"success\" : \"error\"}\n            count={connected ? onlineNum : \"!\"}\n            size=\"small\"\n          >\n            <TeamOutlined />\n          </Badge>\n        }\n      />\n    </Popover>\n  );\n};\n\nconst JoinRoom = () => {\n  const { noteID } = useContext(ReaderStateCtx);\n  const { instantSave } = useContext(ReaderMethodCtx);\n  const nav = useNavigate();\n\n  const createRoom = async () => {\n    await instantSave();\n    const res = await putNote(noteID);\n    if (!res) return message.error(\"Can't create room.\");\n    await editNoteData(noteID, { team: true });\n    nav(\"/team/\" + noteID);\n  };\n\n  return (\n    <Button\n      type=\"text\"\n      icon={<UsergroupAddOutlined />}\n      onClick={() => {\n        Modal.confirm({\n          title: \"Enable team editing\",\n          content: \"This will make your note public.\",\n          icon: <TeamOutlined style={{ color: \"#555\" }} />,\n          onOk: createRoom,\n        });\n      }}\n    />\n  );\n};","import { useContext } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ReaderMethodCtx, ReaderStateCtx } from \"../Reader\";\r\nimport { TeamCtx } from \"../Team\";\r\nimport { HomeFilled, SaveOutlined } from \"@ant-design/icons\";\r\nimport { updatePages } from \"../../../lib/network/http\";\r\nimport { HeaderMiddle } from \"./Middle\";\r\nimport { HeaderRight } from \"./Right\";\r\nimport \"./header.sass\";\r\n\r\nexport default function ReaderHeader() {\r\n  return (\r\n    <header>\r\n      <HeaderLeft />\r\n      <HeaderMiddle />\r\n      <HeaderRight />\r\n    </header>\r\n  );\r\n}\r\n\r\nconst HeaderLeft = () => {\r\n  const { saved, noteID } = useContext(ReaderStateCtx);\r\n  const { instantSave } = useContext(ReaderMethodCtx);\r\n  const { teamOn } = useContext(TeamCtx);\r\n  const nav = useNavigate();\r\n\r\n  return (\r\n    <div className=\"left\">\r\n      <Button\r\n        type=\"text\"\r\n        onClick={async () => {\r\n          await instantSave();\r\n          if (teamOn) updatePages(noteID);\r\n          nav(\"/\");\r\n        }}\r\n        icon={<HomeFilled style={{ opacity: 0.8 }} />}\r\n      />\r\n      <div className=\"br\" />\r\n      <Button\r\n        type=\"text\"\r\n        className=\"save\"\r\n        onClick={instantSave}\r\n        disabled={saved}\r\n        icon={<SaveOutlined />}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { PointerEvent, TouchEvent, useEffect, useRef } from \"react\";\r\n\r\ntype iOSTouch = Touch & {\r\n  force?: number;\r\n  touchType?: \"stylus\" | \"direct\";\r\n};\r\n\r\nexport function isApplePencil(e: TouchEvent) {\r\n  const touch = e.touches[0] as iOSTouch;\r\n  return touch?.touchType === \"stylus\";\r\n}\r\n\r\nexport function usePreventTouch(\r\n  allowFinger: boolean\r\n): React.CanvasHTMLAttributes<HTMLCanvasElement> {\r\n  const isTouch = useRef(false);\r\n  const checkPoniter = (e: PointerEvent) =>\r\n    e.isPrimary && (isTouch.current = e.pointerType === \"touch\");\r\n\r\n  const isEventValid = (e: TouchEvent) =>\r\n    !isTouch.current ||\r\n    isApplePencil(e) ||\r\n    (allowFinger && e.touches.length === 1);\r\n\r\n  const preventTouch = (e: TouchEvent) =>\r\n    isEventValid(e) || e.stopPropagation();\r\n\r\n  return {\r\n    onPointerDownCapture: checkPoniter,\r\n    onPointerMoveCapture: checkPoniter,\r\n    onTouchStartCapture: preventTouch,\r\n    onTouchMoveCapture: preventTouch,\r\n  };\r\n}\r\n\r\nexport function usePreventGesture() {\r\n  useEffect(() => {\r\n    const handler = (e: Event) => e.preventDefault();\r\n    document.addEventListener(\"gesturestart\", handler);\r\n    document.addEventListener(\"gesturechange\", handler);\r\n    document.addEventListener(\"gestureend\", handler);\r\n    return () => {\r\n      document.removeEventListener(\"gesturestart\", handler);\r\n      document.removeEventListener(\"gesturechange\", handler);\r\n      document.removeEventListener(\"gestureend\", handler);\r\n    };\r\n  }, []);\r\n}\r\n","import React, {\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  Dispatch,\r\n  useEffect,\r\n  useCallback,\r\n  useDebugValue,\r\n  SetStateAction,\r\n  useImperativeHandle,\r\n} from \"react\";\r\nimport { usePreventTouch, usePreventGesture } from \"../../lib/touch/touch\";\r\nimport { DrawState, Mutation, Stroke } from \"../../lib/draw/DrawState\";\r\nimport { defaultDrawCtrl, DrawCtrl } from \"../../lib/draw/drawCtrl\";\r\nimport { releaseCanvas } from \"../../lib/draw/canvas\";\r\nimport { usePinch } from \"@use-gesture/react\";\r\nimport { v4 as getUid } from \"uuid\";\r\nimport { Set } from \"immutable\";\r\nimport paper from \"paper\";\r\nimport \"./draw.sass\";\r\n\r\nexport interface DrawRefType {\r\n  deleteSelected: () => void;\r\n  rotateSelected: (angle: number, last?: boolean) => void;\r\n  duplicateSelected: () => void;\r\n  mutateStyle: (updated: Partial<DrawCtrl>) => void;\r\n  rasterize: () => string;\r\n  submitText: (text: string, fontSize: number, color: string) => void;\r\n  cancelText: () => void;\r\n}\r\nexport type ActiveToolKey = \"\" | \"select\" | \"text\";\r\n\r\nconst PREVIEW_WIDTH = 200;\r\nconst {\r\n  Path,\r\n  Size,\r\n  Point,\r\n  Group,\r\n  Color,\r\n  Raster,\r\n  Shape: { Rectangle },\r\n} = paper;\r\n\r\nconst Draw = React.forwardRef<\r\n  DrawRefType,\r\n  {\r\n    drawState: DrawState;\r\n    otherStates?: DrawState[];\r\n    onChange?: Dispatch<SetStateAction<DrawState>>;\r\n    setActiveTool?: Dispatch<SetStateAction<ActiveToolKey>>;\r\n    drawCtrl?: DrawCtrl;\r\n    readonly?: boolean;\r\n    preview?: boolean;\r\n    imgSrc?: string;\r\n  }\r\n>(\r\n  (\r\n    {\r\n      drawState,\r\n      otherStates,\r\n      onChange = () => {},\r\n      drawCtrl = defaultDrawCtrl,\r\n      preview = false,\r\n      readonly = preview,\r\n      imgSrc,\r\n      setActiveTool,\r\n    },\r\n    ref\r\n  ) => {\r\n    const { width, height } = drawState;\r\n    const { mode, color, finger, lineWidth, highlight, eraserWidth, lasso } =\r\n      drawCtrl;\r\n\r\n    const canvasEl = useRef<HTMLCanvasElement>(null);\r\n    const scope = useRef(new paper.PaperScope());\r\n    const [group, setGroup] = useState<paper.Item[]>([]);\r\n    const [erased, setErased] = useState(Set<string>());\r\n    const [path, setPath] = usePaperItem<paper.Path>();\r\n    const [rect, setRect] = usePaperItem<paper.Shape.Rectangle>();\r\n\r\n    useEffect(() => {\r\n      const setupPaper = () => {\r\n        if (!canvasEl.current) return;\r\n        scope.current.setup(canvasEl.current);\r\n\r\n        const r = preview ? PREVIEW_WIDTH / width : 1;\r\n        scope.current.view.viewSize = new Size(width, height).multiply(r);\r\n        scope.current.view.scale(r, new Point(0, 0));\r\n        paintBackground(scope.current, width, height);\r\n      };\r\n\r\n      setupPaper();\r\n      const cvs = canvasEl.current;\r\n      return () => void (cvs && releaseCanvas(cvs));\r\n    }, [width, height, preview]);\r\n\r\n    useEffect(() => {\r\n      if (!imgSrc) return;\r\n      const img = new Image();\r\n      img.src = imgSrc;\r\n      let raster: paper.Raster;\r\n\r\n      img.onload = () => {\r\n        scope.current.activate();\r\n        raster = new Raster(img);\r\n        scope.current.project.layers[0].addChild(raster);\r\n        raster.position = scope.current.view.center;\r\n        let r = width / img.width;\r\n        raster.scale(r);\r\n      };\r\n\r\n      return () => void raster?.remove();\r\n    }, [imgSrc, width]);\r\n\r\n    const mergedStrokes = useMemo(\r\n      () =>\r\n        otherStates\r\n          ? DrawState.mergeStates(drawState, ...otherStates)\r\n          : drawState.getStrokeList(),\r\n      [drawState, otherStates]\r\n    );\r\n\r\n    useEffect(() => {\r\n      const tempGroup: paper.Item[] = [];\r\n      const othersGroup: paper.Item[] = [];\r\n\r\n      mergedStrokes.forEach((stroke) =>\r\n        paintStroke(\r\n          stroke,\r\n          scope.current,\r\n          drawState.hasStroke(stroke.uid) ? tempGroup : othersGroup,\r\n          erased.has(stroke.uid)\r\n        )\r\n      );\r\n      setGroup(tempGroup);\r\n\r\n      return () => {\r\n        tempGroup.forEach((item) => item.remove());\r\n        othersGroup.forEach((item) => item.remove());\r\n      };\r\n    }, [mergedStrokes, erased, drawState]);\r\n\r\n    const [selected, setSelected] = useState(false);\r\n    const paperMode = mode === \"select\" && selected ? \"selected\" : mode;\r\n    const [selectedIDs, setSelectedIDs] = useState<string[]>([]);\r\n    const selectedItems = useMemo(() => {\r\n      const IDSet = Set(selectedIDs);\r\n      return group.filter((item) => IDSet.has(item.name));\r\n    }, [group, selectedIDs]);\r\n\r\n    const resetSelect = useCallback(() => {\r\n      setSelected(false);\r\n      setPath(undefined);\r\n      setRect(undefined);\r\n    }, [setPath, setRect]);\r\n\r\n    useEffect(() => {\r\n      if (mode === \"select\") return resetSelect;\r\n    }, [mode, resetSelect]);\r\n\r\n    useEffect(() => {\r\n      if (selected)\r\n        return () => {\r\n          setSelectedIDs([]);\r\n          // setCurrDrawCtrl({});\r\n        };\r\n    }, [selected]);\r\n\r\n    useEffect(resetSelect, [lasso, resetSelect]);\r\n\r\n    const ratio = useRef(1);\r\n    const updateRatio = () => {\r\n      const clientWidth = canvasEl.current?.clientWidth;\r\n      if (clientWidth) ratio.current = width / clientWidth;\r\n      scope.current.activate();\r\n    };\r\n\r\n    const setNewRect = (e: paper.MouseEvent) => {\r\n      const point = transformPoint(e.point);\r\n      const rectangle = startSelectRect(point);\r\n      setRect(rectangle);\r\n    };\r\n\r\n    const transformPoint = (projP: paper.Point) => {\r\n      scope.current.activate();\r\n      const { center, zoom } = scope.current.view;\r\n      const viewP = scope.current.view.projectToView(projP);\r\n      const absoluteP = viewP.multiply(ratio.current);\r\n      const offsetP = new Point(width, height)\r\n        .divide(2)\r\n        .subtract(center.multiply(zoom));\r\n      return absoluteP.subtract(offsetP).divide(zoom);\r\n    };\r\n\r\n    const handleDown = {\r\n      draw() {\r\n        updateRatio();\r\n        setPath(startStroke(color, lineWidth, highlight));\r\n      },\r\n      erase() {\r\n        updateRatio();\r\n        setPath(startStroke(\"#0003\", eraserWidth));\r\n      },\r\n      select(e: paper.MouseEvent) {\r\n        updateRatio();\r\n        if (lasso) setPath(startStroke(\"#1890ff\", 5));\r\n        else setNewRect(e);\r\n      },\r\n      selected(e: paper.MouseEvent) {\r\n        updateRatio();\r\n        const point = transformPoint(e.point);\r\n        // check if point is outside of selection\r\n        if (lasso) {\r\n          if (path?.contains(point)) return;\r\n          setPath(startStroke(\"#1890ff\", 5));\r\n        } else {\r\n          if (rect?.bounds.contains(point)) return;\r\n          setNewRect(e);\r\n        }\r\n        setSelected(false);\r\n      },\r\n      text(e: paper.MouseEvent) {\r\n        updateRatio();\r\n        const point = transformPoint(e.point);\r\n        const t = new paper.PointText(point);\r\n        setPointText(t);\r\n      },\r\n    }[paperMode];\r\n\r\n    const handleDrag = {\r\n      draw(e: paper.MouseEvent) {\r\n        if (!path) return;\r\n        scope.current.activate();\r\n        path.add(transformPoint(e.point));\r\n        path.smooth();\r\n      },\r\n      erase(e: paper.MouseEvent) {\r\n        if (!path) return;\r\n        scope.current.activate();\r\n        path.add(transformPoint(e.point));\r\n        path.smooth();\r\n\r\n        const newErased = group\r\n          .filter((p) => !erased.has(p.name))\r\n          .filter((p) => checkErase(p, path))\r\n          .map((p) => p.name);\r\n        setErased((prev) => prev.concat(newErased));\r\n      },\r\n      select(e: paper.MouseEvent) {\r\n        scope.current.activate();\r\n        if (lasso) {\r\n          if (!path) return;\r\n          path.add(transformPoint(e.point));\r\n          path.smooth();\r\n        } else {\r\n          if (!rect) return;\r\n          const delta = e.delta.multiply(ratio.current);\r\n          rect.size = rect.size.add(new Size(delta.x, delta.y));\r\n          rect.translate(delta.divide(2));\r\n        }\r\n      },\r\n      selected(e: paper.MouseEvent) {\r\n        scope.current.activate();\r\n        const delta = e.delta.multiply(ratio.current);\r\n        selectedItems.forEach((item) => item.translate(delta));\r\n        path?.translate(delta);\r\n        rect?.translate(delta);\r\n      },\r\n      text: null,\r\n    }[paperMode];\r\n\r\n    const handleUp = {\r\n      draw() {\r\n        if (!path || path.segments.length === 0) return;\r\n        scope.current.activate();\r\n        path.simplify();\r\n        const pathData = path.exportJSON();\r\n        setPath(undefined);\r\n        onChange((prev) => DrawState.addStroke(prev, pathData));\r\n      },\r\n      erase() {\r\n        if (!path) return;\r\n        scope.current.activate();\r\n        setPath(undefined);\r\n        onChange((prev) => DrawState.eraseStrokes(prev, erased.toArray()));\r\n        setErased(Set());\r\n      },\r\n      select() {\r\n        scope.current.activate();\r\n        let items: paper.Item[];\r\n        if (lasso) {\r\n          if (!path || path.length < 50) return setPath(undefined);\r\n          path.closePath();\r\n          path.simplify();\r\n          moveDash(path);\r\n          items = checkPathSelection(path, group);\r\n        } else {\r\n          if (!rect) return;\r\n          const { width, height } = rect.size.abs();\r\n          if (width * height < 100) return setRect(undefined);\r\n          moveDash(rect);\r\n          items = checkRectSelection(rect, group);\r\n        }\r\n        setSelectedIDs(items.map((item) => item.name));\r\n        setSelected(true);\r\n      },\r\n      selected() {\r\n        updateMutation();\r\n      },\r\n      text: null,\r\n    }[paperMode];\r\n\r\n    const handlePaper = () => {\r\n      if (readonly) return;\r\n      scope.current.view.onMouseDown = handleDown;\r\n      scope.current.view.onMouseDrag = handleDrag;\r\n      scope.current.view.onMouseUp = handleUp;\r\n    };\r\n    useEffect(handlePaper);\r\n\r\n    const updateMutation = () => {\r\n      if (!selectedItems?.length) return;\r\n      const mutations = selectedItems.map(\r\n        (p) => [p.name, p.exportJSON()] as Mutation\r\n      );\r\n      onChange((prev) => DrawState.mutateStrokes(prev, mutations));\r\n    };\r\n\r\n    const deleteSelected = () => {\r\n      if (!selectedIDs.length) return;\r\n      onChange((prev) => DrawState.eraseStrokes(prev, selectedIDs));\r\n      setSelectedIDs([]);\r\n      resetSelect();\r\n    };\r\n\r\n    const rotateSelected = (angle: number, last = false) => {\r\n      let aniCount = last ? 10 : 1;\r\n      const dAngle = angle / aniCount;\r\n      const center = (rect || path)?.position;\r\n      const rotate = () => {\r\n        selectedItems.forEach((item) => item.rotate(dAngle, center));\r\n        rect?.rotate(dAngle, center);\r\n        path?.rotate(dAngle, center);\r\n        if (--aniCount > 0) requestAnimationFrame(rotate);\r\n        else last && updateMutation();\r\n      };\r\n      rotate();\r\n    };\r\n\r\n    const mutateStyle = (updated: Partial<DrawCtrl>) => {\r\n      scope.current.activate();\r\n      updateGroupStyle(selectedItems, updated);\r\n      updateMutation();\r\n    };\r\n\r\n    const duplicateSelected = () => {\r\n      scope.current.activate();\r\n      const size = (rect || path)?.bounds.size;\r\n      if (!size) return;\r\n      const { width, height } = size;\r\n      const transP = new Point(width, height).divide(10);\r\n      const newSG = new Group(selectedItems).clone({ insert: false });\r\n      newSG.translate(transP);\r\n      rect?.translate(transP);\r\n      path?.translate(transP);\r\n\r\n      const mutations = newSG.children.map(\r\n        (item) => [getUid(), item.exportJSON()] as Mutation\r\n      );\r\n      onChange((prev) => DrawState.mutateStrokes(prev, mutations));\r\n      setSelectedIDs(mutations.map((m) => m[0]));\r\n    };\r\n\r\n    const rasterize = () =>\r\n      new Group(selectedItems).rasterize({ insert: false }).toDataURL();\r\n\r\n    const [pointText, setPointText] = usePaperItem<paper.PointText>();\r\n    const cancelText = useCallback(\r\n      () => setPointText(undefined),\r\n      [setPointText]\r\n    );\r\n\r\n    useEffect(() => {\r\n      if (mode === \"text\") return cancelText;\r\n    }, [mode, cancelText]);\r\n\r\n    const submitText = (text: string, fontSize: number, color = \"#000\") => {\r\n      if (!pointText) return;\r\n      pointText.content = text;\r\n      pointText.fontSize = fontSize * 10;\r\n      pointText.fillColor = new Color(color);\r\n      const pathData = pointText.exportJSON();\r\n      onChange((prev) => DrawState.addStroke(prev, pathData));\r\n      cancelText();\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      deleteSelected,\r\n      duplicateSelected,\r\n      cancelText,\r\n      rotateSelected,\r\n      submitText,\r\n      mutateStyle,\r\n      rasterize,\r\n    }));\r\n    useEffect(() => {\r\n      if (!setActiveTool) return;\r\n      if (paperMode === \"selected\") {\r\n        setActiveTool(\"select\");\r\n      } else if (paperMode === \"text\") {\r\n        setActiveTool(pointText ? \"text\" : \"\");\r\n      } else {\r\n        setActiveTool(\"\");\r\n      }\r\n    }, [paperMode, pointText, setActiveTool]);\r\n\r\n    usePreventGesture();\r\n    usePinch(\r\n      ({ memo, offset: [scale], first, last, origin }) => {\r\n        const { view } = scope.current;\r\n\r\n        let lastScale, lastOX, lastOY, elX, elY: number;\r\n        if (first || !memo) {\r\n          updateRatio();\r\n          if (!canvasEl.current) return;\r\n          const { x, y } = canvasEl.current.getBoundingClientRect();\r\n          lastScale = 1;\r\n          [lastOX, lastOY] = [origin[0] - x, origin[1] - y];\r\n          [elX, elY] = [x, y];\r\n        } else {\r\n          [lastScale, [lastOX, lastOY], [elX, elY]] = memo;\r\n        }\r\n\r\n        const r = ratio.current;\r\n        const [oX, oY] = [origin[0] - elX, origin[1] - elY];\r\n        const originViewP = new Point(oX, oY).multiply(r);\r\n        const originProjP = view.viewToProject(originViewP);\r\n\r\n        if (Math.abs(1 - scale) < 0.05) scale = 1;\r\n        let dScale = first ? 1 : scale / lastScale;\r\n        let aniCount = last ? 10 : 1;\r\n        dScale = Math.pow(dScale, 1 / aniCount);\r\n        const scaleView = () => {\r\n          view.scale(dScale, originProjP);\r\n          if (--aniCount > 0) requestAnimationFrame(scaleView);\r\n          else if (last) putCenterBack(view);\r\n        };\r\n        scaleView();\r\n\r\n        const [dX, dY] = [oX - lastOX, oY - lastOY];\r\n        const transP = new Point(dX, dY).multiply(r / scale);\r\n        view.translate(transP);\r\n\r\n        if (!last) return [scale, [oX, oY], [elX, elY]];\r\n      },\r\n      {\r\n        scaleBounds: { max: 10, min: 0.3 },\r\n        rubberband: 0.5,\r\n        target: canvasEl,\r\n      }\r\n    );\r\n\r\n    const touchHandler = usePreventTouch(finger);\r\n    return (\r\n      <div className=\"draw-wrapper\">\r\n        <canvas\r\n          ref={canvasEl}\r\n          className=\"draw-canvas\"\r\n          data-paper-hidpi={false}\r\n          {...touchHandler}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nDraw.displayName = \"Draw\";\r\nexport default React.memo(Draw);\r\n\r\nfunction usePaperItem<T extends paper.Item>(init?: T) {\r\n  const stateArray = useState<T | undefined>(init);\r\n  const [item] = stateArray;\r\n  useDebugValue(item);\r\n  useEffect(() => () => void item?.remove(), [item]);\r\n  return stateArray;\r\n}\r\n\r\nconst paintStroke = (\r\n  stroke: Stroke,\r\n  scope: paper.PaperScope,\r\n  group?: paper.Item[],\r\n  erased = false\r\n) => {\r\n  let { pathData, uid } = stroke;\r\n  try {\r\n    scope.activate();\r\n    const item = scope.project.activeLayer.importJSON(pathData);\r\n    if (!item) return;\r\n    item.name = uid;\r\n    if (erased) item.opacity = 0.5;\r\n    group?.push(item);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getCheckPoints = (() => {\r\n  const cache = new WeakMap<paper.Segment, paper.Point[]>();\r\n  return (segment: paper.Segment, width: number) => {\r\n    const cached = cache.get(segment);\r\n    if (cached) return cached;\r\n\r\n    const { point } = segment;\r\n    const prevPoint = segment.previous?.point;\r\n    if (!prevPoint) return [];\r\n    const delta = point.subtract(prevPoint);\r\n    const times = (delta.length / width) * 2;\r\n    const checkPoints: paper.Point[] = [];\r\n    for (let i = 0; i < times; i += 1) {\r\n      checkPoints.push(point.subtract(delta.multiply(i / times)));\r\n    }\r\n    cache.set(segment, checkPoints);\r\n    return checkPoints;\r\n  };\r\n})();\r\n\r\nconst checkErase = (item: paper.Item, eraserPath: paper.Path) => {\r\n  const curveBound = eraserPath.lastSegment.curve?.strokeBounds;\r\n  if (!(item instanceof paper.Path)) return false;\r\n  if (!curveBound?.intersects(item.strokeBounds)) return false;\r\n\r\n  if (eraserPath.intersects(item)) return true;\r\n\r\n  const { strokeWidth, lastSegment } = eraserPath;\r\n  const checkPoints = getCheckPoints(lastSegment, strokeWidth);\r\n  return checkPoints.some((cPoint) => {\r\n    const d = item.getNearestPoint(cPoint)?.getDistance(cPoint);\r\n    return d && d * 2 < item.strokeWidth + strokeWidth;\r\n  });\r\n};\r\n\r\nconst paintBackground = (\r\n  scope: paper.PaperScope,\r\n  width: number,\r\n  height: number\r\n) => {\r\n  scope.activate();\r\n  const bgRect = new Rectangle(new Point(0, 0), new Point(width, height));\r\n  bgRect.fillColor = new Color(\"#fff\");\r\n  const bgLayer = new paper.Layer(bgRect);\r\n  scope.project.insertLayer(0, bgLayer);\r\n  return bgRect;\r\n};\r\n\r\nconst startSelectRect = (point: paper.Point) => {\r\n  const rect = new Rectangle(point, new Size(0, 0));\r\n  rect.strokeColor = new Color(\"#1890ff\");\r\n  rect.strokeWidth = 5;\r\n  return rect;\r\n};\r\n\r\nconst startStroke = (color: string, lineWidth: number, highlight = false) => {\r\n  const path = new Path();\r\n  const strokeColor = new Color(color);\r\n  if (highlight) {\r\n    strokeColor.alpha = 0.5;\r\n    path.blendMode = \"multiply\";\r\n  }\r\n  path.strokeColor = strokeColor;\r\n  path.strokeWidth = lineWidth;\r\n  path.strokeJoin = \"round\";\r\n  path.strokeCap = \"round\";\r\n  return path;\r\n};\r\n\r\nconst moveDash = (item: paper.Item) => {\r\n  if (item.strokeColor) item.strokeColor.alpha = 0.5;\r\n  item.dashOffset = 0;\r\n  item.dashArray = [30, 20];\r\n  item.onFrame = () => (item.dashOffset += 3);\r\n};\r\n\r\nconst getCenterTranslate = (view: paper.View) => {\r\n  const { center, zoom } = view;\r\n  const { height, width } = view.viewSize;\r\n  const { x, y } = center;\r\n  if (zoom <= 1) return [width / 2 - x, height / 2 - y];\r\n\r\n  const dX = (width * (zoom - 1)) / zoom / 2;\r\n  const dY = (height * (zoom - 1)) / zoom / 2;\r\n  const [minX, maxX, minY, maxY] = [\r\n    width / 2 - dX,\r\n    width / 2 + dX,\r\n    height / 2 - dY,\r\n    height / 2 + dY,\r\n  ];\r\n\r\n  const deltaX = x < minX ? minX - x : x > maxX ? maxX - x : 0;\r\n  const deltaY = y < minY ? minY - y : y > maxY ? maxY - y : 0;\r\n  return [deltaX, deltaY];\r\n};\r\n\r\nconst putCenterBack = (view: paper.View) => {\r\n  const [deltaX, deltaY] = getCenterTranslate(view);\r\n  let aniCount = 10;\r\n  const dP = new Point(deltaX, deltaY).divide(-aniCount);\r\n  const move = () => {\r\n    view.translate(dP);\r\n    if (--aniCount > 0) requestAnimationFrame(move);\r\n  };\r\n  move();\r\n};\r\n\r\nconst checkRectSelection = (rect: paper.Shape.Rectangle, items: paper.Item[]) =>\r\n  items.filter((item) =>\r\n    item instanceof paper.Path\r\n      ? item.intersects(rect) || item.isInside(rect.bounds)\r\n      : item.bounds.intersects(rect.bounds)\r\n  );\r\n\r\nconst checkPathSelection = (selection: paper.Path, items: paper.Item[]) => {\r\n  const isInside = (p: paper.Path) => {\r\n    const res = p.subtract(selection, { insert: false, trace: false });\r\n    res.remove();\r\n    return res.isEmpty();\r\n  };\r\n\r\n  return items.filter((item) => {\r\n    if (!item.bounds.intersects(selection.bounds)) return false;\r\n    let checkedP: paper.Path;\r\n    if (item instanceof paper.Path) {\r\n      checkedP = item;\r\n    } else {\r\n      checkedP = new Path.Rectangle(item.bounds);\r\n      checkedP.remove();\r\n    }\r\n    return checkedP.intersects(selection) || isInside(checkedP);\r\n  });\r\n};\r\n\r\nconst updateGroupStyle = (items: paper.Item[], updated: Partial<DrawCtrl>) => {\r\n  const { lineWidth, color, highlight } = updated;\r\n  items.forEach((item) => {\r\n    if (item instanceof paper.PointText) {\r\n      if (color) {\r\n        const newColor = new Color(color);\r\n        item.fillColor = newColor;\r\n      }\r\n    }\r\n\r\n    if (!(item instanceof paper.Path)) return;\r\n\r\n    if (color) {\r\n      const newColor = new Color(color);\r\n      if (item.blendMode === \"multiply\") newColor.alpha = 0.5;\r\n      item.strokeColor = newColor;\r\n    }\r\n\r\n    if (lineWidth) item.strokeWidth = lineWidth;\r\n\r\n    if (!item.strokeColor || highlight === undefined) return;\r\n    item.strokeColor.alpha = highlight ? 0.5 : 1;\r\n    item.blendMode = highlight ? \"multiply\" : \"normal\";\r\n  });\r\n};\r\n","import {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useCallback,\r\n  createContext,\r\n} from \"react\";\r\nimport {\r\n  DrawCtrl,\r\n  getDrawCtrl,\r\n  defaultDrawCtrl,\r\n} from \"../../lib/draw/drawCtrl\";\r\nimport {\r\n  NoteInfo,\r\n  NotePage,\r\n  createPage,\r\n  defaultNotePage,\r\n} from \"../../lib/note/note\";\r\nimport { useInViewport, useMemoizedFn as useEvent, useSafeState } from \"ahooks\";\r\nimport { NewPageInfo, ReorderInfo, SyncInfo } from \"../../lib/network/io\";\r\nimport { SetOperation, StateSet } from \"../../lib/draw/StateSet\";\r\nimport { loadNote, editNoteData } from \"../../lib/note/archive\";\r\nimport { AddPageButton, showPageDelMsg } from \"./ReaderUtils\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { DrawState } from \"../../lib/draw/DrawState\";\r\nimport { updatePages } from \"../../lib/network/http\";\r\nimport { TeamState } from \"../../lib/draw/TeamState\";\r\nimport { SelectTool, TextTool } from \"./DrawTools\";\r\nimport { insertAfter } from \"../../lib/array\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { debounce, once } from \"lodash-es\";\r\nimport { Map, Set } from \"immutable\";\r\nimport ReaderHeader from \"./header/ReaderHeader\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport Draw, { ActiveToolKey, DrawRefType } from \"../draw/Draw\";\r\nimport { message } from \"antd\";\r\nimport \"./reader.sass\";\r\n\r\nexport const ReaderStateCtx = createContext({\r\n  noteID: \"\",\r\n  noteInfo: undefined as NoteInfo | undefined,\r\n  stateSet: undefined as StateSet | undefined,\r\n  teamState: undefined as TeamState | undefined,\r\n  pageRec: undefined as Map<string, NotePage> | undefined,\r\n  pageOrder: undefined as string[] | undefined,\r\n  saved: true,\r\n  inviewPages: Set<string>(),\r\n  drawCtrl: defaultDrawCtrl,\r\n});\r\n\r\nexport const ReaderMethodCtx = createContext({\r\n  scrollPage: (pageID: string) => {},\r\n  switchPageMarked: (pageID: string) => {},\r\n  updateStateSet: (cb: (prevSS: StateSet) => StateSet) => {},\r\n  addPage: (prevPageID: string, copy?: boolean) => {},\r\n  addFinalPage: () => {},\r\n  deletePage: (pageID: string) => {},\r\n  saveReorder: async (order: string[], push: boolean) => {},\r\n  setInviewPages: (() => {}) as Setter<Set<string>>,\r\n  setDrawCtrl: (() => {}) as Setter<DrawCtrl>,\r\n  instantSave: (() => {}) as () => Promise<void> | undefined,\r\n  handleUndo: () => {},\r\n  handleRedo: () => {},\r\n});\r\n\r\nexport default function Reader() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const nav = useNavigate();\r\n\r\n  const [pageRec, setPageRec] = useState<Map<string, NotePage>>();\r\n  const [noteInfo, setNoteInfo] = useState<NoteInfo>();\r\n  const [stateSet, setStateSet] = useState<StateSet>();\r\n  const [drawCtrl, setDrawCtrl] = useState(defaultDrawCtrl);\r\n  const [inviewPages, setInviewPages] = useState(Set<string>());\r\n  const [pageOrder, setPageOrder] = useState<string[]>();\r\n  const [saved, setSaved] = useSafeState(true);\r\n\r\n  const refRec = useRef<Record<string, HTMLElement>>({});\r\n\r\n  const { io, teamOn, teamState, addTeamStatePage } = useContext(TeamCtx);\r\n\r\n  useEffect(() => {\r\n    const loadNotePages = async () => {\r\n      const storedNote = await loadNote(noteID);\r\n      if (!storedNote) {\r\n        message.error(\"Note not found\");\r\n        return nav(\"/\");\r\n      }\r\n      const { pageRec, pdf, pageOrder, ...noteInfo } = storedNote;\r\n      setPageRec(Map(pageRec));\r\n      setPageOrder(pageOrder);\r\n      setNoteInfo(noteInfo);\r\n      setStateSet(StateSet.createFromPages(pageRec));\r\n      setDrawCtrl(await getDrawCtrl());\r\n      if (teamOn) updatePages(noteID);\r\n    };\r\n    loadNotePages();\r\n  }, [nav, noteID, teamOn]);\r\n\r\n  useEffect(() => {\r\n    if (!noteInfo) return;\r\n    document.title = noteInfo.name + \" - Multibility\";\r\n  }, [noteInfo]);\r\n\r\n  const saver = useEvent(async () => {\r\n    const pr = pageRec?.toObject();\r\n    const canvas = document.querySelector(\"canvas\");\r\n    const thumbnail = canvas?.toDataURL();\r\n    await editNoteData(noteID, { pageRec: pr, thumbnail });\r\n    setSaved(true);\r\n  });\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const debouncedSave = useCallback(debounce(saver, 2000), [saver]);\r\n  const instantSave = debouncedSave.flush;\r\n\r\n  const savePageRec = (pageID: string, cb: (prev: NotePage) => NotePage) => {\r\n    setPageRec((prev) => prev?.update(pageID, defaultNotePage, cb));\r\n    setSaved(false);\r\n    debouncedSave();\r\n  };\r\n\r\n  const saveReorder = async (pageOrder: string[], push = false) => {\r\n    setPageOrder(pageOrder);\r\n    await editNoteData(noteID, { pageOrder });\r\n    await instantSave();\r\n    push && pushReorder(pageOrder);\r\n  };\r\n\r\n  const pushReorder = (pageOrder: string[]) => {\r\n    io?.emit(\"reorder\", { pageOrder });\r\n  };\r\n\r\n  const handleReorder = useEvent(\r\n    ({ deleted, pageOrder, prevOrder }: ReorderInfo) => {\r\n      saveReorder(pageOrder);\r\n      if (!deleted) return;\r\n      showPageDelMsg(() => saveReorder(prevOrder, true));\r\n    }\r\n  );\r\n\r\n  const handleNewPage = useEvent(\r\n    ({ pageOrder, pageID, newPage }: NewPageInfo) => {\r\n      saveReorder(pageOrder);\r\n      savePageRec(pageID, () => newPage);\r\n      setStateSet((prev) => prev?.addState(pageID, newPage));\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    io?.on(\"reorder\", handleReorder);\r\n    io?.on(\"newPage\", handleNewPage);\r\n    return () => void io?.removeAllListeners();\r\n  }, [io, handleReorder, handleNewPage]);\r\n\r\n  const pushOperation = (operation: SetOperation) => {\r\n    const handleSync = ({ pageID, stroke }: SyncInfo) =>\r\n      setStateSet((prev) => prev?.syncStrokeTime(pageID, stroke));\r\n\r\n    io?.emit(\"push\", { operation }, handleSync);\r\n  };\r\n\r\n  const pushNewPage = (\r\n    pageOrder: string[],\r\n    pageID: string,\r\n    newPage: NotePage\r\n  ) => {\r\n    const { image, marked, ...newTeamPage } = newPage;\r\n    io?.emit(\"newPage\", { pageOrder, pageID, newPage: newTeamPage });\r\n    addTeamStatePage(pageID, newPage);\r\n  };\r\n\r\n  const updatePageRec = (pageID: string, ds: DrawState) => {\r\n    const state = DrawState.flaten(ds);\r\n    savePageRec(pageID, (prev) => ({ ...prev, state }));\r\n  };\r\n\r\n  const updateStateSet = (cb: (prevSS: StateSet) => StateSet) => {\r\n    if (!stateSet) return;\r\n    const newSS = cb(stateSet);\r\n    setStateSet(newSS);\r\n    const lastDS = newSS.getLastDS();\r\n    const lastOp = newSS.lastOp;\r\n    if (!lastDS || !lastOp) return;\r\n    updatePageRec(...lastDS);\r\n    pushOperation(lastOp);\r\n  };\r\n\r\n  const switchPageMarked = (pageID: string) => {\r\n    savePageRec(pageID, (prev) => ({ ...prev, marked: !prev.marked }));\r\n  };\r\n\r\n  const scrollPage = (pageID: string) => {\r\n    refRec.current[pageID]?.scrollIntoView();\r\n  };\r\n\r\n  const addPage = (prevPageID: string, copy = false) => {\r\n    if (!pageOrder) return;\r\n    const prevPage = copy ? pageRec?.get(prevPageID) : undefined;\r\n    const [pageID, newPage] = createPage(prevPage);\r\n    const newOrder = insertAfter(pageOrder, prevPageID, pageID);\r\n    pushNewPage(newOrder, pageID, newPage);\r\n    saveReorder(newOrder);\r\n    savePageRec(pageID, () => newPage);\r\n    setStateSet((prev) => prev?.addState(pageID, newPage));\r\n  };\r\n\r\n  const addFinalPage = () => {\r\n    const lastPageID = pageOrder?.at(-1);\r\n    lastPageID && addPage(lastPageID);\r\n  };\r\n\r\n  const deletePage = (pageID: string) => {\r\n    const newOrder = pageOrder?.filter((id) => id !== pageID);\r\n    newOrder?.length && saveReorder(newOrder, true);\r\n  };\r\n\r\n  const handleUndo = () => updateStateSet((prev) => prev.undo());\r\n  const handleRedo = () => updateStateSet((prev) => prev.redo());\r\n  const renderResult = (\r\n    <div className=\"reader container\">\r\n      <ReaderHeader />\r\n      <main>\r\n        {pageOrder?.map((uid) => (\r\n          <section\r\n            key={uid}\r\n            className=\"note-page\"\r\n            ref={(e) => e && (refRec.current[uid] = e)}\r\n          >\r\n            <PageContainer uid={uid} />\r\n          </section>\r\n        ))}\r\n        <AddPageButton />\r\n      </main>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ReaderStateCtx.Provider\r\n      value={{\r\n        saved,\r\n        noteID,\r\n        pageRec,\r\n        drawCtrl,\r\n        noteInfo,\r\n        stateSet,\r\n        teamState,\r\n        pageOrder,\r\n        inviewPages,\r\n      }}\r\n    >\r\n      <ReaderMethodCtx.Provider\r\n        value={{\r\n          addPage,\r\n          scrollPage,\r\n          deletePage,\r\n          setDrawCtrl,\r\n          saveReorder,\r\n          instantSave,\r\n          addFinalPage,\r\n          handleRedo,\r\n          handleUndo,\r\n          updateStateSet,\r\n          setInviewPages,\r\n          switchPageMarked,\r\n        }}\r\n      >\r\n        {renderResult}\r\n      </ReaderMethodCtx.Provider>\r\n    </ReaderStateCtx.Provider>\r\n  );\r\n}\r\n\r\nconst PageContainer: FC<{ uid: string }> = ({ uid }) => {\r\n  const { pageRec, stateSet, teamState } = useContext(ReaderStateCtx);\r\n  const { updateStateSet } = useContext(ReaderMethodCtx);\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n  const updateState = (ds: DrawState) => {\r\n    updateStateSet((prev) => prev.setState(uid, ds));\r\n  };\r\n\r\n  if (!page || !drawState) return null;\r\n  return (\r\n    <PageWrapper\r\n      drawState={drawState}\r\n      teamStateMap={teamStateMap}\r\n      updateState={updateState}\r\n      pdfIndex={page.pdfIndex}\r\n      uid={uid}\r\n    />\r\n  );\r\n};\r\n\r\nexport const PageWrapper = ({\r\n  thumbnail,\r\n  drawState,\r\n  teamStateMap,\r\n  updateState,\r\n  pdfIndex,\r\n  preview = false,\r\n  uid,\r\n}: {\r\n  uid: string;\r\n  drawState: DrawState;\r\n  teamStateMap?: Map<string, DrawState>;\r\n  thumbnail?: string;\r\n  pdfIndex?: number;\r\n  updateState?: (ds: DrawState) => void;\r\n  preview?: boolean;\r\n}) => {\r\n  const { setInviewPages } = useContext(ReaderMethodCtx);\r\n  const { noteID } = useContext(ReaderStateCtx);\r\n  const [fullImg, setFullImg] = useState<string>();\r\n  const wrapperEl = useRef<HTMLDivElement>(null);\r\n  const [visible] = useInViewport(wrapperEl);\r\n\r\n  const { height, width } = drawState;\r\n  const ratio = height / width;\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const loadImage = useCallback(\r\n    once(async () => {\r\n      if (!pdfIndex) return;\r\n      const { getOnePageImage } = await import(\"../../lib/note/pdfImage\");\r\n      setFullImg(await getOnePageImage(noteID, pdfIndex));\r\n    }),\r\n    [pdfIndex, noteID]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (preview) return;\r\n    if (visible) {\r\n      loadImage();\r\n      setInviewPages((prev) => prev.add(uid));\r\n    } else {\r\n      setInviewPages((prev) => prev.delete(uid));\r\n    }\r\n  }, [visible, preview, uid, loadImage, setInviewPages]);\r\n\r\n  const { ignores } = useContext(TeamCtx);\r\n  const otherStates = useMemo(\r\n    () => teamStateMap?.deleteAll(ignores).toList().toArray(),\r\n    [teamStateMap, ignores]\r\n  );\r\n\r\n  const imageLoaded = fullImg || !pdfIndex;\r\n  const drawShow = visible && imageLoaded;\r\n  const maskShow = Boolean(preview || !drawShow);\r\n\r\n  return (\r\n    <div\r\n      ref={wrapperEl}\r\n      className=\"page-wrapper\"\r\n      style={{ paddingTop: `${ratio * 100}%` }}\r\n    >\r\n      {drawShow && (\r\n        <DrawWrapper\r\n          drawState={drawState}\r\n          otherStates={otherStates}\r\n          updateState={updateState}\r\n          imgSrc={fullImg || thumbnail}\r\n          preview={preview}\r\n        />\r\n      )}\r\n      {maskShow && <div className=\"mask\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DrawWrapper = ({\r\n  drawState,\r\n  updateState,\r\n  otherStates,\r\n  preview = false,\r\n  imgSrc,\r\n}: {\r\n  drawState: DrawState;\r\n  otherStates?: DrawState[];\r\n  updateState?: (ds: DrawState) => void;\r\n  preview?: boolean;\r\n  imgSrc?: string;\r\n}) => {\r\n  const { drawCtrl } = useContext(ReaderStateCtx);\r\n  const [activeTool, setActiveTool] = useState<ActiveToolKey>(\"\");\r\n  const drawRef = useRef<DrawRefType>(null);\r\n\r\n  const handleChange = useEvent(\r\n    (arg: ((s: DrawState) => DrawState) | DrawState) => {\r\n      if (!updateState) return;\r\n      const newDS = arg instanceof DrawState ? arg : arg(drawState);\r\n      updateState(newDS);\r\n    }\r\n  );\r\n\r\n  return preview ? (\r\n    <Draw\r\n      drawState={drawState}\r\n      otherStates={otherStates}\r\n      imgSrc={imgSrc}\r\n      readonly\r\n      preview\r\n    />\r\n  ) : (\r\n    <>\r\n      <Draw\r\n        drawState={drawState}\r\n        otherStates={otherStates}\r\n        onChange={handleChange}\r\n        imgSrc={imgSrc}\r\n        drawCtrl={drawCtrl}\r\n        ref={drawRef}\r\n        setActiveTool={setActiveTool}\r\n      />\r\n      <SelectTool drawRef={drawRef} visible={activeTool === \"select\"} />\r\n      <TextTool drawRef={drawRef} visible={activeTool === \"text\"} />\r\n    </>\r\n  );\r\n};\r\nDrawWrapper.displayName = \"DrawWrapper\";\r\n","import { io } from \"socket.io-client\";\r\nimport { Stroke } from \"../draw/DrawState\";\r\nimport { NotePage } from \"../note/note\";\r\nimport { getUserID, getUserName } from \"../user\";\r\nimport { BASE_URL } from \"./http\";\r\n\r\nexport const IoFactory = (noteID: string) => () =>\r\n  io(BASE_URL, {\r\n    query: {\r\n      userID: getUserID(),\r\n      userName: getUserName(),\r\n      noteID,\r\n    },\r\n  });\r\n\r\nexport interface ReorderInfo {\r\n  pageOrder: string[];\r\n  prevOrder: string[];\r\n  deleted: boolean;\r\n}\r\n\r\nexport interface NewPageInfo {\r\n  pageOrder: string[];\r\n  pageID: string;\r\n  newPage: NotePage;\r\n}\r\n\r\nexport interface SyncInfo {\r\n  stroke: Stroke;\r\n  pageID: string;\r\n}\r\n","import { NotePage, TeamPage, TeamPageInfo } from \"../note/note\";\nimport { DrawState, WIDTH } from \"./DrawState\";\nimport { SetOperation } from \"./StateSet\";\nimport { Map, Record } from \"immutable\";\n\ninterface TeamStateRecordType {\n  pageStates: Map<string, Map<string, DrawState>>;\n  pageInfos: Map<string, TeamPageInfo>;\n}\n\nconst defaultRecord: Readonly<TeamStateRecordType> = {\n  pageStates: Map(),\n  pageInfos: Map(),\n};\n\ntype TeamStateRecord = Record<TeamStateRecordType>;\nconst defaultFactory = Record(defaultRecord);\n\nexport class TeamState {\n  constructor(private immutable: TeamStateRecord) {}\n\n  getImmutable() {\n    return this.immutable;\n  }\n\n  getPageStates() {\n    return this.getImmutable().get(\"pageStates\");\n  }\n\n  getPageInfos() {\n    return this.getImmutable().get(\"pageInfos\");\n  }\n\n  getOneState(pageID: string, userID: string) {\n    return this.getPageStates().get(pageID)?.get(userID);\n  }\n\n  getOnePageStateMap(pageID: string) {\n    return this.getPageStates().get(pageID);\n  }\n\n  getPageValidUsers(pageID: string) {\n    const map = this.getOnePageStateMap(pageID);\n    if (!map) return [];\n    return Array.from(map?.filter((ds) => !ds.isEmpty()).keys());\n  }\n\n  getPageRatio(pageID: string) {\n    return this.getPageInfos().get(pageID)?.ratio;\n  }\n\n  includesPage(pageID: string) {\n    return this.getPageStates().has(pageID);\n  }\n\n  setState(pageID: string, userID: string, drawState: DrawState) {\n    const pageMap = this.getPageStates().get(pageID);\n    if (!pageMap) return this;\n    return new TeamState(\n      this.getImmutable().update(\"pageStates\", (m) =>\n        m.set(pageID, pageMap.set(userID, drawState))\n      )\n    );\n  }\n\n  static createFromTeamPages(\n    teamPages: globalThis.Record<string, TeamPage>,\n    width = WIDTH\n  ) {\n    let record = defaultFactory();\n    Object.entries(teamPages).forEach(([pageID, teamPage]) => {\n      const { states, ratio } = teamPage;\n      const pageMap = Map(\n        Object.entries(states).map(([userID, flatState]) => [\n          userID,\n          DrawState.loadFromFlat(flatState, width, width * ratio),\n        ])\n      );\n      record = record\n        .update(\"pageStates\", (m) => m.set(pageID, pageMap))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }));\n    });\n    return new TeamState(record);\n  }\n\n  addPage(pageID: string, notePage: NotePage) {\n    const { ratio } = notePage;\n    return new TeamState(\n      this.getImmutable()\n        .update(\"pageStates\", (m) => m.set(pageID, Map()))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }))\n    );\n  }\n\n  pushOperation(setOp: SetOperation, userID: string, width = WIDTH) {\n    const { pageID, ...op } = setOp;\n    const ratio = this.getPageRatio(pageID);\n    if (!this.includesPage(pageID) || !ratio) return this;\n    const prevDs =\n      this.getOneState(pageID, userID) ||\n      DrawState.createEmpty(width, width * ratio);\n\n    const ds = DrawState.pushOperation(prevDs, op);\n    return this.setState(pageID, userID, ds);\n  }\n\n  resetUser(userID: string, pageRec: globalThis.Record<string, NotePage>) {\n    let newTS: TeamState = this;\n    for (let [pageID, { state, ratio }] of Object.entries(pageRec)) {\n      const prevDS = newTS.getOneState(pageID, userID);\n      if (!prevDS) continue;\n      const { width } = prevDS;\n      newTS = newTS.setState(\n        pageID,\n        userID,\n        DrawState.loadFromFlat(state, width, width * ratio)\n      );\n    }\n    return newTS;\n  }\n}\n","import { useState, useEffect, createContext, useCallback } from \"react\";\r\nimport { getTeamNoteState, loadTeamNoteInfo } from \"../../lib/network/http\";\r\nimport { LoginOutlined, LogoutOutlined } from \"@ant-design/icons\";\r\nimport { IoFactory, NewPageInfo } from \"../../lib/network/io\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { TeamState } from \"../../lib/draw/TeamState\";\r\nimport { getUserID, UserInfo } from \"../../lib/user\";\r\nimport { NotePage } from \"../../lib/note/note\";\r\nimport { Socket } from \"socket.io-client\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { Loading } from \"../ui/Loading\";\r\nimport { message } from \"antd\";\r\nimport { Set } from \"immutable\";\r\nimport Reader from \"./Reader\";\r\n\r\nexport const TeamCtx = createContext({\r\n  io: undefined as Socket | undefined,\r\n  code: 0,\r\n  teamOn: false,\r\n  connected: false,\r\n  ignores: Set<string>(),\r\n  userRec: {} as Record<string, UserInfo>,\r\n  teamState: undefined as TeamState | undefined,\r\n  resetIO: () => {},\r\n  loadInfo: async () => false,\r\n  loadState: async () => false,\r\n  setIgnores: (() => {}) as Setter<Set<string>>,\r\n  addTeamStatePage: (pageID: string, newPage: NotePage) => {},\r\n});\r\n\r\nexport default function Team() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const [teamState, setTeamState] = useState<TeamState>();\r\n  const [code, setCode] = useState(-2);\r\n  const [userRec, setUserRec] = useState<Record<string, UserInfo>>({});\r\n  const [ignores, setIgnores] = useState(Set<string>());\r\n  const [io, setIO] = useState(IoFactory(noteID));\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [connected, setConnected] = useState(false);\r\n  const nav = useNavigate();\r\n\r\n  const loadInfo = useCallback(async () => {\r\n    const info = await loadTeamNoteInfo(noteID);\r\n    if (!info) {\r\n      message.error(\"Failed loading the team note info\");\r\n      return false;\r\n    }\r\n    setCode(info.code);\r\n    return true;\r\n  }, [noteID]);\r\n\r\n  const loadState = useCallback(async () => {\r\n    const teamNote = await getTeamNoteState(noteID);\r\n    if (!teamNote) {\r\n      message.error(\"Failed loading the team note state\");\r\n      return false;\r\n    }\r\n    setTeamState(TeamState.createFromTeamPages(teamNote));\r\n    return true;\r\n  }, [noteID]);\r\n\r\n  useEffect(() => {\r\n    const roomInit = async () => {\r\n      const infoLoaded = await loadInfo();\r\n      const stateLoaded = await loadState();\r\n      if (infoLoaded && stateLoaded) return setLoaded(true);\r\n      nav(\"/\");\r\n    };\r\n    roomInit();\r\n  }, [loadInfo, loadState, nav]);\r\n\r\n  useEffect(() => {\r\n    io.on(\"push\", ({ operation, userID }) => {\r\n      setTeamState((prev) => prev?.pushOperation(operation, userID));\r\n    });\r\n\r\n    io.on(\"join\", ({ joined, members }) => {\r\n      const { userID, userName } = joined;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return;\r\n      showJoinMsg(userID, userName);\r\n    });\r\n\r\n    io.on(\"leave\", ({ leaved, members }) => {\r\n      const { userID, userName } = leaved;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return io.emit(\"join\");\r\n      showLeaveMsg(userID, userName);\r\n    });\r\n\r\n    io.on(\"newPage\", (info: NewPageInfo) => {\r\n      const { pageID, newPage } = info;\r\n      setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n    });\r\n\r\n    io.on(\"reset\", ({ userID, pageRec }) => {\r\n      if (userID === getUserID()) return;\r\n      setTeamState((prev) => prev?.resetUser(userID, pageRec));\r\n    });\r\n\r\n    io.on(\"connect_error\", console.error);\r\n    io.on(\"connect\", () => setConnected(true));\r\n    io.on(\"disconnect\", () => setConnected(false));\r\n\r\n    return () => {\r\n      io.removeAllListeners();\r\n      io.close();\r\n    };\r\n  }, [io]);\r\n\r\n  const addTeamStatePage = (pageID: string, newPage: NotePage) => {\r\n    setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n  };\r\n\r\n  const resetIO = () => setIO(IoFactory(noteID));\r\n\r\n  return (\r\n    <Loading loading={!loaded}>\r\n      <TeamCtx.Provider\r\n        value={{\r\n          io,\r\n          code,\r\n          teamOn: true,\r\n          ignores,\r\n          userRec,\r\n          connected,\r\n          teamState,\r\n          resetIO,\r\n          loadInfo,\r\n          loadState,\r\n          setIgnores,\r\n          addTeamStatePage,\r\n        }}\r\n      >\r\n        <Reader />\r\n      </TeamCtx.Provider>\r\n    </Loading>\r\n  );\r\n}\r\n\r\nconst showJoinMsg = (userID: string, userName: string) => {\r\n  message.destroy(userID);\r\n  message.success({\r\n    content: `${userName} joined room`,\r\n    icon: <LoginOutlined />,\r\n    key: userID,\r\n  });\r\n};\r\n\r\nconst showLeaveMsg = (userID: string, userName: string) => {\r\n  message.destroy(userID);\r\n  message.warning({\r\n    content: `${userName} leaved room`,\r\n    icon: <LogoutOutlined />,\r\n    key: userID,\r\n  });\r\n};\r\n","export function createVirtualCanvas(width: number, height: number) {\r\n  const canvas = document.createElement(\"canvas\");\r\n  const context = canvas.getContext(\"2d\");\r\n  if (!context) {\r\n    throw new Error(\"can't get virtual canvas context\");\r\n  }\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n  return { canvas, context };\r\n}\r\n\r\nexport function releaseCanvas(canvas: HTMLCanvasElement) {\r\n  canvas.width = 1;\r\n  canvas.height = 1;\r\n  const ctx = canvas.getContext('2d');\r\n  ctx?.clearRect(0, 0, 1, 1);\r\n}\r\n"],"names":["defaultWidthList","defaultDrawCtrl","mode","finger","lineWidth","eraserWidth","color","highlight","lasso","widthList","getDrawCtrl","localforage","drawCtrl","defaultRecord","states","Map","editStack","List","undoStack","defaultFactory","Record","StateSet","immutable","lastOp","this","getImmutable","get","pageID","getStates","drawState","prevDS","getOneState","currRecord","update","s","set","l","push","delete","stroke","DrawState","notePage","width","WIDTH","state","ratio","newDS","getEditStack","size","getUndoStack","isUndoable","lastUid","last","lastSetOp","pop","isRedoable","ds","pageRec","map","AddPageButton","addFinalPage","useContext","ReaderMethodCtx","className","type","icon","PlusOutlined","block","onClick","createFromIconfontCN","scriptUrl","HeaderMiddle","ReaderStateCtx","stateSet","setDrawCtrl","handleUndo","handleRedo","updateDrawCtrl","updated","prev","newCtrl","saveDrawCtrl","shape","UndoOutlined","disabled","RedoOutlined","message","content","key","PenButton","EraserButton","SelectButton","btnProps","HighlightOutlined","PenPanel","trigger","placement","getPopupContainer","e","destroyTooltipOnHide","useState","panelBlur","setPanelBlur","classNames","blur","WidthSelect","ghost","checked","ColorSelect","setColor","c","chosen","useMemo","Math","max","indexOf","options","index","value","label","onVisibleChange","min","defaultValue","onAfterChange","w","includes","newWL","slice","style","onChange","i","colors","name","tempEraserWidth","setTempEraserWidth","GatewayOutlined","getOcrWorker","worker","createWorker","logger","console","log","load","loadLanguage","initialize","SelectTool","drawRef","visible","currDrawCtrl","setCurrDrawCtrl","useEffect","rotateEl","useRef","dragged","setDragged","transX","setTransX","gearStyle","transform","useDrag","first","offset","delta","current","rotateSelected","target","filterTaps","rubberband","bounds","left","right","recoginzing","setRecoginzing","recognizeText","imageData","rasterize","recognize","text","data","Modal","title","TextArea","okText","onOk","copy","error","createPortal","mutateStyle","BgColorsOutlined","ref","RotateRightOutlined","CaretLeftOutlined","CaretRightOutlined","CopyOutlined","duplicateSelected","loading","danger","DeleteOutlined","deleteSelected","document","body","TextTool","setText","fontSize","setFontSize","onCancel","cancelText","trim","submitText","bodyStyle","paddingTop","destroyOnClose","FontSizeOutlined","overlayStyle","FontColorsOutlined","autoFocus","insertAfter","list","prevItem","newItem","prevIndex","curr","splice","PageNavContent","activeKey","setActiveKey","pageOrder","inviewPages","scrollPage","saveReorder","refRec","listEl","currpageID","find","has","scrollIntoView","PreviewTabs","onDragEnd","source","destination","fromIndex","toIndex","newOrder","result","removed","exchange","requestAnimationFrame","droppableId","droppableProps","innerRef","placeholder","uid","PagePreview","pageIndex","teamState","switchPageMarked","ignores","TeamCtx","setChosen","page","teamStateMap","getOnePageStateMap","userIDs","getPageValidUsers","filter","userID","image","marked","isEmpty","every","draggableId","isDragDisabled","draggableProps","dragHandleProps","drag","isDragging","PageWrapper","undefined","thumbnail","preview","stopPropagation","PreviewOption","TeamAvatars","maxCount","UserAvatar","addPage","deletePage","menu","items","MoreOutlined","TabPane","Tabs","tabBarGutter","centered","tab","PageNav","navOn","setNavOn","ALL","MARKED","WRITTEN","MenuUnfoldOutlined","MenuFoldOutlined","onClose","closable","contentWrapperStyle","boxShadow","padding","overflow","headerStyle","textAlign","borderTop","HeaderRight","teamOn","RoomInfo","JoinRoom","UserCard","renaming","setRenaming","setIgnores","resetIO","userInfo","userRec","userName","online","self","getUserID","ignored","Search","onSearch","saveUserName","enterButton","CheckOutlined","FormOutlined","EyeInvisibleOutlined","EyeOutlined","add","getHashedColor","backgroundColor","code","connected","loadInfo","loadState","noteInfo","link","window","location","href","share","selfName","userList","selfID","selfInfo","otherUsers","values","Object","onlineNum","length","DisconnectOutlined","showIcon","banner","String","plain","ShareAltOutlined","u","reloading","setReloading","ReloadOutlined","status","count","TeamOutlined","noteID","instantSave","nav","useNavigate","createRoom","putNote","editNoteData","team","UsergroupAddOutlined","ReaderHeader","HeaderLeft","saved","updatePages","HomeFilled","opacity","SaveOutlined","usePreventTouch","allowFinger","isTouch","checkPoniter","isPrimary","pointerType","preventTouch","touch","touches","touchType","isApplePencil","isEventValid","onPointerDownCapture","onPointerMoveCapture","onTouchStartCapture","onTouchMoveCapture","Path","paper","Size","Point","Group","Color","Raster","Rectangle","Draw","React","otherStates","readonly","imgSrc","setActiveTool","height","canvasEl","scope","group","setGroup","Set","erased","setErased","usePaperItem","path","setPath","rect","setRect","setup","r","view","viewSize","multiply","scale","paintBackground","setupPaper","cvs","releaseCanvas","raster","img","Image","src","onload","activate","project","layers","addChild","position","center","remove","mergedStrokes","getStrokeList","tempGroup","othersGroup","forEach","paintStroke","hasStroke","item","selected","setSelected","paperMode","selectedIDs","setSelectedIDs","selectedItems","IDSet","resetSelect","useCallback","updateRatio","clientWidth","setNewRect","point","transformPoint","rectangle","startSelectRect","projP","zoom","absoluteP","projectToView","offsetP","divide","subtract","handleDown","draw","startStroke","erase","select","contains","t","setPointText","handleDrag","smooth","newErased","p","checkErase","concat","x","y","translate","handleUp","segments","simplify","pathData","exportJSON","toArray","closePath","moveDash","checkPathSelection","abs","checkRectSelection","updateMutation","onMouseDown","onMouseDrag","onMouseUp","mutations","angle","aniCount","dAngle","rotate","updateGroupStyle","transP","newSG","clone","insert","children","getUid","m","toDataURL","pointText","fillColor","useImperativeHandle","handler","preventDefault","addEventListener","removeEventListener","usePinch","lastScale","lastOX","lastOY","elX","elY","memo","origin","getBoundingClientRect","oX","oY","originViewP","originProjP","viewToProject","dScale","pow","scaleView","putCenterBack","scaleBounds","touchHandler","displayName","init","stateArray","useDebugValue","activeLayer","importJSON","getCheckPoints","cache","WeakMap","segment","cached","prevPoint","previous","times","checkPoints","eraserPath","curveBound","lastSegment","curve","strokeBounds","intersects","strokeWidth","some","cPoint","d","getNearestPoint","getDistance","bgRect","bgLayer","insertLayer","strokeColor","alpha","blendMode","strokeJoin","strokeCap","dashOffset","dashArray","onFrame","dX","dY","minX","maxX","minY","maxY","getCenterTranslate","deltaX","deltaY","dP","move","isInside","selection","checkedP","res","trace","newColor","createContext","updateStateSet","cb","prevPageID","order","setInviewPages","Reader","useParams","setPageRec","setNoteInfo","setStateSet","setPageOrder","useSafeState","setSaved","io","addTeamStatePage","loadNotePages","loadNote","storedNote","pdf","createFromPages","saver","useEvent","pr","toObject","canvas","querySelector","debouncedSave","debounce","flush","savePageRec","defaultNotePage","pushReorder","emit","handleReorder","onUndo","deleted","prevOrder","duration","handleNewPage","newPage","addState","on","removeAllListeners","pushNewPage","newTeamPage","updatePageRec","newSS","operation","lastDS","getLastDS","syncStrokeTime","prevPage","createPage","renderResult","PageContainer","Provider","id","lastPageID","at","redo","undo","updateState","setState","pdfIndex","fullImg","setFullImg","wrapperEl","useInViewport","loadImage","once","getOnePageImage","deleteAll","toList","drawShow","maskShow","Boolean","DrawWrapper","activeTool","handleChange","arg","IoFactory","BASE_URL","query","getUserName","pageStates","pageInfos","TeamState","getPageStates","Array","from","keys","getPageInfos","pageMap","setOp","op","getPageRatio","includesPage","prevDs","newTS","entries","teamPages","record","teamPage","flatState","Team","setTeamState","setCode","setUserRec","setIO","loaded","setLoaded","setConnected","loadTeamNoteInfo","info","getTeamNoteState","teamNote","createFromTeamPages","roomInit","infoLoaded","stateLoaded","pushOperation","joined","members","showJoinMsg","leaved","showLeaveMsg","resetUser","close","Loading","LoginOutlined","LogoutOutlined","createVirtualCanvas","createElement","context","getContext","Error","ctx","clearRect"],"sourceRoot":""}