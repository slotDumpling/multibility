{"version":3,"file":"static/js/406.282c02d3.chunk.js","mappings":"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","sources":["lib/draw/drawCtrl.ts","lib/draw/StateSet.ts","component/reader/ReaderTools.tsx","component/ui/DigitDisplay.tsx","lib/array.ts","component/ui/IconFont.tsx","component/reader/PageNav.tsx","component/reader/DrawTools.tsx","component/draw/Tools.tsx","component/draw/Draw.tsx","lib/hooks.ts","lib/touch/touch.ts","component/reader/Reader.tsx","lib/network/io.ts","lib/draw/TeamState.ts","component/reader/Team.tsx","lib/draw/canvas.ts"],"sourcesContent":["import localforage from \"localforage\";\r\n\r\nexport interface DrawCtrl {\r\n  mode: \"draw\" | \"erase\" | \"select\" | \"text\";\r\n  finger: boolean;\r\n  lineWidth: number;\r\n  eraserWidth: number;\r\n  color: string;\r\n  highlight: boolean;\r\n}\r\n\r\nexport const defaultDrawCtrl: Readonly<DrawCtrl> = {\r\n  mode: \"draw\",\r\n  finger: true,\r\n  lineWidth: 10,\r\n  eraserWidth: 10,\r\n  color: \"#000000\",\r\n  highlight: false,\r\n};\r\n\r\nexport async function getDrawCtrl() {\r\n  let drawCtrl = (await localforage.getItem(\"DRAW_CTRL\")) as DrawCtrl | null;\r\n  if (!drawCtrl) {\r\n    drawCtrl = defaultDrawCtrl;\r\n    await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n  }\r\n  return drawCtrl;\r\n}\r\n\r\nexport async function saveDrawCtrl(drawCtrl: DrawCtrl) {\r\n  await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n}\r\n","import { DrawState, Operation, Stroke, WIDTH } from \"./DrawState\";\r\nimport { List, Map, Record } from \"immutable\";\r\nimport { NotePage } from \"../note/note\";\r\n\r\ninterface StateSetRecordType {\r\n  states: Map<string, DrawState>;\r\n  editStack: List<string>;\r\n  undoStack: List<string>;\r\n}\r\n\r\nconst defaultRecord: Readonly<StateSetRecordType> = {\r\n  states: Map(),\r\n  editStack: List(),\r\n  undoStack: List(),\r\n};\r\n\r\ntype StateSetRecord = Record<StateSetRecordType>;\r\nconst defaultFactory = Record(defaultRecord);\r\n\r\nexport type SetOperation = Operation & { pageID: string };\r\n\r\nexport class StateSet {\r\n  constructor(\r\n    private immutable: StateSetRecord,\r\n    public lastOp?: SetOperation\r\n  ) {}\r\n\r\n  static createFromPages(\r\n    pageRec: globalThis.Record<string, NotePage>,\r\n    width = WIDTH\r\n  ) {\r\n    return new StateSet(\r\n      defaultFactory().set(\r\n        \"states\",\r\n        Map(pageRec).map(({ state, ratio }) =>\r\n          DrawState.loadFromFlat(state, width, width * ratio)\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  getImmutable() {\r\n    return this.immutable;\r\n  }\r\n\r\n  getStates() {\r\n    return this.getImmutable().get(\"states\");\r\n  }\r\n\r\n  getOneState(pageID: string) {\r\n    return this.getStates().get(pageID);\r\n  }\r\n\r\n  getEditStack() {\r\n    return this.getImmutable().get(\"editStack\");\r\n  }\r\n\r\n  getUndoStack() {\r\n    return this.getImmutable().get(\"undoStack\");\r\n  }\r\n\r\n  setState(pageID: string, drawState: DrawState) {\r\n    const prevDS = this.getOneState(pageID);\r\n    if (!prevDS || prevDS === drawState) return this;\r\n    let currRecord = this.getImmutable()\r\n      .update(\"states\", (s) => s.set(pageID, drawState))\r\n      .update(\"editStack\", (l) => l.push(pageID))\r\n      .delete(\"undoStack\");\r\n\r\n    const { lastOp } = drawState;\r\n    const lastSetOp = lastOp && { ...lastOp, pageID };\r\n\r\n    return new StateSet(currRecord, lastSetOp);\r\n  }\r\n\r\n  // sync with mutation.\r\n  syncStrokeTime(pageID: string, stroke: Stroke) {\r\n    const prevDS = this.getOneState(pageID);\r\n    prevDS && DrawState.syncStrokeTime(prevDS, stroke);\r\n    return this;\r\n  }\r\n\r\n  addState(pageID: string, notePage: NotePage, width = WIDTH) {\r\n    const { state, ratio } = notePage;\r\n    const newDS = DrawState.loadFromFlat(state, width, width * ratio);\r\n    const currRecord = this.getImmutable().update(\"states\", (s) =>\r\n      s.set(pageID, newDS)\r\n    );\r\n    return new StateSet(currRecord);\r\n  }\r\n\r\n  deleteState(pageID: string) {\r\n    return new StateSet(\r\n      this.getImmutable().update(\"states\", (s) => s.delete(pageID))\r\n    );\r\n  }\r\n\r\n  isUndoable() {\r\n    return this.getEditStack().size > 0;\r\n  }\r\n\r\n  isRedoable() {\r\n    return this.getUndoStack().size > 0;\r\n  }\r\n\r\n  undo() {\r\n    if (!this.isUndoable()) return this;\r\n    const lastUid = this.getEditStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.undo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"editStack\", (s) => s.pop())\r\n        .update(\"undoStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  redo() {\r\n    if (!this.isRedoable()) return this;\r\n    const lastUid = this.getUndoStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.redo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"undoStack\", (s) => s.pop())\r\n        .update(\"editStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  getLastDS(): [string, DrawState] | undefined {\r\n    const pageID = this.lastOp?.pageID;\r\n    const ds = pageID && this.getOneState(pageID);\r\n    if (ds) return [pageID, ds];\r\n  }\r\n}\r\n","import { Button, Input, message } from \"antd\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nexport const AddPageButton = () => {\r\n  const { addFinalPage } = useContext(ReaderMethodCtx);\r\n  return (\r\n    <div className=\"add-btn-wrapper\">\r\n      <Button\r\n        type=\"dashed\"\r\n        icon={<PlusOutlined />}\r\n        block\r\n        onClick={addFinalPage}\r\n      >\r\n        New page\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const NoteHeader = () => {\r\n  const { noteInfo } = useContext(ReaderStateCtx);\r\n  const [noteName, setNoteName] = useState(\"\");\r\n  useEffect(() => {\r\n    if (!noteInfo) return;\r\n    setNoteName(noteInfo?.name);\r\n  }, [noteInfo]);\r\n\r\n  if (!noteInfo) return null;\r\n\r\n  return (\r\n    <div className=\"note-header\">\r\n      <Input value={noteName} bordered={false} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const showPageDelMsg = (onUndo: () => void) => {\r\n  message.warning({\r\n    content: (\r\n      <>\r\n        One page was deleted.\r\n        <Button\r\n          size=\"small\"\r\n          type=\"link\"\r\n          onClick={() => {\r\n            message.destroy(\"DELETE\");\r\n            onUndo();\r\n          }}\r\n        >\r\n          Undo\r\n        </Button>\r\n      </>\r\n    ),\r\n    key: \"DELETE\",\r\n    duration: 10,\r\n  });\r\n};\r\n","import classNames from \"classnames\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./digitDisplay.sass\";\r\n\r\nfunction num2digits(num: number): number[] {\r\n  return String(num)\r\n    .padStart(4, \"0\")\r\n    .split(\"\")\r\n    .map((s) => Number(s));\r\n}\r\n\r\nexport default function DigitDisplay({ value }: { value: number }) {\r\n  const [randomNum, setRandomNum] = useState(9999);\r\n  const displayNum = value >= 0 ? value : randomNum;\r\n  const digits = num2digits(displayNum);\r\n\r\n  function resetRandom() {\r\n    setRandomNum(Math.floor(Math.random() * 10000));\r\n  }\r\n  useEffect(() => {\r\n    if (value !== -1) return setRandomNum(9999);\r\n    const timer = setTimeout(resetRandom, 100);\r\n    return () => clearTimeout(timer);\r\n  }, [value]);\r\n\r\n  return (\r\n    <div className={classNames(\"digit-display\", { disabled: value === -2 })}>\r\n      {digits.map((d, idx) => (\r\n        <Digit key={idx} digit={d} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Digit({ digit }: { digit: number }) {\r\n  if (!(digit <= 9 && digit >= 0)) {\r\n    return <div className=\"digit\">*</div>;\r\n  }\r\n  return <div className=\"digit\">{digit}</div>;\r\n}\r\n","export function exchange<T>(list: T[], fromIndex: number, toIndex: number) {\r\n  const result = list.slice();\r\n  const [removed] = result.splice(fromIndex, 1);\r\n  result.splice(toIndex, 0, removed);\r\n  return result;\r\n}\r\n\r\nexport function insertAfter<T>(list: T[], prevItem: T, newItem: T) {\r\n  const prevIndex = list.indexOf(prevItem);\r\n  const curr = list.slice();\r\n  if (prevIndex === -1) return curr;\r\n  curr.splice(prevIndex + 1, 0, newItem);\r\n  return curr;\r\n}\r\n","import { createFromIconfontCN } from \"@ant-design/icons\";\r\n\r\nexport default createFromIconfontCN({\r\n  scriptUrl: \"//at.alicdn.com/t/font_3181679_lu0aajj9g9j.js\",\r\n});\r\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  MouseEvent,\r\n} from \"react\";\r\nimport {\r\n  MoreOutlined,\r\n  PlusOutlined,\r\n  CopyOutlined,\r\n  DeleteOutlined,\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  Draggable,\r\n  Droppable,\r\n  DropResult,\r\n  DragDropContext,\r\n} from \"react-beautiful-dnd\";\r\nimport { PageWrapper, ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport { Avatar, Button, Drawer, Menu, Popover, Tabs } from \"antd\";\r\nimport { AddPageButton } from \"./ReaderTools\";\r\nimport { exchange } from \"../../lib/array\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { UserAvatar } from \"./DrawTools\";\r\nimport IconFont from \"../ui/IconFont\";\r\nimport classNames from \"classnames\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport \"./preview.sass\";\r\n\r\nconst PageNavContent = ({\r\n  activeKey,\r\n  setActiveKey,\r\n}: {\r\n  activeKey: string;\r\n  setActiveKey: Setter<string>;\r\n}) => {\r\n  const { pageOrder, inviewPages } = useContext(ReaderStateCtx);\r\n  const { scrollPage, saveReorder } = useContext(ReaderMethodCtx);\r\n  const refRec = useRef<Record<string, HTMLElement>>({});\r\n  const listEl = useRef<HTMLDivElement>();\r\n\r\n  const onDragEnd = ({ source, destination }: DropResult) => {\r\n    if (!destination || !pageOrder) return;\r\n    const { index: fromIndex } = source;\r\n    const { index: toIndex } = destination;\r\n    if (fromIndex === toIndex) return;\r\n    const pageID = pageOrder[fromIndex];\r\n    const newOrder = exchange(pageOrder, fromIndex, toIndex);\r\n    saveReorder(newOrder, true);\r\n    requestAnimationFrame(() => scrollPage(pageID));\r\n  };\r\n\r\n  const currpageID = useMemo(\r\n    () => pageOrder?.find((pageID) => inviewPages.has(pageID)) || \"\",\r\n    [pageOrder, inviewPages]\r\n  );\r\n\r\n  useEffect(() => {\r\n    refRec.current[currpageID]?.scrollIntoView();\r\n    const itemHeight = refRec.current[currpageID]?.clientHeight || 0;\r\n    const listHeight = listEl.current?.clientHeight || 0;\r\n    listEl.current?.scrollBy(0, -listHeight / 2 + itemHeight / 2);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"preview-container\">\r\n      <PreviewTabs activeKey={activeKey} setActiveKey={setActiveKey} />\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"droppable\">\r\n          {({ droppableProps, innerRef, placeholder }) => (\r\n            <div\r\n              className=\"page-list\"\r\n              ref={(e) => {\r\n                innerRef(e);\r\n                if (e) listEl.current = e;\r\n              }}\r\n              {...droppableProps}\r\n            >\r\n              {pageOrder?.map((uid, index) => (\r\n                <PagePreview\r\n                  key={uid}\r\n                  uid={uid}\r\n                  mode={activeKey}\r\n                  pageIndex={index}\r\n                  currpageID={currpageID}\r\n                  refRec={refRec.current}\r\n                />\r\n              ))}\r\n              {placeholder}\r\n              {activeKey === \"ALL\" && <AddPageButton />}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PagePreview: FC<{\r\n  uid: string;\r\n  mode: string;\r\n  pageIndex: number;\r\n  currpageID: string;\r\n  refRec: Record<string, HTMLElement>;\r\n}> = ({ uid, pageIndex, mode, currpageID, refRec }) => {\r\n  const { stateSet, teamState, pageRec } = useContext(ReaderStateCtx);\r\n  const { scrollPage, switchPageMarked } = useContext(ReaderMethodCtx);\r\n  const { ignores } = useContext(TeamCtx);\r\n  const [chosen, setChosen] = useState(\"\");\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n  const userIDs = useMemo(\r\n    () =>\r\n      teamState\r\n        ?.getPageValidUsers(uid)\r\n        .filter((userID) => !ignores.has(userID)),\r\n    [teamState, ignores, uid]\r\n  );\r\n  if (!page || !drawState) return null;\r\n\r\n  if (\r\n    mode === \"WRITTEN\" &&\r\n    drawState.isEmpty() &&\r\n    (!teamStateMap || teamStateMap.every((ds) => ds.isEmpty()))\r\n  ) {\r\n    return null;\r\n  }\r\n  if (mode === \"MARKED\" && !page.marked) return null;\r\n\r\n  const switchMarked = (e: MouseEvent<HTMLSpanElement>) => {\r\n    switchPageMarked(uid);\r\n    e.stopPropagation();\r\n  };\r\n  const curr = currpageID === uid;\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={uid}\r\n      index={pageIndex}\r\n      isDragDisabled={mode !== \"ALL\"}\r\n    >\r\n      {(\r\n        { innerRef, draggableProps, dragHandleProps },\r\n        { isDragging: drag }\r\n      ) => {\r\n        const { image, marked } = page;\r\n        return (\r\n          <div\r\n            ref={(e) => {\r\n              innerRef(e);\r\n              if (e) refRec[uid] = e;\r\n            }}\r\n            className={classNames(\"page\", { curr, drag })}\r\n            onClick={() => scrollPage(uid)}\r\n            {...draggableProps}\r\n            {...dragHandleProps}\r\n          >\r\n            <PageWrapper\r\n              uid={uid}\r\n              drawState={teamStateMap?.get(chosen) || drawState}\r\n              teamStateMap={chosen ? undefined : teamStateMap}\r\n              thumbnail={image}\r\n              preview\r\n            />\r\n            <span\r\n              className={classNames(\"bookmark\", { marked })}\r\n              onClickCapture={switchMarked}\r\n            />\r\n            <span className=\"index\">{pageIndex + 1}</span>\r\n            <TeamAvatars\r\n              userIDs={userIDs}\r\n              chosen={chosen}\r\n              setChosen={setChosen}\r\n            />\r\n            <PreviewOption uid={uid} />\r\n          </div>\r\n        );\r\n      }}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst TeamAvatars: FC<{\r\n  userIDs?: string[];\r\n  chosen: string;\r\n  setChosen: Setter<string>;\r\n}> = ({ userIDs, chosen, setChosen }) => {\r\n  return (\r\n    <Avatar.Group\r\n      maxCount={2}\r\n      size=\"default\"\r\n      className={classNames(\"team-group\", { chosen })}\r\n    >\r\n      {userIDs?.map((userID) => (\r\n        <UserAvatar\r\n          key={userID}\r\n          size=\"default\"\r\n          userID={userID}\r\n          className=\"preview-avatar\"\r\n          chosen={chosen === userID}\r\n          onClick={() => setChosen((prev) => (prev === userID ? \"\" : userID))}\r\n        />\r\n      ))}\r\n    </Avatar.Group>\r\n  );\r\n};\r\n\r\nconst PreviewOption = ({ uid }: { uid: string }) => {\r\n  const [popShow, setPopShow] = useState(false);\r\n  const { addPage, deletePage } = useContext(ReaderMethodCtx);\r\n\r\n  const menu = (\r\n    <Menu\r\n      onClick={({ key, domEvent }) => {\r\n        if (key === \"ADD\") {\r\n          addPage(uid);\r\n        } else if (key === \"COPY\") {\r\n          addPage(uid, true);\r\n        } else if (key === \"DELETE\") {\r\n          deletePage(uid);\r\n        }\r\n        domEvent.stopPropagation();\r\n        setPopShow(false);\r\n      }}\r\n      items={[\r\n        { key: \"ADD\", icon: <PlusOutlined />, label: \"Add page\" },\r\n        { key: \"COPY\", icon: <CopyOutlined />, label: \"Duplicate\" },\r\n        {\r\n          key: \"DELETE\",\r\n          icon: <DeleteOutlined />,\r\n          label: \"Delete\",\r\n          danger: true,\r\n        },\r\n      ]}\r\n    ></Menu>\r\n  );\r\n  return (\r\n    <Popover\r\n      content={menu}\r\n      trigger=\"click\"\r\n      placement=\"left\"\r\n      visible={popShow}\r\n      onVisibleChange={setPopShow}\r\n      destroyTooltipOnHide\r\n    >\r\n      <span\r\n        className=\"option\"\r\n        onClickCapture={(e) => {\r\n          setPopShow((prev) => !prev);\r\n          e.stopPropagation();\r\n        }}\r\n      >\r\n        <MoreOutlined />\r\n      </span>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst PreviewTabs = ({\r\n  activeKey,\r\n  setActiveKey,\r\n}: {\r\n  activeKey: string;\r\n  setActiveKey: (key: string) => void;\r\n}) => {\r\n  const { TabPane } = Tabs;\r\n  return (\r\n    <Tabs\r\n      className=\"tabs\"\r\n      activeKey={activeKey}\r\n      onChange={setActiveKey}\r\n      tabBarGutter={10}\r\n      size=\"small\"\r\n      centered\r\n    >\r\n      <TabPane tab={<IconFont type=\"icon-uf_paper\" />} key=\"ALL\" />\r\n      <TabPane tab={<IconFont type=\"icon-bookmark2\" />} key=\"MARKED\" />\r\n      <TabPane tab={<IconFont type=\"icon-write\" />} key=\"WRITTEN\" />\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default function PageNav() {\r\n  const [navOn, setNavOn] = useState(false);\r\n  const [activeKey, setActiveKey] = useState<string>(\"ALL\");\r\n  const title = {\r\n    ALL: \"All Pages\",\r\n    MARKED: \"Bookmarks\",\r\n    WRITTEN: \"Notes\",\r\n  }[activeKey];\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        type=\"text\"\r\n        icon={navOn ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\r\n        onClick={() => setNavOn((prev) => !prev)}\r\n      />\r\n      <Drawer\r\n        visible={navOn}\r\n        onClose={() => setNavOn(false)}\r\n        width={200}\r\n        title={title}\r\n        closable={false}\r\n        className=\"preview-drawer\"\r\n        contentWrapperStyle={{ boxShadow: \"none\" }}\r\n        bodyStyle={{ padding: 0, overflow: \"hidden\" }}\r\n        headerStyle={{ textAlign: \"center\", borderTop: \"1px solid #eee\" }}\r\n        destroyOnClose\r\n      >\r\n        <PageNavContent activeKey={activeKey} setActiveKey={setActiveKey} />\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","import React, {\r\n  FC,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  CSSProperties,\r\n} from \"react\";\r\nimport {\r\n  Badge,\r\n  Alert,\r\n  Avatar,\r\n  Button,\r\n  Slider,\r\n  Divider,\r\n  message,\r\n  Popover,\r\n  Popconfirm,\r\n  ButtonProps,\r\n} from \"antd\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport DigitDisplay from \"../ui/DigitDisplay\";\r\nimport { colors, getHashedColor } from \"../../lib/color\";\r\nimport { getUserID, saveUserName } from \"../../lib/user\";\r\nimport { DrawCtrl, saveDrawCtrl } from \"../../lib/draw/drawCtrl\";\r\nimport PageNav from \"./PageNav\";\r\nimport {\r\n  HomeFilled,\r\n  EyeOutlined,\r\n  FormOutlined,\r\n  UndoOutlined,\r\n  RedoOutlined,\r\n  SaveOutlined,\r\n  TeamOutlined,\r\n  CopyOutlined,\r\n  CheckOutlined,\r\n  ExpandOutlined,\r\n  ReloadOutlined,\r\n  ShareAltOutlined,\r\n  HighlightOutlined,\r\n  DisconnectOutlined,\r\n  EyeInvisibleOutlined,\r\n  UsergroupAddOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { AvatarSize } from \"antd/lib/avatar/SizeContext\";\r\nimport { editNoteData } from \"../../lib/note/archive\";\r\nimport { putNote } from \"../../lib/network/http\";\r\nimport IconFont from \"../ui/IconFont\";\r\nimport classNames from \"classnames\";\r\nimport copy from \"clipboard-copy\";\r\nimport \"./drawTools.sass\";\r\n\r\nexport default function DrawTools({\r\n  handleUndo,\r\n  handleRedo,\r\n  instantSave,\r\n}: {\r\n  handleUndo: () => void;\r\n  handleRedo: () => void;\r\n  instantSave: () => Promise<void> | undefined;\r\n}) {\r\n  const { saved, stateSet, drawCtrl } = useContext(ReaderStateCtx);\r\n  const { setDrawCtrl } = useContext(ReaderMethodCtx);\r\n  const { teamOn } = useContext(TeamCtx);\r\n  const { mode, finger } = drawCtrl;\r\n\r\n  const nav = useNavigate();\r\n\r\n  const updateDrawCtrl = (updated: Partial<DrawCtrl>) => {\r\n    setDrawCtrl((prev) => {\r\n      const newCtrl = { ...prev, ...updated };\r\n      saveDrawCtrl(newCtrl);\r\n      return newCtrl;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"left\">\r\n        <Button\r\n          type=\"text\"\r\n          onClick={async () => {\r\n            await instantSave();\r\n            nav(\"/\");\r\n          }}\r\n          icon={<HomeFilled style={{ opacity: 0.8 }} />}\r\n        />\r\n        <div className=\"br\" />\r\n        <Button\r\n          type=\"text\"\r\n          className=\"save\"\r\n          onClick={instantSave}\r\n          disabled={saved}\r\n          icon={<SaveOutlined />}\r\n        />\r\n      </div>\r\n      <div className=\"middle\">\r\n        <Button\r\n          type=\"text\"\r\n          shape=\"circle\"\r\n          icon={<UndoOutlined />}\r\n          onClick={handleUndo}\r\n          disabled={!stateSet?.isUndoable()}\r\n        />\r\n        <Button\r\n          type=\"text\"\r\n          shape=\"circle\"\r\n          icon={<RedoOutlined />}\r\n          onClick={handleRedo}\r\n          disabled={!stateSet?.isRedoable()}\r\n        />\r\n        <Button\r\n          type={finger ? \"primary\" : \"text\"}\r\n          ghost={finger}\r\n          shape=\"circle\"\r\n          onClick={() => updateDrawCtrl({ finger: !finger })}\r\n          icon={<IconFont type=\"icon-finger\" />}\r\n        />\r\n        <div className=\"br\" />\r\n        <PenButton updateDrawCtrl={updateDrawCtrl} />\r\n        <EraserButton updateDrawCtrl={updateDrawCtrl} />\r\n        <Button\r\n          type={mode === \"text\" ? \"default\" : \"text\"}\r\n          shape=\"circle\"\r\n          onClick={() => updateDrawCtrl({ mode: \"text\" })}\r\n          icon={<IconFont type=\"icon-text1\" />}\r\n        />\r\n        <Button\r\n          type={mode === \"select\" ? \"default\" : \"text\"}\r\n          shape=\"circle\"\r\n          onClick={() => updateDrawCtrl({ mode: \"select\" })}\r\n          icon={<ExpandOutlined />}\r\n        />\r\n      </div>\r\n      <div className=\"right\">\r\n        {teamOn && <RoomInfo />}\r\n        {teamOn || <JoinRoom instantSave={instantSave} />}\r\n        <div className=\"br\" />\r\n        <PageNav />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nconst PenButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const { drawCtrl } = useContext(ReaderStateCtx);\r\n  const { mode } = drawCtrl;\r\n\r\n  const btnProps: ButtonProps = {\r\n    className: \"pen\",\r\n    shape: \"circle\",\r\n    icon: <HighlightOutlined />,\r\n  };\r\n  return mode === \"draw\" ? (\r\n    <Popover\r\n      content={<PenPanel updateDrawCtrl={updateDrawCtrl} drawCtrl={drawCtrl} />}\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button type=\"default\" {...btnProps} />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      onClick={() => updateDrawCtrl({ mode: \"draw\" })}\r\n      {...btnProps}\r\n    />\r\n  );\r\n};\r\n\r\nexport const PenPanel: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n  drawCtrl: DrawCtrl;\r\n}> = ({ updateDrawCtrl, drawCtrl }) => {\r\n  const { lineWidth, highlight, color } = drawCtrl;\r\n  const [tempLineWidth, setTempLineWidth] = useState(lineWidth);\r\n\r\n  return (\r\n    <div className=\"pen-panel\">\r\n      <div className=\"pen-status\">\r\n        <Slider\r\n          min={5}\r\n          max={100}\r\n          defaultValue={tempLineWidth}\r\n          onChange={setTempLineWidth}\r\n          onAfterChange={(lineWidth) => updateDrawCtrl({ lineWidth })}\r\n        />\r\n        <Button\r\n          type={highlight ? \"primary\" : \"text\"}\r\n          ghost={highlight}\r\n          shape=\"circle\"\r\n          icon={<IconFont type=\"icon-Highlight\" />}\r\n          onClick={() => updateDrawCtrl({ highlight: !highlight })}\r\n        />\r\n      </div>\r\n      <ColorSelect\r\n        color={color}\r\n        setColor={(c) => updateDrawCtrl({ color: c })}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ColorSelect: FC<{\r\n  color: string;\r\n  setColor: (color: string) => void;\r\n}> = ({ setColor, color }) => {\r\n  return (\r\n    <div className=\"color-select\">\r\n      {colors.map((c) => (\r\n        <label key={c}>\r\n          <input\r\n            checked={color === c}\r\n            type=\"radio\"\r\n            name=\"color\"\r\n            onChange={() => setColor(c)}\r\n          />\r\n          <div\r\n            className=\"circle\"\r\n            style={{ \"--circle-color\": c } as CSSProperties}\r\n          ></div>\r\n        </label>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EraserButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const {\r\n    drawCtrl: { eraserWidth, mode },\r\n  } = useContext(ReaderStateCtx);\r\n  const [tempEraserWidth, setTempEraserWidth] = useState(eraserWidth);\r\n\r\n  const content = (\r\n    <div className=\"pen-panel\">\r\n      <Slider\r\n        min={5}\r\n        max={100}\r\n        defaultValue={tempEraserWidth}\r\n        onChange={setTempEraserWidth}\r\n        onAfterChange={(eraserWidth) => updateDrawCtrl({ eraserWidth })}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const btnProps: ButtonProps = {\r\n    shape: \"circle\",\r\n    icon: <IconFont type=\"icon-eraser\" />,\r\n  };\r\n\r\n  return mode === \"erase\" ? (\r\n    <Popover\r\n      content={content}\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button type=\"default\" {...btnProps} />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      onClick={() => updateDrawCtrl({ mode: \"erase\" })}\r\n      {...btnProps}\r\n    />\r\n  );\r\n};\r\n\r\nconst UserCard: FC<{ userID: string }> = ({ userID }) => {\r\n  const [renaming, setRenaming] = useState(false);\r\n  const { ignores, setIgnores, resetIO, userRec } = useContext(TeamCtx);\r\n  const userInfo = userRec[userID];\r\n  useEffect(() => setRenaming(false), [userInfo]);\r\n  if (!userInfo) return null;\r\n\r\n  const { userName, online } = userInfo;\r\n  const self = userID === getUserID();\r\n  const ignored = ignores.has(userID) && !self;\r\n\r\n  const switchIgnore = () => {\r\n    setIgnores((prev) => {\r\n      if (prev.has(userID)) return prev.delete(userID);\r\n      return prev.add(userID);\r\n    });\r\n  };\r\n\r\n  const submitRename = (value: string) => {\r\n    const name = value.trim();\r\n    if (!name || name === userName) return setRenaming(false);\r\n    saveUserName(name);\r\n    resetIO();\r\n  };\r\n\r\n  return (\r\n    <div className={classNames(\"user-item\", { online })}>\r\n      <UserAvatar userID={userID} size=\"small\" className=\"room-avatar\" />\r\n      {renaming || <span className=\"user-name\">{userName}</span>}\r\n      {renaming && (\r\n        <Search\r\n          autoFocus\r\n          className=\"rename-input\"\r\n          defaultValue={userName}\r\n          onSearch={submitRename}\r\n          enterButton={<Button icon={<CheckOutlined />} />}\r\n        />\r\n      )}\r\n      {self ? (\r\n        renaming || (\r\n          <Button\r\n            type=\"text\"\r\n            icon={<FormOutlined />}\r\n            onClick={() => setRenaming(true)}\r\n          />\r\n        )\r\n      ) : (\r\n        <Button\r\n          type=\"text\"\r\n          icon={ignored ? <EyeInvisibleOutlined /> : <EyeOutlined />}\r\n          onClick={switchIgnore}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const UserAvatar: FC<{\r\n  userID: string;\r\n  size?: AvatarSize;\r\n  onClick?: () => void;\r\n  chosen?: boolean;\r\n  className?: string;\r\n}> = ({\r\n  userID,\r\n  size = \"default\",\r\n  onClick = () => {},\r\n  chosen = false,\r\n  className,\r\n}) => {\r\n  const { userRec } = useContext(TeamCtx);\r\n  const color = useMemo(() => getHashedColor(userID), [userID]);\r\n  const userInfo = userRec[userID];\r\n  if (!userInfo) return null;\r\n  const { userName } = userInfo;\r\n\r\n  return (\r\n    <Avatar\r\n      className={classNames(className, { chosen })}\r\n      size={size}\r\n      style={{ backgroundColor: color }}\r\n    >\r\n      <div\r\n        className=\"avatar-wrapper\"\r\n        onClickCapture={(e) => {\r\n          e.stopPropagation();\r\n          onClick();\r\n        }}\r\n      >\r\n        {userName?.slice(0, 3)}\r\n      </div>\r\n    </Avatar>\r\n  );\r\n};\r\n\r\nconst RoomInfo: FC = () => {\r\n  const { code, userRec, connected, loadInfo, resetIO } = useContext(TeamCtx);\r\n  const link = window.location.href;\r\n  const share = async () => {\r\n    const selfName = userRec[getUserID()]?.userName;\r\n    try {\r\n      await copy(`${selfName} shared a note with you at 𝐌𝐮𝐥𝐭𝐢𝐛𝐢𝐥𝐢𝐭𝐲.\\n${link}`);\r\n      message.destroy(\"copy\");\r\n      message.success({\r\n        content: \"Share link copied!\",\r\n        icon: <CopyOutlined />,\r\n        key: \"copy\",\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const userList = useMemo(() => {\r\n    const values = Object.values(userRec);\r\n    const selfID = getUserID();\r\n    const selfInfo = userRec[selfID];\r\n    const list = selfInfo ? [selfInfo] : [];\r\n    list.push(\r\n      ...values.filter(({ online, userID }) => online && userID !== selfID),\r\n      ...values.filter(({ online, userID }) => !online && userID !== selfID)\r\n    );\r\n    return list;\r\n  }, [userRec]);\r\n  const onlineNum = userList.filter((u) => u.online).length;\r\n\r\n  const content = (\r\n    <div className=\"team-popover\">\r\n      {connected || (\r\n        <Alert\r\n          className=\"disconn-alert\"\r\n          message=\"Network failed.\"\r\n          icon={<DisconnectOutlined />}\r\n          type=\"error\"\r\n          showIcon\r\n          banner\r\n        />\r\n      )}\r\n      <DigitDisplay value={code} />\r\n      <Button\r\n        icon={<ShareAltOutlined />}\r\n        className=\"share-btn\"\r\n        onClick={share}\r\n        block\r\n      >\r\n        Share\r\n      </Button>\r\n      <Divider />\r\n      <div className=\"user-list\">\r\n        {userList.map((u) => (\r\n          <UserCard key={u.userID} userID={u.userID} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const title = (\r\n    <div className=\"team-title\">\r\n      <span>Team info</span>\r\n      <Button\r\n        shape=\"circle\"\r\n        type=\"text\"\r\n        size=\"small\"\r\n        icon={<ReloadOutlined />}\r\n        onClick={() => {\r\n          loadInfo();\r\n          resetIO();\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Popover\r\n      content={content}\r\n      trigger=\"click\"\r\n      placement=\"bottomRight\"\r\n      title={title}\r\n      defaultVisible\r\n      getPopupContainer={(e) => e}\r\n    >\r\n      <Button\r\n        type=\"text\"\r\n        icon={\r\n          <Badge\r\n            status={connected ? \"success\" : \"error\"}\r\n            count={connected ? onlineNum : \"!\"}\r\n            size=\"small\"\r\n          >\r\n            <TeamOutlined />\r\n          </Badge>\r\n        }\r\n      />\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst JoinRoom: FC<{ instantSave: () => Promise<void> | undefined }> = ({\r\n  instantSave,\r\n}) => {\r\n  const { noteID } = useContext(ReaderStateCtx);\r\n  const nav = useNavigate();\r\n  const createRoom = async () => {\r\n    await instantSave();\r\n    const resCode = await putNote(noteID);\r\n    if (!resCode) {\r\n      message.error(\"Can't create room.\");\r\n      return;\r\n    }\r\n    await editNoteData(noteID, { team: true });\r\n    nav(\"/team/\" + noteID);\r\n  };\r\n  return (\r\n    <Popconfirm\r\n      placement=\"bottomRight\"\r\n      title=\"Enable team editing?\"\r\n      onConfirm={createRoom}\r\n      okText=\"Yes\"\r\n      cancelText=\"No\"\r\n    >\r\n      <Button type=\"text\" icon={<UsergroupAddOutlined />} />\r\n    </Popconfirm>\r\n  );\r\n};\r\n","import React, { useRef, useState } from \"react\";\nimport {\n  CopyOutlined,\n  DeleteOutlined,\n  LoadingOutlined,\n  BgColorsOutlined,\n  FontSizeOutlined,\n  FontColorsOutlined,\n  RotateRightOutlined,\n} from \"@ant-design/icons\";\nimport { Button, ButtonProps, InputNumber, Modal, Popover } from \"antd\";\nimport { ColorSelect, PenPanel } from \"../reader/DrawTools\";\nimport { SelectToolType, TextToolType } from \"./Draw\";\nimport { createWorker, Worker } from \"tesseract.js\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { useDrag } from \"@use-gesture/react\";\nimport { colors } from \"../../lib/color\";\nimport { createPortal } from \"react-dom\";\nimport IconFont from \"../ui/IconFont\";\nimport classNames from \"classnames\";\nimport copy from \"clipboard-copy\";\nimport \"./tools.sass\";\nimport \"animate.css\";\n\nconst getOcrWorker = (() => {\n  let worker: Worker;\n  return async () => {\n    if (worker) return worker;\n    worker = createWorker({ logger: console.log });\n    await worker.load();\n    await worker.loadLanguage(\"eng+chi_sim\");\n    await worker.initialize(\"eng+chi_sim\");\n    return worker;\n  };\n})();\n\nexport const SelectTool: SelectToolType = ({\n  onDelete,\n  onRotate,\n  onDuplicate,\n  mutateStyle,\n  rasterize,\n  currDrawCtrl,\n}) => {\n  const btnProps: ButtonProps = {\n    type: \"text\",\n    shape: \"round\",\n    size: \"small\",\n  };\n\n  const rotateEl = useRef<HTMLDivElement>(null);\n  const [dragged, setDragged] = useState(false);\n  const [transX, setTransX] = useState(0);\n  const gearStyle = { transform: `translateX(${transX}px)` };\n\n  const [rotateCount, setRotateCount] = useState(0);\n  const shakeShow = rotateCount % 4 === 1;\n  const btnClass = shakeShow\n    ? \"animate__animated animate__headShake\"\n    : undefined;\n\n  useDrag(\n    ({ first, last, offset, delta }) => {\n      setTransX(offset[0]);\n      onRotate(delta[0] / 2, last);\n      first && setDragged(true);\n      last && setDragged(false);\n    },\n    {\n      target: rotateEl,\n      filterTaps: true,\n      rubberband: 0.05,\n      bounds: { left: -90, right: 90 },\n    }\n  );\n\n  const [recoginzing, setRecoginzing] = useState(false);\n  const [modalShow, setModalShow] = useState(false);\n  const [text, setText] = useState(\"\");\n  const recognizeText = async () => {\n    setRecoginzing(true);\n    const imageData = rasterize();\n    try {\n      const worker = await getOcrWorker();\n      const result = await worker.recognize(imageData);\n      setText(result.data.text);\n      setModalShow(true);\n    } catch (e) {\n      console.error(e);\n    } finally {\n      setRecoginzing(false);\n    }\n  };\n\n  return createPortal(\n    <div className=\"select-tool\">\n      <Popover\n        trigger=\"click\"\n        placement=\"bottom\"\n        getPopupContainer={(e) => e}\n        destroyTooltipOnHide\n        content={\n          <PenPanel updateDrawCtrl={mutateStyle} drawCtrl={currDrawCtrl} />\n        }\n      >\n        <Button icon={<BgColorsOutlined />} {...btnProps} />\n      </Popover>\n      <div className={classNames(\"rotate-wrapper\", { dragged })} ref={rotateEl}>\n        <Button\n          className={btnClass}\n          icon={<RotateRightOutlined />}\n          onClick={() => {\n            setRotateCount((prev) => prev + 1);\n            onRotate(90, true);\n          }}\n          {...btnProps}\n        />\n        <div className=\"gear\" style={gearStyle} />\n      </div>\n      <Button icon={<CopyOutlined />} onClick={onDuplicate} {...btnProps} />\n      <Button\n        icon={recoginzing ? <LoadingOutlined /> : <IconFont type=\"icon-OCR\" />}\n        onClick={recognizeText}\n        {...btnProps}\n      />\n      <Button\n        danger\n        icon={<DeleteOutlined />}\n        onClick={onDelete}\n        {...btnProps}\n      />\n      <Modal\n        visible={modalShow}\n        title=\"OCR Result\"\n        onCancel={() => setModalShow(false)}\n        onOk={() => {\n          copy(text);\n          setModalShow(false);\n          setText(\"\");\n        }}\n        okText=\"Copy\"\n        destroyOnClose\n      >\n        <TextArea value={text} onChange={(e) => setText(e.target.value)} />\n      </Modal>\n    </div>,\n    document.body\n  );\n};\n\nexport const TextTool: TextToolType = ({ onSubmit, onCancel }) => {\n  const [text, setText] = useState(\"\");\n  const [fontSize, setFontSize] = useState(50);\n  const [color, setColor] = useState(colors[0]);\n  const [modalShow, setModalShow] = useState(true);\n\n  return (\n    <Modal\n      visible={modalShow}\n      title=\"Insert text\"\n      onCancel={() => {\n        setModalShow(false);\n        setTimeout(onCancel, 300);\n      }}\n      onOk={() => {\n        const content = text.trim();\n        if (!content) return onCancel();\n        onSubmit(content, fontSize, color);\n      }}\n      bodyStyle={{ paddingTop: 0 }}\n    >\n      <div className=\"insert-option\">\n        <span className=\"font-size\">\n          <FontSizeOutlined />\n          <span>Font size: </span>\n          <InputNumber size=\"small\" value={fontSize} onChange={setFontSize} />\n        </span>\n        <Popover\n          content={<ColorSelect color={color} setColor={setColor} />}\n          overlayStyle={{ width: 200 }}\n          placement=\"bottom\"\n        >\n          <Button\n            className=\"tag-btn\"\n            size=\"small\"\n            icon={<FontColorsOutlined />}\n          >\n            Font color\n          </Button>\n        </Popover>\n      </div>\n      <TextArea\n        autoFocus\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n      />\n    </Modal>\n  );\n};\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  TouchEvent,\r\n} from \"react\";\r\nimport { DrawState, Mutation, Stroke } from \"../../lib/draw/DrawState\";\r\nimport { defaultDrawCtrl, DrawCtrl } from \"../../lib/draw/drawCtrl\";\r\nimport { Setter, usePreventGesture } from \"../../lib/hooks\";\r\nimport { releaseCanvas } from \"../../lib/draw/canvas\";\r\nimport { isStylus } from \"../../lib/touch/touch\";\r\nimport { usePinch } from \"@use-gesture/react\";\r\nimport { v4 as getUid } from \"uuid\";\r\nimport { Set } from \"immutable\";\r\nimport paper from \"paper\";\r\nimport \"./draw.sass\";\r\n\r\nexport type SelectToolType = FC<{\r\n  onDelete: () => void;\r\n  onRotate: (angle: number, smooth?: boolean) => void;\r\n  onDuplicate: () => void;\r\n  mutateStyle: (updated: Partial<DrawCtrl>) => void;\r\n  rasterize: () => string;\r\n  currDrawCtrl: DrawCtrl;\r\n}>;\r\n\r\nexport type TextToolType = FC<{\r\n  onSubmit: (text: string, fontSize: number, color: string) => void;\r\n  onCancel: () => void;\r\n}>;\r\n\r\nconst PREVIEW_WIDTH = 200;\r\nconst {\r\n  Point,\r\n  Path,\r\n  Group,\r\n  Shape: { Rectangle },\r\n  Color,\r\n  Size,\r\n  Raster,\r\n} = paper;\r\n\r\nconst Draw: FC<{\r\n  drawState: DrawState;\r\n  otherStates?: DrawState[];\r\n  onChange?: Setter<DrawState>;\r\n  drawCtrl?: DrawCtrl;\r\n  readonly?: boolean;\r\n  preview?: boolean;\r\n  imgSrc?: string;\r\n  SelectTool?: SelectToolType;\r\n  TextTool?: TextToolType;\r\n}> = ({\r\n  drawState,\r\n  onChange = () => {},\r\n  otherStates,\r\n  drawCtrl = defaultDrawCtrl,\r\n  preview = false,\r\n  readonly = preview,\r\n  imgSrc,\r\n  SelectTool,\r\n  TextTool,\r\n}) => {\r\n  const { width, height } = drawState;\r\n  const { mode, color, finger, lineWidth, highlight, eraserWidth } = drawCtrl;\r\n\r\n  const canvasEl = useRef<HTMLCanvasElement>(null);\r\n  const scope = useRef(new paper.PaperScope());\r\n  const group = useRef<paper.Item[]>([]);\r\n  const path = useRef<paper.Path>();\r\n  const [erased, setErased] = useState(Set<string>());\r\n  const [currDrawCtrl, setCurrDrawCtrl] = useState(defaultDrawCtrl);\r\n\r\n  const [rect, setRect] = useState<paper.Shape.Rectangle>();\r\n  useEffect(() => {\r\n    if (!rect) return;\r\n    rect.onFrame = () => (rect.dashOffset += 3);\r\n    return () => void rect.remove();\r\n  }, [rect]);\r\n\r\n  const [selectedGroup, setSelectedGroup] = useState<paper.Group>();\r\n  useEffect(() => () => void selectedGroup?.remove(), [selectedGroup]);\r\n\r\n  const [selected, setSelected] = useState(false);\r\n  const paperMode = mode === \"select\" && selected ? \"selected\" : mode;\r\n  useEffect(() => {\r\n    if (mode !== \"select\") {\r\n      setSelected(false);\r\n      setRect(undefined);\r\n    }\r\n    if (mode !== \"text\") {\r\n      setPointText(undefined);\r\n    }\r\n  }, [mode]);\r\n  useEffect(() => {\r\n    if (selected) {\r\n      if (!rect?.strokeColor) return;\r\n      rect.strokeColor.alpha /= 2;\r\n    } else {\r\n      updateMutation();\r\n      setSelectedGroup(undefined);\r\n      setCurrDrawCtrl(defaultDrawCtrl);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selected]);\r\n\r\n  const ratio = useRef(1);\r\n  const updateRatio = () => {\r\n    const clientWidth = canvasEl.current?.clientWidth;\r\n    if (clientWidth) ratio.current = width / clientWidth;\r\n  };\r\n\r\n  const transformPoint = (projP: paper.Point) => {\r\n    scope.current.activate();\r\n    const { center, zoom } = scope.current.view;\r\n    const viewP = scope.current.view.projectToView(projP);\r\n    const absoluteP = viewP.multiply(ratio.current);\r\n    const offsetP = new Point(width, height)\r\n      .divide(2)\r\n      .subtract(center.multiply(zoom));\r\n    return absoluteP.subtract(offsetP).divide(zoom);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const setupPaper = () => {\r\n      if (!canvasEl.current) return;\r\n      scope.current.setup(canvasEl.current);\r\n\r\n      const r = preview ? PREVIEW_WIDTH / width : 1;\r\n      scope.current.view.viewSize = new Size(width, height).multiply(r);\r\n      scope.current.view.scale(r, new Point(0, 0));\r\n      paintBackground(scope.current, width, height);\r\n    };\r\n\r\n    setupPaper();\r\n    const cvs = canvasEl.current;\r\n    return () => void (cvs && releaseCanvas(cvs));\r\n  }, [height, width, preview]);\r\n\r\n  const setNewRect = (e: paper.MouseEvent) => {\r\n    updateRatio();\r\n    scope.current.activate();\r\n    const point = transformPoint(e.point);\r\n    const rectangle = startSelectRect(point);\r\n    setRect(rectangle);\r\n  };\r\n\r\n  const handleDown = {\r\n    draw() {\r\n      updateRatio();\r\n      scope.current.activate();\r\n      path.current = startStroke(color, lineWidth, highlight);\r\n    },\r\n    erase() {\r\n      updateRatio();\r\n      scope.current.activate();\r\n      path.current = startStroke(\"#0003\", eraserWidth);\r\n    },\r\n    select(e: paper.MouseEvent) {\r\n      setNewRect(e);\r\n    },\r\n    selected(e: paper.MouseEvent) {\r\n      const point = transformPoint(e.point);\r\n      if (rect && point.isInside(rect.strokeBounds)) return;\r\n      setNewRect(e);\r\n      setSelected(false);\r\n    },\r\n    text(e: paper.MouseEvent) {\r\n      updateRatio();\r\n      const point = transformPoint(e.point);\r\n      const t = new paper.PointText(point);\r\n      setPointText(t);\r\n    },\r\n  }[paperMode];\r\n\r\n  const handleDrag = {\r\n    draw(e: paper.MouseEvent) {\r\n      if (!path.current) return;\r\n      scope.current.activate();\r\n      const point = transformPoint(e.point);\r\n      path.current.add(point);\r\n      path.current.smooth();\r\n    },\r\n    erase(e: paper.MouseEvent) {\r\n      const eraserPath = path.current;\r\n      if (!eraserPath) return;\r\n      scope.current.activate();\r\n      const point = transformPoint(e.point);\r\n      eraserPath.add(point);\r\n      eraserPath.smooth();\r\n\r\n      const newErased = group.current\r\n        .filter((p) => !erased.has(p.name))\r\n        .filter((p) => p instanceof paper.Path && checkErase(p, eraserPath))\r\n        .map((p) => p.name);\r\n      setErased((prev) => prev.concat(newErased));\r\n    },\r\n    select(e: paper.MouseEvent) {\r\n      if (!rect) return;\r\n      scope.current.activate();\r\n      const delta = e.delta.multiply(ratio.current);\r\n      rect.size = rect.size.add(new Size(delta.x, delta.y));\r\n      rect.translate(delta.divide(2));\r\n    },\r\n    selected(e: paper.MouseEvent) {\r\n      if (!rect || !selectedGroup) return;\r\n      scope.current.activate();\r\n      const delta = e.delta.multiply(ratio.current);\r\n      rect.translate(delta);\r\n      selectedGroup.translate(delta);\r\n    },\r\n    text() {},\r\n  }[paperMode];\r\n\r\n  const handleUp = {\r\n    draw() {\r\n      if (!path.current || path.current.segments.length === 0) return;\r\n      scope.current.activate();\r\n      path.current.simplify();\r\n      const pathData = path.current.exportJSON();\r\n      path.current.remove();\r\n      onChange((prev) => DrawState.addStroke(prev, pathData));\r\n    },\r\n    erase() {\r\n      if (!path.current) return;\r\n      scope.current.activate();\r\n      path.current.remove();\r\n      onChange((prev) => DrawState.eraseStrokes(prev, erased.toArray()));\r\n      setErased(Set());\r\n    },\r\n    select() {\r\n      if (!rect) return;\r\n      const { width, height } = rect.size.abs();\r\n      if (width < 10 || height < 10) return setRect(undefined);\r\n\r\n      scope.current.activate();\r\n      const items = group.current;\r\n      const newSG = new Group(checkSelection(rect, items));\r\n      setSelectedGroup(newSG);\r\n      const tempStyle = parseGroupStyle(newSG);\r\n      setCurrDrawCtrl((prev) => ({ ...prev, ...tempStyle }));\r\n      setSelected(true);\r\n    },\r\n    selected() {},\r\n    text() {},\r\n  }[paperMode];\r\n\r\n  const handlePaper = () => {\r\n    if (readonly) return;\r\n    scope.current.view.onMouseDown = handleDown;\r\n    scope.current.view.onMouseDrag = handleDrag;\r\n    scope.current.view.onMouseUp = handleUp;\r\n  };\r\n  useEffect(handlePaper);\r\n\r\n  useEffect(() => {\r\n    if (!imgSrc) return;\r\n    const img = new Image();\r\n    img.src = imgSrc;\r\n    let raster: paper.Raster;\r\n\r\n    img.onload = () => {\r\n      scope.current.activate();\r\n      raster = new Raster(img);\r\n      scope.current.project.layers[0].addChild(raster);\r\n      raster.position = scope.current.view.center;\r\n      let r = width / img.width;\r\n      raster.scale(r);\r\n    };\r\n\r\n    return () => void raster?.remove();\r\n  }, [imgSrc, width]);\r\n\r\n  const mergedStrokes = useMemo(\r\n    () =>\r\n      otherStates\r\n        ? DrawState.mergeStates([drawState, ...otherStates])\r\n        : drawState.getStrokeList(),\r\n    [drawState, otherStates]\r\n  );\r\n\r\n  useEffect(() => {\r\n    group.current = [];\r\n    const othersGroup: paper.Item[] = [];\r\n\r\n    mergedStrokes.forEach((stroke) =>\r\n      paintStroke(\r\n        stroke,\r\n        scope.current,\r\n        drawState.hasStroke(stroke.uid) ? group.current : othersGroup,\r\n        erased.has(stroke.uid)\r\n      )\r\n    );\r\n\r\n    return () => {\r\n      group.current.forEach((item) => item.remove());\r\n      othersGroup.forEach((item) => item.remove());\r\n    };\r\n  }, [mergedStrokes, erased, drawState]);\r\n\r\n  const updateMutation = () => {\r\n    const list = selectedGroup?.children;\r\n    if (!list?.length) return;\r\n    const mutations: Mutation[] = list.map((p) => [p.name, p.exportJSON()]);\r\n    onChange((prev) => DrawState.mutateStrokes(prev, mutations));\r\n  };\r\n\r\n  const deleteSelected = () => {\r\n    const list = selectedGroup?.children;\r\n    if (!list?.length) return;\r\n\r\n    const deleted = list.map((item) => item.name);\r\n    onChange((prev) => DrawState.eraseStrokes(prev, deleted));\r\n    setRect(undefined);\r\n    setSelectedGroup(undefined);\r\n    setSelected(false);\r\n  };\r\n\r\n  const rotateSelected = (angle: number, smooth = false) => {\r\n    if (!selectedGroup) return;\r\n    let count = smooth ? 10 : 1;\r\n    const dAngle = angle / count;\r\n    const rotate = () => {\r\n      selectedGroup.rotate(dAngle, rect?.position);\r\n      rect?.rotate(dAngle, rect.position);\r\n      if (--count > 0) requestAnimationFrame(rotate);\r\n    };\r\n    rotate();\r\n  };\r\n\r\n  const mutateStyle = (updated: Partial<DrawCtrl>) => {\r\n    if (!selectedGroup) return;\r\n    scope.current.activate();\r\n    updateGroupStyle(selectedGroup, updated, currDrawCtrl.highlight);\r\n    setCurrDrawCtrl((prev) => ({ ...prev, ...updated }));\r\n  };\r\n\r\n  const duplicateSelected = () => {\r\n    scope.current.activate();\r\n    if (!rect || !selectedGroup) return;\r\n    const newSG = selectedGroup.clone();\r\n    updateMutation();\r\n    setSelectedGroup(newSG);\r\n\r\n    const { width, height } = rect.size;\r\n    const transP = new Point(width, height).divide(10);\r\n    newSG.translate(transP);\r\n    rect.translate(transP);\r\n    newSG.children.forEach((p) => (p.name = getUid()));\r\n  };\r\n\r\n  const rasterize = () => {\r\n    if (!selectedGroup) return \"\";\r\n    const raster = selectedGroup.rasterize();\r\n    const data = raster.toDataURL();\r\n    raster.remove();\r\n    return data;\r\n  };\r\n\r\n  const [pointText, setPointText] = useState<paper.PointText>();\r\n  useEffect(() => () => void pointText?.remove(), [pointText]);\r\n\r\n  const submitText = (text: string, fontSize: number, color = \"#000\") => {\r\n    if (!pointText) return;\r\n    pointText.content = text;\r\n    pointText.fontSize = fontSize;\r\n    pointText.fillColor = new Color(color);\r\n    const pathData = pointText.exportJSON();\r\n    onChange((prev) => DrawState.addStroke(prev, pathData));\r\n    setPointText(undefined);\r\n  };\r\n  const cancelText = () => setPointText(undefined);\r\n\r\n  usePreventGesture();\r\n  usePinch(\r\n    ({ memo, offset, last, first, origin }) => {\r\n      if (!canvasEl.current) return;\r\n\r\n      let lastScale, lastOX, lastOY, osX, osY: number;\r\n      if (first || !memo) {\r\n        updateRatio();\r\n        scope.current.activate();\r\n        const { x, y } = canvasEl.current.getBoundingClientRect();\r\n        [lastScale, [lastOX, lastOY], [osX, osY]] = [\r\n          1,\r\n          [origin[0] - x, origin[1] - y],\r\n          [x, y],\r\n        ];\r\n      } else [lastScale, [lastOX, lastOY], [osX, osY]] = memo;\r\n\r\n      const { view } = scope.current;\r\n      if (Math.abs(1 - offset[0]) < 0.05) offset[0] = 1;\r\n\r\n      let scale = first ? 1 : offset[0] / lastScale;\r\n      const r = ratio.current;\r\n      const [oX, oY] = [origin[0] - osX, origin[1] - osY];\r\n      const originViewP = new Point(oX, oY).multiply(r);\r\n      const originProjP = view.viewToProject(originViewP);\r\n\r\n      let aniCount = last ? 10 : 1;\r\n      scale = Math.pow(scale, 1 / aniCount);\r\n      const scaleView = () => {\r\n        view.scale(scale, originProjP);\r\n        if (--aniCount > 0) requestAnimationFrame(scaleView);\r\n      };\r\n      scaleView();\r\n\r\n      const [dX, dY] = [oX - lastOX, oY - lastOY];\r\n      const transP = new Point(dX, dY).multiply(r / offset[0]);\r\n      view.translate(transP);\r\n\r\n      if (!last) return [offset[0], [oX, oY], [osX, osY]];\r\n      putCenterBack(view);\r\n    },\r\n    {\r\n      scaleBounds: { max: 5, min: 0.3 },\r\n      rubberband: 0.5,\r\n      target: canvasEl,\r\n    }\r\n  );\r\n\r\n  const isEventValid = (e: TouchEvent) =>\r\n    isStylus(e) || (finger && e.touches.length === 1);\r\n  const preventTouch = (e: TouchEvent) =>\r\n    isEventValid(e) || e.stopPropagation();\r\n\r\n  return (\r\n    <div className=\"draw-wrapper\">\r\n      <canvas\r\n        ref={canvasEl}\r\n        className=\"draw-canvas\"\r\n        data-paper-hidpi={false}\r\n        onTouchStartCapture={preventTouch}\r\n        onTouchMoveCapture={preventTouch}\r\n      />\r\n      {SelectTool && paperMode === \"selected\" && (\r\n        <SelectTool\r\n          onDelete={deleteSelected}\r\n          onRotate={rotateSelected}\r\n          onDuplicate={duplicateSelected}\r\n          mutateStyle={mutateStyle}\r\n          rasterize={rasterize}\r\n          currDrawCtrl={currDrawCtrl}\r\n        />\r\n      )}\r\n      {TextTool && pointText && mode === \"text\" && (\r\n        <TextTool onCancel={cancelText} onSubmit={submitText} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Draw);\r\n\r\nconst paintStroke = (\r\n  stroke: Stroke,\r\n  scope: paper.PaperScope,\r\n  group?: paper.Item[],\r\n  erased = false\r\n) => {\r\n  let { pathData, uid } = stroke;\r\n  try {\r\n    scope.activate();\r\n    const item = scope.project.activeLayer.importJSON(pathData);\r\n    if (!item) return;\r\n    item.name = uid;\r\n    if (erased) item.opacity /= 2;\r\n    group?.push(item);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getCheckPoints = (() => {\r\n  const cache = new WeakMap<paper.Segment, paper.Point[]>();\r\n  return (segment: paper.Segment, width: number) => {\r\n    const cached = cache.get(segment);\r\n    if (cached) return cached;\r\n\r\n    const { point } = segment;\r\n    const prevPoint = segment.previous?.point;\r\n    if (!prevPoint) return [];\r\n    const delta = point.subtract(prevPoint);\r\n    const times = (delta.length / width) * 2;\r\n    const checkPoints: paper.Point[] = [];\r\n    for (let i = 0; i < times; i += 1) {\r\n      checkPoints.push(point.subtract(delta.multiply(i / times)));\r\n    }\r\n    cache.set(segment, checkPoints);\r\n    return checkPoints;\r\n  };\r\n})();\r\n\r\nconst checkErase = (checkedPath: paper.Path, eraserPath: paper.Path) => {\r\n  const curveBound = eraserPath.lastSegment.curve?.strokeBounds;\r\n  if (\r\n    !(checkedPath instanceof paper.Path) ||\r\n    !curveBound?.intersects(checkedPath.strokeBounds)\r\n  ) {\r\n    return false;\r\n  }\r\n\r\n  if (eraserPath.intersects(checkedPath)) return true;\r\n\r\n  const { strokeWidth, lastSegment } = eraserPath;\r\n  const checkPoints = getCheckPoints(lastSegment, strokeWidth);\r\n  return checkPoints.some((cPoint) => {\r\n    const d = checkedPath.getNearestPoint(cPoint)?.getDistance(cPoint);\r\n    return d && d < (checkedPath.strokeWidth + strokeWidth) / 2;\r\n  });\r\n};\r\n\r\nconst paintBackground = (\r\n  scope: paper.PaperScope,\r\n  width: number,\r\n  height: number\r\n) => {\r\n  scope.activate();\r\n  const bgRect = new Rectangle(new Point(0, 0), new Point(width, height));\r\n  bgRect.fillColor = new Color(\"#fff\");\r\n  scope.project.addLayer(new paper.Layer()).activate();\r\n  return bgRect;\r\n};\r\n\r\nconst startSelectRect = (point: paper.Point) => {\r\n  const rect = new Rectangle(point, new Size(0, 0));\r\n  rect.strokeColor = new Color(\"#1890ff\");\r\n  rect.strokeWidth = 3;\r\n  rect.dashOffset = 0;\r\n  rect.dashArray = [30, 20];\r\n  return rect;\r\n};\r\n\r\nconst startStroke = (color: string, lineWidth: number, highlight = false) => {\r\n  const path = new Path();\r\n  const strokeColor = new Color(color);\r\n  if (highlight) {\r\n    strokeColor.alpha /= 2;\r\n    path.blendMode = \"multiply\";\r\n  }\r\n  path.strokeColor = strokeColor;\r\n  path.strokeWidth = lineWidth;\r\n  path.strokeJoin = \"round\";\r\n  path.strokeCap = \"round\";\r\n  return path;\r\n};\r\n\r\nconst getCenterTranslate = (view: paper.View) => {\r\n  const { center, zoom } = view;\r\n  const { height, width } = view.viewSize;\r\n  const { x, y } = center;\r\n  if (zoom <= 1) return [width / 2 - x, height / 2 - y];\r\n\r\n  const dX = (width * (zoom - 1)) / zoom / 2;\r\n  const dY = (height * (zoom - 1)) / zoom / 2;\r\n  const [minX, maxX, minY, maxY] = [\r\n    width / 2 - dX,\r\n    width / 2 + dX,\r\n    height / 2 - dY,\r\n    height / 2 + dY,\r\n  ];\r\n\r\n  const deltaX = x < minX ? minX - x : x > maxX ? maxX - x : 0;\r\n  const deltaY = y < minY ? minY - y : y > maxY ? maxY - y : 0;\r\n  return [deltaX, deltaY];\r\n};\r\n\r\nconst putCenterBack = (view: paper.View) => {\r\n  const [deltaX, deltaY] = getCenterTranslate(view);\r\n  let count = 10;\r\n  const dP = new Point(deltaX, deltaY).divide(-count);\r\n  const move = () => {\r\n    view.translate(dP);\r\n    if (--count > 0) requestAnimationFrame(move);\r\n  };\r\n  move();\r\n};\r\n\r\nconst parseGroupStyle = (group: paper.Group) => {\r\n  const tempStyle: Partial<DrawCtrl> = {};\r\n  if (group.strokeColor) tempStyle.color = group.strokeColor.toCSS(true);\r\n  if (group.strokeWidth) tempStyle.lineWidth = group.strokeWidth;\r\n  if (group.children.every((p) => p.strokeColor?.alpha === 0.5))\r\n    tempStyle.highlight = true;\r\n  return tempStyle;\r\n};\r\n\r\nconst checkSelection = (rect: paper.Shape.Rectangle, items: paper.Item[]) => {\r\n  const bounds = rect.strokeBounds;\r\n  return items.filter((item) =>\r\n    item instanceof paper.Path\r\n      ? item.isInside(bounds) || item.intersects(rect)\r\n      : item.bounds.intersects(rect.bounds)\r\n  );\r\n};\r\n\r\nconst updateGroupStyle = (\r\n  group: paper.Group,\r\n  updated: Partial<DrawCtrl>,\r\n  prevHighLighted: boolean\r\n) => {\r\n  const { lineWidth, color, highlight } = updated;\r\n  if (color) group.strokeColor = new Color(color);\r\n  if (lineWidth) group.strokeWidth = lineWidth;\r\n  if (highlight === true || prevHighLighted === true) {\r\n    group.children.forEach((p) => {\r\n      const { strokeColor } = p;\r\n      if (!strokeColor) return;\r\n      if (strokeColor.alpha === 1) strokeColor.alpha /= 2;\r\n      p.blendMode = \"multiply\";\r\n    });\r\n  }\r\n  if (highlight === false) {\r\n    group.children.forEach((p) => {\r\n      const { strokeColor } = p;\r\n      if (!strokeColor) return;\r\n      strokeColor.alpha = 1;\r\n      p.blendMode = \"normal\";\r\n    });\r\n  }\r\n};\r\n","import { Dispatch, SetStateAction, useEffect, useMemo, useRef } from \"react\";\r\n\r\nexport function useObjectUrl(obj: Blob | MediaSource | undefined) {\r\n  const url = useMemo(\r\n    () => (obj ? URL.createObjectURL(obj) : undefined),\r\n    [obj]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const prevUrl = url || \"\";\r\n    return () => URL.revokeObjectURL(prevUrl);\r\n  }, [url]);\r\n\r\n  return url;\r\n}\r\n\r\nexport function useMounted() {\r\n  const _mounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    _mounted.current = true;\r\n    return () => {\r\n      _mounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  return _mounted;\r\n}\r\n\r\nexport function usePreventGesture() {\r\n  useEffect(() => {\r\n    const handler = (e: Event) => e.preventDefault();\r\n    document.addEventListener(\"gesturestart\", handler);\r\n    document.addEventListener(\"gesturechange\", handler);\r\n    document.addEventListener(\"gestureend\", handler);\r\n    return () => {\r\n      document.removeEventListener(\"gesturestart\", handler);\r\n      document.removeEventListener(\"gesturechange\", handler);\r\n      document.removeEventListener(\"gestureend\", handler);\r\n    };\r\n  }, []);\r\n}\r\n\r\nexport type Setter<T> = Dispatch<SetStateAction<T>>;\r\n","import { TouchEvent } from \"react\";\r\n\r\nexport type iOSTouch = Touch & {\r\n  force?: number;\r\n  touchType?: \"stylus\" | \"direct\";\r\n};\r\n\r\nexport function isStylus(e: TouchEvent) {\r\n  const touch = e.touches[0] as iOSTouch;\r\n  return touch?.touchType === \"stylus\";\r\n}\r\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useCallback,\r\n  createContext,\r\n} from \"react\";\r\nimport {\r\n  DrawCtrl,\r\n  getDrawCtrl,\r\n  defaultDrawCtrl,\r\n} from \"../../lib/draw/drawCtrl\";\r\nimport {\r\n  createPage,\r\n  defaultNotePage,\r\n  NoteInfo,\r\n  NotePage,\r\n} from \"../../lib/note/note\";\r\nimport { NewPageInfo, ReorderInfo, SyncInfo } from \"../../lib/network/io\";\r\nimport { useInViewport, useMemoizedFn, useSafeState } from \"ahooks\";\r\nimport { SetOperation, StateSet } from \"../../lib/draw/StateSet\";\r\nimport { loadNote, editNoteData } from \"../../lib/note/archive\";\r\nimport { AddPageButton, showPageDelMsg } from \"./ReaderTools\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { DrawState } from \"../../lib/draw/DrawState\";\r\nimport { updatePages } from \"../../lib/network/http\";\r\nimport { TeamState } from \"../../lib/draw/TeamState\";\r\nimport { SelectTool, TextTool } from \"../draw/Tools\";\r\nimport { insertAfter } from \"../../lib/array\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { debounce, once } from \"lodash\";\r\nimport { Map, Set } from \"immutable\";\r\nimport DrawTools from \"./DrawTools\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport Draw from \"../draw/Draw\";\r\nimport { message } from \"antd\";\r\nimport \"./reader.sass\";\r\n\r\nexport const ReaderStateCtx = createContext({\r\n  noteID: \"\",\r\n  noteInfo: undefined as NoteInfo | undefined,\r\n  stateSet: undefined as StateSet | undefined,\r\n  teamState: undefined as TeamState | undefined,\r\n  pageRec: undefined as Map<string, NotePage> | undefined,\r\n  pageOrder: undefined as string[] | undefined,\r\n  saved: true,\r\n  inviewPages: Set<string>(),\r\n  drawCtrl: defaultDrawCtrl,\r\n});\r\n\r\nexport const ReaderMethodCtx = createContext({\r\n  scrollPage: (pageID: string) => {},\r\n  switchPageMarked: (pageID: string) => {},\r\n  updateStateSet: (cb: (prevSS: StateSet) => StateSet) => {},\r\n  addPage: (prevPageID: string, copy?: boolean) => {},\r\n  addFinalPage: () => {},\r\n  deletePage: (pageID: string) => {},\r\n  saveReorder: async (order: string[], push: boolean) => {},\r\n  setInviewPages: (() => {}) as Setter<Set<string>>,\r\n  setDrawCtrl: (() => {}) as Setter<DrawCtrl>,\r\n});\r\n\r\nexport default function Reader() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const nav = useNavigate();\r\n\r\n  const [pageRec, setPageRec] = useState<Map<string, NotePage>>();\r\n  const [noteInfo, setNoteInfo] = useState<NoteInfo>();\r\n  const [stateSet, setStateSet] = useState<StateSet>();\r\n  const [drawCtrl, setDrawCtrl] = useState(defaultDrawCtrl);\r\n  const [inviewPages, setInviewPages] = useState(Set<string>());\r\n  const [pageOrder, setPageOrder] = useState<string[]>();\r\n  const [saved, setSaved] = useSafeState(true);\r\n\r\n  const refRec = useRef<Record<string, HTMLElement>>({});\r\n\r\n  const { io, teamOn, teamState, addTeamStatePage } = useContext(TeamCtx);\r\n\r\n  useEffect(() => {\r\n    const loadNotePages = async () => {\r\n      const storedNote = await loadNote(noteID);\r\n      if (!storedNote) {\r\n        message.error(\"Note not found\");\r\n        return nav(\"/\");\r\n      }\r\n      const { pageRec, pdf, pageOrder, ...noteInfo } = storedNote;\r\n      setPageRec(Map(pageRec));\r\n      setPageOrder(pageOrder);\r\n      setNoteInfo(noteInfo);\r\n      setStateSet(StateSet.createFromPages(pageRec));\r\n      setDrawCtrl(await getDrawCtrl());\r\n      if (teamOn) updatePages(noteID);\r\n    };\r\n    loadNotePages();\r\n  }, [nav, noteID, teamOn]);\r\n\r\n  useEffect(() => {\r\n    if (!noteInfo) return;\r\n    document.title = noteInfo.name + \" - Multibility\";\r\n  }, [noteInfo]);\r\n\r\n  const saver = useMemoizedFn(async () => {\r\n    const pr = pageRec?.toObject();\r\n    const canvas = document.querySelector(\"canvas\");\r\n    const thumbnail = canvas?.toDataURL();\r\n    await editNoteData(noteID, { pageRec: pr, thumbnail });\r\n    setSaved(true);\r\n  });\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const debouncedSave = useCallback(debounce(saver, 2000), [saver]);\r\n  const instantSave = debouncedSave.flush;\r\n\r\n  const savePageRec = (pageID: string, cb: (prev: NotePage) => NotePage) => {\r\n    setPageRec((prev) => prev?.update(pageID, defaultNotePage, cb));\r\n    setSaved(false);\r\n    debouncedSave();\r\n  };\r\n\r\n  const saveReorder = async (pageOrder: string[], push = false) => {\r\n    setPageOrder(pageOrder);\r\n    await editNoteData(noteID, { pageOrder });\r\n    await instantSave();\r\n    push && pushReorder(pageOrder);\r\n  };\r\n\r\n  const pushReorder = (pageOrder: string[]) => {\r\n    io?.emit(\"reorder\", { pageOrder });\r\n  };\r\n\r\n  const handleReorder = useMemoizedFn(\r\n    ({ deleted, pageOrder, prevOrder }: ReorderInfo) => {\r\n      saveReorder(pageOrder);\r\n      if (!deleted) return;\r\n      showPageDelMsg(() => saveReorder(prevOrder, true));\r\n    }\r\n  );\r\n\r\n  const handleNewPage = useMemoizedFn(\r\n    ({ pageOrder, pageID, newPage }: NewPageInfo) => {\r\n      saveReorder(pageOrder);\r\n      savePageRec(pageID, () => newPage);\r\n      setStateSet((prev) => prev?.addState(pageID, newPage));\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    io?.on(\"reorder\", handleReorder);\r\n    io?.on(\"newPage\", handleNewPage);\r\n    return () => void io?.removeAllListeners();\r\n  }, [io, handleReorder, handleNewPage]);\r\n\r\n  const pushOperation = (operation: SetOperation) => {\r\n    const handleSync = ({ pageID, stroke }: SyncInfo) =>\r\n      setStateSet((prev) => prev?.syncStrokeTime(pageID, stroke));\r\n\r\n    io?.emit(\"push\", { operation }, handleSync);\r\n  };\r\n\r\n  const pushNewPage = (\r\n    pageOrder: string[],\r\n    pageID: string,\r\n    newPage: NotePage\r\n  ) => {\r\n    const { image, marked, ...newTeamPage } = newPage;\r\n    io?.emit(\"newPage\", { pageOrder, pageID, newPage: newTeamPage });\r\n    addTeamStatePage(pageID, newPage);\r\n  };\r\n\r\n  const updatePageRec = (pageID: string, ds: DrawState) => {\r\n    const state = DrawState.flaten(ds);\r\n    savePageRec(pageID, (prev) => ({ ...prev, state }));\r\n  };\r\n\r\n  const updateStateSet = (cb: (prevSS: StateSet) => StateSet) => {\r\n    if (!stateSet) return;\r\n    const newSS = cb(stateSet);\r\n    setStateSet(newSS);\r\n    const lastDS = newSS.getLastDS();\r\n    const lastOp = newSS.lastOp;\r\n    if (!lastDS || !lastOp) return;\r\n    updatePageRec(...lastDS);\r\n    pushOperation(lastOp);\r\n  };\r\n\r\n  const switchPageMarked = (pageID: string) => {\r\n    savePageRec(pageID, (prev) => ({ ...prev, marked: !prev.marked }));\r\n  };\r\n\r\n  const scrollPage = (pageID: string) => {\r\n    refRec.current[pageID]?.scrollIntoView();\r\n  };\r\n\r\n  const addPage = (prevPageID: string, copy = false) => {\r\n    if (!pageOrder) return;\r\n    const prevPage = copy ? pageRec?.get(prevPageID) : undefined;\r\n    const [pageID, newPage] = createPage(prevPage);\r\n    const newOrder = insertAfter(pageOrder, prevPageID, pageID);\r\n    pushNewPage(newOrder, pageID, newPage);\r\n    saveReorder(newOrder);\r\n    savePageRec(pageID, () => newPage);\r\n    setStateSet((prev) => prev?.addState(pageID, newPage));\r\n  };\r\n\r\n  const addFinalPage = () => {\r\n    const lastPageID = pageOrder?.at(-1);\r\n    lastPageID && addPage(lastPageID);\r\n  };\r\n\r\n  const deletePage = (pageID: string) => {\r\n    const newOrder = pageOrder?.filter((id) => id !== pageID);\r\n    newOrder?.length && saveReorder(newOrder, true);\r\n  };\r\n\r\n  const renderResult = (\r\n    <div className=\"reader container\">\r\n      <DrawTools\r\n        handleUndo={() => updateStateSet((prev) => prev.undo())}\r\n        handleRedo={() => updateStateSet((prev) => prev.redo())}\r\n        instantSave={instantSave}\r\n      />\r\n      <main>\r\n        {pageOrder?.map((uid) => (\r\n          <section\r\n            key={uid}\r\n            className=\"note-page\"\r\n            ref={(e) => e && (refRec.current[uid] = e)}\r\n          >\r\n            <PageContainer uid={uid} />\r\n          </section>\r\n        ))}\r\n        <AddPageButton />\r\n      </main>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ReaderStateCtx.Provider\r\n      value={{\r\n        saved,\r\n        noteID,\r\n        pageRec,\r\n        drawCtrl,\r\n        noteInfo,\r\n        stateSet,\r\n        teamState,\r\n        pageOrder,\r\n        inviewPages,\r\n      }}\r\n    >\r\n      <ReaderMethodCtx.Provider\r\n        value={{\r\n          addPage,\r\n          scrollPage,\r\n          deletePage,\r\n          setDrawCtrl,\r\n          saveReorder,\r\n          addFinalPage,\r\n          updateStateSet,\r\n          setInviewPages,\r\n          switchPageMarked,\r\n        }}\r\n      >\r\n        {renderResult}\r\n      </ReaderMethodCtx.Provider>\r\n    </ReaderStateCtx.Provider>\r\n  );\r\n}\r\n\r\nconst PageContainer: FC<{ uid: string }> = ({ uid }) => {\r\n  const { pageRec, stateSet, teamState } = useContext(ReaderStateCtx);\r\n  const { updateStateSet } = useContext(ReaderMethodCtx);\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n  const updateState = (ds: DrawState) => {\r\n    updateStateSet((prev) => prev.setState(uid, ds));\r\n  };\r\n\r\n  if (!page || !drawState) return null;\r\n  return (\r\n    <PageWrapper\r\n      drawState={drawState}\r\n      teamStateMap={teamStateMap}\r\n      updateState={updateState}\r\n      pdfIndex={page.pdfIndex}\r\n      uid={uid}\r\n    />\r\n  );\r\n};\r\n\r\nexport const PageWrapper = ({\r\n  thumbnail,\r\n  drawState,\r\n  teamStateMap,\r\n  updateState,\r\n  pdfIndex,\r\n  preview = false,\r\n  uid,\r\n}: {\r\n  uid: string;\r\n  drawState: DrawState;\r\n  teamStateMap?: Map<string, DrawState>;\r\n  thumbnail?: string;\r\n  pdfIndex?: number;\r\n  updateState?: (ds: DrawState) => void;\r\n  preview?: boolean;\r\n}) => {\r\n  const { setInviewPages } = useContext(ReaderMethodCtx);\r\n  const { noteID } = useContext(ReaderStateCtx);\r\n  const [fullImg, setFullImg] = useState<string>();\r\n  const wrapperEl = useRef<HTMLDivElement>(null);\r\n  const [visible] = useInViewport(wrapperEl);\r\n\r\n  const { height, width } = drawState;\r\n  const ratio = height / width;\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const loadImage = useCallback(\r\n    once(async () => {\r\n      if (!pdfIndex) return;\r\n      const { getOnePageImage } = await import(\"../../lib/note/pdfImage\");\r\n      setFullImg(await getOnePageImage(noteID, pdfIndex));\r\n    }),\r\n    [pdfIndex, noteID]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (preview) return;\r\n    if (visible) {\r\n      loadImage();\r\n      setInviewPages((prev) => prev.add(uid));\r\n    } else {\r\n      setInviewPages((prev) => prev.delete(uid));\r\n    }\r\n  }, [visible, preview, uid, loadImage, setInviewPages]);\r\n\r\n  const { ignores } = useContext(TeamCtx);\r\n  const otherStates = useMemo(\r\n    () => teamStateMap?.deleteAll(ignores).toList().toArray(),\r\n    [teamStateMap, ignores]\r\n  );\r\n\r\n  const imageLoaded = fullImg || !pdfIndex;\r\n  const drawShow = visible && imageLoaded;\r\n  const maskShow = Boolean(preview || !drawShow);\r\n\r\n  return (\r\n    <div ref={wrapperEl} style={{ paddingTop: `${ratio * 100}%` }}>\r\n      {drawShow && (\r\n        <DrawWrapper\r\n          drawState={drawState}\r\n          otherStates={otherStates}\r\n          updateState={updateState}\r\n          imgSrc={fullImg || thumbnail}\r\n          preview={preview}\r\n        />\r\n      )}\r\n      {maskShow && <div className=\"mask\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DrawWrapper = ({\r\n  drawState,\r\n  updateState,\r\n  otherStates,\r\n  preview = false,\r\n  imgSrc,\r\n}: {\r\n  drawState: DrawState;\r\n  otherStates?: DrawState[];\r\n  updateState?: (ds: DrawState) => void;\r\n  preview?: boolean;\r\n  imgSrc?: string;\r\n}) => {\r\n  const { drawCtrl } = useContext(ReaderStateCtx);\r\n\r\n  const handleChange = useMemoizedFn(\r\n    (arg: ((s: DrawState) => DrawState) | DrawState) => {\r\n      if (!updateState) return;\r\n      const newDS = arg instanceof DrawState ? arg : arg(drawState);\r\n      updateState(newDS);\r\n    }\r\n  );\r\n\r\n  return preview ? (\r\n    <Draw\r\n      drawState={drawState}\r\n      otherStates={otherStates}\r\n      imgSrc={imgSrc}\r\n      readonly\r\n      preview\r\n    />\r\n  ) : (\r\n    <Draw\r\n      drawState={drawState}\r\n      otherStates={otherStates}\r\n      onChange={handleChange}\r\n      imgSrc={imgSrc}\r\n      drawCtrl={drawCtrl}\r\n      SelectTool={SelectTool}\r\n      TextTool={TextTool}\r\n    />\r\n  );\r\n};\r\nDrawWrapper.displayName = \"DrawWrapper\";\r\n","import { io } from \"socket.io-client\";\r\nimport { Stroke } from \"../draw/DrawState\";\r\nimport { NotePage } from \"../note/note\";\r\nimport { getUserID, getUserName } from \"../user\";\r\nimport { BASE_URL } from \"./http\";\r\n\r\nexport const IoFactory = (noteID: string) => () =>\r\n  io(BASE_URL, {\r\n    query: {\r\n      userID: getUserID(),\r\n      userName: getUserName(),\r\n      noteID,\r\n    },\r\n  });\r\n\r\nexport interface ReorderInfo {\r\n  pageOrder: string[];\r\n  prevOrder: string[];\r\n  deleted: boolean;\r\n}\r\n\r\nexport interface NewPageInfo {\r\n  pageOrder: string[];\r\n  pageID: string;\r\n  newPage: NotePage;\r\n}\r\n\r\nexport interface SyncInfo {\r\n  stroke: Stroke;\r\n  pageID: string;\r\n}\r\n","import { NotePage, TeamPage, TeamPageInfo } from \"../note/note\";\nimport { DrawState, WIDTH } from \"./DrawState\";\nimport { SetOperation } from \"./StateSet\";\nimport { Map, Record } from \"immutable\";\n\ninterface TeamStateRecordType {\n  pageStates: Map<string, Map<string, DrawState>>;\n  pageInfos: Map<string, TeamPageInfo>;\n}\n\nconst defaultRecord: Readonly<TeamStateRecordType> = {\n  pageStates: Map(),\n  pageInfos: Map(),\n};\n\ntype TeamStateRecord = Record<TeamStateRecordType>;\nconst defaultFactory = Record(defaultRecord);\n\nexport class TeamState {\n  constructor(private immutable: TeamStateRecord) {}\n\n  getImmutable() {\n    return this.immutable;\n  }\n\n  getPageStates() {\n    return this.getImmutable().get(\"pageStates\");\n  }\n\n  getPageInfos() {\n    return this.getImmutable().get(\"pageInfos\");\n  }\n\n  getOneState(pageID: string, userID: string) {\n    return this.getPageStates().get(pageID)?.get(userID);\n  }\n\n  getOnePageStateMap(pageID: string) {\n    return this.getPageStates().get(pageID);\n  }\n\n  getPageValidUsers(pageID: string) {\n    const map = this.getOnePageStateMap(pageID);\n    if (!map) return [];\n    return Array.from(map?.filter((ds) => !ds.isEmpty()).keys());\n  }\n\n  getPageRatio(pageID: string) {\n    return this.getPageInfos().get(pageID)?.ratio;\n  }\n\n  includesPage(pageID: string) {\n    return this.getPageStates().has(pageID);\n  }\n\n  setState(pageID: string, userID: string, drawState: DrawState) {\n    const pageMap = this.getPageStates().get(pageID);\n    if (!pageMap) return this;\n    return new TeamState(\n      this.getImmutable().update(\"pageStates\", (m) =>\n        m.set(pageID, pageMap.set(userID, drawState))\n      )\n    );\n  }\n\n  static createFromTeamPages(\n    teamPages: globalThis.Record<string, TeamPage>,\n    width = WIDTH\n  ) {\n    let record = defaultFactory();\n    Object.entries(teamPages).forEach(([pageID, teamPage]) => {\n      const { states, ratio } = teamPage;\n      const pageMap = Map(\n        Object.entries(states).map(([userID, flatState]) => [\n          userID,\n          DrawState.loadFromFlat(flatState, width, width * ratio),\n        ])\n      );\n      record = record\n        .update(\"pageStates\", (m) => m.set(pageID, pageMap))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }));\n    });\n    return new TeamState(record);\n  }\n\n  addPage(pageID: string, notePage: NotePage) {\n    const { ratio } = notePage;\n    return new TeamState(\n      this.getImmutable()\n        .update(\"pageStates\", (m) => m.set(pageID, Map()))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }))\n    );\n  }\n\n  pushOperation(setOp: SetOperation, userID: string, width = WIDTH) {\n    const { pageID, ...op } = setOp;\n    const ratio = this.getPageRatio(pageID);\n    if (!this.includesPage(pageID) || !ratio) return this;\n    const prevDs =\n      this.getOneState(pageID, userID) ||\n      DrawState.createEmpty(width, width * ratio);\n\n    const ds = DrawState.pushOperation(prevDs, op);\n    return this.setState(pageID, userID, ds);\n  }\n\n  resetUser(userID: string, pageRec: globalThis.Record<string, NotePage>) {\n    let newTS: TeamState = this;\n    for (let [pageID, { state, ratio }] of Object.entries(pageRec)) {\n      const prevDS = newTS.getOneState(pageID, userID);\n      if (!prevDS) continue;\n      const { width } = prevDS;\n      newTS = newTS.setState(\n        pageID,\n        userID,\n        DrawState.loadFromFlat(state, width, width * ratio)\n      );\n    }\n    return newTS;\n  }\n}\n","import React, { useState, useEffect, createContext, useCallback } from \"react\";\r\nimport { getTeamNoteState, loadTeamNoteInfo } from \"../../lib/network/http\";\r\nimport { LoginOutlined, LogoutOutlined } from \"@ant-design/icons\";\r\nimport { IoFactory, NewPageInfo } from \"../../lib/network/io\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { TeamState } from \"../../lib/draw/TeamState\";\r\nimport { getUserID, UserInfo } from \"../../lib/user\";\r\nimport { NotePage } from \"../../lib/note/note\";\r\nimport { Socket } from \"socket.io-client\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { message, Skeleton } from \"antd\";\r\nimport { Set } from \"immutable\";\r\nimport Reader from \"./Reader\";\r\n\r\nexport const TeamCtx = createContext({\r\n  io: undefined as Socket | undefined,\r\n  code: -2,\r\n  teamOn: false,\r\n  connected: false,\r\n  ignores: Set<string>(),\r\n  userRec: {} as Record<string, UserInfo>,\r\n  teamState: undefined as TeamState | undefined,\r\n  resetIO: () => {},\r\n  loadInfo: async () => false,\r\n  setIgnores: (() => {}) as Setter<Set<string>>,\r\n  addTeamStatePage: (pageID: string, newPage: NotePage) => {},\r\n});\r\n\r\nexport default function Team() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const [teamState, setTeamState] = useState<TeamState>();\r\n  const [code, setCode] = useState(-2);\r\n  const [userRec, setUserRec] = useState<Record<string, UserInfo>>({});\r\n  const [ignores, setIgnores] = useState(Set<string>());\r\n  const [io, setIO] = useState(IoFactory(noteID));\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [connected, setConnected] = useState(false);\r\n  const nav = useNavigate();\r\n\r\n  const loadState = useCallback(async () => {\r\n    const teamNote = await getTeamNoteState(noteID);\r\n    if (!teamNote) {\r\n      message.error(\"Failed loading the team note state\");\r\n      return false;\r\n    }\r\n    setTeamState(TeamState.createFromTeamPages(teamNote));\r\n    return true;\r\n  }, [noteID]);\r\n\r\n  const loadInfo = useCallback(async () => {\r\n    const info = await loadTeamNoteInfo(noteID);\r\n    if (!info) {\r\n      message.error(\"Failed loading the team note info\");\r\n      return false;\r\n    }\r\n    setCode(info.code);\r\n    return true;\r\n  }, [noteID]);\r\n\r\n  useEffect(() => {\r\n    const roomInit = async () => {\r\n      if ((await loadInfo()) && (await loadState())) setLoaded(true);\r\n      else return nav(\"/\");\r\n    };\r\n    roomInit();\r\n  }, [loadInfo, loadState, nav]);\r\n\r\n  useEffect(() => {\r\n    io.on(\"push\", ({ operation, userID }) => {\r\n      setTeamState((prev) => prev?.pushOperation(operation, userID));\r\n    });\r\n\r\n    io.on(\"join\", ({ joined, members }) => {\r\n      const { userID, userName } = joined;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return;\r\n      message.destroy(userID);\r\n      message.success({\r\n        content: `${userName} joined room`,\r\n        icon: <LoginOutlined />,\r\n        key: userID,\r\n      });\r\n    });\r\n\r\n    io.on(\"leave\", ({ leaved, members }) => {\r\n      const { userID, userName } = leaved;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return io.emit(\"join\");\r\n      message.destroy(userID);\r\n      message.warning({\r\n        content: `${userName} leaved room`,\r\n        icon: <LogoutOutlined />,\r\n        key: userID,\r\n      });\r\n    });\r\n\r\n    io.on(\"newPage\", (info: NewPageInfo) => {\r\n      const { pageID, newPage } = info;\r\n      setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n    });\r\n\r\n    io.on(\"reset\", ({ userID, pageRec }) => {\r\n      if (userID === getUserID()) return;\r\n      setTeamState((prev) => prev?.resetUser(userID, pageRec));\r\n    });\r\n\r\n    io.on(\"connect_error\", console.error);\r\n    io.on(\"connect\", () => setConnected(true));\r\n    io.on(\"disconnect\", () => setConnected(false));\r\n\r\n    return () => {\r\n      io.removeAllListeners();\r\n      io.close();\r\n    };\r\n  }, [io]);\r\n\r\n  const addTeamStatePage = (pageID: string, newPage: NotePage) => {\r\n    setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n  };\r\n\r\n  const resetIO = () => setIO(IoFactory(noteID));\r\n\r\n  return (\r\n    <Skeleton className=\"skeleton\" active loading={!loaded}>\r\n      <TeamCtx.Provider\r\n        value={{\r\n          io,\r\n          code,\r\n          teamOn: true,\r\n          ignores,\r\n          userRec,\r\n          connected,\r\n          teamState,\r\n          resetIO,\r\n          loadInfo,\r\n          setIgnores,\r\n          addTeamStatePage,\r\n        }}\r\n      >\r\n        <Reader />\r\n      </TeamCtx.Provider>\r\n    </Skeleton>\r\n  );\r\n}\r\n","export function createVirtualCanvas(width: number, height: number) {\r\n  const canvas = document.createElement(\"canvas\");\r\n  const context = canvas.getContext(\"2d\");\r\n  if (!context) {\r\n    throw new Error(\"can't get virtual canvas context\");\r\n  }\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n  return { canvas, context };\r\n}\r\n\r\nexport function releaseCanvas(canvas: HTMLCanvasElement) {\r\n  canvas.width = 1;\r\n  canvas.height = 1;\r\n  const ctx = canvas.getContext('2d');\r\n  ctx?.clearRect(0, 0, 1, 1);\r\n}\r\n"],"names":["defaultDrawCtrl","mode","finger","lineWidth","eraserWidth","color","highlight","getDrawCtrl","localforage","drawCtrl","defaultRecord","states","Map","editStack","List","undoStack","defaultFactory","Record","StateSet","immutable","lastOp","this","getImmutable","get","pageID","getStates","drawState","prevDS","getOneState","currRecord","update","s","set","l","push","delete","stroke","DrawState","notePage","width","WIDTH","state","ratio","newDS","getEditStack","size","getUndoStack","isUndoable","lastUid","last","lastSetOp","pop","isRedoable","ds","pageRec","map","AddPageButton","addFinalPage","useContext","ReaderMethodCtx","className","type","icon","PlusOutlined","block","onClick","DigitDisplay","value","useState","randomNum","setRandomNum","digits","String","padStart","split","Number","resetRandom","Math","floor","random","useEffect","timer","setTimeout","clearTimeout","classNames","disabled","d","idx","Digit","digit","insertAfter","list","prevItem","newItem","prevIndex","indexOf","curr","slice","splice","createFromIconfontCN","scriptUrl","PageNavContent","activeKey","setActiveKey","ReaderStateCtx","pageOrder","inviewPages","scrollPage","saveReorder","refRec","useRef","listEl","currpageID","useMemo","find","has","current","scrollIntoView","itemHeight","clientHeight","listHeight","scrollBy","PreviewTabs","onDragEnd","source","destination","fromIndex","index","toIndex","newOrder","result","removed","exchange","requestAnimationFrame","droppableId","droppableProps","innerRef","placeholder","ref","e","uid","PagePreview","pageIndex","stateSet","teamState","switchPageMarked","ignores","TeamCtx","chosen","setChosen","page","teamStateMap","getOnePageStateMap","userIDs","getPageValidUsers","filter","userID","isEmpty","every","marked","switchMarked","stopPropagation","draggableId","isDragDisabled","draggableProps","dragHandleProps","drag","isDragging","image","PageWrapper","undefined","thumbnail","preview","onClickCapture","TeamAvatars","PreviewOption","maxCount","UserAvatar","prev","popShow","setPopShow","addPage","deletePage","menu","key","domEvent","items","label","CopyOutlined","DeleteOutlined","danger","content","trigger","placement","visible","onVisibleChange","destroyTooltipOnHide","MoreOutlined","TabPane","Tabs","onChange","tabBarGutter","centered","tab","PageNav","navOn","setNavOn","title","ALL","MARKED","WRITTEN","MenuUnfoldOutlined","MenuFoldOutlined","onClose","closable","contentWrapperStyle","boxShadow","bodyStyle","padding","overflow","headerStyle","textAlign","borderTop","destroyOnClose","DrawTools","handleUndo","handleRedo","instantSave","saved","setDrawCtrl","teamOn","nav","useNavigate","updateDrawCtrl","updated","newCtrl","saveDrawCtrl","HomeFilled","style","opacity","SaveOutlined","shape","UndoOutlined","RedoOutlined","ghost","PenButton","EraserButton","ExpandOutlined","RoomInfo","JoinRoom","btnProps","HighlightOutlined","PenPanel","getPopupContainer","tempLineWidth","setTempLineWidth","min","max","defaultValue","onAfterChange","ColorSelect","setColor","c","colors","checked","name","tempEraserWidth","setTempEraserWidth","UserCard","renaming","setRenaming","setIgnores","resetIO","userInfo","userRec","userName","online","self","getUserID","ignored","Search","autoFocus","onSearch","trim","saveUserName","enterButton","CheckOutlined","FormOutlined","EyeInvisibleOutlined","EyeOutlined","add","getHashedColor","backgroundColor","code","connected","loadInfo","link","window","location","href","share","selfName","copy","message","console","log","userList","values","Object","selfID","selfInfo","onlineNum","u","length","DisconnectOutlined","showIcon","banner","ShareAltOutlined","ReloadOutlined","defaultVisible","status","count","TeamOutlined","noteID","createRoom","putNote","editNoteData","team","onConfirm","okText","cancelText","UsergroupAddOutlined","getOcrWorker","worker","createWorker","logger","load","loadLanguage","initialize","SelectTool","onDelete","onRotate","onDuplicate","mutateStyle","rasterize","currDrawCtrl","rotateEl","dragged","setDragged","transX","setTransX","gearStyle","transform","rotateCount","setRotateCount","btnClass","useDrag","first","offset","delta","target","filterTaps","rubberband","bounds","left","right","recoginzing","setRecoginzing","modalShow","setModalShow","text","setText","recognizeText","imageData","recognize","data","error","createPortal","BgColorsOutlined","RotateRightOutlined","LoadingOutlined","onCancel","onOk","TextArea","document","body","TextTool","onSubmit","fontSize","setFontSize","paddingTop","FontSizeOutlined","overlayStyle","FontColorsOutlined","Point","paper","Path","Group","Rectangle","Color","Size","Raster","Draw","otherStates","readonly","imgSrc","height","canvasEl","scope","group","path","Set","erased","setErased","setCurrDrawCtrl","rect","setRect","onFrame","dashOffset","remove","selectedGroup","setSelectedGroup","selected","setSelected","paperMode","setPointText","strokeColor","alpha","updateMutation","updateRatio","clientWidth","transformPoint","projP","activate","view","center","zoom","absoluteP","projectToView","multiply","offsetP","divide","subtract","setup","r","viewSize","scale","paintBackground","setupPaper","cvs","releaseCanvas","setNewRect","point","rectangle","startSelectRect","handleDown","draw","startStroke","erase","select","isInside","strokeBounds","t","handleDrag","smooth","eraserPath","newErased","p","checkErase","concat","x","y","translate","handleUp","segments","simplify","pathData","exportJSON","toArray","abs","newSG","checkSelection","tempStyle","parseGroupStyle","onMouseDown","onMouseDrag","onMouseUp","raster","img","Image","src","onload","project","layers","addChild","position","mergedStrokes","getStrokeList","othersGroup","forEach","paintStroke","hasStroke","item","children","mutations","pointText","handler","preventDefault","addEventListener","removeEventListener","usePinch","memo","origin","lastScale","lastOX","lastOY","osX","osY","getBoundingClientRect","oX","oY","originViewP","originProjP","viewToProject","aniCount","pow","scaleView","transP","putCenterBack","scaleBounds","preventTouch","touch","touches","touchType","isStylus","isEventValid","onTouchStartCapture","onTouchMoveCapture","deleted","angle","dAngle","rotate","clone","getUid","updateGroupStyle","toDataURL","fillColor","React","activeLayer","importJSON","getCheckPoints","cache","WeakMap","segment","cached","prevPoint","previous","times","checkPoints","i","checkedPath","curveBound","lastSegment","curve","intersects","strokeWidth","some","cPoint","getNearestPoint","getDistance","bgRect","addLayer","dashArray","blendMode","strokeJoin","strokeCap","dX","dY","minX","maxX","minY","maxY","getCenterTranslate","deltaX","deltaY","dP","move","toCSS","prevHighLighted","createContext","noteInfo","updateStateSet","cb","prevPageID","order","setInviewPages","Reader","useParams","setPageRec","setNoteInfo","setStateSet","setPageOrder","useSafeState","setSaved","io","addTeamStatePage","loadNotePages","loadNote","storedNote","pdf","createFromPages","updatePages","saver","useMemoizedFn","pr","toObject","canvas","querySelector","debouncedSave","useCallback","debounce","flush","savePageRec","defaultNotePage","pushReorder","emit","handleReorder","onUndo","prevOrder","duration","handleNewPage","newPage","addState","on","removeAllListeners","pushNewPage","newTeamPage","updatePageRec","newSS","operation","lastDS","getLastDS","syncStrokeTime","prevPage","createPage","renderResult","undo","redo","PageContainer","Provider","id","lastPageID","at","updateState","setState","pdfIndex","fullImg","setFullImg","wrapperEl","useInViewport","loadImage","once","getOnePageImage","deleteAll","toList","drawShow","maskShow","Boolean","DrawWrapper","handleChange","arg","displayName","IoFactory","BASE_URL","query","getUserName","pageStates","pageInfos","TeamState","getPageStates","Array","from","keys","getPageInfos","pageMap","m","setOp","op","getPageRatio","includesPage","prevDs","newTS","entries","teamPages","record","teamPage","flatState","Team","setTeamState","setCode","setUserRec","setIO","loaded","setLoaded","setConnected","loadState","getTeamNoteState","teamNote","createFromTeamPages","loadTeamNoteInfo","info","roomInit","pushOperation","joined","members","LoginOutlined","leaved","LogoutOutlined","resetUser","close","active","loading","createVirtualCanvas","createElement","context","getContext","Error","ctx","clearRect"],"sourceRoot":""}