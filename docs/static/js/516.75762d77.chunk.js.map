{"version":3,"file":"static/js/516.75762d77.chunk.js","mappings":"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","sources":["lib/draw/drawCtrl.ts","lib/draw/StateSet.ts","lib/touch/touch.ts","component/draw/Draw.tsx","component/reader/ReaderUtils.tsx","lib/array.ts","component/ui/IconFont.tsx","component/reader/tools/PenPanel.tsx","component/reader/tools/DrawTools.tsx","lib/scroll.ts","component/reader/header/Middle.tsx","component/widgets/UserAvatar.tsx","component/reader/PageNav.tsx","component/reader/header/Right.tsx","component/reader/header/Header.tsx","component/reader/Reader.tsx","lib/network/io.ts","lib/draw/TeamState.ts","component/reader/Team.tsx"],"sourcesContent":["import localforage from \"localforage\";\r\nexport interface DrawCtrl {\r\n  mode: \"draw\" | \"erase\" | \"select\" | \"text\";\r\n  finger: boolean;\r\n  lineWidth: number;\r\n  eraserWidth: number;\r\n  color: string;\r\n  highlight: boolean;\r\n  lasso: boolean;\r\n  widthList: number[];\r\n}\r\n\r\nexport const defaultWidthList = [10, 20, 30, 50];\r\nexport const defaultDrawCtrl: Readonly<DrawCtrl> = {\r\n  mode: \"draw\",\r\n  finger: true,\r\n  lineWidth: 10,\r\n  eraserWidth: 10,\r\n  color: \"#000000\",\r\n  highlight: false,\r\n  lasso: true,\r\n  widthList: defaultWidthList,\r\n};\r\n\r\nexport async function getDrawCtrl() {\r\n  let drawCtrl = await localforage.getItem<DrawCtrl>(\"DRAW_CTRL\");\r\n  if (!drawCtrl) {\r\n    drawCtrl = defaultDrawCtrl;\r\n    await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n  }\r\n  return drawCtrl;\r\n}\r\n\r\nexport async function saveDrawCtrl(drawCtrl: DrawCtrl) {\r\n  await localforage.setItem(\"DRAW_CTRL\", drawCtrl);\r\n}\r\n","import { DrawState, Operation, Stroke, WIDTH } from \"./DrawState\";\r\nimport { List, Map, Record } from \"immutable\";\r\nimport { NotePage } from \"../note/note\";\r\n\r\ninterface StateSetRecordType {\r\n  states: Map<string, DrawState>;\r\n  editStack: List<string>;\r\n  undoStack: List<string>;\r\n}\r\n\r\nconst defaultRecord: Readonly<StateSetRecordType> = {\r\n  states: Map(),\r\n  editStack: List(),\r\n  undoStack: List(),\r\n};\r\n\r\ntype StateSetRecord = Record<StateSetRecordType>;\r\nconst defaultFactory = Record(defaultRecord);\r\n\r\nexport type SetOperation = Operation & { pageID: string };\r\n\r\nexport class StateSet {\r\n  constructor(\r\n    private immutable: StateSetRecord,\r\n    public lastOp?: SetOperation\r\n  ) {}\r\n\r\n  static createFromPages(\r\n    pageRec: globalThis.Record<string, NotePage>,\r\n    width = WIDTH\r\n  ) {\r\n    return new StateSet(\r\n      defaultFactory().set(\r\n        \"states\",\r\n        Map(pageRec).map(({ state, ratio }) =>\r\n          DrawState.loadFromFlat(state, width, width * ratio)\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  getImmutable() {\r\n    return this.immutable;\r\n  }\r\n\r\n  getStates() {\r\n    return this.getImmutable().get(\"states\");\r\n  }\r\n\r\n  getOneState(pageID: string) {\r\n    return this.getStates().get(pageID);\r\n  }\r\n\r\n  getEditStack() {\r\n    return this.getImmutable().get(\"editStack\");\r\n  }\r\n\r\n  getUndoStack() {\r\n    return this.getImmutable().get(\"undoStack\");\r\n  }\r\n\r\n  setState(pageID: string, drawState: DrawState) {\r\n    const prevDS = this.getOneState(pageID);\r\n    if (!prevDS || prevDS === drawState) return this;\r\n    let currRecord = this.getImmutable()\r\n      .update(\"states\", (s) => s.set(pageID, drawState))\r\n      .update(\"editStack\", (l) => l.push(pageID))\r\n      .delete(\"undoStack\");\r\n\r\n    const { lastOp } = drawState;\r\n    const lastSetOp = lastOp && { ...lastOp, pageID };\r\n\r\n    return new StateSet(currRecord, lastSetOp);\r\n  }\r\n\r\n  // sync with mutation.\r\n  syncStrokeTime(pageID: string, stroke: Stroke) {\r\n    const prevDS = this.getOneState(pageID);\r\n    prevDS && DrawState.syncStrokeTime(prevDS, stroke);\r\n    return this;\r\n  }\r\n\r\n  addState(pageID: string, notePage: NotePage, width = WIDTH) {\r\n    const { state, ratio } = notePage;\r\n    const newDS = DrawState.loadFromFlat(state, width, width * ratio);\r\n    const currRecord = this.getImmutable().update(\"states\", (s) =>\r\n      s.set(pageID, newDS)\r\n    );\r\n    return new StateSet(currRecord);\r\n  }\r\n\r\n  deleteState(pageID: string) {\r\n    return new StateSet(\r\n      this.getImmutable().update(\"states\", (s) => s.delete(pageID))\r\n    );\r\n  }\r\n\r\n  isUndoable() {\r\n    return this.getEditStack().size > 0;\r\n  }\r\n\r\n  isRedoable() {\r\n    return this.getUndoStack().size > 0;\r\n  }\r\n\r\n  undo() {\r\n    if (!this.isUndoable()) return this;\r\n    const lastUid = this.getEditStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.undo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"editStack\", (s) => s.pop())\r\n        .update(\"undoStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  redo() {\r\n    if (!this.isRedoable()) return this;\r\n    const lastUid = this.getUndoStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.redo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"undoStack\", (s) => s.pop())\r\n        .update(\"editStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  getLastDS(): [string, DrawState] | undefined {\r\n    const pageID = this.lastOp?.pageID;\r\n    const ds = pageID && this.getOneState(pageID);\r\n    if (ds) return [pageID, ds];\r\n  }\r\n}\r\n","import { PointerEvent, TouchEvent, useEffect, useRef } from \"react\";\r\n\r\ntype iOSTouch = Touch & {\r\n  force?: number;\r\n  touchType?: \"stylus\" | \"direct\";\r\n};\r\n\r\nexport function isApplePencil(e: TouchEvent) {\r\n  const touch = e.touches[0] as iOSTouch;\r\n  return touch?.touchType === \"stylus\";\r\n}\r\n\r\nexport function usePreventTouch(\r\n  allowFinger: boolean\r\n): React.CanvasHTMLAttributes<HTMLCanvasElement> {\r\n  const isTouch = useRef(false);\r\n  const checkPoniter = (e: PointerEvent) =>\r\n    e.isPrimary && (isTouch.current = e.pointerType === \"touch\");\r\n\r\n  const isEventValid = (e: TouchEvent) =>\r\n    !isTouch.current ||\r\n    isApplePencil(e) ||\r\n    (allowFinger && e.touches.length === 1);\r\n\r\n  const preventTouch = (e: TouchEvent) =>\r\n    isEventValid(e) || e.stopPropagation();\r\n\r\n  return {\r\n    onPointerDownCapture: checkPoniter,\r\n    onPointerMoveCapture: checkPoniter,\r\n    onTouchStartCapture: preventTouch,\r\n    onTouchMoveCapture: preventTouch,\r\n  };\r\n}\r\n\r\nexport function usePreventGesture() {\r\n  useEffect(() => {\r\n    const handler = (e: Event) => e.preventDefault();\r\n    document.addEventListener(\"gesturestart\", handler);\r\n    document.addEventListener(\"gesturechange\", handler);\r\n    document.addEventListener(\"gestureend\", handler);\r\n    return () => {\r\n      document.removeEventListener(\"gesturestart\", handler);\r\n      document.removeEventListener(\"gesturechange\", handler);\r\n      document.removeEventListener(\"gestureend\", handler);\r\n    };\r\n  }, []);\r\n}\r\n","import React, {\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  Dispatch,\r\n  useEffect,\r\n  useCallback,\r\n  useDebugValue,\r\n  SetStateAction,\r\n  useImperativeHandle,\r\n} from \"react\";\r\nimport { usePreventTouch, usePreventGesture } from \"../../lib/touch/touch\";\r\nimport { DrawState, Mutation, Stroke } from \"../../lib/draw/DrawState\";\r\nimport { defaultDrawCtrl, DrawCtrl } from \"../../lib/draw/drawCtrl\";\r\nimport { releaseCanvas } from \"../../lib/draw/canvas\";\r\nimport { usePinch } from \"@use-gesture/react\";\r\nimport useSize from \"@react-hook/size\";\r\nimport { v4 as getUid } from \"uuid\";\r\nimport { Set } from \"immutable\";\r\nimport paper from \"paper\";\r\nimport \"./draw.sass\";\r\n\r\nconst { Path, Size, Point, Group, Color, Raster, Layer } = paper;\r\n\r\nexport type ActiveToolKey = \"\" | \"select\" | \"text\";\r\nexport interface DrawRefType {\r\n  deleteSelected: () => void;\r\n  rotateSelected: (angle: number, last?: boolean) => void;\r\n  duplicateSelected: () => void;\r\n  mutateStyle: (updated: Partial<DrawCtrl>) => void;\r\n  rasterize: () => string;\r\n  submitText: (text: string, fontSize: number, color: string) => void;\r\n  cancelText: () => void;\r\n}\r\ninterface DrawPropType {\r\n  drawState: DrawState;\r\n  otherStates?: DrawState[];\r\n  onChange?: Dispatch<SetStateAction<DrawState>>;\r\n  setActiveTool?: Dispatch<SetStateAction<ActiveToolKey>>;\r\n  drawCtrl?: DrawCtrl;\r\n  readonly?: boolean;\r\n  imgSrc?: string;\r\n}\r\ntype PaperHandler = ((e: paper.MouseEvent) => boolean | void) | null;\r\n\r\nconst Draw = React.forwardRef<DrawRefType, DrawPropType>(\r\n  (\r\n    {\r\n      drawState,\r\n      otherStates,\r\n      onChange = () => {},\r\n      drawCtrl = defaultDrawCtrl,\r\n      readonly = false,\r\n      imgSrc,\r\n      setActiveTool = () => {},\r\n    },\r\n    ref\r\n  ) => {\r\n    const { width, height } = drawState;\r\n    const { mode, color, finger, lineWidth, highlight, eraserWidth, lasso } =\r\n      drawCtrl;\r\n\r\n    const canvasEl = useRef<HTMLCanvasElement>(null);\r\n    const scope = useRef(new paper.PaperScope());\r\n    const [group, setGroup] = useState<paper.Item[]>([]);\r\n    const [erased, setErased] = useState(Set<string>());\r\n    const [path, setPath] = usePaperItem<paper.Path>();\r\n    const [rect, setRect] = usePaperItem<paper.Path.Rectangle>();\r\n\r\n    useEffect(() => {\r\n      const cvs = canvasEl.current;\r\n      const scp = scope.current;\r\n      if (!cvs) return;\r\n\r\n      scp.setup(cvs);\r\n      scp.settings.handleSize = 10;\r\n      scp.settings.hitTolerance = 40;\r\n      scp.project.addLayer(new Layer());\r\n      scp.project.addLayer(new Layer());\r\n      scp.project.layers[1].activate();\r\n      scp.project.layers.forEach((l) => (l.visible = false));\r\n\r\n      return () => {\r\n        scp.remove();\r\n        releaseCanvas(cvs);\r\n      };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      const bgRect = paintBackground(scope.current, width, height);\r\n      return () => void bgRect.remove();\r\n    }, [width, height]);\r\n\r\n    const [canvasWidth] = useSize(canvasEl);\r\n    useEffect(() => {\r\n      if (!canvasWidth) return;\r\n      const scp = scope.current;\r\n      const ratio = canvasWidth / width;\r\n      scp.view.viewSize = new Size(width, height).multiply(ratio);\r\n      scp.view.scale(ratio, new Point(0, 0));\r\n      scp.project.layers.forEach((l) => (l.visible = true));\r\n\r\n      return () => {\r\n        scp.project?.layers.forEach((l) => (l.visible = false));\r\n        scp.view?.scale(1 / ratio, new Point(0, 0));\r\n      };\r\n    }, [width, height, canvasWidth]);\r\n\r\n    useEffect(() => {\r\n      if (!imgSrc) return;\r\n      scope.current.activate();\r\n      const raster = new Raster(imgSrc);\r\n      raster.project.layers[0].addChild(raster);\r\n      raster.sendToBack();\r\n      raster.onLoad = () => {\r\n        requestAnimationFrame(() => {\r\n          raster.fitBounds(new paper.Rectangle(0, 0, width, height));\r\n          raster.bringToFront();\r\n        });\r\n      };\r\n\r\n      return () => void raster?.remove();\r\n    }, [imgSrc, width, height]);\r\n\r\n    const mergedStrokes = useMemo(\r\n      () =>\r\n        otherStates\r\n          ? DrawState.mergeStates(drawState, ...otherStates)\r\n          : drawState.getStrokeList(),\r\n      [drawState, otherStates]\r\n    );\r\n    useEffect(() => {\r\n      const tempGroup: paper.Item[] = [];\r\n      const othersGroup: paper.Item[] = [];\r\n\r\n      mergedStrokes.forEach((stroke) => {\r\n        const { uid } = stroke;\r\n        const item = paintStroke(stroke, scope.current, erased.has(uid));\r\n        if (!item) return;\r\n\r\n        if (drawState.hasStroke(uid)) tempGroup.push(item);\r\n        else othersGroup.push(item);\r\n      });\r\n      setGroup(tempGroup);\r\n\r\n      return () => {\r\n        tempGroup.forEach((item) => item.remove());\r\n        othersGroup.forEach((item) => item.remove());\r\n      };\r\n    }, [mergedStrokes, erased, drawState]);\r\n\r\n    const hitRef = useRef<paper.HitResult>();\r\n    const [selected, setSelected] = useState(false);\r\n    const paperMode = mode === \"select\" && selected ? \"selected\" : mode;\r\n    const [selectedIDs, setSelectedIDs] = useState<string[]>([]);\r\n    const selectedItems = useMemo(() => {\r\n      const IDSet = Set(selectedIDs);\r\n      return group.filter((item) => IDSet.has(item.name));\r\n    }, [group, selectedIDs]);\r\n\r\n    const resetSelect = useCallback(() => {\r\n      setSelected(false);\r\n      setPath(undefined);\r\n      setRect(undefined);\r\n    }, [setPath, setRect]);\r\n\r\n    useEffect(() => {\r\n      if (mode === \"select\") return resetSelect;\r\n    }, [mode, resetSelect]);\r\n    useEffect(() => resetSelect, [lasso, resetSelect]);\r\n\r\n    useEffect(() => {\r\n      if (selected)\r\n        return () => {\r\n          setSelectedIDs([]);\r\n          setActiveTool(\"\");\r\n        };\r\n    }, [selected, setActiveTool]);\r\n\r\n    const handleDown = {\r\n      draw() {\r\n        setPath(startStroke(color, lineWidth, highlight));\r\n      },\r\n      erase() {\r\n        setPath(startStroke(\"#ccc\", eraserWidth, true));\r\n      },\r\n      select(e: paper.MouseEvent) {\r\n        if (lasso) setPath(startStroke(\"#1890ff\", 5));\r\n        else setRect(startSelectRect(e.point));\r\n      },\r\n      selected(e: paper.MouseEvent) {\r\n        if (lasso) {\r\n          // if the point is outside of selection, reset selection\r\n          if (path?.contains(e.point)) return;\r\n          setPath(startStroke(\"#1890ff\", 5));\r\n        } else {\r\n          // check if the point hit the segment point.\r\n          const hitRes = rect?.hitTest(e.point, { segments: true });\r\n          hitRef.current = hitRes;\r\n          if (hitRes) return;\r\n          // if the point is outside of selection, reset selection\r\n          if (rect?.contains(e.point)) return;\r\n          setRect(startSelectRect(e.point));\r\n        }\r\n        setSelected(false);\r\n      },\r\n      text(e: paper.MouseEvent) {\r\n        const t = new paper.PointText(e.point);\r\n        setPointText(t);\r\n        setActiveTool(\"text\");\r\n      },\r\n    }[paperMode];\r\n\r\n    const handleDrag = {\r\n      draw(e: paper.MouseEvent) {\r\n        path?.add(e.point);\r\n        path?.smooth();\r\n      },\r\n      erase(e: paper.MouseEvent) {\r\n        if (!path) return;\r\n        path.add(e.point);\r\n        path.smooth();\r\n\r\n        const newErased = group\r\n          .filter((p) => !erased.has(p.name))\r\n          .filter((p) => checkErase(p, path))\r\n          .map((p) => p.name);\r\n        setErased((prev) => prev.concat(newErased));\r\n      },\r\n      select(e: paper.MouseEvent) {\r\n        if (lasso) {\r\n          path?.add(e.point);\r\n          path?.smooth();\r\n        } else if (rect) {\r\n          resizeRect(rect, e.delta);\r\n        }\r\n      },\r\n      selected(e: paper.MouseEvent) {\r\n        const hitRes = hitRef.current;\r\n        if (hitRes) {\r\n          // resize selected items\r\n          const moveP = hitRes.segment.point;\r\n          const baseP = hitRes.segment.next.next.point;\r\n          const diagonal = moveP.subtract(baseP);\r\n          const projection = e.point.subtract(baseP).project(diagonal);\r\n          const scale = projection.x / diagonal.x;\r\n          if (scale < 0) return;\r\n\r\n          rect?.scale(scale, baseP);\r\n          selectedItems.forEach((item) => {\r\n            item.scale(scale, baseP);\r\n            item.strokeWidth *= scale;\r\n          });\r\n        } else {\r\n          // move selected items\r\n          selectedItems.forEach((item) => item.translate(e.delta));\r\n          path?.translate(e.delta);\r\n          rect?.translate(e.delta);\r\n        }\r\n      },\r\n      text: null,\r\n    }[paperMode];\r\n\r\n    const handleUp = {\r\n      draw() {\r\n        if (!path || path.isEmpty()) return;\r\n        path.simplify();\r\n        const pathData = path.exportJSON();\r\n        setPath(undefined);\r\n        onChange((prev) => DrawState.addStroke(prev, pathData));\r\n      },\r\n      erase() {\r\n        setPath(undefined);\r\n        onChange((prev) => DrawState.eraseStrokes(prev, erased.toArray()));\r\n        setErased(Set());\r\n      },\r\n      select() {\r\n        let selection: string[];\r\n        if (lasso) {\r\n          if (!path || Math.abs(path.area) < 1_000) return setPath(undefined);\r\n          path.closePath();\r\n          path.simplify();\r\n          moveDash(path);\r\n          selection = checkPathSelection(path, group);\r\n        } else {\r\n          if (!rect || Math.abs(rect.area) < 1_000) return setRect(undefined);\r\n          selection = checkRectSelection(rect, group);\r\n        }\r\n        setSelectedIDs(selection);\r\n        setSelected(true);\r\n        setActiveTool(\"select\");\r\n      },\r\n      selected() {\r\n        updateMutation();\r\n      },\r\n      text: null,\r\n    }[paperMode];\r\n\r\n    const handlePaper = () => {\r\n      if (readonly) return;\r\n\r\n      const activate =\r\n        (handler: PaperHandler): PaperHandler =>\r\n        (e) => {\r\n          scope.current.activate();\r\n          if (handler) return handler(e);\r\n        };\r\n\r\n      scope.current.view.onMouseDown = activate(handleDown);\r\n      scope.current.view.onMouseDrag = activate(handleDrag);\r\n      scope.current.view.onMouseUp = activate(handleUp);\r\n    };\r\n    useEffect(handlePaper);\r\n\r\n    const updateMutation = () => {\r\n      if (!selectedItems?.length) return;\r\n      const mutations = selectedItems.map(\r\n        (p) => [p.name, p.exportJSON()] as Mutation\r\n      );\r\n      onChange((prev) => DrawState.mutateStrokes(prev, mutations));\r\n    };\r\n\r\n    const deleteSelected = () => {\r\n      setSelectedIDs([]);\r\n      resetSelect();\r\n      if (!selectedIDs.length) return;\r\n      onChange((prev) => DrawState.eraseStrokes(prev, selectedIDs));\r\n    };\r\n\r\n    const rotateSelected = (angle: number, last = false) => {\r\n      let aniCount = last ? 10 : 1;\r\n      const dAngle = angle / aniCount;\r\n      const center = (rect || path)?.position;\r\n      const rotate = () => {\r\n        selectedItems.forEach((item) => item.rotate(dAngle, center));\r\n        rect?.rotate(dAngle, center);\r\n        path?.rotate(dAngle, center);\r\n        if (--aniCount > 0) requestAnimationFrame(rotate);\r\n        else last && updateMutation();\r\n      };\r\n      rotate();\r\n    };\r\n\r\n    const mutateStyle = (updated: Partial<DrawCtrl>) => {\r\n      scope.current.activate();\r\n      updateGroupStyle(selectedItems, updated);\r\n      updateMutation();\r\n    };\r\n\r\n    const duplicateSelected = () => {\r\n      scope.current.activate();\r\n      const size = (rect || path)?.bounds.size;\r\n      if (!size) return;\r\n      const { width, height } = size;\r\n      const transP = new Point(width, height).divide(10);\r\n      const newSG = new Group(selectedItems).clone({ insert: false });\r\n      newSG.translate(transP);\r\n      rect?.translate(transP);\r\n      path?.translate(transP);\r\n\r\n      const mutations = newSG.children.map(\r\n        (item) => [getUid(), item.exportJSON()] as Mutation\r\n      );\r\n      onChange((prev) => DrawState.mutateStrokes(prev, mutations));\r\n      setSelectedIDs(mutations.map((m) => m[0]));\r\n    };\r\n\r\n    const rasterize = () =>\r\n      new Group(selectedItems).rasterize({ insert: false }).toDataURL();\r\n\r\n    const [pointText, setPointText] = usePaperItem<paper.PointText>();\r\n    const cancelText = useCallback(() => {\r\n      setPointText(undefined);\r\n      setActiveTool(\"\");\r\n    }, [setPointText, setActiveTool]);\r\n\r\n    useEffect(() => {\r\n      if (mode === \"text\") return cancelText;\r\n    }, [mode, cancelText]);\r\n\r\n    const submitText = (text: string, fontSize: number, color = \"#000\") => {\r\n      if (!pointText) return;\r\n      pointText.content = text;\r\n      pointText.fontSize = fontSize * 10;\r\n      pointText.fillColor = new Color(color);\r\n      const pathData = pointText.exportJSON();\r\n      onChange((prev) => DrawState.addStroke(prev, pathData));\r\n      cancelText();\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      deleteSelected,\r\n      duplicateSelected,\r\n      cancelText,\r\n      rotateSelected,\r\n      submitText,\r\n      mutateStyle,\r\n      rasterize,\r\n    }));\r\n\r\n    usePreventGesture();\r\n    usePinch(\r\n      ({ memo, offset: [scale], first, last, origin }) => {\r\n        scope.current.activate();\r\n        const { view } = scope.current;\r\n        const originRawP = new Point(origin);\r\n\r\n        let lastScale: number;\r\n        let lastOrigin, elPos: paper.Point;\r\n        if (first || !memo) {\r\n          const { x, y } = canvasEl.current!.getBoundingClientRect();\r\n          lastScale = 1;\r\n          elPos = new Point(x, y);\r\n          lastOrigin = originRawP.subtract(elPos);\r\n        } else {\r\n          [lastScale, lastOrigin, elPos] = memo;\r\n        }\r\n\r\n        const originViewP = originRawP.subtract(elPos);\r\n        const originPorjP = view.viewToProject(originViewP);\r\n\r\n        if (Math.abs(1 - scale) < 0.05) scale = 1;\r\n        let dScale = first ? 1 : scale / lastScale;\r\n        let aniCount = last ? 10 : 1;\r\n        dScale = Math.pow(dScale, 1 / aniCount);\r\n        const scaleView = () => {\r\n          view.scale(dScale, originPorjP);\r\n          if (--aniCount > 0) requestAnimationFrame(scaleView);\r\n          else if (last) putCenterBack(view, new Size(width, height));\r\n        };\r\n        scaleView();\r\n\r\n        const deltaP = originViewP.subtract(lastOrigin);\r\n        const transP = deltaP.divide(view.zoom);\r\n        view.translate(transP);\r\n\r\n        if (!last) return [scale, originViewP, elPos];\r\n      },\r\n      {\r\n        scaleBounds: { max: 10, min: 0.3 },\r\n        rubberband: 0.5,\r\n        target: canvasEl,\r\n      }\r\n    );\r\n\r\n    const touchHandler = usePreventTouch(finger);\r\n    return (\r\n      <div className=\"draw-wrapper\">\r\n        <canvas ref={canvasEl} className=\"draw-canvas\" {...touchHandler} />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nDraw.displayName = \"Draw\";\r\nexport default React.memo(Draw);\r\n\r\nfunction usePaperItem<T extends paper.Item>() {\r\n  const tuple = useState<T | undefined>();\r\n  const [item] = tuple;\r\n  useDebugValue(item);\r\n  useEffect(() => () => void item?.remove(), [item]);\r\n  return tuple;\r\n}\r\n\r\nconst paintStroke = (\r\n  stroke: Stroke,\r\n  scope: paper.PaperScope,\r\n  erased = false\r\n) => {\r\n  let { pathData, uid } = stroke;\r\n  try {\r\n    scope.activate();\r\n    const item = scope.project.activeLayer.importJSON(pathData);\r\n    if (!item) return;\r\n    item.name = uid;\r\n    if (erased) item.opacity = 0.5;\r\n    return item;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getCheckPoints = (() => {\r\n  const cache = new WeakMap<paper.Segment, paper.Point[]>();\r\n  return (segment: paper.Segment, strokeWidth: number) => {\r\n    const cached = cache.get(segment);\r\n    if (cached) return cached;\r\n\r\n    const { point } = segment;\r\n    const prevPoint = segment.previous?.point;\r\n    if (!prevPoint) return [];\r\n    const delta = point.subtract(prevPoint);\r\n    const times = (delta.length / strokeWidth) * 2;\r\n    const checkPoints: paper.Point[] = [];\r\n    for (let i = 0; i < times; i += 1) {\r\n      checkPoints.push(point.subtract(delta.multiply(i / times)));\r\n    }\r\n    cache.set(segment, checkPoints);\r\n    return checkPoints;\r\n  };\r\n})();\r\n\r\nconst checkErase = (item: paper.Item, eraserPath: paper.Path) => {\r\n  const curveBound = eraserPath.lastSegment.curve?.strokeBounds;\r\n  if (!(item instanceof paper.Path)) return false;\r\n  if (!curveBound?.intersects(item.strokeBounds)) return false;\r\n\r\n  if (eraserPath.intersects(item)) return true;\r\n\r\n  const { strokeWidth, lastSegment } = eraserPath;\r\n  const checkPoints = getCheckPoints(lastSegment, strokeWidth);\r\n  return checkPoints.some((cPoint) => {\r\n    const d = item.getNearestPoint(cPoint)?.getDistance(cPoint);\r\n    return d && d * 2 < item.strokeWidth + strokeWidth;\r\n  });\r\n};\r\n\r\nconst paintBackground = (\r\n  scope: paper.PaperScope,\r\n  width: number,\r\n  height: number\r\n) => {\r\n  scope.activate();\r\n  const bgRect = new Path.Rectangle(new Point(0, 0), new Point(width, height));\r\n  bgRect.fillColor = new Color(\"#fff\");\r\n  scope.project.layers[0].addChild(bgRect);\r\n  return bgRect;\r\n};\r\n\r\nconst startSelectRect = (point: paper.Point) => {\r\n  const rect = new Path.Rectangle(point, new Size(0, 0));\r\n  rect.strokeColor = new Color(\"#1890ff\");\r\n  rect.strokeWidth = 5;\r\n  rect.onFrame = () => {}; // the handle size bug\r\n  rect.selected = true;\r\n  return rect;\r\n};\r\n\r\nconst resizeRect = (rect: paper.Path.Rectangle, delta: paper.Point) => {\r\n  const { x, y } = delta;\r\n  const [, s1, s2, s3] = rect.segments;\r\n  s1.point = s1.point.add(new Point(x, 0));\r\n  s2.point = s2.point.add(delta);\r\n  s3.point = s3.point.add(new Point(0, y));\r\n};\r\n\r\nconst startStroke = (color: string, lineWidth: number, highlight = false) => {\r\n  const path = new Path();\r\n  const strokeColor = new Color(color);\r\n  if (highlight) {\r\n    strokeColor.alpha = 0.5;\r\n    path.blendMode = \"multiply\";\r\n  }\r\n  path.strokeColor = strokeColor;\r\n  path.strokeWidth = lineWidth;\r\n  path.strokeJoin = \"round\";\r\n  path.strokeCap = \"round\";\r\n  return path;\r\n};\r\n\r\nconst moveDash = (item: paper.Item) => {\r\n  item.dashOffset = 0;\r\n  item.dashArray = [30, 20];\r\n  item.onFrame = () => (item.dashOffset += 3);\r\n};\r\n\r\nconst getCenterTranslate = (view: paper.View, projSize: paper.Size) => {\r\n  const { x, y } = view.center;\r\n  const { width: viewW, height: viewH } = view.size;\r\n  const { width: projW, height: projH } = projSize;\r\n\r\n  const [minX, minY] = [Math.min(viewW, projW) / 2, Math.min(viewH, projH) / 2];\r\n  const [maxX, maxY] = [projW - minX, projH - minY];\r\n\r\n  const deltaX = x < minX ? minX - x : x > maxX ? maxX - x : 0;\r\n  const deltaY = y < minY ? minY - y : y > maxY ? maxY - y : 0;\r\n\r\n  return [deltaX, deltaY];\r\n};\r\n\r\nconst putCenterBack = (view: paper.View, projSize: paper.Size) => {\r\n  const [deltaX, deltaY] = getCenterTranslate(view, projSize);\r\n  let aniCount = 10;\r\n  const dP = new Point(deltaX, deltaY).divide(-aniCount);\r\n  const move = () => {\r\n    view.translate(dP);\r\n    if (--aniCount > 0) requestAnimationFrame(move);\r\n  };\r\n  move();\r\n};\r\n\r\nconst checkRectSelection = (rect: paper.Path.Rectangle, items: paper.Item[]) =>\r\n  items\r\n    .filter((item) =>\r\n      item instanceof paper.Path\r\n        ? item.intersects(rect) || item.isInside(rect.bounds)\r\n        : item.bounds.intersects(rect.bounds)\r\n    )\r\n    .map((item) => item.name);\r\n\r\nconst checkPathSelection = (selection: paper.Path, items: paper.Item[]) => {\r\n  const isInside = (p: paper.Path) => {\r\n    const res = p.subtract(selection, { insert: false, trace: false });\r\n    res.remove();\r\n    return res.isEmpty();\r\n  };\r\n\r\n  return items\r\n    .filter((item) => {\r\n      if (!item.bounds.intersects(selection.bounds)) return false;\r\n      let checkedP: paper.Path;\r\n      if (item instanceof paper.Path) {\r\n        checkedP = item;\r\n      } else {\r\n        checkedP = new Path.Rectangle(item.bounds);\r\n        checkedP.remove();\r\n      }\r\n      return checkedP.intersects(selection) || isInside(checkedP);\r\n    })\r\n    .map((item) => item.name);\r\n};\r\n\r\nconst updateGroupStyle = (items: paper.Item[], updated: Partial<DrawCtrl>) => {\r\n  const { lineWidth, color, highlight } = updated;\r\n  items.forEach((item) => {\r\n    if (item instanceof paper.PointText && color) {\r\n      const newColor = new Color(color);\r\n      item.fillColor = newColor;\r\n    }\r\n\r\n    if (!(item instanceof paper.Path)) return;\r\n\r\n    if (color) {\r\n      const newColor = new Color(color);\r\n      if (item.blendMode === \"multiply\") newColor.alpha = 0.5;\r\n      item.strokeColor = newColor;\r\n    }\r\n\r\n    if (lineWidth) item.strokeWidth = lineWidth;\r\n\r\n    if (!item.strokeColor || highlight === undefined) return;\r\n    item.strokeColor.alpha = highlight ? 0.5 : 1;\r\n    item.blendMode = highlight ? \"multiply\" : \"normal\";\r\n  });\r\n};\r\n","import { Button, message } from \"antd\";\r\nimport React, { useContext } from \"react\";\r\nimport { ReaderMethodCtx } from \"./Reader\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nexport const AddPageButton = () => {\r\n  const { addFinalPage } = useContext(ReaderMethodCtx);\r\n  return (\r\n    <div className=\"add-btn-wrapper\">\r\n      <Button\r\n        type=\"dashed\"\r\n        icon={<PlusOutlined />}\r\n        block\r\n        onClick={addFinalPage}\r\n      >\r\n        New page\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const showPageDelMsg = (onUndo: () => void) => {\r\n  message.warning({\r\n    content: (\r\n      <>\r\n        One page was deleted.\r\n        <Button\r\n          size=\"small\"\r\n          type=\"link\"\r\n          onClick={() => {\r\n            message.destroy(\"DELETE\");\r\n            onUndo();\r\n          }}\r\n        >\r\n          Undo\r\n        </Button>\r\n      </>\r\n    ),\r\n    key: \"DELETE\",\r\n    duration: 10,\r\n  });\r\n};\r\n","export function exchange<T>(list: T[], fromIndex: number, toIndex: number) {\r\n  const result = list.slice();\r\n  const [removed] = result.splice(fromIndex, 1);\r\n  result.splice(toIndex, 0, removed);\r\n  return result;\r\n}\r\n\r\nexport function insertAfter<T>(list: T[], prevItem: T, newItem: T) {\r\n  const prevIndex = list.indexOf(prevItem);\r\n  const curr = list.slice();\r\n  if (prevIndex === -1) return curr;\r\n  curr.splice(prevIndex + 1, 0, newItem);\r\n  return curr;\r\n}\r\n","import { createFromIconfontCN } from \"@ant-design/icons\";\r\n\r\nexport default createFromIconfontCN({\r\n  scriptUrl: \"//at.alicdn.com/t/font_3181679_yo844n7qgns.js\",\r\n});\r\n","import { CSSProperties, FC, useEffect, useMemo, useState } from \"react\";\r\nimport { defaultWidthList, DrawCtrl } from \"../../../lib/draw/drawCtrl\";\r\nimport { ColorCirle } from \"../../widgets/ColorCircle\";\r\nimport { WIDTH } from \"../../../lib/draw/DrawState\";\r\nimport { Popover, Segmented, Slider } from \"antd\";\r\nimport { allColors } from \"../../../lib/color\";\r\nimport { Setter } from \"../../../lib/hooks\";\r\nimport IconFont from \"../../ui/IconFont\";\r\nimport { List } from \"immutable\";\r\nimport \"./penPanel.sass\";\r\n\r\nexport const PenPanel: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n  drawCtrl: Partial<DrawCtrl>;\r\n}> = ({ updateDrawCtrl, drawCtrl }) => {\r\n  const { highlight, color } = drawCtrl;\r\n  const [panelBlur, setPanelBlur] = useState(false);\r\n\r\n  return (\r\n    <div className=\"pen-panel\" data-blur={panelBlur} data-hi={highlight}>\r\n      <div className=\"pen-status\">\r\n        <WidthSelect\r\n          updateDrawCtrl={updateDrawCtrl}\r\n          drawCtrl={drawCtrl}\r\n          setPanelBlur={setPanelBlur}\r\n        />\r\n        <HighlightSwitch checked={highlight} updateDrawCtrl={updateDrawCtrl} />\r\n      </div>\r\n      <ColorSelect\r\n        color={color || \"\"}\r\n        setColor={(c) => updateDrawCtrl({ color: c })}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const WidthSelect: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n  drawCtrl: Partial<DrawCtrl>;\r\n  setPanelBlur?: Setter<boolean>;\r\n  field?: \"lineWidth\" | \"eraserWidth\";\r\n}> = ({\r\n  updateDrawCtrl,\r\n  drawCtrl,\r\n  setPanelBlur = () => {},\r\n  field = \"lineWidth\",\r\n}) => {\r\n  const currWidth = drawCtrl[field];\r\n  const widthList = drawCtrl.widthList ?? defaultWidthList;\r\n  const color = field === \"lineWidth\" ? drawCtrl.color ?? \"#aaa\" : \"#aaa\";\r\n\r\n  const chosen = useMemo(\r\n    () => widthList.indexOf(currWidth ?? -1),\r\n    [currWidth, widthList]\r\n  );\r\n\r\n  const [popShow, setPopShow] = useState(List([false, false, false, false]));\r\n  useEffect(() => {\r\n    if (popShow.includes(true)) setPanelBlur(true);\r\n    else setPanelBlur(false);\r\n  }, [popShow, setPanelBlur]);\r\n\r\n  const realSizeStyle = (width: number) =>\r\n    ({\r\n      \"--real-size\": `calc(${100 / WIDTH}vw * ${width})`,\r\n    } as CSSProperties);\r\n\r\n  const options = [\r\n    { value: -1, label: null },\r\n    ...widthList.map((width, index) => ({\r\n      value: index,\r\n      label: (\r\n        <Popover\r\n          visible={popShow.get(index)}\r\n          onVisibleChange={(v) => setPopShow((prev) => prev.set(index, v))}\r\n          trigger={chosen === index ? [\"click\"] : []}\r\n          placement=\"bottom\"\r\n          destroyTooltipOnHide\r\n          content={\r\n            <Slider\r\n              min={5}\r\n              max={100}\r\n              className=\"ctrl-slider\"\r\n              defaultValue={width}\r\n              onAfterChange={(w) => {\r\n                if (widthList.includes(w)) {\r\n                  setPopShow((prev) => prev.set(index, false));\r\n                  return updateDrawCtrl({ [field]: w });\r\n                }\r\n                const newWL = widthList.slice();\r\n                newWL[index] = w;\r\n                updateDrawCtrl({ widthList: newWL, [field]: w });\r\n              }}\r\n            />\r\n          }\r\n        >\r\n          <div className=\"circle-wrapper\" style={realSizeStyle(width)}>\r\n            <ColorCirle className={\"width-circle \" + field} color={color} />\r\n          </div>\r\n        </Popover>\r\n      ),\r\n    })),\r\n  ];\r\n\r\n  return (\r\n    <Segmented\r\n      className=\"width-seg\"\r\n      value={chosen}\r\n      options={options}\r\n      onChange={(i) => updateDrawCtrl({ [field]: widthList[+i] ?? 10 })}\r\n    />\r\n  );\r\n};\r\n\r\nconst HighlightSwitch: FC<{\r\n  checked?: boolean;\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ checked = false, updateDrawCtrl }) => {\r\n  return (\r\n    <label className=\"hi-wrapper\">\r\n      <input\r\n        type=\"checkbox\"\r\n        name=\"highlight\"\r\n        checked={checked}\r\n        onChange={(e) => updateDrawCtrl({ highlight: e.target.checked })}\r\n      />\r\n      <div className=\"hi-switch\">\r\n        <IconFont type=\"icon-Highlight\" />\r\n      </div>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport const ColorSelect: FC<{\r\n  color: string;\r\n  setColor: (color: string) => void;\r\n}> = ({ setColor, color }) => {\r\n  return (\r\n    <div className=\"color-select\">\r\n      {allColors.map((c) => (\r\n        <label key={c}>\r\n          <input\r\n            checked={color === c}\r\n            type=\"radio\"\r\n            name=\"color\"\r\n            onChange={(e) => e.target.checked && setColor(c)}\r\n          />\r\n          <div\r\n            data-color={c}\r\n            className=\"circle\"\r\n            style={{ backgroundColor: c, borderColor: c }}\r\n          />\r\n        </label>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import { FC, RefObject, useContext, useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  CopyOutlined,\r\n  DeleteOutlined,\r\n  PictureOutlined,\r\n  BgColorsOutlined,\r\n  FontSizeOutlined,\r\n  CaretLeftOutlined,\r\n  FontColorsOutlined,\r\n  CaretRightOutlined,\r\n  RotateRightOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Button, ButtonProps, InputNumber, Modal, Popover } from \"antd\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { DrawCtrl } from \"../../../lib/draw/drawCtrl\";\r\nimport { ColorSelect, PenPanel } from \"./PenPanel\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { DrawRefType } from \"../../draw/Draw\";\r\nimport { useDrag } from \"@use-gesture/react\";\r\nimport { colors } from \"../../../lib/color\";\r\nimport { ReaderStateCtx } from \"../Reader\";\r\nimport { saveAs } from \"file-saver\";\r\nimport \"./drawTools.sass\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nexport const SelectTool: FC<{\r\n  drawRef: RefObject<DrawRefType>;\r\n  visible: boolean;\r\n}> = ({ drawRef, visible }) => (\r\n  <CSSTransition timeout={300} in={visible} unmountOnExit>\r\n    <SelectToolContent drawRef={drawRef} />\r\n  </CSSTransition>\r\n);\r\n\r\nexport const SelectToolContent: FC<{\r\n  drawRef: RefObject<DrawRefType>;\r\n}> = ({ drawRef }) => {\r\n  const btnProps: ButtonProps = {\r\n    type: \"text\",\r\n    shape: \"round\",\r\n    size: \"small\",\r\n  };\r\n\r\n  const [currDrawCtrl, setCurrDrawCtrl] = useState<Partial<DrawCtrl>>({});\r\n  const rotateEl = useRef<HTMLDivElement>(null);\r\n  const [dragged, setDragged] = useState(false);\r\n  const [transX, setTransX] = useState(0);\r\n  const gearStyle = { transform: `translateX(${transX}px)` };\r\n\r\n  useDrag(\r\n    ({ first, last, offset, delta }) => {\r\n      setTransX(offset[0]);\r\n      drawRef.current?.rotateSelected(delta[0] / 2, last);\r\n      first && setDragged(true);\r\n      last && setDragged(false);\r\n    },\r\n    {\r\n      target: rotateEl,\r\n      filterTaps: true,\r\n      rubberband: 0.05,\r\n      bounds: { left: -90, right: 90 },\r\n    }\r\n  );\r\n\r\n  const getRaster = () => {\r\n    if (!drawRef.current) return;\r\n    const imageData = drawRef.current.rasterize();\r\n    Modal.confirm({\r\n      title: \"Screenshot\",\r\n      content: <img className=\"raster\" src={imageData} alt=\"raster\" />,\r\n      className: \"raster-modal\",\r\n      icon: <PictureOutlined />,\r\n      okText: \"Save\",\r\n      onOk: () => saveAs(imageData, \"screenshot\"),\r\n    });\r\n  };\r\n\r\n  return createPortal(\r\n    <div className=\"select-tool\">\r\n      <Popover\r\n        trigger=\"click\"\r\n        placement=\"bottom\"\r\n        getPopupContainer={(e) => e.parentElement!}\r\n        destroyTooltipOnHide\r\n        content={\r\n          <PenPanel\r\n            updateDrawCtrl={(updated) => {\r\n              setCurrDrawCtrl((prev) => ({ ...prev, ...updated }));\r\n              drawRef.current?.mutateStyle(updated);\r\n            }}\r\n            drawCtrl={currDrawCtrl}\r\n          />\r\n        }\r\n      >\r\n        <Button icon={<BgColorsOutlined />} {...btnProps} />\r\n      </Popover>\r\n      <div className=\"rotate-wrapper\" data-dragged={dragged} ref={rotateEl}>\r\n        <Button\r\n          icon={<RotateRightOutlined />}\r\n          onClick={() => drawRef.current?.rotateSelected(90, true)}\r\n          {...btnProps}\r\n        />\r\n        <CaretLeftOutlined className=\"arrow left\" />\r\n        <CaretRightOutlined className=\"arrow right\" />\r\n        <div className=\"gear\" style={gearStyle} />\r\n      </div>\r\n      <Button\r\n        icon={<CopyOutlined />}\r\n        onClick={() => drawRef.current?.duplicateSelected()}\r\n        {...btnProps}\r\n      />\r\n      <Button icon={<PictureOutlined />} onClick={getRaster} {...btnProps} />\r\n      <Button\r\n        danger\r\n        icon={<DeleteOutlined />}\r\n        onClick={() => drawRef.current?.deleteSelected()}\r\n        {...btnProps}\r\n      />\r\n    </div>,\r\n    document.body\r\n  );\r\n};\r\n\r\nexport const TextTool: FC<{\r\n  drawRef: RefObject<DrawRefType>;\r\n  visible: boolean;\r\n}> = ({ visible, drawRef }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [fontSize, setFontSize] = useState(5);\r\n  const [color, setColor] = useState(colors[0]);\r\n  const { forceLight } = useContext(ReaderStateCtx);\r\n\r\n  useEffect(() => {\r\n    setText(\"\");\r\n    setFontSize(5);\r\n    setColor(colors[0]);\r\n  }, [visible]);\r\n\r\n  const fontSizeInput = (\r\n    <span className=\"font-size\">\r\n      <FontSizeOutlined />\r\n      <span>Font size: </span>\r\n      <InputNumber\r\n        min={1}\r\n        size=\"small\"\r\n        value={fontSize}\r\n        onChange={setFontSize}\r\n      />\r\n    </span>\r\n  );\r\n\r\n  const fontColorBtn = (\r\n    <Popover\r\n      content={<ColorSelect color={color} setColor={setColor} />}\r\n      overlayStyle={{ width: 200 }}\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e.parentElement!}\r\n    >\r\n      <Button\r\n        size=\"small\"\r\n        icon={<FontColorsOutlined className=\"font-icon\" style={{ color }} />}\r\n      >\r\n        Font color\r\n      </Button>\r\n    </Popover>\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      title=\"Insert text\"\r\n      onCancel={() => drawRef.current?.cancelText()}\r\n      onOk={() => {\r\n        const content = text.trim();\r\n        if (!content) return drawRef.current?.cancelText();\r\n        drawRef.current?.submitText(content, fontSize, color);\r\n      }}\r\n      bodyStyle={{ paddingTop: 0 }}\r\n      destroyOnClose\r\n    >\r\n      <div className=\"insert-option\" data-force-light={forceLight}>\r\n        {fontSizeInput}\r\n        {fontColorBtn}\r\n      </div>\r\n      <TextArea\r\n        autoFocus\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n","import { useDebugValue, useEffect, useMemo, useRef, useState } from \"react\";\nimport localforage from \"localforage\";\nimport { Map } from \"immutable\";\n\nexport function useScrollPage(noteID: string) {\n  const [refMap, setRefMap] = useState(Map<string, HTMLElement>());\n  const scrolled = useRef(false);\n  const [prevPageID, setPrevPageID] = useState(\"\");\n  const [inviewRatios, setInviewRatios] = useState(Map<string, number>());\n  const currPageID = useMemo(() => largestKey(inviewRatios), [inviewRatios]);\n  useDebugValue(currPageID);\n\n  useEffect(() => {\n    const loadPrevPageID = async () => {\n      const stored = await localforage.getItem<string>(`SCROLL_${noteID}`);\n      if (!stored) return (scrolled.current = true);\n      setPrevPageID(stored);\n    };\n    loadPrevPageID();\n  }, [noteID]);\n\n  useEffect(() => {\n    if (scrolled.current || !refMap.has(prevPageID)) return;\n    requestAnimationFrame(() => {\n      refMap.get(prevPageID)?.scrollIntoView();\n      scrolled.current = true;\n    });\n  }, [prevPageID, refMap]);\n\n  useEffect(() => {\n    if (!scrolled.current) return;\n    localforage.setItem(`SCROLL_${noteID}`, currPageID);\n  }, [currPageID, noteID]);\n\n  const setRef = (pageID: string, el: HTMLElement | null) => {\n    if (!el) return;\n    setRefMap((prev) => prev.set(pageID, el));\n  };\n\n  const scrollPage = (pageID: string) => {\n    refMap.get(pageID)?.scrollIntoView();\n  };\n\n  return { scrollPage, setInviewRatios, setRef, currPageID };\n}\n\nconst largestKey = (map: Map<string, number>) => {\n  let result = \"\";\n  let maxRatio = 0;\n  map.forEach((ratio, pageID) => {\n    if (ratio > maxRatio) {\n      result = pageID;\n      maxRatio = ratio;\n    }\n  });\n  return result;\n};\n","import { FC, useContext } from \"react\";\r\nimport { Button, message, Popover, ButtonProps } from \"antd\";\r\nimport { ReaderMethodCtx, ReaderStateCtx } from \"../Reader\";\r\nimport { DrawCtrl, saveDrawCtrl } from \"../../../lib/draw/drawCtrl\";\r\nimport {\r\n  BulbFilled,\r\n  BulbOutlined,\r\n  UndoOutlined,\r\n  RedoOutlined,\r\n  GatewayOutlined,\r\n  HighlightOutlined,\r\n} from \"@ant-design/icons\";\r\nimport IconFont from \"../../ui/IconFont\";\r\nimport { PenPanel, WidthSelect } from \"../tools/PenPanel\";\r\n\r\nexport const HeaderMiddle = () => {\r\n  const { stateSet, drawCtrl, forceLight } = useContext(ReaderStateCtx);\r\n  const { setDrawCtrl, handleUndo, handleRedo, setForceLight } =\r\n    useContext(ReaderMethodCtx);\r\n  const { mode, finger } = drawCtrl;\r\n\r\n  const updateDrawCtrl = (updated: Partial<DrawCtrl>) => {\r\n    setDrawCtrl((prev) => {\r\n      const newCtrl = { ...prev, ...updated };\r\n      saveDrawCtrl(newCtrl);\r\n      return newCtrl;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"middle\">\r\n      <Button\r\n        type=\"text\"\r\n        shape=\"circle\"\r\n        icon={<UndoOutlined />}\r\n        onClick={handleUndo}\r\n        disabled={!stateSet?.isUndoable()}\r\n      />\r\n      <Button\r\n        type=\"text\"\r\n        shape=\"circle\"\r\n        icon={<RedoOutlined />}\r\n        onClick={handleRedo}\r\n        disabled={!stateSet?.isRedoable()}\r\n      />\r\n      <Button\r\n        type={finger ? \"default\" : \"text\"}\r\n        shape=\"circle\"\r\n        onClick={() => {\r\n          updateDrawCtrl({ finger: !finger });\r\n          message.destroy(\"FINGER\");\r\n          message.open({\r\n            content: finger ? \"Pencil only\" : \"Draw with finger\",\r\n            key: \"FINGER\",\r\n          });\r\n        }}\r\n        icon={<IconFont type=\"icon-finger\" />}\r\n      />\r\n      <Button\r\n        className=\"force-light-btn\"\r\n        type=\"text\"\r\n        shape=\"circle\"\r\n        icon={forceLight ? <BulbFilled /> : <BulbOutlined />}\r\n        onClick={() => setForceLight((prev) => !prev)}\r\n      />\r\n      <PenButton updateDrawCtrl={updateDrawCtrl} />\r\n      <EraserButton updateDrawCtrl={updateDrawCtrl} />\r\n      <Button\r\n        type={mode === \"text\" ? \"default\" : \"text\"}\r\n        shape=\"circle\"\r\n        onClick={() => updateDrawCtrl({ mode: \"text\" })}\r\n        icon={<IconFont type=\"icon-text1\" />}\r\n      />\r\n      <SelectButton updateDrawCtrl={updateDrawCtrl} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PenButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const { drawCtrl } = useContext(ReaderStateCtx);\r\n  const { mode } = drawCtrl;\r\n\r\n  const btnProps: ButtonProps = {\r\n    shape: \"circle\",\r\n    icon: <HighlightOutlined />,\r\n  };\r\n  return mode === \"draw\" ? (\r\n    <Popover\r\n      content={<PenPanel updateDrawCtrl={updateDrawCtrl} drawCtrl={drawCtrl} />}\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e.parentElement!}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button type=\"default\" {...btnProps} />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      onClick={() => updateDrawCtrl({ mode: \"draw\" })}\r\n      {...btnProps}\r\n    />\r\n  );\r\n};\r\n\r\nconst EraserButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const { drawCtrl } = useContext(ReaderStateCtx);\r\n\r\n  const btnProps: ButtonProps = {\r\n    shape: \"circle\",\r\n    icon: <IconFont type=\"icon-eraser\" />,\r\n  };\r\n\r\n  return drawCtrl.mode === \"erase\" ? (\r\n    <Popover\r\n      content={\r\n        <div className=\"width-seg-wrapper\">\r\n          <WidthSelect\r\n            drawCtrl={drawCtrl}\r\n            updateDrawCtrl={updateDrawCtrl}\r\n            field=\"eraserWidth\"\r\n          />\r\n        </div>\r\n      }\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e.parentElement!}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button type=\"default\" {...btnProps} />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      onClick={() => updateDrawCtrl({ mode: \"erase\" })}\r\n      {...btnProps}\r\n    />\r\n  );\r\n};\r\n\r\nconst SelectButton: FC<{\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}> = ({ updateDrawCtrl }) => {\r\n  const {\r\n    drawCtrl: { lasso, mode },\r\n  } = useContext(ReaderStateCtx);\r\n\r\n  const icon = lasso ? <IconFont type=\"icon-lasso1\" /> : <GatewayOutlined />;\r\n\r\n  return mode === \"select\" ? (\r\n    <Button\r\n      type=\"default\"\r\n      shape=\"circle\"\r\n      icon={icon}\r\n      onClick={() => updateDrawCtrl({ lasso: !lasso })}\r\n    />\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      shape=\"circle\"\r\n      icon={icon}\r\n      onClick={() => updateDrawCtrl({ mode: \"select\" })}\r\n    />\r\n  );\r\n};\r\n","import { Avatar } from \"antd\";\nimport { AvatarSize } from \"antd/lib/avatar/SizeContext\";\nimport { FC, useContext, useMemo } from \"react\";\nimport { getHashedColor } from \"../../lib/color\";\nimport { TeamCtx } from \"../reader/Team\";\n\nexport const UserAvatar: FC<{\n  userID: string;\n  size?: AvatarSize;\n  onClick?: () => void;\n  chosen?: boolean;\n  className?: string;\n}> = ({\n  userID,\n  size = \"default\",\n  onClick = () => {},\n  chosen = false,\n  className,\n}) => {\n  const { userRec } = useContext(TeamCtx);\n  const color = useMemo(() => getHashedColor(userID), [userID]);\n  const userInfo = userRec[userID];\n  if (!userInfo) return null;\n  const { userName } = userInfo;\n\n  return (\n    <Avatar\n      className={className}\n      data-chosen={chosen}\n      size={size}\n      style={{ backgroundColor: color }}\n    >\n      <div className=\"avatar-wrapper\" onClick={onClick}>\n        {userName?.slice(0, 3)}\n      </div>\n    </Avatar>\n  );\n};\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n} from \"react\";\r\nimport {\r\n  MoreOutlined,\r\n  PlusOutlined,\r\n  CopyOutlined,\r\n  DeleteOutlined,\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  Draggable,\r\n  Droppable,\r\n  DropResult,\r\n  DragDropContext,\r\n} from \"react-beautiful-dnd\";\r\nimport { PageWrapper, ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport { Avatar, Button, Drawer, Menu, Popover, Tabs } from \"antd\";\r\nimport { AddPageButton } from \"./ReaderUtils\";\r\nimport { exchange } from \"../../lib/array\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport IconFont from \"../ui/IconFont\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport \"./preview.sass\";\r\nimport { UserAvatar } from \"../widgets/UserAvatar\";\r\nimport classNames from \"classnames\";\r\n\r\nconst PreviewCtx = React.createContext({\r\n  activeKey: \"ALL\",\r\n  setActiveKey: (() => {}) as Setter<string>,\r\n});\r\n\r\nconst PageNavContent = () => {\r\n  const { pageOrder, currPageID, forceLight } = useContext(ReaderStateCtx);\r\n  const { scrollPage, saveReorder } = useContext(ReaderMethodCtx);\r\n  const { activeKey } = useContext(PreviewCtx);\r\n  const refRec = useRef<Record<string, HTMLElement>>({});\r\n\r\n  const onDragEnd = ({ source, destination }: DropResult) => {\r\n    if (!destination || !pageOrder) return;\r\n    const { index: fromIndex } = source;\r\n    const { index: toIndex } = destination;\r\n    if (fromIndex === toIndex) return;\r\n    const pageID = pageOrder[fromIndex];\r\n    const newOrder = exchange(pageOrder, fromIndex, toIndex);\r\n    saveReorder(newOrder, true);\r\n    requestAnimationFrame(() => scrollPage(pageID));\r\n  };\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(() => refRec.current[currPageID]?.scrollIntoView(), []);\r\n\r\n  return (\r\n    <div className=\"preview-container\" data-force-light={forceLight}>\r\n      <PreviewTabs />\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"preview-list\">\r\n          {({ droppableProps, innerRef, placeholder }) => (\r\n            <div className=\"page-list\" ref={innerRef} {...droppableProps}>\r\n              {pageOrder?.map((uid, index) => (\r\n                <PagePreview\r\n                  key={uid}\r\n                  uid={uid}\r\n                  pageIndex={index}\r\n                  refRec={refRec.current}\r\n                />\r\n              ))}\r\n              {placeholder}\r\n              {activeKey === \"ALL\" && <AddPageButton />}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PagePreview: FC<{\r\n  uid: string;\r\n  pageIndex: number;\r\n  refRec: Record<string, HTMLElement>;\r\n}> = ({ uid, pageIndex, refRec }) => {\r\n  const { stateSet, teamState, pageRec, currPageID } =\r\n    useContext(ReaderStateCtx);\r\n  const { scrollPage } = useContext(ReaderMethodCtx);\r\n  const { activeKey } = useContext(PreviewCtx);\r\n  const [chosen, setChosen] = useState(\"\");\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n\r\n  if (!page || !drawState) return null;\r\n  const { image, marked } = page;\r\n\r\n  if (\r\n    activeKey === \"WRITTEN\" &&\r\n    drawState.isEmpty() &&\r\n    (!teamStateMap || teamStateMap.every((ds) => ds.isEmpty()))\r\n  ) {\r\n    return null;\r\n  }\r\n  if (activeKey === \"MARKED\" && !marked) return null;\r\n  const curr = currPageID === uid;\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={uid}\r\n      index={pageIndex}\r\n      isDragDisabled={activeKey !== \"ALL\"}\r\n    >\r\n      {(\r\n        { innerRef, draggableProps, dragHandleProps },\r\n        { isDragging: dragged }\r\n      ) => (\r\n        <div\r\n          ref={(e) => {\r\n            innerRef(e);\r\n            if (e) refRec[uid] = e;\r\n          }}\r\n          className=\"page\"\r\n          data-curr={curr}\r\n          data-dragged={dragged}\r\n          onClick={() => scrollPage(uid)}\r\n          {...draggableProps}\r\n          {...dragHandleProps}\r\n        >\r\n          <PageWrapper\r\n            uid={uid}\r\n            drawState={teamStateMap?.get(chosen) || drawState}\r\n            teamStateMap={chosen ? undefined : teamStateMap}\r\n            thumbnail={image}\r\n            preview\r\n          />\r\n          <PreviewTools\r\n            uid={uid}\r\n            index={pageIndex}\r\n            chosen={chosen}\r\n            setChosen={setChosen}\r\n          />\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst PreviewTools: FC<{\r\n  uid: string;\r\n  index: number;\r\n  chosen: string;\r\n  setChosen: Setter<string>;\r\n}> = ({ uid, index, chosen, setChosen }) => {\r\n  const { switchPageMarked } = useContext(ReaderMethodCtx);\r\n  const { teamState, pageRec } = useContext(ReaderStateCtx);\r\n  const { ignores } = useContext(TeamCtx);\r\n  const userIDs = useMemo(\r\n    () =>\r\n      teamState\r\n        ?.getPageValidUsers(uid)\r\n        .filter((userID) => !ignores.has(userID)) || [],\r\n    [teamState, ignores, uid]\r\n  );\r\n  const page = pageRec?.get(uid);\r\n  if (!page) return null;\r\n  const { marked } = page;\r\n\r\n  return (\r\n    <div className=\"tools\" onClick={(e) => e.stopPropagation()}>\r\n      <span\r\n        className=\"bookmark\"\r\n        data-marked={marked}\r\n        onClick={() => switchPageMarked(uid)}\r\n      />\r\n      <span className=\"index\">{index + 1}</span>\r\n      <PreviewOption uid={uid} />\r\n      <TeamAvatars userIDs={userIDs} chosen={chosen} setChosen={setChosen} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TeamAvatars: FC<{\r\n  userIDs: string[];\r\n  chosen: string;\r\n  setChosen: Setter<string>;\r\n}> = ({ userIDs, chosen, setChosen }) => {\r\n  return (\r\n    <Avatar.Group\r\n      maxCount={2}\r\n      size=\"default\"\r\n      className={classNames(\"team-group\", { chosen })}\r\n      maxPopoverPlacement=\"bottom\"\r\n    >\r\n      {userIDs.map((userID) => (\r\n        <UserAvatar\r\n          key={userID}\r\n          size=\"default\"\r\n          userID={userID}\r\n          className=\"preview-avatar\"\r\n          chosen={chosen === userID}\r\n          onClick={() => setChosen((prev) => (prev === userID ? \"\" : userID))}\r\n        />\r\n      ))}\r\n    </Avatar.Group>\r\n  );\r\n};\r\n\r\nconst PreviewOption = ({ uid }: { uid: string }) => {\r\n  const { addPage, deletePage } = useContext(ReaderMethodCtx);\r\n\r\n  const menu = (\r\n    <Menu\r\n      onClick={({ key }) => {\r\n        if (key === \"ADD\") {\r\n          addPage(uid);\r\n        } else if (key === \"COPY\") {\r\n          addPage(uid, true);\r\n        } else if (key === \"DELETE\") {\r\n          deletePage(uid);\r\n        }\r\n      }}\r\n      items={[\r\n        { key: \"ADD\", icon: <PlusOutlined />, label: \"Add page\" },\r\n        { key: \"COPY\", icon: <CopyOutlined />, label: \"Duplicate\" },\r\n        {\r\n          key: \"DELETE\",\r\n          icon: <DeleteOutlined />,\r\n          label: \"Delete\",\r\n          danger: true,\r\n        },\r\n      ]}\r\n    ></Menu>\r\n  );\r\n  return (\r\n    <Popover\r\n      content={menu}\r\n      trigger=\"click\"\r\n      placement=\"left\"\r\n      destroyTooltipOnHide\r\n    >\r\n      <span className=\"option\">\r\n        <MoreOutlined />\r\n      </span>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst PreviewTabs = () => {\r\n  const { activeKey, setActiveKey } = useContext(PreviewCtx);\r\n  const { TabPane } = Tabs;\r\n  return (\r\n    <Tabs\r\n      className=\"tabs\"\r\n      activeKey={activeKey}\r\n      onChange={setActiveKey}\r\n      tabBarGutter={10}\r\n      size=\"small\"\r\n      centered\r\n    >\r\n      <TabPane tab={<IconFont type=\"icon-uf_paper\" />} key=\"ALL\" />\r\n      <TabPane tab={<IconFont type=\"icon-bookmark2\" />} key=\"MARKED\" />\r\n      <TabPane tab={<IconFont type=\"icon-write\" />} key=\"WRITTEN\" />\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default function PageNav() {\r\n  const [navOn, setNavOn] = useState(false);\r\n  const [activeKey, setActiveKey] = useState<string>(\"ALL\");\r\n  const title = {\r\n    ALL: \"All Pages\",\r\n    MARKED: \"Bookmarks\",\r\n    WRITTEN: \"Notes\",\r\n  }[activeKey];\r\n\r\n  return (\r\n    <PreviewCtx.Provider value={{ activeKey, setActiveKey }}>\r\n      <Button\r\n        type=\"text\"\r\n        icon={navOn ? <MenuUnfoldOutlined /> : <MenuFoldOutlined />}\r\n        onClick={() => setNavOn((prev) => !prev)}\r\n      />\r\n      <Drawer\r\n        visible={navOn}\r\n        onClose={() => setNavOn(false)}\r\n        width={200}\r\n        title={title}\r\n        closable={false}\r\n        zIndex={800}\r\n        className=\"preview-drawer\"\r\n        bodyStyle={{ padding: 0, overflow: \"hidden\" }}\r\n        headerStyle={{ textAlign: \"center\" }}\r\n        destroyOnClose\r\n      >\r\n        <PageNavContent />\r\n      </Drawer>\r\n    </PreviewCtx.Provider>\r\n  );\r\n}\r\n","import { FC, useMemo, useState, useEffect, useContext } from \"react\";\r\nimport { Badge, Alert, Modal, Button, Divider, message, Popover } from \"antd\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { PasscodeInput } from \"antd-mobile\";\r\nimport { ReaderMethodCtx, ReaderStateCtx } from \"../Reader\";\r\nimport { TeamCtx } from \"../Team\";\r\nimport { getUserID, saveUserName } from \"../../../lib/user\";\r\nimport PageNav from \"../PageNav\";\r\nimport {\r\n  EyeOutlined,\r\n  FormOutlined,\r\n  TeamOutlined,\r\n  CopyOutlined,\r\n  CheckOutlined,\r\n  ReloadOutlined,\r\n  ShareAltOutlined,\r\n  DisconnectOutlined,\r\n  EyeInvisibleOutlined,\r\n  UsergroupAddOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { editNoteData } from \"../../../lib/note/archive\";\r\nimport { UserAvatar } from \"../../widgets/UserAvatar\";\r\nimport { putNote } from \"../../../lib/network/http\";\r\nimport copy from \"clipboard-copy\";\r\n\r\nexport const HeaderRight = () => {\r\n  const { teamOn } = useContext(TeamCtx);\r\n  return (\r\n    <div className=\"right\">\r\n      {teamOn ? <RoomInfo /> : <JoinRoom />}\r\n      <PageNav />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst UserCard: FC<{ userID: string }> = ({ userID }) => {\r\n  const [renaming, setRenaming] = useState(false);\r\n  const { ignores, setIgnores, resetIO, userRec } = useContext(TeamCtx);\r\n  const userInfo = userRec[userID];\r\n  useEffect(() => setRenaming(false), [userInfo]);\r\n  if (!userInfo) return null;\r\n\r\n  const { userName, online } = userInfo;\r\n  const self = userID === getUserID();\r\n  const ignored = ignores.has(userID) && !self;\r\n\r\n  const switchIgnore = () => {\r\n    setIgnores((prev) => {\r\n      if (prev.has(userID)) return prev.delete(userID);\r\n      return prev.add(userID);\r\n    });\r\n  };\r\n\r\n  const submitRename = (value: string) => {\r\n    const name = value.trim();\r\n    if (!name || name === userName) return setRenaming(false);\r\n    saveUserName(name);\r\n    resetIO();\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-item\" data-online={online}>\r\n      <UserAvatar userID={userID} size=\"small\" className=\"room-avatar\" />\r\n      {renaming || <span className=\"user-name\">{userName}</span>}\r\n      {renaming && (\r\n        <Search\r\n          autoFocus\r\n          className=\"rename-input\"\r\n          defaultValue={userName}\r\n          onSearch={submitRename}\r\n          enterButton={<Button icon={<CheckOutlined />} />}\r\n        />\r\n      )}\r\n      {self ? (\r\n        renaming || (\r\n          <Button\r\n            type=\"text\"\r\n            icon={<FormOutlined />}\r\n            onClick={() => setRenaming(true)}\r\n          />\r\n        )\r\n      ) : (\r\n        <Button\r\n          type=\"text\"\r\n          icon={ignored ? <EyeInvisibleOutlined /> : <EyeOutlined />}\r\n          onClick={switchIgnore}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RoomInfo: FC = () => {\r\n  const { code, userRec, connected, loadInfo, loadState, resetIO } =\r\n    useContext(TeamCtx);\r\n  const { noteInfo } = useContext(ReaderStateCtx);\r\n  const link = window.location.href;\r\n  const share = async () => {\r\n    const selfName = userRec[getUserID()]?.userName;\r\n    try {\r\n      if (!noteInfo) return;\r\n      await copy(`${noteInfo.name} - ${selfName} - Multibility\\n${link}`);\r\n      message.destroy(\"copy\");\r\n      message.success({\r\n        content: \"Link copied!\",\r\n        icon: <CopyOutlined />,\r\n        key: \"copy\",\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const userList = useMemo(() => {\r\n    const selfID = getUserID();\r\n    const { [selfID]: selfInfo, ...otherUsers } = userRec;\r\n    const list = selfInfo ? [selfInfo] : [];\r\n    const values = Object.values(otherUsers);\r\n    list.push(\r\n      ...values.filter(({ online }) => online),\r\n      ...values.filter(({ online }) => !online)\r\n    );\r\n    return list;\r\n  }, [userRec]);\r\n\r\n  const onlineNum = useMemo(\r\n    () => userList.filter(({ online }) => online).length,\r\n    [userList]\r\n  );\r\n\r\n  const teamPop = (\r\n    <div className=\"team-popover\">\r\n      {connected || (\r\n        <Alert\r\n          className=\"disconn-alert\"\r\n          message=\"Network failed.\"\r\n          icon={<DisconnectOutlined />}\r\n          type=\"error\"\r\n          showIcon\r\n          banner\r\n        />\r\n      )}\r\n      <PasscodeInput\r\n        className=\"code-display\"\r\n        value={String(code)}\r\n        length={4}\r\n        plain\r\n      />\r\n      <Button\r\n        icon={<ShareAltOutlined />}\r\n        className=\"share-btn\"\r\n        onClick={share}\r\n        block\r\n      >\r\n        Share\r\n      </Button>\r\n      <Divider />\r\n      <div className=\"user-list\">\r\n        {userList.map((u) => (\r\n          <UserCard key={u.userID} userID={u.userID} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const [reloading, setReloading] = useState(false);\r\n  const title = (\r\n    <div className=\"team-title\">\r\n      <span>Team info</span>\r\n      <Button\r\n        shape=\"circle\"\r\n        type=\"text\"\r\n        size=\"small\"\r\n        loading={reloading}\r\n        icon={<ReloadOutlined />}\r\n        onClick={async () => {\r\n          setReloading(true);\r\n          await loadInfo();\r\n          await loadState();\r\n          setReloading(false);\r\n          resetIO();\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Popover\r\n      content={teamPop}\r\n      trigger=\"click\"\r\n      placement=\"bottomRight\"\r\n      title={title}\r\n      getPopupContainer={(e) => e.parentElement!}\r\n    >\r\n      <Button\r\n        type=\"text\"\r\n        icon={\r\n          <Badge\r\n            status={connected ? \"success\" : \"error\"}\r\n            count={connected ? onlineNum : \"!\"}\r\n            size=\"small\"\r\n          >\r\n            <TeamOutlined />\r\n          </Badge>\r\n        }\r\n      />\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst JoinRoom = () => {\r\n  const { noteID } = useContext(ReaderStateCtx);\r\n  const { instantSave } = useContext(ReaderMethodCtx);\r\n  const nav = useNavigate();\r\n\r\n  const createRoom = async () => {\r\n    await instantSave();\r\n    const res = await putNote(noteID);\r\n    if (!res) return message.error(\"Can't create room.\");\r\n    await editNoteData(noteID, { team: true });\r\n    nav(\"/team/\" + noteID);\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      type=\"text\"\r\n      icon={<UsergroupAddOutlined />}\r\n      onClick={() => {\r\n        Modal.confirm({\r\n          title: \"Enable team editing\",\r\n          content: \"This will make your note public.\",\r\n          icon: <TeamOutlined style={{ color: \"#555\" }} />,\r\n          onOk: createRoom,\r\n        });\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import { useContext } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ReaderMethodCtx, ReaderStateCtx } from \"../Reader\";\r\nimport { HomeFilled, SaveOutlined } from \"@ant-design/icons\";\r\nimport { HeaderMiddle } from \"./Middle\";\r\nimport { HeaderRight } from \"./Right\";\r\nimport \"./header.sass\";\r\n\r\nexport default function ReaderHeader() {\r\n  return (\r\n    <header>\r\n      <HeaderLeft />\r\n      <HeaderMiddle />\r\n      <HeaderRight />\r\n    </header>\r\n  );\r\n}\r\n\r\nconst HeaderLeft = () => {\r\n  const { saved } = useContext(ReaderStateCtx);\r\n  const { instantSave } = useContext(ReaderMethodCtx);\r\n  const nav = useNavigate();\r\n\r\n  return (\r\n    <div className=\"left\">\r\n      <Button\r\n        type=\"text\"\r\n        onClick={async () => {\r\n          await instantSave();\r\n          nav(\"/\");\r\n        }}\r\n        icon={<HomeFilled style={{ opacity: 0.8 }} />}\r\n      />\r\n      <Button\r\n        type=\"text\"\r\n        className=\"save\"\r\n        onClick={instantSave}\r\n        disabled={saved}\r\n        icon={<SaveOutlined />}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useCallback,\r\n  createContext,\r\n} from \"react\";\r\nimport {\r\n  DrawCtrl,\r\n  getDrawCtrl,\r\n  defaultDrawCtrl,\r\n} from \"../../lib/draw/drawCtrl\";\r\nimport {\r\n  NoteInfo,\r\n  NotePage,\r\n  createPage,\r\n  defaultNotePage,\r\n} from \"../../lib/note/note\";\r\nimport { NewPageInfo, ReorderInfo, SyncInfo } from \"../../lib/network/io\";\r\nimport { useMemoizedFn as useEvent, useSafeState } from \"ahooks\";\r\nimport { SetOperation, StateSet } from \"../../lib/draw/StateSet\";\r\nimport Draw, { ActiveToolKey, DrawRefType } from \"../draw/Draw\";\r\nimport { loadNote, editNoteData } from \"../../lib/note/archive\";\r\nimport { AddPageButton, showPageDelMsg } from \"./ReaderUtils\";\r\nimport { insertAfter } from \"../../lib/array\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { SelectTool, TextTool } from \"./tools/DrawTools\";\r\nimport { debounce, last, once, range } from \"lodash-es\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { DrawState } from \"../../lib/draw/DrawState\";\r\nimport { TeamState } from \"../../lib/draw/TeamState\";\r\nimport { useScrollPage } from \"../../lib/scroll\";\r\nimport ReaderHeader from \"./header/Header\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport { Map } from \"immutable\";\r\nimport { message } from \"antd\";\r\nimport \"./reader.sass\";\r\n\r\nexport const ReaderStateCtx = createContext({\r\n  noteID: \"\",\r\n  noteInfo: undefined as NoteInfo | undefined,\r\n  stateSet: undefined as StateSet | undefined,\r\n  teamState: undefined as TeamState | undefined,\r\n  pageRec: undefined as Map<string, NotePage> | undefined,\r\n  pageOrder: undefined as string[] | undefined,\r\n  saved: true,\r\n  currPageID: \"\",\r\n  drawCtrl: defaultDrawCtrl,\r\n  forceLight: false,\r\n});\r\n\r\nexport const ReaderMethodCtx = createContext({\r\n  scrollPage: (pageID: string) => {},\r\n  switchPageMarked: (pageID: string) => {},\r\n  updateStateSet: (cb: (prevSS: StateSet) => StateSet) => {},\r\n  addPage: (prevPageID: string, copy?: boolean) => {},\r\n  addFinalPage: () => {},\r\n  deletePage: (pageID: string) => {},\r\n  saveReorder: async (order: string[], push: boolean) => {},\r\n  setInviewRatios: (() => {}) as Setter<Map<string, number>>,\r\n  setDrawCtrl: (() => {}) as Setter<DrawCtrl>,\r\n  instantSave: (() => {}) as () => Promise<void> | undefined,\r\n  handleUndo: () => {},\r\n  handleRedo: () => {},\r\n  setForceLight: (() => {}) as Setter<boolean>,\r\n});\r\n\r\nexport default function Reader() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const nav = useNavigate();\r\n\r\n  const [pageRec, setPageRec] = useState<Map<string, NotePage>>();\r\n  const [noteInfo, setNoteInfo] = useState<NoteInfo>();\r\n  const [stateSet, setStateSet] = useState<StateSet>();\r\n  const [drawCtrl, setDrawCtrl] = useState(defaultDrawCtrl);\r\n  const [pageOrder, setPageOrder] = useState<string[]>();\r\n  const [saved, setSaved] = useSafeState(true);\r\n  const [forceLight, setForceLight] = useState(false);\r\n\r\n  const { io, teamOn, teamState, addTeamStatePage } = useContext(TeamCtx);\r\n  const { setInviewRatios, scrollPage, setRef, currPageID } =\r\n    useScrollPage(noteID);\r\n\r\n  useEffect(() => {\r\n    const loadNotePages = async () => {\r\n      const storedNote = await loadNote(noteID);\r\n      if (!storedNote) {\r\n        message.error(\"Note not found\");\r\n        return nav(\"/\");\r\n      }\r\n      const { pageRec, pdf, pageOrder, ...noteInfo } = storedNote;\r\n      setPageRec(Map(pageRec));\r\n      setPageOrder(pageOrder);\r\n      setNoteInfo(noteInfo);\r\n      setStateSet(StateSet.createFromPages(pageRec));\r\n      setDrawCtrl(await getDrawCtrl());\r\n    };\r\n    loadNotePages();\r\n  }, [nav, noteID, teamOn]);\r\n\r\n  useEffect(() => {\r\n    if (!noteInfo) return;\r\n    document.title = noteInfo.name + \" - Multibility\";\r\n  }, [noteInfo]);\r\n\r\n  const saver = useEvent(async () => {\r\n    const pr = pageRec?.toObject();\r\n    const canvas = document.querySelector(\"canvas\");\r\n    const thumbnail = canvas?.toDataURL(\"image/jpeg\", 0.1);\r\n    await editNoteData(noteID, { pageRec: pr, thumbnail });\r\n    setSaved(true);\r\n  });\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const debouncedSave = useCallback(debounce(saver, 2000), [saver]);\r\n  const instantSave = debouncedSave.flush;\r\n\r\n  const savePageRec = (pageID: string, cb: (prev: NotePage) => NotePage) => {\r\n    setPageRec((prev) => prev?.update(pageID, defaultNotePage, cb));\r\n    setSaved(false);\r\n    debouncedSave();\r\n  };\r\n\r\n  const saveReorder = async (pageOrder: string[], push = false) => {\r\n    setPageOrder(pageOrder);\r\n    await editNoteData(noteID, { pageOrder });\r\n    await instantSave();\r\n    push && pushReorder(pageOrder);\r\n  };\r\n\r\n  const pushReorder = (pageOrder: string[]) =>\r\n    io?.emit(\"reorder\", { pageOrder });\r\n\r\n  const handleReorder = useEvent(\r\n    ({ deleted, pageOrder, prevOrder }: ReorderInfo) => {\r\n      saveReorder(pageOrder);\r\n      if (!deleted) return;\r\n      showPageDelMsg(() => saveReorder(prevOrder, true));\r\n    }\r\n  );\r\n\r\n  const handleNewPage = useEvent(\r\n    ({ pageOrder, pageID, newPage }: NewPageInfo) => {\r\n      saveReorder(pageOrder);\r\n      savePageRec(pageID, () => newPage);\r\n      setStateSet((prev) => prev?.addState(pageID, newPage));\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    io?.on(\"reorder\", handleReorder);\r\n    io?.on(\"newPage\", handleNewPage);\r\n    return () => void io?.removeAllListeners();\r\n  }, [io, handleReorder, handleNewPage]);\r\n\r\n  const pushOperation = (operation: SetOperation) => {\r\n    const handleSync = ({ pageID, stroke }: SyncInfo) =>\r\n      setStateSet((prev) => prev?.syncStrokeTime(pageID, stroke));\r\n\r\n    io?.emit(\"push\", { operation }, handleSync);\r\n  };\r\n\r\n  const pushNewPage = (\r\n    pageOrder: string[],\r\n    pageID: string,\r\n    newPage: NotePage\r\n  ) => {\r\n    const { image, marked, ...newTeamPage } = newPage;\r\n    io?.emit(\"newPage\", { pageOrder, pageID, newPage: newTeamPage });\r\n    addTeamStatePage(pageID, newPage);\r\n  };\r\n\r\n  const updatePageRec = (pageID: string, ds: DrawState) => {\r\n    const state = DrawState.flaten(ds);\r\n    savePageRec(pageID, (prev) => ({ ...prev, state }));\r\n  };\r\n\r\n  const updateStateSet = (cb: (prevSS: StateSet) => StateSet) => {\r\n    if (!stateSet) return;\r\n    const newSS = cb(stateSet);\r\n    setStateSet(newSS);\r\n    const lastDS = newSS.getLastDS();\r\n    const lastOp = newSS.lastOp;\r\n    if (!lastDS || !lastOp) return;\r\n    updatePageRec(...lastDS);\r\n    pushOperation(lastOp);\r\n  };\r\n\r\n  const switchPageMarked = (pageID: string) =>\r\n    savePageRec(pageID, (prev) => ({ ...prev, marked: !prev.marked }));\r\n\r\n  const addPage = (prevPageID: string, copy = false) => {\r\n    if (!pageOrder) return;\r\n    const prevPage = copy ? pageRec?.get(prevPageID) : undefined;\r\n    const [pageID, newPage] = createPage(prevPage);\r\n    const newOrder = insertAfter(pageOrder, prevPageID, pageID);\r\n    pushNewPage(newOrder, pageID, newPage);\r\n    saveReorder(newOrder);\r\n    savePageRec(pageID, () => newPage);\r\n    setStateSet((prev) => prev?.addState(pageID, newPage));\r\n  };\r\n\r\n  const addFinalPage = () => {\r\n    const lastPageID = last(pageOrder);\r\n    lastPageID && addPage(lastPageID);\r\n  };\r\n\r\n  const deletePage = (pageID: string) => {\r\n    const newOrder = pageOrder?.filter((id) => id !== pageID);\r\n    newOrder?.length && saveReorder(newOrder, true);\r\n  };\r\n\r\n  const handleUndo = () => updateStateSet((prev) => prev.undo());\r\n  const handleRedo = () => updateStateSet((prev) => prev.redo());\r\n  const renderResult = (\r\n    <div className=\"reader container\" data-force-light={forceLight}>\r\n      <ReaderHeader />\r\n      <main>\r\n        {pageOrder?.map((uid) => (\r\n          <section key={uid} className=\"note-page\" ref={(e) => setRef(uid, e)}>\r\n            <PageContainer uid={uid} />\r\n          </section>\r\n        ))}\r\n        <AddPageButton />\r\n      </main>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ReaderStateCtx.Provider\r\n      value={{\r\n        saved,\r\n        noteID,\r\n        pageRec,\r\n        drawCtrl,\r\n        noteInfo,\r\n        stateSet,\r\n        teamState,\r\n        pageOrder,\r\n        currPageID,\r\n        forceLight,\r\n      }}\r\n    >\r\n      <ReaderMethodCtx.Provider\r\n        value={{\r\n          addPage,\r\n          scrollPage,\r\n          deletePage,\r\n          setDrawCtrl,\r\n          saveReorder,\r\n          instantSave,\r\n          addFinalPage,\r\n          handleRedo,\r\n          handleUndo,\r\n          updateStateSet,\r\n          setInviewRatios,\r\n          switchPageMarked,\r\n          setForceLight,\r\n        }}\r\n      >\r\n        {renderResult}\r\n      </ReaderMethodCtx.Provider>\r\n    </ReaderStateCtx.Provider>\r\n  );\r\n}\r\n\r\nconst PageContainer: FC<{ uid: string }> = ({ uid }) => {\r\n  const { pageRec, stateSet, teamState } = useContext(ReaderStateCtx);\r\n  const { updateStateSet } = useContext(ReaderMethodCtx);\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n  const updateState = (ds: DrawState) => {\r\n    updateStateSet((prev) => prev.setState(uid, ds));\r\n  };\r\n\r\n  if (!page || !drawState) return null;\r\n  return (\r\n    <PageWrapper\r\n      drawState={drawState}\r\n      teamStateMap={teamStateMap}\r\n      updateState={updateState}\r\n      pdfIndex={page.pdfIndex}\r\n      uid={uid}\r\n    />\r\n  );\r\n};\r\n\r\nexport const PageWrapper = ({\r\n  thumbnail,\r\n  drawState,\r\n  teamStateMap,\r\n  updateState,\r\n  pdfIndex,\r\n  preview = false,\r\n  uid,\r\n}: {\r\n  uid: string;\r\n  drawState: DrawState;\r\n  teamStateMap?: Map<string, DrawState>;\r\n  thumbnail?: string;\r\n  pdfIndex?: number;\r\n  updateState?: (ds: DrawState) => void;\r\n  preview?: boolean;\r\n}) => {\r\n  const { setInviewRatios } = useContext(ReaderMethodCtx);\r\n  const { noteID } = useContext(ReaderStateCtx);\r\n  const [fullImg, setFullImg] = useState<string>();\r\n  const [ref, visible, entry] = useInView({ threshold: range(0, 1.1, 0.1) });\r\n\r\n  useEffect(() => {\r\n    if (preview) return;\r\n    if (!entry || !visible) {\r\n      setInviewRatios((prev) => prev.delete(uid));\r\n    } else {\r\n      setInviewRatios((prev) => prev.set(uid, entry.intersectionRatio));\r\n    }\r\n  }, [visible, entry, uid, preview, setInviewRatios]);\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const loadImage = useCallback(\r\n    once(async () => {\r\n      if (!pdfIndex) return;\r\n      const { getOnePageImage } = await import(\"../../lib/note/pdfImage\");\r\n      setFullImg(await getOnePageImage(noteID, pdfIndex));\r\n    }),\r\n    [pdfIndex, noteID]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!preview && visible) loadImage();\r\n  }, [visible, preview, loadImage]);\r\n\r\n  const { ignores } = useContext(TeamCtx);\r\n  const otherStates = useMemo(\r\n    () => teamStateMap?.deleteAll(ignores).toList().toArray(),\r\n    [teamStateMap, ignores]\r\n  );\r\n\r\n  const imageLoaded = fullImg || !pdfIndex;\r\n  const drawShow = visible && imageLoaded;\r\n  const maskShow = Boolean(preview || !drawShow);\r\n\r\n  const { height, width } = drawState;\r\n  const ratio = height / width;\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className=\"page-wrapper\"\r\n      style={{ paddingTop: `${ratio * 100}%` }}\r\n    >\r\n      {drawShow && (\r\n        <DrawWrapper\r\n          drawState={drawState}\r\n          otherStates={otherStates}\r\n          updateState={updateState}\r\n          imgSrc={fullImg || thumbnail}\r\n          preview={preview}\r\n        />\r\n      )}\r\n      {maskShow && <div className=\"mask\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DrawWrapper = ({\r\n  drawState,\r\n  updateState,\r\n  otherStates,\r\n  preview = false,\r\n  imgSrc,\r\n}: {\r\n  drawState: DrawState;\r\n  otherStates?: DrawState[];\r\n  updateState?: (ds: DrawState) => void;\r\n  preview?: boolean;\r\n  imgSrc?: string;\r\n}) => {\r\n  const { drawCtrl } = useContext(ReaderStateCtx);\r\n  const [activeTool, setActiveTool] = useState<ActiveToolKey>(\"\");\r\n  const drawRef = useRef<DrawRefType>(null);\r\n\r\n  const handleChange = useEvent(\r\n    (arg: ((s: DrawState) => DrawState) | DrawState) => {\r\n      if (!updateState) return;\r\n      const newDS = arg instanceof DrawState ? arg : arg(drawState);\r\n      updateState(newDS);\r\n    }\r\n  );\r\n\r\n  return preview ? (\r\n    <Draw\r\n      drawState={drawState}\r\n      otherStates={otherStates}\r\n      imgSrc={imgSrc}\r\n      readonly\r\n    />\r\n  ) : (\r\n    <>\r\n      <Draw\r\n        drawState={drawState}\r\n        otherStates={otherStates}\r\n        onChange={handleChange}\r\n        imgSrc={imgSrc}\r\n        drawCtrl={drawCtrl}\r\n        ref={drawRef}\r\n        setActiveTool={setActiveTool}\r\n      />\r\n      <SelectTool drawRef={drawRef} visible={activeTool === \"select\"} />\r\n      <TextTool drawRef={drawRef} visible={activeTool === \"text\"} />\r\n    </>\r\n  );\r\n};\r\nDrawWrapper.displayName = \"DrawWrapper\";\r\n","import { io } from \"socket.io-client\";\r\nimport { Stroke } from \"../draw/DrawState\";\r\nimport { NotePage } from \"../note/note\";\r\nimport { getUserID, getUserName } from \"../user\";\r\nimport { BASE_URL } from \"./http\";\r\n\r\nexport const IoFactory = (noteID: string) => () =>\r\n  io(BASE_URL, {\r\n    query: {\r\n      userID: getUserID(),\r\n      userName: getUserName(),\r\n      noteID,\r\n    },\r\n  });\r\n\r\nexport interface ReorderInfo {\r\n  pageOrder: string[];\r\n  prevOrder: string[];\r\n  deleted: boolean;\r\n}\r\n\r\nexport interface NewPageInfo {\r\n  pageOrder: string[];\r\n  pageID: string;\r\n  newPage: NotePage;\r\n}\r\n\r\nexport interface SyncInfo {\r\n  stroke: Stroke;\r\n  pageID: string;\r\n}\r\n","import { NotePage, TeamPage, TeamPageInfo } from \"../note/note\";\nimport { DrawState, WIDTH } from \"./DrawState\";\nimport { SetOperation } from \"./StateSet\";\nimport { Map, Record } from \"immutable\";\n\ninterface TeamStateRecordType {\n  pageStates: Map<string, Map<string, DrawState>>;\n  pageInfos: Map<string, TeamPageInfo>;\n}\n\nconst defaultRecord: Readonly<TeamStateRecordType> = {\n  pageStates: Map(),\n  pageInfos: Map(),\n};\n\ntype TeamStateRecord = Record<TeamStateRecordType>;\nconst defaultFactory = Record(defaultRecord);\n\nexport class TeamState {\n  constructor(private immutable: TeamStateRecord) {}\n\n  getImmutable() {\n    return this.immutable;\n  }\n\n  getPageStates() {\n    return this.getImmutable().get(\"pageStates\");\n  }\n\n  getPageInfos() {\n    return this.getImmutable().get(\"pageInfos\");\n  }\n\n  getOneState(pageID: string, userID: string) {\n    return this.getPageStates().get(pageID)?.get(userID);\n  }\n\n  getOnePageStateMap(pageID: string) {\n    return this.getPageStates().get(pageID);\n  }\n\n  getPageValidUsers(pageID: string) {\n    const map = this.getOnePageStateMap(pageID);\n    if (!map) return [];\n    return Array.from(map?.filter((ds) => !ds.isEmpty()).keys());\n  }\n\n  getPageRatio(pageID: string) {\n    return this.getPageInfos().get(pageID)?.ratio;\n  }\n\n  includesPage(pageID: string) {\n    return this.getPageStates().has(pageID);\n  }\n\n  setState(pageID: string, userID: string, drawState: DrawState) {\n    const pageMap = this.getPageStates().get(pageID);\n    if (!pageMap) return this;\n    return new TeamState(\n      this.getImmutable().update(\"pageStates\", (m) =>\n        m.set(pageID, pageMap.set(userID, drawState))\n      )\n    );\n  }\n\n  static createFromTeamPages(\n    teamPages: globalThis.Record<string, TeamPage>,\n    width = WIDTH\n  ) {\n    let record = defaultFactory();\n    Object.entries(teamPages).forEach(([pageID, teamPage]) => {\n      const { states, ratio } = teamPage;\n      const pageMap = Map(\n        Object.entries(states).map(([userID, flatState]) => [\n          userID,\n          DrawState.loadFromFlat(flatState, width, width * ratio),\n        ])\n      );\n      record = record\n        .update(\"pageStates\", (m) => m.set(pageID, pageMap))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }));\n    });\n    return new TeamState(record);\n  }\n\n  addPage(pageID: string, notePage: NotePage) {\n    const { ratio } = notePage;\n    return new TeamState(\n      this.getImmutable()\n        .update(\"pageStates\", (m) => m.set(pageID, Map()))\n        .update(\"pageInfos\", (m) => m.set(pageID, { ratio }))\n    );\n  }\n\n  pushOperation(setOp: SetOperation, userID: string, width = WIDTH) {\n    const { pageID, ...op } = setOp;\n    const ratio = this.getPageRatio(pageID);\n    if (!this.includesPage(pageID) || !ratio) return this;\n    const prevDs =\n      this.getOneState(pageID, userID) ||\n      DrawState.createEmpty(width, width * ratio);\n\n    const ds = DrawState.pushOperation(prevDs, op);\n    return this.setState(pageID, userID, ds);\n  }\n\n  resetUser(userID: string, pageRec: globalThis.Record<string, NotePage>) {\n    let newTS: TeamState = this;\n    for (let [pageID, { state, ratio }] of Object.entries(pageRec)) {\n      const prevDS = newTS.getOneState(pageID, userID);\n      if (!prevDS) continue;\n      const { width } = prevDS;\n      newTS = newTS.setState(\n        pageID,\n        userID,\n        DrawState.loadFromFlat(state, width, width * ratio)\n      );\n    }\n    return newTS;\n  }\n}\n","import { useState, useEffect, createContext, useCallback } from \"react\";\r\nimport {\r\n  getTeamNoteState,\r\n  loadTeamNoteInfo,\r\n  updatePages,\r\n} from \"../../lib/network/http\";\r\nimport { LoginOutlined, LogoutOutlined } from \"@ant-design/icons\";\r\nimport { IoFactory, NewPageInfo } from \"../../lib/network/io\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { TeamState } from \"../../lib/draw/TeamState\";\r\nimport { getUserID, UserInfo } from \"../../lib/user\";\r\nimport { NotePage } from \"../../lib/note/note\";\r\nimport { Socket } from \"socket.io-client\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { Loading } from \"../ui/Loading\";\r\nimport { message } from \"antd\";\r\nimport { Set } from \"immutable\";\r\nimport Reader from \"./Reader\";\r\n\r\nexport const TeamCtx = createContext({\r\n  io: undefined as Socket | undefined,\r\n  code: 0,\r\n  teamOn: false,\r\n  connected: false,\r\n  ignores: Set<string>(),\r\n  userRec: {} as Record<string, UserInfo>,\r\n  teamState: undefined as TeamState | undefined,\r\n  resetIO: () => {},\r\n  loadInfo: async () => false,\r\n  loadState: async () => false,\r\n  setIgnores: (() => {}) as Setter<Set<string>>,\r\n  addTeamStatePage: (pageID: string, newPage: NotePage) => {},\r\n});\r\n\r\nexport default function Team() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const [teamState, setTeamState] = useState<TeamState>();\r\n  const [code, setCode] = useState(-2);\r\n  const [userRec, setUserRec] = useState<Record<string, UserInfo>>({});\r\n  const [ignores, setIgnores] = useState(Set<string>());\r\n  const [io, setIO] = useState(IoFactory(noteID));\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [connected, setConnected] = useState(false);\r\n  const nav = useNavigate();\r\n\r\n  const loadInfo = useCallback(async () => {\r\n    const info = await loadTeamNoteInfo(noteID);\r\n    if (!info) {\r\n      message.error(\"Failed loading the team note info\");\r\n      return false;\r\n    }\r\n    setCode(info.code);\r\n    return true;\r\n  }, [noteID]);\r\n\r\n  const loadState = useCallback(async () => {\r\n    const teamNote = await getTeamNoteState(noteID);\r\n    if (!teamNote) {\r\n      message.error(\"Failed loading the team note state\");\r\n      return false;\r\n    }\r\n    setTeamState(TeamState.createFromTeamPages(teamNote));\r\n    return true;\r\n  }, [noteID]);\r\n\r\n  const updateSelfState = useCallback(() => {\r\n    updatePages(noteID);\r\n  }, [noteID]);\r\n\r\n  useEffect(() => {\r\n    const roomInit = async () => {\r\n      const infoLoaded = await loadInfo();\r\n      const stateLoaded = await loadState();\r\n      if (!infoLoaded || !stateLoaded) return nav(\"/\");\r\n      setLoaded(true);\r\n      updateSelfState();\r\n    };\r\n    roomInit();\r\n    return updateSelfState;\r\n  }, [loadInfo, loadState, nav, updateSelfState]);\r\n\r\n  useEffect(() => {\r\n    io.on(\"push\", ({ operation, userID }) => {\r\n      setTeamState((prev) => prev?.pushOperation(operation, userID));\r\n    });\r\n\r\n    io.on(\"join\", ({ joined, members }) => {\r\n      const { userID, userName } = joined;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return;\r\n      showJoinMsg(userID, userName);\r\n    });\r\n\r\n    io.on(\"leave\", ({ leaved, members }) => {\r\n      const { userID, userName } = leaved;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return io.emit(\"join\");\r\n      showLeaveMsg(userID, userName);\r\n    });\r\n\r\n    io.on(\"newPage\", (info: NewPageInfo) => {\r\n      const { pageID, newPage } = info;\r\n      setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n    });\r\n\r\n    io.on(\"reset\", ({ userID, pageRec }) => {\r\n      if (userID === getUserID()) return;\r\n      setTeamState((prev) => prev?.resetUser(userID, pageRec));\r\n    });\r\n\r\n    io.on(\"connect_error\", console.error);\r\n    io.on(\"connect\", () => setConnected(true));\r\n    io.on(\"disconnect\", () => setConnected(false));\r\n\r\n    return () => {\r\n      io.removeAllListeners();\r\n      io.close();\r\n    };\r\n  }, [io]);\r\n\r\n  const addTeamStatePage = (pageID: string, newPage: NotePage) => {\r\n    setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n  };\r\n\r\n  const resetIO = () => setIO(IoFactory(noteID));\r\n\r\n  return (\r\n    <Loading loading={!loaded}>\r\n      <TeamCtx.Provider\r\n        value={{\r\n          io,\r\n          code,\r\n          teamOn: true,\r\n          ignores,\r\n          userRec,\r\n          connected,\r\n          teamState,\r\n          resetIO,\r\n          loadInfo,\r\n          loadState,\r\n          setIgnores,\r\n          addTeamStatePage,\r\n        }}\r\n      >\r\n        <Reader />\r\n      </TeamCtx.Provider>\r\n    </Loading>\r\n  );\r\n}\r\n\r\nconst showJoinMsg = (userID: string, userName: string) => {\r\n  message.destroy(userID);\r\n  message.success({\r\n    content: `${userName} joined room`,\r\n    icon: <LoginOutlined />,\r\n    key: userID,\r\n  });\r\n};\r\n\r\nconst showLeaveMsg = (userID: string, userName: string) => {\r\n  message.destroy(userID);\r\n  message.warning({\r\n    content: `${userName} leaved room`,\r\n    icon: <LogoutOutlined />,\r\n    key: userID,\r\n  });\r\n};\r\n"],"names":["defaultWidthList","defaultDrawCtrl","mode","finger","lineWidth","eraserWidth","color","highlight","lasso","widthList","getDrawCtrl","localforage","drawCtrl","defaultRecord","states","Map","editStack","List","undoStack","defaultFactory","Record","StateSet","immutable","lastOp","this","getImmutable","get","pageID","getStates","drawState","prevDS","getOneState","currRecord","update","s","set","l","push","delete","stroke","DrawState","notePage","width","WIDTH","state","ratio","newDS","getEditStack","size","getUndoStack","isUndoable","lastUid","last","lastSetOp","pop","isRedoable","ds","pageRec","map","usePreventTouch","allowFinger","isTouch","useRef","checkPoniter","e","isPrimary","current","pointerType","preventTouch","touch","touches","touchType","isApplePencil","length","isEventValid","stopPropagation","onPointerDownCapture","onPointerMoveCapture","onTouchStartCapture","onTouchMoveCapture","Path","paper","Size","Point","Group","Color","Raster","Layer","Draw","React","ref","otherStates","onChange","readonly","imgSrc","setActiveTool","height","canvasEl","scope","useState","group","setGroup","Set","erased","setErased","usePaperItem","path","setPath","rect","setRect","useEffect","cvs","scp","setup","settings","handleSize","hitTolerance","project","addLayer","layers","activate","forEach","visible","remove","releaseCanvas","bgRect","paintBackground","useSize","canvasWidth","view","viewSize","multiply","scale","raster","addChild","sendToBack","onLoad","requestAnimationFrame","fitBounds","bringToFront","mergedStrokes","useMemo","getStrokeList","tempGroup","othersGroup","uid","item","paintStroke","has","hasStroke","hitRef","selected","setSelected","paperMode","selectedIDs","setSelectedIDs","selectedItems","IDSet","filter","name","resetSelect","useCallback","undefined","handleDown","draw","startStroke","erase","select","startSelectRect","point","contains","hitRes","hitTest","segments","text","t","setPointText","handleDrag","add","smooth","newErased","p","checkErase","prev","concat","resizeRect","delta","moveP","segment","baseP","next","diagonal","subtract","x","strokeWidth","translate","handleUp","isEmpty","simplify","pathData","exportJSON","toArray","selection","Math","abs","area","closePath","moveDash","checkPathSelection","checkRectSelection","updateMutation","handler","onMouseDown","onMouseDrag","onMouseUp","mutations","deleteSelected","rotateSelected","angle","aniCount","dAngle","center","position","rotate","mutateStyle","updated","updateGroupStyle","duplicateSelected","bounds","transP","divide","newSG","clone","insert","children","getUid","m","rasterize","toDataURL","pointText","cancelText","submitText","fontSize","content","fillColor","useImperativeHandle","preventDefault","document","addEventListener","removeEventListener","usePinch","memo","offset","first","origin","lastScale","lastOrigin","elPos","originRawP","getBoundingClientRect","y","originViewP","originPorjP","viewToProject","dScale","pow","scaleView","putCenterBack","zoom","scaleBounds","max","min","rubberband","target","touchHandler","className","displayName","tuple","useDebugValue","activeLayer","importJSON","opacity","console","error","getCheckPoints","cache","WeakMap","cached","prevPoint","previous","times","checkPoints","i","eraserPath","curveBound","lastSegment","curve","strokeBounds","intersects","some","cPoint","d","getNearestPoint","getDistance","Rectangle","strokeColor","onFrame","s1","s2","s3","alpha","blendMode","strokeJoin","strokeCap","dashOffset","dashArray","projSize","viewW","viewH","projW","projH","minX","minY","maxX","maxY","getCenterTranslate","deltaX","deltaY","dP","move","items","isInside","checkedP","res","trace","newColor","AddPageButton","addFinalPage","useContext","ReaderMethodCtx","type","icon","PlusOutlined","block","onClick","insertAfter","list","prevItem","newItem","prevIndex","indexOf","curr","slice","splice","createFromIconfontCN","scriptUrl","PenPanel","updateDrawCtrl","panelBlur","setPanelBlur","WidthSelect","HighlightSwitch","checked","ColorSelect","setColor","c","field","currWidth","chosen","popShow","setPopShow","includes","realSizeStyle","options","value","label","index","onVisibleChange","v","trigger","placement","destroyTooltipOnHide","defaultValue","onAfterChange","w","newWL","style","allColors","backgroundColor","borderColor","SelectTool","drawRef","CSSTransition","timeout","in","unmountOnExit","SelectToolContent","btnProps","shape","currDrawCtrl","setCurrDrawCtrl","rotateEl","dragged","setDragged","transX","setTransX","gearStyle","transform","useDrag","filterTaps","left","right","createPortal","getPopupContainer","parentElement","BgColorsOutlined","RotateRightOutlined","CaretLeftOutlined","CaretRightOutlined","CopyOutlined","PictureOutlined","imageData","Modal","title","src","alt","okText","onOk","saveAs","danger","DeleteOutlined","body","TextTool","setText","setFontSize","colors","forceLight","ReaderStateCtx","fontSizeInput","FontSizeOutlined","fontColorBtn","overlayStyle","FontColorsOutlined","onCancel","trim","bodyStyle","paddingTop","destroyOnClose","TextArea","autoFocus","largestKey","result","maxRatio","HeaderMiddle","stateSet","setDrawCtrl","handleUndo","handleRedo","setForceLight","newCtrl","saveDrawCtrl","UndoOutlined","disabled","RedoOutlined","message","key","BulbFilled","BulbOutlined","PenButton","EraserButton","SelectButton","HighlightOutlined","GatewayOutlined","UserAvatar","userID","userRec","TeamCtx","getHashedColor","userInfo","userName","PreviewCtx","activeKey","setActiveKey","PageNavContent","pageOrder","currPageID","scrollPage","saveReorder","refRec","scrollIntoView","PreviewTabs","onDragEnd","source","destination","fromIndex","toIndex","newOrder","removed","exchange","droppableId","droppableProps","innerRef","placeholder","PagePreview","pageIndex","teamState","setChosen","page","teamStateMap","getOnePageStateMap","image","marked","every","draggableId","isDragDisabled","draggableProps","dragHandleProps","isDragging","PageWrapper","thumbnail","preview","PreviewTools","switchPageMarked","ignores","userIDs","getPageValidUsers","PreviewOption","TeamAvatars","maxCount","classNames","maxPopoverPlacement","addPage","deletePage","menu","MoreOutlined","TabPane","Tabs","tabBarGutter","centered","tab","PageNav","navOn","setNavOn","ALL","MARKED","WRITTEN","Provider","MenuUnfoldOutlined","MenuFoldOutlined","onClose","closable","zIndex","padding","overflow","headerStyle","textAlign","HeaderRight","teamOn","RoomInfo","JoinRoom","UserCard","renaming","setRenaming","setIgnores","resetIO","online","self","getUserID","ignored","Search","onSearch","saveUserName","enterButton","CheckOutlined","FormOutlined","EyeInvisibleOutlined","EyeOutlined","code","connected","loadInfo","loadState","noteInfo","link","window","location","href","share","selfName","copy","log","userList","selfID","selfInfo","otherUsers","values","Object","onlineNum","teamPop","DisconnectOutlined","showIcon","banner","String","plain","ShareAltOutlined","u","reloading","setReloading","loading","ReloadOutlined","status","count","TeamOutlined","noteID","instantSave","nav","useNavigate","createRoom","putNote","editNoteData","team","UsergroupAddOutlined","ReaderHeader","HeaderLeft","saved","HomeFilled","SaveOutlined","createContext","updateStateSet","cb","prevPageID","order","setInviewRatios","Reader","useParams","setPageRec","setNoteInfo","setStateSet","setPageOrder","useSafeState","setSaved","io","addTeamStatePage","refMap","setRefMap","scrolled","setPrevPageID","inviewRatios","loadPrevPageID","stored","setRef","el","useScrollPage","loadNotePages","loadNote","storedNote","pdf","createFromPages","saver","useEvent","pr","toObject","canvas","querySelector","debouncedSave","debounce","flush","savePageRec","defaultNotePage","pushReorder","emit","handleReorder","onUndo","deleted","prevOrder","duration","handleNewPage","newPage","addState","on","removeAllListeners","pushNewPage","newTeamPage","updatePageRec","newSS","operation","lastDS","getLastDS","syncStrokeTime","prevPage","createPage","renderResult","PageContainer","id","lastPageID","redo","undo","updateState","setState","pdfIndex","fullImg","setFullImg","useInView","threshold","range","entry","intersectionRatio","loadImage","once","getOnePageImage","deleteAll","toList","drawShow","maskShow","Boolean","DrawWrapper","activeTool","handleChange","arg","IoFactory","BASE_URL","query","getUserName","pageStates","pageInfos","TeamState","getPageStates","Array","from","keys","getPageInfos","pageMap","setOp","op","getPageRatio","includesPage","prevDs","newTS","entries","teamPages","record","teamPage","flatState","Team","setTeamState","setCode","setUserRec","setIO","loaded","setLoaded","setConnected","loadTeamNoteInfo","info","getTeamNoteState","teamNote","createFromTeamPages","updateSelfState","updatePages","roomInit","infoLoaded","stateLoaded","pushOperation","joined","members","showJoinMsg","leaved","showLeaveMsg","resetUser","close","Loading","LoginOutlined","LogoutOutlined"],"sourceRoot":""}