{"version":3,"file":"static/js/560.83641491.chunk.js","mappings":"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","sources":["component/menu/RightTools.tsx","component/ui/SwipeDelete.tsx","component/menu/SideMenu.tsx","component/menu/LeftTools.tsx","component/menu/NoteList.tsx","component/menu/MainMenu.tsx"],"sourcesContent":["import {\r\n  Button,\r\n  ButtonProps,\r\n  Input,\r\n  Menu,\r\n  message,\r\n  Popconfirm,\r\n  Popover,\r\n  Progress,\r\n} from \"antd\";\r\nimport { createContext, ReactNode, useContext, useState } from \"react\";\r\nimport { createNewNote } from \"../../lib/note/archive\";\r\nimport { MenuStateCtx, MenuMethodCtx } from \"./MainMenu\";\r\nimport {\r\n  TeamOutlined,\r\n  UserOutlined,\r\n  ClearOutlined,\r\n  InboxOutlined,\r\n  FilePdfOutlined,\r\n  SettingOutlined,\r\n  CaretDownOutlined,\r\n  ArrowLeftOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { getUserName, saveUserName } from \"../../lib/user\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { getNoteID } from \"../../lib/network/http\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Dragger from \"antd/lib/upload/Dragger\";\r\nimport { PasscodeInput } from \"antd-mobile\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport localforage from \"localforage\";\r\nimport { useEffect } from \"react\";\r\nimport { FC } from \"react\";\r\nimport \"./rightTools.sass\";\r\n\r\nconst OthersStateCtx = createContext({\r\n  setActive: (() => {}) as Setter<string>,\r\n});\r\n\r\nexport default function RightTools() {\r\n  return (\r\n    <div className=\"right-tools\">\r\n      <JoinTeamButton />\r\n      <OthersButton />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst OthersMenu = () => {\r\n  const { setActive } = useContext(OthersStateCtx);\r\n  return (\r\n    <div className=\"other-menu\">\r\n      <Menu\r\n        onClick={({ key }) => setActive(key)}\r\n        items={[\r\n          { key: \"PDF\", icon: <FilePdfOutlined />, label: \"Import PDF\" },\r\n          { key: \"PROFILE\", icon: <UserOutlined />, label: \"My profile\" },\r\n          { key: \"SETTINGS\", icon: <SettingOutlined />, label: \"Settings\" },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SeconaryMenu: FC<{\r\n  children: ReactNode;\r\n  title: string;\r\n}> = ({ children, title }) => {\r\n  const { setActive } = useContext(OthersStateCtx);\r\n  return (\r\n    <div className=\"secondary\">\r\n      <nav>\r\n        <Button\r\n          type=\"text\"\r\n          shape=\"circle\"\r\n          onClick={() => setActive(\"MENU\")}\r\n          icon={<ArrowLeftOutlined />}\r\n        />\r\n        <h3>{title}</h3>\r\n      </nav>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction UploadPdfPage() {\r\n  const [loading, setLoading] = useState(false);\r\n  const { tagUid } = useContext(MenuStateCtx);\r\n  const { setAllTags, setAllNotes } = useContext(MenuMethodCtx);\r\n  const [percent, setPercent] = useState(0);\r\n\r\n  async function handleFile(file: File) {\r\n    if (file.type !== \"application/pdf\") return;\r\n    setLoading(true);\r\n    const { LoadPDF } = await import(\"../../lib/note/pdfImage\");\r\n    const note = await LoadPDF(file, setPercent);\r\n    note.tagID = tagUid;\r\n    const { tags, allNotes } = await createNewNote(note);\r\n    setAllTags(tags);\r\n    setAllNotes(allNotes);\r\n    setLoading(false);\r\n    message.success(\"PDF Loaded\");\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <SeconaryMenu title=\"Import PDF\">\r\n      <Dragger\r\n        disabled={loading}\r\n        multiple={false}\r\n        action=\"#\"\r\n        accept=\"application/pdf\"\r\n        beforeUpload={handleFile}\r\n      >\r\n        <p className=\"ant-upload-drag-icon\">\r\n          {loading ? (\r\n            <Progress width={48} type=\"circle\" percent={percent} />\r\n          ) : (\r\n            <InboxOutlined />\r\n          )}\r\n        </p>\r\n        <p className=\"ant-upload-hint\">Click or drag a pdf file here.</p>\r\n      </Dragger>\r\n    </SeconaryMenu>\r\n  );\r\n}\r\n\r\nconst ProfilePage = () => {\r\n  const userName = getUserName();\r\n  const [name, setName] = useState(userName);\r\n  const { setActive } = useContext(OthersStateCtx);\r\n  const handleEnter = () => {\r\n    if (!name) return;\r\n    saveUserName(name);\r\n    setActive(\"MENU\");\r\n  };\r\n  return (\r\n    <SeconaryMenu title=\"My profile\">\r\n      <div className=\"profile-page\">\r\n        <Input\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          prefix={<UserOutlined />}\r\n          allowClear\r\n        />\r\n        <Button\r\n          disabled={userName === name || !name}\r\n          onClick={handleEnter}\r\n          type=\"primary\"\r\n          block\r\n        >\r\n          OK\r\n        </Button>\r\n      </div>\r\n    </SeconaryMenu>\r\n  );\r\n};\r\n\r\nconst SettingsPage = () => {\r\n  const { menuInit } = useContext(MenuMethodCtx);\r\n\r\n  const clearAll = async () => {\r\n    await localforage.clear();\r\n    menuInit();\r\n  };\r\n\r\n  return (\r\n    <SeconaryMenu title=\"Settings\">\r\n      <Popconfirm\r\n        title=\"Everything will be deleted.\"\r\n        onConfirm={clearAll}\r\n        icon={<ClearOutlined />}\r\n        okText=\"Delete\"\r\n        okType=\"danger\"\r\n        okButtonProps={{ type: \"primary\" }}\r\n        cancelText=\"Cancel\"\r\n        placement=\"bottom\"\r\n      >\r\n        <Button icon={<ClearOutlined />} danger block>\r\n          Clear all\r\n        </Button>\r\n      </Popconfirm>\r\n    </SeconaryMenu>\r\n  );\r\n};\r\n\r\nconst OthersPage = () => {\r\n  const [height, setHeight] = useState(0);\r\n  const [active, setActive] = useState(\"\");\r\n\r\n  const calcHeight = (el: HTMLElement) => {\r\n    setHeight(el.clientHeight);\r\n  };\r\n\r\n  const cssProps = {\r\n    timeout: 300,\r\n    onEnter: calcHeight,\r\n    unmountOnExit: true,\r\n  };\r\n\r\n  const cssProps2 = {\r\n    ...cssProps,\r\n    classNames: \"secondary\",\r\n  };\r\n\r\n  useEffect(() => setActive(\"MENU\"), []);\r\n\r\n  return (\r\n    <OthersStateCtx.Provider value={{ setActive }}>\r\n      <section className=\"others-menu\" style={{ height }}>\r\n        <CSSTransition\r\n          classNames=\"primary\"\r\n          in={active === \"MENU\"}\r\n          {...cssProps}\r\n        >\r\n          <OthersMenu />\r\n        </CSSTransition>\r\n        <CSSTransition in={active === \"PDF\"} {...cssProps2}>\r\n          <UploadPdfPage />\r\n        </CSSTransition>\r\n        <CSSTransition in={active === \"PROFILE\"} {...cssProps2}>\r\n          <ProfilePage />\r\n        </CSSTransition>\r\n        <CSSTransition in={active === \"SETTINGS\"} {...cssProps2}>\r\n          <SettingsPage />\r\n        </CSSTransition>\r\n      </section>\r\n    </OthersStateCtx.Provider>\r\n  );\r\n};\r\n\r\nconst OthersButton = () => {\r\n  const btnProps: ButtonProps = {\r\n    shape: \"circle\",\r\n    icon: <CaretDownOutlined />,\r\n  };\r\n  return (\r\n    <Popover\r\n      placement=\"bottomRight\"\r\n      trigger=\"click\"\r\n      content={<OthersPage />}\r\n      zIndex={900}\r\n    >\r\n      <Button className=\"large\" {...btnProps} />\r\n      <Button className=\"small\" type=\"text\" {...btnProps} />\r\n    </Popover>\r\n  );\r\n};\r\n\r\nfunction JoinTeamButton() {\r\n  const [roomCode, setRoomCode] = useState(\"\");\r\n  const [wrong, setWrong] = useState(false);\r\n\r\n  const nav = useNavigate();\r\n  async function handleSubmit(code: string) {\r\n    const noteID = await getNoteID(code);\r\n    if (noteID) return nav(`/team/${noteID}`);\r\n    setRoomCode(\"\");\r\n    setWrong(true);\r\n  }\r\n\r\n  return (\r\n    <Popover\r\n      placement=\"bottomRight\"\r\n      trigger=\"click\"\r\n      title=\"Join a team note\"\r\n      destroyTooltipOnHide\r\n      onVisibleChange={() => setWrong(false)}\r\n      content={\r\n        <PasscodeInput\r\n          plain\r\n          length={4}\r\n          error={wrong}\r\n          value={roomCode}\r\n          onChange={(v) => {\r\n            setWrong(false);\r\n            setRoomCode(v);\r\n          }}\r\n          onFill={handleSubmit}\r\n        />\r\n      }\r\n    >\r\n      <Button className=\"team-btn large\" shape=\"round\" icon={<TeamOutlined />}>\r\n        Team\r\n      </Button>\r\n      <Button\r\n        className=\"team-btn small\"\r\n        type=\"text\"\r\n        shape=\"circle\"\r\n        icon={<TeamOutlined />}\r\n      />\r\n    </Popover>\r\n  );\r\n}\r\n","import React, { FC, useEffect, useRef, useState } from \"react\";\nimport { useSwipeable } from \"react-swipeable\";\nimport { Setter } from \"../../lib/hooks\";\nimport classNames from \"classnames\";\nimport \"./swipe-delete.sass\";\n\nconst SwipeDelete: FC<{\n  onDelete: () => void;\n  uid: string;\n  nowSwiped?: string;\n  setNowSwiped?: Setter<string>;\n  disable?: boolean;\n  className?: string;\n}> = ({\n  children,\n  nowSwiped,\n  setNowSwiped,\n  uid,\n  onDelete,\n  disable = false,\n  className,\n}) => {\n  const [deleted, setDeleted] = useState(false);\n  const [swiped, setSwiped] = useState(false);\n  const [height, setHeight] = useState<number>();\n  const wrapper = useRef<HTMLDivElement>(null);\n  const deleting = swiped && (nowSwiped === undefined || nowSwiped === uid);\n\n  const showDelete = () => {\n    setSwiped(true);\n    setNowSwiped && setNowSwiped(uid);\n    setHeight(wrapper.current?.clientHeight);\n  };\n\n  const hideDelete = () => {\n    setSwiped(false);\n    setNowSwiped && setNowSwiped(\"\");\n    setHeight(undefined);\n  };\n\n  const swipeHandler = useSwipeable({\n    onSwipedLeft: showDelete,\n    onSwipedRight: hideDelete,\n    preventDefaultTouchmoveEvent: true,\n    trackTouch: !disable,\n  });\n\n  useEffect(() => {\n    if (!disable) return;\n    setHeight(undefined);\n    setNowSwiped && setNowSwiped(\"\");\n    setSwiped(false);\n  }, [disable, setNowSwiped]);\n\n  return (\n    <div\n      className={classNames(\"swipe-wrapper\", className, {\n        deleted,\n        deleting,\n      })}\n      {...swipeHandler}\n      style={{ height }}\n    >\n      <div className=\"content\" ref={wrapper}>\n        {children}\n      </div>\n      <div className=\"button-wrapper\">\n        <div\n          className=\"button\"\n          onClick={(e) => {\n            setDeleted(true);\n            setTimeout(onDelete, 500);\n            e.stopPropagation();\n          }}\n          style={{ height }}\n        >\n          Delete\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SwipeDelete;\n","import { Button, Input, Popconfirm, Popover, Select } from \"antd\";\r\nimport { FC, MouseEventHandler, useContext, useEffect, useState } from \"react\";\r\nimport { deleteTag, editTag, NoteTag, addNewTag } from \"../../lib/note/archive\";\r\nimport { colors } from \"../../lib/color\";\r\nimport { MenuStateCtx, MenuMethodCtx } from \"./MainMenu\";\r\nimport {\r\n  TagOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  SettingOutlined,\r\n  ProfileOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport SwipeDelete from \"../ui/SwipeDelete\";\r\nimport classNames from \"classnames\";\r\n\r\nexport const TagCircle = ({ color }: { color: string }) => {\r\n  const style = { backgroundColor: color };\r\n  return <div className=\"tag-circle\" style={style} />;\r\n};\r\n\r\nconst TagItem: FC<{\r\n  noteTag: NoteTag;\r\n  removeTag: () => void;\r\n  onClick: MouseEventHandler<HTMLDivElement>;\r\n}> = ({ noteTag, removeTag, onClick }) => {\r\n  const { uid, color, name, notes } = noteTag;\r\n  const { editing, tagUid } = useContext(MenuStateCtx);\r\n  const { setAllTags } = useContext(MenuMethodCtx);\r\n  const [tagEditing, setTagEditing] = useState(false);\r\n  const [tagName, setTagName] = useState(name);\r\n  const [tagColor, setTagColor] = useState(color);\r\n\r\n  const cancelEditing = () => {\r\n    setTagName(name);\r\n    setTagColor(color);\r\n    setTagEditing(false);\r\n  };\r\n\r\n  const finishEditing = async () => {\r\n    const newTag: NoteTag = {\r\n      ...noteTag,\r\n      name: tagName,\r\n      color: tagColor,\r\n    };\r\n\r\n    const newAllTags = await editTag(newTag);\r\n    setAllTags(newAllTags);\r\n    setTagEditing(false);\r\n  };\r\n\r\n  const colorSelector = (\r\n    <Select value={tagColor} onSelect={setTagColor}>\r\n      {colors.map((c) => (\r\n        <Select.Option value={c} key={c}>\r\n          <TagCircle color={c} />\r\n        </Select.Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n\r\n  const TagNameInput = (\r\n    <Input\r\n      className=\"tag-name-input\"\r\n      addonBefore={colorSelector}\r\n      value={tagName}\r\n      onChange={(e) => setTagName(e.target.value)}\r\n    />\r\n  );\r\n\r\n  useEffect(() => {\r\n    setTagEditing(false);\r\n  }, [editing]);\r\n\r\n  return (\r\n    <div\r\n      className={classNames(\"tag-item\", {\r\n        curr: tagUid === uid,\r\n        editing: editing && tagEditing,\r\n      })}\r\n      onClick={onClick}\r\n    >\r\n      {(editing && tagEditing) || (\r\n        <>\r\n          <TagCircle color={tagColor} />\r\n          <span className=\"tag-name\">{tagName}</span>\r\n        </>\r\n      )}\r\n      {editing || <span className=\"tag-num\">{notes.length}</span>}\r\n      {editing && !tagEditing && (\r\n        <Button\r\n          size=\"small\"\r\n          type=\"text\"\r\n          onClick={() => setTagEditing(true)}\r\n          icon={<SettingOutlined />}\r\n        />\r\n      )}\r\n      {editing && tagEditing && (\r\n        <>\r\n          {TagNameInput}\r\n          <div className=\"buttons\">\r\n            <Popconfirm\r\n              title=\"This tag will be deleted.\"\r\n              onConfirm={removeTag}\r\n              placement=\"left\"\r\n              cancelText=\"Cancel\"\r\n              icon={<DeleteOutlined />}\r\n              okText=\"Delete\"\r\n              okType=\"danger\"\r\n              okButtonProps={{ type: \"primary\" }}\r\n            >\r\n              <Button danger>Delete</Button>\r\n            </Popconfirm>\r\n            <Button onClick={cancelEditing}>Cancel</Button>\r\n            <Button\r\n              disabled={tagName === \"\"}\r\n              type=\"primary\"\r\n              onClick={finishEditing}\r\n            >\r\n              OK\r\n            </Button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddTag = () => {\r\n  const { setAllTags } = useContext(MenuMethodCtx);\r\n  const [popShow, setPopShow] = useState(false);\r\n\r\n  async function addTag(val: string) {\r\n    const name = val.trim();\r\n    if (!name) {\r\n      return;\r\n    } else {\r\n      const tags = await addNewTag(name);\r\n      setAllTags(tags);\r\n      setPopShow(false);\r\n    }\r\n  }\r\n\r\n  const AddTagInput = () => (\r\n    <Search\r\n      placeholder=\"Tag name...\"\r\n      onSearch={addTag}\r\n      allowClear\r\n      enterButton={<Button icon={<PlusOutlined />} />}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div className=\"add-tag\">\r\n      <Popover\r\n        visible={popShow}\r\n        onVisibleChange={setPopShow}\r\n        content={<AddTagInput />}\r\n        trigger=\"click\"\r\n        placement=\"topLeft\"\r\n        destroyTooltipOnHide\r\n      >\r\n        <Button\r\n          shape=\"round\"\r\n          icon={<TagOutlined />}\r\n          onClick={() => setPopShow(true)}\r\n        >\r\n          Add\r\n        </Button>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function SideMenu({ onSelect }: { onSelect?: () => void }) {\r\n  const { allTags, editing, tagUid, allNotes } = useContext(MenuStateCtx);\r\n  const { setTagUid, setAllTags } = useContext(MenuMethodCtx);\r\n  const { setEditing } = useContext(MenuMethodCtx);\r\n  const [nowSwiped, setNowSwiped] = useState(\"\");\r\n\r\n  async function removeOneTag(uid: string) {\r\n    const tags = await deleteTag(uid);\r\n    setTagUid(\"DEFAULT\");\r\n    setAllTags(tags);\r\n  }\r\n\r\n  const selectTag = (key: string) => {\r\n    setTagUid(key);\r\n    onSelect && onSelect();\r\n  };\r\n\r\n  const allNoteTag = (\r\n    <div className=\"tag-wrapper\">\r\n      <div\r\n        className={classNames(\"tag-item\", { curr: tagUid === \"DEFAULT\" })}\r\n        onClick={() => selectTag(\"DEFAULT\")}\r\n      >\r\n        <ProfileOutlined className=\"all-note-icon\" />\r\n        <span className=\"tag-name\">All Notes</span>\r\n        <span className=\"tag-num\">{Object.keys(allNotes).length}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const swichEditing = () => {\r\n    setEditing((prev) => !prev);\r\n  };\r\n\r\n  const editButton = (\r\n    <Button\r\n      className=\"edit-btn small\"\r\n      shape=\"round\"\r\n      type={editing ? \"primary\" : \"default\"}\r\n      onClick={swichEditing}\r\n    >\r\n      {editing ? \"Done\" : \"Edit\"}\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <aside className=\"side-menu\">\r\n      <div className=\"tag-list\">\r\n        {allNoteTag}\r\n        {Object.values(allTags).map((tag) => {\r\n          const { uid } = tag;\r\n          const removeTag = () => removeOneTag(uid);\r\n          return (\r\n            <div className=\"tag-wrapper\" key={uid}>\r\n              <SwipeDelete\r\n                uid={uid}\r\n                onDelete={removeTag}\r\n                nowSwiped={nowSwiped}\r\n                setNowSwiped={setNowSwiped}\r\n                disable={editing}\r\n              >\r\n                <TagItem\r\n                  noteTag={tag}\r\n                  removeTag={removeTag}\r\n                  onClick={() => selectTag(uid)}\r\n                />\r\n              </SwipeDelete>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <footer>\r\n        <AddTag />\r\n        {editButton}\r\n      </footer>\r\n    </aside>\r\n  );\r\n}\r\n","import { Button, Drawer } from \"antd\";\r\nimport { useContext, useState } from \"react\";\r\nimport { MenuStateCtx, MenuMethodCtx } from \"./MainMenu\";\r\nimport { MenuOutlined } from \"@ant-design/icons\";\r\nimport SideMenu from \"./SideMenu\";\r\n\r\nexport default function LeftTools() {\r\n  const [asideOn, setAsideOn] = useState(false);\r\n  const { editing } = useContext(MenuStateCtx);\r\n  const { setEditing } = useContext(MenuMethodCtx);\r\n\r\n  function swichEditing() {\r\n    setEditing((prev) => !prev);\r\n  }\r\n\r\n  const editButton = (\r\n    <Button\r\n      className=\"edit-btn large\"\r\n      onClick={swichEditing}\r\n      type={editing ? \"primary\" : \"text\"}\r\n    >\r\n      {editing ? \"Done\" : \"Edit\"}\r\n    </Button>\r\n  );\r\n\r\n  const AsideButton = (\r\n    <>\r\n      <Button\r\n        className=\"aside-btn\"\r\n        type=\"text\"\r\n        icon={<MenuOutlined />}\r\n        onClick={() => setAsideOn((prev) => !prev)}\r\n      />\r\n      <Drawer\r\n        className=\"aside-drawer\"\r\n        width={300}\r\n        placement=\"left\"\r\n        closable={false}\r\n        visible={asideOn}\r\n        onClose={() => setAsideOn(false)}\r\n        contentWrapperStyle={{ boxShadow: \"none\" }}\r\n        bodyStyle={{ padding: 0, overflow: \"hidden\" }}\r\n        destroyOnClose\r\n      >\r\n        <SideMenu onSelect={() => editing || setAsideOn(false)} />\r\n      </Drawer>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div className=\"left-tools\">\r\n      {AsideButton}\r\n      {editButton}\r\n    </div>\r\n  );\r\n}\r\n","import { FC, useMemo, useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  NoteTag,\r\n  deleteNote,\r\n  moveNoteTag,\r\n  editNoteData,\r\n} from \"../../lib/note/archive\";\r\nimport {\r\n  SwapOutlined,\r\n  TagsOutlined,\r\n  EditOutlined,\r\n  CloudOutlined,\r\n  CloseOutlined,\r\n  DeleteOutlined,\r\n  SearchOutlined,\r\n  ClockCircleOutlined,\r\n  SortAscendingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Button, Input, Popconfirm, Tag, Dropdown, Menu } from \"antd\";\r\nimport { MenuStateCtx, MenuMethodCtx } from \"./MainMenu\";\r\nimport { NoteInfo } from \"../../lib/note/note\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport SwipeDelete from \"../ui/SwipeDelete\";\r\nimport dafaultImg from \"../ui/default.png\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { TagCircle } from \"./SideMenu\";\r\nimport { List, Set } from \"immutable\";\r\nimport classNames from \"classnames\";\r\nimport moment from \"moment\";\r\n\r\nexport default function NoteList({ noteList }: { noteList: List<NoteInfo> }) {\r\n  const [nowSwiped, setNowSwiped] = useState(\"\");\r\n  const { editing } = useContext(MenuStateCtx);\r\n  const { setAllTags, setAllNotes } = useContext(MenuMethodCtx);\r\n  const [sortType, setSortType] = useState(\"LAST\");\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [selectedNotes, setSelectNotes] = useState(Set<string>());\r\n\r\n  const removeNotes = async (uids: string[]) => {\r\n    let tags: Record<string, NoteTag> | undefined;\r\n    let allNotes: Record<string, NoteInfo> | undefined;\r\n    for (let uid of uids) {\r\n      const res = await deleteNote(uid);\r\n      tags = res.tags;\r\n      allNotes = res.allNotes;\r\n    }\r\n    tags && setAllTags(tags);\r\n    allNotes && setAllNotes(allNotes);\r\n  };\r\n\r\n  const moveNotes = async (noteIDs: string[], tagID: string) => {\r\n    let tags: Record<string, NoteTag> | undefined;\r\n    let allNotes: Record<string, NoteInfo> | undefined;\r\n    for (let noteID of noteIDs) {\r\n      const res = await moveNoteTag(noteID, tagID);\r\n      tags = res.tags;\r\n      allNotes = res.allNotes;\r\n    }\r\n    tags && setAllTags(tags);\r\n    allNotes && setAllNotes(allNotes);\r\n  };\r\n\r\n  const sortedList = useMemo(() => {\r\n    switch (sortType) {\r\n      case \"CREATE\":\r\n        return noteList.sortBy((n) => -n.createTime);\r\n      case \"LAST\":\r\n        return noteList.sortBy((n) => -n.lastTime);\r\n      case \"NAME\":\r\n        return noteList.sortBy((n) => n.name.toUpperCase());\r\n      default:\r\n        return noteList;\r\n    }\r\n  }, [noteList, sortType]);\r\n\r\n  const filterdList = useMemo(\r\n    () =>\r\n      sortedList.filter((n) =>\r\n        n.name.toLowerCase().includes(searchText.trim().toLowerCase())\r\n      ),\r\n    [searchText, sortedList]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setSearchText(\"\");\r\n    setSelectNotes(Set());\r\n  }, [noteList, editing]);\r\n\r\n  return (\r\n    <div className=\"note-list\">\r\n      <HeadTools\r\n        sortType={sortType}\r\n        setSortType={setSortType}\r\n        searchText={searchText}\r\n        setSearchText={setSearchText}\r\n        onDelete={() => removeNotes(selectedNotes.toArray())}\r\n        onMove={(tagID) => moveNotes(selectedNotes.toArray(), tagID)}\r\n        disabled={selectedNotes.size === 0}\r\n      />\r\n      {filterdList.map((noteInfo) => {\r\n        const { uid } = noteInfo;\r\n        const removeNote = () => removeNotes([uid]);\r\n        return (\r\n          <SwipeDelete\r\n            onDelete={removeNote}\r\n            nowSwiped={nowSwiped}\r\n            setNowSwiped={setNowSwiped}\r\n            disable={editing}\r\n            uid={uid}\r\n            key={uid}\r\n          >\r\n            <NoteItem\r\n              noteInfo={noteInfo}\r\n              selected={selectedNotes.has(uid)}\r\n              setSelectNotes={setSelectNotes}\r\n            />\r\n          </SwipeDelete>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst HeadTools: FC<{\r\n  sortType: string;\r\n  setSortType: Setter<string>;\r\n  searchText: string;\r\n  setSearchText: Setter<string>;\r\n  onDelete: () => void;\r\n  onMove: (tagID: string) => void;\r\n  disabled: boolean;\r\n}> = ({\r\n  sortType,\r\n  setSortType,\r\n  searchText,\r\n  setSearchText,\r\n  onDelete,\r\n  onMove,\r\n  disabled = true,\r\n}) => {\r\n  const { editing, allTags } = useContext(MenuStateCtx);\r\n\r\n  const sortMenu = (\r\n    <Menu\r\n      onClick={({ key }) => setSortType(key)}\r\n      selectedKeys={[sortType]}\r\n      items={[\r\n        { icon: <ClockCircleOutlined />, key: \"CREATE\", label: \"Created Time\" },\r\n        { icon: <EditOutlined />, key: \"LAST\", label: \"Modified Time\" },\r\n        { icon: <SortAscendingOutlined />, key: \"NAME\", label: \"Name\" },\r\n      ]}\r\n    />\r\n  );\r\n\r\n  const sortButton = (\r\n    <Dropdown overlay={sortMenu} trigger={[\"click\"]} placement=\"bottom\">\r\n      <Button\r\n        className=\"sort-btn\"\r\n        type=\"text\"\r\n        shape=\"circle\"\r\n        icon={<SwapOutlined rotate={90} />}\r\n      />\r\n    </Dropdown>\r\n  );\r\n\r\n  const deleteButton = (\r\n    <Popconfirm\r\n      title=\"Notes will be deleted.\"\r\n      onConfirm={onDelete}\r\n      icon={<DeleteOutlined />}\r\n      placement=\"bottom\"\r\n      cancelText=\"Cancel\"\r\n      disabled={disabled}\r\n      okText=\"Delete\"\r\n      okType=\"danger\"\r\n      okButtonProps={{ type: \"primary\" }}\r\n    >\r\n      <Button\r\n        className=\"del-btn\"\r\n        shape=\"round\"\r\n        type=\"text\"\r\n        disabled={disabled}\r\n        danger={!disabled}\r\n        icon={<DeleteOutlined />}\r\n      >\r\n        Delete\r\n      </Button>\r\n    </Popconfirm>\r\n  );\r\n\r\n  const overlay = (\r\n    <Menu\r\n      onClick={({ key }) => onMove(key)}\r\n      items={[\r\n        {\r\n          key: \"DEFAULT\",\r\n          label: (\r\n            <div className=\"tag-select\">\r\n              <CloseOutlined className=\"none-tag-icon\" />\r\n              <span className=\"name\">No Tag</span>\r\n            </div>\r\n          ),\r\n        },\r\n        ...Object.values(allTags).map((t) => ({\r\n          key: t.uid,\r\n          label: (\r\n            <div className=\"tag-select\">\r\n              <TagCircle color={t.color} />\r\n              <span className=\"name\">{t.name}</span>\r\n            </div>\r\n          ),\r\n        })),\r\n      ]}\r\n    />\r\n  );\r\n\r\n  const tagButton = (\r\n    <Dropdown\r\n      disabled={disabled}\r\n      overlay={overlay}\r\n      trigger={[\"click\"]}\r\n      placement=\"bottom\"\r\n    >\r\n      <Button\r\n        shape=\"round\"\r\n        type=\"text\"\r\n        className=\"tag-btn\"\r\n        icon={<TagsOutlined />}\r\n        style={{ transition: \"none\" }}\r\n      >\r\n        Tag\r\n      </Button>\r\n    </Dropdown>\r\n  );\r\n\r\n  return (\r\n    <div className={classNames(\"head-tools\", { editing })}>\r\n      {editing ? (\r\n        <>\r\n          {tagButton}\r\n          {deleteButton}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Input\r\n            value={searchText}\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n            className=\"search-input\"\r\n            prefix={<SearchOutlined />}\r\n            bordered={false}\r\n            allowClear\r\n          />\r\n          {sortButton}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NoteItem: FC<{\r\n  noteInfo: NoteInfo;\r\n  selected: boolean;\r\n  setSelectNotes: Setter<Set<string>>;\r\n}> = ({ noteInfo, selected, setSelectNotes }) => {\r\n  const { team, uid, name, thumbnail, lastTime } = noteInfo;\r\n  const href = `${team ? \"team\" : \"reader\"}/${uid}`;\r\n\r\n  const { editing } = useContext(MenuStateCtx);\r\n  const { setAllNotes } = useContext(MenuMethodCtx);\r\n  const [noteName, setNoteName] = useState(name);\r\n  const nav = useNavigate();\r\n\r\n  const saveNoteName = () => {\r\n    const newName = noteName.trim();\r\n    if (!newName || newName === name) return setNoteName(name);\r\n    editNoteData(uid, { name: newName });\r\n    setAllNotes((prev) => ({\r\n      ...prev,\r\n      [uid]: { ...prev[uid], name: newName },\r\n    }));\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (!editing) return nav(href);\r\n    setSelectNotes((prev) => {\r\n      if (prev.has(uid)) return prev.delete(uid);\r\n      else return prev.add(uid);\r\n    });\r\n  };\r\n\r\n  const date = useMemo(() => moment(lastTime).calendar(), [lastTime]);\r\n\r\n  return (\r\n    <div\r\n      className={classNames(\"note-item\", { selected })}\r\n      onClick={handleClick}\r\n    >\r\n      <div className=\"timg-wrapper\">\r\n        <img src={thumbnail || dafaultImg} alt={name} className=\"timg\" />\r\n        {team && (\r\n          <Tag color=\"blue\" className=\"cloud-icon\">\r\n            <CloudOutlined />\r\n          </Tag>\r\n        )}\r\n      </div>\r\n      <div className=\"content\">\r\n        {editing || <p className=\"name\">{name}</p>}\r\n        {editing && (\r\n          <Input\r\n            className=\"name-input\"\r\n            value={noteName}\r\n            onChange={(e) => setNoteName(e.target.value)}\r\n            onClick={(e) => e.stopPropagation()}\r\n            onBlur={saveNoteName}\r\n          />\r\n        )}\r\n        <p className=\"date\">{date}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, {\r\n  createContext,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from \"react\";\r\nimport {\r\n  createNewNote,\r\n  getAllNotes,\r\n  getAllTags,\r\n  NoteTag,\r\n} from \"../../lib/note/archive\";\r\nimport { createEmptyNote, NoteInfo } from \"../../lib/note/note\";\r\nimport { FormOutlined } from \"@ant-design/icons\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport RightTools from \"./RightTools\";\r\nimport LeftTools from \"./LeftTools\";\r\nimport classNames from \"classnames\";\r\nimport SideMenu from \"./SideMenu\";\r\nimport NoteList from \"./NoteList\";\r\nimport { List } from \"immutable\";\r\nimport { Button } from \"antd\";\r\nimport \"./menu.sass\";\r\n\r\nexport const MenuStateCtx = createContext({\r\n  tagUid: \"DEFAULT\",\r\n  editing: false,\r\n  allNotes: {} as Record<string, NoteInfo>,\r\n  allTags: {} as Record<string, NoteTag>,\r\n});\r\n\r\nexport const MenuMethodCtx = createContext({\r\n  setAllNotes: (() => {}) as Setter<Record<string, NoteInfo>>,\r\n  setAllTags: (() => {}) as Setter<Record<string, NoteTag>>,\r\n  setTagUid: (() => {}) as Setter<string>,\r\n  setEditing: (() => {}) as Setter<boolean>,\r\n  menuInit: () => {},\r\n});\r\n\r\nexport default function MainMenu() {\r\n  const [allNotes, setAllNotes] = useState<Record<string, NoteInfo>>({});\r\n  const [allTags, setAllTags] = useState<Record<string, NoteTag>>({});\r\n  const [tagUid, setTagUid] = useState(\"DEFAULT\");\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const selectedTag = useMemo(\r\n    () =>\r\n      tagUid === \"DEFAULT\"\r\n        ? {\r\n            uid: \"\",\r\n            name: \"All Notes\",\r\n            color: \"#000000\",\r\n            notes: Object.keys(allNotes),\r\n          }\r\n        : allTags[tagUid],\r\n    [allNotes, allTags, tagUid]\r\n  );\r\n\r\n  const noteList = useMemo(\r\n    () =>\r\n      List(\r\n        selectedTag.notes\r\n          .filter((uid) => uid in allNotes)\r\n          .map((uid) => allNotes[uid])\r\n      ),\r\n    [selectedTag, allNotes]\r\n  );\r\n\r\n  const menuInit = () => {\r\n    getAllNotes().then(setAllNotes);\r\n    getAllTags().then(setAllTags);\r\n    document.title = \"Multibility\";\r\n  };\r\n  useEffect(menuInit, []);\r\n  const logo = tagUid === \"DEFAULT\";\r\n\r\n  return (\r\n    <MenuStateCtx.Provider value={{ tagUid, editing, allNotes, allTags }}>\r\n      <MenuMethodCtx.Provider\r\n        value={{ setAllNotes, setAllTags, setEditing, setTagUid, menuInit }}\r\n      >\r\n        <div className=\"main-menu container\">\r\n          <header>\r\n            <LeftTools />\r\n            <h2 className={classNames({ logo })}>\r\n              {logo ? \"Multibility\" : selectedTag.name}\r\n            </h2>\r\n            <RightTools />\r\n          </header>\r\n          <main>\r\n            <SideMenu />\r\n            <NoteList noteList={noteList} />\r\n            <NewNoteButton />\r\n          </main>\r\n        </div>\r\n      </MenuMethodCtx.Provider>\r\n    </MenuStateCtx.Provider>\r\n  );\r\n}\r\n\r\nexport const NewNoteButton = () => {\r\n  const { tagUid } = useContext(MenuStateCtx);\r\n  const { setAllTags, setAllNotes } = useContext(MenuMethodCtx);\r\n\r\n  async function addNewNote() {\r\n    const note = createEmptyNote();\r\n    note.tagID = tagUid;\r\n    const { tags, allNotes } = await createNewNote(note);\r\n    setAllTags(tags);\r\n    setAllNotes(allNotes);\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      className=\"new-note\"\r\n      size=\"large\"\r\n      type=\"primary\"\r\n      shape=\"circle\"\r\n      onClick={addNewNote}\r\n      icon={<FormOutlined />}\r\n    />\r\n  );\r\n};\r\n"],"names":["OthersStateCtx","createContext","setActive","RightTools","className","JoinTeamButton","OthersButton","OthersMenu","useContext","onClick","key","items","icon","FilePdfOutlined","label","UserOutlined","SettingOutlined","SeconaryMenu","children","title","type","shape","ArrowLeftOutlined","UploadPdfPage","useState","loading","setLoading","tagUid","MenuStateCtx","MenuMethodCtx","setAllTags","setAllNotes","percent","setPercent","file","LoadPDF","note","tagID","createNewNote","tags","allNotes","message","Dragger","disabled","multiple","action","accept","beforeUpload","width","InboxOutlined","ProfilePage","userName","getUserName","name","setName","value","onChange","e","target","prefix","allowClear","saveUserName","block","SettingsPage","menuInit","clearAll","localforage","onConfirm","ClearOutlined","okText","okType","okButtonProps","cancelText","placement","danger","OthersPage","height","setHeight","active","cssProps","timeout","onEnter","el","clientHeight","unmountOnExit","cssProps2","classNames","useEffect","Provider","style","CSSTransition","in","btnProps","CaretDownOutlined","trigger","content","zIndex","roomCode","setRoomCode","wrong","setWrong","nav","useNavigate","code","getNoteID","noteID","destroyTooltipOnHide","onVisibleChange","plain","length","error","v","onFill","TeamOutlined","nowSwiped","setNowSwiped","uid","onDelete","disable","deleted","setDeleted","swiped","setSwiped","wrapper","useRef","deleting","undefined","swipeHandler","useSwipeable","onSwipedLeft","current","onSwipedRight","preventDefaultTouchmoveEvent","trackTouch","ref","setTimeout","stopPropagation","TagCircle","backgroundColor","color","TagItem","noteTag","removeTag","notes","editing","tagEditing","setTagEditing","tagName","setTagName","tagColor","setTagColor","finishEditing","newTag","editTag","newAllTags","colorSelector","onSelect","colors","c","TagNameInput","addonBefore","curr","size","DeleteOutlined","AddTag","popShow","setPopShow","addTag","val","trim","addNewTag","AddTagInput","Search","placeholder","onSearch","enterButton","PlusOutlined","visible","TagOutlined","SideMenu","allTags","setTagUid","setEditing","deleteTag","selectTag","allNoteTag","ProfileOutlined","Object","keys","editButton","prev","values","map","tag","removeOneTag","LeftTools","asideOn","setAsideOn","AsideButton","MenuOutlined","closable","onClose","contentWrapperStyle","boxShadow","bodyStyle","padding","overflow","destroyOnClose","NoteList","noteList","sortType","setSortType","searchText","setSearchText","Set","selectedNotes","setSelectNotes","removeNotes","uids","deleteNote","res","moveNotes","noteIDs","moveNoteTag","sortedList","useMemo","sortBy","n","createTime","lastTime","toUpperCase","filterdList","filter","toLowerCase","includes","HeadTools","toArray","onMove","noteInfo","NoteItem","selected","has","sortMenu","selectedKeys","ClockCircleOutlined","EditOutlined","SortAscendingOutlined","sortButton","overlay","SwapOutlined","rotate","deleteButton","CloseOutlined","t","tagButton","TagsOutlined","transition","SearchOutlined","bordered","team","thumbnail","href","noteName","setNoteName","date","moment","calendar","delete","add","src","dafaultImg","alt","CloudOutlined","onBlur","newName","editNoteData","MainMenu","selectedTag","List","getAllNotes","then","getAllTags","document","logo","NewNoteButton","createEmptyNote","FormOutlined"],"sourceRoot":""}