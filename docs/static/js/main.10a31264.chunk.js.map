{"version":3,"sources":["lib/draw/DrawState.ts","lib/note/note.ts","lib/user.ts","lib/color.ts","lib/note/archive.ts","lib/draw/drawer.ts","lib/note/pdfImage.ts","lib/network/http.ts","component/ui/DigitInput.tsx","component/menu/RightTools.tsx","component/menu/LeftTools.tsx","component/menu/SideMenu.tsx","component/ui/default.png","component/menu/NoteList.tsx","component/menu/MainMenu.tsx","component/draw/DrawDisplay.tsx","lib/touch/touch.ts","component/draw/DrawInput.tsx","lib/draw/eraser.ts","component/draw/Draw.tsx","lib/draw/StateSet.ts","component/reader/Team.tsx","lib/network/io.ts","component/ui/DigitDisplay.tsx","component/reader/DrawTools.tsx","component/reader/Reader.tsx","component/Test.tsx","index.tsx"],"names":["defaultRecord","state","strokes","List","uidStack","undoStack","OrderedSet","eraseStack","deleted","Set","defaultFactory","Record","defaultFlatState","DrawState","immutable","width","height","lastOp","this","getImmutable","get","getDeleted","undo","getUndoStack","getEraseStack","filter","uid","has","erase","getValidEraseStack","getStrokes","some","s","erased","last","drawState","getUidStack","type","undoUid","set","update","add","pop","redoUid","butLast","push","points","getUid","stroke","pushedState","mergeUndo","d","concat","immuErase","pushErase","RedoUid","delete","mergedRecord","reduce","prev","e","deletedAll","toArray","drawStateRecord","createEmptyNote","name","Date","now","tagId","team","withImg","pages","ratio","getUserId","cached","userId","localStorage","getItem","setItem","getUserName","slice","colors","getRandomColor","index","Math","floor","random","length","getAllNotes","a","localforage","allNotes","getAllTags","tags","storeTag","newTag","color","notes","deleteTag","editTag","tag","editedTag","loadNote","editNoteData","note","pdf","noteInfo","prevNote","saveNoteInfo","createNewNote","deleteNote","removeItem","id","moveNoteTag","noteId","prevTagId","convertTeamPage","teamPages","notePages","Object","entries","key","page","states","values","flat","saveTeamNote","Drawer","context","point","x","y","lineWidth","beginPath","moveTo","toP","fromP","xc","yc","strokeStyle","lineCap","lineJoin","quadraticCurveTo","max","map","p","i","pressure","log","canvas","document","createElement","getContext","Error","drawPoints","drawer","drawCurveComplete","createVirtualCanvas","getCanvasBlob","Promise","res","toBlob","getPageImage","pageNum","scale","getPage","viewport","getViewport","console","time","render","canvasContext","transform","promise","timeEnd","blob","getImages","url","progressCb","pdfjs","numPages","blobs","ratios","thumbnail","images","LoadPDF","file","URL","createObjectURL","forEach","image","idx","replace","workerSrc","pdfjsWorker","BASE_URL","getNoteId","roomCode","axios","data","statusCode","pageInfos","pageId","method","responseType","error","putNote","pageRecord","put","formData","FormData","append","headers","code","updatePages","getTeamNote","info","defaults","baseURL","interceptors","request","use","config","DigitInput","value","digitNum","onChange","onSubmit","num2digits","num","Array","fill","String","padEnd","split","useState","nowFocused","setNowFocused","digits","setDigits","focus","inputRefs","current","el","blur","useEffect","newDigits","findIndex","newValue","Number","join","useRef","handleKeyUp","className","ref","pattern","val","test","handleChange","target","onKeyUp","onClick","OthersStateUpdateCtx","createContext","setActive","RightTools","JoinTeamButton","OthersMenu","useContext","Item","Menu","FilePdfOutlined","UserOutlined","SeconaryMenu","children","title","shape","icon","ArrowLeftOutlined","level","UploadPdfPage","loading","setLoading","tagUid","MenuStateCtx","MenuStateUpdateCtx","setAllTags","setAllNotes","percent","setPercent","message","success","disabled","multiple","action","accept","beforeUpload","InboxOutlined","ProfilePage","userName","setName","prefix","trim","setUserName","block","OthersPage","setHeight","active","cssProps","timeout","onEnter","clientHeight","unmountOnExit","cssProps2","classNames","Provider","style","CSSTransition","in","OthersButton","placement","trigger","content","CaretDownOutlined","setRoomCode","nav","useNavigate","dismiss","destroyTooltipOnHide","TeamOutlined","LeftTools","editing","setEditing","TagCircle","backgroundColor","TagItem","noteTag","setTagUid","tagEditing","setTagEditing","tagName","setTagName","tagColor","setTagColor","newAllTags","colorSelector","onSelect","c","Option","TagNameInput","addonBefore","onConfirm","okText","cancelText","danger","size","MinusCircleOutlined","CheckOutlined","CloseOutlined","SettingOutlined","AddTag","popContent","placeholder","onSearch","allowClear","enterButton","PlusOutlined","TagOutlined","SideMenu","allTags","htmlFor","MenuOutlined","defaultSelectedKeys","defaultOpenKeys","mode","ProfileOutlined","NoteList","noteList","NoteItem","href","noteName","setNoteName","imgLoaded","setImgLoaded","removeNote","useMemo","prevUrl","revokeObjectURL","move","TagButton","overlay","t","TagsOutlined","DeleteButton","DeleteOutlined","to","src","dafaultImg","alt","onLoad","CloudOutlined","onBlur","MainMenu","selectedTag","keys","then","NewNoteButton","FormOutlined","React","memo","canvasEl","addEventListener","preventDefault","passive","ctx","clearRect","getValidStrokes","isFinger","touches","touchType","DrawInput","setDrawState","finger","even","erasing","eraser","clientWidth","isDrawing","getCanvasEl","getPosition","clientRect","getBoundingClientRect","offsetX","clientX","left","offsetY","clientY","top","updateClientSize","handleEnd","updateDrawState","eraseStrokes","from","clear","addStroke","requestAnimationFrame","cvs","touchPrevent","removeEventListener","onTouchStart","touch","force","newP","computeLineWidth","drawBegin","onMouseDown","onTouchMove","drawCurve","undefined","checkWithIntrpl","onMouseMove","onTouchEnd","onMouseUp","onMouseLeave","Eraser","cache","ctxRec","prevPoint","isPointInStroke","checkPoints","prevX","prevY","currX","currY","dx","dy","g","abs","gx","gy","computeIntrplPoints","checkPoint","curr","Draw","OrderedMap","editStack","Rec","StateSet","newImmu","getStates","getEditStack","isUndoable","lastUid","prevDS","lastSetOp","newDS","isRedoable","redo","prevDs","ds","pushStroke","setState","SetOp","pushUndo","pushRedo","list","item","createFromList","loadFromFlat","TeamStateCtx","userList","Team","useParams","teamStateSet","setTeamStateSet","setCode","setUserList","io","autoConnect","query","IoFactory","ws","loadTeamPages","createFromPages","WIDTH","roomInit","on","operation","pushOperation","joined","members","LoginOutlined","leaved","warning","LogoutOutlined","connect","roomDestroy","off","disconnect","Reader","teamOn","op","emit","DigitDisplay","randomNum","setRandomNum","padStart","resetRandom","timer","setTimeout","clearTimeout","Digit","digit","IconFont","createFromIconfontCN","scriptUrl","DrawTools","setDrawCtrl","handleUndo","handleRedo","instantSave","drawCtrl","DrawCtrlCtx","ReaderStateCtx","saved","stateSet","updateDrawCtrl","updated","PenPanel","min","PenButton","HighlightOutlined","getPopupContainer","parentElement","LeftOutlined","SaveOutlined","UndoOutlined","RedoOutlined","RoomInfo","UserCard","userInfo","u","defaultVisible","JoinRoom","createRoom","ReaderMethodCtx","defaultDrawCtrl","setSaved","setPageRecord","setNote","setStateSet","loadNotePages","storedNote","debouncedSave","useCallback","debounce","pr","flush","noteDestroy","useBeforeunload","setPageState","flaten","getKeys","getOneState","teamState","PageWrapper","updateState","imageBlob","LoadingOutlined","loaded","setLoaded","DrawDisplay","DrawWrapper","fn","Test","cvsRef","assert","placeholderEl","padding","ReactDOM","path","element","getElementById"],"mappings":"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","file":"static/js/main.10a31264.chunk.js","sourcesContent":["import { List, OrderedSet, Record, Set } from \"immutable\";\nimport { Dispatch, SetStateAction } from \"react\";\nimport { Point } from \"./draw\";\nimport { v4 as getUid } from \"uuid\";\n\nexport interface Stroke {\n  uid: string;\n  points: Point[];\n}\n\ninterface Erase {\n  uid: string;\n  erased: string[];\n}\n\ninterface ImmuErase {\n  uid: string;\n  erased: Set<string>;\n}\n\nexport type Operation =\n  | {\n      type: \"add\";\n      stroke: Stroke;\n    }\n  | {\n      type: \"erase\";\n      erase: Erase;\n    }\n  | {\n      type: \"undo\";\n      undoUid: string;\n    }\n  | {\n      type: \"redo\";\n      redoUid: string;\n    };\n\ninterface DrawStateRecordType {\n  state: \"drawing\" | \"revoking\";\n  strokes: List<Stroke>;\n  uidStack: List<string>;\n  undoStack: OrderedSet<string>;\n  eraseStack: List<ImmuErase>;\n  deleted: Set<string>;\n}\n\ntype DrawStateRecord = Record<DrawStateRecordType>;\n\nconst defaultRecord: Readonly<DrawStateRecordType> = {\n  state: \"drawing\",\n  strokes: List(),\n  uidStack: List(),\n  undoStack: OrderedSet(),\n  eraseStack: List(),\n  deleted: Set(),\n};\n\nconst defaultFactory = Record(defaultRecord);\n\nexport interface FlatState {\n  strokes: Stroke[];\n}\n\nexport const defaultFlatState: FlatState = {\n  strokes: [],\n};\n\nexport class DrawState {\n  constructor(\n    private immutable: DrawStateRecord,\n    public readonly width: number,\n    public readonly height: number,\n    public lastOp?: Operation\n  ) {}\n\n  getImmutable() {\n    return this.immutable;\n  }\n\n  getUidStack() {\n    return this.getImmutable().get(\"uidStack\");\n  }\n\n  getUndoStack() {\n    return this.getImmutable().get(\"undoStack\");\n  }\n\n  getEraseStack() {\n    return this.getImmutable().get(\"eraseStack\");\n  }\n\n  getValidEraseStack() {\n    const deleted = this.getDeleted();\n    const undo = this.getUndoStack();\n    return this.getEraseStack().filter(\n      ({ uid }) => !deleted.has(uid) && !undo.has(uid)\n    );\n  }\n\n  getStrokes() {\n    return this.getImmutable().get(\"strokes\");\n  }\n\n  getValidStrokes() {\n    const deleted = this.getDeleted();\n    const undo = this.getUndoStack();\n    const erase = this.getValidEraseStack();\n    return this.getStrokes().filter(\n      ({ uid }) =>\n        !deleted.has(uid) &&\n        !undo.has(uid) &&\n        !erase.some((s) => s.erased.has(uid))\n    );\n  }\n\n  getDeleted() {\n    return this.getImmutable().get(\"deleted\");\n  }\n\n  getState() {\n    return this.getImmutable().get(\"state\");\n  }\n\n  getLastStroke() {\n    return this.getImmutable().get(\"strokes\").last();\n  }\n\n  static createEmpty(width: number, height: number) {\n    return new DrawState(defaultFactory(), width, height);\n  }\n\n  static undo(drawState: DrawState) {\n    const uid = drawState.getUidStack().last();\n\n    if (!uid) return drawState;\n\n    const lastOp: Operation = { type: \"undo\", undoUid: uid };\n\n    return new DrawState(\n      drawState\n        .getImmutable()\n        .set(\"state\", \"revoking\")\n        .update(\"undoStack\", (s) => s.add(uid))\n        .update(\"uidStack\", (s) => s.pop()),\n      drawState.width,\n      drawState.height,\n      lastOp\n    );\n  }\n\n  static redo(drawState: DrawState) {\n    const undo = drawState.getUndoStack();\n    const uid = undo.last();\n    if (!uid) return drawState;\n\n    const lastOp: Operation = { type: \"redo\", redoUid: uid };\n\n    return new DrawState(\n      drawState\n        .getImmutable()\n        .update(\"undoStack\", (s) => s.butLast())\n        .update(\"uidStack\", (s) => s.push(uid)),\n      drawState.width,\n      drawState.height,\n      lastOp\n    );\n  }\n\n  static addStroke(drawState: DrawState, points: Point[]) {\n    const uid = getUid();\n    const stroke = { uid, points };\n    const undo = drawState.getUndoStack();\n\n    const pushedState = mergeUndo(\n      drawState\n        .getImmutable()\n        .set(\"state\", \"drawing\")\n        .update(\"deleted\", (d) => d.concat(undo))\n        .set(\"undoStack\", OrderedSet())\n        .update(\"strokes\", (s) => s.push(stroke))\n        .update(\"uidStack\", (s) => s.push(uid))\n    );\n\n    const lastOp: Operation = { type: \"add\", stroke };\n\n    return new DrawState(\n      pushedState,\n      drawState.width,\n      drawState.height,\n      lastOp\n    );\n  }\n\n  static pushStroke(drawState: DrawState, stroke: Stroke) {\n    return new DrawState(\n      drawState.getImmutable().update(\"strokes\", (s) => s.push(stroke)),\n      drawState.width,\n      drawState.height\n    );\n  }\n\n  static pushErase(drawState: DrawState, erase: Erase) {\n    const { uid, erased } = erase;\n    const immuErase: ImmuErase = { uid, erased: Set(erased) };\n    return new DrawState(\n      drawState\n        .getImmutable()\n        .update(\"eraseStack\", (s) => s.push(immuErase))\n        .update(\"uidStack\", (s) => s.push(uid)),\n      drawState.width,\n      drawState.height\n    );\n  }\n\n  static eraseStrokes(drawState: DrawState, erased: string[]) {\n    const erase = { uid: getUid(), erased };\n    return DrawState.pushErase(drawState, erase);\n  }\n\n  static pushUndo(drawState: DrawState, undoUid: string) {\n    return new DrawState(\n      drawState.getImmutable().update(\"undoStack\", (s) => s.add(undoUid)),\n      drawState.width,\n      drawState.height\n    );\n  }\n\n  static pushRedo(drawState: DrawState, RedoUid: string) {\n    return new DrawState(\n      drawState.getImmutable().update(\"undoStack\", (s) => s.delete(RedoUid)),\n      drawState.width,\n      drawState.height\n    );\n  }\n\n  static flaten(drawState: DrawState): FlatState {\n    const mergedRecord = mergeUndo(drawState.getImmutable());\n    const deleted = mergedRecord.get(\"deleted\");\n    const erased = drawState.getValidEraseStack().reduce((prev, e) => {\n      return prev.concat(e.erased);\n    }, Set<string>());\n\n    const deletedAll = deleted.concat(erased);\n    const strokes = mergedRecord\n      .get(\"strokes\")\n      .filter((s) => !deletedAll.has(s.uid))\n      .toArray();\n    return { strokes };\n  }\n\n  static loadFromFlat(\n    { strokes }: FlatState,\n    width: number,\n    height: number\n  ): DrawState {\n    return new DrawState(\n      defaultFactory()\n        .set(\"strokes\", List(strokes)),\n      width,\n      height\n    );\n  }\n}\n\nfunction mergeUndo(drawStateRecord: DrawStateRecord) {\n  const undo = drawStateRecord.get(\"undoStack\");\n  return drawStateRecord\n    .update(\"deleted\", (d) => d.concat(undo))\n    .set(\"undoStack\", OrderedSet())\n    .update(\"uidStack\", (s) => s.filter((uid) => !undo.has(uid)));\n}\n\nexport type SetDrawState = Dispatch<SetStateAction<DrawState>>;\n","import { defaultFlatState, FlatState, Stroke } from \"../draw/DrawState\";\nimport { v4 as getUid } from \"uuid\";\n\nexport interface NotePage {\n  image?: Blob;\n  ratio: number;\n  state: FlatState;\n}\n\nexport interface TeamPage {\n  ratio: number;\n  states: Record<string, Stroke[]>\n}\n\nexport interface TeamNote {\n  uid: string;\n  pages: Record<string, TeamPage>\n}\n\nexport interface NoteInfo {\n  uid: string;\n  name: string;\n  tagId: string;\n  team: boolean;\n  withImg: boolean;\n  createTime?: Date;\n  lastTime?: Date;\n  thumbnail?: Blob;\n}\n\nexport type Note = NoteInfo & {\n  pdf?: File;\n  pages: Record<string, NotePage>;\n};\n\nexport function createEmptyNote(): Note {\n  return {\n    uid: getUid(),\n    name: `New note ${Date.now()}`,\n    tagId: \"DEFAULT\",\n    team: false,\n    withImg: false,\n    pages: {\n      [getUid()]: {\n        ratio: 1.5,\n        state: defaultFlatState,\n      },\n    },\n  };\n}\n","import { v4 as getUid } from \"uuid\";\n\nexport interface UserInfo {\n  userId: string;\n  userName: string;\n}\n\nexport const getUserId = (() => {\n  let cached: string;\n  return () => {\n    if (cached) return cached;\n    let userId = localStorage.getItem(\"user_id\");\n    if (!userId) {\n      userId = getUid();\n      localStorage.setItem(\"user_id\", userId);\n    }\n    cached = userId;\n    return userId;\n  };\n})();\n\nexport const getUserName = () => {\n  let name = localStorage.getItem(\"USER_NAME\");\n  if (!name) {\n    name = \"User_\" + getUid().slice(0, 8);\n    localStorage.setItem(\"USER_NAME\", name);\n  }\n  return name;\n};\n\nexport const setUserName = (name: string) => {\n  name = name.trim();\n  if (!name) return false;\n  else localStorage.setItem(\"USER_NAME\", name);\n  return true;\n};\n","export const colors = [\n  \"#64748b\",\n  \"#78716c\",\n  \"#ef4444\",\n  \"#f97316\",\n  \"#eab308\",\n  \"#84cc16\",\n  \"#22c55e\",\n  \"#10b981\",\n  \"#14b8a6\",\n  \"#06b6d4\",\n  \"#0ea5e9\",\n  \"#3b82f6\",\n  \"#6366f1\",\n  \"#8b5cf6\",\n  \"#a855f7\",\n  \"#d946ef\",\n  \"#ec4899\",\n  \"#f43f5e\",\n];\n\nexport const getRandomColor = () => {\n  const index = Math.floor(Math.random() * colors.length);\n  return colors[index];\n}","import localforage from \"localforage\";\nimport { NoteInfo, Note, NotePage, TeamPage } from \"./note\";\nimport { v4 as getUid } from \"uuid\";\nimport { defaultFlatState } from \"../draw/DrawState\";\nimport { getUserId } from \"../user\";\nimport { getRandomColor } from \"../color\";\n\nexport interface NoteTag {\n  uid: string;\n  name: string;\n  color: string;\n  notes: string[];\n}\n\nexport async function getAllNotes() {\n  const allNotes = await localforage.getItem(\"ALL_NOTES\");\n  if (allNotes) {\n    return allNotes as Record<string, NoteInfo>;\n  } else {\n    localforage.setItem(\"ALL_NOTES\", {});\n    return {};\n  }\n}\n\nexport async function getAllTags() {\n  const tags = await localforage.getItem(\"ALL_TAGS\");\n  if (tags) {\n    return tags as Record<string, NoteTag>;\n  } else {\n    localforage.setItem(\"ALL_TAGS\", {});\n    return {};\n  }\n}\n\nexport async function storeTag(name: string) {\n  const uid = getUid();\n  const newTag: NoteTag = {\n    uid,\n    name,\n    color: getRandomColor(),\n    notes: [],\n  };\n  const tags: Record<string, NoteTag> = {\n    ...(await getAllTags()),\n    [uid]: newTag,\n  };\n  await localforage.setItem(\"ALL_TAGS\", tags);\n\n  return tags;\n}\n\nexport async function deleteTag(uid: string) {\n  const tags = await getAllTags();\n  delete tags[uid];\n  await localforage.setItem(\"ALL_TAGS\", tags);\n\n  return tags;\n}\n\nexport async function editTag(tag: NoteTag) {\n  const tags = await getAllTags();\n  const editedTag = tags[tag.uid];\n  editedTag.name = tag.name;\n  editedTag.color = tag.color;\n  editedTag.notes = tag.notes;\n  await localforage.setItem(\"ALL_TAGS\", tags);\n  return tags;\n}\n\nexport async function loadNote(uid: string) {\n  return (await localforage.getItem(uid)) as Note | undefined;\n}\n\nexport async function editNoteData(uid: string, note: Partial<Note>) {\n  const allNotes = await getAllNotes();\n  const { pages, pdf, ...noteInfo } = note;\n  allNotes[uid] = { ...allNotes[uid], ...noteInfo };\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\n  const prevNote = await loadNote(uid);\n  if (!prevNote) return;\n  await localforage.setItem(uid, { ...prevNote, ...note });\n}\n\nexport async function saveNoteInfo(noteInfo: NoteInfo) {\n  const { uid, tagId } = noteInfo;\n  const allNotes = await getAllNotes();\n  allNotes[uid] = noteInfo;\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\n  const tags = await getAllTags();\n  if (tagId !== \"DEFAULT\") {\n    tags[tagId].notes.push(noteInfo.uid);\n    await localforage.setItem(\"ALL_TAGS\", tags);\n  }\n  return { tags, allNotes };\n}\n\nexport async function createNewNote(note: Note) {\n  await localforage.setItem(note.uid, note);\n  const { pdf, pages, ...noteInfo } = note;\n  return await saveNoteInfo(noteInfo);\n}\n\nexport async function deleteNote(uid: string) {\n  const note = await loadNote(uid);\n  const allNotes = await getAllNotes();\n  const tags = await getAllTags();\n  if (!note) return { tags, allNotes };\n  await localforage.removeItem(uid);\n  const { pdf, pages, ...noteInfo } = note;\n  delete allNotes[uid];\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\n\n  const { tagId } = noteInfo;\n  if (tagId !== \"DEFAULT\") {\n    const { notes } = tags[tagId];\n    tags[tagId].notes = notes.filter((id) => id !== uid);\n    await localforage.setItem(\"ALL_TAGS\", tags);\n  }\n  return { tags, allNotes };\n}\n\nexport async function moveNoteTag(noteId: string, tagId: string) {\n  const note = await loadNote(noteId);\n  const allNotes = await getAllNotes();\n  const tags = await getAllTags();\n  if (!note) return { tags, allNotes };\n\n  const { tagId: prevTagId } = note;\n  note.tagId = tagId;\n  await localforage.setItem(noteId, note);\n  allNotes[noteId].tagId = tagId;\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\n\n  if (prevTagId in tags) {\n    tags[prevTagId].notes = tags[prevTagId].notes.filter((id) => id !== noteId);\n  }\n  tags[tagId]?.notes?.push(noteId);\n  await localforage.setItem(\"ALL_TAGS\", tags);\n  return { tags, allNotes };\n}\n\nexport async function convertTeamPage(teamPages: Record<string, TeamPage>) {\n  const notePages: Record<string, NotePage> = {};\n  for (let [key, page] of Object.entries(teamPages)) {\n    const { ratio, states } = page;\n    delete states[getUserId()];\n    notePages[key] = {\n      ratio,\n      state: {\n        strokes: Object.values(states).flat(1),\n      },\n    };\n  }\n  return notePages;\n}\n\nexport async function saveTeamNote(\n  noteId: string,\n  noteInfo: { name: string; uid: string; withImg: boolean },\n  teamPages: Record<string, Omit<NotePage, \"state\">>\n) {\n  let note = await loadNote(noteId);\n  if (!note) {\n    const pages: Record<string, NotePage> = {};\n    for (let [key, page] of Object.entries(teamPages)) {\n      pages[key] = { ...page, state: defaultFlatState };\n    }\n    note = {\n      ...noteInfo,\n      tagId: \"DEFAULT\",\n      team: true,\n      pages,\n    };\n    createNewNote(note);\n  }\n}\n","import { Point } from \"./draw\";\n\nexport class Drawer {\n  constructor(\n    private context: CanvasRenderingContext2D,\n    public points: Point[] = [],\n  ) {}\n\n  drawBegin(point: Point) {\n    this.points.push(point);\n    const { x, y, lineWidth } = point;\n    this.context.lineWidth = lineWidth;\n    this.context.beginPath();\n    this.context.moveTo(x, y);\n  }\n\n  drawCurve(toP: Point, color = \"black\") {\n    const fromP = this.points.slice(-1)[0];\n    this.points.push(toP);\n    if (this.points.length < 3) return;\n\n    const xc = (toP.x + fromP.x) / 2;\n    const yc = (toP.y + fromP.y) / 2;\n    this.context.strokeStyle = color;\n    this.context.lineCap = \"round\";\n    this.context.lineJoin = \"round\";\n    this.context.lineWidth = fromP.lineWidth;\n    this.context.quadraticCurveTo(fromP.x, fromP.y, xc, yc);\n    this.context.stroke();\n    this.context.beginPath();\n    this.context.moveTo(xc, yc);\n  }\n\n  drawCurveComplete(color = 'black') {\n    if (this.points.length < 3) return;\n    this.context.lineWidth = Math.max(...this.points.map(p => p.lineWidth));\n    let fromP = this.points[0];\n    this.context.beginPath();\n    this.context.strokeStyle = color;\n    this.context.lineCap = \"round\";\n    this.context.lineJoin = \"round\";\n    this.context.moveTo(fromP.x, fromP.y);\n    for (let i = 1; i < this.points.length; i += 1) {\n      const xc = (this.points[i].x + fromP.x) / 2;\n      const yc = (this.points[i].y + fromP.y) / 2;\n      this.context.quadraticCurveTo(fromP.x, fromP.y, xc, yc);\n      fromP = this.points[i];\n    }\n    this.context.stroke();\n  }\n\n  computeLineWidth(pressure: number) {\n    return (\n      Math.log(pressure + 1) * 5 +\n      (this.points.slice(-1)[0]?.lineWidth ?? 0) * 0.8\n    );\n  }\n\n  static createRaw(width: number, height: number) {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    const context = canvas.getContext(\"2d\");\n    if (!context) {\n      throw Error(\"can't get canvas context\");\n    }\n    return new Drawer(context);\n  }\n}\n\nexport function drawPoints(\n  context: CanvasRenderingContext2D,\n  points: Point[],\n  color = \"black\",\n) {\n  const drawer = new Drawer(context, points);\n  drawer.drawCurveComplete();\n  // const clonedPs = points.slice();\n  // const firstP = clonedPs.shift();\n  // if (!firstP) return;\n  // drawer.drawBegin(firstP);\n  // clonedPs.forEach((p) => drawer.drawCurve(p, color));\n}\n\nexport function createVirtualCanvas(width: number, height: number) {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  if (!context) {\n    throw new Error(\"can't get virtual canvas context\");\n  }\n  canvas.width = width;\n  canvas.height = height;\n  return { canvas, context };\n}\n","import * as pdfjs from \"pdfjs-dist/legacy/build/pdf\";\n// @ts-ignore\nimport pdfjsWorker from \"pdfjs-dist/legacy/build/pdf.worker.entry\";\nimport { PDFDocumentProxy } from \"pdfjs-dist/types/src/display/api\";\nimport { v4 as getUid } from \"uuid\";\nimport { createVirtualCanvas } from \"../draw/drawer\";\nimport { Note, NotePage } from \"./note\";\npdfjs.GlobalWorkerOptions.workerSrc = pdfjsWorker;\n\nfunction getCanvasBlob(canvas: HTMLCanvasElement): Promise<Blob | null> {\n  return new Promise((res: BlobCallback) => {\n    canvas.toBlob(res);\n  });\n}\n\nasync function getPageImage(\n  pdf: PDFDocumentProxy,\n  pageNum: number,\n  scale: number\n): Promise<[Blob, number]> {\n  const page = await pdf.getPage(pageNum);\n  const viewport = page.getViewport({ scale });\n  console.log(viewport);\n\n  const { height, width } = viewport;\n  const ratio = height / width;\n  const { canvas, context } = createVirtualCanvas(\n    Math.floor(width * scale),\n    Math.floor(height * scale)\n  );\n\n  console.time(\"render\");\n  await page.render({\n    canvasContext: context,\n    viewport: viewport,\n    transform: [scale, 0, 0, scale, 0, 0],\n  }).promise;\n  console.timeEnd(\"render\");\n\n  console.time(\"img\");\n  const blob = await getCanvasBlob(canvas);\n  if (!blob) {\n    throw new Error(\"can't get canvas image blob\");\n  }\n  console.timeEnd(\"img\");\n  return [blob, ratio];\n}\n\nexport async function getImages(\n  url: string,\n  scale = 2,\n  progressCb?: (percent: number) => void\n) {\n  const pdf = await pdfjs.getDocument(url).promise;\n  const { numPages } = pdf;\n  const blobs: Blob[] = [];\n  const ratios: number[] = [];\n\n  for (let i = 1; i <= numPages; i += 1) {\n    const [blob, ratio] = await getPageImage(pdf, i, scale);\n    blobs.push(blob);\n    ratios.push(ratio);\n    if (progressCb) progressCb(Math.floor((i / numPages) * 100));\n  }\n\n  const [thumbnail] = await getPageImage(pdf, 1, 0.5);\n\n  return {\n    images: blobs,\n    ratios,\n    thumbnail,\n  };\n}\n\nexport async function LoadPDF(\n  file: File,\n  progressCb?: (percent: number) => void\n): Promise<Note> {\n  const url = URL.createObjectURL(file);\n  const { images, ratios, thumbnail } = await getImages(url, 2, progressCb);\n  const pages: Record<string, NotePage> = {};\n  images.forEach((image, idx) => {\n    pages[getUid()] = {\n      image,\n      ratio: ratios[idx],\n      state: {\n        strokes: [],\n      },\n    };\n  });\n  const name = file.name.replace(\".pdf\", \"\");\n  return {\n    uid: getUid(),\n    name,\n    tagId: \"DEFAULT\",\n    team: false,\n    withImg: true,\n    pdf: file,\n    thumbnail,\n    pages,\n  };\n}\n","import axios from \"axios\";\nimport { Note, NoteInfo, NotePage } from \"../note/note\";\nimport { convertTeamPage, saveTeamNote } from \"../note/archive\";\nimport { getUserId } from \"../user\";\n\nexport const BASE_URL = \"https://api.slotdumpling.top/paint\";\naxios.defaults.baseURL = BASE_URL;\naxios.interceptors.request.use((config) => {\n  console.log(config.method, config.url);\n  return config;\n});\n\nexport async function getNoteId(roomCode: number) {\n  try {\n    const { data } = await axios.get(`code/${roomCode}`);\n    if (data.statusCode === 200) {\n      const { noteId, pageInfos, noteInfo } = data as {\n        noteId: string;\n        pageInfos: Record<string, Omit<NotePage, \"state\">>;\n        noteInfo: NoteInfo;\n      };\n      \n      if (noteInfo.withImg) {\n        for (let [pageId, page] of Object.entries(pageInfos)) {\n          const { data } = await axios({\n            method: \"GET\",\n            url: pageId,\n            responseType: \"blob\",\n          });\n          page.image = data;\n        }\n      }\n      await saveTeamNote(noteId, noteInfo, pageInfos);\n      return noteId as string;\n    } else {\n      return null;\n    }\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n}\n\nexport async function putNote(\n  noteId: string,\n  noteInfo: Note,\n  pageRecord: Record<string, NotePage>\n) {\n  const { uid, name, withImg, pages } = noteInfo;\n\n  try {\n    const { data } = await axios.put(`create/${noteId}`, {\n      userId: getUserId(),\n      pageRecord,\n      noteInfo: { uid, name, withImg },\n    });\n    if (withImg) {\n      Object.entries(pages).forEach(([pageId, page]) => {\n        const { image } = page;\n        if (!image) return;\n        const formData = new FormData();\n        formData.append(\"pageId\", pageId);\n        formData.append(\"file\", image);\n        axios({\n          method: \"POST\",\n          url: \"upload\",\n          data: formData,\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      });\n    }\n    if (data.statusCode === 201) {\n      return data.code as number;\n    } else {\n      return null;\n    }\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n}\n\nexport async function updatePages(\n  noteId: string,\n  pageRecord: Record<string, NotePage>\n) {\n  try {\n    const { data } = await axios.put(`pages/${noteId}`, {\n      userId: getUserId(),\n      pageRecord,\n    });\n    if (data.statusCode === 201) return true;\n    else return false;\n  } catch (e) {\n    console.error(e);\n    return false;\n  }\n}\n\nexport async function getTeamNote(noteId: string) {\n  try {\n    const { data } = await axios.get(`room/${noteId}`);\n    if (data.statusCode === 200) {\n      const { teamPages, code, noteInfo: info } = data;\n      const pages = await convertTeamPage(teamPages);\n      return { code, pages, info };\n    } else {\n      return null;\n    }\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n}\n","import React, {\n  KeyboardEvent,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport \"./digitInput.sass\";\n\nexport default function DigitInput({\n  value = 0,\n  digitNum = 4,\n  onChange = () => {},\n  onSubmit,\n}: {\n  value?: number;\n  digitNum?: number;\n  onChange?: (val: number) => void;\n  onSubmit: (val: number) => void;\n}) {\n  function num2digits(num: number): string[] {\n    if (num === 0) return new Array(digitNum).fill(\"\");\n    return String(num)\n      .slice(0, digitNum)\n      .padEnd(digitNum, \"x\")\n      .split(\"\")\n      .map((s) => (s === \"x\" ? \"\" : s));\n  }\n\n  const [nowFocused, setNowFocused] = useState(0);\n  const [digits, setDigits] = useState(num2digits(value));\n  useEffect(() => {\n    const newDigits = num2digits(value);\n    setDigits(newDigits);\n  }, [value]);\n\n  useEffect(() => {\n    const idx = digits.findIndex((d) => d === \"\");\n    setNowFocused(idx);\n    const newValue = Number(digits.join(\"\"));\n    if (newValue === value) return;\n    onChange(newValue);\n    if (idx === -1) {\n      onSubmit(newValue);\n    }\n  }, [digits]);\n\n  function focus() {\n    if (nowFocused === -1) {\n      inputRefs.current.forEach((el) => el.blur());\n    } else {\n      inputRefs.current[nowFocused].focus();\n    }\n  }\n\n  useEffect(() => {\n    focus();\n  }, [nowFocused]);\n\n  function handleChange(val: string, idx: number) {\n    if (!/^[0-9]$/.test(val)) return;\n    setDigits(prev => {\n      const newDigits = prev.slice();\n      newDigits[idx] = val;\n      return newDigits;\n    });\n  }\n\n  const inputRefs = useRef<HTMLInputElement[]>([]);\n  useEffect(() => {\n    inputRefs.current = inputRefs.current.slice(0, digitNum);\n  }, [digitNum]);\n\n  function handleKeyUp(e: KeyboardEvent<HTMLInputElement>) {\n    if (e.key === \"Backspace\") {\n      const idx = Math.max(0, nowFocused - 1);\n      setNowFocused(idx);\n      setDigits(prev => {\n        const newDigits = prev.slice();\n        newDigits[idx] = '';\n        return newDigits;\n      });\n    }\n  }\n\n  return (\n    <div className=\"digit-input\">\n      {digits.map((d, idx) => (\n        <input\n          key={idx}\n          ref={(el) => {\n            if (!el) return;\n            inputRefs.current[idx] = el;\n          }}\n          value={d}\n          pattern=\"\\d*\"\n          onChange={(e) => handleChange(e.target.value, idx)}\n          onKeyUp={handleKeyUp}\n        />\n      ))}\n      <div className=\"click-area\" onClick={focus}></div>\n    </div>\n  );\n}\n","import { Button, Input, Menu, message, Popover, Progress } from \"antd\";\nimport {\n  createContext,\n  Dispatch,\n  ReactNode,\n  SetStateAction,\n  useContext,\n  useState,\n} from \"react\";\nimport { createNewNote } from \"../../lib/note/archive\";\nimport { LoadPDF } from \"../../lib/note/pdfImage\";\nimport { MenuStateCtx, MenuStateUpdateCtx } from \"./MainMenu\";\nimport {\n  TeamOutlined,\n  CaretDownOutlined,\n  FilePdfOutlined,\n  UserOutlined,\n  ArrowLeftOutlined,\n  InboxOutlined,\n} from \"@ant-design/icons\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getNoteId } from \"../../lib/network/http\";\nimport DigitInput from \"../ui/DigitInput\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./right.sass\";\nimport Title from \"antd/lib/typography/Title\";\nimport Dragger from \"antd/lib/upload/Dragger\";\nimport { getUserName, setUserName } from \"../../lib/user\";\n\nconst OthersStateUpdateCtx = createContext({\n  setActive: (() => {}) as Dispatch<SetStateAction<string>>,\n});\n\nexport default function RightTools() {\n  return (\n    <div id=\"right-tools\">\n      <JoinTeamButton />\n      <OthersButton />\n    </div>\n  );\n}\n\nconst OthersMenu = () => {\n  const { setActive } = useContext(OthersStateUpdateCtx);\n  const { Item } = Menu;\n  return (\n    <Menu onClick={({ key }) => setActive(key)}>\n      <Item key=\"pdf\">\n        <FilePdfOutlined />\n        <span>Load PDF</span>\n      </Item>\n      <Item key=\"profile\">\n        <UserOutlined />\n        <span>My profile</span>\n      </Item>\n    </Menu>\n  );\n};\n\nconst SeconaryMenu = ({\n  children,\n  title,\n}: {\n  children: ReactNode;\n  title: string;\n}) => {\n  const { setActive } = useContext(OthersStateUpdateCtx);\n  return (\n    <div className=\"secondary\">\n      <div className=\"title\">\n        <Button\n          type=\"text\"\n          shape=\"circle\"\n          onClick={() => setActive(\"menu\")}\n          icon={<ArrowLeftOutlined />}\n        />\n        <Title level={5}>{title}</Title>\n      </div>\n      {children}\n    </div>\n  );\n};\n\nfunction UploadPdfPage() {\n  const [loading, setLoading] = useState(false);\n  const { tagUid } = useContext(MenuStateCtx);\n  const { setAllTags, setAllNotes } = useContext(MenuStateUpdateCtx);\n  const [percent, setPercent] = useState(0);\n\n  async function handleFile(file: File) {\n    if (file.type !== \"application/pdf\") return;\n    setLoading(true);\n    const note = await LoadPDF(file, setPercent);\n    note.tagId = tagUid;\n    const { tags, allNotes } = await createNewNote(note);\n    setAllTags(tags);\n    setAllNotes(allNotes);\n    setLoading(false);\n    message.success(\"PDF Loaded\");\n    return false;\n  }\n\n  return (\n    <SeconaryMenu title=\"Load PDF\">\n      <Dragger\n        disabled={loading}\n        multiple={false}\n        action=\"#\"\n        accept=\"application/pdf\"\n        beforeUpload={handleFile}\n      >\n        <p className=\"ant-upload-drag-icon\">\n          {loading ? (\n            <Progress width={48} type=\"circle\" percent={percent} />\n          ) : (\n            <InboxOutlined />\n          )}\n        </p>\n        <p className=\"ant-upload-hint\">Click or drag a pdf file here.</p>\n      </Dragger>\n    </SeconaryMenu>\n  );\n}\n\nconst ProfilePage = () => {\n  const userName = getUserName();\n  const [name, setName] = useState(userName);\n  const handleEnter = () => {\n    setUserName(name);\n  }\n  return (\n    <SeconaryMenu title=\"My profile\">\n      <div className=\"profile-page\">\n        <Input\n          prefix={<UserOutlined />}\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <Button onClick={handleEnter} type=\"primary\" block>Enter</Button>\n      </div>\n    </SeconaryMenu>\n  );\n};\n\nconst OthersPage = () => {\n  const [height, setHeight] = useState(100);\n  const [active, setActive] = useState(\"menu\");\n\n  const calcHeight = (el: HTMLElement) => {\n    setHeight(el.clientHeight);\n  };\n\n  const cssProps = {\n    timeout: 300,\n    onEnter: calcHeight,\n    unmountOnExit: true,\n  };\n\n  const cssProps2 = {\n    ...cssProps,\n    classNames: \"secondary\",\n  };\n  return (\n    <OthersStateUpdateCtx.Provider value={{ setActive }}>\n      <section className=\"others-menu\" style={{ height }}>\n        <CSSTransition\n          classNames=\"primary\"\n          in={active === \"menu\"}\n          {...cssProps}\n        >\n          <OthersMenu />\n        </CSSTransition>\n        <CSSTransition in={active === \"pdf\"} {...cssProps2}>\n          <UploadPdfPage />\n        </CSSTransition>\n        <CSSTransition in={active === \"profile\"} {...cssProps2}>\n          <ProfilePage />\n        </CSSTransition>\n      </section>\n    </OthersStateUpdateCtx.Provider>\n  );\n};\n\nconst OthersButton = () => {\n  return (\n    <Popover placement=\"bottomRight\" trigger=\"click\" content={<OthersPage />}>\n      <Button shape=\"circle\" icon={<CaretDownOutlined />} />\n    </Popover>\n  );\n};\n\nfunction JoinTeamButton() {\n  const [roomCode, setRoomCode] = useState(0);\n\n  const nav = useNavigate();\n  async function handleSubmit(code: number) {\n    const dismiss = message.loading(\"Loading team note...\", 0);\n    const noteId = await getNoteId(code);\n    dismiss();\n    if (!noteId) {\n      setRoomCode(0);\n      message.error(\"Room doesn't exist.\");\n    } else {\n      nav(`/team/${noteId}`);\n    }\n  }\n\n  return (\n    <Popover\n      placement=\"bottomRight\"\n      trigger=\"click\"\n      title=\"Join a team note\"\n      destroyTooltipOnHide\n      content={\n        <DigitInput\n          value={roomCode}\n          onChange={setRoomCode}\n          onSubmit={handleSubmit}\n        />\n      }\n    >\n      <Button shape=\"round\" icon={<TeamOutlined />}>\n        Team\n      </Button>\n    </Popover>\n  );\n}\n","import { Button } from \"antd\";\nimport { useContext } from \"react\";\nimport { MenuStateCtx, MenuStateUpdateCtx } from \"./MainMenu\";\n\nexport default function LeftTools() {\n  const { editing } = useContext(MenuStateCtx);\n  const { setEditing } = useContext(MenuStateUpdateCtx);\n\n  function swichEditing() {\n    setEditing((prev) => !prev);\n  }\n\n  return (\n    <div id=\"left-tools\">\n      <Button onClick={swichEditing} type={editing ? \"primary\" : \"text\"}>\n        {editing ? \"Done\" : \"Edit\"}\n      </Button>\n    </div>\n  );\n}\n","import { Button, Input, Menu, Popconfirm, Popover, Select } from \"antd\";\nimport { useContext, useState } from \"react\";\nimport { deleteTag, editTag, NoteTag, storeTag } from \"../../lib/note/archive\";\nimport { colors } from \"../../lib/color\";\nimport { MenuStateCtx, MenuStateUpdateCtx } from \"./MainMenu\";\nimport {\n  MinusCircleOutlined,\n  CheckOutlined,\n  CloseOutlined,\n  SettingOutlined,\n  MenuOutlined,\n  ProfileOutlined,\n  TagOutlined,\n  PlusOutlined,\n} from \"@ant-design/icons\";\nimport Search from \"antd/lib/input/Search\";\n\nexport const TagCircle = ({ color }: { color: string }) => {\n  const style = { backgroundColor: color };\n  return <div className=\"tag-circle\" style={style} />;\n};\n\nfunction TagItem({ noteTag }: { noteTag: NoteTag }) {\n  const { uid, color, name, notes } = noteTag;\n  const { editing } = useContext(MenuStateCtx);\n  const { setTagUid, setAllTags } = useContext(MenuStateUpdateCtx);\n  const [tagEditing, setTagEditing] = useState(false);\n  const [tagName, setTagName] = useState(name);\n  const [tagColor, setTagColor] = useState(color);\n\n  function cancelEditing() {\n    setTagName(name);\n    setTagColor(color);\n    setTagEditing(false);\n  }\n\n  async function removeTag() {\n    const tags = await deleteTag(uid);\n    setTagUid(\"DEFAULT\");\n    setAllTags(tags);\n  }\n\n  async function finishEditing() {\n    const newTag: NoteTag = {\n      uid,\n      name: tagName,\n      color: tagColor,\n      notes: notes,\n    };\n\n    const newAllTags = await editTag(newTag);\n    setAllTags(newAllTags);\n    setTagEditing(false);\n  }\n\n  const colorSelector = (\n    <Select value={tagColor} onSelect={setTagColor}>\n      {colors.map((c) => (\n        <Select.Option value={c} key={c}>\n          <TagCircle color={c} />\n        </Select.Option>\n      ))}\n    </Select>\n  );\n\n  const TagNameInput = () => (\n    <Input\n      className=\"tag-name-input\"\n      addonBefore={colorSelector}\n      value={tagName}\n      onChange={(e) => setTagName(e.target.value)}\n    />\n  );\n\n  return (\n    <div className=\"menu-item\">\n      {editing && tagEditing ? (\n        <>\n          <Popconfirm\n            title=\"Delete this tag?\"\n            onConfirm={removeTag}\n            placement=\"left\"\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <Button\n              type=\"text\"\n              danger\n              size=\"small\"\n              icon={<MinusCircleOutlined />}\n            />\n          </Popconfirm>\n          <TagNameInput />\n        </>\n      ) : (\n        <>\n          <TagCircle color={tagColor} />\n          <span className=\"tag-name\">{tagName}</span>\n        </>\n      )}\n      {editing && tagEditing && (\n        <>\n          <Button\n            disabled={tagName === \"\"}\n            size=\"small\"\n            type=\"link\"\n            onClick={finishEditing}\n            icon={<CheckOutlined />}\n          />\n          <Button\n            size=\"small\"\n            type=\"text\"\n            onClick={cancelEditing}\n            icon={<CloseOutlined />}\n          />\n        </>\n      )}\n      {editing && !tagEditing && (\n        <Button\n          size=\"small\"\n          type=\"text\"\n          onClick={() => setTagEditing(true)}\n          icon={<SettingOutlined />}\n        />\n      )}\n    </div>\n  );\n}\n\nconst AddTag = () => {\n  const { setAllTags } = useContext(MenuStateUpdateCtx);\n\n  async function addTag(val: string) {\n    const name = val.trim();\n    if (!name) {\n      return;\n    } else {\n      const tags = await storeTag(name);\n      setAllTags(tags);\n    }\n  }\n\n  const popContent = (\n    <Search\n      placeholder=\"Tag name...\"\n      onSearch={addTag}\n      allowClear\n      enterButton={<PlusOutlined />}\n    />\n  );\n\n  return (\n    <div id=\"add-tag\">\n      <Popover\n        content={popContent}\n        trigger=\"click\"\n        placement=\"topLeft\"\n        destroyTooltipOnHide\n      >\n        <Button shape=\"circle\" type=\"text\" icon={<TagOutlined />} />\n      </Popover>\n    </div>\n  );\n};\n\nexport default function SideMenu() {\n  const { allTags } = useContext(MenuStateCtx);\n  const { setTagUid } = useContext(MenuStateUpdateCtx);\n\n  function menuClicked({ key }: { key: string }) {\n    setTagUid(key);\n  }\n\n  const { Item } = Menu;\n\n  return (\n    <aside>\n      <label htmlFor=\"aside-checkbox\" id=\"aside-label\">\n        <MenuOutlined />\n      </label>\n      <input type=\"checkbox\" id=\"aside-checkbox\" />\n      <div id=\"side-wrapper\">\n        <Menu\n          onClick={menuClicked}\n          id=\"side-menu\"\n          defaultSelectedKeys={[\"DEFAULT\"]}\n          defaultOpenKeys={[\"sub1\"]}\n          mode=\"inline\"\n        >\n          <Item key=\"DEFAULT\">\n            <div className=\"menu-item\">\n              <ProfileOutlined id=\"all-note-icon\" />\n              <span className=\"tag-name\">All Notes</span>\n            </div>\n          </Item>\n          {Object.values(allTags).map((tag) => (\n            <Item key={tag.uid}>\n              <TagItem noteTag={tag} />\n            </Item>\n          ))}\n        </Menu>\n        <footer>\n          <AddTag />\n        </footer>\n      </div>\n    </aside>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/default.dd551273.png\";","import { Button, Input, Popconfirm, Tag, Dropdown, Menu } from \"antd\";\nimport { useContext, useEffect, useMemo, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteNote, editNoteData, moveNoteTag } from \"../../lib/note/archive\";\nimport { NoteInfo } from \"../../lib/note/note\";\nimport { MenuStateCtx, MenuStateUpdateCtx } from \"./MainMenu\";\nimport {\n  CloudOutlined,\n  DeleteOutlined,\n  TagsOutlined,\n  CloseOutlined,\n} from \"@ant-design/icons\";\nimport { TagCircle } from \"./SideMenu\";\nimport dafaultImg from \"../ui/default.png\";\n\nexport default function NoteList({ noteList }: { noteList: NoteInfo[] }) {\n  return (\n    <div id=\"note-list\">\n      {noteList.map((noteInfo) => (\n        <NoteItem key={noteInfo.uid} noteInfo={noteInfo} />\n      ))}\n    </div>\n  );\n}\n\nconst NoteItem = ({ noteInfo }: { noteInfo: NoteInfo }) => {\n  const { editing, allTags } = useContext(MenuStateCtx);\n  const { team, uid, name, thumbnail } = noteInfo;\n  const href = editing ? \"#\" : `${team ? \"team\" : \"reader\"}/${uid}`;\n  const { setAllTags, setAllNotes } = useContext(MenuStateUpdateCtx);\n  const [noteName, setNoteName] = useState(name);\n  const [imgLoaded, setImgLoaded] = useState(false);\n\n  async function removeNote() {\n    const { tags, allNotes } = await deleteNote(uid);\n    setAllTags(tags);\n    setAllNotes(allNotes);\n  }\n\n  const url = useMemo(\n    () => (thumbnail ? URL.createObjectURL(thumbnail) : null),\n    [thumbnail]\n  );\n\n  useEffect(() => {\n    const prevUrl = url || \"\";\n    return () => URL.revokeObjectURL(prevUrl);\n  }, [url]);\n\n  const saveNoteName = () => {\n    editNoteData(uid, { name: noteName });\n    setAllNotes((prev) => ({\n      ...prev,\n      [uid]: { ...prev[uid], name: noteName },\n    }));\n  };\n\n  const move = async ({ key }: { key: string }) => {\n    const { tags, allNotes } = await moveNoteTag(uid, key);\n    setAllTags(tags);\n    setAllNotes(allNotes);\n  };\n\n  const TagButton = () => {\n    const { Item } = Menu;\n    const overlay = (\n      <Menu onClick={move}>\n        <Item key=\"DEFAULT\">\n          <div className=\"tag-select\">\n            <CloseOutlined className=\"none-tag-icon\" />\n            <span>None Tag</span>\n          </div>\n        </Item>\n        {Object.values(allTags).map((t) => (\n          <Item key={t.uid}>\n            <div className=\"tag-select\">\n              <TagCircle color={t.color} />\n              <span>{t.name}</span>\n            </div>\n          </Item>\n        ))}\n      </Menu>\n    );\n    return (\n      <Dropdown overlay={overlay} trigger={[\"click\"]}>\n        <Button className=\"note-delete\" type=\"text\" icon={<TagsOutlined />} />\n      </Dropdown>\n    );\n  };\n\n  const DeleteButton = () => (\n    <Popconfirm\n      title=\"Delete this note?\"\n      onConfirm={removeNote}\n      okText=\"Yes\"\n      cancelText=\"No\"\n    >\n      <Button\n        className=\"note-delete\"\n        type=\"text\"\n        danger\n        icon={<DeleteOutlined />}\n      />\n    </Popconfirm>\n  );\n\n  return (\n    <Link to={href}>\n      <div className=\"list-item\">\n        <div className=\"thumbnail-wrapper\">\n          <img\n            src={url || dafaultImg}\n            alt={name}\n            className={`thumbnail${imgLoaded ? \" loaded\" : \"\"}`}\n            onLoad={() => setImgLoaded(true)}\n          />\n          {team && (\n            <Tag color=\"blue\" className=\"cloud-icon\">\n              <CloudOutlined />\n            </Tag>\n          )}\n        </div>\n        {editing || <p className=\"note-name\">{name}</p>}\n        {editing && (\n          <>\n            <Input\n              className=\"note-name-input\"\n              value={noteName}\n              onChange={(e) => setNoteName(e.target.value)}\n              onBlur={saveNoteName}\n            />\n            <TagButton />\n            <DeleteButton />\n          </>\n        )}\n      </div>\n    </Link>\n  );\n};\n","import React, {\n  createContext,\n  Dispatch,\n  SetStateAction,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport \"./menu.sass\";\nimport { createEmptyNote, NoteInfo } from \"../../lib/note/note\";\nimport {\n  createNewNote,\n  getAllNotes,\n  getAllTags,\n  NoteTag,\n} from \"../../lib/note/archive\";\nimport RightTools from \"./RightTools\";\nimport LeftTools from \"./LeftTools\";\nimport SideMenu from \"./SideMenu\";\nimport NoteList from \"./NoteList\";\nimport Title from \"antd/lib/typography/Title\";\nimport { Button } from \"antd\";\nimport { FormOutlined } from \"@ant-design/icons\";\n\nexport const MenuStateCtx = createContext({\n  tagUid: \"DEFAULT\",\n  editing: false,\n  allNotes: {} as Record<string, NoteInfo>,\n  allTags: {} as Record<string, NoteTag>,\n});\n\nexport const MenuStateUpdateCtx = createContext({\n  setAllNotes: (() => {}) as Dispatch<SetStateAction<Record<string, NoteInfo>>>,\n  setAllTags: (() => {}) as Dispatch<SetStateAction<Record<string, NoteTag>>>,\n  setTagUid: (() => {}) as Dispatch<SetStateAction<string>>,\n  setEditing: (() => {}) as Dispatch<SetStateAction<boolean>>,\n});\n\nexport default function MainMenu() {\n  const [allNotes, setAllNotes] = useState<Record<string, NoteInfo>>({});\n  const [allTags, setAllTags] = useState<Record<string, NoteTag>>({});\n  const [tagUid, setTagUid] = useState(\"DEFAULT\");\n  const [editing, setEditing] = useState(false);\n\n  const selectedTag = useMemo<NoteTag>(() => {\n    if (tagUid === \"DEFAULT\") {\n      return {\n        uid: \"\",\n        name: \"All Notes\",\n        color: \"#000\",\n        notes: Object.keys(allNotes),\n      };\n    } else {\n      return allTags[tagUid];\n    }\n  }, [tagUid, allTags, allNotes]);\n\n  const noteList = useMemo<NoteInfo[]>(\n    () =>\n      selectedTag.notes\n        .filter((uid) => uid in allNotes)\n        .map((uid) => allNotes[uid]),\n    [selectedTag, allNotes]\n  );\n\n  useEffect(() => {\n    getAllNotes().then(setAllNotes);\n    getAllTags().then(setAllTags);\n    document.title = 'Multibility';\n  }, []);\n\n  return (\n    <MenuStateCtx.Provider value={{ tagUid, editing, allNotes, allTags }}>\n      <MenuStateUpdateCtx.Provider\n        value={{ setAllNotes, setAllTags, setEditing, setTagUid }}\n      >\n        <div id=\"menu-container\">\n          <header>\n            <LeftTools />\n            <Title level={4}>{selectedTag.name}</Title>\n            <RightTools />\n          </header>\n          <main>\n            <SideMenu />\n            <NoteList noteList={noteList} />\n            <NewNoteButton />\n          </main>\n        </div>\n      </MenuStateUpdateCtx.Provider>\n    </MenuStateCtx.Provider>\n  );\n}\n\nexport const NewNoteButton = () => {\n  const { tagUid } = useContext(MenuStateCtx);\n  const { setAllTags, setAllNotes } = useContext(MenuStateUpdateCtx);\n\n  async function addNewNote() {\n    const note = createEmptyNote();\n    note.tagId = tagUid;\n    const { tags, allNotes } = await createNewNote(note);\n    setAllTags(tags);\n    setAllNotes(allNotes);\n  }\n\n  return (\n    <Button\n      id=\"new-note\"\n      size=\"large\"\n      type=\"primary\"\n      shape=\"circle\"\n      onClick={addNewNote}\n      icon={<FormOutlined />}\n    />\n  );\n};\n","import React, { useEffect, useRef } from \"react\";\nimport { drawPoints } from \"../../lib/draw/drawer\";\nimport { DrawState } from \"../../lib/draw/DrawState\";\n\nexport default React.memo(({ drawState }: { drawState: DrawState }) => {\n  const canvasEl = useRef<HTMLCanvasElement>(null);\n  const context = useRef<CanvasRenderingContext2D>();\n  const { width, height } = drawState;\n\n  useEffect(() => {\n    if (!canvasEl.current) return;\n    canvasEl.current.addEventListener(\n      \"touchstart\",\n      (e) => {\n        e.preventDefault();\n      },\n      { passive: false }\n    );\n\n    const ctx = canvasEl.current.getContext(\"2d\");\n    if (!ctx) return;\n    context.current = ctx;\n  }, []);\n\n  useEffect(() => {\n    console.log(\"display rerender\");\n    context.current?.clearRect(0, 0, width, height);\n\n    drawState.getValidStrokes().forEach((stroke) => {\n      if (!context.current) return;\n      drawPoints(context.current, stroke.points, \"black\");\n    });\n  });\n\n  return <canvas width={width} height={height} ref={canvasEl} />;\n});\n","import { TouchEvent } from \"react\";\n\nexport type iOSTouch = Touch & {\n  force?: number;\n  touchType: \"stylue\" | \"direct\";\n};\n\nexport function isFinger(e: TouchEvent<HTMLCanvasElement> | globalThis.TouchEvent) {\n  const touch = e.touches[0] as iOSTouch;\n  return touch.touchType === \"direct\";\n}\n","import React, { MouseEvent, TouchEvent, useEffect, useRef } from \"react\";\nimport { iOSTouch, isFinger } from \"../../lib/touch/touch\";\nimport { Drawer } from \"../../lib/draw/drawer\";\nimport { Eraser } from \"../../lib/draw/eraser\";\nimport { DrawState, SetDrawState } from \"../../lib/draw/DrawState\";\n\nexport default function DrawInput({\n  drawState,\n  setDrawState,\n  finger,\n  even,\n  lineWidth,\n  erasing,\n  eraser,\n}: {\n  drawState: DrawState;\n  setDrawState: SetDrawState;\n  finger: boolean;\n  even: boolean;\n  lineWidth: number;\n  erasing: boolean;\n  eraser: Eraser;\n}) {\n  const { width, height } = drawState;\n  const canvasEl = useRef<HTMLCanvasElement>(null);\n  const clientWidth = useRef(width);\n  const clientHeight = useRef(height);\n\n  const isDrawing = useRef(false);\n  const drawer = useRef<Drawer>();\n  const erased = useRef<Set<string>>(new Set());\n\n  useEffect(updateClientSize, []);\n\n  useEffect(() => {\n    const cvs = getCanvasEl();\n\n    const touchPrevent = (e: globalThis.TouchEvent) => {\n      if (!finger && isFinger(e)) return;\n      e.preventDefault();\n    };\n\n    cvs.addEventListener(\"touchstart\", touchPrevent, {\n      passive: false,\n    });\n\n    return () => {\n      cvs.removeEventListener(\"touchstart\", touchPrevent);\n    };\n  }, [finger]);\n\n  useEffect(() => {\n    getContext().clearRect(0, 0, width, height);\n  }, [drawState, width, height]);\n\n  function getCanvasEl() {\n    if (!canvasEl.current) throw Error(\"can't get canvas element\");\n    return canvasEl.current;\n  }\n\n  function getContext() {\n    const context = getCanvasEl().getContext(\"2d\");\n    if (!context) throw Error(\"can't get canvas context\");\n    return context;\n  }\n\n  function getPosition(\n    e: iOSTouch | MouseEvent<HTMLCanvasElement>\n  ): [number, number] {\n    const clientRect = getCanvasEl().getBoundingClientRect();\n    const offsetX = e.clientX - clientRect.left;\n    const offsetY = e.clientY - clientRect.top;\n    const x = (offsetX / clientWidth.current) * width;\n    const y = (offsetY / clientHeight.current) * height;\n    return [x, y];\n  }\n\n  function updateClientSize() {\n    clientWidth.current = getCanvasEl().clientWidth;\n    clientHeight.current = getCanvasEl().clientHeight;\n  }\n\n  function handleTouchStart(e: TouchEvent<HTMLCanvasElement>) {\n    if (!finger && isFinger(e)) return;\n    isDrawing.current = true;\n    updateClientSize();\n\n    drawer.current = new Drawer(getContext());\n\n    const touch = e.touches[0] as iOSTouch;\n    const pressure = (touch.force ?? 0) * lineWidth;\n    const [x, y] = getPosition(touch);\n    const lw = even ? lineWidth : drawer.current.computeLineWidth(pressure);\n\n    const newP = { x, y, lineWidth: lw };\n\n    drawer.current.drawBegin(newP);\n  }\n\n  function handleMouseStart(e: MouseEvent<HTMLCanvasElement>) {\n    isDrawing.current = true;\n    updateClientSize();\n    const [x, y] = getPosition(e);\n\n    drawer.current = new Drawer(getContext());\n    const newP = { x, y, lineWidth };\n    drawer.current.drawBegin(newP);\n  }\n\n  function handleTouchMove(e: TouchEvent<HTMLCanvasElement>) {\n    if (!isDrawing.current || !drawer.current) return;\n\n    const touch = e.touches[0] as iOSTouch;\n    if (!finger && isFinger(e)) return;\n    const pressure = (touch.force ?? 0) * lineWidth;\n    const [x, y] = getPosition(touch);\n\n    const lw = even ? lineWidth : drawer.current.computeLineWidth(pressure);\n\n    const newP = { x, y, lineWidth: lw };\n    drawer.current.drawCurve(newP, erasing ? \"#ccc\" : undefined);\n    if (!erasing) return;\n    eraser?.checkWithIntrpl([x, y]).forEach((uid) => {\n      erased.current.add(uid);\n    });\n  }\n\n  function handleMouseMove(e: MouseEvent<HTMLCanvasElement>) {\n    if (!isDrawing.current || !drawer.current) return;\n\n    const [x, y] = getPosition(e);\n    const newP = { x, y, lineWidth };\n    drawer.current.drawCurve(newP, erasing ? \"#ccc\" : undefined);\n    if (!erasing) return;\n    eraser?.checkWithIntrpl([x, y]).forEach((uid) => {\n      erased.current.add(uid);\n    });\n  }\n\n  function handleEnd() {\n    const d = drawer.current;\n    if (!isDrawing.current || !d) return;\n    isDrawing.current = false;\n\n    const updateDrawState = erasing\n      ? () => {\n          setDrawState((prev) =>\n            DrawState.eraseStrokes(prev, Array.from(erased.current))\n          );\n          erased.current.clear();\n        }\n      : () => {\n          const points = d.points;\n          if (points.length < 3) return;\n          setDrawState((prev) => DrawState.addStroke(prev, points));\n        };\n\n    requestAnimationFrame(() => {\n      requestAnimationFrame(updateDrawState);\n    })\n  }\n\n  return (\n    <canvas\n      width={width}\n      height={height}\n      ref={canvasEl}\n      onTouchStart={handleTouchStart}\n      onMouseDown={handleMouseStart}\n      onTouchMove={handleTouchMove}\n      onMouseMove={handleMouseMove}\n      onTouchEnd={handleEnd}\n      onMouseUp={handleEnd}\n      onMouseLeave={handleEnd}\n    />\n  );\n}\n","import { createVirtualCanvas, drawPoints } from \"./drawer\";\nimport { DrawState } from \"./DrawState\";\n\nexport type CtxRecord = Record<string, CanvasRenderingContext2D>;\n\nexport class Eraser {\n  public ctxRec: CtxRecord = {};\n  private prevPoint?: [number, number];\n  constructor(\n    drawState: DrawState,\n    cache: CtxRecord = {}\n  ) {\n    const strokes = drawState.getValidStrokes();\n    const { width, height } = drawState;\n    strokes.forEach(({ points, uid }) => {\n      if (uid in cache) {\n        this.ctxRec[uid] = cache[uid];\n        return;\n      }\n      const { context } = createVirtualCanvas(width, height);\n      this.ctxRec[uid] = context;\n      drawPoints(context, points, \"black\");\n    });\n  }\n\n  checkPoint([x, y]: [number, number]) {\n    return Object.entries(this.ctxRec)\n      .filter(([, ctx]) => ctx.isPointInStroke(x, y))\n      .map(([uid]) => uid);\n  }\n\n  checkWithIntrpl([x, y]: [number, number]) {\n    const checkPoints: [number, number][] = this.prevPoint\n      ? computeIntrplPoints(this.prevPoint, [x, y])\n      : [[x, y]];\n    this.prevPoint = [x, y];\n    return checkPoints\n      .map((p) => this.checkPoint(p))\n      .reduce((prev, curr) => {\n        curr.forEach((uid) => prev.add(uid));\n        return prev;\n      }, new Set<string>());\n  }\n}\n\nfunction computeIntrplPoints(\n  [prevX, prevY]: [number, number],\n  [currX, currY]: [number, number]\n): [number, number][] {\n  const [dx, dy] = [currX - prevX, currY - prevY];\n  const g = Math.max(Math.abs(dx), Math.abs(dy));\n  if (g === 0) return [[currX, currY]];\n\n  const [gx, gy] = [dx / g, dy / g];\n  const points: [number, number][] = [];\n  while (\n    ((dx <= 0 && prevX >= currX) || (dx > 0 && prevX <= currX)) &&\n    ((dy <= 0 && prevY >= currY) || (dy > 0 && prevY <= currY))\n  ) {\n    prevX += gx;\n    prevY += gy;\n    points.push([prevX, prevY]);\n  }\n  return points;\n}\n","import Drawdisplay from \"./DrawDisplay\";\nimport DrawInput from \"./DrawInput\";\nimport { DrawState, SetDrawState } from \"../../lib/draw/DrawState\";\nimport \"./draw.css\";\nimport { useMemo, useRef } from \"react\";\nimport { CtxRecord, Eraser } from \"../../lib/draw/eraser\";\n\nexport interface DrawCtrl {\n  erasing: boolean;\n  finger: boolean;\n  even: boolean;\n  lineWidth: number;\n  color: string;\n}\n\nexport default function Draw({\n  drawState,\n  onChange,\n  erasing = false,\n  finger = false,\n  even = true,\n  lineWidth = 10,\n}: {\n  drawState: DrawState;\n  onChange: SetDrawState;\n  erasing?: boolean;\n  finger?: boolean;\n  even?: boolean;\n  lineWidth?: number;\n}) {\n  const cache = useRef<CtxRecord>({});\n  const eraser = useMemo(() => {\n    const res = new Eraser(drawState, cache.current);\n    cache.current = res.ctxRec;\n    return res;\n  }, [drawState]);\n\n  return (\n    <div className=\"draw-wrapper\">\n      <Drawdisplay drawState={drawState} />\n      <DrawInput\n        drawState={drawState}\n        finger={finger}\n        even={even}\n        lineWidth={lineWidth}\n        setDrawState={onChange}\n        eraser={eraser}\n        erasing={erasing}\n      />\n    </div>\n  );\n}\n","import { List, OrderedMap, Record as Rec } from \"immutable\";\nimport { NotePage } from \"../note/note\";\nimport { DrawState, Operation, Stroke } from \"./DrawState\";\n\ninterface StateSetRecordType {\n  states: OrderedMap<string, DrawState>;\n  keys: List<string>;\n  editStack: List<string>;\n  undoStack: List<string>;\n}\n\nexport type SetOperation = Operation & { pageId: string };\n\ntype StateSetRecord = Rec<StateSetRecordType>;\n\nconst defaultRecord: Readonly<StateSetRecordType> = {\n  states: OrderedMap(),\n  keys: List(),\n  editStack: List(),\n  undoStack: List(),\n};\n\nconst defaultFactory = Rec(defaultRecord);\n\nexport class StateSet {\n  constructor(\n    private immutable: StateSetRecord,\n    public lastOp?: SetOperation\n  ) {}\n\n  static createEmpty() {\n    return new StateSet(defaultFactory());\n  }\n\n  static createKeyed(keys: string[]) {\n    return new StateSet(defaultFactory().set(\"keys\", List(keys)));\n  }\n\n  static createFromList(list: [string, DrawState][]) {\n    return new StateSet(\n      defaultFactory()\n        .set(\"keys\", List(list.map((item) => item[0])))\n        .set(\"states\", OrderedMap(list))\n    );\n  }\n\n  static createFromPages(pageRecord: Record<string, NotePage>, width: number) {\n    const entries = Object.entries(pageRecord);\n    return StateSet.createFromList(\n      entries.map(([key, { state, ratio }]) => [\n        key,\n        DrawState.loadFromFlat(state, width, width * ratio),\n      ])\n    );\n  }\n\n  getImmutable() {\n    return this.immutable;\n  }\n\n  getStates() {\n    return this.getImmutable().get(\"states\");\n  }\n\n  getKeys() {\n    return this.getImmutable().get(\"keys\");\n  }\n\n  getEditStack() {\n    return this.getImmutable().get(\"editStack\");\n  }\n\n  getUndoStack() {\n    return this.getImmutable().get(\"undoStack\");\n  }\n\n  setState(pageId: string, drawState: DrawState) {\n    let newImmu = this.getImmutable().update(\"states\", (s) =>\n      s.set(pageId, drawState)\n    );\n\n    if (this.getStates().has(pageId)) {\n      newImmu = newImmu.update(\"editStack\", (s) => s.push(pageId));\n    }\n\n    let lastOp: SetOperation | undefined;\n    if (drawState.lastOp) {\n      lastOp = { ...drawState.lastOp, pageId };\n    }\n    return new StateSet(newImmu, lastOp);\n  }\n\n  getOneState(pageId: string) {\n    return this.getImmutable().get(\"states\").get(pageId);\n  }\n\n  isUndoable() {\n    return this.getEditStack().size > 0;\n  }\n\n  isRedoable() {\n    return this.getUndoStack().size > 0;\n  }\n\n  undo() {\n    if (!this.isUndoable()) return this;\n    const lastUid = this.getImmutable().get(\"editStack\").last();\n    if (!lastUid) return this;\n\n    const prevDS = this.getImmutable().get(\"states\").get(lastUid);\n    if (!prevDS) return this;\n\n    const newDS = DrawState.undo(prevDS);\n    const lastOp = newDS.lastOp;\n    let lastSetOp: SetOperation | undefined;\n    if (lastOp) lastSetOp = { pageId: lastUid, ...lastOp };\n\n    return new StateSet(\n      this.getImmutable()\n        .update(\"editStack\", (s) => s.pop())\n        .update(\"undoStack\", (s) => s.push(lastUid))\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\n      lastSetOp\n    );\n  }\n\n  redo() {\n    if (this.isRedoable()) {\n      const lastUid = this.getImmutable().get(\"undoStack\").last();\n      if (!lastUid) return this;\n\n      const prevDS = this.getImmutable().get(\"states\").get(lastUid);\n      if (!prevDS) return this;\n\n      const newDS = DrawState.redo(prevDS);\n      const lastOp = newDS.lastOp;\n      let lastSetOp: SetOperation | undefined;\n      if (lastOp) lastSetOp = { pageId: lastUid, ...lastOp };\n\n      return new StateSet(\n        this.getImmutable()\n          .update(\"undoStack\", (s) => s.pop())\n          .update(\"editStack\", (s) => s.push(lastUid))\n          .update(\"states\", (s) => s.set(lastUid, newDS)),\n        lastSetOp\n      );\n    } else {\n      return this;\n    }\n  }\n\n  pushStroke(pageId: string, stroke: Stroke) {\n    const prevDs = this.getImmutable().get(\"states\").get(pageId);\n    if (!prevDs) return this;\n    const ds = DrawState.pushStroke(prevDs, stroke);\n    return this.setState(pageId, ds);\n  }\n\n  pushOperation(SetOp: SetOperation) {\n    const { type, pageId } = SetOp;\n    const prevDs = this.getImmutable().get(\"states\").get(pageId);\n    if (!prevDs) return this;\n\n    let ds: DrawState;\n    switch (type) {\n      case 'add':\n        ds = DrawState.pushStroke(prevDs, SetOp.stroke);\n        break;\n      case 'erase':\n        ds = DrawState.pushErase(prevDs, SetOp.erase);\n        break;\n      case 'undo':\n        ds = DrawState.pushUndo(prevDs, SetOp.undoUid);\n        break;\n      case 'redo':\n        ds = DrawState.pushRedo(prevDs, SetOp.redoUid);\n        break;\n    }\n\n    return this.setState(pageId, ds);\n  }\n}\n","import { message } from \"antd\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { SetOperation, StateSet } from \"../../lib/draw/StateSet\";\nimport { getTeamNote } from \"../../lib/network/http\";\nimport { IoFactory } from \"../../lib/network/io\";\nimport Reader, { WIDTH } from \"./Reader\";\nimport { getUserId, UserInfo } from \"../../lib/user\";\nimport {\n  LoginOutlined,\n  LogoutOutlined,\n} from \"@ant-design/icons\";\n\nexport const TeamStateCtx = createContext({\n  code: -2,\n  userList: [] as UserInfo[],\n});\n\nexport default function Team() {\n  const noteId = useParams().noteId ?? \"\";\n  const [teamStateSet, setTeamStateSet] = useState<StateSet>();\n  const [code, setCode] = useState(-2);\n  const [userList, setUserList] = useState<UserInfo[]>([]);\n  const [ws] = useState(IoFactory(noteId));\n  const nav = useNavigate();\n\n  async function loadTeamPages() {\n    const res = await getTeamNote(noteId);\n    if (!res) {\n      message.error(\"Failed loading the team note\");\n      return nav(\"/\");\n    }\n    const { code, pages } = res;\n    setCode(code);\n    setTeamStateSet(StateSet.createFromPages(pages, WIDTH));\n  }\n\n  const roomInit = async () => {\n    await loadTeamPages();\n    ws.on(\"push\", ({ operation }) => {\n      setTeamStateSet((prev) => prev?.pushOperation(operation));\n    });\n\n    ws.on(\"joined\", ({ joined, members }) => {\n      const { userId, userName } = joined;\n      setUserList(members);\n      if (userId === getUserId()) return;\n      message.success({\n        icon: <LoginOutlined />,\n        content: userName + \" joined room\",\n      });\n    });\n\n    ws.on(\"leaved\", ({ leaved, members }) => {\n      const { userId, userName } = leaved;\n      setUserList(members);\n      if (userId === getUserId()) return;\n      message.warning({\n        icon: <LogoutOutlined />,\n        content: userName + \" leaved room\",\n      });\n    });\n\n    ws.connect();\n  };\n\n  const roomDestroy = () => {\n    ws.off(\"connect\");\n    ws.off(\"push\");\n    ws.off(\"joined\");\n    ws.off(\"leaved\");\n    ws.disconnect();\n  };\n\n  useEffect(() => {\n    roomInit();\n    return roomDestroy;\n  }, [noteId]);\n\n  const pushOperation = (op: SetOperation) => {\n    ws.emit(\"push\", { operation: op });\n  };\n\n  return (\n    <TeamStateCtx.Provider value={{ code, userList }}>\n      <Reader\n        teamOn={true}\n        teamStateSet={teamStateSet}\n        pushOperation={pushOperation}\n      />\n    </TeamStateCtx.Provider>\n  );\n}\n","import { io } from \"socket.io-client\";\nimport { getUserId, getUserName } from \"../user\";\nimport { BASE_URL } from \"./http\";\n\nexport const IoFactory = (noteId: string) => {\n  return () =>\n    io(BASE_URL, {\n      autoConnect: false,\n      query: {\n        userId: getUserId(),\n        userName: getUserName(),\n        noteId,\n      },\n    });\n};\n","import React, { useEffect, useState } from \"react\";\nimport \"./digitDisplay.sass\";\n\nfunction num2digits(num: number): number[] {\n  return String(num)\n    .padStart(4, \"0\")\n    .split(\"\")\n    .map((s) => Number(s));\n}\n\nexport default function DigitDisplay({ value }: { value: number }) {\n  const [randomNum, setRandomNum] = useState(9999);\n  const displayNum = value >= 0 ? value : randomNum;\n  const digits = num2digits(displayNum);\n\n  function resetRandom() {\n    setRandomNum(Math.floor(Math.random() * 10000));\n  }\n  useEffect(() => {\n    if (value !== -1) return setRandomNum(9999);\n    const timer = setTimeout(resetRandom, 100);\n    return () => clearTimeout(timer);\n  }, [value]);\n\n  return (\n    <div className={`digit-display ${value === -2 ? \"disabled\" : \"\"}`}>\n      {digits.map((d, idx) => (\n        <Digit key={idx} digit={d} />\n      ))}\n    </div>\n  );\n}\n\nfunction Digit({ digit }: { digit: number }) {\n  if (!(digit <= 9 && digit >= 0)) {\n    return <div className=\"digit\">*</div>;\n  }\n  return <div className=\"digit\">{digit}</div>;\n}\n","import { Avatar, Button, Divider, Popconfirm, Popover, Slider } from \"antd\";\nimport React, { Dispatch, SetStateAction, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { DrawCtrl } from \"../draw/Draw\";\nimport { DrawCtrlCtx, ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\nimport {\n  LeftOutlined,\n  UndoOutlined,\n  RedoOutlined,\n  HighlightOutlined,\n  SaveOutlined,\n  TeamOutlined,\n  createFromIconfontCN,\n} from \"@ant-design/icons\";\nimport \"./drawTools.sass\";\nimport { TeamStateCtx } from \"./Team\";\nimport DigitDisplay from \"../ui/DigitDisplay\";\nimport { getRandomColor } from \"../../lib/color\";\nimport { UserInfo } from \"../../lib/user\";\nconst IconFont = createFromIconfontCN({\n  scriptUrl: \"//at.alicdn.com/t/font_3181679_ofhwjwfs5hb.js\",\n});\n\nexport default function DrawTools({\n  setDrawCtrl,\n  handleUndo,\n  handleRedo,\n  instantSave,\n}: {\n  setDrawCtrl: Dispatch<SetStateAction<DrawCtrl>>;\n  handleUndo: () => void;\n  handleRedo: () => void;\n  instantSave: () => void;\n}) {\n  const drawCtrl = useContext(DrawCtrlCtx);\n  const { saved, stateSet, teamOn } = useContext(ReaderStateCtx);\n  const nav = useNavigate();\n\n  const updateDrawCtrl = (updated: Partial<DrawCtrl>) => {\n    setDrawCtrl((prev) => ({ ...prev, ...updated }));\n  };\n\n  const PenPanel = (\n    <div className=\"pen-panel\">\n      <Slider\n        min={1}\n        max={20}\n        value={drawCtrl.lineWidth}\n        onChange={(lineWidth) => updateDrawCtrl({ lineWidth })}\n      />\n    </div>\n  );\n\n  const PenButton = () =>\n    drawCtrl.erasing ? (\n      <Button\n        type=\"text\"\n        shape=\"circle\"\n        onClick={() => updateDrawCtrl({ erasing: false })}\n        icon={<HighlightOutlined />}\n      />\n    ) : (\n      <Popover\n        content={PenPanel}\n        trigger=\"click\"\n        placement=\"bottom\"\n        getPopupContainer={(e) => {\n          return e.parentElement?.parentElement || e;\n        }}\n      >\n        <Button type=\"default\" shape=\"circle\" icon={<HighlightOutlined />} />\n      </Popover>\n    );\n\n  return (\n    <div className=\"tool-bar\">\n      <div className=\"left-buttons\">\n        <Button type=\"text\" onClick={() => nav(\"/\")} icon={<LeftOutlined />}>\n          Back\n        </Button>\n        <Button\n          type=\"text\"\n          onClick={instantSave}\n          disabled={saved}\n          icon={<SaveOutlined />}\n        />\n      </div>\n      <div className=\"middle-buttons\">\n        <Button\n          type=\"text\"\n          icon={<UndoOutlined />}\n          onClick={handleUndo}\n          disabled={!stateSet?.isUndoable()}\n        />\n        <Button\n          className=\"redo-button\"\n          type=\"text\"\n          icon={<RedoOutlined />}\n          onClick={handleRedo}\n          disabled={!stateSet?.isRedoable()}\n        />\n        <PenButton />\n        <Button\n          type={drawCtrl.erasing ? \"default\" : \"text\"}\n          shape=\"circle\"\n          onClick={() => updateDrawCtrl({ erasing: true })}\n          icon={<IconFont type=\"icon-eraser\" />}\n        />\n      </div>\n      <div className=\"right-buttons\">\n        {teamOn && <RoomInfo />}\n        {teamOn || <JoinRoom />}\n      </div>\n    </div>\n  );\n}\n\nconst UserCard = ({ userInfo }: { userInfo: UserInfo }) => {\n  const { userName } = userInfo;\n  return (\n    <div className=\"user-card\">\n      <Avatar\n        className=\"avatar\"\n        size=\"small\"\n        style={{ backgroundColor: getRandomColor() }}\n      >\n        {userName.slice(0, 4)}\n      </Avatar>\n      <span>{userName}</span>\n    </div>\n  );\n};\n\nfunction RoomInfo() {\n  const { code, userList } = useContext(TeamStateCtx);\n\n  const content = (\n    <div className=\"team-popover\">\n      <DigitDisplay value={code} />\n      <Divider />\n      <div className=\"user-list\">\n        {userList.map((u) => (\n          <UserCard key={u.userId} userInfo={u} />\n        ))}\n      </div>\n    </div>\n  );\n\n  return (\n    <Popover\n      content={content}\n      trigger=\"click\"\n      placement=\"bottomRight\"\n      title=\"Team info\"\n      defaultVisible\n      getPopupContainer={(e) => {\n        return e.parentElement?.parentElement || e;\n      }}\n    >\n      <Button shape=\"round\" icon={<TeamOutlined />}>\n        Team\n      </Button>\n    </Popover>\n  );\n}\n\nconst JoinRoom = () => {\n  const { createRoom } = useContext(ReaderMethodCtx);\n  return (\n    <Popconfirm\n      placement=\"bottomRight\"\n      title=\"Enable team editing?\"\n      onConfirm={createRoom}\n      okText=\"Yes\"\n      cancelText=\"No\"\n    >\n      <Button shape=\"round\" icon={<TeamOutlined />}>\n        Team\n      </Button>\n    </Popconfirm>\n  );\n};\n","import { message } from \"antd\";\nimport React, {\n  createContext,\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport Draw, { DrawCtrl } from \"../draw/Draw\";\nimport { DrawState } from \"../../lib/draw/DrawState\";\nimport { Note, NotePage } from \"../../lib/note/note\";\nimport \"./reader.sass\";\nimport { SetOperation, StateSet } from \"../../lib/draw/StateSet\";\nimport { loadNote, editNoteData } from \"../../lib/note/archive\";\nimport { debounce } from \"lodash\";\nimport DrawDisplay from \"../draw/DrawDisplay\";\nimport { putNote, updatePages } from \"../../lib/network/http\";\nimport dafaultImg from \"../ui/default.png\";\nimport DrawTools from \"./DrawTools\";\nimport { useBeforeunload } from \"react-beforeunload\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nexport const WIDTH = 2000;\n\nconst defaultDrawCtrl: DrawCtrl = {\n  erasing: false,\n  finger: false,\n  even: true,\n  lineWidth: 5,\n  color: \"#000\",\n};\nexport const DrawCtrlCtx = createContext(defaultDrawCtrl);\nexport const ReaderStateCtx = createContext({\n  noteId: \"\",\n  stateSet: undefined as StateSet | undefined,\n  saved: true,\n  teamOn: false,\n});\nexport const ReaderMethodCtx = createContext({\n  setSaved: (() => {}) as Dispatch<SetStateAction<boolean>>,\n  createRoom: () => {},\n});\n\nexport default function Reader({\n  teamOn,\n  teamStateSet,\n  pushOperation,\n}: {\n  teamOn: boolean;\n  teamStateSet?: StateSet;\n  pushOperation?: (op: SetOperation) => void;\n}) {\n  const noteId = useParams().noteId ?? \"\";\n  const nav = useNavigate();\n\n  const [pageRecord, setPageRecord] = useState<Record<string, NotePage>>();\n  const [note, setNote] = useState<Note>();\n  const [stateSet, setStateSet] = useState<StateSet>();\n  const [drawCtrl, setDrawCtrl] = useState(defaultDrawCtrl);\n  const [saved, setSaved] = useState(true);\n\n  const loadNotePages = async () => {\n    const storedNote = await loadNote(noteId);\n    if (!storedNote) {\n      message.error(\"Note not found\");\n      return nav(\"/\");\n    }\n    const { pages } = storedNote;\n    setPageRecord(pages);\n    setNote(storedNote);\n    setStateSet(StateSet.createFromPages(pages, WIDTH));\n    if (teamOn) updatePages(noteId, pages);\n  };\n\n  const debouncedSave = useCallback(\n    debounce(async (pr: Record<string, NotePage>) => {\n      await editNoteData(noteId, { pages: pr });\n      setSaved(true);\n    }, 1000),\n    []\n  );\n  const instantSave = debouncedSave.flush;\n\n  const createRoom = async () => {\n    if (!note || !pageRecord) return;\n    const resCode = await putNote(noteId, note, pageRecord);\n    if (!resCode) {\n      message.error(\"Can't create room.\");\n      return;\n    }\n    await editNoteData(noteId, { team: true });\n    nav(\"/team/\" + noteId);\n  };\n\n  const noteInit = () => {\n    loadNotePages();\n  };\n\n  const noteDestroy = () => {\n    instantSave();\n  };\n\n  useEffect(() => {\n    noteInit();\n    return noteDestroy;\n  }, [noteId, teamOn]);\n\n  useEffect(() => {\n    if (!note) return;\n    document.title = note.name;\n  }, [note]);\n\n  useBeforeunload(noteDestroy);\n\n  useEffect(() => {\n    if (!stateSet?.lastOp || !pushOperation) return;\n    pushOperation(stateSet.lastOp);\n  }, [stateSet]);\n\n  useEffect(() => {\n    if (!pageRecord) return;\n    debouncedSave(pageRecord);\n    setSaved(false);\n  }, [pageRecord]);\n\n  const setPageState = useCallback((uid: string, ds: DrawState) => {\n    setStateSet((prev) => prev?.setState(uid, ds));\n    setPageRecord((prev) => {\n      if (!prev) return;\n      return {\n        ...prev,\n        [uid]: { ...prev[uid], state: DrawState.flaten(ds) },\n      };\n    });\n  }, []);\n\n  const handleUndo = () => {\n    setStateSet((prev) => prev?.undo());\n  };\n\n  const handleRedo = () => {\n    setStateSet((prev) => prev?.redo());\n  };\n\n  return (\n    <DrawCtrlCtx.Provider value={drawCtrl}>\n      <ReaderStateCtx.Provider value={{ noteId, stateSet, saved, teamOn }}>\n        <ReaderMethodCtx.Provider value={{ setSaved, createRoom }}>\n          <div className=\"reader-container\">\n            <DrawTools\n              setDrawCtrl={setDrawCtrl}\n              instantSave={instantSave}\n              handleUndo={handleUndo}\n              handleRedo={handleRedo}\n            />\n            {stateSet?.getKeys().map((uid) => {\n              if (!pageRecord) return <></>;\n              const page = pageRecord[uid];\n              const drawState = stateSet.getOneState(uid);\n              const teamState = teamStateSet?.getOneState(uid);\n              if (!page || !drawState) return <></>;\n              return (\n                <PageWrapper\n                  drawState={drawState}\n                  teamState={teamState}\n                  updateState={setPageState}\n                  imageBlob={page.image}\n                  uid={uid}\n                  key={uid}\n                />\n              );\n            })}\n            <LoadingOutlined className=\"page-loading\" />\n          </div>\n        </ReaderMethodCtx.Provider>\n      </ReaderStateCtx.Provider>\n    </DrawCtrlCtx.Provider>\n  );\n}\n\nconst PageWrapper = React.memo(\n  ({\n    imageBlob,\n    drawState,\n    teamState,\n    uid,\n    updateState,\n  }: {\n    imageBlob?: Blob;\n    drawState: DrawState;\n    teamState: DrawState | undefined;\n    uid: string;\n    updateState: (uid: string, ds: DrawState) => void;\n  }) => {\n    const [loaded, setLoaded] = useState(false);\n\n    const url = useMemo(\n      () => (imageBlob ? URL.createObjectURL(imageBlob) : null),\n      [imageBlob]\n    );\n\n    useEffect(() => {\n      const prevUrl = url || \"\";\n      return () => URL.revokeObjectURL(prevUrl);\n    }, [url]);\n\n    return (\n      <div className={`pdf-page ${loaded ? \"loaded\" : \"\"}`}>\n        <img\n          src={url || dafaultImg}\n          alt=\"pdf-page\"\n          onLoad={() => setLoaded(true)}\n        />\n        <div className=\"page-draw\">\n          {teamState && <DrawDisplay drawState={teamState} />}\n          <DrawWrapper\n            updateState={updateState}\n            drawState={drawState}\n            uid={uid}\n          />\n        </div>\n      </div>\n    );\n  }\n);\n\nconst DrawWrapper = ({\n  drawState,\n  uid,\n  updateState,\n}: {\n  drawState: DrawState;\n  uid: string;\n  updateState: (uid: string, ds: DrawState) => void;\n}) => {\n  const drawCtrl = useContext(DrawCtrlCtx);\n\n  function handleChange(fn: ((s: DrawState) => DrawState) | DrawState) {\n    let ds = fn instanceof DrawState ? fn : fn(drawState);\n    updateState(uid, ds);\n  }\n\n  return (\n    <Draw\n      drawState={drawState}\n      onChange={handleChange}\n      erasing={drawCtrl.erasing}\n      lineWidth={drawCtrl.lineWidth}\n    />\n  );\n};\n","import React, { useEffect, useRef } from \"react\";\n\nexport default function Test() {\n  const cvsRef = useRef<HTMLCanvasElement>(null);\n  useEffect(() => {\n    const ctx = cvsRef.current?.getContext('2d');\n    if (!ctx) return;\n    ctx.lineWidth = 20;\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.quadraticCurveTo(100, 0, 100, 100);\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.moveTo(100, 100);\n    ctx.quadraticCurveTo(100, 200, 200, 200);\n    ctx.stroke();\n    return () => ctx.clearRect(0, 0, 300, 300)\n  }, [])\n  return (\n    <div>\n      <canvas width={1000} height={1000} ref={cvsRef} onMouseMove={({clientX, clientY}) => {\n        console.log(clientX, clientY);\n        const ctx = cvsRef.current?.getContext('2d');\n        if (!ctx) return;\n        console.time('in');\n        console.assert(\n          !ctx.isPointInStroke(clientX, clientY)\n          )\n        console.timeEnd('in');\n      }}></canvas>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\nimport MainMenu from \"./component/menu/MainMenu\";\nimport Reader from \"./component/reader/Reader\";\nimport Test from \"./component/Test\";\nimport Team from \"./component/reader/Team\";\n\nconst placeholderEl = (\n  <main style={{ padding: \"1rem\" }}>\n    <p>There's nothing here!</p>\n  </main>\n);\n\nReactDOM.render(\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<MainMenu />} />\n      <Route path=\"/reader\">\n        <Route path=\":noteId\" element={<Reader teamOn={false} />} />\n      </Route>\n      <Route path=\"/team\">\n        <Route path=\":noteId\" element={<Team />} />\n      </Route>\n      <Route path=\"/test\" element={<Test />} />\n      <Route path=\"*\" element={placeholderEl} />\n    </Routes>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}