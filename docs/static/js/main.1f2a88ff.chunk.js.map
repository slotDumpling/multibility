{"version":3,"sources":["lib/draw/DrawState.ts","lib/note/note.ts","lib/user.ts","lib/color.ts","lib/note/archive.ts","lib/draw/drawer.ts","lib/note/pdfImage.ts","lib/network/http.ts","component/ui/DigitInput.tsx","component/menu/RightTools.tsx","component/menu/LeftTools.tsx","component/menu/SideMenu.tsx","component/ui/default.png","component/menu/NoteList.tsx","component/menu/MainMenu.tsx","component/draw/Draw.tsx","lib/touch/touch.ts","lib/draw/StateSet.ts","component/reader/Team.tsx","lib/network/io.ts","component/ui/DigitDisplay.tsx","component/reader/DrawTools.tsx","component/reader/Reader.tsx","component/Test.tsx","index.tsx"],"names":["defaultRecord","state","strokes","List","uidStack","undoStack","OrderedSet","eraseStack","deleted","Set","defaultFactory","Record","defaultFlatState","DrawState","immutable","width","height","lastOp","this","getImmutable","get","getDeleted","undo","getUndoStack","getEraseStack","filter","uid","has","erase","getValidEraseStack","getStrokes","some","s","erased","last","drawState","getUidStack","type","undoUid","set","update","add","pop","redoUid","butLast","push","pathData","lineWidth","color","stroke","getUid","pushStroke","pushedState","mergeUndo","d","concat","pushErase","immuErase","RedoUid","delete","mergedRecord","reduce","prev","e","deletedAll","toArray","drawStateRecord","createEmptyNote","name","Date","now","tagId","team","withImg","pages","ratio","getUserId","cached","userId","localStorage","getItem","setItem","getUserName","slice","colors","getRandomColor","index","Math","floor","random","length","getAllNotes","a","localforage","allNotes","getAllTags","tags","storeTag","newTag","notes","deleteTag","editTag","tag","editedTag","loadNote","editNoteData","note","pdf","noteInfo","prevNote","saveNoteInfo","createNewNote","deleteNote","removeItem","id","moveNoteTag","noteId","prevTagId","convertTeamPage","teamPages","notePages","Object","entries","key","page","states","values","flat","saveTeamNote","createVirtualCanvas","canvas","document","createElement","context","getContext","Error","getCanvasBlob","Promise","res","toBlob","getPageImage","pageNum","scale","getPage","viewport","getViewport","console","log","time","render","canvasContext","transform","promise","timeEnd","blob","getImages","url","progressCb","pdfjs","numPages","blobs","ratios","i","thumbnail","images","LoadPDF","file","URL","createObjectURL","forEach","image","idx","replace","workerSrc","pdfjsWorker","BASE_URL","getNoteId","roomCode","axios","data","statusCode","pageInfos","pageId","method","responseType","error","putNote","pageRecord","put","formData","FormData","append","headers","code","updatePages","getTeamNote","info","defaults","baseURL","interceptors","request","use","config","DigitInput","value","digitNum","onChange","onSubmit","num2digits","num","Array","fill","String","padEnd","split","map","useState","nowFocused","setNowFocused","digits","setDigits","focus","inputRefs","current","el","blur","useEffect","newDigits","findIndex","newValue","Number","join","useRef","handleKeyUp","max","className","ref","pattern","val","test","handleChange","target","onKeyUp","onClick","OthersStateUpdateCtx","createContext","setActive","RightTools","JoinTeamButton","OthersMenu","useContext","Item","Menu","FilePdfOutlined","UserOutlined","SeconaryMenu","children","title","shape","icon","ArrowLeftOutlined","level","UploadPdfPage","loading","setLoading","tagUid","MenuStateCtx","MenuStateUpdateCtx","setAllTags","setAllNotes","percent","setPercent","message","success","disabled","multiple","action","accept","beforeUpload","InboxOutlined","ProfilePage","userName","setName","prefix","trim","setUserName","block","OthersPage","setHeight","active","cssProps","timeout","onEnter","clientHeight","unmountOnExit","cssProps2","classNames","Provider","style","CSSTransition","in","OthersButton","placement","trigger","content","CaretDownOutlined","setRoomCode","nav","useNavigate","dismiss","destroyTooltipOnHide","TeamOutlined","LeftTools","editing","setEditing","TagCircle","backgroundColor","TagItem","noteTag","setTagUid","tagEditing","setTagEditing","tagName","setTagName","tagColor","setTagColor","newAllTags","colorSelector","onSelect","c","Option","TagNameInput","addonBefore","onConfirm","okText","cancelText","danger","size","MinusCircleOutlined","CheckOutlined","CloseOutlined","SettingOutlined","AddTag","popContent","placeholder","onSearch","allowClear","enterButton","PlusOutlined","TagOutlined","SideMenu","allTags","htmlFor","MenuOutlined","defaultSelectedKeys","defaultOpenKeys","mode","ProfileOutlined","NoteList","noteList","NoteItem","href","noteName","setNoteName","imgLoaded","setImgLoaded","removeNote","useMemo","prevUrl","revokeObjectURL","move","TagButton","overlay","t","TagsOutlined","DeleteButton","DeleteOutlined","to","src","dafaultImg","alt","onLoad","CloudOutlined","onBlur","MainMenu","selectedTag","keys","then","NewNoteButton","FormOutlined","Draw","erasing","finger","canvasEl","scope","paper","PaperScope","group","path","setErased","handleDown","activate","Path","strokeColor","Color","strokeWidth","strokeCap","clientWidth","updateRatio","handleDrag","point","multiply","smooth","p","intersects","handleUp","eraseStrokes","simplify","addStroke","preventTouch","touch","touches","touchType","isStylus","isEventValid","stopPropagation","setup","view","viewSize","remove","onMouseDown","onMouseDrag","onMouseUp","Group","getValidStrokes","addChild","removeChildren","data-paper-hidpi","onTouchStartCapture","onTouchMoveCapture","OrderedMap","editStack","Rec","StateSet","newImmu","getStates","getEditStack","isUndoable","lastUid","prevDS","lastSetOp","newDS","isRedoable","redo","prevDs","ds","setState","SetOp","pushUndo","pushRedo","list","item","createFromList","loadFromFlat","TeamStateCtx","userList","Team","useParams","teamStateSet","setTeamStateSet","setCode","setUserList","io","autoConnect","query","IoFactory","ws","loadTeamPages","createFromPages","WIDTH","roomInit","on","operation","pushOperation","joined","members","LoginOutlined","leaved","warning","LogoutOutlined","connect","roomDestroy","off","disconnect","Reader","teamOn","op","emit","DigitDisplay","randomNum","setRandomNum","padStart","resetRandom","timer","setTimeout","clearTimeout","Digit","digit","IconFont","createFromIconfontCN","scriptUrl","DrawTools","setDrawCtrl","handleUndo","handleRedo","instantSave","DrawCtrlCtx","ReaderStateCtx","saved","stateSet","updateDrawCtrl","updated","LeftOutlined","SaveOutlined","UndoOutlined","RedoOutlined","PenButton","ghost","RoomInfo","React","memo","HighlightOutlined","getPopupContainer","parentElement","PenPanel","min","ColorSelect","checked","borderColor","UserCard","userInfo","u","defaultVisible","JoinRoom","createRoom","ReaderMethodCtx","defaultDrawCtrl","even","undefined","setSaved","setPageRecord","setNote","setStateSet","drawCtrl","loadNotePages","storedNote","debouncedSave","useCallback","debounce","pr","flush","noteDestroy","useBeforeunload","setPageState","flaten","getKeys","getOneState","teamState","PageWrapper","updateState","imageBlob","LoadingOutlined","loaded","setLoaded","DrawWrapper","fn","Test","createEmpty","setDs","placeholderEl","padding","ReactDOM","element","getElementById"],"mappings":"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","file":"static/js/main.1f2a88ff.chunk.js","sourcesContent":["import { List, OrderedSet, Record, Set } from \"immutable\";\nimport { Dispatch, SetStateAction } from \"react\";\n// import { Point } from \"./draw\";\nimport { v4 as getUid } from \"uuid\";\n\nexport interface Stroke {\n  uid: string;\n  color: string;\n  lineWidth: number;\n  pathData: string;\n}\n\ninterface Erase {\n  uid: string;\n  erased: string[];\n}\n\ninterface ImmuErase {\n  uid: string;\n  erased: Set<string>;\n}\n\nexport type Operation =\n  | {\n      type: \"add\";\n      stroke: Stroke;\n    }\n  | {\n      type: \"erase\";\n      erase: Erase;\n    }\n  | {\n      type: \"undo\";\n      undoUid: string;\n    }\n  | {\n      type: \"redo\";\n      redoUid: string;\n    };\n\ninterface DrawStateRecordType {\n  state: \"drawing\" | \"revoking\";\n  strokes: List<Stroke>;\n  uidStack: List<string>;\n  undoStack: OrderedSet<string>;\n  eraseStack: List<ImmuErase>;\n  deleted: Set<string>;\n}\n\ntype DrawStateRecord = Record<DrawStateRecordType>;\n\nconst defaultRecord: Readonly<DrawStateRecordType> = {\n  state: \"drawing\",\n  strokes: List(),\n  uidStack: List(),\n  undoStack: OrderedSet(),\n  eraseStack: List(),\n  deleted: Set(),\n};\n\nconst defaultFactory = Record(defaultRecord);\n\nexport interface FlatState {\n  strokes: Stroke[];\n}\n\nexport const defaultFlatState: FlatState = {\n  strokes: [],\n};\n\nexport class DrawState {\n  constructor(\n    private immutable: DrawStateRecord,\n    public readonly width: number,\n    public readonly height: number,\n    public lastOp?: Operation\n  ) {}\n\n  getImmutable() {\n    return this.immutable;\n  }\n\n  getUidStack() {\n    return this.getImmutable().get(\"uidStack\");\n  }\n\n  getUndoStack() {\n    return this.getImmutable().get(\"undoStack\");\n  }\n\n  getEraseStack() {\n    return this.getImmutable().get(\"eraseStack\");\n  }\n\n  getValidEraseStack() {\n    const deleted = this.getDeleted();\n    const undo = this.getUndoStack();\n    return this.getEraseStack().filter(\n      ({ uid }) => !deleted.has(uid) && !undo.has(uid)\n    );\n  }\n\n  getStrokes() {\n    return this.getImmutable().get(\"strokes\");\n  }\n\n  getValidStrokes() {\n    const deleted = this.getDeleted();\n    const undo = this.getUndoStack();\n    const erase = this.getValidEraseStack();\n    return this.getStrokes().filter(\n      ({ uid }) =>\n        !deleted.has(uid) &&\n        !undo.has(uid) &&\n        !erase.some((s) => s.erased.has(uid))\n    );\n  }\n\n  getDeleted() {\n    return this.getImmutable().get(\"deleted\");\n  }\n\n  getState() {\n    return this.getImmutable().get(\"state\");\n  }\n\n  getLastStroke() {\n    return this.getImmutable().get(\"strokes\").last();\n  }\n\n  static createEmpty(width: number, height: number) {\n    return new DrawState(defaultFactory(), width, height);\n  }\n\n  static undo(drawState: DrawState) {\n    const uid = drawState.getUidStack().last();\n\n    if (!uid) return drawState;\n\n    const lastOp: Operation = { type: \"undo\", undoUid: uid };\n\n    return new DrawState(\n      drawState\n        .getImmutable()\n        .set(\"state\", \"revoking\")\n        .update(\"undoStack\", (s) => s.add(uid))\n        .update(\"uidStack\", (s) => s.pop()),\n      drawState.width,\n      drawState.height,\n      lastOp\n    );\n  }\n\n  static redo(drawState: DrawState) {\n    const undo = drawState.getUndoStack();\n    const uid = undo.last();\n    if (!uid) return drawState;\n\n    const lastOp: Operation = { type: \"redo\", redoUid: uid };\n\n    return new DrawState(\n      drawState\n        .getImmutable()\n        .update(\"undoStack\", (s) => s.butLast())\n        .update(\"uidStack\", (s) => s.push(uid)),\n      drawState.width,\n      drawState.height,\n      lastOp\n    );\n  }\n\n  static addStroke(drawState: DrawState, pathData: string, lineWidth: number, color: string) {\n    const uid = getUid();\n    const stroke: Stroke = { uid, pathData, color, lineWidth };\n    return DrawState.pushStroke(drawState, stroke);\n  }\n\n  static pushStroke(drawState: DrawState, stroke: Stroke) {\n    const undo = drawState.getUndoStack();\n    const pushedState = mergeUndo(\n      drawState\n        .getImmutable()\n        .set(\"state\", \"drawing\")\n        .update(\"deleted\", (d) => d.concat(undo))\n        .set(\"undoStack\", OrderedSet())\n        .update(\"strokes\", (s) => s.push(stroke))\n        .update(\"uidStack\", (s) => s.push(stroke.uid))\n    );\n\n    const lastOp: Operation = { type: \"add\", stroke };\n\n    return new DrawState(\n      pushedState,\n      drawState.width,\n      drawState.height,\n      lastOp,\n    );\n  }\n\n  static eraseStrokes(drawState: DrawState, erased: string[]) {\n    const erase = { uid: getUid(), erased };\n    return DrawState.pushErase(drawState, erase);\n  }\n\n  static pushErase(drawState: DrawState, erase: Erase) {\n    const { uid, erased } = erase;\n    const immuErase: ImmuErase = { uid, erased: Set(erased) };\n\n    const lastOp: Operation = { type: 'erase', erase };\n\n    return new DrawState(\n      drawState\n        .getImmutable()\n        .update(\"eraseStack\", (s) => s.push(immuErase))\n        .update(\"uidStack\", (s) => s.push(uid)),\n      drawState.width,\n      drawState.height,\n      lastOp,\n    );\n  }\n\n  static pushUndo(drawState: DrawState, undoUid: string) {\n    return new DrawState(\n      drawState.getImmutable().update(\"undoStack\", (s) => s.add(undoUid)),\n      drawState.width,\n      drawState.height\n    );\n  }\n\n  static pushRedo(drawState: DrawState, RedoUid: string) {\n    return new DrawState(\n      drawState.getImmutable().update(\"undoStack\", (s) => s.delete(RedoUid)),\n      drawState.width,\n      drawState.height\n    );\n  }\n\n  static flaten(drawState: DrawState): FlatState {\n    const mergedRecord = mergeUndo(drawState.getImmutable());\n    const deleted = mergedRecord.get(\"deleted\");\n    const erased = drawState.getValidEraseStack().reduce((prev, e) => {\n      return prev.concat(e.erased);\n    }, Set<string>());\n\n    const deletedAll = deleted.concat(erased);\n    const strokes = mergedRecord\n      .get(\"strokes\")\n      .filter((s) => !deletedAll.has(s.uid))\n      .toArray();\n    return { strokes };\n  }\n\n  static loadFromFlat(\n    { strokes }: FlatState,\n    width: number,\n    height: number\n  ): DrawState {\n    return new DrawState(\n      defaultFactory().set(\"strokes\", List(strokes)),\n      width,\n      height\n    );\n  }\n}\n\nfunction mergeUndo(drawStateRecord: DrawStateRecord) {\n  const undo = drawStateRecord.get(\"undoStack\");\n  return drawStateRecord\n    .update(\"deleted\", (d) => d.concat(undo))\n    .set(\"undoStack\", OrderedSet())\n    .update(\"uidStack\", (s) => s.filter((uid) => !undo.has(uid)));\n}\n\nexport type SetDrawState = Dispatch<SetStateAction<DrawState>>;\n","import { defaultFlatState, FlatState, Stroke } from \"../draw/DrawState\";\nimport { v4 as getUid } from \"uuid\";\n\nexport interface NotePage {\n  image?: Blob;\n  ratio: number;\n  state: FlatState;\n}\n\nexport interface TeamPage {\n  ratio: number;\n  states: Record<string, Stroke[]>\n}\n\nexport interface TeamNote {\n  uid: string;\n  pages: Record<string, TeamPage>\n}\n\nexport interface NoteInfo {\n  uid: string;\n  name: string;\n  tagId: string;\n  team: boolean;\n  withImg: boolean;\n  createTime?: Date;\n  lastTime?: Date;\n  thumbnail?: Blob;\n}\n\nexport type Note = NoteInfo & {\n  pdf?: File;\n  pages: Record<string, NotePage>;\n};\n\nexport function createEmptyNote(): Note {\n  return {\n    uid: getUid(),\n    name: `New note ${Date.now()}`,\n    tagId: \"DEFAULT\",\n    team: false,\n    withImg: false,\n    pages: {\n      [getUid()]: {\n        ratio: 1.5,\n        state: defaultFlatState,\n      },\n    },\n  };\n}\n","import { v4 as getUid } from \"uuid\";\n\nexport interface UserInfo {\n  userId: string;\n  userName: string;\n}\n\nexport const getUserId = (() => {\n  let cached: string;\n  return () => {\n    if (cached) return cached;\n    let userId = localStorage.getItem(\"user_id\");\n    if (!userId) {\n      userId = getUid();\n      localStorage.setItem(\"user_id\", userId);\n    }\n    cached = userId;\n    return userId;\n  };\n})();\n\nexport const getUserName = () => {\n  let name = localStorage.getItem(\"USER_NAME\");\n  if (!name) {\n    name = \"User_\" + getUid().slice(0, 8);\n    localStorage.setItem(\"USER_NAME\", name);\n  }\n  return name;\n};\n\nexport const setUserName = (name: string) => {\n  name = name.trim();\n  if (!name) return false;\n  else localStorage.setItem(\"USER_NAME\", name);\n  return true;\n};\n","export const colors = [\n  \"#000000\",\n  \"#9ca3af\",\n  \"#64748b\",\n  \"#78716c\",\n  \"#f97316\",\n  \"#eab308\",\n  \"#84cc16\",\n  \"#22c55e\",\n  \"#10b981\",\n  \"#14b8a6\",\n  \"#06b6d4\",\n  \"#0ea5e9\",\n  \"#3b82f6\",\n  \"#6366f1\",\n  \"#8b5cf6\",\n  \"#a855f7\",\n  \"#d946ef\",\n  \"#ec4899\",\n  \"#f43f5e\",\n  \"#ef4444\",\n];\n\nexport const getRandomColor = () => {\n  const index = Math.floor(Math.random() * colors.length);\n  return colors[index];\n}","import localforage from \"localforage\";\nimport { NoteInfo, Note, NotePage, TeamPage } from \"./note\";\nimport { v4 as getUid } from \"uuid\";\nimport { defaultFlatState } from \"../draw/DrawState\";\nimport { getUserId } from \"../user\";\nimport { getRandomColor } from \"../color\";\n\nexport interface NoteTag {\n  uid: string;\n  name: string;\n  color: string;\n  notes: string[];\n}\n\nexport async function getAllNotes() {\n  const allNotes = await localforage.getItem(\"ALL_NOTES\");\n  if (allNotes) {\n    return allNotes as Record<string, NoteInfo>;\n  } else {\n    localforage.setItem(\"ALL_NOTES\", {});\n    return {};\n  }\n}\n\nexport async function getAllTags() {\n  const tags = await localforage.getItem(\"ALL_TAGS\");\n  if (tags) {\n    return tags as Record<string, NoteTag>;\n  } else {\n    localforage.setItem(\"ALL_TAGS\", {});\n    return {};\n  }\n}\n\nexport async function storeTag(name: string) {\n  const uid = getUid();\n  const newTag: NoteTag = {\n    uid,\n    name,\n    color: getRandomColor(),\n    notes: [],\n  };\n  const tags: Record<string, NoteTag> = {\n    ...(await getAllTags()),\n    [uid]: newTag,\n  };\n  await localforage.setItem(\"ALL_TAGS\", tags);\n\n  return tags;\n}\n\nexport async function deleteTag(uid: string) {\n  const tags = await getAllTags();\n  delete tags[uid];\n  await localforage.setItem(\"ALL_TAGS\", tags);\n\n  return tags;\n}\n\nexport async function editTag(tag: NoteTag) {\n  const tags = await getAllTags();\n  const editedTag = tags[tag.uid];\n  editedTag.name = tag.name;\n  editedTag.color = tag.color;\n  editedTag.notes = tag.notes;\n  await localforage.setItem(\"ALL_TAGS\", tags);\n  return tags;\n}\n\nexport async function loadNote(uid: string) {\n  return (await localforage.getItem(uid)) as Note | undefined;\n}\n\nexport async function editNoteData(uid: string, note: Partial<Note>) {\n  const allNotes = await getAllNotes();\n  const { pages, pdf, ...noteInfo } = note;\n  allNotes[uid] = { ...allNotes[uid], ...noteInfo };\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\n  const prevNote = await loadNote(uid);\n  if (!prevNote) return;\n  await localforage.setItem(uid, { ...prevNote, ...note });\n}\n\nexport async function saveNoteInfo(noteInfo: NoteInfo) {\n  const { uid, tagId } = noteInfo;\n  const allNotes = await getAllNotes();\n  allNotes[uid] = noteInfo;\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\n  const tags = await getAllTags();\n  if (tagId !== \"DEFAULT\") {\n    tags[tagId].notes.push(noteInfo.uid);\n    await localforage.setItem(\"ALL_TAGS\", tags);\n  }\n  return { tags, allNotes };\n}\n\nexport async function createNewNote(note: Note) {\n  await localforage.setItem(note.uid, note);\n  const { pdf, pages, ...noteInfo } = note;\n  return await saveNoteInfo(noteInfo);\n}\n\nexport async function deleteNote(uid: string) {\n  const note = await loadNote(uid);\n  const allNotes = await getAllNotes();\n  const tags = await getAllTags();\n  if (!note) return { tags, allNotes };\n  await localforage.removeItem(uid);\n  const { pdf, pages, ...noteInfo } = note;\n  delete allNotes[uid];\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\n\n  const { tagId } = noteInfo;\n  if (tagId !== \"DEFAULT\") {\n    const { notes } = tags[tagId];\n    tags[tagId].notes = notes.filter((id) => id !== uid);\n    await localforage.setItem(\"ALL_TAGS\", tags);\n  }\n  return { tags, allNotes };\n}\n\nexport async function moveNoteTag(noteId: string, tagId: string) {\n  const note = await loadNote(noteId);\n  const allNotes = await getAllNotes();\n  const tags = await getAllTags();\n  if (!note) return { tags, allNotes };\n\n  const { tagId: prevTagId } = note;\n  note.tagId = tagId;\n  await localforage.setItem(noteId, note);\n  allNotes[noteId].tagId = tagId;\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\n\n  if (prevTagId in tags) {\n    tags[prevTagId].notes = tags[prevTagId].notes.filter((id) => id !== noteId);\n  }\n  tags[tagId]?.notes?.push(noteId);\n  await localforage.setItem(\"ALL_TAGS\", tags);\n  return { tags, allNotes };\n}\n\nexport async function convertTeamPage(teamPages: Record<string, TeamPage>) {\n  const notePages: Record<string, NotePage> = {};\n  for (let [key, page] of Object.entries(teamPages)) {\n    const { ratio, states } = page;\n    delete states[getUserId()];\n    notePages[key] = {\n      ratio,\n      state: {\n        strokes: Object.values(states).flat(1),\n      },\n    };\n  }\n  return notePages;\n}\n\nexport async function saveTeamNote(\n  noteId: string,\n  noteInfo: { name: string; uid: string; withImg: boolean },\n  teamPages: Record<string, Omit<NotePage, \"state\">>\n) {\n  let note = await loadNote(noteId);\n  if (!note) {\n    const pages: Record<string, NotePage> = {};\n    for (let [key, page] of Object.entries(teamPages)) {\n      pages[key] = { ...page, state: defaultFlatState };\n    }\n    note = {\n      ...noteInfo,\n      tagId: \"DEFAULT\",\n      team: true,\n      pages,\n    };\n    createNewNote(note);\n  }\n}\n","// export class Drawer {\n//   constructor(\n//     private context: CanvasRenderingContext2D,\n//     public points: Point[] = [],\n//   ) {}\n\n//   drawBegin(point: Point) {\n//     this.points.push(point);\n//     const { x, y, lineWidth } = point;\n//     this.context.lineWidth = lineWidth;\n//     this.context.beginPath();\n//     this.context.moveTo(x, y);\n//   }\n\n//   drawCurve(toP: Point, color = \"#000000\") {\n//     const fromP = this.points.slice(-1)[0];\n//     this.points.push(toP);\n//     if (this.points.length < 3) return;\n\n//     const xc = (toP.x + fromP.x) / 2;\n//     const yc = (toP.y + fromP.y) / 2;\n//     this.context.strokeStyle = color;\n//     this.context.lineCap = \"round\";\n//     this.context.lineJoin = \"round\";\n//     this.context.lineWidth = fromP.lineWidth;\n//     this.context.quadraticCurveTo(fromP.x, fromP.y, xc, yc);\n//     this.context.stroke();\n//     this.context.beginPath();\n//     this.context.moveTo(xc, yc);\n//   }\n\n//   drawCurveComplete(color = 'black') {\n//     if (this.points.length < 3) return;\n//     this.context.lineWidth = Math.max(...this.points.map(p => p.lineWidth));\n//     let fromP = this.points[0];\n//     this.context.beginPath();\n//     this.context.strokeStyle = color;\n//     this.context.lineCap = \"round\";\n//     this.context.lineJoin = \"round\";\n//     this.context.moveTo(fromP.x, fromP.y);\n//     for (let i = 1; i < this.points.length; i += 1) {\n//       const xc = (this.points[i].x + fromP.x) / 2;\n//       const yc = (this.points[i].y + fromP.y) / 2;\n//       this.context.quadraticCurveTo(fromP.x, fromP.y, xc, yc);\n//       fromP = this.points[i];\n//     }\n//     this.context.stroke();\n//   }\n\n//   computeLineWidth(pressure: number) {\n//     return (\n//       Math.log(pressure + 1) * 5 +\n//       (this.points.slice(-1)[0]?.lineWidth ?? 0) * 0.8\n//     );\n//   }\n\n//   static createRaw(width: number, height: number) {\n//     const canvas = document.createElement(\"canvas\");\n//     canvas.width = width;\n//     canvas.height = height;\n//     const context = canvas.getContext(\"2d\");\n//     if (!context) {\n//       throw Error(\"can't get canvas context\");\n//     }\n//     return new Drawer(context);\n//   }\n// }\n\n// export function drawPoints(\n//   context: CanvasRenderingContext2D,\n//   points: Point[],\n//   color = \"black\",\n// ) {\n//   const drawer = new Drawer(context, points);\n//   drawer.drawCurveComplete(color);\n//   // const clonedPs = points.slice();\n//   // const firstP = clonedPs.shift();\n//   // if (!firstP) return;\n//   // drawer.drawBegin(firstP);\n//   // clonedPs.forEach((p) => drawer.drawCurve(p, color));\n// }\n\nexport function createVirtualCanvas(width: number, height: number) {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  if (!context) {\n    throw new Error(\"can't get virtual canvas context\");\n  }\n  canvas.width = width;\n  canvas.height = height;\n  return { canvas, context };\n}\n","import * as pdfjs from \"pdfjs-dist/legacy/build/pdf\";\n// @ts-ignore\nimport pdfjsWorker from \"pdfjs-dist/legacy/build/pdf.worker.entry\";\nimport { PDFDocumentProxy } from \"pdfjs-dist/types/src/display/api\";\nimport { v4 as getUid } from \"uuid\";\nimport { createVirtualCanvas } from \"../draw/drawer\";\nimport { Note, NotePage } from \"./note\";\npdfjs.GlobalWorkerOptions.workerSrc = pdfjsWorker;\n\nfunction getCanvasBlob(canvas: HTMLCanvasElement): Promise<Blob | null> {\n  return new Promise((res: BlobCallback) => {\n    canvas.toBlob(res);\n  });\n}\n\nasync function getPageImage(\n  pdf: PDFDocumentProxy,\n  pageNum: number,\n  scale: number\n): Promise<[Blob, number]> {\n  const page = await pdf.getPage(pageNum);\n  const viewport = page.getViewport({ scale });\n  console.log(viewport);\n\n  const { height, width } = viewport;\n  const ratio = height / width;\n  const { canvas, context } = createVirtualCanvas(\n    Math.floor(width * scale),\n    Math.floor(height * scale)\n  );\n\n  console.time(\"render\");\n  await page.render({\n    canvasContext: context,\n    viewport: viewport,\n    transform: [scale, 0, 0, scale, 0, 0],\n  }).promise;\n  console.timeEnd(\"render\");\n\n  console.time(\"img\");\n  const blob = await getCanvasBlob(canvas);\n  if (!blob) {\n    throw new Error(\"can't get canvas image blob\");\n  }\n  console.timeEnd(\"img\");\n  return [blob, ratio];\n}\n\nexport async function getImages(\n  url: string,\n  scale = 2,\n  progressCb?: (percent: number) => void\n) {\n  const pdf = await pdfjs.getDocument(url).promise;\n  const { numPages } = pdf;\n  const blobs: Blob[] = [];\n  const ratios: number[] = [];\n\n  for (let i = 1; i <= numPages; i += 1) {\n    const [blob, ratio] = await getPageImage(pdf, i, scale);\n    blobs.push(blob);\n    ratios.push(ratio);\n    if (progressCb) progressCb(Math.floor((i / numPages) * 100));\n  }\n\n  const [thumbnail] = await getPageImage(pdf, 1, 0.5);\n\n  return {\n    images: blobs,\n    ratios,\n    thumbnail,\n  };\n}\n\nexport async function LoadPDF(\n  file: File,\n  progressCb?: (percent: number) => void\n): Promise<Note> {\n  const url = URL.createObjectURL(file);\n  const { images, ratios, thumbnail } = await getImages(url, 2, progressCb);\n  const pages: Record<string, NotePage> = {};\n  images.forEach((image, idx) => {\n    pages[getUid()] = {\n      image,\n      ratio: ratios[idx],\n      state: {\n        strokes: [],\n      },\n    };\n  });\n  const name = file.name.replace(\".pdf\", \"\");\n  return {\n    uid: getUid(),\n    name,\n    tagId: \"DEFAULT\",\n    team: false,\n    withImg: true,\n    pdf: file,\n    thumbnail,\n    pages,\n  };\n}\n","import axios from \"axios\";\nimport { Note, NoteInfo, NotePage } from \"../note/note\";\nimport { convertTeamPage, saveTeamNote } from \"../note/archive\";\nimport { getUserId } from \"../user\";\n\nexport const BASE_URL = \"https://api.slotdumpling.top/paint\";\naxios.defaults.baseURL = BASE_URL;\naxios.interceptors.request.use((config) => {\n  console.log(config.method, config.url);\n  return config;\n});\n\nexport async function getNoteId(roomCode: number) {\n  try {\n    const { data } = await axios.get(`code/${roomCode}`);\n    if (data.statusCode === 200) {\n      const { noteId, pageInfos, noteInfo } = data as {\n        noteId: string;\n        pageInfos: Record<string, Omit<NotePage, \"state\">>;\n        noteInfo: NoteInfo;\n      };\n      \n      if (noteInfo.withImg) {\n        for (let [pageId, page] of Object.entries(pageInfos)) {\n          const { data } = await axios({\n            method: \"GET\",\n            url: pageId,\n            responseType: \"blob\",\n          });\n          page.image = data;\n        }\n      }\n      await saveTeamNote(noteId, noteInfo, pageInfos);\n      return noteId as string;\n    } else {\n      return null;\n    }\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n}\n\nexport async function putNote(\n  noteId: string,\n  noteInfo: Note,\n  pageRecord: Record<string, NotePage>\n) {\n  const { uid, name, withImg, pages } = noteInfo;\n\n  try {\n    const { data } = await axios.put(`create/${noteId}`, {\n      userId: getUserId(),\n      pageRecord,\n      noteInfo: { uid, name, withImg },\n    });\n    if (withImg) {\n      Object.entries(pages).forEach(([pageId, page]) => {\n        const { image } = page;\n        if (!image) return;\n        const formData = new FormData();\n        formData.append(\"pageId\", pageId);\n        formData.append(\"file\", image);\n        axios({\n          method: \"POST\",\n          url: \"upload\",\n          data: formData,\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      });\n    }\n    if (data.statusCode === 201) {\n      return data.code as number;\n    } else {\n      return null;\n    }\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n}\n\nexport async function updatePages(\n  noteId: string,\n  pageRecord: Record<string, NotePage>\n) {\n  try {\n    const { data } = await axios.put(`pages/${noteId}`, {\n      userId: getUserId(),\n      pageRecord,\n    });\n    if (data.statusCode === 201) return true;\n    else return false;\n  } catch (e) {\n    console.error(e);\n    return false;\n  }\n}\n\nexport async function getTeamNote(noteId: string) {\n  try {\n    const { data } = await axios.get(`room/${noteId}`);\n    if (data.statusCode === 200) {\n      const { teamPages, code, noteInfo: info } = data;\n      const pages = await convertTeamPage(teamPages);\n      return { code, pages, info };\n    } else {\n      return null;\n    }\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n}\n","import React, {\n  KeyboardEvent,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport \"./digitInput.sass\";\n\nexport default function DigitInput({\n  value = 0,\n  digitNum = 4,\n  onChange = () => {},\n  onSubmit,\n}: {\n  value?: number;\n  digitNum?: number;\n  onChange?: (val: number) => void;\n  onSubmit: (val: number) => void;\n}) {\n  function num2digits(num: number): string[] {\n    if (num === 0) return new Array(digitNum).fill(\"\");\n    return String(num)\n      .slice(0, digitNum)\n      .padEnd(digitNum, \"x\")\n      .split(\"\")\n      .map((s) => (s === \"x\" ? \"\" : s));\n  }\n\n  const [nowFocused, setNowFocused] = useState(0);\n  const [digits, setDigits] = useState(num2digits(value));\n  useEffect(() => {\n    const newDigits = num2digits(value);\n    setDigits(newDigits);\n  }, [value]);\n\n  useEffect(() => {\n    const idx = digits.findIndex((d) => d === \"\");\n    setNowFocused(idx);\n    const newValue = Number(digits.join(\"\"));\n    if (newValue === value) return;\n    onChange(newValue);\n    if (idx === -1) {\n      onSubmit(newValue);\n    }\n  }, [digits]);\n\n  function focus() {\n    if (nowFocused === -1) {\n      inputRefs.current.forEach((el) => el.blur());\n    } else {\n      inputRefs.current[nowFocused].focus();\n    }\n  }\n\n  useEffect(() => {\n    focus();\n  }, [nowFocused]);\n\n  function handleChange(val: string, idx: number) {\n    if (!/^[0-9]$/.test(val)) return;\n    setDigits(prev => {\n      const newDigits = prev.slice();\n      newDigits[idx] = val;\n      return newDigits;\n    });\n  }\n\n  const inputRefs = useRef<HTMLInputElement[]>([]);\n  useEffect(() => {\n    inputRefs.current = inputRefs.current.slice(0, digitNum);\n  }, [digitNum]);\n\n  function handleKeyUp(e: KeyboardEvent<HTMLInputElement>) {\n    if (e.key === \"Backspace\") {\n      const idx = Math.max(0, nowFocused - 1);\n      setNowFocused(idx);\n      setDigits(prev => {\n        const newDigits = prev.slice();\n        newDigits[idx] = '';\n        return newDigits;\n      });\n    }\n  }\n\n  return (\n    <div className=\"digit-input\">\n      {digits.map((d, idx) => (\n        <input\n          key={idx}\n          ref={(el) => {\n            if (!el) return;\n            inputRefs.current[idx] = el;\n          }}\n          value={d}\n          pattern=\"\\d*\"\n          onChange={(e) => handleChange(e.target.value, idx)}\n          onKeyUp={handleKeyUp}\n        />\n      ))}\n      <div className=\"click-area\" onClick={focus}></div>\n    </div>\n  );\n}\n","import { Button, Input, Menu, message, Popover, Progress } from \"antd\";\nimport {\n  createContext,\n  Dispatch,\n  ReactNode,\n  SetStateAction,\n  useContext,\n  useState,\n} from \"react\";\nimport { createNewNote } from \"../../lib/note/archive\";\nimport { LoadPDF } from \"../../lib/note/pdfImage\";\nimport { MenuStateCtx, MenuStateUpdateCtx } from \"./MainMenu\";\nimport {\n  TeamOutlined,\n  CaretDownOutlined,\n  FilePdfOutlined,\n  UserOutlined,\n  ArrowLeftOutlined,\n  InboxOutlined,\n} from \"@ant-design/icons\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getNoteId } from \"../../lib/network/http\";\nimport DigitInput from \"../ui/DigitInput\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./right.sass\";\nimport Title from \"antd/lib/typography/Title\";\nimport Dragger from \"antd/lib/upload/Dragger\";\nimport { getUserName, setUserName } from \"../../lib/user\";\n\nconst OthersStateUpdateCtx = createContext({\n  setActive: (() => {}) as Dispatch<SetStateAction<string>>,\n});\n\nexport default function RightTools() {\n  return (\n    <div id=\"right-tools\">\n      <JoinTeamButton />\n      <OthersButton />\n    </div>\n  );\n}\n\nconst OthersMenu = () => {\n  const { setActive } = useContext(OthersStateUpdateCtx);\n  const { Item } = Menu;\n  return (\n    <Menu onClick={({ key }) => setActive(key)}>\n      <Item key=\"pdf\">\n        <FilePdfOutlined />\n        <span>Load PDF</span>\n      </Item>\n      <Item key=\"profile\">\n        <UserOutlined />\n        <span>My profile</span>\n      </Item>\n    </Menu>\n  );\n};\n\nconst SeconaryMenu = ({\n  children,\n  title,\n}: {\n  children: ReactNode;\n  title: string;\n}) => {\n  const { setActive } = useContext(OthersStateUpdateCtx);\n  return (\n    <div className=\"secondary\">\n      <div className=\"title\">\n        <Button\n          type=\"text\"\n          shape=\"circle\"\n          onClick={() => setActive(\"menu\")}\n          icon={<ArrowLeftOutlined />}\n        />\n        <Title level={5}>{title}</Title>\n      </div>\n      {children}\n    </div>\n  );\n};\n\nfunction UploadPdfPage() {\n  const [loading, setLoading] = useState(false);\n  const { tagUid } = useContext(MenuStateCtx);\n  const { setAllTags, setAllNotes } = useContext(MenuStateUpdateCtx);\n  const [percent, setPercent] = useState(0);\n\n  async function handleFile(file: File) {\n    if (file.type !== \"application/pdf\") return;\n    setLoading(true);\n    const note = await LoadPDF(file, setPercent);\n    note.tagId = tagUid;\n    const { tags, allNotes } = await createNewNote(note);\n    setAllTags(tags);\n    setAllNotes(allNotes);\n    setLoading(false);\n    message.success(\"PDF Loaded\");\n    return false;\n  }\n\n  return (\n    <SeconaryMenu title=\"Load PDF\">\n      <Dragger\n        disabled={loading}\n        multiple={false}\n        action=\"#\"\n        accept=\"application/pdf\"\n        beforeUpload={handleFile}\n      >\n        <p className=\"ant-upload-drag-icon\">\n          {loading ? (\n            <Progress width={48} type=\"circle\" percent={percent} />\n          ) : (\n            <InboxOutlined />\n          )}\n        </p>\n        <p className=\"ant-upload-hint\">Click or drag a pdf file here.</p>\n      </Dragger>\n    </SeconaryMenu>\n  );\n}\n\nconst ProfilePage = () => {\n  const userName = getUserName();\n  const [name, setName] = useState(userName);\n  const handleEnter = () => {\n    setUserName(name);\n  }\n  return (\n    <SeconaryMenu title=\"My profile\">\n      <div className=\"profile-page\">\n        <Input\n          prefix={<UserOutlined />}\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <Button onClick={handleEnter} type=\"primary\" block>Enter</Button>\n      </div>\n    </SeconaryMenu>\n  );\n};\n\nconst OthersPage = () => {\n  const [height, setHeight] = useState(100);\n  const [active, setActive] = useState(\"menu\");\n\n  const calcHeight = (el: HTMLElement) => {\n    setHeight(el.clientHeight);\n  };\n\n  const cssProps = {\n    timeout: 300,\n    onEnter: calcHeight,\n    unmountOnExit: true,\n  };\n\n  const cssProps2 = {\n    ...cssProps,\n    classNames: \"secondary\",\n  };\n  return (\n    <OthersStateUpdateCtx.Provider value={{ setActive }}>\n      <section className=\"others-menu\" style={{ height }}>\n        <CSSTransition\n          classNames=\"primary\"\n          in={active === \"menu\"}\n          {...cssProps}\n        >\n          <OthersMenu />\n        </CSSTransition>\n        <CSSTransition in={active === \"pdf\"} {...cssProps2}>\n          <UploadPdfPage />\n        </CSSTransition>\n        <CSSTransition in={active === \"profile\"} {...cssProps2}>\n          <ProfilePage />\n        </CSSTransition>\n      </section>\n    </OthersStateUpdateCtx.Provider>\n  );\n};\n\nconst OthersButton = () => {\n  return (\n    <Popover placement=\"bottomRight\" trigger=\"click\" content={<OthersPage />}>\n      <Button shape=\"circle\" icon={<CaretDownOutlined />} />\n    </Popover>\n  );\n};\n\nfunction JoinTeamButton() {\n  const [roomCode, setRoomCode] = useState(0);\n\n  const nav = useNavigate();\n  async function handleSubmit(code: number) {\n    const dismiss = message.loading(\"Loading team note...\", 0);\n    const noteId = await getNoteId(code);\n    dismiss();\n    if (!noteId) {\n      setRoomCode(0);\n      message.error(\"Room doesn't exist.\");\n    } else {\n      nav(`/team/${noteId}`);\n    }\n  }\n\n  return (\n    <Popover\n      placement=\"bottomRight\"\n      trigger=\"click\"\n      title=\"Join a team note\"\n      destroyTooltipOnHide\n      content={\n        <DigitInput\n          value={roomCode}\n          onChange={setRoomCode}\n          onSubmit={handleSubmit}\n        />\n      }\n    >\n      <Button shape=\"round\" icon={<TeamOutlined />}>\n        Team\n      </Button>\n    </Popover>\n  );\n}\n","import { Button } from \"antd\";\nimport { useContext } from \"react\";\nimport { MenuStateCtx, MenuStateUpdateCtx } from \"./MainMenu\";\n\nexport default function LeftTools() {\n  const { editing } = useContext(MenuStateCtx);\n  const { setEditing } = useContext(MenuStateUpdateCtx);\n\n  function swichEditing() {\n    setEditing((prev) => !prev);\n  }\n\n  return (\n    <div className=\"left-tools\">\n      <Button onClick={swichEditing} type={editing ? \"primary\" : \"text\"} block>\n        {editing ? \"Done\" : \"Edit\"}\n      </Button>\n    </div>\n  );\n}\n","import { Button, Input, Menu, Popconfirm, Popover, Select } from \"antd\";\nimport { useContext, useState } from \"react\";\nimport { deleteTag, editTag, NoteTag, storeTag } from \"../../lib/note/archive\";\nimport { colors } from \"../../lib/color\";\nimport { MenuStateCtx, MenuStateUpdateCtx } from \"./MainMenu\";\nimport {\n  MinusCircleOutlined,\n  CheckOutlined,\n  CloseOutlined,\n  SettingOutlined,\n  MenuOutlined,\n  ProfileOutlined,\n  TagOutlined,\n  PlusOutlined,\n} from \"@ant-design/icons\";\nimport Search from \"antd/lib/input/Search\";\n\nexport const TagCircle = ({ color }: { color: string }) => {\n  const style = { backgroundColor: color };\n  return <div className=\"tag-circle\" style={style} />;\n};\n\nfunction TagItem({ noteTag }: { noteTag: NoteTag }) {\n  const { uid, color, name, notes } = noteTag;\n  const { editing } = useContext(MenuStateCtx);\n  const { setTagUid, setAllTags } = useContext(MenuStateUpdateCtx);\n  const [tagEditing, setTagEditing] = useState(false);\n  const [tagName, setTagName] = useState(name);\n  const [tagColor, setTagColor] = useState(color);\n\n  function cancelEditing() {\n    setTagName(name);\n    setTagColor(color);\n    setTagEditing(false);\n  }\n\n  async function removeTag() {\n    const tags = await deleteTag(uid);\n    setTagUid(\"DEFAULT\");\n    setAllTags(tags);\n  }\n\n  async function finishEditing() {\n    const newTag: NoteTag = {\n      uid,\n      name: tagName,\n      color: tagColor,\n      notes: notes,\n    };\n\n    const newAllTags = await editTag(newTag);\n    setAllTags(newAllTags);\n    setTagEditing(false);\n  }\n\n  const colorSelector = (\n    <Select value={tagColor} onSelect={setTagColor}>\n      {colors.map((c) => (\n        <Select.Option value={c} key={c}>\n          <TagCircle color={c} />\n        </Select.Option>\n      ))}\n    </Select>\n  );\n\n  const TagNameInput = () => (\n    <Input\n      className=\"tag-name-input\"\n      addonBefore={colorSelector}\n      value={tagName}\n      onChange={(e) => setTagName(e.target.value)}\n    />\n  );\n\n  return (\n    <div className=\"menu-item\">\n      {editing && tagEditing ? (\n        <>\n          <Popconfirm\n            title=\"Delete this tag?\"\n            onConfirm={removeTag}\n            placement=\"left\"\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <Button\n              type=\"text\"\n              danger\n              size=\"small\"\n              icon={<MinusCircleOutlined />}\n            />\n          </Popconfirm>\n          <TagNameInput />\n        </>\n      ) : (\n        <>\n          <TagCircle color={tagColor} />\n          <span className=\"tag-name\">{tagName}</span>\n        </>\n      )}\n      {editing && tagEditing && (\n        <>\n          <Button\n            disabled={tagName === \"\"}\n            size=\"small\"\n            type=\"link\"\n            onClick={finishEditing}\n            icon={<CheckOutlined />}\n          />\n          <Button\n            size=\"small\"\n            type=\"text\"\n            onClick={cancelEditing}\n            icon={<CloseOutlined />}\n          />\n        </>\n      )}\n      {editing && !tagEditing && (\n        <Button\n          size=\"small\"\n          type=\"text\"\n          onClick={() => setTagEditing(true)}\n          icon={<SettingOutlined />}\n        />\n      )}\n    </div>\n  );\n}\n\nconst AddTag = () => {\n  const { setAllTags } = useContext(MenuStateUpdateCtx);\n\n  async function addTag(val: string) {\n    const name = val.trim();\n    if (!name) {\n      return;\n    } else {\n      const tags = await storeTag(name);\n      setAllTags(tags);\n    }\n  }\n\n  const popContent = (\n    <Search\n      placeholder=\"Tag name...\"\n      onSearch={addTag}\n      allowClear\n      enterButton={<PlusOutlined />}\n    />\n  );\n\n  return (\n    <div id=\"add-tag\">\n      <Popover\n        content={popContent}\n        trigger=\"click\"\n        placement=\"topLeft\"\n        destroyTooltipOnHide\n      >\n        <Button shape=\"circle\" type=\"text\" icon={<TagOutlined />} />\n      </Popover>\n    </div>\n  );\n};\n\nexport default function SideMenu() {\n  const { allTags } = useContext(MenuStateCtx);\n  const { setTagUid } = useContext(MenuStateUpdateCtx);\n\n  function menuClicked({ key }: { key: string }) {\n    setTagUid(key);\n  }\n\n  const { Item } = Menu;\n\n  return (\n    <aside>\n      <label htmlFor=\"aside-checkbox\" id=\"aside-label\">\n        <MenuOutlined />\n      </label>\n      <input type=\"checkbox\" id=\"aside-checkbox\" />\n      <div id=\"side-wrapper\">\n        <Menu\n          onClick={menuClicked}\n          id=\"side-menu\"\n          defaultSelectedKeys={[\"DEFAULT\"]}\n          defaultOpenKeys={[\"sub1\"]}\n          mode=\"inline\"\n        >\n          <Item key=\"DEFAULT\">\n            <div className=\"menu-item\">\n              <ProfileOutlined id=\"all-note-icon\" />\n              <span className=\"tag-name\">All Notes</span>\n            </div>\n          </Item>\n          {Object.values(allTags).map((tag) => (\n            <Item key={tag.uid}>\n              <TagItem noteTag={tag} />\n            </Item>\n          ))}\n        </Menu>\n        <footer>\n          <AddTag />\n        </footer>\n      </div>\n    </aside>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/default.dd551273.png\";","import { Button, Input, Popconfirm, Tag, Dropdown, Menu } from \"antd\";\nimport { useContext, useEffect, useMemo, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteNote, editNoteData, moveNoteTag } from \"../../lib/note/archive\";\nimport { NoteInfo } from \"../../lib/note/note\";\nimport { MenuStateCtx, MenuStateUpdateCtx } from \"./MainMenu\";\nimport {\n  CloudOutlined,\n  DeleteOutlined,\n  TagsOutlined,\n  CloseOutlined,\n} from \"@ant-design/icons\";\nimport { TagCircle } from \"./SideMenu\";\nimport dafaultImg from \"../ui/default.png\";\n\nexport default function NoteList({ noteList }: { noteList: NoteInfo[] }) {\n  return (\n    <div id=\"note-list\">\n      {noteList.map((noteInfo) => (\n        <NoteItem key={noteInfo.uid} noteInfo={noteInfo} />\n      ))}\n    </div>\n  );\n}\n\nconst NoteItem = ({ noteInfo }: { noteInfo: NoteInfo }) => {\n  const { editing, allTags } = useContext(MenuStateCtx);\n  const { team, uid, name, thumbnail } = noteInfo;\n  const href = editing ? \"#\" : `${team ? \"team\" : \"reader\"}/${uid}`;\n  const { setAllTags, setAllNotes } = useContext(MenuStateUpdateCtx);\n  const [noteName, setNoteName] = useState(name);\n  const [imgLoaded, setImgLoaded] = useState(false);\n\n  async function removeNote() {\n    const { tags, allNotes } = await deleteNote(uid);\n    setAllTags(tags);\n    setAllNotes(allNotes);\n  }\n\n  const url = useMemo(\n    () => (thumbnail ? URL.createObjectURL(thumbnail) : null),\n    [thumbnail]\n  );\n\n  useEffect(() => {\n    const prevUrl = url || \"\";\n    return () => URL.revokeObjectURL(prevUrl);\n  }, [url]);\n\n  const saveNoteName = () => {\n    editNoteData(uid, { name: noteName });\n    setAllNotes((prev) => ({\n      ...prev,\n      [uid]: { ...prev[uid], name: noteName },\n    }));\n  };\n\n  const move = async ({ key }: { key: string }) => {\n    const { tags, allNotes } = await moveNoteTag(uid, key);\n    setAllTags(tags);\n    setAllNotes(allNotes);\n  };\n\n  const TagButton = () => {\n    const { Item } = Menu;\n    const overlay = (\n      <Menu onClick={move}>\n        <Item key=\"DEFAULT\">\n          <div className=\"tag-select\">\n            <CloseOutlined className=\"none-tag-icon\" />\n            <span>None Tag</span>\n          </div>\n        </Item>\n        {Object.values(allTags).map((t) => (\n          <Item key={t.uid}>\n            <div className=\"tag-select\">\n              <TagCircle color={t.color} />\n              <span>{t.name}</span>\n            </div>\n          </Item>\n        ))}\n      </Menu>\n    );\n    return (\n      <Dropdown overlay={overlay} trigger={[\"click\"]}>\n        <Button className=\"note-delete\" type=\"text\" icon={<TagsOutlined />} />\n      </Dropdown>\n    );\n  };\n\n  const DeleteButton = () => (\n    <Popconfirm\n      title=\"Delete this note?\"\n      onConfirm={removeNote}\n      okText=\"Yes\"\n      cancelText=\"No\"\n    >\n      <Button\n        className=\"note-delete\"\n        type=\"text\"\n        danger\n        icon={<DeleteOutlined />}\n      />\n    </Popconfirm>\n  );\n\n  return (\n    <Link to={href}>\n      <div className=\"list-item\">\n        <div className=\"thumbnail-wrapper\">\n          <img\n            src={url || dafaultImg}\n            alt={name}\n            className={`thumbnail${imgLoaded ? \" loaded\" : \"\"}`}\n            onLoad={() => setImgLoaded(true)}\n          />\n          {team && (\n            <Tag color=\"blue\" className=\"cloud-icon\">\n              <CloudOutlined />\n            </Tag>\n          )}\n        </div>\n        {editing || <p className=\"note-name\">{name}</p>}\n        {editing && (\n          <>\n            <Input\n              className=\"note-name-input\"\n              value={noteName}\n              onChange={(e) => setNoteName(e.target.value)}\n              onBlur={saveNoteName}\n            />\n            <TagButton />\n            <DeleteButton />\n          </>\n        )}\n      </div>\n    </Link>\n  );\n};\n","import React, {\n  createContext,\n  Dispatch,\n  SetStateAction,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport \"./menu.sass\";\nimport { createEmptyNote, NoteInfo } from \"../../lib/note/note\";\nimport {\n  createNewNote,\n  getAllNotes,\n  getAllTags,\n  NoteTag,\n} from \"../../lib/note/archive\";\nimport RightTools from \"./RightTools\";\nimport LeftTools from \"./LeftTools\";\nimport SideMenu from \"./SideMenu\";\nimport NoteList from \"./NoteList\";\nimport Title from \"antd/lib/typography/Title\";\nimport { Button } from \"antd\";\nimport { FormOutlined } from \"@ant-design/icons\";\n\nexport const MenuStateCtx = createContext({\n  tagUid: \"DEFAULT\",\n  editing: false,\n  allNotes: {} as Record<string, NoteInfo>,\n  allTags: {} as Record<string, NoteTag>,\n});\n\nexport const MenuStateUpdateCtx = createContext({\n  setAllNotes: (() => {}) as Dispatch<SetStateAction<Record<string, NoteInfo>>>,\n  setAllTags: (() => {}) as Dispatch<SetStateAction<Record<string, NoteTag>>>,\n  setTagUid: (() => {}) as Dispatch<SetStateAction<string>>,\n  setEditing: (() => {}) as Dispatch<SetStateAction<boolean>>,\n});\n\nexport default function MainMenu() {\n  const [allNotes, setAllNotes] = useState<Record<string, NoteInfo>>({});\n  const [allTags, setAllTags] = useState<Record<string, NoteTag>>({});\n  const [tagUid, setTagUid] = useState(\"DEFAULT\");\n  const [editing, setEditing] = useState(false);\n\n  const selectedTag = useMemo<NoteTag>(() => {\n    if (tagUid === \"DEFAULT\") {\n      return {\n        uid: \"\",\n        name: \"All Notes\",\n        color: \"#000000\",\n        notes: Object.keys(allNotes),\n      };\n    } else {\n      return allTags[tagUid];\n    }\n  }, [tagUid, allTags, allNotes]);\n\n  const noteList = useMemo<NoteInfo[]>(\n    () =>\n      selectedTag.notes\n        .filter((uid) => uid in allNotes)\n        .map((uid) => allNotes[uid]),\n    [selectedTag, allNotes]\n  );\n\n  useEffect(() => {\n    getAllNotes().then(setAllNotes);\n    getAllTags().then(setAllTags);\n    document.title = 'Multibility';\n  }, []);\n\n  return (\n    <MenuStateCtx.Provider value={{ tagUid, editing, allNotes, allTags }}>\n      <MenuStateUpdateCtx.Provider\n        value={{ setAllNotes, setAllTags, setEditing, setTagUid }}\n      >\n        <div id=\"menu-container\">\n          <header>\n            <LeftTools />\n            <Title level={4}>{selectedTag.name}</Title>\n            <RightTools />\n          </header>\n          <main>\n            <SideMenu />\n            <NoteList noteList={noteList} />\n            <NewNoteButton />\n          </main>\n        </div>\n      </MenuStateUpdateCtx.Provider>\n    </MenuStateCtx.Provider>\n  );\n}\n\nexport const NewNoteButton = () => {\n  const { tagUid } = useContext(MenuStateCtx);\n  const { setAllTags, setAllNotes } = useContext(MenuStateUpdateCtx);\n\n  async function addNewNote() {\n    const note = createEmptyNote();\n    note.tagId = tagUid;\n    const { tags, allNotes } = await createNewNote(note);\n    setAllTags(tags);\n    setAllNotes(allNotes);\n  }\n\n  return (\n    <Button\n      id=\"new-note\"\n      size=\"large\"\n      type=\"primary\"\n      shape=\"circle\"\n      onClick={addNewNote}\n      icon={<FormOutlined />}\n    />\n  );\n};\n","import React, { TouchEvent, useEffect, useRef, useState } from \"react\";\nimport { DrawState, SetDrawState } from \"../../lib/draw/DrawState\";\nimport { isStylus } from \"../../lib/touch/touch\";\nimport { Set } from \"immutable\";\nimport paper from \"paper\";\nimport './draw.css'\n\nexport interface DrawCtrl {\n  erasing: boolean;\n  finger: boolean;\n  even: boolean;\n  lineWidth: number;\n  color: string;\n}\n\nexport default function Draw({\n  drawState,\n  onChange = () => {},\n  erasing = false,\n  finger = false,\n  lineWidth = 10,\n  color = \"#000000\",\n}: {\n  drawState: DrawState;\n  onChange?: SetDrawState;\n  erasing?: boolean;\n  finger?: boolean;\n  lineWidth?: number;\n  color?: string;\n}) {\n  const { width, height } = drawState;\n  const canvasEl = useRef<HTMLCanvasElement>(null);\n  const scope = useRef(new paper.PaperScope());\n  const group = useRef<paper.Group>();\n  const ratio = useRef(1);\n  const path = useRef<paper.Path>();\n  const [erased, setErased] = useState(Set<string>());\n  if (erasing) {\n    lineWidth = 10;\n    color = \"#eee\";\n  }\n\n  const isEventValid = (e: TouchEvent<HTMLCanvasElement>) => {\n    return finger || isStylus(e);\n  };\n\n  const updateRatio = () => {\n    const clientWidth = canvasEl.current?.clientWidth;\n    if (!clientWidth) return;\n    ratio.current = width / clientWidth;\n  };\n\n  const setupPaper = () => {\n    if (!canvasEl.current) return;\n    scope.current.setup(canvasEl.current);\n    scope.current.view.viewSize.width = width;\n    scope.current.view.viewSize.height = height;\n  };\n\n  const handleDown = () => {\n    scope.current.activate();\n    path.current = new scope.current.Path();\n    path.current.strokeColor = new paper.Color(color);\n    path.current.strokeWidth = lineWidth;\n    path.current.strokeCap = \"round\";\n    updateRatio();\n  };\n\n  const handleDrag = (e: paper.MouseEvent) => {\n    if (!path.current) return;\n    path.current.add(e.point.multiply(ratio.current));\n    path.current.smooth();\n\n    if (!erasing) return;\n    group.current?.children.forEach((p) => {\n      if (!(p instanceof paper.Path)) return;\n      if (path.current?.intersects(p)) {\n        setErased((prev) => prev.add(p.name));\n      }\n    });\n  };\n\n  const handleUp = erasing\n    ? () => {\n        if (!path.current) return;\n        onChange((prev) => DrawState.eraseStrokes(prev, erased.toArray()));\n        setErased(Set());\n      }\n    : () => {\n        if (!path.current) return;\n        path.current.simplify();\n        const { pathData } = path.current;\n        onChange((prev) =>\n          DrawState.addStroke(prev, pathData, lineWidth, color)\n        );\n      };\n\n  const handlePaper = () => {\n    scope.current.view.onMouseDown = handleDown;\n    scope.current.view.onMouseDrag = handleDrag;\n    scope.current.view.onMouseUp = handleUp;\n  };\n\n  const preventTouch = (e: TouchEvent<HTMLCanvasElement>) => {\n    if (!isEventValid(e)) e.stopPropagation();\n  };\n\n  useEffect(() => {\n    setupPaper();\n  }, []);\n\n  useEffect(() => {\n    path.current?.remove()\n  }, [drawState]);\n\n  useEffect(() => {\n    handlePaper();\n  });\n\n  useEffect(() => {\n    scope.current.activate();\n    group.current = new scope.current.Group();\n\n    drawState.getValidStrokes().forEach((stroke) => {\n      let { pathData, lineWidth, color, uid } = stroke;\n      if (erased.has(uid)) color += \"55\";\n      const path = new paper.Path(pathData);\n      path.strokeWidth = lineWidth;\n      path.strokeCap = \"round\";\n      path.strokeColor = new paper.Color(color);\n      path.name = uid;\n      group.current?.addChild(path);\n    });\n\n    return () => void group.current?.removeChildren();\n  }, [drawState, erased]);\n\n  return (\n    <canvas\n      data-paper-hidpi={false}\n      className=\"draw-canvas\"\n      ref={canvasEl}\n      onTouchStartCapture={preventTouch}\n      onTouchMoveCapture={preventTouch}\n    />\n  );\n}\n","import { TouchEvent } from \"react\";\n\nexport type iOSTouch = Touch & {\n  force?: number;\n  touchType?: \"stylus\" | \"direct\";\n};\n\nexport function isStylus(e: TouchEvent<HTMLCanvasElement> | globalThis.TouchEvent) {\n  const touch = e.touches[0] as iOSTouch;\n  return touch?.touchType === \"stylus\";\n}\n","import { List, OrderedMap, Record as Rec } from \"immutable\";\nimport { NotePage } from \"../note/note\";\nimport { DrawState, Operation, Stroke } from \"./DrawState\";\n\ninterface StateSetRecordType {\n  states: OrderedMap<string, DrawState>;\n  keys: List<string>;\n  editStack: List<string>;\n  undoStack: List<string>;\n}\n\nexport type SetOperation = Operation & { pageId: string };\n\ntype StateSetRecord = Rec<StateSetRecordType>;\n\nconst defaultRecord: Readonly<StateSetRecordType> = {\n  states: OrderedMap(),\n  keys: List(),\n  editStack: List(),\n  undoStack: List(),\n};\n\nconst defaultFactory = Rec(defaultRecord);\n\nexport class StateSet {\n  constructor(\n    private immutable: StateSetRecord,\n    public lastOp?: SetOperation\n  ) {}\n\n  static createEmpty() {\n    return new StateSet(defaultFactory());\n  }\n\n  static createKeyed(keys: string[]) {\n    return new StateSet(defaultFactory().set(\"keys\", List(keys)));\n  }\n\n  static createFromList(list: [string, DrawState][]) {\n    return new StateSet(\n      defaultFactory()\n        .set(\"keys\", List(list.map((item) => item[0])))\n        .set(\"states\", OrderedMap(list))\n    );\n  }\n\n  static createFromPages(pageRecord: Record<string, NotePage>, width: number) {\n    const entries = Object.entries(pageRecord);\n    return StateSet.createFromList(\n      entries.map(([key, { state, ratio }]) => [\n        key,\n        DrawState.loadFromFlat(state, width, width * ratio),\n      ])\n    );\n  }\n\n  getImmutable() {\n    return this.immutable;\n  }\n\n  getStates() {\n    return this.getImmutable().get(\"states\");\n  }\n\n  getKeys() {\n    return this.getImmutable().get(\"keys\");\n  }\n\n  getEditStack() {\n    return this.getImmutable().get(\"editStack\");\n  }\n\n  getUndoStack() {\n    return this.getImmutable().get(\"undoStack\");\n  }\n\n  setState(pageId: string, drawState: DrawState) {\n    let newImmu = this.getImmutable().update(\"states\", (s) =>\n      s.set(pageId, drawState)\n    );\n\n    if (this.getStates().has(pageId)) {\n      newImmu = newImmu.update(\"editStack\", (s) => s.push(pageId));\n    }\n\n    let lastOp: SetOperation | undefined;\n    if (drawState.lastOp) {\n      lastOp = { ...drawState.lastOp, pageId };\n    }\n    return new StateSet(newImmu, lastOp);\n  }\n\n  getOneState(pageId: string) {\n    return this.getImmutable().get(\"states\").get(pageId);\n  }\n\n  isUndoable() {\n    return this.getEditStack().size > 0;\n  }\n\n  isRedoable() {\n    return this.getUndoStack().size > 0;\n  }\n\n  undo() {\n    if (!this.isUndoable()) return this;\n    const lastUid = this.getImmutable().get(\"editStack\").last();\n    if (!lastUid) return this;\n\n    const prevDS = this.getImmutable().get(\"states\").get(lastUid);\n    if (!prevDS) return this;\n\n    const newDS = DrawState.undo(prevDS);\n    const lastOp = newDS.lastOp;\n    let lastSetOp: SetOperation | undefined;\n    if (lastOp) lastSetOp = { pageId: lastUid, ...lastOp };\n\n    return new StateSet(\n      this.getImmutable()\n        .update(\"editStack\", (s) => s.pop())\n        .update(\"undoStack\", (s) => s.push(lastUid))\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\n      lastSetOp\n    );\n  }\n\n  redo() {\n    if (this.isRedoable()) {\n      const lastUid = this.getImmutable().get(\"undoStack\").last();\n      if (!lastUid) return this;\n\n      const prevDS = this.getImmutable().get(\"states\").get(lastUid);\n      if (!prevDS) return this;\n\n      const newDS = DrawState.redo(prevDS);\n      const lastOp = newDS.lastOp;\n      let lastSetOp: SetOperation | undefined;\n      if (lastOp) lastSetOp = { pageId: lastUid, ...lastOp };\n\n      return new StateSet(\n        this.getImmutable()\n          .update(\"undoStack\", (s) => s.pop())\n          .update(\"editStack\", (s) => s.push(lastUid))\n          .update(\"states\", (s) => s.set(lastUid, newDS)),\n        lastSetOp\n      );\n    } else {\n      return this;\n    }\n  }\n\n  pushStroke(pageId: string, stroke: Stroke) {\n    const prevDs = this.getImmutable().get(\"states\").get(pageId);\n    if (!prevDs) return this;\n    const ds = DrawState.pushStroke(prevDs, stroke);\n    return this.setState(pageId, ds);\n  }\n\n  pushOperation(SetOp: SetOperation) {\n    const { type, pageId } = SetOp;\n    const prevDs = this.getImmutable().get(\"states\").get(pageId);\n    if (!prevDs) return this;\n\n    let ds: DrawState;\n    switch (type) {\n      case 'add':\n        ds = DrawState.pushStroke(prevDs, SetOp.stroke);\n        break;\n      case 'erase':\n        ds = DrawState.pushErase(prevDs, SetOp.erase);\n        break;\n      case 'undo':\n        ds = DrawState.pushUndo(prevDs, SetOp.undoUid);\n        break;\n      case 'redo':\n        ds = DrawState.pushRedo(prevDs, SetOp.redoUid);\n        break;\n    }\n\n    return this.setState(pageId, ds);\n  }\n}\n","import { message } from \"antd\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { SetOperation, StateSet } from \"../../lib/draw/StateSet\";\nimport { getTeamNote } from \"../../lib/network/http\";\nimport { IoFactory } from \"../../lib/network/io\";\nimport Reader, { WIDTH } from \"./Reader\";\nimport { getUserId, UserInfo } from \"../../lib/user\";\nimport {\n  LoginOutlined,\n  LogoutOutlined,\n} from \"@ant-design/icons\";\n\nexport const TeamStateCtx = createContext({\n  code: -2,\n  userList: [] as UserInfo[],\n});\n\nexport default function Team() {\n  const noteId = useParams().noteId ?? \"\";\n  const [teamStateSet, setTeamStateSet] = useState<StateSet>();\n  const [code, setCode] = useState(-2);\n  const [userList, setUserList] = useState<UserInfo[]>([]);\n  const [ws] = useState(IoFactory(noteId));\n  const nav = useNavigate();\n\n  async function loadTeamPages() {\n    const res = await getTeamNote(noteId);\n    if (!res) {\n      message.error(\"Failed loading the team note\");\n      return nav(\"/\");\n    }\n    const { code, pages } = res;\n    setCode(code);\n    setTeamStateSet(StateSet.createFromPages(pages, WIDTH));\n  }\n\n  const roomInit = async () => {\n    await loadTeamPages();\n    ws.on(\"push\", ({ operation }) => {\n      setTeamStateSet((prev) => prev?.pushOperation(operation));\n    });\n\n    ws.on(\"joined\", ({ joined, members }) => {\n      const { userId, userName } = joined;\n      setUserList(members);\n      if (userId === getUserId()) return;\n      message.success({\n        icon: <LoginOutlined />,\n        content: userName + \" joined room\",\n      });\n    });\n\n    ws.on(\"leaved\", ({ leaved, members }) => {\n      const { userId, userName } = leaved;\n      setUserList(members);\n      if (userId === getUserId()) return;\n      message.warning({\n        icon: <LogoutOutlined />,\n        content: userName + \" leaved room\",\n      });\n    });\n\n    ws.connect();\n  };\n\n  const roomDestroy = () => {\n    ws.off(\"connect\");\n    ws.off(\"push\");\n    ws.off(\"joined\");\n    ws.off(\"leaved\");\n    ws.disconnect();\n  };\n\n  useEffect(() => {\n    roomInit();\n    return roomDestroy;\n  }, [noteId]);\n\n  const pushOperation = (op: SetOperation) => {\n    ws.emit(\"push\", { operation: op });\n  };\n\n  return (\n    <TeamStateCtx.Provider value={{ code, userList }}>\n      <Reader\n        teamOn={true}\n        teamStateSet={teamStateSet}\n        pushOperation={pushOperation}\n      />\n    </TeamStateCtx.Provider>\n  );\n}\n","import { io } from \"socket.io-client\";\nimport { getUserId, getUserName } from \"../user\";\nimport { BASE_URL } from \"./http\";\n\nexport const IoFactory = (noteId: string) => {\n  return () =>\n    io(BASE_URL, {\n      autoConnect: false,\n      query: {\n        userId: getUserId(),\n        userName: getUserName(),\n        noteId,\n      },\n    });\n};\n","import React, { useEffect, useState } from \"react\";\nimport \"./digitDisplay.sass\";\n\nfunction num2digits(num: number): number[] {\n  return String(num)\n    .padStart(4, \"0\")\n    .split(\"\")\n    .map((s) => Number(s));\n}\n\nexport default function DigitDisplay({ value }: { value: number }) {\n  const [randomNum, setRandomNum] = useState(9999);\n  const displayNum = value >= 0 ? value : randomNum;\n  const digits = num2digits(displayNum);\n\n  function resetRandom() {\n    setRandomNum(Math.floor(Math.random() * 10000));\n  }\n  useEffect(() => {\n    if (value !== -1) return setRandomNum(9999);\n    const timer = setTimeout(resetRandom, 100);\n    return () => clearTimeout(timer);\n  }, [value]);\n\n  return (\n    <div className={`digit-display ${value === -2 ? \"disabled\" : \"\"}`}>\n      {digits.map((d, idx) => (\n        <Digit key={idx} digit={d} />\n      ))}\n    </div>\n  );\n}\n\nfunction Digit({ digit }: { digit: number }) {\n  if (!(digit <= 9 && digit >= 0)) {\n    return <div className=\"digit\">*</div>;\n  }\n  return <div className=\"digit\">{digit}</div>;\n}\n","import { Avatar, Button, Divider, Popconfirm, Popover, Slider } from \"antd\";\nimport React, { Dispatch, SetStateAction, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { DrawCtrl } from \"../draw/Draw\";\nimport { DrawCtrlCtx, ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\nimport {\n  LeftOutlined,\n  UndoOutlined,\n  RedoOutlined,\n  HighlightOutlined,\n  SaveOutlined,\n  TeamOutlined,\n  createFromIconfontCN,\n} from \"@ant-design/icons\";\nimport \"./drawTools.sass\";\nimport { TeamStateCtx } from \"./Team\";\nimport DigitDisplay from \"../ui/DigitDisplay\";\nimport { colors, getRandomColor } from \"../../lib/color\";\nimport { UserInfo } from \"../../lib/user\";\nconst IconFont = createFromIconfontCN({\n  scriptUrl: \"//at.alicdn.com/t/font_3181679_dsms7mr75hd.js\",\n});\n\nexport default function DrawTools({\n  setDrawCtrl,\n  handleUndo,\n  handleRedo,\n  instantSave,\n}: {\n  setDrawCtrl: Dispatch<SetStateAction<DrawCtrl>>;\n  handleUndo: () => void;\n  handleRedo: () => void;\n  instantSave: () => void;\n}) {\n  const { erasing, finger } = useContext(DrawCtrlCtx);\n  const { saved, stateSet, teamOn } = useContext(ReaderStateCtx);\n  const nav = useNavigate();\n\n  const updateDrawCtrl = (updated: Partial<DrawCtrl>) => {\n    setDrawCtrl((prev) => ({ ...prev, ...updated }));\n  };\n\n  return (\n    <div className=\"tool-bar\">\n      <div className=\"left-buttons\">\n        <Button type=\"text\" onClick={() => nav(\"/\")} icon={<LeftOutlined />}>\n          Back\n        </Button>\n        <Button\n          type=\"text\"\n          onClick={instantSave}\n          disabled={saved}\n          icon={<SaveOutlined />}\n        />\n      </div>\n      <div className=\"middle-buttons\">\n        <Button\n          type=\"text\"\n          icon={<UndoOutlined />}\n          onClick={handleUndo}\n          disabled={!stateSet?.isUndoable()}\n        />\n        <Button\n          className=\"redo-button\"\n          type=\"text\"\n          icon={<RedoOutlined />}\n          onClick={handleRedo}\n          disabled={!stateSet?.isRedoable()}\n        />\n        <PenButton erasing={erasing} updateDrawCtrl={updateDrawCtrl} />\n        <Button\n          type={erasing ? \"default\" : \"text\"}\n          shape=\"circle\"\n          onClick={() => updateDrawCtrl({ erasing: true })}\n          icon={<IconFont type=\"icon-eraser\" />}\n        />\n        <Button\n          type={finger ? \"primary\" : \"text\"}\n          ghost={finger}\n          shape=\"circle\"\n          onClick={() => updateDrawCtrl({ finger: !finger })}\n          icon={<IconFont type=\"icon-finger\" />}\n        />\n      </div>\n      <div className=\"right-buttons\">\n        {teamOn && <RoomInfo />}\n        {teamOn || <JoinRoom />}\n      </div>\n    </div>\n  );\n}\n\nconst PenButton = React.memo(\n  ({\n    erasing,\n    updateDrawCtrl,\n  }: {\n    erasing: boolean;\n    updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\n  }) => {\n    return erasing ? (\n      <Button\n        type=\"text\"\n        shape=\"circle\"\n        onClick={() => updateDrawCtrl({ erasing: false })}\n        icon={<HighlightOutlined />}\n      />\n    ) : (\n      <Popover\n        content={<PenPanel updateDrawCtrl={updateDrawCtrl} />}\n        trigger=\"click\"\n        placement=\"bottom\"\n        getPopupContainer={(e) => {\n          return e.parentElement?.parentElement || e;\n        }}\n      >\n        <Button type=\"default\" shape=\"circle\" icon={<HighlightOutlined />} />\n      </Popover>\n    );\n  }\n);\n\nconst PenPanel = ({\n  updateDrawCtrl,\n}: {\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\n}) => {\n  const { lineWidth } = useContext(DrawCtrlCtx);\n\n  return (\n    <div className=\"pen-panel\">\n      <Slider\n        min={5}\n        max={50}\n        value={lineWidth}\n        onChange={(lineWidth) => updateDrawCtrl({ lineWidth })}\n      />\n      <ColorSelect updateDrawCtrl={updateDrawCtrl} />\n    </div>\n  );\n};\n\nconst ColorSelect = ({\n  updateDrawCtrl,\n}: {\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\n}) => {\n  const { color } = useContext(DrawCtrlCtx);\n\n  return (\n    <div className=\"color-select\">\n      {colors.map((c) => (\n        <input\n          key={c}\n          checked={color === c}\n          type=\"radio\"\n          name=\"color\"\n          onChange={() => updateDrawCtrl({ color: c })}\n          style={{ borderColor: c, backgroundColor: c }}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst UserCard = ({ userInfo }: { userInfo: UserInfo }) => {\n  const { userName } = userInfo;\n  return (\n    <div className=\"user-card\">\n      <Avatar\n        className=\"avatar\"\n        size=\"small\"\n        style={{ backgroundColor: getRandomColor() }}\n      >\n        {userName.slice(0, 4)}\n      </Avatar>\n      <span>{userName}</span>\n    </div>\n  );\n};\n\nfunction RoomInfo() {\n  const { code, userList } = useContext(TeamStateCtx);\n\n  const content = (\n    <div className=\"team-popover\">\n      <DigitDisplay value={code} />\n      <Divider />\n      <div className=\"user-list\">\n        {userList.map((u) => (\n          <UserCard key={u.userId} userInfo={u} />\n        ))}\n      </div>\n    </div>\n  );\n\n  return (\n    <Popover\n      content={content}\n      trigger=\"click\"\n      placement=\"bottomRight\"\n      title=\"Team info\"\n      defaultVisible\n      getPopupContainer={(e) => {\n        return e.parentElement?.parentElement || e;\n      }}\n    >\n      <Button shape=\"round\" icon={<TeamOutlined />}>\n        Team\n      </Button>\n    </Popover>\n  );\n}\n\nconst JoinRoom = () => {\n  const { createRoom } = useContext(ReaderMethodCtx);\n  return (\n    <Popconfirm\n      placement=\"bottomRight\"\n      title=\"Enable team editing?\"\n      onConfirm={createRoom}\n      okText=\"Yes\"\n      cancelText=\"No\"\n    >\n      <Button shape=\"round\" icon={<TeamOutlined />}>\n        Team\n      </Button>\n    </Popconfirm>\n  );\n};\n","import { message } from \"antd\";\nimport React, {\n  createContext,\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport Draw, { DrawCtrl } from \"../draw/Draw\";\nimport { DrawState } from \"../../lib/draw/DrawState\";\nimport { Note, NotePage } from \"../../lib/note/note\";\nimport { SetOperation, StateSet } from \"../../lib/draw/StateSet\";\nimport { loadNote, editNoteData } from \"../../lib/note/archive\";\nimport { debounce } from \"lodash\";\nimport { putNote, updatePages } from \"../../lib/network/http\";\nimport { useBeforeunload } from \"react-beforeunload\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport DrawTools from \"./DrawTools\";\nimport dafaultImg from \"../ui/default.png\";\nimport \"./reader.sass\";\nexport const WIDTH = 2000;\n\nconst defaultDrawCtrl: DrawCtrl = {\n  erasing: false,\n  finger: false,\n  even: true,\n  lineWidth: 10,\n  color: \"#000000\",\n};\nexport const DrawCtrlCtx = createContext(defaultDrawCtrl);\nexport const ReaderStateCtx = createContext({\n  noteId: \"\",\n  stateSet: undefined as StateSet | undefined,\n  saved: true,\n  teamOn: false,\n});\nexport const ReaderMethodCtx = createContext({\n  setSaved: (() => {}) as Dispatch<SetStateAction<boolean>>,\n  createRoom: () => {},\n});\n\nexport default function Reader({\n  teamOn,\n  teamStateSet,\n  pushOperation,\n}: {\n  teamOn: boolean;\n  teamStateSet?: StateSet;\n  pushOperation?: (op: SetOperation) => void;\n}) {\n  const noteId = useParams().noteId ?? \"\";\n  const nav = useNavigate();\n\n  const [pageRecord, setPageRecord] = useState<Record<string, NotePage>>();\n  const [note, setNote] = useState<Note>();\n  const [stateSet, setStateSet] = useState<StateSet>();\n  const [drawCtrl, setDrawCtrl] = useState(defaultDrawCtrl);\n  const [saved, setSaved] = useState(true);\n\n  const loadNotePages = async () => {\n    const storedNote = await loadNote(noteId);\n    if (!storedNote) {\n      message.error(\"Note not found\");\n      return nav(\"/\");\n    }\n    const { pages } = storedNote;\n    setPageRecord(pages);\n    setNote(storedNote);\n    setStateSet(StateSet.createFromPages(pages, WIDTH));\n    if (teamOn) updatePages(noteId, pages);\n  };\n\n  const debouncedSave = useCallback(\n    debounce(async (pr: Record<string, NotePage>) => {\n      await editNoteData(noteId, { pages: pr });\n      setSaved(true);\n    }, 1000),\n    []\n  );\n  const instantSave = debouncedSave.flush;\n\n  const createRoom = async () => {\n    if (!note || !pageRecord) return;\n    const resCode = await putNote(noteId, note, pageRecord);\n    if (!resCode) {\n      message.error(\"Can't create room.\");\n      return;\n    }\n    await editNoteData(noteId, { team: true });\n    nav(\"/team/\" + noteId);\n  };\n\n  const noteInit = () => {\n    loadNotePages();\n  };\n\n  const noteDestroy = () => {\n    instantSave();\n  };\n\n  useEffect(() => {\n    noteInit();\n    return noteDestroy;\n  }, [noteId, teamOn]);\n\n  useEffect(() => {\n    if (!note) return;\n    document.title = note.name;\n  }, [note]);\n\n  useBeforeunload(noteDestroy);\n\n  useEffect(() => {\n    if (!stateSet?.lastOp || !pushOperation) return;\n    console.log(stateSet.lastOp)\n    pushOperation(stateSet.lastOp);\n  }, [stateSet]);\n\n  useEffect(() => {\n    if (!pageRecord) return;\n    debouncedSave(pageRecord);\n    setSaved(false);\n  }, [pageRecord]);\n\n  const setPageState = useCallback((uid: string, ds: DrawState) => {\n    setStateSet((prev) => prev?.setState(uid, ds));\n    setPageRecord((prev) => {\n      if (!prev) return;\n      return {\n        ...prev,\n        [uid]: { ...prev[uid], state: DrawState.flaten(ds) },\n      };\n    });\n  }, []);\n\n  const handleUndo = () => {\n    setStateSet((prev) => prev?.undo());\n  };\n\n  const handleRedo = () => {\n    setStateSet((prev) => prev?.redo());\n  };\n\n  return (\n    <DrawCtrlCtx.Provider value={drawCtrl}>\n      <ReaderStateCtx.Provider value={{ noteId, stateSet, saved, teamOn }}>\n        <ReaderMethodCtx.Provider value={{ setSaved, createRoom }}>\n          <div className=\"reader-container\">\n            <DrawTools\n              setDrawCtrl={setDrawCtrl}\n              instantSave={instantSave}\n              handleUndo={handleUndo}\n              handleRedo={handleRedo}\n            />\n            {stateSet?.getKeys().map((uid) => {\n              if (!pageRecord) return <></>;\n              const page = pageRecord[uid];\n              const drawState = stateSet.getOneState(uid);\n              const teamState = teamStateSet?.getOneState(uid);\n              if (!page || !drawState) return <></>;\n              return (\n                <PageWrapper\n                  drawState={drawState}\n                  teamState={teamState}\n                  updateState={setPageState}\n                  imageBlob={page.image}\n                  uid={uid}\n                  key={uid}\n                />\n              );\n            })}\n            <LoadingOutlined className=\"page-loading\" />\n          </div>\n        </ReaderMethodCtx.Provider>\n      </ReaderStateCtx.Provider>\n    </DrawCtrlCtx.Provider>\n  );\n}\n\nconst PageWrapper = React.memo(\n  ({\n    imageBlob,\n    drawState,\n    teamState,\n    uid,\n    updateState,\n  }: {\n    imageBlob?: Blob;\n    drawState: DrawState;\n    teamState: DrawState | undefined;\n    uid: string;\n    updateState: (uid: string, ds: DrawState) => void;\n  }) => {\n    const [loaded, setLoaded] = useState(false);\n\n    const url = useMemo(\n      () => (imageBlob ? URL.createObjectURL(imageBlob) : null),\n      [imageBlob]\n    );\n\n    useEffect(() => {\n      const prevUrl = url || \"\";\n      return () => URL.revokeObjectURL(prevUrl);\n    }, [url]);\n\n    return (\n      <div className={`pdf-page ${loaded ? \"loaded\" : \"\"}`}>\n        <img\n          src={url || dafaultImg}\n          alt=\"pdf-page\"\n          onLoad={() => setLoaded(true)}\n        />\n        <div className=\"page-draw\">\n          {teamState && <Draw drawState={teamState} />}\n          <DrawWrapper\n            updateState={updateState}\n            drawState={drawState}\n            uid={uid}\n          />\n        </div>\n      </div>\n    );\n  }\n);\n\nconst DrawWrapper = ({\n  drawState,\n  uid,\n  updateState,\n}: {\n  drawState: DrawState;\n  uid: string;\n  updateState: (uid: string, ds: DrawState) => void;\n}) => {\n  const { erasing, lineWidth, color, finger } = useContext(DrawCtrlCtx);\n\n  function handleChange(fn: ((s: DrawState) => DrawState) | DrawState) {\n    let ds = fn instanceof DrawState ? fn : fn(drawState);\n    updateState(uid, ds);\n  }\n\n  return (\n    <Draw\n      drawState={drawState}\n      onChange={handleChange}\n      erasing={erasing}\n      lineWidth={lineWidth}\n      color={color}\n      finger={finger}\n    />\n  );\n};\n","import React, { useState } from \"react\";\nimport { DrawState } from \"../lib/draw/DrawState\";\nimport Draw from \"./draw/Draw\";\n\nexport default function Test() {\n  const [ds, setDs] = useState(DrawState.createEmpty(500, 500));\n  return (\n    <>\n      <Draw drawState={ds} onChange={setDs} finger />\n      <h1>title</h1>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\nimport MainMenu from \"./component/menu/MainMenu\";\nimport Reader from \"./component/reader/Reader\";\nimport Test from \"./component/Test\";\nimport Team from \"./component/reader/Team\";\n\nconst placeholderEl = (\n  <main style={{ padding: \"1rem\" }}>\n    <p>There's nothing here!</p>\n  </main>\n);\n\nReactDOM.render(\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<MainMenu />} />\n      <Route path=\"/reader\">\n        <Route path=\":noteId\" element={<Reader teamOn={false} />} />\n      </Route>\n      <Route path=\"/team\">\n        <Route path=\":noteId\" element={<Team />} />\n      </Route>\n      <Route path=\"/test\" element={<Test />} />\n      <Route path=\"*\" element={placeholderEl} />\n    </Routes>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}