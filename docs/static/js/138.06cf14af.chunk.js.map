{"version":3,"file":"static/js/138.06cf14af.chunk.js","mappings":"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","sources":["lib/draw/drawer.ts","lib/note/pdfImage.ts","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["export function createVirtualCanvas(width: number, height: number) {\r\n  const canvas = document.createElement(\"canvas\");\r\n  const context = canvas.getContext(\"2d\");\r\n  if (!context) {\r\n    throw new Error(\"can't get virtual canvas context\");\r\n  }\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n  return { canvas, context };\r\n}\r\n\r\nexport function releaseCanvas(canvas: HTMLCanvasElement) {\r\n  canvas.width = 1;\r\n  canvas.height = 1;\r\n  const ctx = canvas.getContext('2d');\r\n  ctx?.clearRect(0, 0, 1, 1);\r\n}\r\n","import localforage from \"localforage\";\r\nimport * as pdfjs from \"pdfjs-dist/legacy/build/pdf\";\r\n// @ts-ignore\r\nimport pdfjsWorker from \"pdfjs-dist/legacy/build/pdf.worker.entry\";\r\nimport { PDFDocumentProxy } from \"pdfjs-dist/types/src/display/api\";\r\nimport { v4 as getUid } from \"uuid\";\r\nimport { createVirtualCanvas, releaseCanvas } from \"../draw/drawer\";\r\nimport { createEmptyNote, Note, NotePage } from \"./note\";\r\npdfjs.GlobalWorkerOptions.workerSrc = pdfjsWorker;\r\n\r\nconst getPDFDocument = async (file: Blob) => {\r\n  const data = new Uint8Array(await file.arrayBuffer());\r\n  return pdfjs.getDocument(data).promise;\r\n};\r\n\r\nconst getPageImage = async (\r\n  doc: PDFDocumentProxy,\r\n  pageNum: number,\r\n  scale: number\r\n): Promise<[string, number]> => {\r\n  const page = await doc.getPage(pageNum);\r\n  const viewport = page.getViewport({ scale });\r\n  console.log({ viewport });\r\n\r\n  const { height, width } = viewport;\r\n  const ratio = height / width;\r\n  const { canvas, context } = createVirtualCanvas(\r\n    Math.floor(width * scale),\r\n    Math.floor(height * scale)\r\n  );\r\n\r\n  await page.render({\r\n    canvasContext: context,\r\n    viewport: viewport,\r\n    transform: [scale, 0, 0, scale, 0, 0],\r\n  }).promise;\r\n\r\n  const data = canvas.toDataURL();\r\n\r\n  releaseCanvas(canvas);\r\n\r\n  return [data, ratio];\r\n};\r\n\r\nexport async function getPDFImages(\r\n  file: Blob,\r\n  scale = 2,\r\n  progressCb?: (percent: number) => void\r\n) {\r\n  const doc = await getPDFDocument(file);\r\n  const { numPages } = doc;\r\n  const images: string[] = [];\r\n  const ratios: number[] = [];\r\n\r\n  for (let i = 1; i <= numPages; i += 1) {\r\n    const [data, ratio] = await getPageImage(doc, i, scale);\r\n    images.push(data);\r\n    ratios.push(ratio);\r\n    if (progressCb) progressCb(Math.floor((i / numPages) * 100));\r\n  }\r\n\r\n  return { images, ratios };\r\n}\r\n\r\nexport async function getOneImage(file: Blob, index: number, scale = 2) {\r\n  const doc = await getPDFDocument(file);\r\n  const { numPages } = doc;\r\n  if (index > numPages) {\r\n    throw new Error(\"index out of range\");\r\n  }\r\n  const [data] = await getPageImage(doc, index, scale);\r\n  return data;\r\n}\r\n\r\nconst IMAGE_CACHE_NUMBER = 10;\r\nconst getImageCache = async (noteID: string, index: number) => {\r\n  let cacheList = ((await localforage.getItem(\"IMAGE_CACHE\")) ||\r\n    []) as string[];\r\n  const key = `IMAGE_${noteID}_${index}`;\r\n  if (!cacheList.includes(key)) return;\r\n  cacheList = [key, ...cacheList.filter((id) => id !== key)];\r\n  await localforage.setItem(\"IMAGE_CACHE\", cacheList);\r\n  return (await localforage.getItem(key)) as string;\r\n};\r\n\r\nconst setImageCache = async (noteID: string, index: number, data: string) => {\r\n  let cacheList = ((await localforage.getItem(\"IMAGE_CACHE\")) ||\r\n    []) as string[];\r\n  const key = `IMAGE_${noteID}_${index}`;\r\n  cacheList = [key, ...cacheList.filter((id) => id !== key)];\r\n  if (cacheList.length > IMAGE_CACHE_NUMBER) {\r\n    const deleteList = cacheList.slice(IMAGE_CACHE_NUMBER);\r\n    cacheList = cacheList.slice(0, IMAGE_CACHE_NUMBER);\r\n    for (let id of deleteList) {\r\n      await localforage.removeItem(id);\r\n    }\r\n  }\r\n  await localforage.setItem(\"IMAGE_CACHE\", cacheList);\r\n  await localforage.setItem(key, data);\r\n};\r\n\r\nexport async function getOnePageImage(noteID: string, index: number) {\r\n  const cached = await getImageCache(noteID, index);\r\n  if (cached) return cached;\r\n  const file = (await localforage.getItem(`PDF_${noteID}`)) as Blob | undefined;\r\n  const data = file && (await getOneImage(file, index, 2));\r\n  if (data) setImageCache(noteID, index, data);\r\n  return data;\r\n}\r\n\r\nexport async function LoadPDF(\r\n  file: File,\r\n  progressCb?: (percent: number) => void\r\n): Promise<Note> {\r\n  const { images, ratios } = await getPDFImages(file, 0.5, progressCb);\r\n  const pageRec: Record<string, NotePage> = {};\r\n  const pageOrder: string[] = [];\r\n  images.forEach((image, idx) => {\r\n    const pageID = getUid();\r\n    pageRec[pageID] = {\r\n      image,\r\n      ratio: ratios[idx],\r\n      state: {\r\n        strokes: {},\r\n      },\r\n      pdfIndex: idx + 1,\r\n    };\r\n    pageOrder.push(pageID);\r\n  });\r\n  const name = file.name.replace(\".pdf\", \"\");\r\n  const ab = await file.arrayBuffer();\r\n  const pdf = new Blob([ab], { type: \"application/pdf\" });\r\n  return {\r\n    ...createEmptyNote(),\r\n    name,\r\n    withImg: true,\r\n    pdf,\r\n    thumbnail: images[0],\r\n    pageRec,\r\n    pageOrder,\r\n  };\r\n}\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["createVirtualCanvas","width","height","canvas","document","createElement","context","getContext","Error","releaseCanvas","ctx","clearRect","pdfjs","pdfjsWorker","getPDFDocument","file","Uint8Array","arrayBuffer","data","promise","getPageImage","doc","pageNum","scale","getPage","page","viewport","getViewport","console","log","ratio","Math","floor","render","canvasContext","transform","toDataURL","getPDFImages","progressCb","numPages","images","ratios","i","push","getOneImage","index","getImageCache","noteID","localforage","cacheList","key","includes","filter","id","setImageCache","length","deleteList","slice","getOnePageImage","cached","LoadPDF","pageRec","pageOrder","forEach","image","idx","pageID","getUid","state","strokes","pdfIndex","name","replace","ab","pdf","Blob","type","createEmptyNote","withImg","thumbnail","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2"],"sourceRoot":""}