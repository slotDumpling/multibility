{"version":3,"file":"static/js/794.39bf41e4.chunk.js","mappings":"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","sources":["lib/draw/StateSet.ts","pages/reader/lib/scroll.ts","pages/reader/lib/array.ts","component/UserAvatar.tsx","pages/reader/tools/AddButton.tsx","pages/reader/PageNav/PageNav.tsx","pages/reader/Header/Left.tsx","pages/reader/Header/Middle.tsx","pages/reader/Header/Right.tsx","pages/reader/Header/index.tsx","pages/reader/Reader.tsx","lib/network/io.ts","pages/reader/Team.tsx","pages/reader/tools/Messages.tsx"],"sourcesContent":["import { DrawState, Operation, Stroke } from \"./DrawState\";\r\nimport { List, Map, Record } from \"immutable\";\r\nimport { NotePage } from \"lib/note/note\";\r\n\r\ninterface StateSetRecordType {\r\n  states: Map<string, DrawState>;\r\n  editStack: List<string>;\r\n  undoStack: List<string>;\r\n}\r\n\r\nconst defaultRecord: Readonly<StateSetRecordType> = {\r\n  states: Map(),\r\n  editStack: List(),\r\n  undoStack: List(),\r\n};\r\n\r\ntype StateSetRecord = Record<StateSetRecordType>;\r\nconst defaultFactory = Record(defaultRecord);\r\n\r\nexport type SetOperation = Operation & { pageID: string };\r\n\r\nexport class StateSet {\r\n  constructor(\r\n    private immutable: StateSetRecord,\r\n    public lastOp?: SetOperation\r\n  ) {}\r\n\r\n  static createFromPages(pageRec: globalThis.Record<string, NotePage>) {\r\n    return new StateSet(\r\n      defaultFactory().set(\r\n        \"states\",\r\n        Map(pageRec).map(({ state, ratio }) =>\r\n          DrawState.loadFromFlat(state, ratio)\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  getImmutable() {\r\n    return this.immutable;\r\n  }\r\n\r\n  getStates() {\r\n    return this.getImmutable().get(\"states\");\r\n  }\r\n\r\n  getOneState(pageID: string) {\r\n    return this.getStates().get(pageID);\r\n  }\r\n\r\n  getEditStack() {\r\n    return this.getImmutable().get(\"editStack\");\r\n  }\r\n\r\n  getUndoStack() {\r\n    return this.getImmutable().get(\"undoStack\");\r\n  }\r\n\r\n  setState(pageID: string, drawState: DrawState) {\r\n    const prevDS = this.getOneState(pageID);\r\n    if (!prevDS || prevDS === drawState) return this;\r\n    let currRecord = this.getImmutable()\r\n      .update(\"states\", (s) => s.set(pageID, drawState))\r\n      .update(\"editStack\", (l) => l.push(pageID))\r\n      .delete(\"undoStack\");\r\n\r\n    const { lastOp } = drawState;\r\n    const lastSetOp = lastOp && { ...lastOp, pageID };\r\n\r\n    return new StateSet(currRecord, lastSetOp);\r\n  }\r\n\r\n  // sync with mutation.\r\n  syncStrokeTime(pageID: string, stroke: Stroke) {\r\n    const prevDS = this.getOneState(pageID);\r\n    prevDS && DrawState.syncStrokeTime(prevDS, stroke);\r\n    return this;\r\n  }\r\n\r\n  addState(pageID: string, notePage: NotePage) {\r\n    const { state, ratio } = notePage;\r\n    const newDS = DrawState.loadFromFlat(state, ratio);\r\n    const currRecord = this.getImmutable().update(\"states\", (s) =>\r\n      s.set(pageID, newDS)\r\n    );\r\n    return new StateSet(currRecord);\r\n  }\r\n\r\n  deleteState(pageID: string) {\r\n    return new StateSet(\r\n      this.getImmutable().update(\"states\", (s) => s.delete(pageID))\r\n    );\r\n  }\r\n\r\n  isUndoable() {\r\n    return this.getEditStack().size > 0;\r\n  }\r\n\r\n  isRedoable() {\r\n    return this.getUndoStack().size > 0;\r\n  }\r\n\r\n  undo() {\r\n    if (!this.isUndoable()) return this;\r\n    const lastUid = this.getEditStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.undo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"editStack\", (s) => s.pop())\r\n        .update(\"undoStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  redo() {\r\n    if (!this.isRedoable()) return this;\r\n    const lastUid = this.getUndoStack().last();\r\n    const prevDS = lastUid && this.getOneState(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.redo(prevDS);\r\n    const { lastOp } = newDS;\r\n    const lastSetOp = lastOp && { pageID: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      this.getImmutable()\r\n        .update(\"undoStack\", (s) => s.pop())\r\n        .update(\"editStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  getLastDS(): [string, DrawState] | undefined {\r\n    const pageID = this.lastOp?.pageID;\r\n    const ds = pageID && this.getOneState(pageID);\r\n    if (ds) return [pageID, ds];\r\n  }\r\n}\r\n","import {\r\n  useDebugValue,\r\n  useDeferredValue,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport localforage from \"localforage\";\r\nimport { Map } from \"immutable\";\r\nimport { debounce } from \"lodash\";\r\nimport { useMemoizedFn as useEvent } from \"ahooks\";\r\n\r\nconst scrollForage = localforage.createInstance({ name: \"scroll\" });\r\nconst persistScroll = debounce((noteID: string, currPageID: string) => {\r\n  scrollForage.setItem(noteID, currPageID);\r\n}, 5000);\r\n\r\nexport function useScrollPage(noteID: string, pageOrder = [] as string[]) {\r\n  const [refMap, setRefMap] = useState(Map<string, HTMLElement>());\r\n  const scrolled = useRef(false);\r\n  const [prevPageID, setPrevPageID] = useState(\"\");\r\n  useEffect(() => {\r\n    (async () => {\r\n      const stored = await scrollForage.getItem<string>(noteID);\r\n      if (!stored) return (scrolled.current = true);\r\n      setPrevPageID(stored);\r\n    })();\r\n  }, [noteID]);\r\n\r\n  const [inviewRatios, setInviewRatios] = useState(Map<string, number>());\r\n  const deferredRatios = useDeferredValue(inviewRatios);\r\n  const currPageID = useMemo(\r\n    () => largestKey(deferredRatios, pageOrder),\r\n    [deferredRatios, pageOrder]\r\n  );\r\n  useDebugValue(currPageID);\r\n\r\n  useEffect(() => {\r\n    if (scrolled.current || !refMap.has(prevPageID)) return;\r\n    requestAnimationFrame(() => {\r\n      refMap.get(prevPageID)?.scrollIntoView();\r\n      scrolled.current = true;\r\n    });\r\n  }, [prevPageID, refMap]);\r\n\r\n  useEffect(() => {\r\n    if (!scrolled.current) return;\r\n    persistScroll(noteID, currPageID);\r\n  }, [noteID, currPageID]);\r\n\r\n  const calcScrollY = useEvent(() => {\r\n    const section = refMap.get(currPageID);\r\n    const header = section?.parentElement?.previousElementSibling;\r\n    if (!header) return 0;\r\n    const { top } = section.getBoundingClientRect();\r\n    const { height } = header.getBoundingClientRect();\r\n    return -top + height;\r\n  });\r\n  const scrollY = useMemo(calcScrollY, [pageOrder, calcScrollY]);\r\n\r\n  const scrollToCurr = useEvent(() => {\r\n    const section = refMap.get(currPageID);\r\n    if (!section) return;\r\n    section.scrollIntoView();\r\n    window.scrollBy(0, scrollY);\r\n  });\r\n  useLayoutEffect(scrollToCurr, [pageOrder, scrollToCurr]);\r\n\r\n  const sectionRef = (pageID: string) => (el: HTMLElement | null) => {\r\n    if (!el) return;\r\n    setRefMap((prev) => prev.set(pageID, el));\r\n  };\r\n\r\n  const taskID = useRef(0);\r\n  const [scrolling, setScrolling] = useState(false);\r\n  const scrollPage = (pageID: string) => {\r\n    const handleScroll = () => {\r\n      cancelAnimationFrame(taskID.current);\r\n      requestAnimationFrame(() => {\r\n        taskID.current = requestAnimationFrame(() => {\r\n          setScrolling(false);\r\n          document.removeEventListener(\"scroll\", handleScroll);\r\n        });\r\n      });\r\n    };\r\n    setScrolling(true);\r\n    document.addEventListener(\"scroll\", handleScroll);\r\n    refMap.get(pageID)?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  return { scrollPage, setInviewRatios, sectionRef, currPageID, scrolling };\r\n}\r\n\r\nconst largestKey = (map: Map<string, number>, order: string[]) => {\r\n  let result = \"\";\r\n  let maxRatio = 0;\r\n  for (let key of order) {\r\n    const ratio = map.get(key);\r\n    if (!ratio) continue;\r\n    if (ratio === 1) return key;\r\n    if (ratio > maxRatio) {\r\n      result = key;\r\n      maxRatio = ratio;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n","export function exchange<T>(list: T[], fromIndex: number, toIndex: number) {\r\n  const result = list.slice();\r\n  const [removed] = result.splice(fromIndex, 1);\r\n  if (!removed) return list;\r\n  result.splice(toIndex, 0, removed);\r\n  return result;\r\n}\r\n\r\nexport function insertAfter<T>(list: T[], prevItem: T, newItem: T) {\r\n  const prevIndex = list.indexOf(prevItem);\r\n  const curr = list.slice();\r\n  if (prevIndex === -1) return curr;\r\n  curr.splice(prevIndex + 1, 0, newItem);\r\n  return curr;\r\n}\r\n","import { Avatar } from \"antd\";\r\nimport { AvatarSize } from \"antd/lib/avatar/SizeContext\";\r\nimport { FC, useMemo } from \"react\";\r\nimport { getHashedColor } from \"lib/color\";\r\nimport { UserInfo } from \"lib/user\";\r\n\r\nexport const UserAvatar: FC<{\r\n  userInfo: UserInfo;\r\n  size?: AvatarSize;\r\n  onClick?: () => void;\r\n  chosen?: boolean;\r\n  className?: string;\r\n}> = ({\r\n  userInfo,\r\n  size = \"default\",\r\n  onClick = () => {},\r\n  chosen = false,\r\n  className,\r\n}) => {\r\n  const color = useMemo(() => getHashedColor(userInfo.userID), [userInfo]);\r\n  if (!userInfo) return null;\r\n  const { userName } = userInfo;\r\n\r\n  return (\r\n    <Avatar\r\n      className={className}\r\n      data-chosen={chosen}\r\n      size={size}\r\n      style={{ backgroundColor: color }}\r\n    >\r\n      <div className=\"avatar-wrapper\" onClick={onClick}>\r\n        {userName?.slice(0, 3)}\r\n      </div>\r\n    </Avatar>\r\n  );\r\n};\r\n","import { Button } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { FC } from \"react\";\n\nexport const AddPageButton: FC<{ addFinalPage: () => void }> = ({\n  addFinalPage,\n}) => {\n  return (\n    <div className=\"add-btn-wrapper\">\n      <Button\n        type=\"dashed\"\n        icon={<PlusOutlined />}\n        block\n        onClick={addFinalPage}\n      >\n        New page\n      </Button>\n    </div>\n  );\n};\n","import React, {\r\n  FC,\r\n  useRef,\r\n  useMemo,\r\n  useState,\r\n  useContext,\r\n  useLayoutEffect,\r\n} from \"react\";\r\nimport {\r\n  MoreOutlined,\r\n  PlusOutlined,\r\n  CopyOutlined,\r\n  DeleteOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  Draggable,\r\n  Droppable,\r\n  DropResult,\r\n  DragDropContext,\r\n} from \"react-beautiful-dnd\";\r\nimport { Avatar, Menu, Popover, Tabs } from \"antd\";\r\nimport {\r\n  ActiveKeyProvider,\r\n  Setter,\r\n  useActiveKey,\r\n  useAsideOpen,\r\n} from \"lib/hooks\";\r\nimport { ReaderMethods, ReaderStates } from \"../Reader\";\r\nimport PageWrapper from \"component/PageWrapper\";\r\nimport { UserAvatar } from \"component/UserAvatar\";\r\nimport { exchange } from \"../lib/array\";\r\nimport IconFont from \"component/IconFont\";\r\nimport classNames from \"classnames\";\r\nimport { TeamCtx } from \"../Team\";\r\nimport { useMemoizedFn as useEvent } from \"ahooks\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport { NotePage } from \"lib/note/note\";\r\nimport { TeamState } from \"lib/draw/TeamState\";\r\nimport { AddPageButton } from \"../tools/AddButton\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\ntype PreviewProps = ReaderMethods & ReaderStates;\r\nexport const PageNav: FC<PreviewProps> = (props) => {\r\n  const [left, setLeft] = useState(false);\r\n  const [asideOpen] = useAsideOpen();\r\n\r\n  const opposite = (\r\n    <Draggable draggableId=\"OPPOSITE\" index={left ? 1 : 0} isDragDisabled>\r\n      {({ innerRef }) => <div className=\"opposite\" ref={innerRef} />}\r\n    </Draggable>\r\n  );\r\n\r\n  return (\r\n    <CSSTransition in={asideOpen} timeout={300} unmountOnExit>\r\n      <ActiveKeyProvider initKey=\"ALL\">\r\n        <DragDropContext\r\n          onDragEnd={({ destination }) => {\r\n            if (destination?.index === 0) setLeft(true);\r\n            if (destination?.index === 1) setLeft(false);\r\n          }}\r\n        >\r\n          <Droppable droppableId=\"preview-drop\" direction=\"horizontal\">\r\n            {(\r\n              { droppableProps, innerRef, placeholder },\r\n              { isDraggingOver }\r\n            ) => (\r\n              <aside\r\n                className=\"preview-drop\"\r\n                data-left={left}\r\n                ref={innerRef}\r\n                data-dragged={isDraggingOver}\r\n                {...droppableProps}\r\n              >\r\n                {opposite}\r\n                <PreviewCard left={left} {...props} />\r\n                {placeholder}\r\n              </aside>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n      </ActiveKeyProvider>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nconst PreviewCard: FC<{ left: boolean } & PreviewProps> = ({\r\n  left,\r\n  ...props\r\n}) => {\r\n  const [activeKey] = useActiveKey();\r\n  const [, setAsideOpen] = useAsideOpen();\r\n\r\n  const title = {\r\n    ALL: \"All Pages\",\r\n    MARKED: \"Bookmarks\",\r\n    WRITTEN: \"Notes\",\r\n  }[activeKey];\r\n\r\n  const { ref: swipeRef, ...swipeHandler } = useSwipeable({\r\n    onSwipedLeft() {\r\n      if (left) setAsideOpen(false);\r\n    },\r\n    onSwipedRight() {\r\n      if (!left) setAsideOpen(false);\r\n    },\r\n    swipeDuration: 200,\r\n  });\r\n\r\n  return (\r\n    <Draggable draggableId={\"CARD\"} index={left ? 0 : 1}>\r\n      {(\r\n        { innerRef, draggableProps, dragHandleProps },\r\n        { isDragging, isDropAnimating }\r\n      ) => (\r\n        <div\r\n          className=\"preview-card\"\r\n          ref={(e) => {\r\n            innerRef(e);\r\n            swipeRef(e);\r\n          }}\r\n          data-animating={isDropAnimating}\r\n          {...draggableProps}\r\n          {...swipeHandler}\r\n        >\r\n          <div className=\"drag-handle\" {...dragHandleProps} />\r\n          <h3>{title}</h3>\r\n          <PreviewTabs />\r\n          <PageList cardDragged={isDragging} {...props} />\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst PageList: FC<PreviewProps & { cardDragged: boolean }> = React.memo(\r\n  ({ cardDragged, ...props }) => {\r\n    const refRec = useRef<Record<string, HTMLElement>>({});\r\n    const [activeKey] = useActiveKey();\r\n    const [asideOpen] = useAsideOpen();\r\n    const { pageOrder, currPageID } = props;\r\n    const { saveReorder, addFinalPage } = props;\r\n\r\n    const onDragEnd = ({ source, destination }: DropResult) => {\r\n      if (!destination || !pageOrder) return;\r\n      const { index: fromIndex } = source;\r\n      const { index: toIndex } = destination;\r\n      const pageID = pageOrder[fromIndex];\r\n      if (fromIndex === toIndex || !pageID) return;\r\n      const newOrder = exchange(pageOrder, fromIndex, toIndex);\r\n      saveReorder(newOrder, true);\r\n    };\r\n\r\n    const initScroll = useEvent(() => {\r\n      refRec.current[currPageID]?.scrollIntoView();\r\n    });\r\n    useLayoutEffect(() => {\r\n      if (asideOpen) initScroll();\r\n    }, [asideOpen, activeKey, initScroll]);\r\n\r\n    return (\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"preview-list\" isDropDisabled={cardDragged}>\r\n          {({ droppableProps, innerRef, placeholder }) => (\r\n            <div className=\"page-list\" ref={innerRef} {...droppableProps}>\r\n              {pageOrder?.map((uid, index) => (\r\n                <PagePreview\r\n                  key={uid}\r\n                  uid={uid}\r\n                  pageIndex={index}\r\n                  refRec={refRec.current}\r\n                  cardDragged={cardDragged}\r\n                  {...props}\r\n                />\r\n              ))}\r\n              {placeholder}\r\n              {activeKey === \"ALL\" && (\r\n                <AddPageButton addFinalPage={addFinalPage} />\r\n              )}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n);\r\nPageList.displayName = \"PageList\";\r\n\r\nconst PagePreview: FC<\r\n  {\r\n    uid: string;\r\n    pageIndex: number;\r\n    refRec: Record<string, HTMLElement>;\r\n    cardDragged: boolean;\r\n  } & PreviewProps\r\n> = ({ uid, pageIndex, refRec, cardDragged, ...props }) => {\r\n  const { stateSet, pageRec, currPageID, scrollPage } = props;\r\n  const { teamState, ignores } = useContext(TeamCtx);\r\n  const [activeKey] = useActiveKey();\r\n  const [chosen, setChosen] = useState(\"\");\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n\r\n  const marked = useRef(false);\r\n  if (activeKey === \"MARKED\") {\r\n    marked.current = page?.marked || marked.current;\r\n  } else {\r\n    marked.current = false;\r\n  }\r\n\r\n  const userIDs = useMemo(\r\n    () => TeamState.getValidUsers(teamStateMap, ignores),\r\n    [teamStateMap, ignores]\r\n  );\r\n\r\n  if (!page || !drawState) return null;\r\n\r\n  if (\r\n    activeKey === \"WRITTEN\" &&\r\n    drawState.isEmpty() &&\r\n    TeamState.isEmpty(teamStateMap)\r\n  ) {\r\n    return null;\r\n  }\r\n  if (activeKey === \"MARKED\" && !marked.current) return null;\r\n  const curr = currPageID === uid;\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={uid}\r\n      index={pageIndex}\r\n      isDragDisabled={activeKey !== \"ALL\" || cardDragged}\r\n    >\r\n      {(\r\n        { innerRef, draggableProps, dragHandleProps },\r\n        { isDragging, isDropAnimating }\r\n      ) => (\r\n        <div\r\n          ref={(e) => {\r\n            innerRef(e);\r\n            if (e) refRec[uid] = e;\r\n          }}\r\n          className=\"page\"\r\n          data-curr={curr}\r\n          data-dragged={isDragging}\r\n          data-animating={isDropAnimating}\r\n          onClick={() => scrollPage(uid)}\r\n          {...draggableProps}\r\n          {...dragHandleProps}\r\n        >\r\n          <PageWrapper\r\n            drawState={teamStateMap?.get(chosen) || drawState}\r\n            teamStateMap={chosen ? undefined : teamStateMap}\r\n            thumbnail={page.image}\r\n            ignores={ignores}\r\n            preview\r\n            skipInView={isDragging || cardDragged}\r\n          />\r\n          <PreviewTools\r\n            uid={uid}\r\n            index={pageIndex}\r\n            chosen={chosen}\r\n            setChosen={setChosen}\r\n            page={page}\r\n            userIDs={userIDs}\r\n            {...props}\r\n          />\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst PreviewTools: FC<\r\n  {\r\n    uid: string;\r\n    index: number;\r\n    chosen: string;\r\n    setChosen: Setter<string>;\r\n    page: NotePage;\r\n    userIDs: string[];\r\n  } & ReaderMethods\r\n> = React.memo(({ uid, index, chosen, setChosen, page, userIDs, ...props }) => {\r\n  const { switchPageMarked } = props;\r\n  return (\r\n    <div className=\"tools\" onClick={(e) => e.stopPropagation()}>\r\n      <div\r\n        className=\"bookmark\"\r\n        data-marked={page.marked}\r\n        onClick={() => switchPageMarked(uid)}\r\n      />\r\n      <div className=\"index\">{index + 1}</div>\r\n      <PreviewOption uid={uid} {...props} />\r\n      <TeamAvatars userIDs={userIDs} chosen={chosen} setChosen={setChosen} />\r\n    </div>\r\n  );\r\n});\r\nPreviewTools.displayName = \"PreviewTools\";\r\n\r\nconst TeamAvatars: FC<{\r\n  userIDs: string[];\r\n  chosen: string;\r\n  setChosen: Setter<string>;\r\n}> = ({ userIDs, chosen, setChosen }) => {\r\n  const { userRec } = useContext(TeamCtx);\r\n  return (\r\n    <Avatar.Group\r\n      maxCount={2}\r\n      size=\"default\"\r\n      className={classNames(\"team-group\", { chosen })}\r\n      maxPopoverPlacement=\"bottom\"\r\n    >\r\n      {userIDs.map((userID) => {\r\n        const userInfo = userRec[userID];\r\n        if (!userInfo) return null;\r\n        return (\r\n          <UserAvatar\r\n            key={userID}\r\n            size=\"default\"\r\n            userInfo={userInfo}\r\n            className=\"preview-avatar\"\r\n            chosen={chosen === userID}\r\n            onClick={() => setChosen((prev) => (prev === userID ? \"\" : userID))}\r\n          />\r\n        );\r\n      })}\r\n    </Avatar.Group>\r\n  );\r\n};\r\n\r\nconst PreviewOption: FC<{ uid: string } & ReaderMethods> = ({\r\n  uid,\r\n  addPage,\r\n  deletePage,\r\n}) => {\r\n  const menu = (\r\n    <Menu\r\n      items={[\r\n        {\r\n          key: \"ADD\",\r\n          icon: <PlusOutlined />,\r\n          label: \"Add page\",\r\n          onClick: () => addPage(uid),\r\n        },\r\n        {\r\n          key: \"COPY\",\r\n          icon: <CopyOutlined />,\r\n          label: \"Duplicate\",\r\n          onClick: () => addPage(uid, true),\r\n        },\r\n        {\r\n          key: \"DELETE\",\r\n          icon: <DeleteOutlined />,\r\n          label: \"Delete\",\r\n          danger: true,\r\n          onClick: () => deletePage(uid),\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n  return (\r\n    <Popover\r\n      content={menu}\r\n      trigger=\"click\"\r\n      placement=\"left\"\r\n      destroyTooltipOnHide\r\n      getPopupContainer={(e) => e.parentElement?.parentElement?.parentElement!}\r\n    >\r\n      <div className=\"option\">\r\n        <MoreOutlined />\r\n      </div>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst PreviewTabs: FC = React.memo(() => {\r\n  const [activeKey, setActiveKey] = useActiveKey();\r\n  const { TabPane } = Tabs;\r\n  return (\r\n    <Tabs\r\n      className=\"tabs\"\r\n      activeKey={activeKey}\r\n      onChange={setActiveKey}\r\n      tabBarGutter={0}\r\n      size=\"small\"\r\n      centered\r\n    >\r\n      <TabPane tab={<IconFont type=\"icon-uf_paper\" />} key=\"ALL\" />\r\n      <TabPane tab={<IconFont type=\"icon-bookmark2\" />} key=\"MARKED\" />\r\n      <TabPane tab={<IconFont type=\"icon-write\" />} key=\"WRITTEN\" />\r\n    </Tabs>\r\n  );\r\n});\r\nPreviewTabs.displayName = \"PreviewTabs\";\r\n","import { FC } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { HomeFilled, SaveOutlined } from \"@ant-design/icons\";\r\n\r\nexport const HeaderLeft: FC<{\r\n  saved: boolean;\r\n  instantSave: () => Promise<void> | undefined;\r\n}> = ({ saved, instantSave }) => {\r\n  const nav = useNavigate();\r\n  return (\r\n    <div className=\"left\">\r\n      <Button\r\n        type=\"text\"\r\n        onClick={async () => {\r\n          await instantSave();\r\n          nav(\"/\");\r\n        }}\r\n        icon={<HomeFilled style={{ opacity: 0.8 }} />}\r\n      />\r\n      <Button\r\n        type=\"text\"\r\n        className=\"save\"\r\n        onClick={instantSave}\r\n        disabled={saved}\r\n        icon={<SaveOutlined />}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { Button, message, Popover, Segmented } from \"antd\";\r\nimport {\r\n  BulbFilled,\r\n  BulbOutlined,\r\n  UndoOutlined,\r\n  RedoOutlined,\r\n  GatewayOutlined,\r\n  HighlightTwoTone,\r\n  HighlightOutlined,\r\n} from \"@ant-design/icons\";\r\nimport IconFont from \"component/IconFont\";\r\nimport { PenPanel, WidthSelect } from \"../tools/PenPanel\";\r\nimport { useForceLight } from \"lib/Dark\";\r\nimport { useDrawCtrl, useUpdateDrawCtrl } from \"lib/draw/DrawCtrl\";\r\n\r\nexport const HeaderMiddle: FC<{\r\n  handleUndo: () => void;\r\n  handleRedo: () => void;\r\n  undoable: boolean;\r\n  redoable: boolean;\r\n}> = ({ handleUndo, handleRedo, undoable, redoable }) => {\r\n  const { mode, finger } = useDrawCtrl();\r\n  const updateDrawCtrl = useUpdateDrawCtrl();\r\n  const [forceLight, setForceLight] = useForceLight();\r\n\r\n  return (\r\n    <div className=\"middle\" data-force-light={forceLight}>\r\n      <Button\r\n        type=\"text\"\r\n        icon={<UndoOutlined />}\r\n        onClick={handleUndo}\r\n        disabled={!undoable}\r\n      />\r\n      <Button\r\n        type=\"text\"\r\n        icon={<RedoOutlined />}\r\n        onClick={handleRedo}\r\n        disabled={!redoable}\r\n      />\r\n      <Button\r\n        type={finger ? \"link\" : \"text\"}\r\n        onClick={() => {\r\n          updateDrawCtrl({ finger: !finger });\r\n          message.destroy(\"FINGER\");\r\n          message.open({\r\n            content: finger ? \"Pencil only\" : \"Draw with finger\",\r\n            key: \"FINGER\",\r\n          });\r\n        }}\r\n        icon={<IconFont type=\"icon-finger\" />}\r\n      />\r\n      <Button\r\n        className=\"force-light-btn\"\r\n        type=\"text\"\r\n        icon={forceLight ? <BulbFilled /> : <BulbOutlined />}\r\n        onClick={() => setForceLight((prev) => !prev)}\r\n      />\r\n      <PenButton />\r\n      <EraserButton />\r\n      <Button\r\n        type={mode === \"text\" ? \"link\" : \"text\"}\r\n        onClick={() => updateDrawCtrl({ mode: \"text\" })}\r\n        icon={<IconFont type=\"icon-text1\" />}\r\n      />\r\n      <SelectButton />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PenButton = () => {\r\n  const drawCtrl = useDrawCtrl();\r\n  const { mode, color } = drawCtrl;\r\n  const updateDrawCtrl = useUpdateDrawCtrl();\r\n\r\n  return mode === \"draw\" ? (\r\n    <Popover\r\n      content={<PenPanel updateDrawCtrl={updateDrawCtrl} drawCtrl={drawCtrl} />}\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e.parentElement!}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button\r\n        type=\"link\"\r\n        icon={<HighlightTwoTone twoToneColor={color} className=\"pen-icon\" />}\r\n      />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      onClick={() => updateDrawCtrl({ mode: \"draw\" })}\r\n      icon={<HighlightOutlined />}\r\n    />\r\n  );\r\n};\r\n\r\nconst EraserButton = () => {\r\n  const drawCtrl = useDrawCtrl();\r\n  const { mode, pixelEraser } = drawCtrl;\r\n  const updateDrawCtrl = useUpdateDrawCtrl();\r\n\r\n  return mode === \"erase\" ? (\r\n    <Popover\r\n      content={\r\n        <div className=\"width-seg-wrapper\">\r\n          <Segmented\r\n            block\r\n            size=\"small\"\r\n            className=\"pixel-seg\"\r\n            options={[\"Pixel\", \"Object\"]}\r\n            value={pixelEraser ? \"Pixel\" : \"Object\"}\r\n            onChange={(value) => {\r\n              if (value === \"Pixel\") updateDrawCtrl({ pixelEraser: true });\r\n              else updateDrawCtrl({ pixelEraser: false });\r\n            }}\r\n          />\r\n          <WidthSelect\r\n            drawCtrl={drawCtrl}\r\n            updateDrawCtrl={updateDrawCtrl}\r\n            field=\"eraserWidth\"\r\n          />\r\n        </div>\r\n      }\r\n      trigger=\"click\"\r\n      placement=\"bottom\"\r\n      getPopupContainer={(e) => e.parentElement!}\r\n      destroyTooltipOnHide\r\n    >\r\n      <Button type=\"link\" icon={<IconFont type=\"icon-eraser\" />} />\r\n    </Popover>\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      onClick={() => updateDrawCtrl({ mode: \"erase\" })}\r\n      icon={<IconFont type=\"icon-eraser\" />}\r\n    />\r\n  );\r\n};\r\n\r\nconst SelectButton = () => {\r\n  const { lasso, mode } = useDrawCtrl();\r\n  const updateDrawCtrl = useUpdateDrawCtrl();\r\n\r\n  const icon = lasso ? <IconFont type=\"icon-lasso1\" /> : <GatewayOutlined />;\r\n\r\n  return mode === \"select\" ? (\r\n    <Button\r\n      type=\"link\"\r\n      icon={icon}\r\n      onClick={() => updateDrawCtrl({ lasso: !lasso })}\r\n    />\r\n  ) : (\r\n    <Button\r\n      type=\"text\"\r\n      icon={icon}\r\n      onClick={() => updateDrawCtrl({ mode: \"select\" })}\r\n    />\r\n  );\r\n};\r\n","import { FC, useMemo, useState, useEffect, useContext } from \"react\";\r\nimport { Badge, Alert, Modal, Button, Divider, message, Popover } from \"antd\";\r\nimport Search from \"antd/lib/input/Search\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { PasscodeInput } from \"antd-mobile\";\r\nimport { TeamCtx } from \"../Team\";\r\nimport { getUserID, saveUserName } from \"lib/user\";\r\nimport {\r\n  EyeOutlined,\r\n  MenuOutlined,\r\n  FormOutlined,\r\n  TeamOutlined,\r\n  CopyOutlined,\r\n  CheckOutlined,\r\n  ReloadOutlined,\r\n  ShareAltOutlined,\r\n  DisconnectOutlined,\r\n  EyeInvisibleOutlined,\r\n  UsergroupAddOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { editNoteData } from \"lib/note/archive\";\r\nimport { UserAvatar } from \"component/UserAvatar\";\r\nimport { putNote } from \"lib/network/http\";\r\nimport copy from \"clipboard-copy\";\r\nimport { useAsideOpen } from \"lib/hooks\";\r\n\r\nexport const HeaderRight: FC<{\r\n  instantSave: () => Promise<void> | undefined;\r\n}> = ({ instantSave }) => {\r\n  const { teamOn } = useContext(TeamCtx);\r\n  return (\r\n    <div className=\"right\">\r\n      {teamOn ? <RoomInfo /> : <JoinRoom instantSave={instantSave} />}\r\n      <PageNavButton />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PageNavButton = () => {\r\n  const [asideOpen, setAsideOpen] = useAsideOpen();\r\n  return (\r\n    <Button\r\n      type={asideOpen ? \"link\" : \"text\"}\r\n      icon={<MenuOutlined />}\r\n      onClick={() => setAsideOpen((prev) => !prev)}\r\n    />\r\n  );\r\n};\r\n\r\nconst UserCard: FC<{ userID: string }> = ({ userID }) => {\r\n  const [renaming, setRenaming] = useState(false);\r\n  const { ignores, setIgnores, resetIO, userRec } = useContext(TeamCtx);\r\n  const userInfo = userRec[userID];\r\n  useEffect(() => setRenaming(false), [userInfo]);\r\n  if (!userInfo) return null;\r\n\r\n  const { userName, online } = userInfo;\r\n  const self = userID === getUserID();\r\n  const ignored = ignores.has(userID) && !self;\r\n\r\n  const switchIgnore = () => {\r\n    setIgnores((prev) => {\r\n      if (prev.has(userID)) return prev.delete(userID);\r\n      return prev.add(userID);\r\n    });\r\n  };\r\n\r\n  const submitRename = (value: string) => {\r\n    const name = value.trim();\r\n    if (!name || name === userName) return setRenaming(false);\r\n    saveUserName(name);\r\n    resetIO();\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-item\" data-online={online}>\r\n      <UserAvatar userInfo={userInfo} size=\"small\" className=\"room-avatar\" />\r\n      {renaming || <span className=\"user-name\">{userName}</span>}\r\n      {renaming && (\r\n        <Search\r\n          autoFocus\r\n          className=\"rename-input\"\r\n          defaultValue={userName}\r\n          onSearch={submitRename}\r\n          enterButton={<Button icon={<CheckOutlined />} />}\r\n        />\r\n      )}\r\n      {self ? (\r\n        renaming || (\r\n          <Button\r\n            type=\"text\"\r\n            icon={<FormOutlined />}\r\n            onClick={() => setRenaming(true)}\r\n          />\r\n        )\r\n      ) : (\r\n        <Button\r\n          type=\"text\"\r\n          icon={ignored ? <EyeInvisibleOutlined /> : <EyeOutlined />}\r\n          onClick={switchIgnore}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RoomInfo: FC = () => {\r\n  const { code, userRec, connected, loadInfo, loadState, resetIO } =\r\n    useContext(TeamCtx);\r\n  const link = window.location.href;\r\n  const share = async () => {\r\n    try {\r\n      await copy(`${document.title}\\n${link}`);\r\n      message.destroy(\"copy\");\r\n      message.success({\r\n        content: \"Link copied!\",\r\n        icon: <CopyOutlined />,\r\n        key: \"copy\",\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const userList = useMemo(() => {\r\n    const selfID = getUserID();\r\n    const { [selfID]: selfInfo, ...otherUsers } = userRec;\r\n    const list = selfInfo ? [selfInfo] : [];\r\n    const values = Object.values(otherUsers);\r\n    list.push(\r\n      ...values.filter(({ online }) => online),\r\n      ...values.filter(({ online }) => !online)\r\n    );\r\n    return list;\r\n  }, [userRec]);\r\n\r\n  const onlineNum = useMemo(\r\n    () => userList.filter(({ online }) => online).length,\r\n    [userList]\r\n  );\r\n\r\n  const teamPop = (\r\n    <div className=\"team-popover\">\r\n      {connected || (\r\n        <Alert\r\n          className=\"disconn-alert\"\r\n          message=\"Network failed.\"\r\n          icon={<DisconnectOutlined />}\r\n          type=\"error\"\r\n          showIcon\r\n          banner\r\n        />\r\n      )}\r\n      <PasscodeInput\r\n        className=\"code-display\"\r\n        value={String(code)}\r\n        length={4}\r\n        plain\r\n      />\r\n      <Button\r\n        icon={<ShareAltOutlined />}\r\n        className=\"share-btn\"\r\n        onClick={share}\r\n        block\r\n      >\r\n        Share\r\n      </Button>\r\n      <Divider />\r\n      <div className=\"user-list\">\r\n        {userList.map((u) => (\r\n          <UserCard key={u.userID} userID={u.userID} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const [reloading, setReloading] = useState(false);\r\n  const title = (\r\n    <div className=\"team-title\">\r\n      <span>Team info</span>\r\n      <Button\r\n        shape=\"circle\"\r\n        type=\"text\"\r\n        size=\"small\"\r\n        loading={reloading}\r\n        icon={<ReloadOutlined />}\r\n        onClick={async () => {\r\n          setReloading(true);\r\n          await loadInfo();\r\n          await loadState();\r\n          setReloading(false);\r\n          resetIO();\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Popover\r\n      content={teamPop}\r\n      trigger=\"click\"\r\n      placement=\"bottomRight\"\r\n      title={title}\r\n      getPopupContainer={(e) => e.parentElement!}\r\n    >\r\n      <Button\r\n        type=\"text\"\r\n        icon={\r\n          <Badge\r\n            status={connected ? \"success\" : \"error\"}\r\n            count={connected ? onlineNum : \"!\"}\r\n            size=\"small\"\r\n          >\r\n            <TeamOutlined />\r\n          </Badge>\r\n        }\r\n      />\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst JoinRoom: FC<{\r\n  instantSave: () => Promise<void> | undefined;\r\n}> = ({ instantSave }) => {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const nav = useNavigate();\r\n\r\n  const createRoom = async () => {\r\n    await instantSave();\r\n    const res = await putNote(noteID);\r\n    if (!res) return message.error(\"Can't create room.\");\r\n    await editNoteData(noteID, { team: true });\r\n    nav(\"/team/\" + noteID);\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      type=\"text\"\r\n      icon={<UsergroupAddOutlined />}\r\n      onClick={() => {\r\n        Modal.confirm({\r\n          title: \"Enable team editing\",\r\n          content: \"This will make your note public to anyone with the link.\",\r\n          icon: <TeamOutlined style={{ color: \"#555\" }} />,\r\n          onOk: createRoom,\r\n        });\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { HeaderLeft } from \"./Left\";\r\nimport { HeaderMiddle } from \"./Middle\";\r\nimport { HeaderRight } from \"./Right\";\r\nimport \"./header.sass\";\r\n\r\nexport const Header: FC<{\r\n  saved: boolean;\r\n  handleUndo: () => void;\r\n  handleRedo: () => void;\r\n  undoable: boolean;\r\n  redoable: boolean;\r\n  instantSave: () => Promise<void> | undefined;\r\n}> = ({ saved, instantSave, ...undoProps }) => (\r\n  <header>\r\n    <HeaderLeft saved={saved} instantSave={instantSave} />\r\n    <HeaderMiddle {...undoProps} />\r\n    <HeaderRight instantSave={instantSave} />\r\n  </header>\r\n);\r\n","import React, {\r\n  FC,\r\n  useMemo,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useCallback,\r\n} from \"react\";\r\nimport { NoteInfo, NotePage, createPage, defaultNotePage } from \"lib/note/note\";\r\nimport { DrawCtrlProvider } from \"lib/draw/DrawCtrl\";\r\nimport { NewPageInfo, ReorderInfo, SyncInfo } from \"lib/network/io\";\r\nimport { DarkModeProvider } from \"lib/Dark\";\r\nimport { useMemoizedFn as useEvent } from \"ahooks\";\r\nimport { SetOperation, StateSet } from \"lib/draw/StateSet\";\r\nimport { loadNote, editNoteData } from \"lib/note/archive\";\r\nimport { showPageDelMsg } from \"./tools/Messages\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport PageWrapper from \"component/PageWrapper\";\r\nimport { DrawState } from \"lib/draw/DrawState\";\r\nimport { useScrollPage } from \"./lib/scroll\";\r\nimport { debounce, last } from \"lodash-es\";\r\nimport { insertAfter } from \"./lib/array\";\r\nimport { PageNav } from \"./PageNav\";\r\nimport { AsideOpenProvider, Setter } from \"lib/hooks\";\r\nimport { AddPageButton } from \"./tools/AddButton\";\r\nimport { Header } from \"./Header\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport { Map } from \"immutable\";\r\nimport { message } from \"antd\";\r\nimport \"./reader.sass\";\r\n\r\nexport interface ReaderStates {\r\n  noteID: string;\r\n  currPageID: string;\r\n  stateSet?: StateSet;\r\n  pageRec?: Map<string, NotePage>;\r\n  pageOrder?: string[];\r\n}\r\n\r\nexport interface ReaderMethods {\r\n  scrollPage: (pageID: string) => void;\r\n  switchPageMarked: (pageID: string) => void;\r\n  addPage: (prevPageID: string, copy?: boolean) => void;\r\n  addFinalPage: () => void;\r\n  deletePage: (pageID: string) => void;\r\n  saveReorder: (order: string[], push: boolean) => Promise<void>;\r\n}\r\n\r\nexport default function Reader() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const nav = useNavigate();\r\n\r\n  const [pageRec, setPageRec] = useState<Map<string, NotePage>>();\r\n  const [noteInfo, setNoteInfo] = useState<NoteInfo>();\r\n  const [stateSet, setStateSet] = useState<StateSet>();\r\n  const [pageOrder, setPageOrder] = useState<string[]>();\r\n  const [saved, setSaved] = useState(true);\r\n\r\n  const { io, teamOn, addTeamStatePage } = useContext(TeamCtx);\r\n  const { setInviewRatios, scrollPage, sectionRef, currPageID, scrolling } =\r\n    useScrollPage(noteID, pageOrder);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const storedNote = await loadNote(noteID);\r\n      if (!storedNote) {\r\n        message.error(\"Note not found\");\r\n        return nav(\"/\");\r\n      }\r\n      const { pageRec, pdf, pageOrder, ...noteInfo } = storedNote;\r\n      setPageRec(Map(pageRec));\r\n      setPageOrder(pageOrder);\r\n      setNoteInfo(noteInfo);\r\n      setStateSet(StateSet.createFromPages(pageRec));\r\n    })();\r\n  }, [nav, noteID, teamOn]);\r\n\r\n  useEffect(() => {\r\n    if (!noteInfo) return;\r\n    document.title = noteInfo.name + \" - Multibility\";\r\n  }, [noteInfo]);\r\n\r\n  const saver = useEvent(async () => {\r\n    const pr = pageRec?.toObject();\r\n    await editNoteData(noteID, { pageRec: pr });\r\n    setSaved(true);\r\n  });\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const debouncedSave = useCallback(debounce(saver, 2000), [saver]);\r\n  const instantSave = debouncedSave.flush;\r\n\r\n  const savePageRec = (pageID: string, cb: (prev: NotePage) => NotePage) => {\r\n    setPageRec((prev) => prev?.update(pageID, defaultNotePage, cb));\r\n    setSaved(false);\r\n    debouncedSave();\r\n  };\r\n\r\n  const saveReorder = async (pageOrder: string[], push = false) => {\r\n    setPageOrder(pageOrder);\r\n    await editNoteData(noteID, { pageOrder });\r\n    await instantSave();\r\n    push && pushReorder(pageOrder);\r\n  };\r\n\r\n  const pushReorder = (pageOrder: string[]) =>\r\n    io?.emit(\"reorder\", { pageOrder });\r\n\r\n  const handleReorder = useEvent(\r\n    ({ deleted, pageOrder, prevOrder }: ReorderInfo) => {\r\n      saveReorder(pageOrder);\r\n      if (!deleted) return;\r\n      showPageDelMsg(() => saveReorder(prevOrder, true));\r\n    }\r\n  );\r\n\r\n  const handleNewPage = useEvent(\r\n    ({ pageOrder, pageID, newPage }: NewPageInfo) => {\r\n      saveReorder(pageOrder);\r\n      savePageRec(pageID, () => newPage);\r\n      setStateSet((prev) => prev?.addState(pageID, newPage));\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    io?.on(\"reorder\", handleReorder);\r\n    io?.on(\"newPage\", handleNewPage);\r\n    return () => void io?.removeAllListeners();\r\n  }, [io, handleReorder, handleNewPage]);\r\n\r\n  const pushOperation = (operation: SetOperation) => {\r\n    const handleSync = ({ pageID, stroke }: SyncInfo) =>\r\n      setStateSet((prev) => prev?.syncStrokeTime(pageID, stroke));\r\n\r\n    io?.emit(\"push\", { operation }, handleSync);\r\n  };\r\n\r\n  const pushNewPage = (\r\n    pageOrder: string[],\r\n    pageID: string,\r\n    newPage: NotePage\r\n  ) => {\r\n    const { image, marked, ...newTeamPage } = newPage;\r\n    io?.emit(\"newPage\", { pageOrder, pageID, newPage: newTeamPage });\r\n    addTeamStatePage(pageID, newPage);\r\n  };\r\n\r\n  const updatePageRec = (pageID: string, ds: DrawState) => {\r\n    const state = DrawState.flaten(ds);\r\n    savePageRec(pageID, (prev) => ({ ...prev, state }));\r\n  };\r\n\r\n  const updateStateSet = (cb: (prevSS: StateSet) => StateSet) => {\r\n    if (!stateSet) return;\r\n    const newSS = cb(stateSet);\r\n    if (newSS === stateSet) return;\r\n    setStateSet(newSS);\r\n    const lastDS = newSS.getLastDS();\r\n    const lastOp = newSS.lastOp;\r\n    if (!lastDS || !lastOp) return;\r\n    updatePageRec(...lastDS);\r\n    pushOperation(lastOp);\r\n  };\r\n\r\n  const switchPageMarked = (pageID: string) =>\r\n    savePageRec(pageID, (prev) => ({ ...prev, marked: !prev.marked }));\r\n\r\n  const addPage = (prevPageID: string, copy = false) => {\r\n    if (!pageOrder) return;\r\n    const prevPage = copy ? pageRec?.get(prevPageID) : undefined;\r\n    const [pageID, newPage] = createPage(prevPage);\r\n    const newOrder = insertAfter(pageOrder, prevPageID, pageID);\r\n    pushNewPage(newOrder, pageID, newPage);\r\n    saveReorder(newOrder);\r\n    savePageRec(pageID, () => newPage);\r\n    setStateSet((prev) => prev?.addState(pageID, newPage));\r\n  };\r\n\r\n  const addFinalPage = () => {\r\n    const lastPageID = last(pageOrder);\r\n    lastPageID && addPage(lastPageID);\r\n  };\r\n\r\n  const deletePage = (pageID: string) => {\r\n    const newOrder = pageOrder?.filter((id) => id !== pageID);\r\n    newOrder?.length && saveReorder(newOrder, true);\r\n  };\r\n\r\n  const readerStates = { noteID, pageRec, pageOrder, stateSet, currPageID };\r\n\r\n  const renderResult = (\r\n    <div className=\"reader container\">\r\n      <Header\r\n        saved={saved}\r\n        instantSave={instantSave}\r\n        handleUndo={() => updateStateSet((prev) => prev.undo())}\r\n        handleRedo={() => updateStateSet((prev) => prev.redo())}\r\n        undoable={stateSet?.isUndoable() ?? false}\r\n        redoable={stateSet?.isRedoable() ?? false}\r\n      />\r\n      <main>\r\n        {pageOrder?.map((uid) => (\r\n          <section key={uid} className=\"note-page\" ref={sectionRef(uid)}>\r\n            <PageContainer\r\n              uid={uid}\r\n              updateStateSet={updateStateSet}\r\n              setInviewRatios={setInviewRatios}\r\n              scrolling={scrolling}\r\n              {...readerStates}\r\n            />\r\n          </section>\r\n        ))}\r\n        <AddPageButton addFinalPage={addFinalPage} />\r\n      </main>\r\n      <PageNav\r\n        addPage={addPage}\r\n        addFinalPage={addFinalPage}\r\n        scrollPage={scrollPage}\r\n        deletePage={deletePage}\r\n        saveReorder={saveReorder}\r\n        switchPageMarked={switchPageMarked}\r\n        {...readerStates}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <AsideOpenProvider>\r\n      <DarkModeProvider>\r\n        <DrawCtrlProvider>{renderResult}</DrawCtrlProvider>\r\n      </DarkModeProvider>\r\n    </AsideOpenProvider>\r\n  );\r\n}\r\n\r\nconst PageContainer: FC<\r\n  {\r\n    uid: string;\r\n    updateStateSet: (cb: (prevSS: StateSet) => StateSet) => void;\r\n    setInviewRatios: Setter<Map<string, number>>;\r\n    scrolling: boolean;\r\n  } & ReaderStates\r\n> = ({\r\n  uid,\r\n  updateStateSet,\r\n  setInviewRatios,\r\n  scrolling,\r\n  pageRec,\r\n  stateSet,\r\n  currPageID,\r\n  pageOrder,\r\n  noteID,\r\n}) => {\r\n  const { teamState, ignores } = useContext(TeamCtx);\r\n\r\n  const page = pageRec?.get(uid);\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamStateMap = teamState?.getOnePageStateMap(uid);\r\n  const updateState = useEvent((ds: DrawState) => {\r\n    updateStateSet((prev) => prev.setState(uid, ds));\r\n  });\r\n\r\n  const onViewChange = useEvent((ratio: number) => {\r\n    if (!ratio) return setInviewRatios((prev) => prev.delete(uid));\r\n    setInviewRatios((prev) => prev.set(uid, ratio));\r\n  });\r\n\r\n  const preload = useMemo(() => {\r\n    if (!pageOrder) return false;\r\n    const currIndex = pageOrder.indexOf(currPageID);\r\n    const selfIndex = pageOrder.indexOf(uid);\r\n    return Math.abs(selfIndex - currIndex) <= 1;\r\n  }, [currPageID, uid, pageOrder]);\r\n\r\n  if (!page || !drawState) return null;\r\n  return (\r\n    <PageWrapper\r\n      drawState={drawState}\r\n      teamStateMap={teamStateMap}\r\n      updateState={updateState}\r\n      pdfIndex={page.pdfIndex}\r\n      noteID={noteID}\r\n      ignores={ignores}\r\n      onViewChange={onViewChange}\r\n      preload={preload}\r\n      skipInView={scrolling}\r\n    />\r\n  );\r\n};\r\n","import { io } from \"socket.io-client\";\r\nimport { Stroke } from \"lib/draw/DrawState\";\r\nimport { NotePage } from \"lib/note/note\";\r\nimport { getUserID, getUserName } from \"lib/user\";\r\nimport { BASE_URL } from \"./http\";\r\n\r\nexport const IoFactory = (noteID: string) => () =>\r\n  io(BASE_URL, {\r\n    query: {\r\n      userID: getUserID(),\r\n      userName: getUserName(),\r\n      noteID,\r\n    },\r\n  });\r\n\r\nexport interface ReorderInfo {\r\n  pageOrder: string[];\r\n  prevOrder: string[];\r\n  deleted: boolean;\r\n}\r\n\r\nexport interface NewPageInfo {\r\n  pageOrder: string[];\r\n  pageID: string;\r\n  newPage: NotePage;\r\n}\r\n\r\nexport interface SyncInfo {\r\n  stroke: Stroke;\r\n  pageID: string;\r\n}\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  getTeamNoteState,\r\n  loadTeamNoteInfo,\r\n  updatePages,\r\n} from \"lib/network/http\";\r\nimport { IoFactory, NewPageInfo } from \"lib/network/io\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { showJoinMsg, showLeaveMsg } from \"./tools/Messages\";\r\nimport { TeamState } from \"lib/draw/TeamState\";\r\nimport { getUserID, UserInfo } from \"lib/user\";\r\nimport { NotePage } from \"lib/note/note\";\r\nimport { Socket } from \"socket.io-client\";\r\nimport { Setter } from \"lib/hooks\";\r\nimport { Loading } from \"component/Loading\";\r\nimport { message } from \"antd\";\r\nimport { Set } from \"immutable\";\r\nimport Reader from \"./Reader\";\r\n\r\nexport const TeamCtx = React.createContext({\r\n  io: undefined as Socket | undefined,\r\n  code: 0,\r\n  teamOn: false,\r\n  connected: false,\r\n  ignores: Set<string>(),\r\n  userRec: {} as Record<string, UserInfo>,\r\n  teamState: undefined as TeamState | undefined,\r\n  resetIO: () => {},\r\n  loadInfo: async () => false,\r\n  loadState: async () => false,\r\n  setIgnores: (() => {}) as Setter<Set<string>>,\r\n  addTeamStatePage: (pageID: string, newPage: NotePage) => {},\r\n});\r\n\r\nexport default function Team() {\r\n  const noteID = useParams().noteID ?? \"\";\r\n  const [teamState, setTeamState] = useState<TeamState>();\r\n  const [code, setCode] = useState(-2);\r\n  const [userRec, setUserRec] = useState<Record<string, UserInfo>>({});\r\n  const [ignores, setIgnores] = useState(Set<string>());\r\n  const [io, setIO] = useState(IoFactory(noteID));\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [connected, setConnected] = useState(false);\r\n  const nav = useNavigate();\r\n\r\n  const loadInfo = useCallback(async () => {\r\n    const info = await loadTeamNoteInfo(noteID);\r\n    if (!info) {\r\n      message.error(\"Failed loading the team note info\");\r\n      return false;\r\n    }\r\n    setCode(info.code);\r\n    return true;\r\n  }, [noteID]);\r\n\r\n  const loadState = useCallback(async () => {\r\n    const teamNote = await getTeamNoteState(noteID);\r\n    if (!teamNote) {\r\n      message.error(\"Failed loading the team note state\");\r\n      return false;\r\n    }\r\n    setTeamState(TeamState.createFromTeamPages(teamNote));\r\n    return true;\r\n  }, [noteID]);\r\n\r\n  const updateSelfState = useCallback(() => {\r\n    updatePages(noteID);\r\n  }, [noteID]);\r\n\r\n  useEffect(() => {\r\n    const roomInit = async () => {\r\n      const infoLoaded = await loadInfo();\r\n      const stateLoaded = await loadState();\r\n      if (!infoLoaded || !stateLoaded) return nav(\"/\");\r\n      setLoaded(true);\r\n      updateSelfState();\r\n    };\r\n    roomInit();\r\n    return updateSelfState;\r\n  }, [loadInfo, loadState, nav, updateSelfState]);\r\n\r\n  useEffect(() => {\r\n    io.on(\"push\", ({ operation, userID }) => {\r\n      setTeamState((prev) => prev?.pushOperation(operation, userID));\r\n    });\r\n\r\n    io.on(\"join\", ({ joined, members }) => {\r\n      const { userID, userName } = joined;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return;\r\n      showJoinMsg(userID, userName);\r\n    });\r\n\r\n    io.on(\"leave\", ({ leaved, members }) => {\r\n      const { userID, userName } = leaved;\r\n      setUserRec(members);\r\n      if (userID === getUserID()) return io.emit(\"join\");\r\n      showLeaveMsg(userID, userName);\r\n    });\r\n\r\n    io.on(\"newPage\", (info: NewPageInfo) => {\r\n      const { pageID, newPage } = info;\r\n      setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n    });\r\n\r\n    io.on(\"reset\", ({ userID, pageRec }) => {\r\n      if (userID === getUserID()) return;\r\n      setTeamState((prev) => prev?.resetUser(userID, pageRec));\r\n    });\r\n\r\n    io.on(\"connect_error\", console.error);\r\n    io.on(\"connect\", () => setConnected(true));\r\n    io.on(\"disconnect\", () => setConnected(false));\r\n\r\n    return () => {\r\n      io.removeAllListeners();\r\n      io.close();\r\n    };\r\n  }, [io]);\r\n\r\n  const addTeamStatePage = (pageID: string, newPage: NotePage) => {\r\n    setTeamState((prev) => prev?.addPage(pageID, newPage));\r\n  };\r\n\r\n  const resetIO = () => setIO(IoFactory(noteID));\r\n\r\n  return (\r\n    <Loading loading={!loaded}>\r\n      <TeamCtx.Provider\r\n        value={{\r\n          io,\r\n          code,\r\n          teamOn: true,\r\n          ignores,\r\n          userRec,\r\n          connected,\r\n          teamState,\r\n          resetIO,\r\n          loadInfo,\r\n          loadState,\r\n          setIgnores,\r\n          addTeamStatePage,\r\n        }}\r\n      >\r\n        <Reader />\r\n      </TeamCtx.Provider>\r\n    </Loading>\r\n  );\r\n}\r\n","import { Button, message } from \"antd\";\r\nimport { LoginOutlined, LogoutOutlined } from \"@ant-design/icons\";\r\n\r\nexport const showPageDelMsg = (onUndo: () => void) => {\r\n  message.warning({\r\n    content: (\r\n      <>\r\n        One page was deleted.\r\n        <Button\r\n          size=\"small\"\r\n          type=\"link\"\r\n          onClick={() => {\r\n            message.destroy(\"DELETE\");\r\n            onUndo();\r\n          }}\r\n        >\r\n          Undo\r\n        </Button>\r\n      </>\r\n    ),\r\n    key: \"DELETE\",\r\n    duration: 10,\r\n  });\r\n};\r\n\r\nexport const showJoinMsg = (userID: string, userName: string) => {\r\n  message.destroy(userID);\r\n  message.success({\r\n    content: `${userName} joined the room`,\r\n    icon: <LoginOutlined />,\r\n    key: userID,\r\n  });\r\n};\r\n\r\nexport const showLeaveMsg = (userID: string, userName: string) => {\r\n  message.destroy(userID);\r\n  message.warning({\r\n    content: `${userName} leaved the room`,\r\n    icon: <LogoutOutlined />,\r\n    key: userID,\r\n  });\r\n};\r\n"],"names":["defaultRecord","states","Map","editStack","List","undoStack","defaultFactory","Record","StateSet","immutable","lastOp","this","getImmutable","get","pageID","getStates","drawState","prevDS","getOneState","currRecord","update","s","set","l","push","delete","stroke","DrawState","notePage","state","ratio","newDS","getEditStack","size","getUndoStack","isUndoable","lastUid","last","lastSetOp","pop","isRedoable","ds","pageRec","map","scrollForage","localforage","name","persistScroll","debounce","noteID","currPageID","setItem","largestKey","order","result","maxRatio","key","insertAfter","list","prevItem","newItem","prevIndex","indexOf","curr","slice","splice","UserAvatar","userInfo","onClick","chosen","className","color","useMemo","getHashedColor","userID","userName","style","backgroundColor","AddPageButton","addFinalPage","type","icon","PlusOutlined","block","PageNav","props","useState","left","setLeft","useAsideOpen","asideOpen","opposite","draggableId","index","isDragDisabled","innerRef","ref","CSSTransition","in","timeout","unmountOnExit","initKey","onDragEnd","destination","droppableId","direction","droppableProps","placeholder","isDraggingOver","PreviewCard","useActiveKey","activeKey","setAsideOpen","title","ALL","MARKED","WRITTEN","useSwipeable","onSwipedLeft","onSwipedRight","swipeDuration","swipeRef","swipeHandler","draggableProps","dragHandleProps","isDragging","isDropAnimating","e","PreviewTabs","PageList","cardDragged","React","refRec","useRef","pageOrder","saveReorder","initScroll","useEvent","current","scrollIntoView","useLayoutEffect","source","fromIndex","toIndex","newOrder","removed","exchange","isDropDisabled","uid","PagePreview","pageIndex","displayName","stateSet","scrollPage","useContext","TeamCtx","teamState","ignores","setChosen","page","teamStateMap","getOnePageStateMap","marked","userIDs","TeamState","isEmpty","PageWrapper","undefined","thumbnail","image","preview","skipInView","PreviewTools","switchPageMarked","stopPropagation","PreviewOption","TeamAvatars","userRec","maxCount","classNames","maxPopoverPlacement","prev","addPage","deletePage","menu","items","label","CopyOutlined","DeleteOutlined","danger","content","trigger","placement","destroyTooltipOnHide","getPopupContainer","parentElement","MoreOutlined","setActiveKey","TabPane","Tabs","onChange","tabBarGutter","centered","tab","IconFont","HeaderLeft","saved","instantSave","nav","useNavigate","HomeFilled","opacity","disabled","SaveOutlined","HeaderMiddle","handleUndo","handleRedo","undoable","redoable","useDrawCtrl","mode","finger","updateDrawCtrl","useUpdateDrawCtrl","useForceLight","forceLight","setForceLight","UndoOutlined","RedoOutlined","message","BulbFilled","BulbOutlined","PenButton","EraserButton","SelectButton","drawCtrl","PenPanel","HighlightTwoTone","twoToneColor","HighlightOutlined","pixelEraser","options","value","field","lasso","GatewayOutlined","HeaderRight","teamOn","RoomInfo","JoinRoom","PageNavButton","MenuOutlined","UserCard","renaming","setRenaming","setIgnores","resetIO","useEffect","online","self","getUserID","ignored","has","Search","autoFocus","defaultValue","onSearch","trim","saveUserName","enterButton","CheckOutlined","FormOutlined","EyeInvisibleOutlined","EyeOutlined","add","code","connected","loadInfo","loadState","link","window","location","href","share","copy","document","console","log","userList","selfID","selfInfo","otherUsers","values","Object","filter","onlineNum","length","teamPop","DisconnectOutlined","showIcon","banner","String","plain","ShareAltOutlined","u","reloading","setReloading","shape","loading","ReloadOutlined","status","count","TeamOutlined","useParams","createRoom","putNote","editNoteData","team","UsergroupAddOutlined","Modal","onOk","Header","undoProps","Reader","setPageRec","noteInfo","setNoteInfo","setStateSet","setPageOrder","setSaved","io","addTeamStatePage","refMap","setRefMap","scrolled","prevPageID","setPrevPageID","getItem","stored","inviewRatios","setInviewRatios","deferredRatios","useDeferredValue","useDebugValue","requestAnimationFrame","calcScrollY","section","header","previousElementSibling","getBoundingClientRect","top","height","scrollY","scrollToCurr","scrollBy","sectionRef","el","taskID","scrolling","setScrolling","addEventListener","handleScroll","cancelAnimationFrame","removeEventListener","behavior","useScrollPage","loadNote","storedNote","pdf","createFromPages","saver","pr","toObject","debouncedSave","useCallback","flush","savePageRec","cb","defaultNotePage","pushReorder","emit","handleReorder","deleted","prevOrder","showPageDelMsg","handleNewPage","newPage","addState","on","removeAllListeners","pushNewPage","newTeamPage","updatePageRec","updateStateSet","newSS","operation","lastDS","getLastDS","syncStrokeTime","prevPage","createPage","lastPageID","readerStates","renderResult","undo","redo","PageContainer","id","Dark","DrawCtrl","updateState","setState","onViewChange","preload","currIndex","selfIndex","Math","abs","pdfIndex","IoFactory","BASE_URL","query","getUserName","Set","Team","setTeamState","setCode","setUserRec","setIO","loaded","setLoaded","setConnected","loadTeamNoteInfo","info","getTeamNoteState","teamNote","updateSelfState","updatePages","roomInit","infoLoaded","stateLoaded","pushOperation","joined","members","showJoinMsg","leaved","showLeaveMsg","resetUser","error","close","Loading","Provider","onUndo","duration"],"sourceRoot":""}