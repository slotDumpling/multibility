{"version":3,"sources":["lib/draw/DrawState.ts","lib/note/note.ts","lib/user.ts","lib/color.ts","lib/draw/drawer.ts","lib/note/pdfImage.ts","lib/note/archive.ts","lib/network/http.ts","component/ui/DigitInput.tsx","component/menu/RightTools.tsx","component/menu/LeftTools.tsx","component/menu/SideMenu.tsx","component/ui/default.png","lib/hooks.ts","component/menu/NoteList.tsx","component/menu/MainMenu.tsx","component/draw/Draw.tsx","lib/touch/touch.ts","lib/draw/StateSet.ts","component/reader/Team.tsx","lib/network/io.ts","component/ui/DigitDisplay.tsx","component/ui/IconFont.tsx","lib/array.ts","component/reader/ReaderTools.tsx","component/reader/PageNav.tsx","component/reader/DrawTools.tsx","component/reader/Reader.tsx","component/Test.tsx","index.tsx"],"names":["defaultRecord","state","strokes","List","uidStack","undoStack","OrderedSet","eraseStack","deleted","Set","defaultFactory","Record","DrawState","immutable","width","height","lastOp","this","getImmutable","get","getDeleted","undo","getUndoStack","getEraseStack","filter","uid","has","erase","getValidEraseStack","getStrokes","some","s","erased","last","size","drawState","getUidStack","type","undoUid","set","update","add","pop","redoUid","butLast","push","newStroke","getUid","stroke","pushStroke","pushedState","mergeUndo","d","concat","pushErase","immuErase","RedoUid","delete","mergedRecord","reduce","prev","e","deletedAll","toArray","drawStateRecord","createEmptyNote","pageId","name","Date","now","tagId","team","withImg","pageRec","ratio","pageOrder","createPage","page","getUserId","cached","userId","localStorage","getItem","setItem","getUserName","slice","colors","getRandomColor","index","Math","floor","random","length","createVirtualCanvas","canvas","document","createElement","context","getContext","Error","releaseCanvas","ctx","clearRect","getCanvasBlob","Promise","res","toBlob","getPageImage","pdf","pageNum","scale","a","getPage","viewport","getViewport","console","log","render","canvasContext","transform","promise","blob","getImages","url","progressCb","pdfjs","numPages","blobs","ratios","i","images","getOneImage","getOneImageFromFile","file","URL","createObjectURL","revokeObjectURL","LoadPDF","forEach","image","idx","pdfIndex","replace","thumbnail","loadPDFImages","workerSrc","pdfjsWorker","getAllNotes","localforage","allNotes","getAllTags","tags","storeTag","newTag","color","notes","deleteTag","editTag","tag","editedTag","loadNote","editNoteData","noteDate","noteInfo","prevNote","saveNoteInfo","createNewNote","note","deleteNote","removeItem","id","moveNoteTag","noteId","prevTagId","convertTeamPage","teamPages","notePages","Object","entries","key","states","values","flat","saveTeamNote","updateTeamNote","pageInfos","undefined","BASE_URL","getNoteId","roomCode","axios","data","statusCode","error","loadTeamNote","method","responseType","File","putNote","put","formData","FormData","arrayBuffer","ab","Blob","append","headers","code","updatePages","getTeamNoteState","getTeamNoteInfo","preloadTeamNote","defaults","baseURL","interceptors","request","use","config","DigitInput","value","digitNum","onChange","onSubmit","num2digits","num","Array","fill","String","padEnd","split","map","useState","nowFocused","setNowFocused","digits","setDigits","focus","inputRefs","current","el","blur","useEffect","newDigits","findIndex","newValue","Number","join","useRef","handleKeyUp","max","className","ref","pattern","val","test","handleChange","target","onKeyUp","onClick","OthersStateUpdateCtx","createContext","setActive","RightTools","JoinTeamButton","OthersMenu","useContext","Item","Menu","FilePdfOutlined","UserOutlined","SettingOutlined","SeconaryMenu","children","title","shape","icon","ArrowLeftOutlined","level","UploadPdfPage","loading","setLoading","tagUid","MenuStateCtx","MenuMethodCtx","setAllTags","setAllNotes","percent","setPercent","message","success","disabled","multiple","action","accept","beforeUpload","InboxOutlined","ProfilePage","userName","setName","prefix","trim","setUserName","block","SettingsPage","menuInit","clearAll","clear","onConfirm","ClearOutlined","okText","okType","cancelText","placement","danger","OthersPage","setHeight","active","cssProps","timeout","onEnter","clientHeight","unmountOnExit","cssProps2","classNames","Provider","style","CSSTransition","in","OthersButton","trigger","content","zIndex","CaretDownOutlined","setRoomCode","nav","useNavigate","dismiss","destroyTooltipOnHide","TeamOutlined","LeftTools","editing","setEditing","swichEditing","htmlFor","MenuOutlined","CheckOutlined","EditOutlined","TagCircle","backgroundColor","TagItem","noteTag","setTagUid","tagEditing","setTagEditing","tagName","setTagName","tagColor","setTagColor","newAllTags","colorSelector","onSelect","c","Option","TagNameInput","addonBefore","MinusCircleOutlined","CloseOutlined","AddTag","popContent","placeholder","onSearch","allowClear","enterButton","PlusOutlined","TagOutlined","SideMenu","allTags","defaultSelectedKeys","defaultOpenKeys","mode","ProfileOutlined","useObjectUrl","obj","useMemo","prevUrl","NoteList","noteList","NoteItem","noteName","setNoteName","imgLoaded","setImgLoaded","href","removeNote","move","TagButton","overlay","t","TagsOutlined","DeleteButton","DeleteOutlined","src","dafaultImg","alt","onLoad","CloudOutlined","onBlur","MainMenu","selectedTag","keys","then","NewNoteButton","FormOutlined","Draw","erasing","finger","lineWidth","highlight","readonly","preview","canvasEl","scope","paper","PaperScope","group","path","setErased","handleDown","activate","Path","strokeColor","Color","alpha","strokeWidth","strokeCap","clientWidth","updateRatio","handleDrag","point","multiply","smooth","p","intersects","handleUp","eraseStrokes","simplify","pathData","addStroke","preventTouch","touch","touches","touchType","isStylus","isEventValid","stopPropagation","setup","view","viewSize","r","Point","setupPaper","cvs","onMouseDown","onMouseDrag","onMouseUp","remove","Group","getValidStrokes","opacity","addChild","removeChildren","onTouchStartCapture","onTouchMoveCapture","React","memo","Map","editStack","Rec","StateSet","newImmu","getStates","notePage","loadFromFlat","getEditStack","isUndoable","immu","lastUid","prevDS","lastSetOp","newDS","isRedoable","redo","SetOp","ds","prevDs","pushUndo","pushRedo","setState","getOneState","list","createFromList","TeamCtx","userList","loadInfo","teamStateSet","pushOperation","teamUpdate","updateReorder","updateNewPage","Team","useParams","setTeamStateSet","setCode","setUserList","io","autoConnect","query","IoFactory","ws","setTeamUpdate","loadState","createFromPages","WIDTH","info","roomInit","on","operation","joined","members","destroy","LoginOutlined","marginTop","leaved","warning","LogoutOutlined","pageInfo","newPage","newNotePage","addState","connect","roomDestroy","removeAllListeners","disconnect","op","emit","marked","newTeamPage","Reader","teamOn","DigitDisplay","randomNum","setRandomNum","padStart","resetRandom","timer","setTimeout","clearTimeout","Digit","digit","createFromIconfontCN","scriptUrl","insertAfter","prevItem","newItem","prevIndex","indexOf","curr","splice","AddPageButton","addFinalPage","ReaderMethodCtx","ReaderStateCtx","empty","Boolean","PageNavContent","activeKey","setActiveKey","inviewPages","setPageOrder","scrollPage","currPageId","find","onDragEnd","source","destination","fromIndex","toIndex","newOrder","result","removed","exchange","requestAnimationFrame","droppableId","droppableProps","innerRef","pageIndex","PagePreview","stateSet","switchPageMarked","teamState","isEmpty","switchMarked","dragDisabled","draggableId","isDragDisabled","draggableProps","dragHandleProps","isDragging","PageWrapper","imageBlob","onClickCapture","PreviewOption","popShow","setPopShow","addPage","deletePage","menu","domEvent","CopyOutlined","visible","onVisibleChange","MoreOutlined","PreviewTabs","TabPane","Tabs","centered","tabBarGutter","tab","PageNav","navOn","setNavOn","ALL","MARKED","WRITTEN","MenuFoldOutlined","onClose","closeIcon","MenuUnfoldOutlined","bodyStyle","padding","overflow","forceRender","DrawTools","setDrawCtrl","handleUndo","handleRedo","instantSave","DrawCtrlCtx","saved","updateDrawCtrl","updated","HomeFilled","SaveOutlined","UndoOutlined","RedoOutlined","PenButton","ghost","RoomInfo","HighlightOutlined","getPopupContainer","PenPanel","min","ColorSelect","checked","borderColor","UserCard","userInfo","str","hash","charCodeAt","hashCode","getHashedColor","u","ReloadOutlined","defaultVisible","JoinRoom","createRoom","defaultDrawCtrl","even","pdfUrl","refRec","setInviewPages","setPageState","setPageRec","setNoteInfo","setStateSet","drawCtrl","setSaved","setPdfUrl","loaded","setLoaded","loadNotePages","storedNote","debouncedSave","useCallback","debounce","pr","flush","noteDestroy","useBeforeunload","handleReorder","teamOrder","JSON","stringify","updatePageRec","flaten","prevPageId","copy","prevPage","renderResult","newSS","getLastDs","scrollIntoView","lastPageId","omit","deleteState","PageContainer","updateState","realImage","setRealImage","useInView","delay","visibleRef","thumbnailUrl","imgUrl","handleRef","loadImage","called","TeamDraw","SelfDraw","DrawWrapper","maskShow","displayName","fn","Test","placeholderEl","ReactDOM","element","getElementById"],"mappings":"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","file":"static/js/main.73c83188.chunk.js","sourcesContent":["import { List, OrderedSet, Record, Set } from \"immutable\";\r\nimport { Dispatch, SetStateAction } from \"react\";\r\nimport { v4 as getUid } from \"uuid\";\r\n\r\nexport interface Stroke {\r\n  uid: string;\r\n  color: string;\r\n  lineWidth: number;\r\n  pathData: string;\r\n  highlight: boolean;\r\n}\r\n\r\ninterface Erase {\r\n  uid: string;\r\n  erased: string[];\r\n}\r\n\r\ninterface ImmuErase {\r\n  uid: string;\r\n  erased: Set<string>;\r\n}\r\n\r\nexport type Operation =\r\n  | {\r\n      type: \"add\";\r\n      stroke: Stroke;\r\n    }\r\n  | {\r\n      type: \"erase\";\r\n      erase: Erase;\r\n    }\r\n  | {\r\n      type: \"undo\";\r\n      undoUid: string;\r\n    }\r\n  | {\r\n      type: \"redo\";\r\n      redoUid: string;\r\n    };\r\n\r\ninterface DrawStateRecordType {\r\n  state: \"drawing\" | \"revoking\";\r\n  strokes: List<Stroke>;\r\n  uidStack: List<string>;\r\n  undoStack: OrderedSet<string>;\r\n  eraseStack: List<ImmuErase>;\r\n  deleted: Set<string>;\r\n}\r\n\r\ntype DrawStateRecord = Record<DrawStateRecordType>;\r\n\r\nconst defaultRecord: Readonly<DrawStateRecordType> = {\r\n  state: \"drawing\",\r\n  strokes: List(),\r\n  uidStack: List(),\r\n  undoStack: OrderedSet(),\r\n  eraseStack: List(),\r\n  deleted: Set(),\r\n};\r\n\r\nconst defaultFactory = Record(defaultRecord);\r\n\r\nexport interface FlatState {\r\n  strokes: Stroke[];\r\n}\r\n\r\nexport const getDefaultFlatState = () => {\r\n  return { strokes: [] } as FlatState;\r\n};\r\n\r\nexport class DrawState {\r\n  constructor(\r\n    private immutable: DrawStateRecord,\r\n    public readonly width: number,\r\n    public readonly height: number,\r\n    public lastOp?: Operation\r\n  ) {}\r\n\r\n  getImmutable() {\r\n    return this.immutable;\r\n  }\r\n\r\n  getUidStack() {\r\n    return this.getImmutable().get(\"uidStack\");\r\n  }\r\n\r\n  getUndoStack() {\r\n    return this.getImmutable().get(\"undoStack\");\r\n  }\r\n\r\n  getEraseStack() {\r\n    return this.getImmutable().get(\"eraseStack\");\r\n  }\r\n\r\n  getValidEraseStack() {\r\n    const deleted = this.getDeleted();\r\n    const undo = this.getUndoStack();\r\n    return this.getEraseStack().filter(\r\n      ({ uid }) => !deleted.has(uid) && !undo.has(uid)\r\n    );\r\n  }\r\n\r\n  getStrokes() {\r\n    return this.getImmutable().get(\"strokes\");\r\n  }\r\n\r\n  getValidStrokes() {\r\n    const deleted = this.getDeleted();\r\n    const undo = this.getUndoStack();\r\n    const erase = this.getValidEraseStack();\r\n    return this.getStrokes().filter(\r\n      ({ uid }) =>\r\n        !deleted.has(uid) &&\r\n        !undo.has(uid) &&\r\n        !erase.some((s) => s.erased.has(uid))\r\n    );\r\n  }\r\n\r\n  getDeleted() {\r\n    return this.getImmutable().get(\"deleted\");\r\n  }\r\n\r\n  getState() {\r\n    return this.getImmutable().get(\"state\");\r\n  }\r\n\r\n  getLastStroke() {\r\n    return this.getImmutable().get(\"strokes\").last();\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.getStrokes().size === 0;\r\n  }\r\n\r\n  static createEmpty(width: number, height: number) {\r\n    return new DrawState(defaultFactory(), width, height);\r\n  }\r\n\r\n  static undo(drawState: DrawState) {\r\n    const uid = drawState.getUidStack().last();\r\n\r\n    if (!uid) return drawState;\r\n\r\n    const lastOp: Operation = { type: \"undo\", undoUid: uid };\r\n\r\n    return new DrawState(\r\n      drawState\r\n        .getImmutable()\r\n        .set(\"state\", \"revoking\")\r\n        .update(\"undoStack\", (s) => s.add(uid))\r\n        .update(\"uidStack\", (s) => s.pop()),\r\n      drawState.width,\r\n      drawState.height,\r\n      lastOp\r\n    );\r\n  }\r\n\r\n  static redo(drawState: DrawState) {\r\n    const undo = drawState.getUndoStack();\r\n    const uid = undo.last();\r\n    if (!uid) return drawState;\r\n\r\n    const lastOp: Operation = { type: \"redo\", redoUid: uid };\r\n\r\n    return new DrawState(\r\n      drawState\r\n        .getImmutable()\r\n        .update(\"undoStack\", (s) => s.butLast())\r\n        .update(\"uidStack\", (s) => s.push(uid)),\r\n      drawState.width,\r\n      drawState.height,\r\n      lastOp\r\n    );\r\n  }\r\n\r\n  static addStroke(drawState: DrawState, newStroke: Omit<Stroke, \"uid\">) {\r\n    const uid = getUid();\r\n    const stroke = { ...newStroke, uid };\r\n    return DrawState.pushStroke(drawState, stroke);\r\n  }\r\n\r\n  static pushStroke(drawState: DrawState, stroke: Stroke) {\r\n    const undo = drawState.getUndoStack();\r\n    const pushedState = mergeUndo(\r\n      drawState\r\n        .getImmutable()\r\n        .set(\"state\", \"drawing\")\r\n        .update(\"deleted\", (d) => d.concat(undo))\r\n        .set(\"undoStack\", OrderedSet())\r\n        .update(\"strokes\", (s) => s.push(stroke))\r\n        .update(\"uidStack\", (s) => s.push(stroke.uid))\r\n    );\r\n\r\n    const lastOp: Operation = { type: \"add\", stroke };\r\n\r\n    return new DrawState(\r\n      pushedState,\r\n      drawState.width,\r\n      drawState.height,\r\n      lastOp\r\n    );\r\n  }\r\n\r\n  static eraseStrokes(drawState: DrawState, erased: string[]) {\r\n    const erase = { uid: getUid(), erased };\r\n    return DrawState.pushErase(drawState, erase);\r\n  }\r\n\r\n  static pushErase(drawState: DrawState, erase: Erase) {\r\n    const { uid, erased } = erase;\r\n    const immuErase: ImmuErase = { uid, erased: Set(erased) };\r\n\r\n    const lastOp: Operation = { type: \"erase\", erase };\r\n\r\n    return new DrawState(\r\n      drawState\r\n        .getImmutable()\r\n        .update(\"eraseStack\", (s) => s.push(immuErase))\r\n        .update(\"uidStack\", (s) => s.push(uid)),\r\n      drawState.width,\r\n      drawState.height,\r\n      lastOp\r\n    );\r\n  }\r\n\r\n  static pushUndo(drawState: DrawState, undoUid: string) {\r\n    return new DrawState(\r\n      drawState.getImmutable().update(\"undoStack\", (s) => s.add(undoUid)),\r\n      drawState.width,\r\n      drawState.height\r\n    );\r\n  }\r\n\r\n  static pushRedo(drawState: DrawState, RedoUid: string) {\r\n    return new DrawState(\r\n      drawState.getImmutable().update(\"undoStack\", (s) => s.delete(RedoUid)),\r\n      drawState.width,\r\n      drawState.height\r\n    );\r\n  }\r\n\r\n  static flaten(drawState: DrawState): FlatState {\r\n    const mergedRecord = mergeUndo(drawState.getImmutable());\r\n    const deleted = mergedRecord.get(\"deleted\");\r\n    const erased = drawState.getValidEraseStack().reduce((prev, e) => {\r\n      return prev.concat(e.erased);\r\n    }, Set<string>());\r\n\r\n    const deletedAll = deleted.concat(erased);\r\n    const strokes = mergedRecord\r\n      .get(\"strokes\")\r\n      .filter((s) => !deletedAll.has(s.uid))\r\n      .toArray();\r\n    return { strokes };\r\n  }\r\n\r\n  static loadFromFlat(\r\n    { strokes }: FlatState,\r\n    width: number,\r\n    height: number\r\n  ): DrawState {\r\n    return new DrawState(\r\n      defaultFactory().set(\"strokes\", List(strokes)),\r\n      width,\r\n      height\r\n    );\r\n  }\r\n}\r\n\r\nfunction mergeUndo(drawStateRecord: DrawStateRecord) {\r\n  const undo = drawStateRecord.get(\"undoStack\");\r\n  return drawStateRecord\r\n    .update(\"deleted\", (d) => d.concat(undo))\r\n    .set(\"undoStack\", OrderedSet())\r\n    .update(\"uidStack\", (s) => s.filter((uid) => !undo.has(uid)));\r\n}\r\n\r\nexport type SetDrawState = Dispatch<SetStateAction<DrawState>>;\r\n","import { getDefaultFlatState, FlatState, Stroke } from \"../draw/DrawState\";\r\nimport { v4 as getUid } from \"uuid\";\r\n\r\nexport interface NotePage {\r\n  ratio: number;\r\n  state: FlatState;\r\n  image?: Blob;\r\n  marked?: boolean;\r\n  pdfIndex?: number;\r\n}\r\n\r\nexport interface TeamPageState {\r\n  states: Record<string, Stroke[]>;\r\n}\r\n\r\nexport interface TeamPageInfo {\r\n  ratio: number;\r\n  pdfIndex?: number;\r\n}\r\n\r\nexport interface TeamNote {\r\n  uid: string;\r\n  pageRec: Record<string, TeamPageState>;\r\n}\r\n\r\nexport interface NoteInfo {\r\n  uid: string;\r\n  name: string;\r\n  tagId: string;\r\n  team: boolean;\r\n  withImg: boolean;\r\n  createTime?: Date;\r\n  lastTime?: Date;\r\n  thumbnail?: Blob;\r\n}\r\n\r\nexport type Note = NoteInfo & {\r\n  pdf?: File;\r\n  pageRec: Record<string, NotePage>;\r\n  pageOrder: string[];\r\n};\r\n\r\nexport interface TeamNoteInfo {\r\n  uid: string;\r\n  name: string;\r\n  pageOrder: string[];\r\n  withImg: boolean;\r\n}\r\n\r\nexport function createEmptyNote(): Note {\r\n  const pageId = getUid();\r\n  return {\r\n    uid: getUid(),\r\n    name: `New note ${Date.now()}`,\r\n    tagId: \"DEFAULT\",\r\n    team: false,\r\n    withImg: false,\r\n    pageRec: {\r\n      [pageId]: {\r\n        ratio: 1.5,\r\n        state: getDefaultFlatState(),\r\n      },\r\n    },\r\n    pageOrder: [pageId],\r\n  };\r\n}\r\n\r\nexport function createPage(page?: NotePage): [string, NotePage] {\r\n  const pageId = getUid();\r\n  const newPage = page ?? {\r\n    ratio: 1.5,\r\n    state: getDefaultFlatState(),\r\n  };\r\n  return [pageId, newPage];\r\n}\r\n\r\nexport function createTeamPage(pageInfo: TeamPageInfo): NotePage {\r\n  return {\r\n    ...pageInfo,\r\n    state: getDefaultFlatState(),\r\n  };\r\n}\r\n","import { v4 as getUid } from \"uuid\";\r\n\r\nexport interface UserInfo {\r\n  userId: string;\r\n  userName: string;\r\n}\r\n\r\nexport const getUserId = (() => {\r\n  let cached: string;\r\n  return () => {\r\n    if (cached) return cached;\r\n    let userId = localStorage.getItem(\"user_id\");\r\n    if (!userId) {\r\n      userId = getUid();\r\n      localStorage.setItem(\"user_id\", userId);\r\n    }\r\n    cached = userId;\r\n    return userId;\r\n  };\r\n})();\r\n\r\nexport const getUserName = () => {\r\n  let name = localStorage.getItem(\"USER_NAME\");\r\n  if (!name) {\r\n    name = \"User_\" + getUid().slice(0, 8);\r\n    localStorage.setItem(\"USER_NAME\", name);\r\n  }\r\n  return name;\r\n};\r\n\r\nexport const setUserName = (name: string) => {\r\n  name = name.trim();\r\n  if (!name) return false;\r\n  else localStorage.setItem(\"USER_NAME\", name);\r\n  return true;\r\n};\r\n","export const colors = [\r\n  \"#000000\",\r\n  \"#9ca3af\",\r\n  \"#64748b\",\r\n  \"#78716c\",\r\n  \"#f97316\",\r\n  \"#eab308\",\r\n  \"#84cc16\",\r\n  \"#22c55e\",\r\n  \"#10b981\",\r\n  \"#14b8a6\",\r\n  \"#06b6d4\",\r\n  \"#0ea5e9\",\r\n  \"#3b82f6\",\r\n  \"#6366f1\",\r\n  \"#8b5cf6\",\r\n  \"#a855f7\",\r\n  \"#d946ef\",\r\n  \"#ec4899\",\r\n  \"#f43f5e\",\r\n  \"#ef4444\",\r\n];\r\n\r\nexport const getRandomColor = () => {\r\n  const index = Math.floor(Math.random() * colors.length);\r\n  return colors[index];\r\n}\r\n\r\nconst hashCode = (str: string) => {\r\n  let hash = 0;\r\n  if (str.length === 0) return hash;\r\n  for (let i = 0; i < str.length; i++) {\r\n    const chr = str.charCodeAt(i);\r\n    hash = ((hash << 5) - hash) + chr;\r\n    hash |= 0;\r\n  }\r\n  return hash;\r\n};\r\n\r\nexport const getHashedColor = (str: string) => {\r\n  const index = hashCode(str) % colors.length;\r\n  return colors[index];\r\n}","export function createVirtualCanvas(width: number, height: number) {\r\n  const canvas = document.createElement(\"canvas\");\r\n  const context = canvas.getContext(\"2d\");\r\n  if (!context) {\r\n    throw new Error(\"can't get virtual canvas context\");\r\n  }\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n  return { canvas, context };\r\n}\r\n\r\nexport function releaseCanvas(canvas: HTMLCanvasElement) {\r\n  canvas.width = 1;\r\n  canvas.height = 1;\r\n  const ctx = canvas.getContext('2d');\r\n  ctx?.clearRect(0, 0, 1, 1);\r\n}\r\n","import * as pdfjs from \"pdfjs-dist/legacy/build/pdf\";\r\n// @ts-ignore\r\nimport pdfjsWorker from \"pdfjs-dist/legacy/build/pdf.worker.entry\";\r\nimport { PDFDocumentProxy } from \"pdfjs-dist/types/src/display/api\";\r\nimport { v4 as getUid } from \"uuid\";\r\nimport { createVirtualCanvas, releaseCanvas } from \"../draw/drawer\";\r\nimport { createEmptyNote, Note, NotePage } from \"./note\";\r\npdfjs.GlobalWorkerOptions.workerSrc = pdfjsWorker;\r\n\r\nfunction getCanvasBlob(canvas: HTMLCanvasElement): Promise<Blob | null> {\r\n  return new Promise((res: BlobCallback) => {\r\n    canvas.toBlob(res);\r\n  });\r\n}\r\n\r\nasync function getPageImage(\r\n  pdf: PDFDocumentProxy,\r\n  pageNum: number,\r\n  scale: number\r\n): Promise<[Blob, number]> {\r\n  const page = await pdf.getPage(pageNum);\r\n  const viewport = page.getViewport({ scale });\r\n  console.log({viewport});\r\n\r\n  const { height, width } = viewport;\r\n  const ratio = height / width;\r\n  const { canvas, context } = createVirtualCanvas(\r\n    Math.floor(width * scale),\r\n    Math.floor(height * scale)\r\n  );\r\n\r\n  await page.render({\r\n    canvasContext: context,\r\n    viewport: viewport,\r\n    transform: [scale, 0, 0, scale, 0, 0],\r\n  }).promise;\r\n\r\n  const blob = await getCanvasBlob(canvas);\r\n  if (!blob) throw new Error(\"can't get canvas image blob\");\r\n\r\n  releaseCanvas(canvas);\r\n  \r\n  return [blob, ratio];\r\n}\r\n\r\nexport async function getImages(\r\n  url: string,\r\n  scale = 2,\r\n  progressCb?: (percent: number) => void\r\n) {\r\n  const pdf = await pdfjs.getDocument(url).promise;\r\n  const { numPages } = pdf;\r\n  const blobs: Blob[] = [];\r\n  const ratios: number[] = [];\r\n\r\n  for (let i = 1; i <= numPages; i += 1) {\r\n    const [blob, ratio] = await getPageImage(pdf, i, scale);\r\n    blobs.push(blob);\r\n    ratios.push(ratio);\r\n    if (progressCb) progressCb(Math.floor((i / numPages) * 100));\r\n  }\r\n\r\n  return {\r\n    images: blobs,\r\n    ratios,\r\n  };\r\n}\r\n\r\nexport async function getOneImage(\r\n  url: string,\r\n  index: number,\r\n  scale = 2,\r\n) {\r\n  const pdf = await pdfjs.getDocument(url).promise;\r\n  const { numPages } = pdf;\r\n  if (index > numPages) {\r\n    throw new Error('index out of range');\r\n  }\r\n  const [blob] = await getPageImage(pdf, index, scale);\r\n  return blob;\r\n}\r\n\r\nexport async function getOneImageFromFile(\r\n  file: File,\r\n  index: number,\r\n  scale = 2,\r\n) {\r\n  const url = URL.createObjectURL(file);\r\n  const blob = await getOneImage(url, index, scale);\r\n  URL.revokeObjectURL(url);\r\n  return blob;\r\n}\r\n\r\nexport async function LoadPDF(\r\n  file: File,\r\n  progressCb?: (percent: number) => void\r\n): Promise<Note> {\r\n  const url = URL.createObjectURL(file);\r\n  const { images, ratios } = await getImages(url, 0.5, progressCb);\r\n  URL.revokeObjectURL(url);\r\n  const pageRec: Record<string, NotePage> = {};\r\n  const pageOrder: string[] = [];\r\n  images.forEach((image, idx) => {\r\n    const pageId = getUid();\r\n    pageRec[pageId] = {\r\n      image,\r\n      ratio: ratios[idx],\r\n      state: {\r\n        strokes: [],\r\n      },\r\n      pdfIndex: idx + 1,\r\n    };\r\n    pageOrder.push(pageId);\r\n  });\r\n  const name = file.name.replace(\".pdf\", \"\");\r\n  return {\r\n    ...createEmptyNote(),\r\n    name,\r\n    withImg: true,\r\n    pdf: file,\r\n    thumbnail: images[0],\r\n    pageRec,\r\n    pageOrder,\r\n  };\r\n}\r\n\r\nexport async function loadPDFImages(file: File) {\r\n  const url = URL.createObjectURL(file);\r\n  const { images } = await getImages(url, 0.5);\r\n  URL.revokeObjectURL(url);\r\n  return images;\r\n}\r\n","import localforage from \"localforage\";\r\nimport {\r\n  NoteInfo,\r\n  Note,\r\n  NotePage,\r\n  TeamPageState,\r\n  TeamNoteInfo,\r\n} from \"./note\";\r\nimport { v4 as getUid } from \"uuid\";\r\nimport { getDefaultFlatState } from \"../draw/DrawState\";\r\nimport { getUserId } from \"../user\";\r\nimport { getRandomColor } from \"../color\";\r\nimport { getOneImageFromFile } from \"./pdfImage\";\r\n\r\nexport interface NoteTag {\r\n  uid: string;\r\n  name: string;\r\n  color: string;\r\n  notes: string[];\r\n}\r\n\r\nexport async function getAllNotes() {\r\n  const allNotes = await localforage.getItem(\"ALL_NOTES\");\r\n  if (allNotes) {\r\n    return allNotes as Record<string, NoteInfo>;\r\n  } else {\r\n    localforage.setItem(\"ALL_NOTES\", {});\r\n    return {};\r\n  }\r\n}\r\n\r\nexport async function getAllTags() {\r\n  const tags = await localforage.getItem(\"ALL_TAGS\");\r\n  if (tags) {\r\n    return tags as Record<string, NoteTag>;\r\n  } else {\r\n    localforage.setItem(\"ALL_TAGS\", {});\r\n    return {};\r\n  }\r\n}\r\n\r\nexport async function storeTag(name: string) {\r\n  const uid = getUid();\r\n  const newTag: NoteTag = {\r\n    uid,\r\n    name,\r\n    color: getRandomColor(),\r\n    notes: [],\r\n  };\r\n  const tags: Record<string, NoteTag> = {\r\n    ...(await getAllTags()),\r\n    [uid]: newTag,\r\n  };\r\n  await localforage.setItem(\"ALL_TAGS\", tags);\r\n\r\n  return tags;\r\n}\r\n\r\nexport async function deleteTag(uid: string) {\r\n  const tags = await getAllTags();\r\n  delete tags[uid];\r\n  await localforage.setItem(\"ALL_TAGS\", tags);\r\n\r\n  return tags;\r\n}\r\n\r\nexport async function editTag(tag: NoteTag) {\r\n  const tags = await getAllTags();\r\n  const editedTag = tags[tag.uid];\r\n  editedTag.name = tag.name;\r\n  editedTag.color = tag.color;\r\n  editedTag.notes = tag.notes;\r\n  await localforage.setItem(\"ALL_TAGS\", tags);\r\n  return tags;\r\n}\r\n\r\nexport async function loadNote(uid: string) {\r\n  return (await localforage.getItem(uid)) as Note | undefined;\r\n}\r\n\r\nexport async function editNoteData(uid: string, noteDate: Partial<Note>) {\r\n  console.log(\"edit note data\", noteDate);\r\n  const allNotes = await getAllNotes();\r\n  const { pageRec, pdf, ...noteInfo } = noteDate;\r\n  allNotes[uid] = { ...allNotes[uid], ...noteInfo };\r\n\r\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\r\n  const prevNote = await loadNote(uid);\r\n  if (!prevNote) return;\r\n  await localforage.setItem(uid, { ...prevNote, ...noteDate });\r\n}\r\n\r\nexport async function saveNoteInfo(noteInfo: NoteInfo) {\r\n  const { uid, tagId } = noteInfo;\r\n  const allNotes = await getAllNotes();\r\n  allNotes[uid] = noteInfo;\r\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\r\n  const tags = await getAllTags();\r\n  if (tagId !== \"DEFAULT\") {\r\n    tags[tagId].notes.push(noteInfo.uid);\r\n    await localforage.setItem(\"ALL_TAGS\", tags);\r\n  }\r\n  return { tags, allNotes };\r\n}\r\n\r\nexport async function createNewNote(note: Note) {\r\n  await localforage.setItem(note.uid, note);\r\n  const { pdf, pageRec, ...noteInfo } = note;\r\n  return await saveNoteInfo(noteInfo);\r\n}\r\n\r\nexport async function deleteNote(uid: string) {\r\n  const note = await loadNote(uid);\r\n  const allNotes = await getAllNotes();\r\n  const tags = await getAllTags();\r\n  if (!note) return { tags, allNotes };\r\n  await localforage.removeItem(uid);\r\n  const { pdf, pageRec, ...noteInfo } = note;\r\n  delete allNotes[uid];\r\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\r\n\r\n  const { tagId } = noteInfo;\r\n  if (tagId !== \"DEFAULT\") {\r\n    const { notes } = tags[tagId];\r\n    tags[tagId].notes = notes.filter((id) => id !== uid);\r\n    await localforage.setItem(\"ALL_TAGS\", tags);\r\n  }\r\n  return { tags, allNotes };\r\n}\r\n\r\nexport async function moveNoteTag(noteId: string, tagId: string) {\r\n  const note = await loadNote(noteId);\r\n  const allNotes = await getAllNotes();\r\n  const tags = await getAllTags();\r\n  if (!note) return { tags, allNotes };\r\n\r\n  const { tagId: prevTagId } = note;\r\n  note.tagId = tagId;\r\n  await localforage.setItem(noteId, note);\r\n  allNotes[noteId].tagId = tagId;\r\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\r\n\r\n  if (prevTagId in tags) {\r\n    tags[prevTagId].notes = tags[prevTagId].notes.filter((id) => id !== noteId);\r\n  }\r\n  tags[tagId]?.notes?.push(noteId);\r\n  await localforage.setItem(\"ALL_TAGS\", tags);\r\n  return { tags, allNotes };\r\n}\r\n\r\nexport async function convertTeamPage(\r\n  noteId: string,\r\n  teamPages: Record<string, TeamPageState>\r\n) {\r\n  const pageRec = (await loadNote(noteId))?.pageRec;\r\n  if (!pageRec) return;\r\n  const notePages: Record<string, NotePage> = {};\r\n  for (let [key, page] of Object.entries(teamPages)) {\r\n    const { states } = page;\r\n    const { ratio } = pageRec[key];\r\n    if (!ratio) continue;\r\n    delete states[getUserId()];\r\n    notePages[key] = {\r\n      ratio,\r\n      state: {\r\n        strokes: Object.values(states).flat(1),\r\n      },\r\n    };\r\n  }\r\n  return notePages;\r\n}\r\n\r\nexport async function saveTeamNote(\r\n  noteId: string,\r\n  noteInfo: TeamNoteInfo,\r\n  teamPages: Record<string, NotePage>,\r\n  pdf?: File\r\n) {\r\n  let note = await loadNote(noteId);\r\n  if (note) return;\r\n  for (let page of Object.values(teamPages)) {\r\n    page.state = getDefaultFlatState();\r\n  }\r\n  note = {\r\n    ...noteInfo,\r\n    tagId: \"DEFAULT\",\r\n    team: true,\r\n    pageRec: teamPages,\r\n    pdf,\r\n  };\r\n  await createNewNote(note);\r\n}\r\n\r\nexport async function updateTeamNote(\r\n  noteId: string,\r\n  noteInfo: TeamNoteInfo,\r\n  pageInfos: Record<string, NotePage>\r\n) {\r\n  let note = await loadNote(noteId);\r\n  if (!note) return;\r\n  const { pageOrder } = noteInfo;\r\n  if (pageOrder.length < note.pageOrder.length) return;\r\n  const { pageRec, pdf } = note;\r\n  for (let [pageId, page] of Object.entries(pageInfos)) {\r\n    if (!(pageId in pageRec)) {\r\n      const { ratio, pdfIndex } = page;\r\n      let image: Blob | undefined = undefined;\r\n      if (pdf && pdfIndex) {\r\n        image = await getOneImageFromFile(pdf, pdfIndex, 0.5);\r\n      }\r\n      pageRec[pageId] = {\r\n        ratio,\r\n        state: getDefaultFlatState(),\r\n        pdfIndex,\r\n        image,\r\n      };\r\n    }\r\n  }\r\n\r\n  await editNoteData(noteId, { pageOrder, pageRec });\r\n}\r\n","import axios from \"axios\";\r\nimport { Note, NotePage, TeamNoteInfo, TeamPageInfo } from \"../note/note\";\r\nimport { convertTeamPage, loadNote, saveTeamNote, updateTeamNote } from \"../note/archive\";\r\nimport { getUserId } from \"../user\";\r\nimport { loadPDFImages } from \"../note/pdfImage\";\r\n\r\nexport const BASE_URL = \"https://api.slotdumpling.top/paint\";\r\n// export const BASE_URL = \"http://100.81.113.84:8090/paint\";\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.interceptors.request.use((config) => {\r\n  console.log(config.method, config.url);\r\n  return config;\r\n});\r\n\r\nexport async function getNoteId(roomCode: number) {\r\n  try {\r\n    const { data } = await axios.get(`code/${roomCode}`);\r\n    console.log({ data });\r\n    if (data.statusCode !== 200) return null;\r\n    return data.noteId as string;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function loadTeamNote(noteId: string) {\r\n  try {\r\n    const { data } = await axios.get(`info/${noteId}`);\r\n    if (data.statusCode !== 200) return null;\r\n    const { pageInfos, noteInfo } = data as {\r\n      pageInfos: Record<string, NotePage>;\r\n      noteInfo: TeamNoteInfo & Partial<Note>;\r\n    };\r\n\r\n    let file: File | undefined = undefined;\r\n    if (noteInfo.withImg) {\r\n      const { data } = await axios({\r\n        method: \"GET\",\r\n        url: noteId,\r\n        responseType: \"blob\",\r\n      });\r\n      file = new File([data], noteInfo.name + \".pdf\");\r\n\r\n      const images = await loadPDFImages(file);\r\n      for (let page of Object.values(pageInfos)) {\r\n        const { pdfIndex } = page;\r\n        if (!pdfIndex) return;\r\n        page.image = images[pdfIndex - 1];\r\n      }\r\n      noteInfo.thumbnail = images[0];\r\n    }\r\n    await saveTeamNote(noteId, noteInfo, pageInfos, file);\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function putNote(noteId: string) {\r\n  const note = await loadNote(noteId);\r\n  if (!note) return null;\r\n  const { uid, name, withImg, pdf, pageOrder, pageRec } = note;\r\n\r\n  try {\r\n    const { data } = await axios.put(`create/${noteId}`, {\r\n      userId: getUserId(),\r\n      pageRec,\r\n      noteInfo: { uid, name, withImg, pageOrder },\r\n    });\r\n\r\n    if (pdf) {\r\n      const formData = new FormData();\r\n      const ab = await pdf.arrayBuffer();\r\n      const file = new Blob([ab]);\r\n      formData.append(\"file\", file, noteId);\r\n      await axios({\r\n        method: \"POST\",\r\n        url: \"upload\",\r\n        data: formData,\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n    }\r\n\r\n    if (data.statusCode !== 201) return null;\r\n    return data.code as number;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function updatePages(noteId: string) {\r\n  const note = await loadNote(noteId);\r\n  if (!note) return null;\r\n  const { uid, name, withImg, pageOrder, pageRec } = note;\r\n  try {\r\n    const { data } = await axios.put(`update/${noteId}`, {\r\n      userId: getUserId(),\r\n      pageRec,\r\n      noteInfo: { uid, name, withImg, pageOrder },\r\n    });\r\n    if (data.statusCode === 201) return true;\r\n    else return false;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function getTeamNoteState(noteId: string) {\r\n  try {\r\n    const { data } = await axios.get(`state/${noteId}`);\r\n    if (data.statusCode !== 200) return null;\r\n    const { teamPages } = data;\r\n    const pageRec = await convertTeamPage(noteId, teamPages);\r\n    return pageRec;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function getTeamNoteInfo(noteId: string) {\r\n  try {\r\n    const { data } = await axios.get(`info/${noteId}`);\r\n    const { statusCode, ...res } = data as {\r\n      statusCode: number;\r\n      code: number;\r\n      noteInfo: TeamNoteInfo;\r\n      pageInfos: Record<string, TeamPageInfo>;\r\n    };\r\n    if (statusCode !== 200) return null;\r\n    return res;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function preloadTeamNote(noteId: string) {\r\n  try {\r\n    const { data } = await axios.get(`info/${noteId}`);\r\n    if (data.statusCode !== 200) return null;\r\n    const { noteInfo, pageInfos } = data;\r\n    await updateTeamNote(noteId, noteInfo, pageInfos);\r\n    return true;\r\n  } catch (e) {\r\n    console.error(e);\r\n    return false;\r\n  }\r\n}\r\n","import React, {\r\n  KeyboardEvent,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport \"./digitInput.sass\";\r\n\r\nexport default function DigitInput({\r\n  value = 0,\r\n  digitNum = 4,\r\n  onChange = () => {},\r\n  onSubmit,\r\n}: {\r\n  value?: number;\r\n  digitNum?: number;\r\n  onChange?: (val: number) => void;\r\n  onSubmit: (val: number) => void;\r\n}) {\r\n  function num2digits(num: number): string[] {\r\n    if (num === 0) return new Array(digitNum).fill(\"\");\r\n    return String(num)\r\n      .slice(0, digitNum)\r\n      .padEnd(digitNum, \"x\")\r\n      .split(\"\")\r\n      .map((s) => (s === \"x\" ? \"\" : s));\r\n  }\r\n\r\n  const [nowFocused, setNowFocused] = useState(0);\r\n  const [digits, setDigits] = useState(num2digits(value));\r\n  useEffect(() => {\r\n    const newDigits = num2digits(value);\r\n    setDigits(newDigits);\r\n  }, [value]);\r\n\r\n  useEffect(() => {\r\n    const idx = digits.findIndex((d) => d === \"\");\r\n    setNowFocused(idx);\r\n    const newValue = Number(digits.join(\"\"));\r\n    if (newValue === value) return;\r\n    onChange(newValue);\r\n    if (idx === -1) {\r\n      onSubmit(newValue);\r\n    }\r\n  }, [digits]);\r\n\r\n  function focus() {\r\n    if (nowFocused === -1) {\r\n      inputRefs.current.forEach((el) => el.blur());\r\n    } else {\r\n      inputRefs.current[nowFocused].focus();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    focus();\r\n  }, [nowFocused]);\r\n\r\n  function handleChange(val: string, idx: number) {\r\n    if (!/^[0-9]$/.test(val)) return;\r\n    setDigits(prev => {\r\n      const newDigits = prev.slice();\r\n      newDigits[idx] = val;\r\n      return newDigits;\r\n    });\r\n  }\r\n\r\n  const inputRefs = useRef<HTMLInputElement[]>([]);\r\n  useEffect(() => {\r\n    inputRefs.current = inputRefs.current.slice(0, digitNum);\r\n  }, [digitNum]);\r\n\r\n  function handleKeyUp(e: KeyboardEvent<HTMLInputElement>) {\r\n    if (e.key === \"Backspace\") {\r\n      const idx = Math.max(0, nowFocused - 1);\r\n      setNowFocused(idx);\r\n      setDigits(prev => {\r\n        const newDigits = prev.slice();\r\n        newDigits[idx] = '';\r\n        return newDigits;\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"digit-input\">\r\n      {digits.map((d, idx) => (\r\n        <input\r\n          key={idx}\r\n          ref={(el) => {\r\n            if (!el) return;\r\n            inputRefs.current[idx] = el;\r\n          }}\r\n          value={d}\r\n          pattern=\"\\d*\"\r\n          onChange={(e) => handleChange(e.target.value, idx)}\r\n          onKeyUp={handleKeyUp}\r\n        />\r\n      ))}\r\n      <div className=\"click-area\" onClick={focus}></div>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  Input,\r\n  Menu,\r\n  message,\r\n  Popconfirm,\r\n  Popover,\r\n  Progress,\r\n} from \"antd\";\r\nimport {\r\n  createContext,\r\n  Dispatch,\r\n  ReactNode,\r\n  SetStateAction,\r\n  useContext,\r\n  useState,\r\n} from \"react\";\r\nimport { createNewNote } from \"../../lib/note/archive\";\r\nimport { LoadPDF } from \"../../lib/note/pdfImage\";\r\nimport { MenuStateCtx, MenuMethodCtx } from \"./MainMenu\";\r\nimport {\r\n  TeamOutlined,\r\n  UserOutlined,\r\n  ClearOutlined,\r\n  InboxOutlined,\r\n  FilePdfOutlined,\r\n  SettingOutlined,\r\n  CaretDownOutlined,\r\n  ArrowLeftOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getNoteId, loadTeamNote } from \"../../lib/network/http\";\r\nimport DigitInput from \"../ui/DigitInput\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"./right.sass\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport Dragger from \"antd/lib/upload/Dragger\";\r\nimport { getUserName, setUserName } from \"../../lib/user\";\r\nimport localforage from \"localforage\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst OthersStateUpdateCtx = createContext({\r\n  setActive: (() => {}) as Dispatch<SetStateAction<string>>,\r\n});\r\n\r\nexport default function RightTools() {\r\n  return (\r\n    <div className=\"right-tools\">\r\n      <JoinTeamButton />\r\n      <OthersButton />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst OthersMenu = () => {\r\n  const { setActive } = useContext(OthersStateUpdateCtx);\r\n  const { Item } = Menu;\r\n  return (\r\n    <Menu onClick={({ key }) => setActive(key)}>\r\n      <Item key=\"PDF\">\r\n        <FilePdfOutlined />\r\n        <span>Load PDF</span>\r\n      </Item>\r\n      <Item key=\"PROFILE\">\r\n        <UserOutlined />\r\n        <span>My profile</span>\r\n      </Item>\r\n      <Item key=\"SETTINGS\">\r\n        <SettingOutlined />\r\n        <span>Settings</span>\r\n      </Item>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst SeconaryMenu = ({\r\n  children,\r\n  title,\r\n}: {\r\n  children: ReactNode;\r\n  title: string;\r\n}) => {\r\n  const { setActive } = useContext(OthersStateUpdateCtx);\r\n  return (\r\n    <div className=\"secondary\">\r\n      <div className=\"title\">\r\n        <Button\r\n          type=\"text\"\r\n          shape=\"circle\"\r\n          onClick={() => setActive(\"MENU\")}\r\n          icon={<ArrowLeftOutlined />}\r\n        />\r\n        <Title level={5}>{title}</Title>\r\n      </div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction UploadPdfPage() {\r\n  const [loading, setLoading] = useState(false);\r\n  const { tagUid } = useContext(MenuStateCtx);\r\n  const { setAllTags, setAllNotes } = useContext(MenuMethodCtx);\r\n  const [percent, setPercent] = useState(0);\r\n\r\n  async function handleFile(file: File) {\r\n    if (file.type !== \"application/pdf\") return;\r\n    setLoading(true);\r\n    const note = await LoadPDF(file, setPercent);\r\n    note.tagId = tagUid;\r\n    const { tags, allNotes } = await createNewNote(note);\r\n    setAllTags(tags);\r\n    setAllNotes(allNotes);\r\n    setLoading(false);\r\n    message.success(\"PDF Loaded\");\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <SeconaryMenu title=\"Load PDF\">\r\n      <Dragger\r\n        disabled={loading}\r\n        multiple={false}\r\n        action=\"#\"\r\n        accept=\"application/pdf\"\r\n        beforeUpload={handleFile}\r\n      >\r\n        <p className=\"ant-upload-drag-icon\">\r\n          {loading ? (\r\n            <Progress width={48} type=\"circle\" percent={percent} />\r\n          ) : (\r\n            <InboxOutlined />\r\n          )}\r\n        </p>\r\n        <p className=\"ant-upload-hint\">Click or drag a pdf file here.</p>\r\n      </Dragger>\r\n    </SeconaryMenu>\r\n  );\r\n}\r\n\r\nconst ProfilePage = () => {\r\n  const userName = getUserName();\r\n  const [name, setName] = useState(userName);\r\n  const handleEnter = () => {\r\n    setUserName(name);\r\n  };\r\n  return (\r\n    <SeconaryMenu title=\"My profile\">\r\n      <div className=\"profile-page\">\r\n        <Input\r\n          prefix={<UserOutlined />}\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <Button onClick={handleEnter} type=\"primary\" block>\r\n          OK\r\n        </Button>\r\n      </div>\r\n    </SeconaryMenu>\r\n  );\r\n};\r\n\r\nconst SettingsPage = () => {\r\n  const { Item } = Menu;\r\n  const { menuInit } = useContext(MenuMethodCtx);\r\n\r\n  const clearAll = async () => {\r\n    await localforage.clear();\r\n    menuInit();\r\n  };\r\n\r\n  return (\r\n    <SeconaryMenu title=\"Settings\">\r\n      <Menu>\r\n        <Popconfirm\r\n          title=\"Delete all notes and tags?\"\r\n          onConfirm={clearAll}\r\n          icon={<ClearOutlined />}\r\n          okText=\"Yes\"\r\n          okType=\"danger\"\r\n          cancelText=\"No\"\r\n          placement=\"left\"\r\n        >\r\n          <Item key=\"CLEAR\" danger>\r\n            <ClearOutlined />\r\n            <span>Clear all</span>\r\n          </Item>\r\n        </Popconfirm>\r\n      </Menu>\r\n    </SeconaryMenu>\r\n  );\r\n};\r\n\r\nconst OthersPage = () => {\r\n  const [height, setHeight] = useState(0);\r\n  const [active, setActive] = useState(\"\");\r\n\r\n  const calcHeight = (el: HTMLElement) => {\r\n    setHeight(el.clientHeight);\r\n  };\r\n\r\n  const cssProps = {\r\n    timeout: 300,\r\n    onEnter: calcHeight,\r\n    unmountOnExit: true,\r\n  };\r\n\r\n  const cssProps2 = {\r\n    ...cssProps,\r\n    classNames: \"secondary\",\r\n  };\r\n\r\n  useEffect(() => setActive(\"MENU\"), []);\r\n\r\n  return (\r\n    <OthersStateUpdateCtx.Provider value={{ setActive }}>\r\n      <section className=\"others-menu\" style={{ height }}>\r\n        <CSSTransition\r\n          classNames=\"primary\"\r\n          in={active === \"MENU\"}\r\n          {...cssProps}\r\n        >\r\n          <OthersMenu />\r\n        </CSSTransition>\r\n        <CSSTransition in={active === \"PDF\"} {...cssProps2}>\r\n          <UploadPdfPage />\r\n        </CSSTransition>\r\n        <CSSTransition in={active === \"PROFILE\"} {...cssProps2}>\r\n          <ProfilePage />\r\n        </CSSTransition>\r\n        <CSSTransition in={active === \"SETTINGS\"} {...cssProps2}>\r\n          <SettingsPage />\r\n        </CSSTransition>\r\n      </section>\r\n    </OthersStateUpdateCtx.Provider>\r\n  );\r\n};\r\n\r\nconst OthersButton = () => {\r\n  return (\r\n    <Popover\r\n      placement=\"bottomRight\"\r\n      trigger=\"click\"\r\n      content={<OthersPage />}\r\n      zIndex={900}\r\n    >\r\n      <Button shape=\"circle\" icon={<CaretDownOutlined />} />\r\n    </Popover>\r\n  );\r\n};\r\n\r\nfunction JoinTeamButton() {\r\n  const [roomCode, setRoomCode] = useState(0);\r\n\r\n  const nav = useNavigate();\r\n  async function handleSubmit(code: number) {\r\n    const dismiss = message.loading(\"Loading team note...\", 0);\r\n    const noteId = await getNoteId(code);\r\n    if (!noteId) {\r\n      setRoomCode(0);\r\n      message.error(\"Room doesn't exist.\");\r\n      return dismiss();\r\n    }\r\n    await loadTeamNote(noteId);\r\n    dismiss();\r\n    nav(`/team/${noteId}`);\r\n  }\r\n\r\n  return (\r\n    <Popover\r\n      placement=\"bottomRight\"\r\n      trigger=\"click\"\r\n      title=\"Join a team note\"\r\n      destroyTooltipOnHide\r\n      content={\r\n        <DigitInput\r\n          value={roomCode}\r\n          onChange={setRoomCode}\r\n          onSubmit={handleSubmit}\r\n        />\r\n      }\r\n    >\r\n      <Button className=\"team-btn large\" shape=\"round\" icon={<TeamOutlined />}>\r\n        Team\r\n      </Button>\r\n      <Button\r\n        className=\"team-btn small\"\r\n        shape=\"circle\"\r\n        icon={<TeamOutlined />}\r\n      />\r\n    </Popover>\r\n  );\r\n}\r\n","import { Button } from \"antd\";\r\nimport { useContext } from \"react\";\r\nimport { MenuStateCtx, MenuMethodCtx } from \"./MainMenu\";\r\nimport {\r\n  MenuOutlined,\r\n  EditOutlined,\r\n  CheckOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nexport default function LeftTools() {\r\n  const { editing } = useContext(MenuStateCtx);\r\n  const { setEditing } = useContext(MenuMethodCtx);\r\n\r\n  function swichEditing() {\r\n    setEditing((prev) => !prev);\r\n  }\r\n\r\n  return (\r\n    <div className=\"left-tools\">\r\n      <label htmlFor=\"aside-checkbox\" id=\"aside-label\">\r\n        <MenuOutlined />\r\n      </label>\r\n      <Button\r\n        className=\"edit-btn large\"\r\n        onClick={swichEditing}\r\n        type={editing ? \"primary\" : \"text\"}\r\n        block\r\n      >\r\n        {editing ? \"Done\" : \"Edit\"}\r\n      </Button>\r\n      <Button\r\n        className=\"edit-btn small\"\r\n        onClick={swichEditing}\r\n        type={editing ? \"primary\" : \"text\"}\r\n        shape=\"circle\"\r\n      >\r\n        {editing ? <CheckOutlined /> : <EditOutlined />}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Input, Menu, Popconfirm, Popover, Select } from \"antd\";\r\nimport { useContext, useState } from \"react\";\r\nimport { deleteTag, editTag, NoteTag, storeTag } from \"../../lib/note/archive\";\r\nimport { colors } from \"../../lib/color\";\r\nimport { MenuStateCtx, MenuMethodCtx } from \"./MainMenu\";\r\nimport {\r\n  TagOutlined,\r\n  PlusOutlined,\r\n  CheckOutlined,\r\n  CloseOutlined,\r\n  SettingOutlined,\r\n  ProfileOutlined,\r\n  MinusCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Search from \"antd/lib/input/Search\";\r\n\r\nexport const TagCircle = ({ color }: { color: string }) => {\r\n  const style = { backgroundColor: color };\r\n  return <div className=\"tag-circle\" style={style} />;\r\n};\r\n\r\nfunction TagItem({ noteTag }: { noteTag: NoteTag }) {\r\n  const { uid, color, name, notes } = noteTag;\r\n  const { editing } = useContext(MenuStateCtx);\r\n  const { setTagUid, setAllTags } = useContext(MenuMethodCtx);\r\n  const [tagEditing, setTagEditing] = useState(false);\r\n  const [tagName, setTagName] = useState(name);\r\n  const [tagColor, setTagColor] = useState(color);\r\n\r\n  function cancelEditing() {\r\n    setTagName(name);\r\n    setTagColor(color);\r\n    setTagEditing(false);\r\n  }\r\n\r\n  async function removeTag() {\r\n    const tags = await deleteTag(uid);\r\n    setTagUid(\"DEFAULT\");\r\n    setAllTags(tags);\r\n  }\r\n\r\n  async function finishEditing() {\r\n    const newTag: NoteTag = {\r\n      uid,\r\n      name: tagName,\r\n      color: tagColor,\r\n      notes: notes,\r\n    };\r\n\r\n    const newAllTags = await editTag(newTag);\r\n    setAllTags(newAllTags);\r\n    setTagEditing(false);\r\n  }\r\n\r\n  const colorSelector = (\r\n    <Select value={tagColor} onSelect={setTagColor}>\r\n      {colors.map((c) => (\r\n        <Select.Option value={c} key={c}>\r\n          <TagCircle color={c} />\r\n        </Select.Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n\r\n  const TagNameInput = () => (\r\n    <Input\r\n      className=\"tag-name-input\"\r\n      addonBefore={colorSelector}\r\n      value={tagName}\r\n      onChange={(e) => setTagName(e.target.value)}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div className=\"menu-item\">\r\n      {editing && tagEditing ? (\r\n        <>\r\n          <Popconfirm\r\n            title=\"Delete this tag?\"\r\n            onConfirm={removeTag}\r\n            placement=\"left\"\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n          >\r\n            <Button\r\n              type=\"text\"\r\n              danger\r\n              size=\"small\"\r\n              icon={<MinusCircleOutlined />}\r\n            />\r\n          </Popconfirm>\r\n          <TagNameInput />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <TagCircle color={tagColor} />\r\n          <span className=\"tag-name\">{tagName}</span>\r\n        </>\r\n      )}\r\n      {editing && tagEditing && (\r\n        <>\r\n          <Button\r\n            disabled={tagName === \"\"}\r\n            size=\"small\"\r\n            type=\"link\"\r\n            onClick={finishEditing}\r\n            icon={<CheckOutlined />}\r\n          />\r\n          <Button\r\n            size=\"small\"\r\n            type=\"text\"\r\n            onClick={cancelEditing}\r\n            icon={<CloseOutlined />}\r\n          />\r\n        </>\r\n      )}\r\n      {editing && !tagEditing && (\r\n        <Button\r\n          size=\"small\"\r\n          type=\"text\"\r\n          onClick={() => setTagEditing(true)}\r\n          icon={<SettingOutlined />}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst AddTag = () => {\r\n  const { setAllTags } = useContext(MenuMethodCtx);\r\n\r\n  async function addTag(val: string) {\r\n    const name = val.trim();\r\n    if (!name) {\r\n      return;\r\n    } else {\r\n      const tags = await storeTag(name);\r\n      setAllTags(tags);\r\n    }\r\n  }\r\n\r\n  const popContent = (\r\n    <Search\r\n      placeholder=\"Tag name...\"\r\n      onSearch={addTag}\r\n      allowClear\r\n      enterButton={<PlusOutlined />}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div id=\"add-tag\">\r\n      <Popover\r\n        content={popContent}\r\n        trigger=\"click\"\r\n        placement=\"topLeft\"\r\n        destroyTooltipOnHide\r\n      >\r\n        <Button shape=\"circle\" type=\"text\" icon={<TagOutlined />} />\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function SideMenu() {\r\n  const { allTags } = useContext(MenuStateCtx);\r\n  const { setTagUid } = useContext(MenuMethodCtx);\r\n\r\n  function menuClicked({ key }: { key: string }) {\r\n    setTagUid(key);\r\n  }\r\n\r\n  const { Item } = Menu;\r\n\r\n  return (\r\n    <aside>\r\n      <input type=\"checkbox\" id=\"aside-checkbox\" />\r\n      <div className=\"side-wrapper\">\r\n        <Menu\r\n          onClick={menuClicked}\r\n          className=\"side-menu\"\r\n          defaultSelectedKeys={[\"DEFAULT\"]}\r\n          defaultOpenKeys={[\"sub1\"]}\r\n          mode=\"inline\"\r\n        >\r\n          <Item key=\"DEFAULT\">\r\n            <div className=\"menu-item\">\r\n              <ProfileOutlined id=\"all-note-icon\" />\r\n              <span className=\"tag-name\">All Notes</span>\r\n            </div>\r\n          </Item>\r\n          {Object.values(allTags).map((tag) => (\r\n            <Item key={tag.uid}>\r\n              <TagItem noteTag={tag} />\r\n            </Item>\r\n          ))}\r\n        </Menu>\r\n        <footer>\r\n          <AddTag />\r\n        </footer>\r\n      </div>\r\n    </aside>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/default.dd551273.png\";","import { useEffect, useMemo } from \"react\";\r\n\r\nexport function useObjectUrl(obj: Blob | MediaSource | undefined) {\r\n  const url = useMemo(\r\n    () => (obj ? URL.createObjectURL(obj) : null),\r\n    [obj]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const prevUrl = url || \"\";\r\n    return () => URL.revokeObjectURL(prevUrl);\r\n  }, [url]);\r\n\r\n  return url;\r\n}","import { Button, Input, Popconfirm, Tag, Dropdown, Menu } from \"antd\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { deleteNote, editNoteData, moveNoteTag } from \"../../lib/note/archive\";\r\nimport { NoteInfo } from \"../../lib/note/note\";\r\nimport { MenuStateCtx, MenuMethodCtx } from \"./MainMenu\";\r\nimport {\r\n  TagsOutlined,\r\n  CloudOutlined,\r\n  CloseOutlined,\r\n  DeleteOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { TagCircle } from \"./SideMenu\";\r\nimport dafaultImg from \"../ui/default.png\";\r\nimport { preloadTeamNote } from \"../../lib/network/http\";\r\nimport { useObjectUrl } from \"../../lib/hooks\";\r\n\r\nexport default function NoteList({ noteList }: { noteList: NoteInfo[] }) {\r\n  return (\r\n    <div className=\"note-list\">\r\n      {noteList.map((noteInfo) => (\r\n        <NoteItem key={noteInfo.uid} noteInfo={noteInfo} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst NoteItem = ({ noteInfo }: { noteInfo: NoteInfo }) => {\r\n  const { team, uid, name, thumbnail } = noteInfo;\r\n\r\n  const { editing, allTags } = useContext(MenuStateCtx);\r\n  const { setAllTags, setAllNotes } = useContext(MenuMethodCtx);\r\n  const [noteName, setNoteName] = useState(name);\r\n  const [imgLoaded, setImgLoaded] = useState(false);\r\n  const nav = useNavigate();\r\n  const url = useObjectUrl(thumbnail);\r\n  const href = editing ? \"#\" : `${team ? \"team\" : \"reader\"}/${uid}`;\r\n\r\n  async function removeNote() {\r\n    const { tags, allNotes } = await deleteNote(uid);\r\n    setAllTags(tags);\r\n    setAllNotes(allNotes);\r\n  }\r\n\r\n  const saveNoteName = () => {\r\n    editNoteData(uid, { name: noteName });\r\n    setAllNotes((prev) => ({\r\n      ...prev,\r\n      [uid]: { ...prev[uid], name: noteName },\r\n    }));\r\n  };\r\n\r\n  const move = async ({ key }: { key: string }) => {\r\n    const { tags, allNotes } = await moveNoteTag(uid, key);\r\n    setAllTags(tags);\r\n    setAllNotes(allNotes);\r\n  };\r\n\r\n  const TagButton = () => {\r\n    const { Item } = Menu;\r\n    const overlay = (\r\n      <Menu onClick={move}>\r\n        <Item key=\"DEFAULT\">\r\n          <div className=\"tag-select\">\r\n            <CloseOutlined className=\"none-tag-icon\" />\r\n            <span>None Tag</span>\r\n          </div>\r\n        </Item>\r\n        {Object.values(allTags).map((t) => (\r\n          <Item key={t.uid}>\r\n            <div className=\"tag-select\">\r\n              <TagCircle color={t.color} />\r\n              <span>{t.name}</span>\r\n            </div>\r\n          </Item>\r\n        ))}\r\n      </Menu>\r\n    );\r\n    return (\r\n      <Dropdown overlay={overlay} trigger={[\"click\"]}>\r\n        <Button type=\"text\" icon={<TagsOutlined />} />\r\n      </Dropdown>\r\n    );\r\n  };\r\n\r\n  const DeleteButton = () => (\r\n    <Popconfirm\r\n      title=\"Delete this note?\"\r\n      onConfirm={removeNote}\r\n      okText=\"Yes\"\r\n      icon={<DeleteOutlined />}\r\n      okType=\"danger\"\r\n      cancelText=\"No\"\r\n    >\r\n      <Button\r\n        type=\"text\"\r\n        danger\r\n        icon={<DeleteOutlined />}\r\n      />\r\n    </Popconfirm>\r\n  );\r\n\r\n  return (\r\n    <div className=\"list-item\" onClick={async () => {\r\n      if (team) {\r\n        await preloadTeamNote(uid);\r\n        nav(href);\r\n      } else {\r\n        nav(href);\r\n      }\r\n    }}>\r\n      <div className=\"thumbnail-wrapper\">\r\n        <img\r\n          src={url || dafaultImg}\r\n          alt={name}\r\n          className={`thumbnail${imgLoaded ? \" loaded\" : \"\"}`}\r\n          onLoad={() => setImgLoaded(true)}\r\n        />\r\n        {team && (\r\n          <Tag color=\"blue\" className=\"cloud-icon\">\r\n            <CloudOutlined />\r\n          </Tag>\r\n        )}\r\n      </div>\r\n      {editing || <p className=\"note-name\">{name}</p>}\r\n      {editing && (\r\n        <>\r\n          <Input\r\n            className=\"note-name-input\"\r\n            value={noteName}\r\n            onChange={(e) => setNoteName(e.target.value)}\r\n            onBlur={saveNoteName}\r\n          />\r\n          <TagButton />\r\n          <DeleteButton />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, {\r\n  createContext,\r\n  Dispatch,\r\n  SetStateAction,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from \"react\";\r\nimport \"./menu.sass\";\r\nimport { createEmptyNote, NoteInfo } from \"../../lib/note/note\";\r\nimport {\r\n  createNewNote,\r\n  getAllNotes,\r\n  getAllTags,\r\n  NoteTag,\r\n} from \"../../lib/note/archive\";\r\nimport RightTools from \"./RightTools\";\r\nimport LeftTools from \"./LeftTools\";\r\nimport SideMenu from \"./SideMenu\";\r\nimport NoteList from \"./NoteList\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport { Button } from \"antd\";\r\nimport { FormOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MenuStateCtx = createContext({\r\n  tagUid: \"DEFAULT\",\r\n  editing: false,\r\n  allNotes: {} as Record<string, NoteInfo>,\r\n  allTags: {} as Record<string, NoteTag>,\r\n});\r\n\r\nexport const MenuMethodCtx = createContext({\r\n  setAllNotes: (() => {}) as Dispatch<SetStateAction<Record<string, NoteInfo>>>,\r\n  setAllTags: (() => {}) as Dispatch<SetStateAction<Record<string, NoteTag>>>,\r\n  setTagUid: (() => {}) as Dispatch<SetStateAction<string>>,\r\n  setEditing: (() => {}) as Dispatch<SetStateAction<boolean>>,\r\n  menuInit: (() => {}) as () => void,\r\n});\r\n\r\nexport default function MainMenu() {\r\n  const [allNotes, setAllNotes] = useState<Record<string, NoteInfo>>({});\r\n  const [allTags, setAllTags] = useState<Record<string, NoteTag>>({});\r\n  const [tagUid, setTagUid] = useState(\"DEFAULT\");\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const selectedTag = useMemo<NoteTag>(() => {\r\n    if (tagUid === \"DEFAULT\") {\r\n      return {\r\n        uid: \"\",\r\n        name: \"All Notes\",\r\n        color: \"#000000\",\r\n        notes: Object.keys(allNotes),\r\n      };\r\n    } else {\r\n      return allTags[tagUid];\r\n    }\r\n  }, [tagUid, allTags, allNotes]);\r\n\r\n  const noteList = useMemo<NoteInfo[]>(\r\n    () =>\r\n      selectedTag.notes\r\n        .filter((uid) => uid in allNotes)\r\n        .map((uid) => allNotes[uid]),\r\n    [selectedTag, allNotes]\r\n  );\r\n\r\n  const menuInit = () => {\r\n    getAllNotes().then(setAllNotes);\r\n    getAllTags().then(setAllTags);\r\n    document.title = \"Multibility\";\r\n  };\r\n\r\n  useEffect(menuInit, []);\r\n\r\n  return (\r\n    <MenuStateCtx.Provider value={{ tagUid, editing, allNotes, allTags }}>\r\n      <MenuMethodCtx.Provider\r\n        value={{ setAllNotes, setAllTags, setEditing, setTagUid, menuInit }}\r\n      >\r\n        <div className=\"menu-container\">\r\n          <header>\r\n            <LeftTools />\r\n            <Title level={4}>{selectedTag.name}</Title>\r\n            <RightTools />\r\n          </header>\r\n          <main>\r\n            <SideMenu />\r\n            <NoteList noteList={noteList} />\r\n            <NewNoteButton />\r\n          </main>\r\n        </div>\r\n      </MenuMethodCtx.Provider>\r\n    </MenuStateCtx.Provider>\r\n  );\r\n}\r\n\r\nexport const NewNoteButton = () => {\r\n  const { tagUid } = useContext(MenuStateCtx);\r\n  const { setAllTags, setAllNotes } = useContext(MenuMethodCtx);\r\n\r\n  async function addNewNote() {\r\n    const note = createEmptyNote();\r\n    note.tagId = tagUid;\r\n    const { tags, allNotes } = await createNewNote(note);\r\n    setAllTags(tags);\r\n    setAllNotes(allNotes);\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      className=\"new-note\"\r\n      size=\"large\"\r\n      type=\"primary\"\r\n      shape=\"circle\"\r\n      onClick={addNewNote}\r\n      icon={<FormOutlined />}\r\n    />\r\n  );\r\n};\r\n","import React, { TouchEvent, useEffect, useRef, useState } from \"react\";\r\nimport { DrawState, SetDrawState } from \"../../lib/draw/DrawState\";\r\nimport { isStylus } from \"../../lib/touch/touch\";\r\nimport { Set } from \"immutable\";\r\nimport paper from \"paper\";\r\nimport \"./draw.sass\";\r\nimport { releaseCanvas } from \"../../lib/draw/drawer\";\r\n\r\nconst PREVIE_WIDTH = 200;\r\n\r\nexport interface DrawCtrl {\r\n  erasing: boolean;\r\n  finger: boolean;\r\n  even: boolean;\r\n  lineWidth: number;\r\n  color: string;\r\n  highlight: boolean;\r\n}\r\n\r\nconst Draw = ({\r\n  drawState,\r\n  onChange = () => {},\r\n  erasing = false,\r\n  finger = false,\r\n  lineWidth = 10,\r\n  color = \"#000000\",\r\n  highlight = false,\r\n  readonly = false,\r\n  preview = false,\r\n}: {\r\n  drawState: DrawState;\r\n  onChange?: SetDrawState;\r\n  erasing?: boolean;\r\n  finger?: boolean;\r\n  lineWidth?: number;\r\n  color?: string;\r\n  highlight?: boolean;\r\n  readonly?: boolean;\r\n  preview?: boolean;\r\n}) => {\r\n  const { width, height } = drawState;\r\n  const canvasEl = useRef<HTMLCanvasElement>(null);\r\n  const scope = useRef(new paper.PaperScope());\r\n  const group = useRef<paper.Group>();\r\n  const ratio = useRef(1);\r\n  const path = useRef<paper.Path>();\r\n  const [erased, setErased] = useState(Set<string>());\r\n\r\n  if (erasing) {\r\n    lineWidth = 10;\r\n    color = \"#aaa8\";\r\n  }\r\n\r\n  const isEventValid = (e: TouchEvent<HTMLCanvasElement>) => {\r\n    return finger || isStylus(e);\r\n  };\r\n\r\n  const updateRatio = () => {\r\n    const clientWidth = canvasEl.current?.clientWidth;\r\n    if (!clientWidth) return;\r\n    ratio.current = width / clientWidth;\r\n  };\r\n\r\n  const setupPaper = () => {\r\n    if (!canvasEl.current) return;\r\n    scope.current.setup(canvasEl.current);\r\n    scope.current.view.viewSize.width = width;\r\n    scope.current.view.viewSize.height = height;\r\n\r\n    if (preview) {\r\n      const r = PREVIE_WIDTH / width;\r\n      scope.current.view.viewSize.width *= r;\r\n      scope.current.view.viewSize.height *= r;\r\n      scope.current.view.scale(r, new paper.Point(0, 0));\r\n    }\r\n  };\r\n\r\n  const handleDown = () => {\r\n    scope.current.activate();\r\n    path.current = new scope.current.Path();\r\n    const strokeColor = new paper.Color(color);\r\n    if (highlight) strokeColor.alpha /= 2;\r\n    path.current.strokeColor = strokeColor;\r\n    path.current.strokeWidth = lineWidth;\r\n    path.current.strokeCap = \"round\";\r\n    updateRatio();\r\n  };\r\n\r\n  const handleDrag = (e: paper.MouseEvent) => {\r\n    if (!path.current) return;\r\n    path.current.add(e.point.multiply(ratio.current));\r\n    path.current.smooth();\r\n\r\n    if (!erasing) return;\r\n    group.current?.children.forEach((p) => {\r\n      if (!(p instanceof paper.Path)) return;\r\n      if (path.current?.intersects(p)) {\r\n        setErased((prev) => prev.add(p.name));\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleUp = erasing\r\n    ? () => {\r\n        if (!path.current) return;\r\n        onChange((prev) => DrawState.eraseStrokes(prev, erased.toArray()));\r\n        setErased(Set());\r\n      }\r\n    : () => {\r\n        if (!path.current) return;\r\n        path.current.simplify();\r\n        const { pathData } = path.current;\r\n        if (!pathData) return;\r\n        onChange((prev) =>\r\n          DrawState.addStroke(prev, { pathData, lineWidth, color, highlight })\r\n        );\r\n      };\r\n\r\n  const handlePaper = () => {\r\n    if (readonly) return;\r\n    scope.current.view.onMouseDown = handleDown;\r\n    scope.current.view.onMouseDrag = handleDrag;\r\n    scope.current.view.onMouseUp = handleUp;\r\n  };\r\n\r\n  const preventTouch = (e: TouchEvent<HTMLCanvasElement>) => {\r\n    if (!isEventValid(e)) e.stopPropagation();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setupPaper();\r\n    const cvs = canvasEl.current;\r\n    return () => void (cvs && releaseCanvas(cvs));\r\n  }, []);\r\n\r\n  useEffect(handlePaper);\r\n\r\n  useEffect(() => {\r\n    path.current?.remove();\r\n  }, [drawState]);\r\n\r\n  useEffect(() => {\r\n    scope.current.activate();\r\n    group.current = new scope.current.Group();\r\n\r\n    drawState.getValidStrokes().forEach((stroke) => {\r\n      let { pathData, lineWidth, color, uid, highlight } = stroke;\r\n\r\n      const path = new paper.Path(pathData);\r\n      path.strokeWidth = lineWidth;\r\n      path.strokeCap = \"round\";\r\n\r\n      path.strokeColor = new paper.Color(color);\r\n      if (erased.has(uid)) path.opacity /= 2;\r\n      if (highlight) path.opacity /= 2;\r\n      path.name = uid;\r\n      group.current?.addChild(path);\r\n    });\r\n\r\n    return () => void group.current?.removeChildren();\r\n  }, [drawState, erased]);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasEl}\r\n      className=\"draw-canvas\"\r\n      data-paper-hidpi={false}\r\n      onTouchStartCapture={preventTouch}\r\n      onTouchMoveCapture={preventTouch}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(Draw);\r\n","import { TouchEvent } from \"react\";\r\n\r\nexport type iOSTouch = Touch & {\r\n  force?: number;\r\n  touchType?: \"stylus\" | \"direct\";\r\n};\r\n\r\nexport function isStylus(e: TouchEvent<HTMLCanvasElement> | globalThis.TouchEvent) {\r\n  const touch = e.touches[0] as iOSTouch;\r\n  return touch?.touchType === \"stylus\";\r\n}\r\n","import { List, Map, Record as Rec } from \"immutable\";\r\nimport { DrawState, Operation } from \"./DrawState\";\r\nimport { NotePage } from \"../note/note\";\r\n\r\ninterface StateSetRecordType {\r\n  states: Map<string, DrawState>;\r\n  editStack: List<string>;\r\n  undoStack: List<string>;\r\n}\r\n\r\nexport type SetOperation = Operation & { pageId: string };\r\n\r\ntype StateSetRecord = Rec<StateSetRecordType>;\r\n\r\nconst defaultRecord: Readonly<StateSetRecordType> = {\r\n  states: Map(),\r\n  editStack: List(),\r\n  undoStack: List(),\r\n};\r\n\r\nconst defaultFactory = Rec(defaultRecord);\r\n\r\nexport class StateSet {\r\n  constructor(\r\n    private immutable: StateSetRecord,\r\n    public lastOp?: SetOperation\r\n  ) {}\r\n\r\n  static createFromList(list: [string, DrawState][]) {\r\n    return new StateSet(defaultFactory().set(\"states\", Map(list)));\r\n  }\r\n\r\n  static createFromPages(pageRec: Record<string, NotePage>, width: number) {\r\n    const entries = Object.entries(pageRec);\r\n    return StateSet.createFromList(\r\n      entries.map(([key, { state, ratio }]) => [\r\n        key,\r\n        DrawState.loadFromFlat(state, width, width * ratio),\r\n      ])\r\n    );\r\n  }\r\n\r\n  getImmutable() {\r\n    return this.immutable;\r\n  }\r\n\r\n  getStates() {\r\n    return this.getImmutable().get(\"states\");\r\n  }\r\n\r\n  getEditStack() {\r\n    return this.getImmutable().get(\"editStack\");\r\n  }\r\n\r\n  getUndoStack() {\r\n    return this.getImmutable().get(\"undoStack\");\r\n  }\r\n\r\n  setState(pageId: string, drawState: DrawState) {\r\n    let newImmu = this.getImmutable().update(\"states\", (s) =>\r\n      s.set(pageId, drawState)\r\n    );\r\n\r\n    if (this.getStates().has(pageId)) {\r\n      newImmu = newImmu.update(\"editStack\", (s) => s.push(pageId));\r\n    }\r\n\r\n    let lastOp: SetOperation | undefined;\r\n    if (drawState.lastOp) {\r\n      lastOp = { ...drawState.lastOp, pageId };\r\n    }\r\n    return new StateSet(newImmu, lastOp);\r\n  }\r\n\r\n  addState(pageId: string, notePage: NotePage, width: number) {\r\n    const { state, ratio } = notePage;\r\n    const newImmu = this.getImmutable().update(\"states\", (s) =>\r\n      s.set(pageId, DrawState.loadFromFlat(state, width, width * ratio))\r\n    );\r\n    return new StateSet(newImmu);\r\n  }\r\n\r\n  deleteState(pageId: string) {\r\n    return new StateSet(\r\n      this.getImmutable().update('states', s => s.delete(pageId))\r\n    )\r\n  }\r\n\r\n  getOneState(pageId: string) {\r\n    return this.getImmutable().get(\"states\").get(pageId);\r\n  }\r\n\r\n  isUndoable() {\r\n    return this.getEditStack().size > 0;\r\n  }\r\n\r\n  isRedoable() {\r\n    return this.getUndoStack().size > 0;\r\n  }\r\n\r\n  undo() {\r\n    if (!this.isUndoable()) return this;\r\n    const immu = this.getImmutable();\r\n    const lastUid = immu.get(\"editStack\").last();\r\n    if (!lastUid) return this;\r\n    const prevDS = immu.get(\"states\").get(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.undo(prevDS);\r\n    const lastOp = newDS.lastOp;\r\n    let lastSetOp: SetOperation | undefined;\r\n    if (lastOp) lastSetOp = { pageId: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      immu\r\n        .update(\"editStack\", (s) => s.pop())\r\n        .update(\"undoStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  redo() {\r\n    if (!this.isRedoable()) return this;\r\n    const immu = this.getImmutable();\r\n    const lastUid = immu.get(\"undoStack\").last();\r\n    if (!lastUid) return this;\r\n    const prevDS = immu.get(\"states\").get(lastUid);\r\n    if (!prevDS) return this;\r\n\r\n    const newDS = DrawState.redo(prevDS);\r\n    const lastOp = newDS.lastOp;\r\n    let lastSetOp: SetOperation | undefined;\r\n    if (lastOp) lastSetOp = { pageId: lastUid, ...lastOp };\r\n\r\n    return new StateSet(\r\n      immu\r\n        .update(\"undoStack\", (s) => s.pop())\r\n        .update(\"editStack\", (s) => s.push(lastUid))\r\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\r\n      lastSetOp\r\n    );\r\n  }\r\n\r\n  pushOperation(SetOp: SetOperation) {\r\n    const { type, pageId } = SetOp;\r\n    const prevDs = this.getImmutable().get(\"states\").get(pageId);\r\n    if (!prevDs) return this;\r\n\r\n    let ds: DrawState;\r\n    switch (type) {\r\n      case \"add\":\r\n        ds = DrawState.pushStroke(prevDs, SetOp.stroke);\r\n        break;\r\n      case \"erase\":\r\n        ds = DrawState.pushErase(prevDs, SetOp.erase);\r\n        break;\r\n      case \"undo\":\r\n        ds = DrawState.pushUndo(prevDs, SetOp.undoUid);\r\n        break;\r\n      case \"redo\":\r\n        ds = DrawState.pushRedo(prevDs, SetOp.redoUid);\r\n        break;\r\n    }\r\n    return this.setState(pageId, ds);\r\n  }\r\n\r\n  getLastDs(): [string, DrawState] {\r\n    const pageId = this.lastOp?.pageId;\r\n    if (!pageId) throw new Error(\"can't get last modified page.\");\r\n    const ds = this.getOneState(pageId);\r\n    if (!ds) throw new Error(\"can't get last modified page drawstate.\");\r\n    return [pageId, ds];\r\n  }\r\n}\r\n","import { message } from \"antd\";\r\nimport React, { createContext, useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { SetOperation, StateSet } from \"../../lib/draw/StateSet\";\r\nimport { getTeamNoteState, getTeamNoteInfo } from \"../../lib/network/http\";\r\nimport { IoFactory } from \"../../lib/network/io\";\r\nimport Reader, { WIDTH } from \"./Reader\";\r\nimport { getUserId, UserInfo } from \"../../lib/user\";\r\nimport { LoginOutlined, LogoutOutlined } from \"@ant-design/icons\";\r\nimport { createTeamPage, NotePage, TeamPageInfo } from \"../../lib/note/note\";\r\n\r\nexport const TeamCtx = createContext({\r\n  code: -2,\r\n  userList: [] as UserInfo[],\r\n  loadInfo: undefined as undefined | (() => Promise<boolean>),\r\n  teamStateSet: undefined as StateSet | undefined,\r\n  pushOperation: undefined as undefined | ((op: SetOperation) => void),\r\n  teamUpdate: undefined as undefined | TeamUpdate,\r\n  updateReorder: (() => {}) as undefined | ((pageOrder: string[]) => void),\r\n  updateNewPage: (() => {}) as\r\n    | undefined\r\n    | ((pageOrder: string[], pageId: string, newPage: NotePage) => void),\r\n});\r\n\r\ntype TeamUpdate =\r\n  | {\r\n      type: \"reorder\";\r\n      pageOrder: string[];\r\n    }\r\n  | {\r\n      type: \"newPage\";\r\n      pageOrder: string[];\r\n      pageId: string;\r\n      newPage: NotePage;\r\n    };\r\n\r\nexport default function Team() {\r\n  const noteId = useParams().noteId ?? \"\";\r\n  const [teamStateSet, setTeamStateSet] = useState<StateSet>();\r\n  const [code, setCode] = useState(-2);\r\n  const [userList, setUserList] = useState<UserInfo[]>([]);\r\n  const [ws] = useState(IoFactory(noteId));\r\n  const [teamUpdate, setTeamUpdate] = useState<TeamUpdate>();\r\n  const nav = useNavigate();\r\n\r\n  async function loadState() {\r\n    const pageRec = await getTeamNoteState(noteId);\r\n    if (!pageRec) {\r\n      message.error(\"Failed loading the team note state\");\r\n      return false;\r\n    }\r\n    setTeamStateSet(StateSet.createFromPages(pageRec, WIDTH));\r\n    return true;\r\n  }\r\n\r\n  async function loadInfo() {\r\n    const info = await getTeamNoteInfo(noteId);\r\n    if (!info) {\r\n      message.error(\"Failed loading the team note info\");\r\n      return false;\r\n    }\r\n    setCode(info.code);\r\n    return true;\r\n  }\r\n\r\n  const roomInit = async () => {\r\n    if (!((await loadState()) && (await loadInfo()))) {\r\n      return nav(\"/\");\r\n    }\r\n    ws.on(\"push\", ({ operation }) => {\r\n      setTeamStateSet((prev) => prev?.pushOperation(operation));\r\n    });\r\n\r\n    ws.on(\"joined\", ({ joined, members }) => {\r\n      const { userId, userName } = joined;\r\n      setUserList(members);\r\n      if (userId === getUserId()) return;\r\n      message.destroy(userId);\r\n      message.success({\r\n        icon: <LoginOutlined />,\r\n        content: `${userName} joined room`,\r\n        key: userId,\r\n        style: { marginTop: 60 },\r\n      });\r\n    });\r\n\r\n    ws.on(\"leaved\", ({ leaved, members }) => {\r\n      const { userId, userName } = leaved;\r\n      setUserList(members);\r\n      if (userId === getUserId()) return;\r\n      message.destroy(userId);\r\n      message.warning({\r\n        icon: <LogoutOutlined />,\r\n        content: `${userName} leaved room`,\r\n        key: userId,\r\n        style: { marginTop: 60 },\r\n      });\r\n    });\r\n\r\n    ws.on(\"reorder\", ({ pageOrder }: { pageOrder: string[] }) => {\r\n      setTeamUpdate({ type: \"reorder\", pageOrder });\r\n    });\r\n\r\n    ws.on(\r\n      \"newPage\",\r\n      ({\r\n        pageId,\r\n        newPage,\r\n        pageOrder,\r\n      }: {\r\n        userId: string;\r\n        pageOrder: string[];\r\n        pageId: string;\r\n        newPage: TeamPageInfo;\r\n      }) => {\r\n        const newNotePage = createTeamPage(newPage);\r\n        setTeamUpdate({\r\n          type: \"newPage\",\r\n          pageOrder,\r\n          pageId,\r\n          newPage: newNotePage,\r\n        });\r\n        setTeamStateSet((prev) => prev?.addState(pageId, newNotePage, WIDTH));\r\n      }\r\n    );\r\n\r\n    ws.connect();\r\n  };\r\n\r\n  const roomDestroy = () => {\r\n    ws.removeAllListeners();\r\n    ws.disconnect();\r\n  };\r\n\r\n  useEffect(() => {\r\n    roomInit();\r\n    return roomDestroy;\r\n  }, [noteId]);\r\n\r\n  const pushOperation = (op: SetOperation) => {\r\n    ws.emit(\"push\", { operation: op });\r\n  };\r\n\r\n  const updateReorder = (pageOrder: string[]) => {\r\n    ws.emit(\"reorder\", { pageOrder });\r\n  };\r\n\r\n  const updateNewPage = (\r\n    pageOrder: string[],\r\n    pageId: string,\r\n    newPage: NotePage\r\n  ) => {\r\n    setTeamStateSet((prev) => prev?.addState(pageId, newPage, WIDTH));\r\n    const { image, state, marked, ...newTeamPage } = newPage;\r\n    ws.emit(\"newPage\", { pageOrder, pageId, newPage: newTeamPage });\r\n  };\r\n\r\n  return (\r\n    <TeamCtx.Provider\r\n      value={{\r\n        code,\r\n        userList,\r\n        teamUpdate,\r\n        teamStateSet,\r\n        loadInfo,\r\n        pushOperation,\r\n        updateReorder,\r\n        updateNewPage,\r\n      }}\r\n    >\r\n      <Reader teamOn />\r\n    </TeamCtx.Provider>\r\n  );\r\n}\r\n","import { io } from \"socket.io-client\";\r\nimport { getUserId, getUserName } from \"../user\";\r\nimport { BASE_URL } from \"./http\";\r\n\r\nexport const IoFactory = (noteId: string) => {\r\n  return () =>\r\n    io(BASE_URL, {\r\n      autoConnect: false,\r\n      query: {\r\n        userId: getUserId(),\r\n        userName: getUserName(),\r\n        noteId,\r\n      },\r\n    });\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./digitDisplay.sass\";\r\n\r\nfunction num2digits(num: number): number[] {\r\n  return String(num)\r\n    .padStart(4, \"0\")\r\n    .split(\"\")\r\n    .map((s) => Number(s));\r\n}\r\n\r\nexport default function DigitDisplay({ value }: { value: number }) {\r\n  const [randomNum, setRandomNum] = useState(9999);\r\n  const displayNum = value >= 0 ? value : randomNum;\r\n  const digits = num2digits(displayNum);\r\n\r\n  function resetRandom() {\r\n    setRandomNum(Math.floor(Math.random() * 10000));\r\n  }\r\n  useEffect(() => {\r\n    if (value !== -1) return setRandomNum(9999);\r\n    const timer = setTimeout(resetRandom, 100);\r\n    return () => clearTimeout(timer);\r\n  }, [value]);\r\n\r\n  return (\r\n    <div className={`digit-display ${value === -2 ? \"disabled\" : \"\"}`}>\r\n      {digits.map((d, idx) => (\r\n        <Digit key={idx} digit={d} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Digit({ digit }: { digit: number }) {\r\n  if (!(digit <= 9 && digit >= 0)) {\r\n    return <div className=\"digit\">*</div>;\r\n  }\r\n  return <div className=\"digit\">{digit}</div>;\r\n}\r\n","import { createFromIconfontCN } from \"@ant-design/icons\";\r\n\r\nexport default createFromIconfontCN({\r\n  scriptUrl: \"//at.alicdn.com/t/font_3181679_eb02zt96p4p.js\",\r\n});\r\n","export function exchange<T>(list: T[], fromIndex: number, toIndex: number) {\r\n  const result = list.slice();\r\n  const [removed] = result.splice(fromIndex, 1);\r\n  result.splice(toIndex, 0, removed);\r\n  return result;\r\n}\r\n\r\nexport function insertAfter<T>(list: T[], prevItem: T, newItem: T) {\r\n  const prevIndex = list.indexOf(prevItem);\r\n  const curr = list.slice();\r\n  if (prevIndex === -1) return curr;\r\n  curr.splice(prevIndex + 1, 0, newItem);\r\n  return curr;\r\n}\r\n","import { Button, Input } from 'antd';\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { ReaderMethodCtx, ReaderStateCtx } from './Reader';\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nexport const AddPageButton = () => {\r\n  const { addFinalPage } = useContext(ReaderMethodCtx);\r\n  const { pageOrder } = useContext(ReaderStateCtx);\r\n  const empty = Boolean(pageOrder && !pageOrder.length);\r\n  return (\r\n    <div className={`add-btn-wrapper${empty ? \" empty\" : \"\"}`}>\r\n      <Button\r\n        type=\"dashed\"\r\n        icon={<PlusOutlined />}\r\n        block\r\n        onClick={addFinalPage}\r\n      >\r\n        Add page\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const NoteHeader = () => {\r\n  const { noteInfo } = useContext(ReaderStateCtx);\r\n  const [noteName, setNoteName] = useState('');\r\n  useEffect(() => {\r\n    if (!noteInfo) return;\r\n    setNoteName(noteInfo?.name);\r\n  }, [noteInfo])\r\n  \r\n  if (!noteInfo) return null;\r\n\r\n\r\n  return (\r\n    <div className='note-header'>\r\n      <Input value={noteName} bordered={false} />\r\n    </div>\r\n  )\r\n}\r\n","import { Button, Drawer, Menu, Popover, Tabs } from \"antd\";\r\nimport React, {\r\n  Dispatch,\r\n  MouseEvent,\r\n  SetStateAction,\r\n  useContext,\r\n  useMemo,\r\n  useState,\r\n} from \"react\";\r\nimport { PageWrapper, ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport {\r\n  MoreOutlined,\r\n  PlusOutlined,\r\n  CopyOutlined,\r\n  DeleteOutlined,\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n} from \"@ant-design/icons\";\r\nimport IconFont from \"../ui/IconFont\";\r\nimport {\r\n  Draggable,\r\n  Droppable,\r\n  DropResult,\r\n  DragDropContext,\r\n} from \"react-beautiful-dnd\";\r\nimport \"./preview.sass\";\r\nimport { exchange } from \"../../lib/array\";\r\nimport { AddPageButton } from \"./ReaderTools\";\r\nimport { TeamCtx } from \"./Team\";\r\n\r\nconst PageNavContent = ({\r\n  activeKey,\r\n  setActiveKey,\r\n}: {\r\n  activeKey: string;\r\n  setActiveKey: Dispatch<SetStateAction<string>>;\r\n}) => {\r\n  const { pageOrder, inviewPages } = useContext(ReaderStateCtx);\r\n  const { setPageOrder, scrollPage } = useContext(ReaderMethodCtx);\r\n  const { updateReorder } = useContext(TeamCtx);\r\n\r\n  const onDragEnd = ({ source, destination }: DropResult) => {\r\n    if (!destination || !pageOrder) return;\r\n    const { index: fromIndex } = source;\r\n    const { index: toIndex } = destination;\r\n    const pageId = pageOrder[fromIndex];\r\n    setPageOrder((prev) => {\r\n      if (!prev) return;\r\n      const newOrder = exchange(prev, fromIndex, toIndex);\r\n      updateReorder && updateReorder(newOrder);\r\n      return newOrder;\r\n    });\r\n    requestAnimationFrame(() => scrollPage(pageId));\r\n  };\r\n\r\n  const currPageId = useMemo(\r\n    () => pageOrder?.find((pageId) => inviewPages.has(pageId)) || \"\",\r\n    [pageOrder, inviewPages]\r\n  );\r\n\r\n  return (\r\n    <div className=\"preview-container\">\r\n      <PreviewTabs activeKey={activeKey} setActiveKey={setActiveKey} />\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"droppable\">\r\n          {({ droppableProps, innerRef, placeholder }) => (\r\n            <div className=\"pages\" {...droppableProps} ref={innerRef}>\r\n              {pageOrder?.map((uid, index) => (\r\n                <PagePreview\r\n                  key={uid}\r\n                  uid={uid}\r\n                  pageIndex={index}\r\n                  mode={activeKey}\r\n                  currPageId={currPageId}\r\n                />\r\n              ))}\r\n              {placeholder}\r\n              {activeKey === \"ALL\" && <AddPageButton />}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PagePreview = ({\r\n  uid,\r\n  pageIndex,\r\n  mode,\r\n  currPageId,\r\n}: {\r\n  uid: string;\r\n  pageIndex: number;\r\n  mode: string;\r\n  currPageId: string;\r\n}) => {\r\n  const { stateSet, teamStateSet, pageRec } = useContext(ReaderStateCtx);\r\n  const { scrollPage, switchPageMarked } = useContext(ReaderMethodCtx);\r\n  const page = pageRec && pageRec[uid];\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamState = teamStateSet?.getOneState(uid);\r\n  if (!page || !drawState) return null;\r\n\r\n  if (\r\n    mode === \"WRITTEN\" &&\r\n    drawState.isEmpty() &&\r\n    (!teamState || teamState.isEmpty())\r\n  ) {\r\n    return null;\r\n  } else if (mode === \"MARKED\" && !page.marked) {\r\n    return null;\r\n  }\r\n\r\n  const switchMarked = (e: MouseEvent<HTMLSpanElement>) => {\r\n    switchPageMarked(uid);\r\n    e.stopPropagation();\r\n  };\r\n  const curr = currPageId === uid;\r\n  const dragDisabled = mode !== \"ALL\";\r\n\r\n  return (\r\n    <Draggable\r\n      draggableId={uid}\r\n      index={pageIndex}\r\n      isDragDisabled={dragDisabled}\r\n    >\r\n      {({ innerRef, draggableProps, dragHandleProps }, { isDragging }) => (\r\n        <div\r\n          ref={innerRef}\r\n          className={`page${curr ? \" curr\" : \"\"}${isDragging ? \" drag\" : \"\"}`}\r\n          onClick={() => scrollPage(uid)}\r\n          {...draggableProps}\r\n          {...dragHandleProps}\r\n        >\r\n          <PageWrapper\r\n            uid={uid}\r\n            drawState={drawState}\r\n            teamState={teamState}\r\n            imageBlob={page.image}\r\n            preview\r\n          />\r\n          <span\r\n            className={`bookmark${page.marked ? \" marked\" : \"\"}`}\r\n            onClickCapture={switchMarked}\r\n          />\r\n          <span className=\"index\">{pageIndex + 1}</span>\r\n          <PreviewOption uid={uid} />\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst PreviewOption = ({ uid }: { uid: string }) => {\r\n  const [popShow, setPopShow] = useState(false);\r\n  const { addPage, deletePage } = useContext(ReaderMethodCtx);\r\n  const { teamOn } = useContext(ReaderStateCtx);\r\n  const { Item } = Menu;\r\n\r\n  const menu = (\r\n    <Menu\r\n      onClick={({ key, domEvent }) => {\r\n        if (key === \"ADD\") {\r\n          addPage(uid);\r\n        } else if (key === \"COPY\") {\r\n          addPage(uid, true);\r\n        } else if (key === \"DELETE\") {\r\n          deletePage(uid);\r\n        }\r\n        domEvent.stopPropagation();\r\n        setPopShow(false);\r\n      }}\r\n    >\r\n      <Item key=\"ADD\" icon={<PlusOutlined />}>\r\n        Add page\r\n      </Item>\r\n      <Item key=\"COPY\" icon={<CopyOutlined />}>\r\n        Duplicate\r\n      </Item>\r\n      <Item key=\"DELETE\" danger icon={<DeleteOutlined />} disabled={teamOn}>\r\n        Delete\r\n      </Item>\r\n    </Menu>\r\n  );\r\n  return (\r\n    <Popover\r\n      content={menu}\r\n      trigger=\"click\"\r\n      placement=\"left\"\r\n      visible={popShow}\r\n      onVisibleChange={setPopShow}\r\n      destroyTooltipOnHide\r\n    >\r\n      <span\r\n        className=\"option\"\r\n        onClickCapture={(e) => {\r\n          setPopShow((prev) => !prev);\r\n          e.stopPropagation();\r\n        }}\r\n      >\r\n        <MoreOutlined />\r\n      </span>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst PreviewTabs = ({\r\n  activeKey,\r\n  setActiveKey,\r\n}: {\r\n  activeKey: string;\r\n  setActiveKey: (key: string) => void;\r\n}) => {\r\n  const { TabPane } = Tabs;\r\n  return (\r\n    <Tabs\r\n      className=\"tabs\"\r\n      centered\r\n      tabBarGutter={10}\r\n      size=\"small\"\r\n      activeKey={activeKey}\r\n      onChange={setActiveKey}\r\n    >\r\n      <TabPane tab={<IconFont type=\"icon-uf_paper\" />} key=\"ALL\" />\r\n      <TabPane tab={<IconFont type=\"icon-bookmark2\" />} key=\"MARKED\" />\r\n      <TabPane tab={<IconFont type=\"icon-write\" />} key=\"WRITTEN\" />\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default function PageNav() {\r\n  const [navOn, setNavOn] = useState(false);\r\n  const [activeKey, setActiveKey] = useState<string>(\"ALL\");\r\n  const title = {\r\n    ALL: \"All Pages\",\r\n    MARKED: \"Bookmarks\",\r\n    WRITTEN: \"Notes\",\r\n  }[activeKey];\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        type=\"text\"\r\n        icon={<MenuFoldOutlined />}\r\n        onClick={() => setNavOn((prev) => !prev)}\r\n      />\r\n      <Drawer\r\n        visible={navOn}\r\n        onClose={() => setNavOn(false)}\r\n        width={200}\r\n        title={title}\r\n        closeIcon={<MenuUnfoldOutlined />}\r\n        bodyStyle={{ padding: 0, overflow: \"hidden\" }}\r\n        forceRender\r\n      >\r\n        <PageNavContent activeKey={activeKey} setActiveKey={setActiveKey} />\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","import { Avatar, Button, Divider, Popconfirm, Popover, Slider } from \"antd\";\r\nimport React, { Dispatch, SetStateAction, useContext, useMemo } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { DrawCtrl } from \"../draw/Draw\";\r\nimport { DrawCtrlCtx, ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport DigitDisplay from \"../ui/DigitDisplay\";\r\nimport { colors, getHashedColor } from \"../../lib/color\";\r\nimport { UserInfo } from \"../../lib/user\";\r\nimport {\r\n  HomeFilled,\r\n  UndoOutlined,\r\n  RedoOutlined,\r\n  SaveOutlined,\r\n  TeamOutlined,\r\n  ReloadOutlined,\r\n  HighlightOutlined,\r\n} from \"@ant-design/icons\";\r\nimport \"./drawTools.sass\";\r\nimport PageNav from \"./PageNav\";\r\nimport IconFont from \"../ui/IconFont\";\r\n\r\nexport default function DrawTools({\r\n  setDrawCtrl,\r\n  handleUndo,\r\n  handleRedo,\r\n  instantSave,\r\n}: {\r\n  setDrawCtrl: Dispatch<SetStateAction<DrawCtrl>>;\r\n  handleUndo: () => void;\r\n  handleRedo: () => void;\r\n  instantSave: () => void;\r\n}) {\r\n  const { erasing, finger } = useContext(DrawCtrlCtx);\r\n  const { saved, stateSet, teamOn } = useContext(ReaderStateCtx);\r\n  const nav = useNavigate();\r\n\r\n  const updateDrawCtrl = (updated: Partial<DrawCtrl>) => {\r\n    setDrawCtrl((prev) => ({ ...prev, ...updated }));\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"left\">\r\n        <Button\r\n          type=\"text\"\r\n          onClick={() => nav(\"/\")}\r\n          icon={<HomeFilled className=\"home-icon\" />}\r\n        />\r\n        <br />\r\n        <Button\r\n          type=\"text\"\r\n          className=\"save\"\r\n          onClick={instantSave}\r\n          disabled={saved}\r\n          icon={<SaveOutlined />}\r\n        />\r\n      </div>\r\n      <div className=\"middle\">\r\n        <Button\r\n          type=\"text\"\r\n          shape=\"circle\"\r\n          icon={<UndoOutlined />}\r\n          onClick={handleUndo}\r\n          disabled={!stateSet?.isUndoable()}\r\n        />\r\n        <Button\r\n          className=\"redo\"\r\n          type=\"text\"\r\n          shape=\"circle\"\r\n          icon={<RedoOutlined />}\r\n          onClick={handleRedo}\r\n          disabled={!stateSet?.isRedoable()}\r\n        />\r\n        <br />\r\n        <PenButton erasing={erasing} updateDrawCtrl={updateDrawCtrl} />\r\n        <Button\r\n          type={erasing ? \"default\" : \"text\"}\r\n          shape=\"circle\"\r\n          onClick={() => updateDrawCtrl({ erasing: true })}\r\n          icon={<IconFont type=\"icon-eraser\" />}\r\n        />\r\n        <Button\r\n          type={finger ? \"primary\" : \"text\"}\r\n          ghost={finger}\r\n          shape=\"circle\"\r\n          onClick={() => updateDrawCtrl({ finger: !finger })}\r\n          icon={<IconFont type=\"icon-finger\" />}\r\n        />\r\n      </div>\r\n      <div className=\"right\">\r\n        {teamOn && <RoomInfo />}\r\n        {teamOn || <JoinRoom />}\r\n        <br />\r\n        <PageNav />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nconst PenButton = React.memo(\r\n  ({\r\n    erasing,\r\n    updateDrawCtrl,\r\n  }: {\r\n    erasing: boolean;\r\n    updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n  }) => {\r\n    return erasing ? (\r\n      <Button\r\n        type=\"text\"\r\n        shape=\"circle\"\r\n        onClick={() => updateDrawCtrl({ erasing: false })}\r\n        icon={<HighlightOutlined />}\r\n      />\r\n    ) : (\r\n      <Popover\r\n        content={<PenPanel updateDrawCtrl={updateDrawCtrl} />}\r\n        trigger=\"click\"\r\n        placement=\"bottom\"\r\n        getPopupContainer={(e) => e}\r\n      >\r\n        <Button type=\"default\" shape=\"circle\" icon={<HighlightOutlined />} />\r\n      </Popover>\r\n    );\r\n  }\r\n);\r\n\r\nconst PenPanel = ({\r\n  updateDrawCtrl,\r\n}: {\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}) => {\r\n  const { lineWidth, highlight } = useContext(DrawCtrlCtx);\r\n\r\n  return (\r\n    <div className=\"pen-panel\">\r\n      <div className=\"pen-status\">\r\n        <Slider\r\n          min={5}\r\n          max={50}\r\n          value={lineWidth}\r\n          onChange={(lineWidth) => updateDrawCtrl({ lineWidth })}\r\n        />\r\n        <Button\r\n          type={highlight ? \"primary\" : \"text\"}\r\n          ghost={highlight}\r\n          shape=\"circle\"\r\n          icon={<IconFont type=\"icon-Highlight\" />}\r\n          onClick={() => updateDrawCtrl({ highlight: !highlight })}\r\n        />\r\n      </div>\r\n      <ColorSelect updateDrawCtrl={updateDrawCtrl} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ColorSelect = ({\r\n  updateDrawCtrl,\r\n}: {\r\n  updateDrawCtrl: (updated: Partial<DrawCtrl>) => void;\r\n}) => {\r\n  const { color } = useContext(DrawCtrlCtx);\r\n\r\n  return (\r\n    <div className=\"color-select\">\r\n      {colors.map((c) => (\r\n        <input\r\n          key={c}\r\n          checked={color === c}\r\n          type=\"radio\"\r\n          name=\"color\"\r\n          onChange={() => updateDrawCtrl({ color: c })}\r\n          style={{ borderColor: c, backgroundColor: c }}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst UserCard = ({ userInfo }: { userInfo: UserInfo }) => {\r\n  const { userName } = userInfo;\r\n  const color = useMemo(() => getHashedColor(userName), [userName]);\r\n\r\n  return (\r\n    <div className=\"user-card\">\r\n      <Avatar\r\n        className=\"avatar\"\r\n        size=\"small\"\r\n        style={{ backgroundColor: color }}\r\n      >\r\n        {userName.slice(0, 4)}\r\n      </Avatar>\r\n      <span>{userName}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction RoomInfo() {\r\n  const { code, userList, loadInfo } = useContext(TeamCtx);\r\n\r\n  const content = (\r\n    <div className=\"team-popover\">\r\n      <DigitDisplay value={code} />\r\n      <Divider />\r\n      <div className=\"user-list\">\r\n        {userList.map((u) => (\r\n          <UserCard key={u.userId} userInfo={u} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const title = (\r\n    <div className=\"team-title\">\r\n      <span>Team info</span>\r\n      <Button\r\n        shape=\"circle\"\r\n        type=\"text\"\r\n        size=\"small\"\r\n        icon={<ReloadOutlined />}\r\n        onClick={loadInfo}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Popover\r\n      content={content}\r\n      trigger=\"click\"\r\n      placement=\"bottomRight\"\r\n      title={title}\r\n      defaultVisible\r\n      getPopupContainer={(e) => e}\r\n    >\r\n      <Button type=\"text\" icon={<TeamOutlined />} />\r\n    </Popover>\r\n  );\r\n}\r\n\r\nconst JoinRoom = () => {\r\n  const { createRoom } = useContext(ReaderMethodCtx);\r\n  return (\r\n    <Popconfirm\r\n      placement=\"bottomRight\"\r\n      title=\"Enable team editing?\"\r\n      onConfirm={createRoom}\r\n      okText=\"Yes\"\r\n      cancelText=\"No\"\r\n    >\r\n      <Button type=\"text\" icon={<TeamOutlined />} />\r\n    </Popconfirm>\r\n  );\r\n};\r\n","import { message } from \"antd\";\r\nimport React, {\r\n  createContext,\r\n  Dispatch,\r\n  FC,\r\n  SetStateAction,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport Draw, { DrawCtrl } from \"../draw/Draw\";\r\nimport { DrawState } from \"../../lib/draw/DrawState\";\r\nimport { createPage, NoteInfo, NotePage } from \"../../lib/note/note\";\r\nimport { StateSet } from \"../../lib/draw/StateSet\";\r\nimport { loadNote, editNoteData } from \"../../lib/note/archive\";\r\nimport { debounce, last, omit } from \"lodash\";\r\nimport { putNote, updatePages } from \"../../lib/network/http\";\r\nimport { useBeforeunload } from \"react-beforeunload\";\r\nimport DrawTools from \"./DrawTools\";\r\nimport dafaultImg from \"../ui/default.png\";\r\nimport { getOneImage } from \"../../lib/note/pdfImage\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { Set } from \"immutable\";\r\nimport { insertAfter } from \"../../lib/array\";\r\nimport { AddPageButton } from \"./ReaderTools\";\r\nimport { useObjectUrl } from \"../../lib/hooks\";\r\nimport { TeamCtx } from \"./Team\";\r\nimport \"./reader.sass\";\r\n\r\nexport const WIDTH = 2000;\r\n\r\nconst defaultDrawCtrl: DrawCtrl = {\r\n  erasing: false,\r\n  finger: false,\r\n  even: true,\r\n  lineWidth: 10,\r\n  color: \"#000000\",\r\n  highlight: false,\r\n};\r\nexport const DrawCtrlCtx = createContext(defaultDrawCtrl);\r\nexport const ReaderStateCtx = createContext({\r\n  noteId: \"\",\r\n  noteInfo: undefined as NoteInfo | undefined,\r\n  stateSet: undefined as StateSet | undefined,\r\n  teamStateSet: undefined as StateSet | undefined,\r\n  pdfUrl: undefined as string | undefined,\r\n  pageRec: undefined as Record<string, NotePage> | undefined,\r\n  pageOrder: undefined as string[] | undefined,\r\n  saved: true,\r\n  teamOn: false,\r\n  inviewPages: Set<string>(),\r\n  refRec: {} as Record<string, HTMLDivElement>,\r\n});\r\nexport const ReaderMethodCtx = createContext({\r\n  createRoom: () => {},\r\n  scrollPage: (() => {}) as (pageId: string) => void,\r\n  setInviewPages: (() => {}) as Dispatch<SetStateAction<Set<string>>>,\r\n  switchPageMarked: (() => {}) as (pageId: string) => void,\r\n  setPageOrder: (() => {}) as Dispatch<SetStateAction<string[] | undefined>>,\r\n  setPageState: (() => {}) as (uid: string, ds: DrawState) => void,\r\n  addPage: (() => {}) as (prevPageId: string, copy?: boolean) => void,\r\n  addFinalPage: (() => {}) as () => void,\r\n  deletePage: (() => {}) as (pageId: string) => void,\r\n});\r\n\r\nexport default function Reader({ teamOn }: { teamOn: boolean }) {\r\n  const noteId = useParams().noteId ?? \"\";\r\n  const nav = useNavigate();\r\n\r\n  const [pageRec, setPageRec] = useState<Record<string, NotePage>>();\r\n  const [noteInfo, setNoteInfo] = useState<NoteInfo>();\r\n  const [stateSet, setStateSet] = useState<StateSet>();\r\n  const [drawCtrl, setDrawCtrl] = useState(defaultDrawCtrl);\r\n  const [saved, setSaved] = useState(true);\r\n  const [pdfUrl, setPdfUrl] = useState<string>();\r\n  const [inviewPages, setInviewPages] = useState(Set<string>());\r\n  const [pageOrder, setPageOrder] = useState<string[]>();\r\n  const [loaded, setLoaded] = useState(false);\r\n  const refRec = useRef<Record<string, HTMLDivElement>>({});\r\n\r\n  const { teamStateSet, pushOperation, teamUpdate, updateNewPage } =\r\n    useContext(TeamCtx);\r\n\r\n  const loadNotePages = async () => {\r\n    const storedNote = await loadNote(noteId);\r\n    if (!storedNote) {\r\n      message.error(\"Note not found\");\r\n      return nav(\"/\");\r\n    }\r\n    const { pageRec, pdf, pageOrder, ...noteInfo } = storedNote;\r\n    setPageRec(pageRec);\r\n    setPageOrder(pageOrder);\r\n    setNoteInfo(noteInfo);\r\n    setStateSet(StateSet.createFromPages(pageRec, WIDTH));\r\n    setLoaded(true);\r\n    if (pdf) setPdfUrl(URL.createObjectURL(pdf));\r\n    if (teamOn) updatePages(noteId);\r\n  };\r\n\r\n  const debouncedSave = useCallback(\r\n    debounce(async (pr: Record<string, NotePage>) => {\r\n      await editNoteData(noteId, { pageRec: pr });\r\n      setSaved(true);\r\n    }, 1000),\r\n    []\r\n  );\r\n  const instantSave = debouncedSave.flush;\r\n\r\n  const createRoom = async () => {\r\n    await instantSave();\r\n    const resCode = await putNote(noteId);\r\n    if (!resCode) {\r\n      message.error(\"Can't create room.\");\r\n      return;\r\n    }\r\n    await editNoteData(noteId, { team: true });\r\n    nav(\"/team/\" + noteId);\r\n  };\r\n\r\n  const noteInit = () => {\r\n    loadNotePages();\r\n  };\r\n\r\n  const noteDestroy = () => {\r\n    instantSave();\r\n  };\r\n\r\n  useEffect(() => {\r\n    noteInit();\r\n    return noteDestroy;\r\n  }, [noteId, teamOn]);\r\n\r\n  useEffect(() => {\r\n    if (!noteInfo) return;\r\n    document.title = noteInfo.name;\r\n  }, [noteInfo]);\r\n\r\n  useBeforeunload(noteDestroy);\r\n\r\n  useEffect(() => {\r\n    if (!stateSet?.lastOp || !pushOperation) return;\r\n    pushOperation(stateSet.lastOp);\r\n  }, [stateSet]);\r\n\r\n  useEffect(() => {\r\n    if (!pageRec || !loaded) return;\r\n    debouncedSave(pageRec);\r\n    setSaved(false);\r\n  }, [pageRec]);\r\n\r\n  useEffect(() => {\r\n    const handleReorder = async () => {\r\n      if (!pageOrder || !loaded) return;\r\n      await editNoteData(noteId, { pageOrder });\r\n      await instantSave();\r\n      const teamOrder = teamUpdate?.pageOrder;\r\n      if (teamOn && JSON.stringify(pageOrder) !== JSON.stringify(teamOrder)) {\r\n        updatePages(noteId);\r\n      }\r\n    };\r\n    handleReorder();\r\n  }, [pageOrder]);\r\n\r\n  useEffect(() => {\r\n    if (!teamUpdate) return;\r\n    const { type, pageOrder } = teamUpdate;\r\n    if (type === \"reorder\") {\r\n      setPageOrder(pageOrder);\r\n    } else if (type === \"newPage\") {\r\n      setPageOrder(pageOrder);\r\n      const { pageId, newPage } = teamUpdate;\r\n      setPageRec((prev) => prev && { ...prev, [pageId]: newPage });\r\n      setStateSet((prev) => prev?.addState(pageId, newPage, WIDTH));\r\n    }\r\n  }, [teamUpdate]);\r\n\r\n  const updatePageRec = (pageId: string, ds: DrawState) => {\r\n    const state = DrawState.flaten(ds);\r\n    setPageRec(\r\n      (prev) => prev && { ...prev, [pageId]: { ...prev[pageId], state } }\r\n    );\r\n  };\r\n\r\n  const setPageState = useCallback((uid: string, ds: DrawState) => {\r\n    setStateSet((prev) => prev?.setState(uid, ds));\r\n    updatePageRec(uid, ds);\r\n  }, []);\r\n\r\n  const switchPageMarked = (pageId: string) => {\r\n    const page = pageRec && pageRec[pageId];\r\n    if (!page) return;\r\n    const marked = !Boolean(page.marked);\r\n    setPageRec(\r\n      (prev) => prev && { ...prev, [pageId]: { ...prev[pageId], marked } }\r\n    );\r\n  };\r\n\r\n  const handleUndo = () => {\r\n    setStateSet((prev) => {\r\n      if (!prev) return;\r\n      const newSS = prev.undo();\r\n      updatePageRec(...newSS.getLastDs());\r\n      return newSS;\r\n    });\r\n  };\r\n\r\n  const handleRedo = () => {\r\n    setStateSet((prev) => {\r\n      if (!prev) return;\r\n      const newSS = prev.redo();\r\n      updatePageRec(...newSS.getLastDs());\r\n      return newSS;\r\n    });\r\n  };\r\n\r\n  const scrollPage = (pageId: string) => {\r\n    refRec.current[pageId]?.scrollIntoView();\r\n  };\r\n\r\n  const addPage = (prevPageId: string, copy = false) => {\r\n    const prevPage = copy ? pageRec && pageRec[prevPageId] : undefined;\r\n    const [pageId, newPage] = createPage(prevPage);\r\n    setPageOrder((prev) => {\r\n      if (!prev) return;\r\n      const newOrder = insertAfter(prev, prevPageId, pageId);\r\n      updateNewPage && updateNewPage(newOrder, pageId, newPage);\r\n      return newOrder;\r\n    });\r\n    setPageRec((prev) => prev && { ...prev, [pageId]: newPage });\r\n    setStateSet((prev) => prev?.addState(pageId, newPage, WIDTH));\r\n  };\r\n\r\n  const addFinalPage = () => {\r\n    const lastPageId = last(pageOrder);\r\n    lastPageId && addPage(lastPageId);\r\n  };\r\n\r\n  const deletePage = (pageId: string) => {\r\n    if (teamOn) {\r\n      message.error(\"You can't delete pages from a team note.\");\r\n      return;\r\n    }\r\n    setPageOrder((prev) => prev?.filter((id) => id !== pageId));\r\n    setPageRec((prev) => prev && omit(prev, pageId));\r\n    setStateSet((prev) => prev?.deleteState(pageId));\r\n  };\r\n\r\n  const renderResult = (\r\n    <div className=\"reader-container\">\r\n      <DrawTools\r\n        setDrawCtrl={setDrawCtrl}\r\n        instantSave={instantSave}\r\n        handleUndo={handleUndo}\r\n        handleRedo={handleRedo}\r\n      />\r\n      <main>\r\n        {pageOrder?.map((uid, index) => (\r\n          <PageContainer uid={uid} pageIndex={index} key={uid} />\r\n        ))}\r\n        <AddPageButton />\r\n      </main>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <DrawCtrlCtx.Provider value={drawCtrl}>\r\n      <ReaderStateCtx.Provider\r\n        value={{\r\n          noteId,\r\n          noteInfo,\r\n          stateSet,\r\n          teamStateSet,\r\n          saved,\r\n          teamOn,\r\n          pdfUrl,\r\n          pageRec,\r\n          pageOrder,\r\n          inviewPages,\r\n          refRec: refRec.current,\r\n        }}\r\n      >\r\n        <ReaderMethodCtx.Provider\r\n          value={{\r\n            createRoom,\r\n            scrollPage,\r\n            setInviewPages,\r\n            switchPageMarked,\r\n            setPageOrder,\r\n            setPageState,\r\n            addPage,\r\n            addFinalPage,\r\n            deletePage,\r\n          }}\r\n        >\r\n          {renderResult}\r\n        </ReaderMethodCtx.Provider>\r\n      </ReaderStateCtx.Provider>\r\n    </DrawCtrlCtx.Provider>\r\n  );\r\n}\r\n\r\nconst PageContainer: FC<{\r\n  uid: string;\r\n  pageIndex: number;\r\n}> = ({ uid, pageIndex }) => {\r\n  const { pageRec, stateSet, teamStateSet, pdfUrl, refRec } =\r\n    useContext(ReaderStateCtx);\r\n  const { setPageState } = useContext(ReaderMethodCtx);\r\n\r\n  const page = pageRec && pageRec[uid];\r\n  const drawState = stateSet?.getOneState(uid);\r\n  const teamState = teamStateSet?.getOneState(uid);\r\n  if (!page || !drawState) return null;\r\n\r\n  return (\r\n    <PageWrapper\r\n      drawState={drawState}\r\n      teamState={teamState}\r\n      updateState={setPageState}\r\n      imageBlob={page.image}\r\n      pdfUrl={pdfUrl}\r\n      pdfIndex={page.pdfIndex}\r\n      uid={uid}\r\n      refRec={refRec}\r\n    />\r\n  );\r\n};\r\n\r\nexport const PageWrapper = React.memo(\r\n  ({\r\n    imageBlob,\r\n    drawState,\r\n    teamState,\r\n    uid,\r\n    pdfUrl,\r\n    pdfIndex,\r\n    updateState,\r\n    refRec,\r\n    preview = false,\r\n  }: {\r\n    uid: string;\r\n    drawState: DrawState;\r\n    teamState?: DrawState;\r\n    imageBlob?: Blob;\r\n    pdfUrl?: string;\r\n    pdfIndex?: number;\r\n    updateState?: (uid: string, ds: DrawState) => void;\r\n    refRec?: Record<string, HTMLDivElement>;\r\n    preview?: boolean;\r\n  }) => {\r\n    const { setInviewPages } = useContext(ReaderMethodCtx);\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [realImage, setRealImage] = useState<Blob>();\r\n    const [visibleRef, visible] = useInView({ delay: 100 });\r\n    const thumbnailUrl = useObjectUrl(imageBlob);\r\n    const imgUrl = useObjectUrl(realImage);\r\n\r\n    const handleRef = useCallback(\r\n      (e: HTMLDivElement | null) => {\r\n        if (!e) return;\r\n        visibleRef(e);\r\n        if (refRec) refRec[uid] = e;\r\n      },\r\n      [refRec]\r\n    );\r\n\r\n    const loadImage = useCallback(\r\n      (() => {\r\n        let called = false;\r\n        return () => {\r\n          if (preview || !pdfUrl || !pdfIndex || called) {\r\n            return;\r\n          }\r\n          called = true;\r\n          getOneImage(pdfUrl, pdfIndex).then(setRealImage);\r\n        };\r\n      })(),\r\n      [preview, pdfUrl, pdfIndex]\r\n    );\r\n\r\n    useEffect(() => {\r\n      if (preview) return;\r\n      if (visible) {\r\n        loadImage();\r\n        setInviewPages((prev) => prev.add(uid));\r\n      } else {\r\n        setInviewPages((prev) => prev.delete(uid));\r\n      }\r\n    }, [visible, loadImage, preview]);\r\n\r\n    const TeamDraw = teamState && (\r\n      <Draw drawState={teamState} readonly preview={preview} />\r\n    );\r\n\r\n    const SelfDraw = preview ? (\r\n      <Draw drawState={drawState} readonly preview />\r\n    ) : (\r\n      <DrawWrapper\r\n        updateState={updateState}\r\n        drawState={drawState}\r\n        uid={uid}\r\n        preview={preview}\r\n      />\r\n    );\r\n\r\n    const maskShow = Boolean(preview || (pdfIndex && !imgUrl));\r\n\r\n    return (\r\n      <section\r\n        ref={handleRef}\r\n        className={`note-page${loaded ? \" loaded\" : \"\"}`}\r\n      >\r\n        <img\r\n          src={imgUrl || thumbnailUrl || dafaultImg}\r\n          alt=\"pdf-page\"\r\n          onLoad={() => setLoaded(true)}\r\n        />\r\n        {visible && (\r\n          <div className=\"page-draw\">\r\n            {TeamDraw}\r\n            {SelfDraw}\r\n          </div>\r\n        )}\r\n        {maskShow && <div className=\"mask\" />}\r\n      </section>\r\n    );\r\n  }\r\n);\r\nPageWrapper.displayName = \"PageWrapper\";\r\n\r\nconst DrawWrapper = React.memo(\r\n  ({\r\n    drawState,\r\n    uid,\r\n    updateState,\r\n    preview = false,\r\n  }: {\r\n    drawState: DrawState;\r\n    uid: string;\r\n    updateState?: (uid: string, ds: DrawState) => void;\r\n    preview?: boolean;\r\n  }) => {\r\n    const drawCtrl = useContext(DrawCtrlCtx);\r\n\r\n    function handleChange(fn: ((s: DrawState) => DrawState) | DrawState) {\r\n      if (!updateState) return;\r\n      let ds = fn instanceof DrawState ? fn : fn(drawState);\r\n      updateState(uid, ds);\r\n    }\r\n\r\n    return (\r\n      <Draw\r\n        drawState={drawState}\r\n        onChange={handleChange}\r\n        readonly={!updateState}\r\n        preview={preview}\r\n        {...drawCtrl}\r\n      />\r\n    );\r\n  }\r\n);\r\nDrawWrapper.displayName = \"DrawWrapper\";\r\n","import React from \"react\";\r\n\r\nexport default function Test() {\r\n  return <></>;\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\r\nimport MainMenu from \"./component/menu/MainMenu\";\r\nimport Reader from \"./component/reader/Reader\";\r\nimport Test from \"./component/Test\";\r\nimport Team from \"./component/reader/Team\";\r\n\r\nconst placeholderEl = (\r\n  <main style={{ padding: \"1rem\" }}>\r\n    <p>There's nothing here!</p>\r\n  </main>\r\n);\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <Routes>\r\n      <Route path=\"/\" element={<MainMenu />} />\r\n      <Route path=\"/reader\">\r\n        <Route path=\":noteId\" element={<Reader teamOn={false} />} />\r\n      </Route>\r\n      <Route path=\"/team\">\r\n        <Route path=\":noteId\" element={<Team />} />\r\n      </Route>\r\n      <Route path=\"/test\" element={<Test />} />\r\n      <Route path=\"*\" element={placeholderEl} />\r\n    </Routes>\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}