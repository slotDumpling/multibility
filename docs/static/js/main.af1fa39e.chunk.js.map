{"version":3,"sources":["lib/draw/DrawState.ts","lib/note/note.ts","lib/user.ts","lib/color.ts","lib/note/archive.ts","lib/note/pdfImage.ts","lib/network/http.ts","component/ui/DigitInput.tsx","component/menu/RightTools.tsx","component/menu/LeftTools.tsx","component/menu/SideMenu.tsx","component/ui/default.png","component/menu/NoteList.tsx","component/menu/MainMenu.tsx","lib/draw/drawer.ts","component/draw/DrawDisplay.tsx","component/draw/DrawInput.tsx","component/draw/Draw.tsx","lib/draw/StateSet.ts","component/reader/Team.tsx","lib/network/io.ts","component/ui/DigitDisplay.tsx","component/reader/DrawTools.tsx","component/reader/Reader.tsx","component/Test.tsx","index.tsx"],"names":["defaultRecord","state","strokes","List","uidStack","undoStack","OrderedSet","eraseStack","deleted","Set","position","defaultFactory","Record","defaultFlatState","DrawState","immutable","width","height","lastOp","this","getImmutable","get","getDeleted","undo","getUndoStack","getEraseStack","filter","uid","has","erase","getValidEraseStack","getStrokes","some","s","erased","last","drawState","getUidStack","type","undoUid","set","update","add","pop","redoUid","butLast","push","imageData","points","getUid","stroke","pushedState","mergeUndo","d","concat","getPosition","data","len","length","i","updatePosition","validStrokes","getValidStrokes","strokeSet","map","getErasedStrokes","size","toArray","immuErase","RedoUid","delete","mergedRecord","reduce","prev","e","deletedAll","arr","drawStateRecord","createEmptyNote","name","Date","now","tagId","team","withImg","pages","ratio","getUserId","cached","userId","localStorage","getItem","setItem","getUserName","slice","colors","getRandomColor","index","Math","floor","random","getAllNotes","a","localforage","allNotes","getAllTags","tags","storeTag","newTag","color","notes","deleteTag","editTag","tag","editedTag","loadNote","editNoteData","note","pdf","noteInfo","prevNote","saveNoteInfo","createNewNote","deleteNote","removeItem","id","moveNoteTag","noteId","prevTagId","convertTeamPage","teamPages","notePages","Object","entries","key","page","states","values","flat","saveTeamNote","console","log","getCanvasBlob","canvas","Promise","res","toBlob","getPageImage","pageNum","scale","getPage","viewport","getViewport","document","createElement","context","getContext","Error","time","render","canvasContext","transform","promise","timeEnd","blob","getImages","url","progressCb","pdfjs","numPages","blobs","ratios","thumbnail","images","LoadPDF","file","URL","createObjectURL","forEach","image","idx","replace","workerSrc","pdfjsWorker","BASE_URL","getNoteId","roomCode","axios","statusCode","pageInfos","pageId","method","responseType","error","defaults","baseURL","interceptors","request","use","config","deletePagesPosition","pageRecord","cloneDeep","keys","putNote","put","formData","FormData","append","headers","code","updatePages","getTeamNote","info","DigitInput","value","digitNum","onChange","onSubmit","num2digits","num","Array","fill","String","padEnd","split","useState","nowFocused","setNowFocused","digits","setDigits","focus","inputRefs","current","el","blur","useEffect","newDigits","findIndex","newValue","Number","join","useRef","handleKeyUp","max","className","ref","pattern","val","test","handleChange","target","onKeyUp","onClick","OthersStateUpdateCtx","createContext","setActive","RightTools","JoinTeamButton","OthersMenu","useContext","Item","Menu","FilePdfOutlined","UserOutlined","SeconaryMenu","children","title","shape","icon","ArrowLeftOutlined","level","UploadPdfPage","loading","setLoading","tagUid","MenuStateCtx","MenuStateUpdateCtx","setAllTags","setAllNotes","percent","setPercent","message","success","disabled","multiple","action","accept","beforeUpload","InboxOutlined","ProfilePage","userName","setName","prefix","trim","setUserName","block","OthersPage","setHeight","active","cssProps","timeout","onEnter","clientHeight","unmountOnExit","cssProps2","classNames","Provider","style","CSSTransition","in","OthersButton","placement","trigger","content","CaretDownOutlined","setRoomCode","nav","useNavigate","dismiss","destroyTooltipOnHide","TeamOutlined","LeftTools","editing","setEditing","TagCircle","backgroundColor","TagItem","noteTag","setTagUid","tagEditing","setTagEditing","tagName","setTagName","tagColor","setTagColor","newAllTags","colorSelector","onSelect","c","Option","TagNameInput","addonBefore","onConfirm","okText","cancelText","danger","MinusCircleOutlined","CheckOutlined","CloseOutlined","SettingOutlined","AddTag","popContent","placeholder","onSearch","allowClear","enterButton","PlusOutlined","TagOutlined","SideMenu","allTags","htmlFor","MenuOutlined","defaultSelectedKeys","defaultOpenKeys","mode","ProfileOutlined","NoteList","noteList","NoteItem","href","noteName","setNoteName","removeNote","useMemo","prevUrl","revokeObjectURL","move","TagButton","overlay","t","TagsOutlined","DeleteButton","DeleteOutlined","to","src","dafaultImg","alt","CloudOutlined","onBlur","MainMenu","selectedTag","then","NewNoteButton","FormOutlined","Drawer","point","x","y","lineWidth","beginPath","moveTo","toP","fromP","xc","yc","strokeStyle","lineCap","lineJoin","quadraticCurveTo","getImageData","MIRROR_SIZE","DualDrawer","mainDrawer","mirrorDrawer","createRaw","drawBegin","computeMirrorPoint","drawCurve","pressure","React","memo","canvasEl","addEventListener","preventDefault","passive","ctx","clearRect","drawer","clonedPs","firstP","shift","p","drawPoints","Drawinput","setDrawState","finger","even","clientWidth","isDrawing","getCanvasEl","clientRect","getBoundingClientRect","offsetX","clientX","left","offsetY","clientY","top","updateClientSize","isFinger","touches","touchType","handleEnd","updateInput","getMirrorImageData","requestAnimationFrame","cvs","touchPrevent","removeEventListener","onTouchStart","touch","force","newP","computeLineWidth","onMouseDown","onTouchMove","onMouseMove","onTouchEnd","onMouseUp","onMouseLeave","Draw","erasing","eraseStrokes","addStroke","OrderedMap","editStack","Rec","StateSet","newImmu","getStates","getEditStack","isUndoable","lastUid","prevDS","lastSetOp","newDS","isRedoable","redo","prevDs","ds","pushStroke","setState","SetOp","pushErase","pushUndo","pushRedo","list","item","createFromList","loadFromFlat","TeamStateCtx","userList","Team","useParams","teamStateSet","setTeamStateSet","setCode","setUserList","io","autoConnect","query","IoFactory","ws","loadTeamPages","createFromPages","WIDTH","roomInit","on","operation","pushOperation","joined","members","LoginOutlined","leaved","warning","LogoutOutlined","connect","roomDestroy","off","disconnect","Reader","teamOn","op","emit","DigitDisplay","randomNum","setRandomNum","padStart","resetRandom","timer","setTimeout","clearTimeout","Digit","digit","IconFont","createFromIconfontCN","scriptUrl","DrawTools","setDrawCtrl","handleUndo","handleRedo","instantSave","drawCtrl","DrawCtrlCtx","ReaderStateCtx","saved","stateSet","updateDrawCtrl","updated","PenPanel","min","PenButton","HighlightOutlined","getPopupContainer","parentElement","LeftOutlined","SaveOutlined","UndoOutlined","RedoOutlined","RoomInfo","UserCard","userInfo","u","defaultVisible","JoinRoom","createRoom","ReaderMethodCtx","defaultDrawCtrl","undefined","setSaved","setPageRecord","setNote","setStateSet","loadNotePages","storedNote","debouncedSave","useCallback","debounce","pr","flush","noteDestroy","useBeforeunload","setPageState","flaten","getKeys","getOneState","teamState","PageWrapper","updateState","imageBlob","loaded","setLoaded","onLoad","DrawDisplay","DrawWrapper","fn","Test","transition","placeholderEl","padding","ReactDOM","path","element","getElementById"],"mappings":"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","file":"static/js/main.af1fa39e.chunk.js","sourcesContent":["import { List, OrderedSet, Record, Set } from \"immutable\";\nimport { Dispatch, SetStateAction } from \"react\";\nimport { Point } from \"./draw\";\nimport { v4 as getUid } from \"uuid\";\n\nexport interface Stroke {\n  uid: string;\n  points: Point[];\n}\n\ninterface Erase {\n  uid: string;\n  erased: string[];\n}\n\ninterface ImmuErase {\n  uid: string;\n  erased: Set<string>;\n}\n\nexport type Operation =\n  | {\n      type: \"add\";\n      stroke: Stroke;\n    }\n  | {\n      type: \"erase\";\n      erase: Erase;\n    }\n  | {\n      type: \"undo\";\n      undoUid: string;\n    }\n  | {\n      type: \"redo\";\n      redoUid: string;\n    };\n\ninterface DrawStateRecordType {\n  state: \"drawing\" | \"revoking\";\n  strokes: List<Stroke>;\n  uidStack: List<string>;\n  undoStack: OrderedSet<string>;\n  eraseStack: List<ImmuErase>;\n  deleted: Set<string>;\n  position: List<Set<string>>;\n}\n\ntype DrawStateRecord = Record<DrawStateRecordType>;\n\nconst defaultRecord: Readonly<DrawStateRecordType> = {\n  state: \"drawing\",\n  strokes: List(),\n  uidStack: List(),\n  undoStack: OrderedSet(),\n  eraseStack: List(),\n  deleted: Set(),\n  position: List<Set<string>>(),\n};\n\nconst defaultFactory = Record(defaultRecord);\n\nexport interface FlatState {\n  strokes: Stroke[];\n  position?: string[][];\n}\n\nexport const defaultFlatState: FlatState = {\n  strokes: [],\n  position: [],\n};\n\nexport class DrawState {\n  constructor(\n    private immutable: DrawStateRecord,\n    public readonly width: number,\n    public readonly height: number,\n    public lastOp?: Operation\n  ) {}\n\n  getImmutable() {\n    return this.immutable;\n  }\n\n  getUidStack() {\n    return this.getImmutable().get(\"uidStack\");\n  }\n\n  getUndoStack() {\n    return this.getImmutable().get(\"undoStack\");\n  }\n\n  getEraseStack() {\n    return this.getImmutable().get(\"eraseStack\");\n  }\n\n  getValidEraseStack() {\n    const deleted = this.getDeleted();\n    const undo = this.getUndoStack();\n    return this.getEraseStack().filter(\n      ({ uid }) => !deleted.has(uid) && !undo.has(uid)\n    );\n  }\n\n  getStrokes() {\n    return this.getImmutable().get(\"strokes\");\n  }\n\n  getValidStrokes() {\n    const deleted = this.getDeleted();\n    const undo = this.getUndoStack();\n    const erase = this.getValidEraseStack();\n    return this.getStrokes().filter(\n      ({ uid }) =>\n        !deleted.has(uid) &&\n        !undo.has(uid) &&\n        !erase.some((s) => s.erased.has(uid))\n    );\n  }\n\n  getDeleted() {\n    return this.getImmutable().get(\"deleted\");\n  }\n\n  getState() {\n    return this.getImmutable().get(\"state\");\n  }\n\n  getPosition() {\n    return this.getImmutable().get(\"position\");\n  }\n\n  getLastStroke() {\n    return this.getImmutable().get(\"strokes\").last();\n  }\n\n  static createEmpty(width: number, height: number) {\n    return new DrawState(defaultFactory(), width, height);\n  }\n\n  static undo(drawState: DrawState) {\n    const uid = drawState.getUidStack().last();\n\n    if (!uid) {\n      return drawState;\n    }\n\n    const lastOp: Operation = {\n      type: \"undo\",\n      undoUid: uid,\n    };\n\n    return new DrawState(\n      drawState\n        .getImmutable()\n        .set(\"state\", \"revoking\")\n        .update(\"undoStack\", (s) => s.add(uid))\n        .update(\"uidStack\", (s) => s.pop()),\n      drawState.width,\n      drawState.height,\n      lastOp\n    );\n  }\n\n  static redo(drawState: DrawState) {\n    const undo = drawState.getUndoStack();\n    const uid = undo.last();\n    if (!uid) return drawState;\n\n    const lastOp: Operation = {\n      type: \"redo\",\n      redoUid: uid,\n    };\n\n    return new DrawState(\n      drawState\n        .getImmutable()\n        .update(\"undoStack\", (s) => s.butLast())\n        .update(\"uidStack\", (s) => s.push(uid)),\n      drawState.width,\n      drawState.height,\n      lastOp\n    );\n  }\n\n  static addStroke(\n    drawState: DrawState,\n    imageData: ImageData,\n    points: Point[]\n  ) {\n    const uid = getUid();\n    const stroke = { uid, points };\n    const undo = drawState.getUndoStack();\n\n    const pushedState = mergeUndo(\n      drawState\n        .getImmutable()\n        .set(\"state\", \"drawing\")\n        .update(\"deleted\", (d) => d.concat(undo))\n        .set(\"undoStack\", OrderedSet())\n        .update(\"strokes\", (s) => s.push(stroke))\n        .update(\"uidStack\", (s) => s.push(uid))\n    );\n\n    let position = drawState.getPosition();\n    position = updatePosition(position, imageData, uid);\n\n    const lastOp: Operation = {\n      type: \"add\",\n      stroke,\n    };\n\n    return new DrawState(\n      pushedState.set(\"position\", position),\n      drawState.width,\n      drawState.height,\n      lastOp\n    );\n  }\n\n  static eraseStrokes(drawState: DrawState, imageData: ImageData) {\n    const position = drawState.getPosition();\n    if (!position) return drawState;\n    const validStrokes = drawState.getValidStrokes();\n    const strokeSet = Set(validStrokes.map((s) => s.uid));\n\n    const erased = getErasedStrokes(position, imageData).filter((uid) =>\n      strokeSet.has(uid)\n    );\n\n    if (erased.size === 0) {\n      return new DrawState(\n        drawState.getImmutable(),\n        drawState.width,\n        drawState.height\n      );\n    }\n\n    const uid = getUid();\n    const lastOp: Operation = {\n      type: \"erase\",\n      erase: { uid, erased: erased.toArray() },\n    };\n\n    return new DrawState(\n      mergeUndo(\n        drawState\n          .getImmutable()\n          .update(\"eraseStack\", (s) => s.push({ uid, erased }))\n          .update(\"uidStack\", (s) => s.push(uid))\n      ),\n      drawState.width,\n      drawState.height,\n      lastOp\n    );\n  }\n\n  static pushStroke(drawState: DrawState, stroke: Stroke) {\n    return new DrawState(\n      drawState.getImmutable().update(\"strokes\", (s) => s.push(stroke)),\n      drawState.width,\n      drawState.height\n    );\n  }\n\n  static pushErase(drawState: DrawState, erase: Erase) {\n    const { uid, erased } = erase;\n    const immuErase: ImmuErase = {\n      uid,\n      erased: Set(erased),\n    };\n    return new DrawState(\n      drawState.getImmutable().update(\"eraseStack\", (s) => s.push(immuErase)),\n      drawState.width,\n      drawState.height\n    );\n  }\n\n  static pushUndo(drawState: DrawState, undoUid: string) {\n    return new DrawState(\n      drawState.getImmutable().update(\"undoStack\", (s) => s.add(undoUid)),\n      drawState.width,\n      drawState.height\n    );\n  }\n\n  static pushRedo(drawState: DrawState, RedoUid: string) {\n    return new DrawState(\n      drawState.getImmutable().update(\"undoStack\", (s) => s.delete(RedoUid)),\n      drawState.width,\n      drawState.height\n    );\n  }\n\n  static flaten(drawState: DrawState): FlatState {\n    const mergedRecord = mergeUndo(drawState.getImmutable());\n    const deleted = mergedRecord.get(\"deleted\");\n    const erased = drawState.getValidEraseStack().reduce((prev, e) => {\n      return prev.concat(e.erased);\n    }, Set<string>());\n\n    const deletedAll = deleted.concat(erased);\n    const strokes = mergedRecord\n      .get(\"strokes\")\n      .filter((s) => !deletedAll.has(s.uid))\n      .toArray();\n    const position = mergedRecord\n      .get(\"position\")\n      .map((set) => (!set ? set : set.toArray()))\n      .toArray();\n    return { strokes, position };\n  }\n\n  static loadFromFlat(\n    { strokes, position }: FlatState,\n    width: number,\n    height: number\n  ): DrawState {\n    return new DrawState(\n      defaultFactory()\n        .set(\"strokes\", List(strokes))\n        .set(\"position\", List(position?.map((arr) => (!arr ? arr : Set(arr))))),\n      width,\n      height\n    );\n  }\n}\n\nfunction mergeUndo(drawStateRecord: DrawStateRecord) {\n  const undo = drawStateRecord.get(\"undoStack\");\n  return drawStateRecord\n    .update(\"deleted\", (d) => d.concat(undo))\n    .set(\"undoStack\", OrderedSet())\n    .update(\"uidStack\", (s) => s.filter((uid) => !undo.has(uid)));\n}\n\nfunction updatePosition(\n  position: List<Set<string>>,\n  { data }: ImageData,\n  uid: string\n) {\n  const len = data.length;\n  for (let i = 0; i < len; i += 4) {\n    if (data[i + 3]) {\n      position = position.update(i / 4, Set(), (s) => (s ?? Set()).add(uid));\n    }\n  }\n  return position;\n}\n\nfunction getErasedStrokes(position: List<Set<string>>, { data }: ImageData) {\n  let erased = Set<string>();\n\n  const len = data.length;\n  for (let i = 0; i < len; i += 4) {\n    if (data[i + 3]) {\n      erased = erased.concat(position.get(i / 4) ?? Set());\n    }\n  }\n\n  return erased;\n}\n\nexport type SetDrawState = Dispatch<SetStateAction<DrawState>>;\n\nexport type DrawStateMethod = (\n  drawState: DrawState,\n  imageData: ImageData,\n  points: Point[]\n) => DrawState;\n","import { defaultFlatState, FlatState, Stroke } from \"../draw/DrawState\";\nimport { v4 as getUid } from \"uuid\";\n\nexport interface NotePage {\n  image?: Blob;\n  ratio: number;\n  state: FlatState;\n}\n\nexport interface TeamPage {\n  ratio: number;\n  states: Record<string, Stroke[]>\n}\n\nexport interface TeamNote {\n  uid: string;\n  pages: Record<string, TeamPage>\n}\n\nexport interface NoteInfo {\n  uid: string;\n  name: string;\n  tagId: string;\n  team: boolean;\n  withImg: boolean;\n  createTime?: Date;\n  lastTime?: Date;\n  thumbnail?: Blob;\n}\n\nexport type Note = NoteInfo & {\n  pdf?: File;\n  pages: Record<string, NotePage>;\n};\n\nexport function createEmptyNote(): Note {\n  return {\n    uid: getUid(),\n    name: `New note ${Date.now()}`,\n    tagId: \"DEFAULT\",\n    team: false,\n    withImg: false,\n    pages: {\n      [getUid()]: {\n        ratio: 1.5,\n        state: defaultFlatState,\n      },\n    },\n  };\n}\n","import { v4 as getUid } from \"uuid\";\n\nexport interface UserInfo {\n  userId: string;\n  userName: string;\n}\n\nexport const getUserId = (() => {\n  let cached: string;\n  return () => {\n    if (cached) return cached;\n    let userId = localStorage.getItem(\"user_id\");\n    if (!userId) {\n      userId = getUid();\n      localStorage.setItem(\"user_id\", userId);\n    }\n    cached = userId;\n    return userId;\n  };\n})();\n\nexport const getUserName = () => {\n  let name = localStorage.getItem(\"USER_NAME\");\n  if (!name) {\n    name = \"User_\" + getUid().slice(0, 8);\n    localStorage.setItem(\"USER_NAME\", name);\n  }\n  return name;\n};\n\nexport const setUserName = (name: string) => {\n  name = name.trim();\n  if (!name) return false;\n  else localStorage.setItem(\"USER_NAME\", name);\n  return true;\n};\n","export const colors = [\n  \"#64748b\",\n  \"#78716c\",\n  \"#ef4444\",\n  \"#f97316\",\n  \"#eab308\",\n  \"#84cc16\",\n  \"#22c55e\",\n  \"#10b981\",\n  \"#14b8a6\",\n  \"#06b6d4\",\n  \"#0ea5e9\",\n  \"#3b82f6\",\n  \"#6366f1\",\n  \"#8b5cf6\",\n  \"#a855f7\",\n  \"#d946ef\",\n  \"#ec4899\",\n  \"#f43f5e\",\n];\n\nexport const getRandomColor = () => {\n  const index = Math.floor(Math.random() * colors.length);\n  return colors[index];\n}","import localforage from \"localforage\";\nimport { NoteInfo, Note, NotePage, TeamPage } from \"./note\";\nimport { v4 as getUid } from \"uuid\";\nimport { defaultFlatState } from \"../draw/DrawState\";\nimport { getUserId } from \"../user\";\nimport { getRandomColor } from \"../color\";\n\nexport interface NoteTag {\n  uid: string;\n  name: string;\n  color: string;\n  notes: string[];\n}\n\nexport async function getAllNotes() {\n  const allNotes = await localforage.getItem(\"ALL_NOTES\");\n  if (allNotes) {\n    return allNotes as Record<string, NoteInfo>;\n  } else {\n    localforage.setItem(\"ALL_NOTES\", {});\n    return {};\n  }\n}\n\nexport async function getAllTags() {\n  const tags = await localforage.getItem(\"ALL_TAGS\");\n  if (tags) {\n    return tags as Record<string, NoteTag>;\n  } else {\n    localforage.setItem(\"ALL_TAGS\", {});\n    return {};\n  }\n}\n\nexport async function storeTag(name: string) {\n  const uid = getUid();\n  const newTag: NoteTag = {\n    uid,\n    name,\n    color: getRandomColor(),\n    notes: [],\n  };\n  const tags: Record<string, NoteTag> = {\n    ...(await getAllTags()),\n    [uid]: newTag,\n  };\n  await localforage.setItem(\"ALL_TAGS\", tags);\n\n  return tags;\n}\n\nexport async function deleteTag(uid: string) {\n  const tags = await getAllTags();\n  delete tags[uid];\n  await localforage.setItem(\"ALL_TAGS\", tags);\n\n  return tags;\n}\n\nexport async function editTag(tag: NoteTag) {\n  const tags = await getAllTags();\n  const editedTag = tags[tag.uid];\n  editedTag.name = tag.name;\n  editedTag.color = tag.color;\n  editedTag.notes = tag.notes;\n  await localforage.setItem(\"ALL_TAGS\", tags);\n  return tags;\n}\n\nexport async function loadNote(uid: string) {\n  return (await localforage.getItem(uid)) as Note | undefined;\n}\n\nexport async function editNoteData(uid: string, note: Partial<Note>) {\n  const allNotes = await getAllNotes();\n  const { pages, pdf, ...noteInfo } = note;\n  allNotes[uid] = { ...allNotes[uid], ...noteInfo };\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\n  const prevNote = await loadNote(uid);\n  if (!prevNote) return;\n  await localforage.setItem(uid, { ...prevNote, ...note });\n}\n\nexport async function saveNoteInfo(noteInfo: NoteInfo) {\n  const { uid, tagId } = noteInfo;\n  const allNotes = await getAllNotes();\n  allNotes[uid] = noteInfo;\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\n  const tags = await getAllTags();\n  if (tagId !== \"DEFAULT\") {\n    tags[tagId].notes.push(noteInfo.uid);\n    await localforage.setItem(\"ALL_TAGS\", tags);\n  }\n  return { tags, allNotes };\n}\n\nexport async function createNewNote(note: Note) {\n  await localforage.setItem(note.uid, note);\n  const { pdf, pages, ...noteInfo } = note;\n  return await saveNoteInfo(noteInfo);\n}\n\nexport async function deleteNote(uid: string) {\n  const note = await loadNote(uid);\n  const allNotes = await getAllNotes();\n  const tags = await getAllTags();\n  if (!note) return { tags, allNotes };\n  await localforage.removeItem(uid);\n  const { pdf, pages, ...noteInfo } = note;\n  delete allNotes[uid];\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\n\n  const { tagId } = noteInfo;\n  if (tagId !== \"DEFAULT\") {\n    const { notes } = tags[tagId];\n    tags[tagId].notes = notes.filter((id) => id !== uid);\n    await localforage.setItem(\"ALL_TAGS\", tags);\n  }\n  return { tags, allNotes };\n}\n\nexport async function moveNoteTag(noteId: string, tagId: string) {\n  const note = await loadNote(noteId);\n  const allNotes = await getAllNotes();\n  const tags = await getAllTags();\n  if (!note) return { tags, allNotes };\n\n  const { tagId: prevTagId } = note;\n  note.tagId = tagId;\n  await localforage.setItem(noteId, note);\n  allNotes[noteId].tagId = tagId;\n  await localforage.setItem(\"ALL_NOTES\", allNotes);\n\n  if (prevTagId in tags) {\n    tags[prevTagId].notes = tags[prevTagId].notes.filter((id) => id !== noteId);\n  }\n  tags[tagId]?.notes?.push(noteId);\n  await localforage.setItem(\"ALL_TAGS\", tags);\n  return { tags, allNotes };\n}\n\nexport async function convertTeamPage(teamPages: Record<string, TeamPage>) {\n  const notePages: Record<string, NotePage> = {};\n  for (let [key, page] of Object.entries(teamPages)) {\n    const { ratio, states } = page;\n    delete states[getUserId()];\n    notePages[key] = {\n      ratio,\n      state: {\n        strokes: Object.values(states).flat(1),\n      },\n    };\n  }\n  return notePages;\n}\n\nexport async function saveTeamNote(\n  noteId: string,\n  noteInfo: { name: string; uid: string; withImg: boolean },\n  teamPages: Record<string, Omit<NotePage, \"state\">>\n) {\n  let note = await loadNote(noteId);\n  if (!note) {\n    const pages: Record<string, NotePage> = {};\n    for (let [key, page] of Object.entries(teamPages)) {\n      pages[key] = { ...page, state: defaultFlatState };\n    }\n    note = {\n      ...noteInfo,\n      tagId: \"DEFAULT\",\n      team: true,\n      pages,\n    };\n    console.log(note);\n    createNewNote(note);\n  }\n}\n","import * as pdfjs from \"pdfjs-dist/legacy/build/pdf\";\n// @ts-ignore\nimport pdfjsWorker from \"pdfjs-dist/legacy/build/pdf.worker.entry\";\nimport { PDFDocumentProxy } from \"pdfjs-dist/types/src/display/api\";\nimport { v4 as getUid } from \"uuid\";\nimport { Note, NotePage } from \"./note\";\npdfjs.GlobalWorkerOptions.workerSrc = pdfjsWorker;\n\nfunction getCanvasBlob(canvas: HTMLCanvasElement): Promise<Blob | null> {\n  return new Promise((res: BlobCallback) => {\n    canvas.toBlob(res);\n  });\n}\n\nasync function getPageImage(\n  pdf: PDFDocumentProxy,\n  pageNum: number,\n  scale: number\n): Promise<[Blob, number]> {\n  const page = await pdf.getPage(pageNum);\n  const viewport = page.getViewport({ scale });\n  console.log(viewport);\n\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  if (!context) {\n    throw new Error(\"can't get virtual canvas context\");\n  }\n\n  const { height, width } = viewport;\n  const ratio = height / width;\n  canvas.width = Math.floor(width * scale);\n  canvas.height = Math.floor(height * scale);\n\n  console.time('render')\n  await page.render({\n    canvasContext: context,\n    viewport: viewport,\n    transform: [scale, 0, 0, scale, 0, 0],\n  }).promise;\n  console.timeEnd('render')\n\n  console.time('img')\n  const blob = await getCanvasBlob(canvas);\n  if (!blob) {\n    throw new Error(\"can't get canvas image blob\");\n  }\n  console.timeEnd('img')\n  return [blob, ratio];\n}\n\nexport async function getImages(\n  url: string,\n  scale = 2,\n  progressCb?: (percent: number) => void\n) {\n  const pdf = await pdfjs.getDocument(url).promise;\n  const { numPages } = pdf;\n  const blobs: Blob[] = [];\n  const ratios: number[] = [];\n\n  for (let i = 1; i <= numPages; i += 1) {\n    const [blob, ratio] = await getPageImage(pdf, i, scale);\n    blobs.push(blob);\n    ratios.push(ratio);\n    if (progressCb) progressCb(Math.floor(i / numPages * 100));\n  }\n\n  const [thumbnail] = await getPageImage(pdf, 1, 0.5);\n\n  return {\n    images: blobs,\n    ratios,\n    thumbnail,\n  };\n}\n\nexport async function LoadPDF(\n  file: File,\n  progressCb?: (percent: number) => void\n): Promise<Note> {\n  const url = URL.createObjectURL(file);\n  const { images, ratios, thumbnail } = await getImages(url, 2, progressCb);\n  const pages: Record<string, NotePage> = {};\n  images.forEach((image, idx) => {\n    pages[getUid()] = {\n      image,\n      ratio: ratios[idx],\n      state: {\n        strokes: [],\n        position: [],\n      },\n    };\n  });\n  const name = file.name.replace(\".pdf\", \"\");\n  return {\n    uid: getUid(),\n    name,\n    tagId: \"DEFAULT\",\n    team: false,\n    withImg: true,\n    pdf: file,\n    thumbnail,\n    pages,\n  };\n}\n","import axios from \"axios\";\nimport { Note, NoteInfo, NotePage } from \"../note/note\";\nimport { convertTeamPage, saveTeamNote } from \"../note/archive\";\nimport { cloneDeep } from \"lodash\";\nimport { getUserId } from \"../user\";\n\nexport const BASE_URL = \"https://api.slotdumpling.top/paint\";\naxios.defaults.baseURL = BASE_URL;\naxios.interceptors.request.use((config) => {\n  console.log(config.method, config.url);\n  return config;\n});\n\nexport async function getNoteId(roomCode: number) {\n  try {\n    const { data } = await axios.get(`code/${roomCode}`);\n    if (data.statusCode === 200) {\n      const { noteId, pageInfos, noteInfo } = data as {\n        noteId: string;\n        pageInfos: Record<string, Omit<NotePage, \"state\">>;\n        noteInfo: NoteInfo;\n      };\n      \n      if (noteInfo.withImg) {\n        for (let [pageId, page] of Object.entries(pageInfos)) {\n          const { data } = await axios({\n            method: \"GET\",\n            url: pageId,\n            responseType: \"blob\",\n          });\n          page.image = data;\n        }\n      }\n      await saveTeamNote(noteId, noteInfo, pageInfos);\n      return noteId as string;\n    } else {\n      return null;\n    }\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n}\n\nconst deletePagesPosition = (pageRecord: Record<string, NotePage>) => {\n  const pages = cloneDeep(pageRecord);\n  for (let key of Object.keys(pages)) {\n    delete pages[key].state.position;\n  }\n  return pages;\n};\n\nexport async function putNote(\n  noteId: string,\n  noteInfo: Note,\n  pageRecord: Record<string, NotePage>\n) {\n  pageRecord = deletePagesPosition(pageRecord);\n  const { uid, name, withImg, pages } = noteInfo;\n\n  try {\n    const { data } = await axios.put(`create/${noteId}`, {\n      userId: getUserId(),\n      pageRecord,\n      noteInfo: { uid, name, withImg },\n    });\n    if (withImg) {\n      Object.entries(pages).forEach(([pageId, page]) => {\n        const { image } = page;\n        if (!image) return;\n        const formData = new FormData();\n        formData.append(\"pageId\", pageId);\n        formData.append(\"file\", image);\n        axios({\n          method: \"POST\",\n          url: \"upload\",\n          data: formData,\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n      });\n    }\n    if (data.statusCode === 201) {\n      return data.code as number;\n    } else {\n      return null;\n    }\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n}\n\nexport async function updatePages(\n  noteId: string,\n  pageRecord: Record<string, NotePage>\n) {\n  try {\n    const { data } = await axios.put(`pages/${noteId}`, {\n      userId: getUserId(),\n      pageRecord,\n    });\n    if (data.statusCode === 201) return true;\n    else return false;\n  } catch (e) {\n    console.error(e);\n    return false;\n  }\n}\n\nexport async function getTeamNote(noteId: string) {\n  try {\n    const { data } = await axios.get(`room/${noteId}`);\n    if (data.statusCode === 200) {\n      const { teamPages, code, noteInfo: info } = data;\n      const pages = await convertTeamPage(teamPages);\n      return { code, pages, info };\n    } else {\n      return null;\n    }\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n}\n","import React, {\n  KeyboardEvent,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport \"./digitInput.sass\";\n\nexport default function DigitInput({\n  value = 0,\n  digitNum = 4,\n  onChange = () => {},\n  onSubmit,\n}: {\n  value?: number;\n  digitNum?: number;\n  onChange?: (val: number) => void;\n  onSubmit: (val: number) => void;\n}) {\n  function num2digits(num: number): string[] {\n    if (num === 0) return new Array(digitNum).fill(\"\");\n    return String(num)\n      .slice(0, digitNum)\n      .padEnd(digitNum, \"x\")\n      .split(\"\")\n      .map((s) => (s === \"x\" ? \"\" : s));\n  }\n\n  const [nowFocused, setNowFocused] = useState(0);\n  const [digits, setDigits] = useState(num2digits(value));\n  useEffect(() => {\n    const newDigits = num2digits(value);\n    setDigits(newDigits);\n  }, [value]);\n\n  useEffect(() => {\n    const idx = digits.findIndex((d) => d === \"\");\n    setNowFocused(idx);\n    const newValue = Number(digits.join(\"\"));\n    if (newValue === value) return;\n    onChange(newValue);\n    if (idx === -1) {\n      onSubmit(newValue);\n    }\n  }, [digits]);\n\n  function focus() {\n    if (nowFocused === -1) {\n      inputRefs.current.forEach((el) => el.blur());\n    } else {\n      inputRefs.current[nowFocused].focus();\n    }\n  }\n\n  useEffect(() => {\n    focus();\n  }, [nowFocused]);\n\n  function handleChange(val: string, idx: number) {\n    if (!/^[0-9]$/.test(val)) return;\n    setDigits(prev => {\n      const newDigits = prev.slice();\n      newDigits[idx] = val;\n      return newDigits;\n    });\n  }\n\n  const inputRefs = useRef<HTMLInputElement[]>([]);\n  useEffect(() => {\n    inputRefs.current = inputRefs.current.slice(0, digitNum);\n  }, [digitNum]);\n\n  function handleKeyUp(e: KeyboardEvent<HTMLInputElement>) {\n    if (e.key === \"Backspace\") {\n      const idx = Math.max(0, nowFocused - 1);\n      setNowFocused(idx);\n      setDigits(prev => {\n        const newDigits = prev.slice();\n        newDigits[idx] = '';\n        return newDigits;\n      });\n    }\n  }\n\n  return (\n    <div className=\"digit-input\">\n      {digits.map((d, idx) => (\n        <input\n          key={idx}\n          ref={(el) => {\n            if (!el) return;\n            inputRefs.current[idx] = el;\n          }}\n          value={d}\n          pattern=\"\\d*\"\n          onChange={(e) => handleChange(e.target.value, idx)}\n          onKeyUp={handleKeyUp}\n        />\n      ))}\n      <div className=\"click-area\" onClick={focus}></div>\n    </div>\n  );\n}\n","import { Button, Input, Menu, message, Popover, Progress } from \"antd\";\nimport {\n  createContext,\n  Dispatch,\n  ReactNode,\n  SetStateAction,\n  useContext,\n  useState,\n} from \"react\";\nimport { createNewNote } from \"../../lib/note/archive\";\nimport { LoadPDF } from \"../../lib/note/pdfImage\";\nimport { MenuStateCtx, MenuStateUpdateCtx } from \"./MainMenu\";\nimport {\n  TeamOutlined,\n  CaretDownOutlined,\n  FilePdfOutlined,\n  UserOutlined,\n  ArrowLeftOutlined,\n  InboxOutlined,\n} from \"@ant-design/icons\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getNoteId } from \"../../lib/network/http\";\nimport DigitInput from \"../ui/DigitInput\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./right.sass\";\nimport Title from \"antd/lib/typography/Title\";\nimport Dragger from \"antd/lib/upload/Dragger\";\nimport { getUserName, setUserName } from \"../../lib/user\";\n\nconst OthersStateUpdateCtx = createContext({\n  setActive: (() => {}) as Dispatch<SetStateAction<string>>,\n});\n\nexport default function RightTools() {\n  return (\n    <div id=\"right-tools\">\n      <JoinTeamButton />\n      <OthersButton />\n    </div>\n  );\n}\n\nconst OthersMenu = () => {\n  const { setActive } = useContext(OthersStateUpdateCtx);\n  const { Item } = Menu;\n  return (\n    <Menu onClick={({ key }) => setActive(key)}>\n      <Item key=\"pdf\">\n        <FilePdfOutlined />\n        <span>Load PDF</span>\n      </Item>\n      <Item key=\"profile\">\n        <UserOutlined />\n        <span>My profile</span>\n      </Item>\n    </Menu>\n  );\n};\n\nconst SeconaryMenu = ({\n  children,\n  title,\n}: {\n  children: ReactNode;\n  title: string;\n}) => {\n  const { setActive } = useContext(OthersStateUpdateCtx);\n  return (\n    <div className=\"secondary\">\n      <div className=\"title\">\n        <Button\n          type=\"text\"\n          shape=\"circle\"\n          onClick={() => setActive(\"menu\")}\n          icon={<ArrowLeftOutlined />}\n        />\n        <Title level={5}>{title}</Title>\n      </div>\n      {children}\n    </div>\n  );\n};\n\nfunction UploadPdfPage() {\n  const [loading, setLoading] = useState(false);\n  const { tagUid } = useContext(MenuStateCtx);\n  const { setAllTags, setAllNotes } = useContext(MenuStateUpdateCtx);\n  const [percent, setPercent] = useState(0);\n\n  async function handleFile(file: File) {\n    if (file.type !== \"application/pdf\") return;\n    setLoading(true);\n    const note = await LoadPDF(file, setPercent);\n    note.tagId = tagUid;\n    const { tags, allNotes } = await createNewNote(note);\n    setAllTags(tags);\n    setAllNotes(allNotes);\n    setLoading(false);\n    message.success(\"PDF Loaded\");\n    return false;\n  }\n\n  return (\n    <SeconaryMenu title=\"Load PDF\">\n      <Dragger\n        disabled={loading}\n        multiple={false}\n        action=\"#\"\n        accept=\"application/pdf\"\n        beforeUpload={handleFile}\n      >\n        <p className=\"ant-upload-drag-icon\">\n          {loading ? (\n            <Progress width={48} type=\"circle\" percent={percent} />\n          ) : (\n            <InboxOutlined />\n          )}\n        </p>\n        <p className=\"ant-upload-hint\">Click or drag a pdf file here.</p>\n      </Dragger>\n    </SeconaryMenu>\n  );\n}\n\nconst ProfilePage = () => {\n  const userName = getUserName();\n  const [name, setName] = useState(userName);\n  const handleEnter = () => {\n    setUserName(name);\n  }\n  return (\n    <SeconaryMenu title=\"My profile\">\n      <div className=\"profile-page\">\n        <Input\n          prefix={<UserOutlined />}\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <Button onClick={handleEnter} type=\"primary\" block>Enter</Button>\n      </div>\n    </SeconaryMenu>\n  );\n};\n\nconst OthersPage = () => {\n  const [height, setHeight] = useState(100);\n  const [active, setActive] = useState(\"menu\");\n\n  const calcHeight = (el: HTMLElement) => {\n    setHeight(el.clientHeight);\n  };\n\n  const cssProps = {\n    timeout: 300,\n    onEnter: calcHeight,\n    unmountOnExit: true,\n  };\n\n  const cssProps2 = {\n    ...cssProps,\n    classNames: \"secondary\",\n  };\n  return (\n    <OthersStateUpdateCtx.Provider value={{ setActive }}>\n      <section className=\"others-menu\" style={{ height }}>\n        <CSSTransition\n          classNames=\"primary\"\n          in={active === \"menu\"}\n          {...cssProps}\n        >\n          <OthersMenu />\n        </CSSTransition>\n        <CSSTransition in={active === \"pdf\"} {...cssProps2}>\n          <UploadPdfPage />\n        </CSSTransition>\n        <CSSTransition in={active === \"profile\"} {...cssProps2}>\n          <ProfilePage />\n        </CSSTransition>\n      </section>\n    </OthersStateUpdateCtx.Provider>\n  );\n};\n\nconst OthersButton = () => {\n  return (\n    <Popover placement=\"bottomRight\" trigger=\"click\" content={<OthersPage />}>\n      <Button shape=\"circle\" icon={<CaretDownOutlined />} />\n    </Popover>\n  );\n};\n\nfunction JoinTeamButton() {\n  const [roomCode, setRoomCode] = useState(0);\n\n  const nav = useNavigate();\n  async function handleSubmit(code: number) {\n    const dismiss = message.loading(\"Loading team note...\", 0);\n    const noteId = await getNoteId(code);\n    dismiss();\n    if (!noteId) {\n      setRoomCode(0);\n      message.error(\"Room doesn't exist.\");\n    } else {\n      nav(`/team/${noteId}`);\n    }\n  }\n\n  return (\n    <Popover\n      placement=\"bottomRight\"\n      trigger=\"click\"\n      title=\"Join a team note\"\n      destroyTooltipOnHide\n      content={\n        <DigitInput\n          value={roomCode}\n          onChange={setRoomCode}\n          onSubmit={handleSubmit}\n        />\n      }\n    >\n      <Button shape=\"round\" icon={<TeamOutlined />}>\n        Team\n      </Button>\n    </Popover>\n  );\n}\n","import { Button } from \"antd\";\nimport { useContext } from \"react\";\nimport { MenuStateCtx, MenuStateUpdateCtx } from \"./MainMenu\";\n\nexport default function LeftTools() {\n  const { editing } = useContext(MenuStateCtx);\n  const { setEditing } = useContext(MenuStateUpdateCtx);\n\n  function swichEditing() {\n    setEditing((prev) => !prev);\n  }\n\n  return (\n    <div id=\"left-tools\">\n      <Button onClick={swichEditing} type={editing ? \"primary\" : \"text\"}>\n        {editing ? \"Done\" : \"Edit\"}\n      </Button>\n    </div>\n  );\n}\n","import { Button, Input, Menu, Popconfirm, Popover, Select } from \"antd\";\nimport { useContext, useState } from \"react\";\nimport { deleteTag, editTag, NoteTag, storeTag } from \"../../lib/note/archive\";\nimport { colors } from \"../../lib/color\";\nimport { MenuStateCtx, MenuStateUpdateCtx } from \"./MainMenu\";\nimport {\n  MinusCircleOutlined,\n  CheckOutlined,\n  CloseOutlined,\n  SettingOutlined,\n  MenuOutlined,\n  ProfileOutlined,\n  TagOutlined,\n  PlusOutlined,\n} from \"@ant-design/icons\";\nimport Search from \"antd/lib/input/Search\";\n\nexport const TagCircle = ({ color }: { color: string }) => {\n  const style = { backgroundColor: color };\n  return <div className=\"tag-circle\" style={style} />;\n};\n\nfunction TagItem({ noteTag }: { noteTag: NoteTag }) {\n  const { uid, color, name, notes } = noteTag;\n  const { editing } = useContext(MenuStateCtx);\n  const { setTagUid, setAllTags } = useContext(MenuStateUpdateCtx);\n  const [tagEditing, setTagEditing] = useState(false);\n  const [tagName, setTagName] = useState(name);\n  const [tagColor, setTagColor] = useState(color);\n\n  function cancelEditing() {\n    setTagName(name);\n    setTagColor(color);\n    setTagEditing(false);\n  }\n\n  async function removeTag() {\n    const tags = await deleteTag(uid);\n    setTagUid(\"DEFAULT\");\n    setAllTags(tags);\n  }\n\n  async function finishEditing() {\n    const newTag: NoteTag = {\n      uid,\n      name: tagName,\n      color: tagColor,\n      notes: notes,\n    };\n\n    const newAllTags = await editTag(newTag);\n    setAllTags(newAllTags);\n    setTagEditing(false);\n  }\n\n  const colorSelector = (\n    <Select value={tagColor} onSelect={setTagColor}>\n      {colors.map((c) => (\n        <Select.Option value={c} key={c}>\n          <TagCircle color={c} />\n        </Select.Option>\n      ))}\n    </Select>\n  );\n\n  const TagNameInput = () => (\n    <Input\n      className=\"tag-name-input\"\n      addonBefore={colorSelector}\n      value={tagName}\n      onChange={(e) => setTagName(e.target.value)}\n    />\n  );\n\n  return (\n    <div className=\"menu-item\">\n      {editing && tagEditing ? (\n        <>\n          <Popconfirm\n            title=\"Delete this tag?\"\n            onConfirm={removeTag}\n            placement=\"left\"\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <Button\n              type=\"text\"\n              danger\n              size=\"small\"\n              icon={<MinusCircleOutlined />}\n            />\n          </Popconfirm>\n          <TagNameInput />\n        </>\n      ) : (\n        <>\n          <TagCircle color={tagColor} />\n          <span className=\"tag-name\">{tagName}</span>\n        </>\n      )}\n      {editing && tagEditing && (\n        <>\n          <Button\n            disabled={tagName === \"\"}\n            size=\"small\"\n            type=\"link\"\n            onClick={finishEditing}\n            icon={<CheckOutlined />}\n          />\n          <Button\n            size=\"small\"\n            type=\"text\"\n            onClick={cancelEditing}\n            icon={<CloseOutlined />}\n          />\n        </>\n      )}\n      {editing && !tagEditing && (\n        <Button\n          size=\"small\"\n          type=\"text\"\n          onClick={() => setTagEditing(true)}\n          icon={<SettingOutlined />}\n        />\n      )}\n    </div>\n  );\n}\n\nconst AddTag = () => {\n  const { setAllTags } = useContext(MenuStateUpdateCtx);\n\n  async function addTag(val: string) {\n    const name = val.trim();\n    if (!name) {\n      return;\n    } else {\n      const tags = await storeTag(name);\n      setAllTags(tags);\n    }\n  }\n\n  const popContent = (\n    <Search\n      placeholder=\"Tag name...\"\n      onSearch={addTag}\n      allowClear\n      enterButton={<PlusOutlined />}\n    />\n  );\n\n  return (\n    <div id=\"add-tag\">\n      <Popover\n        content={popContent}\n        trigger=\"click\"\n        placement=\"topLeft\"\n        destroyTooltipOnHide\n      >\n        <Button shape=\"circle\" type=\"text\" icon={<TagOutlined />} />\n      </Popover>\n    </div>\n  );\n};\n\nexport default function SideMenu() {\n  const { allTags } = useContext(MenuStateCtx);\n  const { setTagUid } = useContext(MenuStateUpdateCtx);\n\n  function menuClicked({ key }: { key: string }) {\n    setTagUid(key);\n  }\n\n  const { Item } = Menu;\n\n  return (\n    <aside>\n      <label htmlFor=\"aside-checkbox\" id=\"aside-label\">\n        <MenuOutlined />\n      </label>\n      <input type=\"checkbox\" id=\"aside-checkbox\" />\n      <div id=\"side-wrapper\">\n        <Menu\n          onClick={menuClicked}\n          id=\"side-menu\"\n          defaultSelectedKeys={[\"DEFAULT\"]}\n          defaultOpenKeys={[\"sub1\"]}\n          mode=\"inline\"\n        >\n          <Item key=\"DEFAULT\">\n            <div className=\"menu-item\">\n              <ProfileOutlined id=\"all-note-icon\" />\n              <span className=\"tag-name\">All Notes</span>\n            </div>\n          </Item>\n          {Object.values(allTags).map((tag) => (\n            <Item key={tag.uid}>\n              <TagItem noteTag={tag} />\n            </Item>\n          ))}\n        </Menu>\n        <footer>\n          <AddTag />\n        </footer>\n      </div>\n    </aside>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/default.dd551273.png\";","import { Button, Input, Popconfirm, Tag, Dropdown, Menu } from \"antd\";\nimport { useContext, useEffect, useMemo, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteNote, editNoteData, moveNoteTag } from \"../../lib/note/archive\";\nimport { NoteInfo } from \"../../lib/note/note\";\nimport { MenuStateCtx, MenuStateUpdateCtx } from \"./MainMenu\";\nimport {\n  CloudOutlined,\n  DeleteOutlined,\n  TagsOutlined,\n  CloseOutlined,\n} from \"@ant-design/icons\";\nimport { TagCircle } from \"./SideMenu\";\nimport dafaultImg from \"../ui/default.png\";\n\nexport default function NoteList({ noteList }: { noteList: NoteInfo[] }) {\n  return (\n    <div id=\"note-list\">\n      {noteList.map((noteInfo) => (\n        <NoteItem key={noteInfo.uid} noteInfo={noteInfo} />\n      ))}\n    </div>\n  );\n}\n\nconst NoteItem = ({ noteInfo }: { noteInfo: NoteInfo }) => {\n  const { editing, allTags } = useContext(MenuStateCtx);\n  const { team, uid, name, thumbnail } = noteInfo;\n  const href = editing ? \"#\" : `${team ? \"team\" : \"reader\"}/${uid}`;\n  const { setAllTags, setAllNotes } = useContext(MenuStateUpdateCtx);\n  const [noteName, setNoteName] = useState(name);\n\n  async function removeNote() {\n    const { tags, allNotes } = await deleteNote(uid);\n    setAllTags(tags);\n    setAllNotes(allNotes);\n  }\n\n  const url = useMemo(\n    () => (thumbnail ? URL.createObjectURL(thumbnail) : null),\n    [thumbnail]\n  );\n\n  useEffect(() => {\n    const prevUrl = url || \"\";\n    return () => URL.revokeObjectURL(prevUrl);\n  }, [url]);\n\n  const saveNoteName = () => {\n    editNoteData(uid, { name: noteName });\n    setAllNotes((prev) => ({\n      ...prev,\n      [uid]: { ...prev[uid], name: noteName },\n    }));\n  };\n\n  const move = async ({ key }: { key: string }) => {\n    const { tags, allNotes } = await moveNoteTag(uid, key);\n    setAllTags(tags);\n    setAllNotes(allNotes);\n  };\n\n  const TagButton = () => {\n    const { Item } = Menu;\n    const overlay = (\n      <Menu onClick={move}>\n        <Item key=\"DEFAULT\">\n          <div className=\"tag-select\">\n            <CloseOutlined className=\"none-tag-icon\" />\n            <span>None Tag</span>\n          </div>\n        </Item>\n        {Object.values(allTags).map((t) => (\n          <Item key={t.uid}>\n            <div className=\"tag-select\">\n              <TagCircle color={t.color} />\n              <span>{t.name}</span>\n            </div>\n          </Item>\n        ))}\n      </Menu>\n    );\n    return (\n      <Dropdown overlay={overlay} trigger={[\"click\"]}>\n        <Button className=\"note-delete\" type=\"text\" icon={<TagsOutlined />} />\n      </Dropdown>\n    );\n  };\n\n  const DeleteButton = () => (\n    <Popconfirm\n      title=\"Delete this note?\"\n      onConfirm={removeNote}\n      okText=\"Yes\"\n      cancelText=\"No\"\n    >\n      <Button\n        className=\"note-delete\"\n        type=\"text\"\n        danger\n        icon={<DeleteOutlined />}\n      />\n    </Popconfirm>\n  );\n\n  return (\n    <Link to={href}>\n      <div className=\"list-item\">\n        <div className=\"thumbnail-wrapper\">\n          <img src={url || dafaultImg} alt={name} className=\"thumbnail\" />\n          {team && (\n            <Tag color=\"blue\" className=\"cloud-icon\">\n              <CloudOutlined />\n            </Tag>\n          )}\n        </div>\n        {editing || <p className=\"note-name\">{name}</p>}\n        {editing && (\n          <>\n            <Input\n              className=\"note-name-input\"\n              value={noteName}\n              onChange={(e) => setNoteName(e.target.value)}\n              onBlur={saveNoteName}\n            />\n            <TagButton />\n            <DeleteButton />\n          </>\n        )}\n      </div>\n    </Link>\n  );\n};\n","import React, {\n  createContext,\n  Dispatch,\n  SetStateAction,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport \"./menu.sass\";\nimport { createEmptyNote, NoteInfo } from \"../../lib/note/note\";\nimport {\n  createNewNote,\n  getAllNotes,\n  getAllTags,\n  NoteTag,\n} from \"../../lib/note/archive\";\nimport RightTools from \"./RightTools\";\nimport LeftTools from \"./LeftTools\";\nimport SideMenu from \"./SideMenu\";\nimport NoteList from \"./NoteList\";\nimport Title from \"antd/lib/typography/Title\";\nimport { Button } from \"antd\";\nimport { FormOutlined } from \"@ant-design/icons\";\n\nexport const MenuStateCtx = createContext({\n  tagUid: \"DEFAULT\",\n  editing: false,\n  allNotes: {} as Record<string, NoteInfo>,\n  allTags: {} as Record<string, NoteTag>,\n});\n\nexport const MenuStateUpdateCtx = createContext({\n  setAllNotes: (() => {}) as Dispatch<SetStateAction<Record<string, NoteInfo>>>,\n  setAllTags: (() => {}) as Dispatch<SetStateAction<Record<string, NoteTag>>>,\n  setTagUid: (() => {}) as Dispatch<SetStateAction<string>>,\n  setEditing: (() => {}) as Dispatch<SetStateAction<boolean>>,\n});\n\nexport default function MainMenu() {\n  const [allNotes, setAllNotes] = useState<Record<string, NoteInfo>>({});\n  const [allTags, setAllTags] = useState<Record<string, NoteTag>>({});\n  const [tagUid, setTagUid] = useState(\"DEFAULT\");\n  const [editing, setEditing] = useState(false);\n\n  const selectedTag = useMemo<NoteTag>(() => {\n    if (tagUid === \"DEFAULT\") {\n      return {\n        uid: \"\",\n        name: \"All Notes\",\n        color: \"#000\",\n        notes: Object.keys(allNotes),\n      };\n    } else {\n      return allTags[tagUid];\n    }\n  }, [tagUid, allTags, allNotes]);\n\n  const noteList = useMemo<NoteInfo[]>(\n    () =>\n      selectedTag.notes\n        .filter((uid) => uid in allNotes)\n        .map((uid) => allNotes[uid]),\n    [selectedTag, allNotes]\n  );\n\n  useEffect(() => {\n    getAllNotes().then(setAllNotes);\n    getAllTags().then(setAllTags);\n  }, []);\n\n  return (\n    <MenuStateCtx.Provider value={{ tagUid, editing, allNotes, allTags }}>\n      <MenuStateUpdateCtx.Provider\n        value={{ setAllNotes, setAllTags, setEditing, setTagUid }}\n      >\n        <div id=\"menu-container\">\n          <header>\n            <LeftTools />\n            <Title level={4}>{selectedTag.name}</Title>\n            <RightTools />\n          </header>\n          <main>\n            <SideMenu />\n            <NoteList noteList={noteList} />\n            <NewNoteButton />\n          </main>\n        </div>\n      </MenuStateUpdateCtx.Provider>\n    </MenuStateCtx.Provider>\n  );\n}\n\nexport const NewNoteButton = () => {\n  const { tagUid } = useContext(MenuStateCtx);\n  const { setAllTags, setAllNotes } = useContext(MenuStateUpdateCtx);\n\n  async function addNewNote() {\n    const note = createEmptyNote();\n    note.tagId = tagUid;\n    const { tags, allNotes } = await createNewNote(note);\n    setAllTags(tags);\n    setAllNotes(allNotes);\n  }\n\n  return (\n    <Button\n      id=\"new-note\"\n      size=\"large\"\n      type=\"primary\"\n      shape=\"circle\"\n      onClick={addNewNote}\n      icon={<FormOutlined />}\n    />\n  );\n};\n","import { Point } from \"./draw\";\n\nexport class Drawer {\n  public points: Point[] = [];\n\n  constructor(\n    private context: CanvasRenderingContext2D,\n    private width: number,\n    private height: number\n  ) {}\n\n  drawBegin(point: Point) {\n    this.points.push(point);\n    const { x, y, lineWidth } = point;\n    this.context.lineWidth = lineWidth;\n    this.context.beginPath();\n    this.context.moveTo(x, y);\n    this.context.stroke();\n  }\n\n  drawCurve(toP: Point, color = \"black\") {\n    const fromP = this.points.slice(-1)[0];\n    this.points.push(toP);\n    if (this.points.length < 3) return;\n\n    const xc = (toP.x + fromP.x) / 2;\n    const yc = (toP.y + fromP.y) / 2;\n    this.context.strokeStyle = color;\n    this.context.lineCap = \"round\";\n    this.context.lineJoin = \"round\";\n    this.context.lineWidth = fromP.lineWidth;\n    this.context.quadraticCurveTo(fromP.x, fromP.y, xc, yc);\n    this.context.stroke();\n    this.context.beginPath();\n    this.context.moveTo(xc, yc);\n  }\n\n  getImageData(): ImageData {\n    return this.context.getImageData(0, 0, this.width, this.height);\n  }\n\n  static createRaw(width: number, height: number) {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    const context = canvas.getContext(\"2d\");\n    if (!context) {\n      throw Error(\"can't get canvas context\");\n    }\n    return new Drawer(context, width, height);\n  }\n}\n\nconst MIRROR_SIZE = 100;\n\nexport class DualDrawer {\n  public points: Point[] = [];\n  private mainDrawer: Drawer;\n  private mirrorDrawer: Drawer;\n  private ratio: number;\n\n  constructor(\n    private context: CanvasRenderingContext2D,\n    private width: number,\n    private height: number\n  ) {\n    this.mainDrawer = new Drawer(context, width, height);\n\n    if (width <= MIRROR_SIZE && height <= MIRROR_SIZE) {\n      this.ratio = 1;\n      this.mirrorDrawer = Drawer.createRaw(width, height);\n    } else if (width > height) {\n      this.ratio = width / MIRROR_SIZE;\n      this.mirrorDrawer = Drawer.createRaw(\n        MIRROR_SIZE,\n        height / this.ratio\n      );\n    } else {\n      this.ratio = height / MIRROR_SIZE;\n      this.mirrorDrawer = Drawer.createRaw(\n        width / this.ratio,\n        MIRROR_SIZE\n      );\n    }\n  }\n\n  drawBegin(point: Point) {\n    this.points.push(point);\n    this.mainDrawer.drawBegin(point);\n    this.mirrorDrawer.drawBegin(this.computeMirrorPoint(point));\n  }\n\n  drawCurve(toP: Point, color = \"black\") {\n    this.points.push(toP);\n    this.mainDrawer.drawCurve(toP, color);\n    this.mirrorDrawer.drawCurve(this.computeMirrorPoint(toP), 'black');\n  }\n\n  computeLineWidth(pressure: number) {\n    return (\n      Math.log(pressure + 1) * 5 +\n      (this.points.slice(-1)[0]?.lineWidth ?? 0) * 0.8\n    );\n  }\n\n  getMirrorImageData(): ImageData {\n    return this.mirrorDrawer.getImageData();\n  }\n\n  private computeMirrorPoint(point: Point) {\n    return {\n      x: point.x / this.ratio,\n      y: point.y / this.ratio,\n      lineWidth: point.lineWidth / this.ratio,\n    };\n  }\n}\n\nexport function drawPoints(\n  context: CanvasRenderingContext2D,\n  points: Point[],\n  color = \"black\",\n  width: number,\n  height: number\n) {\n  const drawer = new Drawer(context, width, height);\n  const clonedPs = points.slice();\n  const firstP = clonedPs.shift();\n  if (!firstP) return;\n  drawer.drawBegin(firstP);\n  clonedPs.forEach((p) => void drawer.drawCurve(p, color));\n}\n","import React, { useEffect, useRef } from \"react\";\nimport { drawPoints } from \"../../lib/draw/drawer\";\nimport { DrawState } from \"../../lib/draw/DrawState\";\n\nexport default React.memo(({ drawState }: { drawState: DrawState }) => {\n  const canvasEl = useRef<HTMLCanvasElement>(null);\n  const context = useRef<CanvasRenderingContext2D>();\n  const { width, height } = drawState;\n\n  useEffect(() => {\n    if (!canvasEl.current) return;\n    canvasEl.current.addEventListener(\n      \"touchstart\",\n      (e) => {\n        e.preventDefault();\n      },\n      { passive: false }\n    );\n\n    const ctx = canvasEl.current.getContext(\"2d\");\n    if (!ctx) return;\n    context.current = ctx;\n  }, []);\n\n  useEffect(() => {\n    console.log(\"display rerender\");\n    context.current?.clearRect(0, 0, width, height);\n\n    drawState.getValidStrokes().forEach((stroke) => {\n      if (!context.current) return;\n      drawPoints(context.current, stroke.points, \"black\", width, height);\n    });\n  });\n\n  return <canvas width={width} height={height} ref={canvasEl} />;\n});\n","import React, { MouseEvent, TouchEvent, useEffect, useRef } from \"react\";\nimport { iOSTouch } from \"../../lib/draw/draw\";\nimport { DualDrawer } from \"../../lib/draw/drawer\";\nimport {\n  DrawState,\n  DrawStateMethod,\n  SetDrawState,\n} from \"../../lib/draw/DrawState\";\n\nexport default function Drawinput({\n  drawState,\n  setDrawState,\n  method,\n  finger,\n  even,\n  lineWidth,\n}: {\n  drawState: DrawState;\n  setDrawState: SetDrawState;\n  method: DrawStateMethod;\n  finger: boolean;\n  even: boolean;\n  lineWidth: number;\n}) {\n  const { width, height } = drawState;\n  const canvasEl = useRef<HTMLCanvasElement>(null);\n  const clientWidth = useRef(width);\n  const clientHeight = useRef(height);\n\n  const isDrawing = useRef(false);\n  const drawer = useRef<DualDrawer>();\n\n  useEffect(updateClientSize, []);\n\n  useEffect(() => {\n    const cvs = getCanvasEl();\n\n    const touchPrevent = (e: globalThis.TouchEvent) => {\n      if (!finger && isFinger(e)) return;\n      e.preventDefault();\n    };\n\n    cvs.addEventListener(\"touchstart\", touchPrevent, {\n      passive: false,\n    });\n\n    return () => {\n      cvs.removeEventListener(\"touchstart\", touchPrevent);\n    };\n  }, [finger]);\n\n  useEffect(() => {\n    getContext().clearRect(0, 0, width, height);\n  }, [drawState, width, height]);\n\n  function getCanvasEl() {\n    if (!canvasEl.current) throw Error(\"can't get canvas element\");\n    return canvasEl.current;\n  }\n\n  function getContext() {\n    const context = getCanvasEl().getContext(\"2d\");\n    if (!context) throw Error(\"can't get canvas context\");\n    return context;\n  }\n\n  function getPosition(\n    e: iOSTouch | MouseEvent<HTMLCanvasElement>\n  ): [number, number] {\n    const clientRect = getCanvasEl().getBoundingClientRect();\n    const offsetX = e.clientX - clientRect.left;\n    const offsetY = e.clientY - clientRect.top;\n    const x = (offsetX / clientWidth.current) * width;\n    const y = (offsetY / clientHeight.current) * height;\n    return [x, y];\n  }\n\n  function updateClientSize() {\n    clientWidth.current = getCanvasEl().clientWidth;\n    clientHeight.current = getCanvasEl().clientHeight;\n  }\n\n  function isFinger(e: TouchEvent<HTMLCanvasElement> | globalThis.TouchEvent) {\n    const touch = e.touches[0] as iOSTouch;\n    return touch.touchType === \"direct\";\n  }\n\n  function handleTouchStart(e: TouchEvent<HTMLCanvasElement>) {\n    isDrawing.current = true;\n    updateClientSize();\n\n    drawer.current = new DualDrawer(getContext(), width, height);\n\n    const touch = e.touches[0] as iOSTouch;\n    if (!finger && isFinger(e)) return;\n\n    const pressure = (touch.force ?? 0) * lineWidth;\n    const [x, y] = getPosition(touch);\n    const lw = even ? lineWidth : drawer.current.computeLineWidth(pressure);\n\n    const newP = { x, y, lineWidth: lw };\n\n    drawer.current.drawBegin(newP);\n  }\n\n  function handleMouseStart(e: MouseEvent<HTMLCanvasElement>) {\n    isDrawing.current = true;\n    updateClientSize();\n\n    const [x, y] = getPosition(e);\n\n    drawer.current = new DualDrawer(getContext(), width, height);\n    const newP = { x, y, lineWidth };\n    drawer.current.drawBegin(newP);\n  }\n\n  function handleTouchMove(e: TouchEvent<HTMLCanvasElement>) {\n    if (!isDrawing.current || !drawer.current) return;\n\n    const touch = e.touches[0] as iOSTouch;\n    if (!finger && touch.touchType === \"direct\") {\n      return;\n    }\n    const pressure = (touch.force ?? 0) * lineWidth;\n    const [x, y] = getPosition(touch);\n\n    const lw = even ? lineWidth : drawer.current.computeLineWidth(pressure);\n\n    const newP = { x, y, lineWidth: lw };\n    drawer.current.drawCurve(newP);\n  }\n\n  function handleMouseMove(e: MouseEvent<HTMLCanvasElement>) {\n    if (!isDrawing.current || !drawer.current) return;\n\n    const [x, y] = getPosition(e);\n    const newP = { x, y, lineWidth };\n    drawer.current.drawCurve(newP);\n  }\n\n  function handleEnd() {\n    const d = drawer.current;\n    if (!isDrawing.current || !d) return;\n    isDrawing.current = false;\n\n    const points = d.points;\n    if (points.length < 2) return;\n\n    const updateInput = () => {\n      setDrawState((prev) => method(prev, d.getMirrorImageData(), points));\n    };\n\n    requestAnimationFrame(() => {\n      requestAnimationFrame(updateInput);\n    });\n  }\n\n  return (\n    <canvas\n      width={width}\n      height={height}\n      ref={canvasEl}\n      onTouchStart={handleTouchStart}\n      onMouseDown={handleMouseStart}\n      onTouchMove={handleTouchMove}\n      onMouseMove={handleMouseMove}\n      onTouchEnd={handleEnd}\n      onMouseUp={handleEnd}\n      onMouseLeave={handleEnd}\n    />\n  );\n}\n","import Drawdisplay from \"./DrawDisplay\";\nimport Drawinput from \"./DrawInput\";\nimport { DrawState, SetDrawState } from \"../../lib/draw/DrawState\";\nimport \"./draw.css\";\n\nexport interface DrawCtrl {\n  erasing: boolean;\n  finger: boolean;\n  even: boolean;\n  lineWidth: number;\n  color: string;\n}\n\nexport default function Draw({\n  drawState,\n  onChange,\n  erasing = false,\n  finger = false,\n  even = true,\n  lineWidth = 10,\n}: {\n  drawState: DrawState;\n  onChange: SetDrawState;\n  erasing?: boolean;\n  finger?: boolean;\n  even?: boolean;\n  lineWidth?: number;\n}) {\n  const method = erasing ? DrawState.eraseStrokes : DrawState.addStroke;\n\n  return (\n    <div className=\"draw-wrapper\">\n      <Drawdisplay drawState={drawState} />\n      <Drawinput\n        drawState={drawState}\n        method={method}\n        finger={finger}\n        even={even}\n        lineWidth={lineWidth}\n        setDrawState={onChange}\n      />\n    </div>\n  );\n}\n","import { List, OrderedMap, Record as Rec } from \"immutable\";\nimport { NotePage } from \"../note/note\";\nimport { DrawState, Operation, Stroke } from \"./DrawState\";\n\ninterface StateSetRecordType {\n  states: OrderedMap<string, DrawState>;\n  keys: List<string>;\n  editStack: List<string>;\n  undoStack: List<string>;\n}\n\nexport type SetOperation = Operation & { pageId: string };\n\ntype StateSetRecord = Rec<StateSetRecordType>;\n\nconst defaultRecord: Readonly<StateSetRecordType> = {\n  states: OrderedMap(),\n  keys: List(),\n  editStack: List(),\n  undoStack: List(),\n};\n\nconst defaultFactory = Rec(defaultRecord);\n\nexport class StateSet {\n  constructor(\n    private immutable: StateSetRecord,\n    public lastOp?: SetOperation\n  ) {}\n\n  static createEmpty() {\n    return new StateSet(defaultFactory());\n  }\n\n  static createKeyed(keys: string[]) {\n    return new StateSet(defaultFactory().set(\"keys\", List(keys)));\n  }\n\n  static createFromList(list: [string, DrawState][]) {\n    return new StateSet(\n      defaultFactory()\n        .set(\"keys\", List(list.map((item) => item[0])))\n        .set(\"states\", OrderedMap(list))\n    );\n  }\n\n  static createFromPages(pageRecord: Record<string, NotePage>, width: number) {\n    const entries = Object.entries(pageRecord);\n    return StateSet.createFromList(\n      entries.map(([key, { state, ratio }]) => [\n        key,\n        DrawState.loadFromFlat(state, width, width * ratio),\n      ])\n    );\n  }\n\n  getImmutable() {\n    return this.immutable;\n  }\n\n  getStates() {\n    return this.getImmutable().get(\"states\");\n  }\n\n  getKeys() {\n    return this.getImmutable().get(\"keys\");\n  }\n\n  getEditStack() {\n    return this.getImmutable().get(\"editStack\");\n  }\n\n  getUndoStack() {\n    return this.getImmutable().get(\"undoStack\");\n  }\n\n  setState(pageId: string, drawState: DrawState) {\n    let newImmu = this.getImmutable().update(\"states\", (s) =>\n      s.set(pageId, drawState)\n    );\n\n    if (this.getStates().has(pageId)) {\n      newImmu = newImmu.update(\"editStack\", (s) => s.push(pageId));\n    }\n\n    let lastOp: SetOperation | undefined;\n    if (drawState.lastOp) {\n      lastOp = { ...drawState.lastOp, pageId };\n    }\n    return new StateSet(newImmu, lastOp);\n  }\n\n  getOneState(pageId: string) {\n    return this.getImmutable().get(\"states\").get(pageId);\n  }\n\n  isUndoable() {\n    return this.getEditStack().size > 0;\n  }\n\n  isRedoable() {\n    return this.getUndoStack().size > 0;\n  }\n\n  undo() {\n    if (!this.isUndoable()) return this;\n    const lastUid = this.getImmutable().get(\"editStack\").last();\n    if (!lastUid) return this;\n\n    const prevDS = this.getImmutable().get(\"states\").get(lastUid);\n    if (!prevDS) return this;\n\n    const newDS = DrawState.undo(prevDS);\n    const lastOp = newDS.lastOp;\n    let lastSetOp: SetOperation | undefined;\n    if (lastOp) lastSetOp = { pageId: lastUid, ...lastOp };\n\n    return new StateSet(\n      this.getImmutable()\n        .update(\"editStack\", (s) => s.pop())\n        .update(\"undoStack\", (s) => s.push(lastUid))\n        .update(\"states\", (s) => s.set(lastUid, newDS)),\n      lastSetOp\n    );\n  }\n\n  redo() {\n    if (this.isRedoable()) {\n      const lastUid = this.getImmutable().get(\"undoStack\").last();\n      if (!lastUid) return this;\n\n      const prevDS = this.getImmutable().get(\"states\").get(lastUid);\n      if (!prevDS) return this;\n\n      const newDS = DrawState.redo(prevDS);\n      const lastOp = newDS.lastOp;\n      let lastSetOp: SetOperation | undefined;\n      if (lastOp) lastSetOp = { pageId: lastUid, ...lastOp };\n\n      return new StateSet(\n        this.getImmutable()\n          .update(\"undoStack\", (s) => s.pop())\n          .update(\"editStack\", (s) => s.push(lastUid))\n          .update(\"states\", (s) => s.set(lastUid, newDS)),\n        lastSetOp\n      );\n    } else {\n      return this;\n    }\n  }\n\n  pushStroke(pageId: string, stroke: Stroke) {\n    const prevDs = this.getImmutable().get(\"states\").get(pageId);\n    if (!prevDs) return this;\n    const ds = DrawState.pushStroke(prevDs, stroke);\n    return this.setState(pageId, ds);\n  }\n\n  pushOperation(SetOp: SetOperation) {\n    const { type, pageId } = SetOp;\n    const prevDs = this.getImmutable().get(\"states\").get(pageId);\n    if (!prevDs) return this;\n\n    let ds: DrawState;\n    switch (type) {\n      case 'add':\n        ds = DrawState.pushStroke(prevDs, SetOp.stroke);\n        break;\n      case 'erase':\n        ds = DrawState.pushErase(prevDs, SetOp.erase);\n        break;\n      case 'undo':\n        ds = DrawState.pushUndo(prevDs, SetOp.undoUid);\n        break;\n      case 'redo':\n        ds = DrawState.pushRedo(prevDs, SetOp.redoUid);\n        break;\n    }\n\n    return this.setState(pageId, ds);\n  }\n}\n","import { message } from \"antd\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { SetOperation, StateSet } from \"../../lib/draw/StateSet\";\nimport { getTeamNote } from \"../../lib/network/http\";\nimport { IoFactory } from \"../../lib/network/io\";\nimport Reader, { WIDTH } from \"./Reader\";\nimport { getUserId, UserInfo } from \"../../lib/user\";\nimport {\n  LoginOutlined,\n  LogoutOutlined,\n} from \"@ant-design/icons\";\n\nexport const TeamStateCtx = createContext({\n  code: -2,\n  userList: [] as UserInfo[],\n});\n\nexport default function Team() {\n  const noteId = useParams().noteId ?? \"\";\n  const [teamStateSet, setTeamStateSet] = useState<StateSet>();\n  const [code, setCode] = useState(-2);\n  const [userList, setUserList] = useState<UserInfo[]>([]);\n  const [ws] = useState(IoFactory(noteId));\n  const nav = useNavigate();\n\n  async function loadTeamPages() {\n    const res = await getTeamNote(noteId);\n    if (!res) {\n      message.error(\"Failed loading the team note\");\n      return nav(\"/\");\n    }\n    const { code, pages } = res;\n    setCode(code);\n    setTeamStateSet(StateSet.createFromPages(pages, WIDTH));\n  }\n\n  const roomInit = async () => {\n    await loadTeamPages();\n    ws.on(\"push\", ({ operation }) => {\n      setTeamStateSet((prev) => prev?.pushOperation(operation));\n    });\n\n    ws.on(\"joined\", ({ joined, members }) => {\n      const { userId, userName } = joined;\n      setUserList(members);\n      if (userId === getUserId()) return;\n      message.success({\n        icon: <LoginOutlined />,\n        content: userName + \" joined room\",\n      });\n    });\n\n    ws.on(\"leaved\", ({ leaved, members }) => {\n      const { userId, userName } = leaved;\n      setUserList(members);\n      if (userId === getUserId()) return;\n      message.warning({\n        icon: <LogoutOutlined />,\n        content: userName + \" leaved room\",\n      });\n    });\n\n    ws.connect();\n  };\n\n  const roomDestroy = () => {\n    ws.off(\"connect\");\n    ws.off(\"push\");\n    ws.off(\"joined\");\n    ws.off(\"leaved\");\n    ws.disconnect();\n  };\n\n  useEffect(() => {\n    roomInit();\n    return roomDestroy;\n  }, [noteId]);\n\n  const pushOperation = (op: SetOperation) => {\n    ws.emit(\"push\", { operation: op });\n  };\n\n  return (\n    <TeamStateCtx.Provider value={{ code, userList }}>\n      <Reader\n        teamOn={true}\n        teamStateSet={teamStateSet}\n        pushOperation={pushOperation}\n      />\n    </TeamStateCtx.Provider>\n  );\n}\n","import { io } from \"socket.io-client\";\nimport { getUserId, getUserName } from \"../user\";\nimport { BASE_URL } from \"./http\";\n\nexport const IoFactory = (noteId: string) => {\n  return () =>\n    io(BASE_URL, {\n      autoConnect: false,\n      query: {\n        userId: getUserId(),\n        userName: getUserName(),\n        noteId,\n      },\n    });\n};\n","import React, { useEffect, useState } from \"react\";\nimport \"./digitDisplay.sass\";\n\nfunction num2digits(num: number): number[] {\n  return String(num)\n    .padStart(4, \"0\")\n    .split(\"\")\n    .map((s) => Number(s));\n}\n\nexport default function DigitDisplay({ value }: { value: number }) {\n  const [randomNum, setRandomNum] = useState(9999);\n  const displayNum = value >= 0 ? value : randomNum;\n  const digits = num2digits(displayNum);\n\n  function resetRandom() {\n    setRandomNum(Math.floor(Math.random() * 10000));\n  }\n  useEffect(() => {\n    if (value !== -1) return setRandomNum(9999);\n    const timer = setTimeout(resetRandom, 100);\n    return () => clearTimeout(timer);\n  }, [value]);\n\n  return (\n    <div className={`digit-display ${value === -2 ? \"disabled\" : \"\"}`}>\n      {digits.map((d, idx) => (\n        <Digit key={idx} digit={d} />\n      ))}\n    </div>\n  );\n}\n\nfunction Digit({ digit }: { digit: number }) {\n  if (!(digit <= 9 && digit >= 0)) {\n    return <div className=\"digit\">*</div>;\n  }\n  return <div className=\"digit\">{digit}</div>;\n}\n","import { Avatar, Button, Divider, Popconfirm, Popover, Slider } from \"antd\";\nimport React, { Dispatch, SetStateAction, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { DrawCtrl } from \"../draw/Draw\";\nimport { DrawCtrlCtx, ReaderMethodCtx, ReaderStateCtx } from \"./Reader\";\nimport {\n  LeftOutlined,\n  UndoOutlined,\n  RedoOutlined,\n  HighlightOutlined,\n  SaveOutlined,\n  TeamOutlined,\n  createFromIconfontCN,\n} from \"@ant-design/icons\";\nimport \"./drawTools.sass\";\nimport { TeamStateCtx } from \"./Team\";\nimport DigitDisplay from \"../ui/DigitDisplay\";\nimport { getRandomColor } from \"../../lib/color\";\nimport { UserInfo } from \"../../lib/user\";\nconst IconFont = createFromIconfontCN({\n  scriptUrl: \"//at.alicdn.com/t/font_3181679_ofhwjwfs5hb.js\",\n});\n\nexport default function DrawTools({\n  setDrawCtrl,\n  handleUndo,\n  handleRedo,\n  instantSave,\n}: {\n  setDrawCtrl: Dispatch<SetStateAction<DrawCtrl>>;\n  handleUndo: () => void;\n  handleRedo: () => void;\n  instantSave: () => void;\n}) {\n  const drawCtrl = useContext(DrawCtrlCtx);\n  const { saved, stateSet, teamOn } = useContext(ReaderStateCtx);\n  const nav = useNavigate();\n\n  const updateDrawCtrl = (updated: Partial<DrawCtrl>) => {\n    setDrawCtrl((prev) => ({ ...prev, ...updated }));\n  };\n\n  const PenPanel = (\n    <div className=\"pen-panel\">\n      <Slider\n        min={1}\n        max={20}\n        value={drawCtrl.lineWidth}\n        onChange={(lineWidth) => updateDrawCtrl({ lineWidth })}\n      />\n    </div>\n  );\n\n  const PenButton = () =>\n    drawCtrl.erasing ? (\n      <Button\n        type=\"text\"\n        shape=\"circle\"\n        onClick={() => updateDrawCtrl({ erasing: false })}\n        icon={<HighlightOutlined />}\n      />\n    ) : (\n      <Popover\n        content={PenPanel}\n        trigger=\"click\"\n        placement=\"bottom\"\n        getPopupContainer={(e) => {\n          return e.parentElement?.parentElement || e;\n        }}\n      >\n        <Button type=\"default\" shape=\"circle\" icon={<HighlightOutlined />} />\n      </Popover>\n    );\n\n  return (\n    <div className=\"tool-bar\">\n      <div className=\"left-buttons\">\n        <Button type=\"text\" onClick={() => nav(\"/\")} icon={<LeftOutlined />}>\n          Back\n        </Button>\n        <Button\n          type=\"text\"\n          onClick={instantSave}\n          disabled={saved}\n          icon={<SaveOutlined />}\n        />\n      </div>\n      <div className=\"middle-buttons\">\n        <Button\n          type=\"text\"\n          icon={<UndoOutlined />}\n          onClick={handleUndo}\n          disabled={!stateSet?.isUndoable()}\n        />\n        <Button\n          className=\"redo-button\"\n          type=\"text\"\n          icon={<RedoOutlined />}\n          onClick={handleRedo}\n          disabled={!stateSet?.isRedoable()}\n        />\n        <PenButton />\n        <Button\n          type={drawCtrl.erasing ? \"default\" : \"text\"}\n          shape=\"circle\"\n          onClick={() => updateDrawCtrl({ erasing: true })}\n          icon={<IconFont type=\"icon-eraser\" />}\n        />\n      </div>\n      <div className=\"right-buttons\">\n        {teamOn && <RoomInfo />}\n        {teamOn || <JoinRoom />}\n      </div>\n    </div>\n  );\n}\n\nconst UserCard = ({ userInfo }: { userInfo: UserInfo }) => {\n  const { userName } = userInfo;\n  return (\n    <div className=\"user-card\">\n      <Avatar\n        className=\"avatar\"\n        size=\"small\"\n        style={{ backgroundColor: getRandomColor() }}\n      >\n        {userName.slice(0, 4)}\n      </Avatar>\n      <span>{userName}</span>\n    </div>\n  );\n};\n\nfunction RoomInfo() {\n  const { code, userList } = useContext(TeamStateCtx);\n\n  const content = (\n    <div className=\"team-popover\">\n      <DigitDisplay value={code} />\n      <Divider />\n      <div className=\"user-list\">\n        {userList.map((u) => (\n          <UserCard key={u.userId} userInfo={u} />\n        ))}\n      </div>\n    </div>\n  );\n\n  return (\n    <Popover\n      content={content}\n      trigger=\"click\"\n      placement=\"bottomRight\"\n      title=\"Team info\"\n      defaultVisible\n      getPopupContainer={(e) => {\n        return e.parentElement?.parentElement || e;\n      }}\n    >\n      <Button shape=\"round\" icon={<TeamOutlined />}>\n        Team\n      </Button>\n    </Popover>\n  );\n}\n\nconst JoinRoom = () => {\n  const { createRoom } = useContext(ReaderMethodCtx);\n  return (\n    <Popconfirm\n      placement=\"bottomRight\"\n      title=\"Enable team editing?\"\n      onConfirm={createRoom}\n      okText=\"Yes\"\n      cancelText=\"No\"\n    >\n      <Button shape=\"round\" icon={<TeamOutlined />}>\n        Team\n      </Button>\n    </Popconfirm>\n  );\n};\n","import { message } from \"antd\";\nimport React, {\n  createContext,\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport Draw, { DrawCtrl } from \"../draw/Draw\";\nimport { DrawState } from \"../../lib/draw/DrawState\";\nimport { Note, NotePage } from \"../../lib/note/note\";\nimport \"./reader.sass\";\nimport { SetOperation, StateSet } from \"../../lib/draw/StateSet\";\nimport { loadNote, editNoteData } from \"../../lib/note/archive\";\nimport { debounce } from \"lodash\";\nimport DrawDisplay from \"../draw/DrawDisplay\";\nimport { putNote, updatePages } from \"../../lib/network/http\";\nimport dafaultImg from \"../ui/default.png\";\nimport DrawTools from \"./DrawTools\";\nimport { useBeforeunload } from 'react-beforeunload';\n\nexport const WIDTH = 2000;\n\nconst defaultDrawCtrl: DrawCtrl = {\n  erasing: false,\n  finger: false,\n  even: true,\n  lineWidth: 5,\n  color: \"#000\",\n};\nexport const DrawCtrlCtx = createContext(defaultDrawCtrl);\nexport const ReaderStateCtx = createContext({\n  noteId: \"\",\n  stateSet: undefined as StateSet | undefined,\n  saved: true,\n  teamOn: false,\n});\nexport const ReaderMethodCtx = createContext({\n  setSaved: (() => {}) as Dispatch<SetStateAction<boolean>>,\n  createRoom: () => {},\n});\n\nexport default function Reader({\n  teamOn,\n  teamStateSet,\n  pushOperation,\n}: {\n  teamOn: boolean;\n  teamStateSet?: StateSet;\n  pushOperation?: (op: SetOperation) => void;\n}) {\n  const noteId = useParams().noteId ?? \"\";\n  const nav = useNavigate();\n\n  const [pageRecord, setPageRecord] = useState<Record<string, NotePage>>();\n  const [note, setNote] = useState<Note>();\n  const [stateSet, setStateSet] = useState<StateSet>();\n  const [drawCtrl, setDrawCtrl] = useState(defaultDrawCtrl);\n  const [saved, setSaved] = useState(true);\n\n  const loadNotePages = async () => {\n    const storedNote = await loadNote(noteId);\n    if (!storedNote) {\n      message.error(\"Note not found\");\n      return nav(\"/\");\n    }\n    const { pages } = storedNote;\n    setPageRecord(pages);\n    setNote(storedNote);\n    setStateSet(StateSet.createFromPages(pages, WIDTH));\n    if (teamOn) updatePages(noteId, pages);\n  };\n\n  const debouncedSave = useCallback(\n    debounce(async (pr: Record<string, NotePage>) => {\n      await editNoteData(noteId, { pages: pr });\n      setSaved(true);\n    }, 2000),\n    []\n  );\n  const instantSave = debouncedSave.flush;\n\n  const createRoom = async () => {\n    if (!note || !pageRecord) return;\n    const resCode = await putNote(noteId, note, pageRecord);\n    if (!resCode) {\n      message.error(\"Can't create room.\");\n      return;\n    }\n    await editNoteData(noteId, { team: true });\n    nav(\"/team/\" + noteId);\n  };\n\n  const noteInit = () => {\n    loadNotePages();\n  };\n\n  const noteDestroy = () => {\n    instantSave();\n  };\n\n  useEffect(() => {\n    noteInit();\n    return noteDestroy;\n  }, [noteId, teamOn]);\n\n  useBeforeunload(noteDestroy);\n\n  useEffect(() => {\n    if (!stateSet?.lastOp || !pushOperation) return;\n    pushOperation(stateSet.lastOp);\n  }, [stateSet]);\n\n  useEffect(() => {\n    if (!pageRecord) return;\n    debouncedSave(pageRecord);\n    setSaved(false);\n  }, [pageRecord]);\n\n  const setPageState = useCallback((uid: string, ds: DrawState) => {\n    setStateSet((prev) => prev?.setState(uid, ds));\n    setPageRecord((prev) => {\n      if (!prev) return;\n      return {\n        ...prev,\n        [uid]: { ...prev[uid], state: DrawState.flaten(ds) },\n      };\n    });\n  }, []);\n\n  const handleUndo = () => {\n    setStateSet((prev) => prev?.undo());\n  };\n\n  const handleRedo = () => {\n    setStateSet((prev) => prev?.redo());\n  };\n\n  return (\n    <DrawCtrlCtx.Provider value={drawCtrl}>\n      <ReaderStateCtx.Provider value={{ noteId, stateSet, saved, teamOn }}>\n        <ReaderMethodCtx.Provider value={{ setSaved, createRoom }}>\n          <div className=\"reader-container\">\n            <DrawTools\n              setDrawCtrl={setDrawCtrl}\n              instantSave={instantSave}\n              handleUndo={handleUndo}\n              handleRedo={handleRedo}\n            />\n            {stateSet?.getKeys().map((uid) => {\n              if (!pageRecord) return <></>;\n              const page = pageRecord[uid];\n              const drawState = stateSet.getOneState(uid);\n              const teamState = teamStateSet?.getOneState(uid);\n              if (!page || !drawState) return <></>;\n              return (\n                <PageWrapper\n                  drawState={drawState}\n                  teamState={teamState}\n                  updateState={setPageState}\n                  imageBlob={page.image}\n                  uid={uid}\n                  key={uid}\n                />\n              );\n            })}\n          </div>\n        </ReaderMethodCtx.Provider>\n      </ReaderStateCtx.Provider>\n    </DrawCtrlCtx.Provider>\n  );\n}\n\nconst PageWrapper = React.memo(\n  ({\n    imageBlob,\n    drawState,\n    teamState,\n    uid,\n    updateState,\n  }: {\n    imageBlob?: Blob;\n    drawState: DrawState;\n    teamState: DrawState | undefined;\n    uid: string;\n    updateState: (uid: string, ds: DrawState) => void;\n  }) => {\n    const [loaded, setLoaded] = useState(false);\n\n    const url = useMemo(\n      () => (imageBlob ? URL.createObjectURL(imageBlob) : null),\n      [imageBlob]\n    );\n\n    useEffect(() => {\n      const prevUrl = url || \"\";\n      return () => URL.revokeObjectURL(prevUrl);\n    }, [url]);\n\n    return (\n      <div className={`pdf-page ${loaded ? \"loaded\" : \"\"}`}>\n        <img\n          src={url || dafaultImg}\n          alt=\"pdf-page\"\n          onLoad={() => setLoaded(true)}\n        />\n        <div className=\"page-draw\">\n          {teamState && <DrawDisplay drawState={teamState} />}\n          <DrawWrapper\n            updateState={updateState}\n            drawState={drawState}\n            uid={uid}\n          />\n        </div>\n      </div>\n    );\n  }\n);\n\nconst DrawWrapper = ({\n  drawState,\n  uid,\n  updateState,\n}: {\n  drawState: DrawState;\n  uid: string;\n  updateState: (uid: string, ds: DrawState) => void;\n}) => {\n  const drawCtrl = useContext(DrawCtrlCtx);\n\n  function handleChange(fn: ((s: DrawState) => DrawState) | DrawState) {\n    let ds = fn instanceof DrawState ? fn : fn(drawState);\n    updateState(uid, ds);\n  }\n\n  return (\n    <Draw\n      drawState={drawState}\n      onChange={handleChange}\n      erasing={drawCtrl.erasing}\n      lineWidth={drawCtrl.lineWidth}\n    />\n  );\n};\n","import React from \"react\";\n\nexport default function Test() {\n  return (\n    <>\n      <div\n        style={{\n          backgroundColor: \"red\",\n          height: 'fit-content',\n          width: 100,\n          transition: \"all 3s\",\n        }}\n      >\n        <div>apple</div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\nimport MainMenu from \"./component/menu/MainMenu\";\nimport Reader from \"./component/reader/Reader\";\nimport Test from \"./component/Test\";\nimport Team from \"./component/reader/Team\";\n// import Stats from \"stats.js\";\n\nconst placeholderEl = (\n  <main style={{ padding: \"1rem\" }}>\n    <p>There's nothing here!</p>\n  </main>\n);\n\nReactDOM.render(\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<MainMenu />} />\n      <Route path=\"/reader\">\n        <Route path=\":noteId\" element={<Reader teamOn={false} />} />\n      </Route>\n      <Route path=\"/team\">\n        <Route path=\":noteId\" element={<Team />} />\n      </Route>\n      <Route path=\"/test\" element={<Test />} />\n      <Route path=\"*\" element={placeholderEl} />\n    </Routes>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// const stats = new Stats();\n// stats.showPanel(2);\n// document.body.appendChild(stats.dom);\n\n// const updateStats = () => {\n//   stats.update();\n//   requestAnimationFrame(updateStats);\n// };\n// updateStats();\n"],"sourceRoot":""}