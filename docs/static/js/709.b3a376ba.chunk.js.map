{"version":3,"file":"static/js/709.b3a376ba.chunk.js","mappings":"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","sources":["component/ui/SwipeDelete.tsx","component/menu/aside/SideMenu.tsx","component/menu/header/Left.tsx","component/menu/header/Right.tsx","component/menu/header/index.tsx","component/menu/notes/Header.tsx","component/menu/notes/NoteList.tsx","component/menu/Menu.tsx","lib/note/imgCache.ts"],"sourcesContent":["import React, {\n  FC,\n  useRef,\n  useState,\n  useEffect,\n  useContext,\n  createContext,\n} from \"react\";\nimport { Setter, useTransitionEnd } from \"../../lib/hooks\";\nimport { useSwipeable } from \"react-swipeable\";\nimport classNames from \"classnames\";\nimport { v4 as getUid } from \"uuid\";\nimport \"./swipe-delete.sass\";\n\nconst SwipeCtx = createContext<[string, Setter<string>]>([\"\", () => {}]);\n\nexport const SwipeDeleteProvider: FC = ({ children }) => {\n  const tuple = useState(\"\");\n  return <SwipeCtx.Provider value={tuple}>{children}</SwipeCtx.Provider>;\n};\n\nexport const SwipeDelete: FC<{\n  onDelete: () => void;\n  disable?: boolean;\n  className?: string;\n}> = ({ children, onDelete, disable = false, className }) => {\n  const [uid] = useState(getUid);\n\n  const [nowSwiped, setNowSwiped] = useContext(SwipeCtx);\n  const [swiped, setSwiped] = useState(false);\n  const deleting = swiped && (!nowSwiped || nowSwiped === uid);\n  const [deleted, setDeleted] = useState(false);\n\n  const [height, setHeight] = useState<number>();\n  const wrapper = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (nowSwiped !== uid) setSwiped(false);\n  }, [nowSwiped, uid]);\n\n  const showDelete = () => {\n    setSwiped(true);\n    setNowSwiped(uid);\n    setHeight(wrapper.current?.clientHeight);\n  };\n\n  const hideDelete = () => {\n    setSwiped(false);\n    setNowSwiped(\"\");\n    setHeight(undefined);\n  };\n\n  const swipeHandler = useSwipeable({\n    onSwipedLeft: showDelete,\n    onSwipedRight: hideDelete,\n    preventDefaultTouchmoveEvent: true,\n    trackTouch: !disable,\n  });\n\n  useEffect(() => {\n    if (!disable) return;\n    setHeight(undefined);\n    setNowSwiped(\"\");\n    setSwiped(false);\n  }, [disable, setNowSwiped]);\n\n  const [transDidEnd, handler] = useTransitionEnd({\n    propertyName: \"height\",\n    active: deleted,\n  });\n  const handleClick = async () => {\n    setDeleted(true);\n    await transDidEnd;\n    onDelete();\n    setNowSwiped(\"\");\n  };\n\n  return (\n    <div\n      className={classNames(\"swipe-wrapper\", className)}\n      data-deleted={deleted}\n      data-deleting={deleting}\n      {...swipeHandler}\n      style={{ height }}\n      onTransitionEnd={handler}\n    >\n      <div className=\"content\" ref={wrapper}>\n        {children}\n      </div>\n      <div className=\"button\" onClick={handleClick} style={{ height }}>\n        Delete\n      </div>\n    </div>\n  );\n};\n","import { FC, useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  TagOutlined,\r\n  DeleteOutlined,\r\n  SettingOutlined,\r\n  ContainerOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  deleteTag,\r\n  editTag,\r\n  NoteTag,\r\n  addNewTag,\r\n} from \"../../../lib/note/archive\";\r\nimport { SwipeDelete, SwipeDeleteProvider } from \"../../ui/SwipeDelete\";\r\nimport { Button, Input, Popconfirm, Select } from \"antd\";\r\nimport { colors, getColorPalette, getRandomColor } from \"../../../lib/color\";\r\nimport { ColorCirle } from \"../../widgets/ColorCircle\";\r\nimport { MenuCtx } from \"../Menu\";\r\nimport { Setter } from \"../../../lib/hooks\";\r\n\r\nconst TagInput: FC<{\r\n  tagName: string;\r\n  setTagName: Setter<string>;\r\n  tagColor: string;\r\n  setTagColor: Setter<string>;\r\n}> = ({ tagName, setTagName, tagColor, setTagColor }) => {\r\n  const colorSelector = (\r\n    <Select\r\n      value={tagColor}\r\n      onSelect={setTagColor}\r\n      listHeight={150}\r\n      virtual={false}\r\n    >\r\n      {colors.map((c) => (\r\n        <Select.Option value={c} key={c}>\r\n          <ColorCirle className=\"tag-circle\" color={c} />\r\n        </Select.Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n\r\n  return (\r\n    <Input\r\n      autoFocus\r\n      placeholder=\"Tag name...\"\r\n      className=\"tag-name-input\"\r\n      addonBefore={colorSelector}\r\n      value={tagName}\r\n      onChange={(e) => setTagName(e.target.value)}\r\n    />\r\n  );\r\n};\r\n\r\nconst TagItem: FC<{ noteTag: NoteTag }> = ({ noteTag }) => {\r\n  const { uid, color, name, notes } = noteTag;\r\n  const { editing, currTagID, setAllTags, setCurrTagID } = useContext(MenuCtx);\r\n  const [tagName, setTagName] = useState(name);\r\n  const [tagColor, setTagColor] = useState(color);\r\n  const [tagEditing, setTagEditing] = useState(false);\r\n  useEffect(() => setTagEditing(false), [editing]);\r\n\r\n  async function removeTag() {\r\n    const tags = await deleteTag(uid);\r\n    setCurrTagID(\"DEFAULT\");\r\n    setAllTags(tags);\r\n  }\r\n\r\n  const cancelEditing = () => {\r\n    setTagName(name);\r\n    setTagColor(color);\r\n    setTagEditing(false);\r\n  };\r\n\r\n  const finishEditing = async () => {\r\n    const newTag: NoteTag = {\r\n      ...noteTag,\r\n      name: tagName,\r\n      color: tagColor,\r\n    };\r\n\r\n    const newAllTags = await editTag(newTag);\r\n    setAllTags(newAllTags);\r\n    setTagEditing(false);\r\n  };\r\n\r\n  const displayPanel = (\r\n    <>\r\n      <ColorCirle className=\"tag-circle\" color={tagColor} />\r\n      <span className=\"tag-name\">{tagName}</span>\r\n      {editing || <span className=\"tag-num\">{notes.length}</span>}\r\n      {editing && (\r\n        <Button\r\n          size=\"small\"\r\n          type=\"text\"\r\n          onClick={() => setTagEditing(true)}\r\n          icon={<SettingOutlined />}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const editingPanel = (\r\n    <>\r\n      <TagInput\r\n        tagName={tagName}\r\n        setTagName={setTagName}\r\n        tagColor={tagColor}\r\n        setTagColor={setTagColor}\r\n      />\r\n      <div className=\"buttons\">\r\n        <Popconfirm\r\n          title=\"This tag will be deleted.\"\r\n          onConfirm={removeTag}\r\n          placement=\"left\"\r\n          cancelText=\"Cancel\"\r\n          icon={<DeleteOutlined />}\r\n          okText=\"Delete\"\r\n          okType=\"danger\"\r\n          okButtonProps={{ type: \"primary\" }}\r\n        >\r\n          <Button danger>Delete</Button>\r\n        </Popconfirm>\r\n        <Button onClick={cancelEditing}>Cancel</Button>\r\n        <Button type=\"primary\" disabled={!tagName} onClick={finishEditing}>\r\n          OK\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <SwipeDelete className=\"tag-wrapper\" onDelete={removeTag} disable={editing}>\r\n      <div\r\n        className=\"tag-item\"\r\n        data-curr={currTagID === uid}\r\n        data-editing={tagEditing}\r\n        onClick={() => setCurrTagID(uid)}\r\n        style={getColorPalette(color)}\r\n      >\r\n        {tagEditing ? editingPanel : displayPanel}\r\n      </div>\r\n    </SwipeDelete>\r\n  );\r\n};\r\n\r\nconst NewTagItem: FC<{ setAdding: Setter<boolean> }> = ({ setAdding }) => {\r\n  const [tagName, setTagName] = useState(\"\");\r\n  const [tagColor, setTagColor] = useState(getRandomColor());\r\n  const { setAllTags } = useContext(MenuCtx);\r\n\r\n  const addTag = () => {\r\n    const name = tagName.trim();\r\n    if (!name) return;\r\n    addNewTag(name, tagColor).then(setAllTags);\r\n    setAdding(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tag-wrapper\">\r\n      <div className=\"tag-item\" data-curr data-editing>\r\n        <TagInput\r\n          tagName={tagName}\r\n          setTagName={setTagName}\r\n          tagColor={tagColor}\r\n          setTagColor={setTagColor}\r\n        />\r\n        <div className=\"buttons\">\r\n          <Button onClick={() => setAdding(false)}>Cancel</Button>\r\n          <Button type=\"primary\" disabled={!tagName} onClick={addTag}>\r\n            OK\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const SideMenu = () => {\r\n  const { allTags, editing, currTagID, allNotes, setCurrTagID, setEditing } =\r\n    useContext(MenuCtx);\r\n  const [adding, setAdding] = useState(false);\r\n\r\n  const allNoteTag = (\r\n    <div className=\"tag-wrapper\">\r\n      <div\r\n        className=\"tag-item\"\r\n        data-curr={currTagID === \"DEFAULT\"}\r\n        onClick={() => setCurrTagID(\"DEFAULT\")}\r\n      >\r\n        <ContainerOutlined className=\"all-note-icon\" />\r\n        <span className=\"tag-name\">All Notes</span>\r\n        <span className=\"tag-num\">{Object.keys(allNotes).length}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const swichEditing = () => setEditing((prev) => !prev);\r\n\r\n  const editButton = (\r\n    <Button\r\n      className=\"edit-btn\"\r\n      shape=\"round\"\r\n      type={editing ? \"primary\" : \"default\"}\r\n      onClick={swichEditing}\r\n    >\r\n      {editing ? \"Done\" : \"Edit\"}\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <aside className=\"side-menu\">\r\n      <div className=\"tag-list\">\r\n        {allNoteTag}\r\n        <SwipeDeleteProvider>\r\n          {Object.values(allTags).map((tag) => (\r\n            <TagItem key={tag.uid} noteTag={tag} />\r\n          ))}\r\n        </SwipeDeleteProvider>\r\n        {adding && <NewTagItem setAdding={setAdding} />}\r\n      </div>\r\n      <footer>\r\n        <Button\r\n          shape=\"round\"\r\n          icon={<TagOutlined />}\r\n          onClick={() => setAdding(true)}\r\n          disabled={adding}\r\n        >\r\n          Add\r\n        </Button>\r\n        {editButton}\r\n      </footer>\r\n    </aside>\r\n  );\r\n};\r\n","import { Button, Drawer } from \"antd\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { MenuOutlined } from \"@ant-design/icons\";\r\nimport { SideMenu } from \"../aside\";\r\nimport { MenuCtx } from \"../Menu\";\r\n\r\nexport default function Left() {\r\n  const [asideOn, setAsideOn] = useState(false);\r\n  const { editing, currTagID, setEditing } = useContext(MenuCtx);\r\n\r\n  useEffect(() => {\r\n    if (!editing) setAsideOn(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currTagID]);\r\n\r\n  const editButton = (\r\n    <Button\r\n      className=\"edit-btn large\"\r\n      onClick={() => setEditing((prev) => !prev)}\r\n      type={editing ? \"primary\" : \"text\"}\r\n    >\r\n      {editing ? \"Done\" : \"Edit\"}\r\n    </Button>\r\n  );\r\n\r\n  const AsideButton = (\r\n    <>\r\n      <Button\r\n        className=\"aside-btn\"\r\n        type=\"text\"\r\n        icon={<MenuOutlined />}\r\n        onClick={() => setAsideOn((prev) => !prev)}\r\n      />\r\n      <Drawer\r\n        className=\"aside-drawer\"\r\n        width={300}\r\n        placement=\"left\"\r\n        closable={false}\r\n        visible={asideOn}\r\n        onClose={() => setAsideOn(false)}\r\n        contentWrapperStyle={{ boxShadow: \"none\" }}\r\n        bodyStyle={{ padding: 0, overflow: \"hidden\" }}\r\n        destroyOnClose\r\n      >\r\n        <SideMenu />\r\n      </Drawer>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div className=\"left-tools\">\r\n      {AsideButton}\r\n      {editButton}\r\n    </div>\r\n  );\r\n}\r\n","import { useContext, useState } from \"react\";\r\nimport {\r\n  Menu,\r\n  Input,\r\n  Button,\r\n  message,\r\n  Popover,\r\n  Progress,\r\n  Popconfirm,\r\n} from \"antd\";\r\nimport {\r\n  TeamOutlined,\r\n  UserOutlined,\r\n  SyncOutlined,\r\n  ClearOutlined,\r\n  InboxOutlined,\r\n  FilePdfOutlined,\r\n  SettingOutlined,\r\n  CaretDownOutlined,\r\n  ArrowLeftOutlined,\r\n} from \"@ant-design/icons\";\r\nimport * as serviceWorkerRegistration from \"../../../serviceWorkerRegistration\";\r\nimport { CSSTransitionProps } from \"react-transition-group/CSSTransition\";\r\nimport { ActiveKeyProvider, useActiveKey } from \"../../../lib/hooks\";\r\nimport { getUserName, saveUserName } from \"../../../lib/user\";\r\nimport { clearImageCache } from \"../../../lib/note/imgCache\";\r\nimport { createNewNote } from \"../../../lib/note/archive\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { getNoteID } from \"../../../lib/network/http\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { PasscodeInput } from \"antd-mobile\";\r\nimport localforage from \"localforage\";\r\nimport { MenuCtx } from \"../Menu\";\r\nimport { useEffect } from \"react\";\r\nimport { FC } from \"react\";\r\nimport \"./right.sass\";\r\n\r\nexport default function Right() {\r\n  return (\r\n    <div className=\"right-tools\">\r\n      <JoinTeamButton />\r\n      <OthersButton />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst SeconaryMenu: FC<\r\n  {\r\n    title: string;\r\n    keyName: string;\r\n  } & CSSTransitionProps\r\n> = ({ children, title, keyName, ...cssTransProps }) => {\r\n  const [active, setActive] = useActiveKey();\r\n  return (\r\n    <CSSTransition in={active === keyName} {...cssTransProps}>\r\n      <div className=\"secondary\">\r\n        <nav>\r\n          <Button\r\n            type=\"text\"\r\n            shape=\"circle\"\r\n            onClick={() => setActive(\"MENU\")}\r\n            icon={<ArrowLeftOutlined />}\r\n          />\r\n          <h3>{title}</h3>\r\n        </nav>\r\n        {children}\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nconst UploadPdfPage = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const { currTagID, setAllTags, setAllNotes } = useContext(MenuCtx);\r\n  const [percent, setPercent] = useState(0);\r\n\r\n  async function handleFile(file: File) {\r\n    if (file.type !== \"application/pdf\") return;\r\n    setLoading(true);\r\n    const { LoadPDF } = await import(\"../../../lib/note/pdfImage\");\r\n    const note = await LoadPDF(file, setPercent);\r\n    note.tagID = currTagID;\r\n    const { tags, allNotes } = await createNewNote(note);\r\n    setAllTags(tags);\r\n    setAllNotes(allNotes);\r\n    setLoading(false);\r\n    message.success(\"PDF Loaded\");\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <label>\r\n      <div className=\"pdf-upload\">\r\n        <div className=\"icon-wrapper\">\r\n          {loading ? (\r\n            <Progress width={48} type=\"circle\" percent={percent} />\r\n          ) : (\r\n            <InboxOutlined className=\"inbox-icon\" />\r\n          )}\r\n        </div>\r\n        <p className=\"hint\">Click to upload a pdf file.</p>\r\n      </div>\r\n      <input\r\n        type=\"file\"\r\n        multiple={false}\r\n        accept=\".pdf\"\r\n        onChange={({ target: { files } }) => {\r\n          const file = files && files[0];\r\n          if (!file) return;\r\n          handleFile(file);\r\n        }}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst ProfilePage = () => {\r\n  const [, setActive] = useActiveKey();\r\n  const userName = getUserName();\r\n  const [name, setName] = useState(userName);\r\n  const handleEnter = () => {\r\n    if (!name) return;\r\n    saveUserName(name);\r\n    setActive(\"MENU\");\r\n  };\r\n  return (\r\n    <div className=\"profile-page\">\r\n      <Input\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        prefix={<UserOutlined />}\r\n        allowClear\r\n      />\r\n      <Button\r\n        disabled={userName === name || !name}\r\n        onClick={handleEnter}\r\n        type=\"primary\"\r\n        block\r\n      >\r\n        OK\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SettingsPage = () => {\r\n  const { menuInit } = useContext(MenuCtx);\r\n\r\n  const clearAll = async () => {\r\n    await localforage.clear();\r\n    await clearImageCache();\r\n    menuInit();\r\n  };\r\n\r\n  return (\r\n    <div className=\"setting-menu\">\r\n      <Button\r\n        icon={<SyncOutlined />}\r\n        onClick={async () => {\r\n          await serviceWorkerRegistration.unregister();\r\n          window.location.reload();\r\n        }}\r\n        block\r\n      >\r\n        Update\r\n      </Button>\r\n      <Popconfirm\r\n        title=\"Everything will be deleted.\"\r\n        onConfirm={clearAll}\r\n        icon={<ClearOutlined />}\r\n        okText=\"Delete\"\r\n        okType=\"danger\"\r\n        okButtonProps={{ type: \"primary\" }}\r\n        cancelText=\"Cancel\"\r\n        placement=\"bottom\"\r\n      >\r\n        <Button icon={<ClearOutlined />} danger block>\r\n          Clear all\r\n        </Button>\r\n      </Popconfirm>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst menuItems = [\r\n  {\r\n    key: \"PDF\",\r\n    label: \"Import PDF\",\r\n    component: <UploadPdfPage />,\r\n    icon: <FilePdfOutlined />,\r\n  },\r\n  {\r\n    key: \"PROFILE\",\r\n    label: \"My profile\",\r\n    component: <ProfilePage />,\r\n    icon: <UserOutlined />,\r\n  },\r\n  {\r\n    key: \"SETTINGS\",\r\n    label: \"Settings\",\r\n    component: <SettingsPage />,\r\n    icon: <SettingOutlined />,\r\n  },\r\n];\r\n\r\nconst PrimaryMenu = () => {\r\n  const [, setActive] = useActiveKey();\r\n  return (\r\n    <div className=\"primary-menu\">\r\n      <Menu onClick={({ key }) => setActive(key)} items={menuItems} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OthersPage = () => {\r\n  const [height, setHeight] = useState(0);\r\n  const [active, setActive] = useActiveKey();\r\n\r\n  const calcHeight = (el: HTMLElement) => {\r\n    setHeight(el.clientHeight);\r\n  };\r\n\r\n  const cssTransProps = {\r\n    timeout: 300,\r\n    onEnter: calcHeight,\r\n    unmountOnExit: true,\r\n  };\r\n\r\n  useEffect(() => setActive(\"MENU\"), [setActive]);\r\n\r\n  return (\r\n    <section className=\"others-menu\" style={{ height }}>\r\n      <CSSTransition in={active === \"MENU\"} {...cssTransProps}>\r\n        <PrimaryMenu />\r\n      </CSSTransition>\r\n      {menuItems.map(({ key, label, component }) => (\r\n        <SeconaryMenu key={key} keyName={key} title={label} {...cssTransProps}>\r\n          {component}\r\n        </SeconaryMenu>\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nconst OthersButton = () => {\r\n  return (\r\n    <Popover\r\n      placement=\"bottomRight\"\r\n      trigger=\"click\"\r\n      content={\r\n        <ActiveKeyProvider initKey=\"\">\r\n          <OthersPage />\r\n        </ActiveKeyProvider>\r\n      }\r\n      zIndex={900}\r\n    >\r\n      <Button className=\"large\" shape=\"circle\" icon={<CaretDownOutlined />} />\r\n      <Button className=\"small\" type=\"text\" icon={<CaretDownOutlined />} />\r\n    </Popover>\r\n  );\r\n};\r\n\r\nconst JoinTeamButton = () => {\r\n  const [roomCode, setRoomCode] = useState(\"\");\r\n  const [wrong, setWrong] = useState(false);\r\n\r\n  const nav = useNavigate();\r\n  async function handleSubmit(code: string) {\r\n    const noteID = await getNoteID(code);\r\n    if (noteID) return nav(`/team/${noteID}`);\r\n    setRoomCode(\"\");\r\n    setWrong(true);\r\n  }\r\n\r\n  return (\r\n    <Popover\r\n      placement=\"bottomRight\"\r\n      trigger=\"click\"\r\n      title=\"Join a team note\"\r\n      destroyTooltipOnHide\r\n      onVisibleChange={() => setWrong(false)}\r\n      content={\r\n        <PasscodeInput\r\n          plain\r\n          length={4}\r\n          error={wrong}\r\n          value={roomCode}\r\n          onChange={(v) => {\r\n            setWrong(false);\r\n            setRoomCode(v);\r\n          }}\r\n          onFill={handleSubmit}\r\n        />\r\n      }\r\n    >\r\n      <Button className=\"team-btn large\" shape=\"round\" icon={<TeamOutlined />}>\r\n        Team\r\n      </Button>\r\n      <Button className=\"team-btn small\" type=\"text\" icon={<TeamOutlined />} />\r\n    </Popover>\r\n  );\r\n};\r\n","import { useContext } from \"react\";\nimport { MenuCtx } from \"../Menu\";\nimport Left from \"./Left\";\nimport Right from \"./Right\";\nimport \"./header.sass\";\n\nexport function MenuHeader() {\n  const { currTagID, allTags } = useContext(MenuCtx);\n  const logo = currTagID === \"DEFAULT\";\n  return (\n    <header>\n      <Left />\n      <h2 data-logo={logo}>\n        {logo ? \"Multibility\" : allTags[currTagID]?.name}\n      </h2>\n      <Right />\n    </header>\n  );\n}\n","import { Button, ButtonProps, Dropdown, Input, Menu, Popconfirm } from \"antd\";\r\nimport { FC, useContext } from \"react\";\r\nimport { MenuCtx } from \"../Menu\";\r\nimport {\r\n  SwapOutlined,\r\n  TagsOutlined,\r\n  FileOutlined,\r\n  DeleteOutlined,\r\n  SearchOutlined,\r\n  SelectOutlined,\r\n  FileTextOutlined,\r\n  ArrowLeftOutlined,\r\n  SortAscendingOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Setter } from \"../../../lib/hooks\";\r\nimport { ColorCirle } from \"../../widgets/ColorCircle\";\r\n\r\nexport const NoteHeader: FC<{\r\n  sortType: string;\r\n  setSortType: Setter<string>;\r\n  searchText: string;\r\n  setSearchText: Setter<string>;\r\n  onDelete: () => void;\r\n  onMove: (tagID: string) => void;\r\n  disabled: boolean;\r\n}> = ({\r\n  sortType,\r\n  setSortType,\r\n  searchText,\r\n  setSearchText,\r\n  onDelete,\r\n  onMove,\r\n  disabled = true,\r\n}) => {\r\n  const { editing, allTags, setEditing } = useContext(MenuCtx);\r\n\r\n  const sortMenu = (\r\n    <Menu\r\n      onClick={({ key }) => setSortType(key)}\r\n      selectedKeys={[sortType]}\r\n      items={[\r\n        {\r\n          type: \"group\",\r\n          label: \"Sort by\",\r\n          className: \"sort-drop\",\r\n          children: [\r\n            { icon: <FileOutlined />, key: \"CREATE\", label: \"Date created\" },\r\n            { icon: <FileTextOutlined />, key: \"LAST\", label: \"Date modified\" },\r\n            { icon: <SortAscendingOutlined />, key: \"NAME\", label: \"Name\" },\r\n          ],\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n\r\n  const btnProps: ButtonProps = { type: \"text\", shape: \"circle\" };\r\n  const sortButton = (\r\n    <Dropdown overlay={sortMenu} trigger={[\"click\"]} placement=\"bottom\">\r\n      <Button\r\n        className=\"sort-btn\"\r\n        icon={<SwapOutlined rotate={90} />}\r\n        {...btnProps}\r\n      />\r\n    </Dropdown>\r\n  );\r\n\r\n  const deleteButton = (\r\n    <Popconfirm\r\n      title=\"Notes will be deleted.\"\r\n      onConfirm={onDelete}\r\n      icon={<DeleteOutlined />}\r\n      placement=\"bottom\"\r\n      cancelText=\"Cancel\"\r\n      disabled={disabled}\r\n      okText=\"Delete\"\r\n      okType=\"danger\"\r\n      okButtonProps={{ type: \"primary\" }}\r\n    >\r\n      <Button\r\n        className=\"del-btn\"\r\n        shape=\"round\"\r\n        type=\"text\"\r\n        disabled={disabled}\r\n        danger={!disabled}\r\n        icon={<DeleteOutlined />}\r\n      >\r\n        Delete\r\n      </Button>\r\n    </Popconfirm>\r\n  );\r\n\r\n  const ColorLabel: FC<{\r\n    color: string;\r\n    name: string;\r\n  }> = ({ color, name }) => (\r\n    <div className=\"tag-select\">\r\n      <ColorCirle color={color} className=\"tag-circle\" />\r\n      <span className=\"name\">{name}</span>\r\n    </div>\r\n  );\r\n\r\n  const overlay = (\r\n    <Menu\r\n      onClick={({ key }) => onMove(key)}\r\n      items={[\r\n        {\r\n          key: \"DEFAULT\",\r\n          label: <ColorLabel color=\"#eee\" name=\"No tag\" />,\r\n        },\r\n        ...Object.values(allTags).map((t) => ({\r\n          key: t.uid,\r\n          label: <ColorLabel color={t.color} name={t.name} />,\r\n        })),\r\n      ]}\r\n    />\r\n  );\r\n\r\n  const tagButton = (\r\n    <Dropdown\r\n      overlayClassName=\"tag-drop\"\r\n      disabled={disabled}\r\n      overlay={overlay}\r\n      trigger={[\"click\"]}\r\n      placement=\"bottom\"\r\n    >\r\n      <Button\r\n        shape=\"round\"\r\n        type=\"text\"\r\n        className=\"tag-btn\"\r\n        icon={<TagsOutlined />}\r\n        style={{ transition: \"none\" }}\r\n      >\r\n        Tag\r\n      </Button>\r\n    </Dropdown>\r\n  );\r\n\r\n  return (\r\n    <div className=\"head-tools\" data-editing={editing}>\r\n      {editing ? (\r\n        <>\r\n          <Button\r\n            className=\"small\"\r\n            onClick={() => setEditing(false)}\r\n            icon={<ArrowLeftOutlined />}\r\n            {...btnProps}\r\n          />\r\n          {tagButton}\r\n          {deleteButton}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Input\r\n            value={searchText}\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n            className=\"search-input\"\r\n            prefix={<SearchOutlined />}\r\n            bordered={false}\r\n            allowClear\r\n          />\r\n          {sortButton}\r\n          <Button\r\n            className=\"small\"\r\n            onClick={() => setEditing(true)}\r\n            icon={<SelectOutlined />}\r\n            {...btnProps}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { FC, useMemo, useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  NoteTag,\r\n  deleteNote,\r\n  moveNoteTag,\r\n  editNoteData,\r\n  loadNote,\r\n} from \"../../../lib/note/archive\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { CloudTwoTone, CheckCircleFilled } from \"@ant-design/icons\";\r\nimport { SwipeDelete, SwipeDeleteProvider } from \"../../ui/SwipeDelete\";\r\nimport { NoteInfo, NotePage } from \"../../../lib/note/note\";\r\nimport { DrawState } from \"../../../lib/draw/DrawState\";\r\nimport { PageWrapper } from \"../../reader/Reader\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport calender from \"dayjs/plugin/calendar\";\r\nimport { NoteHeader } from \"./Header\";\r\nimport { Setter } from \"../../../lib/hooks\";\r\nimport { List, Map, Set } from \"immutable\";\r\nimport { MenuCtx } from \"../Menu\";\r\nimport { Input } from \"antd\";\r\nimport dayjs from \"dayjs\";\r\nimport { getCachedTeamState } from \"../../../lib/network/http\";\r\nimport { TeamState } from \"../../../lib/draw/TeamState\";\r\nimport { getColorPalette } from \"../../../lib/color\";\r\nimport classNames from \"classnames\";\r\n\r\ndayjs.extend(calender);\r\n\r\nexport const NoteList: FC<{ noteList: List<NoteInfo> }> = ({ noteList }) => {\r\n  const { editing, setAllTags, setAllNotes } = useContext(MenuCtx);\r\n  const [sortType, setSortType] = useState(\"LAST\");\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [selectedNotes, setSelectNotes] = useState(Set<string>());\r\n\r\n  const removeNotes = async (uids: string[]) => {\r\n    let tags: Record<string, NoteTag> | undefined;\r\n    let allNotes: Record<string, NoteInfo> | undefined;\r\n    for (let uid of uids) {\r\n      const res = await deleteNote(uid);\r\n      tags = res.tags;\r\n      allNotes = res.allNotes;\r\n    }\r\n    tags && setAllTags(tags);\r\n    allNotes && setAllNotes(allNotes);\r\n  };\r\n\r\n  const moveNotes = async (noteIDs: string[], tagID: string) => {\r\n    let tags: Record<string, NoteTag> | undefined;\r\n    let allNotes: Record<string, NoteInfo> | undefined;\r\n    for (let noteID of noteIDs) {\r\n      const res = await moveNoteTag(noteID, tagID);\r\n      tags = res.tags;\r\n      allNotes = res.allNotes;\r\n    }\r\n    tags && setAllTags(tags);\r\n    allNotes && setAllNotes(allNotes);\r\n  };\r\n\r\n  const sortedList = useMemo(() => {\r\n    const comparator = (t0: number, t1: number) => t1 - t0;\r\n    switch (sortType) {\r\n      case \"CREATE\":\r\n        return noteList.sortBy((n) => n.createTime, comparator);\r\n      case \"LAST\":\r\n        return noteList.sortBy((n) => n.lastTime, comparator);\r\n      case \"NAME\":\r\n        return noteList.sortBy((n) => n.name.toUpperCase());\r\n      default:\r\n        return noteList;\r\n    }\r\n  }, [noteList, sortType]);\r\n\r\n  const filterdList = useMemo(\r\n    () =>\r\n      sortedList.filter((n) =>\r\n        n.name.toUpperCase().includes(searchText.trim().toUpperCase())\r\n      ),\r\n    [searchText, sortedList]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setSearchText(\"\");\r\n    setSelectNotes(Set());\r\n  }, [noteList, editing]);\r\n\r\n  return (\r\n    <SwipeDeleteProvider>\r\n      <TransitionGroup className=\"note-list\">\r\n        <NoteHeader\r\n          sortType={sortType}\r\n          setSortType={setSortType}\r\n          searchText={searchText}\r\n          setSearchText={setSearchText}\r\n          onDelete={() => removeNotes(selectedNotes.toArray())}\r\n          onMove={(tagID) => moveNotes(selectedNotes.toArray(), tagID)}\r\n          disabled={selectedNotes.size === 0}\r\n        />\r\n        {filterdList.map((noteInfo, index) => {\r\n          const { uid } = noteInfo;\r\n          const selected = selectedNotes.has(uid);\r\n          const nextUid = filterdList.get(index + 1)?.uid;\r\n          const last = (nextUid && selectedNotes.has(nextUid)) !== selected;\r\n          return (\r\n            <CSSTransition key={uid} timeout={300}>\r\n              <SwipeDelete\r\n                className={classNames(\"note-wrapper\", { selected, last })}\r\n                onDelete={() => removeNotes([uid])}\r\n                disable={editing}\r\n              >\r\n                <NoteItem\r\n                  noteInfo={noteInfo}\r\n                  selected={selected}\r\n                  setSelectNotes={setSelectNotes}\r\n                />\r\n              </SwipeDelete>\r\n            </CSSTransition>\r\n          );\r\n        })}\r\n      </TransitionGroup>\r\n    </SwipeDeleteProvider>\r\n  );\r\n};\r\n\r\nconst NoteItem: FC<{\r\n  noteInfo: NoteInfo;\r\n  selected: boolean;\r\n  setSelectNotes: Setter<Set<string>>;\r\n}> = ({ noteInfo, selected, setSelectNotes }) => {\r\n  const { team, uid, name, lastTime, tagID } = noteInfo;\r\n  const date = useMemo(() => dayjs(lastTime).calendar(), [lastTime]);\r\n  const href = `${team ? \"team\" : \"reader\"}/${uid}`;\r\n\r\n  const { editing, setAllNotes } = useContext(MenuCtx);\r\n  const [noteName, setNoteName] = useState(name);\r\n  const nav = useNavigate();\r\n\r\n  const saveNoteName = () => {\r\n    const newName = noteName.trim();\r\n    if (!newName || newName === name) return setNoteName(name);\r\n    editNoteData(uid, { name: newName });\r\n    setAllNotes((prev) => ({ ...prev, [uid]: { ...noteInfo, name: newName } }));\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (!editing) return nav(href);\r\n    setSelectNotes((prev) => {\r\n      if (prev.has(uid)) return prev.delete(uid);\r\n      return prev.add(uid);\r\n    });\r\n  };\r\n\r\n  const [firstPage, setFirstPage] = useState<NotePage>();\r\n  const drawState = useMemo(() => {\r\n    if (!firstPage) return;\r\n    const { state, ratio } = firstPage;\r\n    return DrawState.loadFromFlat(state, ratio);\r\n  }, [firstPage]);\r\n  const [teamStateMap, setTeamStateMap] = useState<Map<string, DrawState>>();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const stored = await loadNote(uid);\r\n      if (!stored) return;\r\n      const { pageRec, pageOrder } = stored;\r\n      const firstID = pageOrder[0];\r\n      if (!firstID) return;\r\n      setFirstPage(pageRec[firstID]);\r\n      const teamNote = await getCachedTeamState(uid);\r\n      if (!teamNote) return;\r\n      setTeamStateMap(\r\n        TeamState.createFromTeamPages(teamNote).getOnePageStateMap(firstID)\r\n      );\r\n    })();\r\n  }, [uid]);\r\n\r\n  const { allTags, currTagID } = useContext(MenuCtx);\r\n  const tag = allTags[tagID];\r\n\r\n  const timg = (\r\n    <div\r\n      className=\"timg-wrapper\"\r\n      data-landscape={(firstPage?.ratio ?? 1.5) < 1}\r\n    >\r\n      {firstPage && drawState && (\r\n        <PageWrapper\r\n          drawState={drawState}\r\n          teamStateMap={teamStateMap}\r\n          thumbnail={firstPage.image}\r\n          preview\r\n        />\r\n      )}\r\n      {team && <CloudTwoTone className=\"cloud-icon\" />}\r\n      <CheckCircleFilled className=\"checked-icon\" />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"note-item\" data-selected={selected} onClick={handleClick}>\r\n      {timg}\r\n      <div className=\"content\">\r\n        {editing || <p className=\"name\">{name}</p>}\r\n        {editing && (\r\n          <Input\r\n            className=\"name-input\"\r\n            value={noteName}\r\n            onChange={(e) => setNoteName(e.target.value)}\r\n            onClick={(e) => e.stopPropagation()}\r\n            onBlur={saveNoteName}\r\n          />\r\n        )}\r\n        <p className=\"info\">\r\n          <span className=\"date\">{date}</span>\r\n          {tag && currTagID === \"DEFAULT\" && (\r\n            <span className=\"tag\" style={getColorPalette(tag.color)}>\r\n              {tag.name}\r\n            </span>\r\n          )}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport {\r\n  createNewNote,\r\n  getAllNotes,\r\n  getAllTags,\r\n  NoteTag,\r\n} from \"../../lib/note/archive\";\r\nimport { createEmptyNote, NoteInfo } from \"../../lib/note/note\";\r\nimport { FormOutlined } from \"@ant-design/icons\";\r\nimport { Setter } from \"../../lib/hooks\";\r\nimport { MenuHeader } from \"./header\";\r\nimport { SideMenu } from \"./aside\";\r\nimport { NoteList } from \"./notes\";\r\nimport { List } from \"immutable\";\r\nimport { Button } from \"antd\";\r\n\r\nexport const MenuCtx = React.createContext({\r\n  currTagID: \"DEFAULT\",\r\n  editing: false,\r\n  allNotes: {} as Record<string, NoteInfo>,\r\n  allTags: {} as Record<string, NoteTag>,\r\n  setAllNotes: (() => {}) as Setter<Record<string, NoteInfo>>,\r\n  setAllTags: (() => {}) as Setter<Record<string, NoteTag>>,\r\n  setCurrTagID: (() => {}) as Setter<string>,\r\n  setEditing: (() => {}) as Setter<boolean>,\r\n  menuInit: () => {},\r\n});\r\n\r\nexport default function MainMenu() {\r\n  const [allNotes, setAllNotes] = useState<Record<string, NoteInfo>>({});\r\n  const [allTags, setAllTags] = useState<Record<string, NoteTag>>({});\r\n  const [currTagID, setCurrTagID] = useState(\"DEFAULT\");\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const selectedTag = useMemo(\r\n    () =>\r\n      allTags[currTagID] ?? {\r\n        uid: \"\",\r\n        name: \"All Notes\",\r\n        color: \"#000000\",\r\n        notes: Object.keys(allNotes),\r\n      },\r\n    [allNotes, allTags, currTagID]\r\n  );\r\n\r\n  const noteList = useMemo(\r\n    () =>\r\n      List(\r\n        selectedTag.notes\r\n          .map((uid) => allNotes[uid])\r\n          .filter((n): n is NoteInfo => n !== undefined)\r\n      ),\r\n    [selectedTag, allNotes]\r\n  );\r\n\r\n  const menuInit = () => {\r\n    getAllNotes().then(setAllNotes);\r\n    getAllTags().then(setAllTags);\r\n    document.title = \"Multibility\";\r\n  };\r\n  useEffect(menuInit, []);\r\n\r\n  return (\r\n    <MenuCtx.Provider\r\n      value={{\r\n        currTagID,\r\n        editing,\r\n        allNotes,\r\n        allTags,\r\n        setAllNotes,\r\n        setAllTags,\r\n        setEditing,\r\n        setCurrTagID,\r\n        menuInit,\r\n      }}\r\n    >\r\n      <div className=\"main-menu container\">\r\n        <MenuHeader />\r\n        <main>\r\n          <SideMenu />\r\n          <NoteList noteList={noteList} />\r\n          <NewNoteButton />\r\n        </main>\r\n      </div>\r\n    </MenuCtx.Provider>\r\n  );\r\n}\r\n\r\nexport const NewNoteButton = () => {\r\n  const { currTagID, setAllTags, setAllNotes } = useContext(MenuCtx);\r\n\r\n  async function addNewNote() {\r\n    const note = createEmptyNote();\r\n    note.tagID = currTagID;\r\n    const { tags, allNotes } = await createNewNote(note);\r\n    setAllTags(tags);\r\n    setAllNotes(allNotes);\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      className=\"new-note\"\r\n      size=\"large\"\r\n      type=\"primary\"\r\n      shape=\"circle\"\r\n      onClick={addNewNote}\r\n      icon={<FormOutlined />}\r\n    />\r\n  );\r\n};\r\n","import localforage from \"localforage\";\n\nconst IMAGE_CACHE_MAX = 10;\nconst imageForage = localforage.createInstance({ name: \"imageForage\" });\nexport const getImageCache = async (noteID: string, index: number) => {\n  let cacheList = (await imageForage.getItem<string[]>(\"LIST\")) ?? [];\n  const key = `${noteID}_${index}`;\n  if (!cacheList.includes(key)) return;\n  cacheList = [key, ...cacheList.filter((id) => id !== key)];\n  await imageForage.setItem(\"LIST\", cacheList);\n  return await imageForage.getItem<string>(key);\n};\n\nexport const setImageCache = async (noteID: string, index: number, data: string) => {\n  let cacheList = (await imageForage.getItem<string[]>(\"LIST\")) ?? [];\n  const key = `${noteID}_${index}`;\n  cacheList = [key, ...cacheList.filter((id) => id !== key)];\n  if (cacheList.length > IMAGE_CACHE_MAX) {\n    cacheList = cacheList.slice(0, IMAGE_CACHE_MAX);\n  }\n  await imageForage.setItem(\"LIST\", cacheList);\n  await imageForage.setItem(key, data);\n  removeUnusedCache();\n};\n\nconst removeUnusedCache = async () => {\n  const cacheList = (await imageForage.getItem<string[]>(\"LIST\")) ?? [];\n  const set = new Set(cacheList);\n  const allKeys = await imageForage.keys();\n  for (let key of allKeys) {\n    if (key === \"LIST\") continue;\n    if (!set.has(key)) await imageForage.removeItem(key);\n  }\n};\n\nexport const clearImageCache = () => imageForage.clear();\n"],"names":["SwipeCtx","createContext","SwipeDeleteProvider","children","tuple","useState","Provider","value","SwipeDelete","onDelete","disable","className","getUid","uid","useContext","nowSwiped","setNowSwiped","swiped","setSwiped","deleting","deleted","setDeleted","height","setHeight","wrapper","useRef","useEffect","swipeHandler","useSwipeable","onSwipedLeft","current","clientHeight","onSwipedRight","undefined","preventDefaultTouchmoveEvent","trackTouch","useTransitionEnd","propertyName","active","transDidEnd","handler","handleClick","classNames","style","onTransitionEnd","ref","onClick","TagInput","tagName","setTagName","tagColor","setTagColor","colorSelector","onSelect","listHeight","virtual","colors","c","color","autoFocus","placeholder","addonBefore","onChange","e","target","TagItem","noteTag","name","notes","MenuCtx","editing","currTagID","setAllTags","setCurrTagID","tagEditing","setTagEditing","removeTag","deleteTag","tags","finishEditing","newTag","editTag","newAllTags","displayPanel","length","size","type","icon","SettingOutlined","editingPanel","title","onConfirm","placement","cancelText","DeleteOutlined","okText","okType","okButtonProps","danger","disabled","getColorPalette","NewTagItem","setAdding","getRandomColor","trim","addNewTag","then","SideMenu","allTags","allNotes","setEditing","adding","allNoteTag","ContainerOutlined","Object","keys","editButton","shape","prev","values","map","tag","TagOutlined","Left","asideOn","setAsideOn","AsideButton","MenuOutlined","width","closable","visible","onClose","contentWrapperStyle","boxShadow","bodyStyle","padding","overflow","destroyOnClose","Right","JoinTeamButton","OthersButton","SeconaryMenu","keyName","cssTransProps","useActiveKey","setActive","CSSTransition","in","ArrowLeftOutlined","UploadPdfPage","loading","setLoading","setAllNotes","percent","setPercent","file","LoadPDF","note","tagID","createNewNote","message","InboxOutlined","multiple","accept","files","handleFile","ProfilePage","userName","getUserName","setName","prefix","UserOutlined","allowClear","saveUserName","block","SettingsPage","menuInit","clearAll","localforage","clearImageCache","SyncOutlined","serviceWorkerRegistration","window","location","reload","ClearOutlined","menuItems","key","label","component","FilePdfOutlined","PrimaryMenu","items","OthersPage","timeout","onEnter","el","unmountOnExit","trigger","content","initKey","zIndex","CaretDownOutlined","roomCode","setRoomCode","wrong","setWrong","nav","useNavigate","code","getNoteID","noteID","destroyTooltipOnHide","onVisibleChange","plain","error","v","onFill","TeamOutlined","MenuHeader","logo","NoteHeader","sortType","setSortType","searchText","setSearchText","onMove","sortMenu","selectedKeys","FileOutlined","FileTextOutlined","SortAscendingOutlined","btnProps","sortButton","overlay","SwapOutlined","rotate","deleteButton","ColorLabel","t","tagButton","overlayClassName","TagsOutlined","transition","SearchOutlined","bordered","SelectOutlined","dayjs","calender","NoteList","noteList","Set","selectedNotes","setSelectNotes","removeNotes","uids","deleteNote","res","moveNotes","noteIDs","moveNoteTag","sortedList","useMemo","comparator","t0","t1","sortBy","n","createTime","lastTime","toUpperCase","filterdList","filter","includes","TransitionGroup","toArray","noteInfo","index","selected","has","nextUid","get","last","NoteItem","team","date","calendar","href","noteName","setNoteName","firstPage","setFirstPage","drawState","state","ratio","DrawState","teamStateMap","setTeamStateMap","loadNote","stored","pageRec","pageOrder","firstID","getCachedTeamState","teamNote","TeamState","getOnePageStateMap","timg","PageWrapper","thumbnail","image","preview","CloudTwoTone","CheckCircleFilled","delete","add","stopPropagation","onBlur","newName","editNoteData","React","MainMenu","selectedTag","List","getAllNotes","getAllTags","document","NewNoteButton","createEmptyNote","FormOutlined","imageForage","getImageCache","getItem","cacheList","id","setItem","setImageCache","data","slice","removeUnusedCache","set","allKeys","removeItem","clear"],"sourceRoot":""}